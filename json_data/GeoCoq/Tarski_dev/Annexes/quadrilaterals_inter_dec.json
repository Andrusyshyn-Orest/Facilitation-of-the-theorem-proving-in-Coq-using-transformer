{
    "filename": "Tarski_dev/Annexes/quadrilaterals_inter_dec.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch12_parallel_inter_dec.",
            "VernacRequire",
            "76a2097993ffdaef09c10348e6d09983617804d2"
        ],
        [
            "Require Export GeoCoq.Tarski_dev.Annexes.Tagged_predicates.",
            "VernacRequire",
            "dc19bdd4eea1bfad206ddad7e4378f5e89f3815f"
        ],
        [
            "Ltac image_6 A B P' H P:= let T:= fresh in assert (T:= l10_6_existence A B P' H); ex_and T P.",
            "VernacExtend",
            "04120a6dc2941b1f600862f4dc7bdac5e0e38e2b"
        ],
        [
            "Ltac image A B P P':= let T:= fresh in assert (T:= l10_2_existence A B P); ex_and T P'.",
            "VernacExtend",
            "f588333634d711e76c0ccd7977cb6ba613a68bfb"
        ],
        [
            "Ltac perp A B C X := match goal with | H:(~Col A B C) |- _ => let T:= fresh in assert (T:= l8_18_existence A B C H); ex_and T X end.",
            "VernacExtend",
            "97f49f7ec506e8a1b1d54b0d0d82658cc934e684"
        ],
        [
            "Ltac parallel A B C D P := match goal with | H:(A <> B) |- _ => let T := fresh in assert(T:= parallel_existence A B P H); ex_and T C end.",
            "VernacExtend",
            "9dd5180b5c404d938f59e9de808ddd99fd8273e1"
        ],
        [
            "Ltac par_strict := repeat match goal with | H: Par_strict ?A ?B ?C ?D |- _ => let T := fresh in not_exist_hyp (Par_strict B A D C); assert (T := par_strict_comm A B C D H) | H: Par_strict ?A ?B ?C ?D |- _ => let T := fresh in not_exist_hyp (Par_strict C D A B); assert (T := par_strict_symmetry A B C D H) | H: Par_strict ?A ?B ?C ?D |- _ => let T := fresh in not_exist_hyp (Par_strict B A C D); assert (T := par_strict_left_comm A B C D H) | H: Par_strict ?A ?B ?C ?D |- _ => let T := fresh in not_exist_hyp (Par_strict A B D C); assert (T := par_strict_right_comm A B C D H) end.",
            "VernacExtend",
            "34f5640cdc7a5344ede929dc702f9ce86833fe08"
        ],
        [
            "Ltac clean_trivial_hyps := repeat match goal with | H:(Cong ?X1 ?X1 ?X2 ?X2) |- _ => clear H | H:(Cong ?X1 ?X2 ?X2 ?X1) |- _ => clear H | H:(Cong ?X1 ?X2 ?X1 ?X2) |- _ => clear H | H:(Bet ?X1 ?X1 ?X2) |- _ => clear H | H:(Bet ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X1 ?X2) |- _ => clear H | H:(Col ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X2 ?X1) |- _ => clear H | H:(Par ?X1 ?X2 ?X1 ?X2) |- _ => clear H | H:(Par ?X1 ?X2 ?X2 ?X1) |- _ => clear H | H:(Per ?X1 ?X2 ?X2) |- _ => clear H | H:(Per ?X1 ?X1 ?X2) |- _ => clear H | H:(Midpoint ?X1 ?X1 ?X1) |- _ => clear H end.",
            "VernacExtend",
            "39a5e73cc6f9166251f42b6bf14f1a6f76671167"
        ],
        [
            "Ltac show_distinct2 := unfold not;intro;treat_equalities; try (solve [intuition]).",
            "VernacExtend",
            "5949151796a4e2e2e47db1ab429ee93cd30463fa"
        ],
        [
            "Ltac symmetric A B A' := let T := fresh in assert(T:= symmetric_point_construction A B); ex_and T A'.",
            "VernacExtend",
            "3949e5c7c165c77c377f1cb67829bee2b0b265da"
        ],
        [
            "Tactic Notation \"Name\" ident(X) \"the\" \"symmetric\" \"of\" ident(A) \"wrt\" ident(C) := symmetric A C X.",
            "VernacExtend",
            "9ed4ec9783dc2c0285038bf1b6f870a0efeb2090"
        ],
        [
            "Ltac sfinish := repeat match goal with | |- Bet ?A ?B ?C => Between; eBetween | |- Col ?A ?B ?C => Col;ColR | |- ~ Col ?A ?B ?C => Col | |- ~ Col ?A ?B ?C => intro;search_contradiction | |- Par ?A ?B ?C ?D => Par | |- Par_strict ?A ?B ?C ?D => Par | |- Perp ?A ?B ?C ?D => Perp | |- Perp_at ?A ?B ?C ?D ?E => Perp | |- Per ?A ?B ?C => Perp | |- Cong ?A ?B ?C ?D => Cong;eCong | |- Midpoint ?A ?B ?C => Midpoint | |- ?A<>?B => apply swap_diff;assumption | |- ?A<>?B => intro;treat_equalities; solve [search_contradiction] | |- ?G1 /\\ ?G2 => split | |- _ => try assumption end.",
            "VernacExtend",
            "3d49f5adba0e7422b6dcf5b912b1297b62568b36"
        ],
        [
            "Ltac clean_reap_hyps := clean_duplicated_hyps; repeat match goal with | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?B ?C ?D ?A |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?C ?D ?A ?B |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?D ?A ?B ?C |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?D ?C ?B ?A |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?C ?B ?A ?D |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?B ?A ?D ?C |- _ => clear H2 | H:(Parallelogram ?A ?B ?C ?D), H2 : Parallelogram ?A ?D ?C ?B |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?A ?B ?D ?C |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?C ?D ?A ?B |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?C ?D ?B ?A |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?D ?C ?B ?A |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?D ?C ?A ?B |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?B ?A ?C ?D |- _ => clear H2 | H:(Par ?A ?B ?C ?D), H2 : Par ?B ?A ?D ?C |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?A ?B ?D ?C |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?C ?D ?A ?B |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?C ?D ?B ?A |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?D ?C ?B ?A |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?D ?C ?A ?B |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?B ?A ?C ?D |- _ => clear H2 | H:(Par_strict ?A ?B ?C ?D), H2 : Par_strict ?B ?A ?D ?C |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?A ?B ?D ?C |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?C ?D ?A ?B |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?C ?D ?B ?A |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?D ?C ?B ?A |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?D ?C ?A ?B |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?B ?A ?C ?D |- _ => clear H2 | H:(Perp ?A ?B ?C ?D), H2 : Perp ?B ?A ?D ?C |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?A ?B ?D ?C |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?C ?D ?A ?B |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?C ?D ?B ?A |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?D ?C ?B ?A |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?D ?C ?A ?B |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?B ?A ?C ?D |- _ => clear H2 | H:(Perp_at ?X ?A ?B ?C ?D), H2 : Perp_at ?X ?B ?A ?D ?C |- _ => clear H2 | H:(Per ?A ?B ?C), H2 : Per ?C ?B ?A |- _ => clear H2 | H:(Midpoint ?A ?B ?C), H2 : Midpoint ?A ?C ?B |- _ => clear H2 | H:(~Col ?A ?B ?C), H2 : (~Col ?B ?A ?C) |- _ => clear H2 | H:(~Col ?A ?B ?C), H2 : (~Col ?B ?C ?A) |- _ => clear H2 | H:(~Col ?A ?B ?C), H2 : (~Col ?C ?B ?A) |- _ => clear H2 | H:(~Col ?A ?B ?C), H2 : (~Col ?C ?A ?B) |- _ => clear H2 | H:(~Col ?A ?B ?C), H2 : (~Col ?A ?C ?B) |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?A ?C ?B |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?A ?C |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?C ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?B ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?A ?B |- _ => clear H2 | H:(Bet ?A ?B ?C), H2 : Bet ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?A ?B ?D ?C |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?C ?D |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?D ?C |- _ => clear H2 | H:(?A<>?B), H2 : (?B<>?A) |- _ => clear H2 end.",
            "VernacExtend",
            "1253bff4af6be1681dac722b6701668291965bf1"
        ],
        [
            "Ltac tag_hyps := repeat match goal with | H : ?A <> ?B |- _ => apply Diff_Diff_tagged in H | H : Cong ?A ?B ?C ?D |- _ => apply Cong_Cong_tagged in H | H : Bet ?A ?B ?C |- _ => apply Bet_Bet_tagged in H | H : Col ?A ?B ?C |- _ => apply Col_Col_tagged in H | H : ~ Col ?A ?B ?C |- _ => apply NCol_NCol_tagged in H | H : Midpoint ?A ?B ?C |- _ => apply Mid_Mid_tagged in H | H : Per ?A ?B ?C |- _ => apply Per_Per_tagged in H | H : Perp_at ?X ?A ?B ?C ?D |- _ => apply Perp_in_Perp_in_tagged in H | H : Perp ?A ?B ?C ?D |- _ => apply Perp_Perp_tagged in H | H : Par_strict ?A ?B ?C ?D |- _ => apply Par_strict_Par_strict_tagged in H | H : Par ?A ?B ?C ?D |- _ => apply Par_Par_tagged in H | H : Parallelogram ?A ?B ?C ?D |- _ => apply Plg_Plg_tagged in H end.",
            "VernacExtend",
            "4f4e3db27619575b778fea5084600de47aab2369"
        ],
        [
            "Ltac permutation_intro_in_goal := match goal with | |- Par ?A ?B ?C ?D => apply Par_cases | |- Par_strict ?A ?B ?C ?D => apply Par_strict_cases | |- Perp ?A ?B ?C ?D => apply Perp_cases | |- Perp_at ?X ?A ?B ?C ?D => apply Perp_in_cases | |- Per ?A ?B ?C => apply Per_cases | |- Midpoint ?A ?B ?C => apply Mid_cases | |- ~ Col ?A ?B ?C => apply NCol_cases | |- Col ?A ?B ?C => apply Col_cases | |- Bet ?A ?B ?C => apply Bet_cases | |- Cong ?A ?B ?C ?D => apply Cong_cases end.",
            "VernacExtend",
            "662ca685e83e7b9d341ac3ec1be3de2ca2715272"
        ],
        [
            "Ltac perm_apply t := permutation_intro_in_goal; try_or ltac:(apply t;solve [finish]).",
            "VernacExtend",
            "76511e426ac3c911da7e483250a0dd23aac645a7"
        ],
        [
            "Ltac assert_ncols := repeat match goal with | H:OS ?A ?B ?X ?Y |- _ => not_exist_hyp_perm_ncol A B X;assert (~ Col A B X) by (apply(one_side_not_col123 A B X Y);finish) | H:OS ?A ?B ?X ?Y |- _ => not_exist_hyp_perm_ncol A B Y;assert (~ Col A B Y) by (apply(one_side_not_col124 A B X Y);finish) | H:TS ?A ?B ?X ?Y |- _ => not_exist_hyp_perm_ncol A B X;assert (~ Col A B X) by (apply(two_sides_not_col A B X Y);finish) | H:TS ?A ?B ?X ?Y |- _ => not_exist_hyp_perm_ncol A B Y;assert (~ Col A B Y) by (apply(two_sides_not_col A B Y X);finish) | H:~ Coplanar ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp_perm4 A B C D; assert (h := ncop__ncols A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:Par_strict ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp_perm4 A B C D; assert (h := par_strict_not_cols A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:Parallelogram_strict ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp_perm4 A B C D; assert (h := plgs_not_col A B C D H);decompose [and] h;clear h;clean_reap_hyps end.",
            "VernacExtend",
            "8a3929059db778da99a636264d81cfd605fa11b4"
        ],
        [
            "Section Quadrilateral_inter_dec_1.",
            "VernacBeginSection",
            "2c1a895bf35c081e89cb9dd3e2b4a511ca3d4985"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma par_cong_mid_ts : forall A B A' B', Par_strict A B A' B' -> Cong A B A' B' -> TS A A' B B' -> exists M, Midpoint M A A' /\\ Midpoint M B B'.",
            "VernacStartTheoremProof",
            "776ad535c881ddab8d7db2867ef9fd82c6c37429"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "unfold TS in HH.",
            "VernacExtend",
            "5d730ec8ab2a61acc4d8f44228faa3c07fe10794"
        ],
        [
            "assert(~ Col B A A').",
            "VernacExtend",
            "00322544fe466064a468eeadd79aedc725887f36"
        ],
        [
            "spliter; assumption.",
            "VernacExtend",
            "a69b6d45dd508dba448a823118d5bbf5372abd95"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H5 M.",
            "VernacExtend",
            "39b0fcdf0d270f8eb1f6ee33bc9799942e932333"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "assert(HH:= H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Par_strict in HH.",
            "VernacExtend",
            "a1cfde0998218aeac998e7eaa5d4f8c20ba6f08c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=(midpoint_existence A A')).",
            "VernacExtend",
            "50be0afed5ef733d16c1a5f7b36806bb9aa0de1f"
        ],
        [
            "ex_and HH X.",
            "VernacExtend",
            "cb169eb4a37395ebdc7c9282060d84188eee2ac1"
        ],
        [
            "prolong B X B'' B X.",
            "VernacExtend",
            "9ac9f1cf83398f30e18ad55a67e43c9e7bf7c4d0"
        ],
        [
            "assert(Midpoint X B B'').",
            "VernacExtend",
            "9de46ec7bc46a9077b4ea95458b092dfe97d8932"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Par_strict B A B'' A').",
            "VernacExtend",
            "9ec62ffbb5d71165b54fe931b7f20ea40c03a609"
        ],
        [
            "apply (midpoint_par_strict B A B'' A' X); auto.",
            "VernacExtend",
            "9cbeda93ad1dc794e98a16bb882129057f4c072c"
        ],
        [
            "assert(Col B'' B' A' /\\ Col A' B' A').",
            "VernacExtend",
            "3a35f4a2da3788cfc734e44e48dcec57bfc79ef2"
        ],
        [
            "apply(parallel_uniqueness B A B' A' B'' A' A').",
            "VernacExtend",
            "10fb5e2f92ea0bc4d17f446a03c97448c571ae49"
        ],
        [
            "apply par_comm.",
            "VernacExtend",
            "432fdb2fe99d3526e7401110094550bc785df5e3"
        ],
        [
            "unfold Par.",
            "VernacExtend",
            "642acbae322dbde53b6e91408a0d5df9c103d66b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Par.",
            "VernacExtend",
            "642acbae322dbde53b6e91408a0d5df9c103d66b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A B A' B'').",
            "VernacExtend",
            "806bfe19b0010cf6c46b9917bb1c9425cca667ad"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A' B' A' B'').",
            "VernacExtend",
            "3be5c05e679f9dc4d23fd8626ad537902b78746e"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B' = B'' \\/ Midpoint A' B' B'').",
            "VernacExtend",
            "ba329e3d6f2a75c723d174103d3a052fbef91d5e"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H20.",
            "VernacExtend",
            "1bcc72dad805a5cfb761686cb0362fce396ccd9c"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "assert(X = M).",
            "VernacExtend",
            "15c144bb148b49e3115e8e3ce62e0169122530fa"
        ],
        [
            "eapply (l6_21 A A' B B'); Col.",
            "VernacExtend",
            "bc931ee5586e0b8ddac69ba609c75ec73d17daba"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert(TS A A' B B'').",
            "VernacExtend",
            "bfefdde8384d33a3bc2ca43522f7dd00df462ee8"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ B'').",
            "VernacExtend",
            "6d962f90b94313859dfd157d5df280c79dfb59df"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "apply l7_2 in H20.",
            "VernacExtend",
            "5d2a26d57c3b4021b4bcd7d5081689d6960b165d"
        ],
        [
            "apply is_midpoint_id in H20.",
            "VernacExtend",
            "4e41da898bb491f2186f2a08a5f311cb54addfc5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Midpoint in H11.",
            "VernacExtend",
            "dcadd00c1b162a166f208d364b6702e4eb892ec1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H11.",
            "VernacExtend",
            "0332f1cae83683f4a3bb2f8292acb17678550510"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A A' B' B'').",
            "VernacExtend",
            "ce44519aabad25eca8291299d8ef163665d623f0"
        ],
        [
            "eapply l9_8_1.",
            "VernacExtend",
            "953c2bdb009f55a5d83b63a40340993dbf0d385a"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A A' B' B'').",
            "VernacExtend",
            "6a4f61623b2e3bcf78616b2e4bfcea558c152af6"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ B'').",
            "VernacExtend",
            "6d962f90b94313859dfd157d5df280c79dfb59df"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "apply l7_2 in H20.",
            "VernacExtend",
            "5d2a26d57c3b4021b4bcd7d5081689d6960b165d"
        ],
        [
            "apply is_midpoint_id in H20.",
            "VernacExtend",
            "4e41da898bb491f2186f2a08a5f311cb54addfc5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H20.",
            "VernacExtend",
            "bc5082b74f5d0b1645784e6969e9a0f40488c19c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H23.",
            "VernacExtend",
            "373b93641cca7b3b5092bf177f5021c4a51bf35d"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong_mid_os : forall A B A' B', Par_strict A B A' B' -> Cong A B A' B' -> OS A A' B B' -> exists M, Midpoint M A B' /\\ Midpoint M B A'.",
            "VernacStartTheoremProof",
            "780add1e663fdabd723cf11b8df5817a9f0b5fb0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Par_strict in HH.",
            "VernacExtend",
            "a1cfde0998218aeac998e7eaa5d4f8c20ba6f08c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=(midpoint_existence A' B)).",
            "VernacExtend",
            "840e841f430c45a24ba2805ef620b9e3f96d07cb"
        ],
        [
            "ex_and HH X.",
            "VernacExtend",
            "cb169eb4a37395ebdc7c9282060d84188eee2ac1"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "prolong A X B'' A X.",
            "VernacExtend",
            "3487fac1b9a62099f265916fbbd38faa1972c462"
        ],
        [
            "assert(Midpoint X A B'').",
            "VernacExtend",
            "5f6cfdfbbfe8c8a16a5191ff58760f0127371c2a"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(~Col A B A').",
            "VernacExtend",
            "26bdeed800d6145ff7549d6c39934533bbefebf3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(Par_strict A B B'' A').",
            "VernacExtend",
            "42aa9d118e5dcb275d2d3682dafc71c17927b67c"
        ],
        [
            "apply (midpoint_par_strict A B B'' A' X).",
            "VernacExtend",
            "ebae8b5637b8ef64ca9025bbd8bd01c336304904"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col B'' B' A' /\\ Col A' B' A').",
            "VernacExtend",
            "3a35f4a2da3788cfc734e44e48dcec57bfc79ef2"
        ],
        [
            "apply (parallel_uniqueness B A B' A' B'' A' A').",
            "VernacExtend",
            "10fb5e2f92ea0bc4d17f446a03c97448c571ae49"
        ],
        [
            "apply par_comm.",
            "VernacExtend",
            "432fdb2fe99d3526e7401110094550bc785df5e3"
        ],
        [
            "unfold Par.",
            "VernacExtend",
            "642acbae322dbde53b6e91408a0d5df9c103d66b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "unfold Par.",
            "VernacExtend",
            "642acbae322dbde53b6e91408a0d5df9c103d66b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A B B'' A').",
            "VernacExtend",
            "49c176e1d6c04ec01f0dcd39e13b4051d5761d39"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A' B' A' B'').",
            "VernacExtend",
            "3be5c05e679f9dc4d23fd8626ad537902b78746e"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(B' = B'' \\/ Midpoint A' B' B'').",
            "VernacExtend",
            "ba329e3d6f2a75c723d174103d3a052fbef91d5e"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H16.",
            "VernacExtend",
            "7d2027103dc61604e91bdc47951aab7c003ce827"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A A' X B'').",
            "VernacExtend",
            "6c9d1c236131209d12bebdb4df921f4a19d0e046"
        ],
        [
            "eapply (out_one_side_1 _ _ X B'').",
            "VernacExtend",
            "febe2383418c6d752d2252547a60cabf5ef98afa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ X).",
            "VernacExtend",
            "dfdc7644edaeb98bee8b5997cf13831b5b1b0c06"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply is_midpoint_id in H6.",
            "VernacExtend",
            "cc5db0795db751784656216288126b0117592687"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H6.",
            "VernacExtend",
            "19ae208b0699306165f85453009fe751d462e13d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H6.",
            "VernacExtend",
            "ec38eb8f555edb53d8b92fc8e71f5b45f38f4fc9"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply cong_identity in H8.",
            "VernacExtend",
            "14746d36fd8f9e68a633fac546ebc5ec1a3fa001"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "unfold Par_strict in H11.",
            "VernacExtend",
            "2de832219b533ff1716d2b921b27b254ef76a147"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "unfold Par_strict in H11.",
            "VernacExtend",
            "2de832219b533ff1716d2b921b27b254ef76a147"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "unfold Midpoint in H8.",
            "VernacExtend",
            "569725b56dab13fb5d90ef771528ef18f1e7892b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A A' B' B'').",
            "VernacExtend",
            "6a4f61623b2e3bcf78616b2e4bfcea558c152af6"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "unfold OS in H17.",
            "VernacExtend",
            "b15d48cd70c25bd35b90c9b2b6e9a5c268fbf067"
        ],
        [
            "ex_and H17 T.",
            "VernacExtend",
            "b1031e3b04e80850090ce61d06ab9537e85ed0bb"
        ],
        [
            "unfold TS in H18.",
            "VernacExtend",
            "c5fa4d4ec7afbd160a7eb79801384c46e9e5f23b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H16.",
            "VernacExtend",
            "cc1d6c27e4b29ddfae1ea867daf78492ce1ec9fb"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A A' X B').",
            "VernacExtend",
            "72f9b983d4d8354db9e8ca1a4851fa6f3c0bd3c7"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A A' X B).",
            "VernacExtend",
            "e613b84b1007133c10af41f4f17e2507169d3c7c"
        ],
        [
            "eapply (out_one_side_1).",
            "VernacExtend",
            "e5a0c0e864544ed6116dc69aa040258a3e13c04c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ X).",
            "VernacExtend",
            "dfdc7644edaeb98bee8b5997cf13831b5b1b0c06"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply is_midpoint_id in H6.",
            "VernacExtend",
            "cc5db0795db751784656216288126b0117592687"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H6.",
            "VernacExtend",
            "19ae208b0699306165f85453009fe751d462e13d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H6.",
            "VernacExtend",
            "ec38eb8f555edb53d8b92fc8e71f5b45f38f4fc9"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply col_trivial_2;Col.",
            "VernacExtend",
            "43473af88e92c57b873e8175b070f4c1b178306b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold TS in H19.",
            "VernacExtend",
            "83bb42c9494113df458614aa4c3587cb7c2ac9a9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "unfold Par_strict in H11.",
            "VernacExtend",
            "2de832219b533ff1716d2b921b27b254ef76a147"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "unfold Midpoint in H6.",
            "VernacExtend",
            "19ae208b0699306165f85453009fe751d462e13d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A A' X B').",
            "VernacExtend",
            "42e5c01b920f6e884d3bab8de770a07b82a57aac"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H19.",
            "VernacExtend",
            "01a0345ff24a5de2c52dee2f6e0d963ea3469780"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_strict_cong_mid : forall A B A' B', Par_strict A B A' B' -> Cong A B A' B' -> exists M, Midpoint M A A' /\\ Midpoint M B B' \\/ Midpoint M A B' /\\ Midpoint M B A'.",
            "VernacStartTheoremProof",
            "fa9e076f1713c15ac87c25428acf7682515220b9"
        ],
        [
            "intros A B A' B' HParS HCong.",
            "VernacExtend",
            "01495c7e5c9916ad5da5f410502d5aca656232c1"
        ],
        [
            "assert (HP:=parallel_uniqueness).",
            "VernacExtend",
            "03f6d88cb389fbe44e873b2dadef9ba4db1d5a7b"
        ],
        [
            "destruct (midpoint_existence A A') as [M1 HM1].",
            "VernacExtend",
            "091a511bd6a3c8b95772308c93f7c5c3bb8b17ae"
        ],
        [
            "destruct (symmetric_point_construction B M1) as [B'' HB''].",
            "VernacExtend",
            "c42effffcea7429ba249c0a2363bd951d0b414b3"
        ],
        [
            "assert (HCol1 : Col B'' A' B').",
            "VernacExtend",
            "63aa0eebe7fd5ddb35c20997badc3b93c1ee0b36"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Col A' A' B' /\\ Col B'' A' B'); try (spliter; Col).",
            "VernacExtend",
            "3c5c934288db5d47b698f4dbbf76f5378d0c8165"
        ],
        [
            "assert (HPar := par_strict_par A B A' B' HParS); apply HP with A B A'; Col; unfold Par_strict in HParS; spliter; apply l12_17 with M1; Col.",
            "VernacExtend",
            "05701083fe4ae37c26e625c2874181526912433d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCong1 : Cong A' B' A' B'') by (assert (H := l7_13 M1 A' B'' A B HM1 HB''); eCong).",
            "VernacExtend",
            "6e24f1a4119f27d195dbca5cc211b70f3c9db133"
        ],
        [
            "destruct (midpoint_existence A B') as [M2 HM2].",
            "VernacExtend",
            "477c3f1647bc7bfda75b5c5f01bd32d1726b9280"
        ],
        [
            "destruct (symmetric_point_construction B M2) as [A'' HA''].",
            "VernacExtend",
            "f474062e1b0e116592de2b933c7153d93ce60e4e"
        ],
        [
            "assert (HCol2 : Col A'' A' B').",
            "VernacExtend",
            "b6fb7d2192679fb647a84f22c7434f09c8add599"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Col B' A' B' /\\ Col A'' A' B'); try (spliter; Col).",
            "VernacExtend",
            "d791a650e9cafc316f050143a030e011adb67950"
        ],
        [
            "assert (HPar := par_strict_par A B A' B' HParS); apply HP with A B B'; Col; unfold Par_strict in HParS; spliter; apply l12_17 with M2; Col.",
            "VernacExtend",
            "cbdda27ad22f4cf49b9c37b6c3572fb11ae42d16"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCong2 : Cong A' B' B' A'') by (assert (H := l7_13 M2 B' A'' A B HM2 HA''); eCong).",
            "VernacExtend",
            "fb953957502f80c693a5a602e1caf8118759a7f8"
        ],
        [
            "elim (l7_20 A' B' B''); Col; intro HElim1; treat_equalities.",
            "VernacExtend",
            "45bd93b7876f5ebaf8f79b6c238443a00869afb6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists M1; left; Col.",
            "VernacExtend",
            "252ec61fe5256ae9e8d7b0aefc5ae30f5861f6bb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (l7_20 B' A' A''); Cong; Col; intro HElim2; treat_equalities.",
            "VernacExtend",
            "6ba20999dbf397f74d03019373cad666c4ce9faf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists M2; right; Col.",
            "VernacExtend",
            "ad205d7e48e2f37df1a3280ce152309c6ec7a087"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; destruct (outer_pasch B' A A' B'' M1) as [I [HAIB' HA''IM1]]; unfold Midpoint in*; spliter; Between.",
            "VernacExtend",
            "a972df3f7203e182c31e5ad5740c2e638fd99bec"
        ],
        [
            "assert (HM1I : M1 <> I).",
            "VernacExtend",
            "e303721b452b4524304b8da19c177962976577a6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "show_distinct A M1; apply HParS; exists A; split; Col; assert_cols; ColR.",
            "VernacExtend",
            "9c5d26713352c96032bd3646b51a567ec9eabfea"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HB''M1 : B'' <> M1).",
            "VernacExtend",
            "33e4ebbdd0107db03da211dd49d313aef8f81bfe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply HParS; exists B; assert_cols; Col.",
            "VernacExtend",
            "6347e1c1062cdf5d4bd02d78bd49394d27549977"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (l5_2 B'' M1 I B); Between; intro HBM1I.",
            "VernacExtend",
            "82d7960af6ddbb3a3dc16b3c4060a55d3e8d7bb9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HFalse : TS A B' B A'').",
            "VernacExtend",
            "155a91687def06c59e7a7ace33321ea589c4d566"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; try (intro; apply HParS; exists B'; Col).",
            "VernacExtend",
            "1c7fde2f3c8103aeb1183d7c20bab46bb33fa9a3"
        ],
        [
            "show_distinct B' A''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "b0cdcfd4162f950070dc935f25cd6c1e7ab81061"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "exists M2; assert_cols; Col.",
            "VernacExtend",
            "c28f55c96afa08468b3b9a177e41dc202df6c6ac"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l9_9 in HFalse; apply HFalse; clear HFalse.",
            "VernacExtend",
            "68ae491558103e41822c13cab18663536070b865"
        ],
        [
            "exists A'; split.",
            "VernacExtend",
            "9809eda3d2e6c167c20b0690b7c5431f2d397982"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_2; apply l9_8_2 with B''.",
            "VernacExtend",
            "ec392613d4e406795b239a6e49041aae252b41a1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "show_distinct B' B''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "73651d96db823a215e9fa100c55432108a172959"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "split; try (intro; apply HParS; exists B'; split; Col).",
            "VernacExtend",
            "f28b143e4a14ea5bee02f5b042349a7ee9f6afb2"
        ],
        [
            "exists I; assert_cols; split; Col; eBetween.",
            "VernacExtend",
            "c4603dae1a5f3952c190b87a8c4855f57f0af6d6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_19 with B'; Col; try (intro; treat_equalities; apply HParS; exists A; Col).",
            "VernacExtend",
            "dfccf62f487f80f6c64a2cc5f38fe6a0021c0f1c"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "show_distinct B' B''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "73651d96db823a215e9fa100c55432108a172959"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "show_distinct B' A''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "b0cdcfd4162f950070dc935f25cd6c1e7ab81061"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "split; try (intro; apply HParS; exists A; Col).",
            "VernacExtend",
            "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
        ],
        [
            "exists B'; split; Col; Between.",
            "VernacExtend",
            "a2af6cf5bbc8595116879a6e660813877528f865"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HFalse : OS A A' B B').",
            "VernacExtend",
            "3345a04da1388024b81e2aa9c043d3a1a3a01db7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B''; split.",
            "VernacExtend",
            "d6e10257255ad55747eceeef0d5083f14799ee97"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; try (intro; apply HParS; exists A'; Col).",
            "VernacExtend",
            "051b90d706361269a684e91b07425f316c4b9eb4"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "show_distinct A' B''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "585eb2028bc3b76a8f4ef2de92c2965c653dd51e"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "exists M1; assert_cols; Col.",
            "VernacExtend",
            "57e67b232187867ee0fbbe0259bc7c54b260b30a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; try (intro; apply HParS; exists A; Col).",
            "VernacExtend",
            "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "show_distinct A' B''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "585eb2028bc3b76a8f4ef2de92c2965c653dd51e"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "exists A'; Col.",
            "VernacExtend",
            "2babf274cd4086e69b8a5a5501b304aaab1db80f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l9_9_bis in HFalse; apply HFalse; clear HFalse; apply l9_31.",
            "VernacExtend",
            "3532120ba1c2104ee60ddde1077e765566804d93"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l12_6; Col.",
            "VernacExtend",
            "a2a9af06f85cafc78d9c9dbeebab0220f26eb770"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply one_side_transitivity with B''.",
            "VernacExtend",
            "d616ea631c1e321fafeae956b6c3ffdb8a45c9ff"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_19 with B'; Col; try (intro; treat_equalities; apply HParS; exists A; Col).",
            "VernacExtend",
            "dfccf62f487f80f6c64a2cc5f38fe6a0021c0f1c"
        ],
        [
            "split; try (intro; apply HParS; exists A; Col).",
            "VernacExtend",
            "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
        ],
        [
            "split; try (intro; treat_equalities; apply HParS; exists A; Col).",
            "VernacExtend",
            "83649c5ecbf3230d470c9207dd4db0441ff8aa05"
        ],
        [
            "split; try (intro; treat_equalities; apply HParS; exists A; Col); Between.",
            "VernacExtend",
            "d49e6bf76bd8a47625b31b999b410096cecc869a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_cols; apply l9_19 with I; Col; try ColR; try (intro; treat_equalities; apply HParS; exists A; Col).",
            "VernacExtend",
            "0fdb5b19a03166fe7059f109fe35cc46df0b6ecd"
        ],
        [
            "show_distinct A' B'; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "ac59cbfe42524533a224cb884598a66957b3efd3"
        ],
        [
            "show_distinct B' B''; try (apply HParS; exists A; Col).",
            "VernacExtend",
            "73651d96db823a215e9fa100c55432108a172959"
        ],
        [
            "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
            "VernacExtend",
            "72e576d1d5cdffcfe33906003cd7e505fda0e308"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; try (intro; treat_equalities; apply HParS; assert_cols; exists B'; Col).",
            "VernacExtend",
            "687f4b6e93f9ff6e5bf8f9558e32e7ca8ce41d1d"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_strict_cong_mid1 : forall A B A' B', Par_strict A B A' B' -> Cong A B A' B' -> (TS A A' B B' /\\ exists M, Midpoint M A A' /\\ Midpoint M B B') \\/ (OS A A' B B' /\\ exists M, Midpoint M A B' /\\ Midpoint M B A').",
            "VernacStartTheoremProof",
            "037c5f60a0739b8fc5dc9ccfd37acd01102db834"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Par_strict in HH.",
            "VernacExtend",
            "a1cfde0998218aeac998e7eaa5d4f8c20ba6f08c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct (cop__one_or_two_sides A A' B B').",
            "VernacExtend",
            "7ed37a6f4e2fafcbeb362b5d2c1cba381447e1c6"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=par_cong_mid_ts A B A' B' H H0 H5).",
            "VernacExtend",
            "4c21a4c8324936955256720df4df1ece00993134"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=par_cong_mid_os A B A' B' H H0 H5).",
            "VernacExtend",
            "189fc58d4f994e7b19acc51dccee921865687e96"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong_mid : forall A B A' B', Par A B A' B' -> Cong A B A' B' -> exists M, Midpoint M A A' /\\ Midpoint M B B' \\/ Midpoint M A B' /\\ Midpoint M B A'.",
            "VernacStartTheoremProof",
            "b928ad33c367449ec9973073ad15b796e4be0c46"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply par_strict_cong_mid; try assumption.",
            "VernacExtend",
            "7a1e65f74b55b394bc1278f3affdfaac5bfe1299"
        ],
        [
            "apply col_cong_mid.",
            "VernacExtend",
            "2ded0444da9a7d867627cb4afea62948255511a6"
        ],
        [
            "unfold Par.",
            "VernacExtend",
            "642acbae322dbde53b6e91408a0d5df9c103d66b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Par_strict in H1.",
            "VernacExtend",
            "8646690346cd1eda6e4c1123e6227909d6d0b842"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ts_cong_par_cong_par : forall A B A' B', TS A A' B B' -> Cong A B A' B' -> Par A B A' B' -> Cong A B' A' B /\\ Par A B' A' B.",
            "VernacStartTheoremProof",
            "d16d93de74c198fab692e0534e821120a9bbea65"
        ],
        [
            "intros A B A' B' HTS HCong HPar.",
            "VernacExtend",
            "b348f5829d16d65494b316cc7954a8c48b245b0f"
        ],
        [
            "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in *; spliter; Col).",
            "VernacExtend",
            "7319c905cdfc11ef1eadb32f20f84efb3a2453d9"
        ],
        [
            "destruct (par_cong_mid A B A' B') as [M HM]; Col.",
            "VernacExtend",
            "bd3406f3da89c9f7d8a1f0af79a5613ba52aa8c9"
        ],
        [
            "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
            "VernacExtend",
            "c103f31d69992967f5ddebe1f83720c9c3799b76"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(HAB' : A <> B') by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "e650b89d2311bafbb634d296a83a0de9da2c3e89"
        ],
        [
            "split; try apply l7_13 with M; try apply l12_17 with M; Midpoint.",
            "VernacExtend",
            "e3e398a512b15b9fd776849b584017b68bc57b6f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(HAA' : A <> A') by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "e1c933bba43eaa7babb05727d7ffa912c1e84359"
        ],
        [
            "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
            "VernacExtend",
            "2e2d07a435e35ce3d3068f489af3133343c5faad"
        ],
        [
            "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
            "VernacExtend",
            "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
        ],
        [
            "assert (Par A A' B' B); Par; apply l12_17 with M; Midpoint.",
            "VernacExtend",
            "737cb75f66c2db9cc65f14495d4ae1a56e38365a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_cong : forall A B C D, Parallelogram_strict A B C D -> Cong A B C D /\\ Cong A D B C.",
            "VernacStartTheoremProof",
            "2379314ba9af5a756f537d95075c028c04b491db"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "destruct HPara as [HTS [HCong HPar]]; split; Col.",
            "VernacExtend",
            "e6d297c8b8967fe4ec56e3fa5330495902af174c"
        ],
        [
            "destruct (ts_cong_par_cong_par A B C D) as [HCong' HPar']; Cong.",
            "VernacExtend",
            "5f329caf988b02ccaf9f9f67904ba81d4a4b47ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_cong : forall A B C D, Parallelogram A B C D -> Cong A B C D /\\ Cong A D B C.",
            "VernacStartTheoremProof",
            "0a2f35883b2376699672dc6e78a0a0105f79bbeb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply plgs_cong.",
            "VernacExtend",
            "9dbab27999c31215ec923d21457205147c42b6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply plgf_cong.",
            "VernacExtend",
            "8b9accfbe5c1fd140ffb57c35826259a823f35b8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmb_cong : forall A B C D, Rhombus A B C D -> Cong A B B C /\\ Cong A B C D /\\ Cong A B D A.",
            "VernacStartTheoremProof",
            "c0e54a19803e4655e29ab048204bd7b4d0a89020"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rhombus in H.",
            "VernacExtend",
            "bd1e576fd290a304069b4cbd28b4bd8565d7bc7d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= plg_to_parallelogram A B C D H).",
            "VernacExtend",
            "87906205a2b66e578211bdde59d3f2bacb84e96c"
        ],
        [
            "assert(HH1:= plg_cong A B C D HH).",
            "VernacExtend",
            "a625045ce31a00dfbbf7c03d7c967436c27b289f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "apply cong_transitivity with B C; Cong.",
            "VernacExtend",
            "84196df96279b7781915a93b94819a58a3f8a12a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmb_per: forall A B C D M, Midpoint M A C -> Rhombus A B C D -> Per A M D.",
            "VernacStartTheoremProof",
            "3fdc050abbef06663a09cc31b8a3b52883e0fb8c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=H0).",
            "VernacExtend",
            "bf875902a496ade0bcfcb6336d4c6dc942dce0f8"
        ],
        [
            "unfold Rhombus in HH.",
            "VernacExtend",
            "2c349f5cd80aa4f53a8bc5215a2d8510d1ad3081"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "unfold Plg in HH.",
            "VernacExtend",
            "f0ec9a070b5cb3d7fbc2852e8c72effd997ad60d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 M'.",
            "VernacExtend",
            "3231fedc340037ef54540435cd540334f177a721"
        ],
        [
            "assert(M = M').",
            "VernacExtend",
            "9f675eef456e5911049dbda69ff394544498892d"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst M'.",
            "VernacExtend",
            "4c969501f42944f6e157546e616cc830554f160b"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply rmb_cong in H0.",
            "VernacExtend",
            "ebd7042472bf2a5b0bb5e882e85f91588404d5bb"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_rmb : forall A B C D M, Plg A B C D -> Midpoint M A C -> Per A M B -> Rhombus A B C D.",
            "VernacStartTheoremProof",
            "4debdfd060662544ea5ebb04727528fe987bb0c9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H1.",
            "VernacExtend",
            "59cf689935a884fc6e799a1d7b65ce7cf89e9cdd"
        ],
        [
            "ex_and H1 D'.",
            "VernacExtend",
            "d4c23c433d63d8a092adc2d3b4015d9dd3a5c98f"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Plg in HH.",
            "VernacExtend",
            "f0ec9a070b5cb3d7fbc2852e8c72effd997ad60d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 M'.",
            "VernacExtend",
            "3231fedc340037ef54540435cd540334f177a721"
        ],
        [
            "assert(M = M').",
            "VernacExtend",
            "9f675eef456e5911049dbda69ff394544498892d"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "subst M'.",
            "VernacExtend",
            "4c969501f42944f6e157546e616cc830554f160b"
        ],
        [
            "assert(D = D').",
            "VernacExtend",
            "1f3e843e3bdc4e40334b8f4064308da963d43408"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "unfold Rhombus.",
            "VernacExtend",
            "b48de8f087863804e0bc35e4462514721dbc3cf8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A D B C).",
            "VernacExtend",
            "c6ea53e9d00e68977fdc6f84575b30010ba6cbcf"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "assert(HH:=plg_cong A B C D H).",
            "VernacExtend",
            "b02a0a1bf18b5043efadf17fe85fd505c2573c87"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_rmb : forall A B C D, Plg A B C D -> Perp A C B D -> Rhombus A B C D.",
            "VernacStartTheoremProof",
            "9a68cc740eb38b9e9c43073f39bb9266c97fdf82"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=midpoint_existence A C).",
            "VernacExtend",
            "cb1df0a9b5043cd21eedd0c858a50b863de9a281"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "apply (per_rmb A B C D M).",
            "VernacExtend",
            "26676c56cb735c1c2ce1404c23c750ac27bc6000"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "unfold Plg in H.",
            "VernacExtend",
            "8a4a7ad0eadab4d69b5b252731e941bc0880d60e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H2 M'.",
            "VernacExtend",
            "e79b7f694eadab20fea3fd2f52377e1b7bd9863b"
        ],
        [
            "assert(M = M').",
            "VernacExtend",
            "9f675eef456e5911049dbda69ff394544498892d"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst M'.",
            "VernacExtend",
            "4c969501f42944f6e157546e616cc830554f160b"
        ],
        [
            "assert(Perp A M B M).",
            "VernacExtend",
            "77386f0ab5212bf09d7218b3b8827e8b7791ac76"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply perp_not_eq_1 in H0.",
            "VernacExtend",
            "67068a91882b815d7c0510978082a65dbacd17b6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply perp_not_eq_2 in H0.",
            "VernacExtend",
            "d80392ec14002ffccf529ff3f2cef5b27bb70102"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Midpoint in H3.",
            "VernacExtend",
            "c870c3301b29dc8ce5c31434123448e6e60f69c9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H3.",
            "VernacExtend",
            "490bbc00138d6e155c2aabce09df24693029a72a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H2.",
            "VernacExtend",
            "63fd5243094f3b803f67a96ed5401ef20db7ee32"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H2.",
            "VernacExtend",
            "9fc17029d3eefc0e630566187caadc0de84647d5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply perp_left_comm in H4.",
            "VernacExtend",
            "c8df582f103afe93b8318cddb044c6556d061445"
        ],
        [
            "apply perp_perp_in in H4.",
            "VernacExtend",
            "e2aeba21f5a69b98602193a97bf60b411edfd6c1"
        ],
        [
            "apply perp_in_comm.",
            "VernacExtend",
            "6033e0de5f3b46f2b2c7d2696e65f1e583bb90de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_conga1 : forall A B C D, A <> B -> A <> C -> Plg A B C D -> CongA B A C D C A.",
            "VernacStartTheoremProof",
            "5fa18deac470e08f7d808ed2622b3bf5b801b3d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cong3_conga; auto.",
            "VernacExtend",
            "397f25e3ba2fbd3549af8b80954c72862060259c"
        ],
        [
            "assert(HH := plg_to_parallelogram A B C D H1).",
            "VernacExtend",
            "bc1d2d54c4ee5dd86dcaab4cf1efc7996151dc46"
        ],
        [
            "apply plg_cong in HH.",
            "VernacExtend",
            "0e77752c7a68973653a60fc85ed5f6c6251daa37"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma os_cong_par_cong_par : forall A B A' B', OS A A' B B' -> Cong A B A' B' -> Par A B A' B' -> Cong A A' B B' /\\ Par A A' B B'.",
            "VernacStartTheoremProof",
            "7d0e1bd7e8173976f71a81a953fb7b1891b6ebcf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "assert(A <> B /\\ A <> A').",
            "VernacExtend",
            "a34d3c7592983c979a480112ebc3ec09d5e0d53f"
        ],
        [
            "unfold OS in H.",
            "VernacExtend",
            "0ceff66c081ad02350f4a7c193cf5e7c07251364"
        ],
        [
            "ex_and H C.",
            "VernacExtend",
            "65cb0c649677e580014a6be0e1757c4b0670bdd8"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= (par_strict_cong_mid1 A B A' B' H1 H0 )).",
            "VernacExtend",
            "5ebac4df552645bef5486197d0cfce0852d5a03f"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l9_9 in H4.",
            "VernacExtend",
            "de9105e1787a49a935e891e69840dca47dda6bce"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H5 M.",
            "VernacExtend",
            "39b0fcdf0d270f8eb1f6ee33bc9799942e932333"
        ],
        [
            "assert(HH:= mid_par_cong A B B' A' M H2 H3).",
            "VernacExtend",
            "12fe7a3e4fca07e9cd3b6909bc52acadd4c1beda"
        ],
        [
            "assert(Cong A B B' A' /\\ Cong A A' B' B /\\ Par A B B' A' /\\ Par A A' B' B).",
            "VernacExtend",
            "b52bf4481e5c5134d5436df7a9b284bfcb4fb63c"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold OS in H.",
            "VernacExtend",
            "0ceff66c081ad02350f4a7c193cf5e7c07251364"
        ],
        [
            "ex_and H C.",
            "VernacExtend",
            "65cb0c649677e580014a6be0e1757c4b0670bdd8"
        ],
        [
            "unfold TS in H5.",
            "VernacExtend",
            "741ca389f60a4391f0a75987e3c2ca91e495e497"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_permut : forall A B C D, Parallelogram_strict A B C D -> Parallelogram_strict B C D A.",
            "VernacStartTheoremProof",
            "4b2115c51ac87d2fb70f6d37388f1853d8d44d97"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "destruct HPara as [HTS [HCong HPar]].",
            "VernacExtend",
            "c30645558f35d9f3a3482786c92e498cbb5b698e"
        ],
        [
            "destruct (ts_cong_par_cong_par A B C D) as [HCong' HPar']; Col.",
            "VernacExtend",
            "2a355018ecd12635c5c3054cb38cc34637b3ca8b"
        ],
        [
            "destruct (par_cong_mid A B C D) as [M HM]; Col.",
            "VernacExtend",
            "c683423e629f6de1bb843ad23b60c4859a3bff21"
        ],
        [
            "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
            "VernacExtend",
            "c103f31d69992967f5ddebe1f83720c9c3799b76"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HAM : A <> M) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "814559cba383db3c40e62a420cf028d34f73d0d3"
        ],
        [
            "assert (HCM : C <> M) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "253f4f4f04fc079e5e1cd83745aa8186b2a7f1aa"
        ],
        [
            "assert (HBD : B <> D) by (assert (H:=not_two_sides_id B A C); intro; treat_equalities; Col).",
            "VernacExtend",
            "8a19218f35553f4cd832753e28dbfe066fc5e946"
        ],
        [
            "destruct HTS as [HAC [HABC HTS]]; assert_cols.",
            "VernacExtend",
            "82542ad7172d0de72621b905b79b0b1db7eae169"
        ],
        [
            "repeat try (split; Cong; Par; try (intro; apply HABC; ColR)).",
            "VernacExtend",
            "91137342a07d1c853b509697443ee420d4394d77"
        ],
        [
            "unfold Midpoint in *; spliter; exists M; split; Col; Between.",
            "VernacExtend",
            "439cdd0b2fca84c2b284c8fbe0c763daa3914f21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
        ],
        [
            "assert(HAC : A <> C) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "2b004e835ba1cab2ecfbedffd3d92dc0ba1e14e7"
        ],
        [
            "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
            "VernacExtend",
            "2e2d07a435e35ce3d3068f489af3133343c5faad"
        ],
        [
            "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
            "VernacExtend",
            "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
        ],
        [
            "assert (Par A C D B); Par; apply l12_17 with M; Midpoint.",
            "VernacExtend",
            "84ec2aef150d44291a61926c103252ef56903e67"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_permut : forall A B C D, Parallelogram A B C D -> Parallelogram B C D A.",
            "VernacStartTheoremProof",
            "39220ee936b2cc00d9e56290ab7572c1913c1a80"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "elim HPara; clear HPara; intro HPara.",
            "VernacExtend",
            "cd66da42269ccd42e1b25bdcad358d7fc77f7575"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; apply plgs_permut; Col.",
            "VernacExtend",
            "2247a890c0b8b30473e1046095be0a9ed539c8da"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; apply plgf_permut; Col.",
            "VernacExtend",
            "17ae542eb13bf2dbd93c04eb9e816df1bee06d1d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_mid : forall A B C D, Parallelogram_strict A B C D -> exists M, Midpoint M A C /\\ Midpoint M B D.",
            "VernacStartTheoremProof",
            "02d364752c936c65cdf82e4df8d676dffae6a87c"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "destruct HPara as [HTS [HCong HPar]].",
            "VernacExtend",
            "c30645558f35d9f3a3482786c92e498cbb5b698e"
        ],
        [
            "destruct (par_cong_mid A B C D) as [M HM]; Col.",
            "VernacExtend",
            "c683423e629f6de1bb843ad23b60c4859a3bff21"
        ],
        [
            "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2]; try (exists M; Col).",
            "VernacExtend",
            "dc94a152e54f308a2884728db0996951d21677a0"
        ],
        [
            "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
        ],
        [
            "assert(HAC : A <> C) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "2b004e835ba1cab2ecfbedffd3d92dc0ba1e14e7"
        ],
        [
            "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
            "VernacExtend",
            "2e2d07a435e35ce3d3068f489af3133343c5faad"
        ],
        [
            "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
            "VernacExtend",
            "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
        ],
        [
            "assert (Par A C D B); Par; apply l12_17 with M; Midpoint.",
            "VernacExtend",
            "84ec2aef150d44291a61926c103252ef56903e67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_mid : forall A B C D, Parallelogram A B C D -> exists M, Midpoint M A C /\\ Midpoint M B D.",
            "VernacStartTheoremProof",
            "346594560ef12506be63fc8e7fe7e2eb8b31a33a"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "elim HPara; clear HPara; intro HPara.",
            "VernacExtend",
            "cd66da42269ccd42e1b25bdcad358d7fc77f7575"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply plgs_mid; Col.",
            "VernacExtend",
            "eb7b7660d3ca8f1b3a533927c10ad512eb4aa6c3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply plgf_mid; Col.",
            "VernacExtend",
            "42bc6c98f0e54396318c907cd752868e1024e4f5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_mid_2 : forall A B C D I, Parallelogram A B C D -> Midpoint I A C -> Midpoint I B D.",
            "VernacStartTheoremProof",
            "c1c158c0e83eda2b6e94363fb771eb04ca1c4a2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (plg_mid A B C D).",
            "VernacExtend",
            "b2162171bba134628db478577827eced68d3aee2"
        ],
        [
            "intros I' HI'.",
            "VernacExtend",
            "e2b3e676f28c56133924ddbfa756445b662b9cd5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_not_comm : forall A B C D, Parallelogram_strict A B C D -> ~ Parallelogram_strict A B D C /\\ ~ Parallelogram_strict B A C D.",
            "VernacStartTheoremProof",
            "1326d9e098d6ebb477396fcb298bd8cad296df15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Parallelogram_strict in *.",
            "VernacExtend",
            "1c81353e76d4343a43155e823fd254294a509987"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= ts_cong_par_cong_par A B C D H H4 H3).",
            "VernacExtend",
            "1ff266352524dfba3ede80e08abf4b8d22dce63d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Par_strict A D C B).",
            "VernacExtend",
            "609b4f4436de4e611ccc9e650c3dac0ca2467bb7"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Par_strict.",
            "VernacExtend",
            "a2ccecd8e00b0539043d023883500e6648d8b9d6"
        ],
        [
            "repeat split; Cop.",
            "VernacExtend",
            "4049659c0550a2da58c022f81b90fa72944250ad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply l12_6 in H7.",
            "VernacExtend",
            "c1e464213682688a4de9621fee9bba4c20356324"
        ],
        [
            "apply l9_9 in H0.",
            "VernacExtend",
            "5a50635b6fce705b0ce581f74f71037d0402f1ce"
        ],
        [
            "apply one_side_symmetry in H7.",
            "VernacExtend",
            "152737bd4cea1ef11301d0ca164581341de744bd"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=ts_cong_par_cong_par A B C D H H4 H3).",
            "VernacExtend",
            "1ff266352524dfba3ede80e08abf4b8d22dce63d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply par_symmetry in H6.",
            "VernacExtend",
            "93b8a8843c0d67ff06f67b3bb699b3c31e4f507b"
        ],
        [
            "assert(Par_strict C B A D).",
            "VernacExtend",
            "6334c9ccb378479f0fdde490af1acb954dbd68d4"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Par_strict.",
            "VernacExtend",
            "a2ccecd8e00b0539043d023883500e6648d8b9d6"
        ],
        [
            "repeat split; Cop.",
            "VernacExtend",
            "4049659c0550a2da58c022f81b90fa72944250ad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply l12_6 in H7.",
            "VernacExtend",
            "c1e464213682688a4de9621fee9bba4c20356324"
        ],
        [
            "apply l9_9 in H0.",
            "VernacExtend",
            "5a50635b6fce705b0ce581f74f71037d0402f1ce"
        ],
        [
            "apply invert_one_side in H7.",
            "VernacExtend",
            "d82056ae9f584de8efe79c320d2084496c4096a8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_not_comm : forall A B C D, A <> B -> Parallelogram A B C D -> ~ Parallelogram A B D C /\\ ~ Parallelogram B A C D.",
            "VernacStartTheoremProof",
            "b7682bfd5ef003370f3649dcf67284cda1b1aba2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Parallelogram.",
            "VernacExtend",
            "dd0fbc868492523a91dda1d2bb7253e96937e8e7"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "apply plgs_not_comm in H0.",
            "VernacExtend",
            "447f8221cbc7f7703de6dd0fd80b4142a8a19757"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Parallelogram_strict in H0.",
            "VernacExtend",
            "fa946a51c8b0a797766cd5ca922bed287f49342c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Parallelogram_flat in H1.",
            "VernacExtend",
            "c4c9e5e351aaaaf9d8483800ecc75bfc3c7dfba8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply par_symmetry in H2.",
            "VernacExtend",
            "d55e1fcb1fd3b0a6670c8d6a5e3d048f9a3d6ff2"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "unfold Par_strict in H2.",
            "VernacExtend",
            "bc2923f2c9641053efb2601e4f6653fa0acb380c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "exists D; Col.",
            "VernacExtend",
            "b87c87d33eccededacba7450d83dc651e62674cb"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(~ Parallelogram_strict A B D C /\\ ~ Parallelogram_strict B A C D).",
            "VernacExtend",
            "7559798f8e7125450e87ca905601c3c3f47ff8fe"
        ],
        [
            "apply plgs_not_comm.",
            "VernacExtend",
            "96206d0665177c88950e1f1cca9c3c8bdb2cc3ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Parallelogram_strict in H0.",
            "VernacExtend",
            "fa946a51c8b0a797766cd5ca922bed287f49342c"
        ],
        [
            "unfold Parallelogram_flat in H1.",
            "VernacExtend",
            "c4c9e5e351aaaaf9d8483800ecc75bfc3c7dfba8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(~ Parallelogram_flat A B D C /\\ ~ Parallelogram_flat B A C D).",
            "VernacExtend",
            "6cce16f56a235160b5ae7fe6fb3d4fc18acccadd"
        ],
        [
            "apply plgf_not_comm.",
            "VernacExtend",
            "53b4e12c0e07c846f7c85acf682d98d0940ed81c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "unfold Parallelogram_strict in H3.",
            "VernacExtend",
            "3d21d546fe4803046f74712a85612b0406796048"
        ],
        [
            "unfold Parallelogram_flat in H0.",
            "VernacExtend",
            "791732c4877ed0afdd5d3d0f8ef96fe3b96d5f02"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H3.",
            "VernacExtend",
            "e053fc0e96c5ab9b604e3077980be0cbf9119467"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply plgf_not_comm in H0.",
            "VernacExtend",
            "65710f99514df3f412f10011763dd6492f217a74"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "unfold Parallelogram_strict in H3.",
            "VernacExtend",
            "3d21d546fe4803046f74712a85612b0406796048"
        ],
        [
            "unfold Parallelogram_flat in H0.",
            "VernacExtend",
            "791732c4877ed0afdd5d3d0f8ef96fe3b96d5f02"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H3.",
            "VernacExtend",
            "e053fc0e96c5ab9b604e3077980be0cbf9119467"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallelogram_to_plg : forall A B C D, Parallelogram A B C D -> Plg A B C D.",
            "VernacStartTheoremProof",
            "745df3b8540b87c757f16bd9d3fa52f400b051f5"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "destruct (plg_mid A B C D) as [M HM]; Col.",
            "VernacExtend",
            "7063b955785df3e809ae4471aed380b7a1cfd3c0"
        ],
        [
            "split; try (exists M; Col).",
            "VernacExtend",
            "8abf63dc220888555289ce6810837fa24364b7ad"
        ],
        [
            "elim HPara; clear HPara; intro HPara; try (apply plgs_diff in HPara; spliter; Col); unfold Parallelogram_flat in HPara; spliter; Col.",
            "VernacExtend",
            "8919e6c3889be931d3493ed054387d2026ca3e81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallelogram_equiv_plg : forall A B C D, Parallelogram A B C D <-> Plg A B C D.",
            "VernacStartTheoremProof",
            "a47629bcf5cc7de71d5051037cadb7ff8f24d195"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply plg_to_parallelogram.",
            "VernacExtend",
            "74b4feba844277633db39494abdf0b315716f157"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_conga : forall A B C D, A <> B /\\ A <> C /\\ B <> C -> Parallelogram A B C D -> CongA A B C C D A /\\ CongA B C D D A B.",
            "VernacStartTheoremProof",
            "880b7fbcbaf61dbde1cdc728752e05f8249210b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Cong A B C D /\\ Cong A D B C).",
            "VernacExtend",
            "132658ddda86abf39dadf2705a379cb09d98d8b6"
        ],
        [
            "apply plg_cong.",
            "VernacExtend",
            "c94619ec74c6f6107bfa05d42d81fa8ca2d31679"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= plg_mid A B C D H0).",
            "VernacExtend",
            "428a7b102f8da9051cdb3ccf26f4018ebf1f3386"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong3_conga; auto.",
            "VernacExtend",
            "397f25e3ba2fbd3549af8b80954c72862060259c"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "apply cong3_conga; auto.",
            "VernacExtend",
            "397f25e3ba2fbd3549af8b80954c72862060259c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply symmetric_point_uniqueness; apply l7_2.",
            "VernacExtend",
            "9ca248d311d54fd1d1ec6e14816b31834a9c8dae"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma half_plgs : forall A B C D P Q M, Parallelogram_strict A B C D -> Midpoint P A B -> Midpoint Q C D -> Midpoint M A C -> Par P Q A D /\\ Midpoint M P Q /\\ Cong A D P Q.",
            "VernacStartTheoremProof",
            "6694b46375f5e4527cd806f284a51bc23e6f01ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply plgs_mid in HH.",
            "VernacExtend",
            "e22e7204f46d7e18e4082547c6f3cf42f8fe8bef"
        ],
        [
            "ex_and HH M'.",
            "VernacExtend",
            "4135ca41e2dd956579a8465010fbbc1e014745ce"
        ],
        [
            "assert(M=M').",
            "VernacExtend",
            "9f675eef456e5911049dbda69ff394544498892d"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst M'.",
            "VernacExtend",
            "4c969501f42944f6e157546e616cc830554f160b"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "prolong P M Q' P M.",
            "VernacExtend",
            "1306ec38ec3a5eaec02020993c291207923e595a"
        ],
        [
            "assert(Midpoint M P Q').",
            "VernacExtend",
            "c670545ef058133ca0f2677af161491088ec3895"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Midpoint Q' C D).",
            "VernacExtend",
            "a9b9d0756fd8ca05d396e3cd738ff50ca6c776ad"
        ],
        [
            "eapply symmetry_preserves_midpoint.",
            "VernacExtend",
            "b384c091c453fd003d9060bed30f8c612686bb00"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert(Q=Q').",
            "VernacExtend",
            "83e73032092e89cf38515118973e74a12ceb5931"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Parallelogram_strict in HH.",
            "VernacExtend",
            "15ed05dc4ab13591c5f4bbc599f36b7f7adef5e2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A P D Q).",
            "VernacExtend",
            "3c3f291553da54964b6bc89155b95c9fecb5fa3e"
        ],
        [
            "eapply cong_cong_half_1.",
            "VernacExtend",
            "0d2dafce25e7b013cb714763cc31e9f6cd76fe7c"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Par A P Q D).",
            "VernacExtend",
            "f8ba45e8c164461908a745d7965bbacfe54c5c20"
        ],
        [
            "eapply par_col_par_2.",
            "VernacExtend",
            "836417893fb78f753bdcdbc5b2d8ac2e38982af1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "unfold Par_strict in H0.",
            "VernacExtend",
            "9e162864cc3198768df48341f62e1cd680cc87b1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "eapply par_col_par_2.",
            "VernacExtend",
            "836417893fb78f753bdcdbc5b2d8ac2e38982af1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_identity in H11.",
            "VernacExtend",
            "37a4c174e081764ed8fbd03de45502bad74ba7e8"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "unfold Par_strict in H0.",
            "VernacExtend",
            "9e162864cc3198768df48341f62e1cd680cc87b1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "assert(Cong A D P Q /\\ Par A D P Q).",
            "VernacExtend",
            "e5d3a8bc835789bba4f8de0f09b1f1d1e4eb8138"
        ],
        [
            "apply(os_cong_par_cong_par A P D Q).",
            "VernacExtend",
            "ef1e5e038fa50ab630208790b12c896bdf60fcbb"
        ],
        [
            "unfold TS in H8.",
            "VernacExtend",
            "75a71d14673b58a1d11e1d6c6d843623779f71ee"
        ],
        [
            "assert(~ Col B A C).",
            "VernacExtend",
            "119e756c043d3eda79fbabedada4b8a673b1637b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(OS A D P B).",
            "VernacExtend",
            "48531487b02b67638f2854f010fe37605054f960"
        ],
        [
            "eapply out_one_side_1.",
            "VernacExtend",
            "e5a0c0e864544ed6116dc69aa040258a3e13c04c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col P B D).",
            "VernacExtend",
            "8626120c20e966622012379b8367a76b683ec264"
        ],
        [
            "eapply (col_transitivity_1 _ A).",
            "VernacExtend",
            "7ee5bc575b87f92dfd69ee2ab7a6ccb224faa9fd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H10.",
            "VernacExtend",
            "b92728aad7dd298b29289a2df129891798ae148b"
        ],
        [
            "apply cong_identity in H10.",
            "VernacExtend",
            "26e436ffa41255d8588fffd0464174a82ff83ab0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply plgs_permut in HH.",
            "VernacExtend",
            "3cee6ff068bd8b4d9792b46a264e34f46cc75a85"
        ],
        [
            "unfold Parallelogram_strict in HH.",
            "VernacExtend",
            "15ed05dc4ab13591c5f4bbc599f36b7f7adef5e2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H18.",
            "VernacExtend",
            "c5fa4d4ec7afbd160a7eb79801384c46e9e5f23b"
        ],
        [
            "assert(~ Col C B D).",
            "VernacExtend",
            "eeb927e4744f2a70103bb17cabb73663ff545ab4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ P).",
            "VernacExtend",
            "baeeb49140e49baa53554b3c9b8085f9923c020f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply cong_symmetry in H11.",
            "VernacExtend",
            "b33031bc9c1cfeb15e7fe07ba7cb60adc41f4e01"
        ],
        [
            "apply cong_identity in H11; unfold TS in H8.",
            "VernacExtend",
            "002d9bbe62d755cb92b679eb05cc660d558772c9"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply l7_2 in H1.",
            "VernacExtend",
            "b7d5c0bed992461018d59b5263e1814760e7c7f2"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H10.",
            "VernacExtend",
            "b92728aad7dd298b29289a2df129891798ae148b"
        ],
        [
            "apply cong_identity in H10; unfold Par_strict in H12.",
            "VernacExtend",
            "eac896cace88a43ceaee2b9950d995adc6349756"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A D Q C).",
            "VernacExtend",
            "5aa2987543a85faeea2291ae74a488743f7bae4a"
        ],
        [
            "eapply out_one_side_1.",
            "VernacExtend",
            "e5a0c0e864544ed6116dc69aa040258a3e13c04c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "eapply (col_transitivity_1 _ Q).",
            "VernacExtend",
            "8a59a75d0fba3e200920a4ff33b2c7ce08f4506d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply l7_2 in H1.",
            "VernacExtend",
            "b7d5c0bed992461018d59b5263e1814760e7c7f2"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply col_trivial_2;Col.",
            "VernacExtend",
            "43473af88e92c57b873e8175b070f4c1b178306b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_identity in H11.",
            "VernacExtend",
            "37a4c174e081764ed8fbd03de45502bad74ba7e8"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold OS in H16.",
            "VernacExtend",
            "b85ddff9ea47e5d6ba8d4be78d6f985245c98d2d"
        ],
        [
            "ex_and H16 K.",
            "VernacExtend",
            "bdf4d03263028e7d08a0b147bb713531bcb3f2fa"
        ],
        [
            "unfold TS in H11.",
            "VernacExtend",
            "768788aeababc442d5e2a32181a737108ba9320e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_identity in H10.",
            "VernacExtend",
            "26e436ffa41255d8588fffd0464174a82ff83ab0"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert(OS A D B C).",
            "VernacExtend",
            "d7f2d117acd23621544ec21dbb1ec9340439192a"
        ],
        [
            "apply ts_cong_par_cong_par in H9.",
            "VernacExtend",
            "cfb284afee9af4f143c4daddeb180ae28aac4a75"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "apply l12_6.",
            "VernacExtend",
            "c0d0336f1c22c26db46a4e28dbcac4182527f3a2"
        ],
        [
            "unfold Par_strict in *.",
            "VernacExtend",
            "f5c085adf466f8292377deb92f41daba2e6224f9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Cop.",
            "VernacExtend",
            "4049659c0550a2da58c022f81b90fa72944250ad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "ex_and H22 X.",
            "VernacExtend",
            "24b9c483495c005f04fbf60962cc81a38febd2a0"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply par_symmetry in H14.",
            "VernacExtend",
            "2cfebc6053a65b788f8cf48ce18a6887250ec882"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_two_sides : forall A B C D, Parallelogram_strict A B C D -> TS A C B D /\\ TS B D A C.",
            "VernacStartTheoremProof",
            "9dfa347f680dc57b11c576f61a2ac1da309be763"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= plgs_mid A B C D H).",
            "VernacExtend",
            "91ccb7ea360b9c841539aba0e95cba987e9e6ce1"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "assert(~Col B A C).",
            "VernacExtend",
            "119e756c043d3eda79fbabedada4b8a673b1637b"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(B <> D).",
            "VernacExtend",
            "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HH:=one_side_reflexivity A C B H4).",
            "VernacExtend",
            "771e54caae7b30071f27475e6e72f8fb97458e92"
        ],
        [
            "apply l9_9 in H.",
            "VernacExtend",
            "4edccaf568d2da405946e0e60bb535bb71f6a784"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "assert(~ Col B A C).",
            "VernacExtend",
            "119e756c043d3eda79fbabedada4b8a673b1637b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col M A B).",
            "VernacExtend",
            "549c5462911795ad21cf09bb2c67bdf15831e94a"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ M).",
            "VernacExtend",
            "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col M B C).",
            "VernacExtend",
            "a9f0ce9972827a8e03952394334b6876a1b88ace"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ M).",
            "VernacExtend",
            "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply l7_2 in H0.",
            "VernacExtend",
            "6d641a5885c23b68a8f5d616d2a4aaec60b9f1a5"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_par_strict : forall A B C D, Parallelogram_strict A B C D -> Par_strict A B C D /\\ Par_strict A D B C.",
            "VernacStartTheoremProof",
            "099711857952bfa7eec62c306ab383b87718a74d"
        ],
        [
            "intros A B C D HPara.",
            "VernacExtend",
            "5d78520f3f2d2338f395668575624515f479f526"
        ],
        [
            "destruct (plgs_mid A B C D) as [M [HMid1 HMid2]]; Col.",
            "VernacExtend",
            "0c7028c04ded2ae75f57b0be147ddeb3876ad75e"
        ],
        [
            "destruct HPara as [HTS [HCong HPar]].",
            "VernacExtend",
            "c30645558f35d9f3a3482786c92e498cbb5b698e"
        ],
        [
            "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
        ],
        [
            "assert(HAC : A <> D) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
            "VernacExtend",
            "3b95a4f074bfc39c3aa479eaa376a1a3eb005f40"
        ],
        [
            "unfold TS in HTS; spliter; split; try apply par_not_col_strict with C; Col.",
            "VernacExtend",
            "a653184affdf4f724826ca91781060cbcd9d99ef"
        ],
        [
            "assert (Par A D C B); Par; apply l12_17 with M; Midpoint.",
            "VernacExtend",
            "2672abf2cba48e9f7f453d04a9884ea6f40ee618"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_half_plgs_aux : forall A B C D P Q, Parallelogram_strict A B C D -> Midpoint P A B -> Midpoint Q C D -> Parallelogram_strict A P Q D.",
            "VernacStartTheoremProof",
            "9e54ba4753882fb99ff330f2487f1fd56db4f052"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply plgs_mid in HH.",
            "VernacExtend",
            "e22e7204f46d7e18e4082547c6f3cf42f8fe8bef"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "assert(HH:=half_plgs A B C D P Q M H H0 H1 H2).",
            "VernacExtend",
            "f78d263af44e9c9ebf5b71f5bcdaa883012045b0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply plgs_par_strict in HH.",
            "VernacExtend",
            "5d9b40cd6287269bfae947402ee2881ac09323d0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=par_cong_mid P Q A D H4 (cong_symmetry A D P Q H6)).",
            "VernacExtend",
            "659d62c0adbf93d1b6355e4df61cc14a51d65d8c"
        ],
        [
            "ex_and HH N.",
            "VernacExtend",
            "d2643b9d0be519a03552aab3cfd37be5280af8bc"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "unfold Par_strict in H7.",
            "VernacExtend",
            "a3747579a7247b45eb65a1b9a9ca52056a885f6f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "assert(A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_3 in H9.",
            "VernacExtend",
            "945925067b8899d940d11cbca95bcf958e2c9576"
        ],
        [
            "subst N.",
            "VernacExtend",
            "96985f952144e3b494624eb02380d01d49885aee"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assert(D <> Q).",
            "VernacExtend",
            "f0b6ea9cffc82381f3e637bce0e4e2b233ff07a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply l7_3 in H10.",
            "VernacExtend",
            "cae4907055460a5cd8c2dc876c0feabbcfda5b7e"
        ],
        [
            "subst N.",
            "VernacExtend",
            "96985f952144e3b494624eb02380d01d49885aee"
        ],
        [
            "apply l7_2 in H1.",
            "VernacExtend",
            "b7d5c0bed992461018d59b5263e1814760e7c7f2"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "apply bet_col in H10.",
            "VernacExtend",
            "3fb944ff887288bba56c5cb062c1fbcc083d7285"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H0.",
            "VernacExtend",
            "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "unfold Par_strict in H7.",
            "VernacExtend",
            "a3747579a7247b45eb65a1b9a9ca52056a885f6f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assert(D <> Q).",
            "VernacExtend",
            "f0b6ea9cffc82381f3e637bce0e4e2b233ff07a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply l7_2 in H1.",
            "VernacExtend",
            "b7d5c0bed992461018d59b5263e1814760e7c7f2"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "unfold Par_strict in H7.",
            "VernacExtend",
            "a3747579a7247b45eb65a1b9a9ca52056a885f6f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "eapply mid_plgs.",
            "VernacExtend",
            "714bc429b216f50ba4df15bbf030b88d6541d84d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Par_strict in H7.",
            "VernacExtend",
            "a3747579a7247b45eb65a1b9a9ca52056a885f6f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Midpoint in H0.",
            "VernacExtend",
            "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_comm2 : forall A B C D, Parallelogram_strict A B C D -> Parallelogram_strict B A D C.",
            "VernacStartTheoremProof",
            "298aa5c129b818ebd4dc1bedb265cb45faddd43b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply plgs_two_sides in HH.",
            "VernacExtend",
            "1b14c8265c2c904a7e769b0605ff0218039c9096"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Parallelogram_strict in *.",
            "VernacExtend",
            "1c81353e76d4343a43155e823fd254294a509987"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply par_comm.",
            "VernacExtend",
            "432fdb2fe99d3526e7401110094550bc785df5e3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgf_comm2 : forall A B C D, Parallelogram_flat A B C D -> Parallelogram_flat B A D C.",
            "VernacStartTheoremProof",
            "27819e53855ca3eb075188a28ad3a8eecdc4475c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Parallelogram_flat in *.",
            "VernacExtend",
            "f4b11e3584298f814d342e06af0a7cb38cd654da"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_comm2 : forall A B C D, Parallelogram A B C D -> Parallelogram B A D C.",
            "VernacStartTheoremProof",
            "f9c040c90ffbfadcf24120918731535517cdc332"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply plgs_comm2.",
            "VernacExtend",
            "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply plgf_comm2.",
            "VernacExtend",
            "07cc8440ea9683dd0f45b0a805acbea95a1d8749"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_preserves_conga_os : forall A B C D P , Par A B C D -> Bet A D P -> D <> P -> OS A D B C -> CongA B A P C D P.",
            "VernacStartTheoremProof",
            "e25a182793dc13111ed6c99dc985ff44ad243039"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H2).",
            "VernacExtend",
            "d62fcf5b5f064eea68d6c132c06822d1f79caf2c"
        ],
        [
            "unfold OS in HH.",
            "VernacExtend",
            "24b1584f20ec52f12e45bdfb46dc3e3e79954801"
        ],
        [
            "ex_and HH T.",
            "VernacExtend",
            "0e7dc138e004389572dcd7b416289c16d5fe6e50"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong C D C' C D.",
            "VernacExtend",
            "39d28f5cb03093c9f6d6c7f56ee8cd3ee7e22034"
        ],
        [
            "assert(C' <> D).",
            "VernacExtend",
            "9a18e43ed088afa7733f37782292adfda04f4bd7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_symmetry in H10.",
            "VernacExtend",
            "b92728aad7dd298b29289a2df129891798ae148b"
        ],
        [
            "apply cong_identity in H10.",
            "VernacExtend",
            "26e436ffa41255d8588fffd0464174a82ff83ab0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(CongA B A D C' D A).",
            "VernacExtend",
            "7f398592e3bd217f3fe460f5432a745518a574f6"
        ],
        [
            "eapply l12_21_a.",
            "VernacExtend",
            "13840ca248c8b3eae0aca8950384e940c639e977"
        ],
        [
            "apply (l9_8_2 _ _ C).",
            "VernacExtend",
            "77d2eb5078d159b324fd3072999f47cdce6fbca5"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "eapply (par_col_par_2 _ C).",
            "VernacExtend",
            "ac39f2aeebadb050a84b81cec493773c80ce1cb3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "assert(A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(CongA B A D B A P).",
            "VernacExtend",
            "429a79fa6d0f7f2c7909978ae4f2730a178321a3"
        ],
        [
            "assert(A <> D).",
            "VernacExtend",
            "764a701b09eaaf81a343fdf7891291840a2be14e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply (out_conga B A D B A D).",
            "VernacExtend",
            "0bb91c184557544567764d00fbe51fbc90eb7fe0"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply between_identity in H0.",
            "VernacExtend",
            "c20aa4efb2f2c11c07827adac11bb2befa292488"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "assert(CongA C D P C' D A).",
            "VernacExtend",
            "e1b7039e8ad7b001ccaaa44c1b841f952c5b789b"
        ],
        [
            "eapply l11_14; auto.",
            "VernacExtend",
            "82e734cdb7ba81f930250415cf6559584db243c0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_par2_par : forall A B C A' B' C', A <> C -> Cong_3 B A C B' A' C' -> Par B A B' A' -> Par B C B' C' -> Par A C A' C' \\/ ~ Par_strict B B' A A' \\/ ~Par_strict B B' C C'.",
            "VernacStartTheoremProof",
            "a373af97d2c0145d5a20f039dfdbb83acb0727bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH0:=par_distinct B A B' A' H1).",
            "VernacExtend",
            "1585bc9e727b694ce4cad85c8b347f3c7600e497"
        ],
        [
            "assert(HH1:=par_distinct B C B' C' H2).",
            "VernacExtend",
            "102edcfefc019ed84945b9234ec644e4a60eef80"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=midpoint_existence B B').",
            "VernacExtend",
            "9d93de068b631cd6bfa20499cced73744a372607"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "prolong A M A'' A M.",
            "VernacExtend",
            "5caab2572535c97528d68821a5e9deb694ad0910"
        ],
        [
            "prolong C M C'' C M.",
            "VernacExtend",
            "f3dc927a798f85da6713f6757001ecc4adcae094"
        ],
        [
            "assert(Midpoint M A A'').",
            "VernacExtend",
            "91cb69d4896192ffb66f3bd5fe4c29691a00e73a"
        ],
        [
            "split; Cong.",
            "VernacExtend",
            "85071cd05891ec2f57d45949ae6b4f5f4266f27e"
        ],
        [
            "assert(Midpoint M C C'').",
            "VernacExtend",
            "a0cb794e14648557d08dcf6e351cfb3bc8785dc5"
        ],
        [
            "split; Cong.",
            "VernacExtend",
            "85071cd05891ec2f57d45949ae6b4f5f4266f27e"
        ],
        [
            "assert(Par B A B' A'').",
            "VernacExtend",
            "21c1b6402761c38f3e1e6fc7d63de905d3186784"
        ],
        [
            "apply (l12_17 _ _ _ _ M); assumption.",
            "VernacExtend",
            "c60d149043b4d4e16d99027fa472796f69b5cedd"
        ],
        [
            "assert(Par B C B' C'').",
            "VernacExtend",
            "193df078cdc24e69cb8fc01ca9ab3359af1c7a0b"
        ],
        [
            "apply (l12_17 _ _ _ _ M); assumption.",
            "VernacExtend",
            "c60d149043b4d4e16d99027fa472796f69b5cedd"
        ],
        [
            "assert(Par A C A'' C'').",
            "VernacExtend",
            "d5785fb19493b555bc6ed39d7665a09141cd59d4"
        ],
        [
            "apply (l12_17 _ _ _ _ M);assumption.",
            "VernacExtend",
            "c60d149043b4d4e16d99027fa472796f69b5cedd"
        ],
        [
            "assert(Par B' A' B' A'').",
            "VernacExtend",
            "273445fcd2bbc0618e3c53c29ce8c14c110807cd"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Par B' C' B' C'').",
            "VernacExtend",
            "95394514b0eed65732edf66754b062f04e59078d"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col B' A' A'').",
            "VernacExtend",
            "ea5702fba6a085539a54166f60cfbc6598c8c983"
        ],
        [
            "unfold Par in H17.",
            "VernacExtend",
            "e5f2923e1cb9a23c133d13cedf6e4eda49e14234"
        ],
        [
            "induction H17.",
            "VernacExtend",
            "2977e3960b70522e0ed3a31c2c6c69020169dc90"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(Col B' C' C'').",
            "VernacExtend",
            "890ecfd6c8ab5832dfd32e2a5930ec3778781de5"
        ],
        [
            "unfold Par in H18.",
            "VernacExtend",
            "4da932ed4a4cf754589704fe6a573da78584cf48"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(Cong B A B' A'').",
            "VernacExtend",
            "731f45e0e57f2995a333c484ac1e987aee31f660"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong B C B' C'').",
            "VernacExtend",
            "0ae752d2f00c5397b2b3d315376c630533fbb943"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Cong_3 in H0.",
            "VernacExtend",
            "93037a2a6cbf7edf8fc7bf2aa3021971ee40b0d8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A' = A'' \\/ Midpoint B' A' A'').",
            "VernacExtend",
            "63ba3a9c18cb0a8d7e88f4786962fbefa91c31a0"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply cong_transitivity with B A; Cong.",
            "VernacExtend",
            "7174f780b94a457fb236d6d732c777ad4de95117"
        ],
        [
            "assert(C' = C'' \\/ Midpoint B' C' C'').",
            "VernacExtend",
            "8de269ad6a057c390b169c44097d7f6ce39ed0a9"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply cong_transitivity with B C; Cong.",
            "VernacExtend",
            "84196df96279b7781915a93b94819a58a3f8a12a"
        ],
        [
            "induction H25.",
            "VernacExtend",
            "f351eeb4026cc75aeacc93711864d38bb850e731"
        ],
        [
            "induction H26.",
            "VernacExtend",
            "e6d75bc188032a3a80cc3ba893e541e0b2169829"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bet_col in H7.",
            "VernacExtend",
            "becbe44806ee25b566b423012e0da968d30f3c16"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply bet_col in H8.",
            "VernacExtend",
            "fecfac6c5e59f54adeabf9a250d12f2917a5b872"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "induction H26.",
            "VernacExtend",
            "e6d75bc188032a3a80cc3ba893e541e0b2169829"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "clean_trivial_hyps.",
            "VernacExtend",
            "ac97f941a1a2a1c1aa41d983627aedf3348ee9a7"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H7.",
            "VernacExtend",
            "becbe44806ee25b566b423012e0da968d30f3c16"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Midpoint in H13.",
            "VernacExtend",
            "a7678b1e7888e3aa7975746dbac1c6d8ed157cc4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H13.",
            "VernacExtend",
            "207626a5ed9f6c04662d88f1365acbb70fea6f86"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(Par A' C' A'' C'').",
            "VernacExtend",
            "006c89f3d53d5e90b46541b6baba585d5d9a4de3"
        ],
        [
            "apply(l12_17 A' C' A'' C'' B').",
            "VernacExtend",
            "58985d6700d8281fb528844ab9d108fdd5e9fe4e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "assert(A'' = C'').",
            "VernacExtend",
            "b5eb4825e789d8ccd2d37715efabc858f4ce53a0"
        ],
        [
            "eapply l7_9.",
            "VernacExtend",
            "2d1b9759b531f4ceebb32416848b0daeaf205b9a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply l7_9.",
            "VernacExtend",
            "2d1b9759b531f4ceebb32416848b0daeaf205b9a"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_perp_rectangle : forall A B C D, Rectangle A B C D -> Perp A C B D -> Square A B C D.",
            "VernacStartTheoremProof",
            "610062498ae89eefaaba88df24f12be1c651cccd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Rhombus A B C D).",
            "VernacExtend",
            "06f2c5421862847956f9e8436a99119566a97b1a"
        ],
        [
            "apply perp_rmb.",
            "VernacExtend",
            "27d9bddc30f8fbae9b01aafb5a82c0893e49db8e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rhombus_Rectangle_Square;auto.",
            "VernacExtend",
            "d789590db122b16c3262c633400be64bf3867f6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_half_plgs : forall A B C D P Q, Parallelogram_strict A B C D -> Midpoint P A B -> Midpoint Q C D -> Parallelogram_strict A P Q D /\\ Parallelogram_strict B P Q C.",
            "VernacStartTheoremProof",
            "63569f5594f5555b847b18b9e6d001eace1c3dcf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply plgs_half_plgs_aux.",
            "VernacExtend",
            "5e9e3afa0a80c85211c17a46eb56fed1bfe023cd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply plgs_comm2 in H.",
            "VernacExtend",
            "ce7b36f77870ac01e6d3eb873762201102658bb9"
        ],
        [
            "eapply plgs_half_plgs_aux.",
            "VernacExtend",
            "5e9e3afa0a80c85211c17a46eb56fed1bfe023cd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallel_2_plg : forall A B C D, ~ Col A B C -> Par A B C D -> Par A D B C -> Parallelogram_strict A B C D.",
            "VernacStartTheoremProof",
            "9478c03c215cf6196894fe319e83cecac429c80e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong A B C D /\\ Cong B C D A /\\ TS B D A C /\\ TS A C B D) by (apply l12_19;Par).",
            "VernacExtend",
            "82c700c2790883a928e44c4b9cbd0741f9403ed1"
        ],
        [
            "unfold Parallelogram_strict; intuition.",
            "VernacExtend",
            "fae7e22e41940c9ad6b9074005ef0ada914f8f31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_2_plg : forall A B C D, ~ Col A B C -> Par A B C D -> Par A D B C -> Parallelogram A B C D.",
            "VernacStartTheoremProof",
            "ba5dd6f98a9f8363f64e1d8caeae7d9cc6d924b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H2 := parallel_2_plg A B C D H H0 H1).",
            "VernacExtend",
            "b6f744014261cf2bcabe306b3e38ebf4ccd72e01"
        ],
        [
            "apply Parallelogram_strict_Parallelogram; assumption.",
            "VernacExtend",
            "1c372924496f438097142d35712962cb1a9404f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_cong_1 : forall A B C D, Parallelogram A B C D -> Cong A B C D.",
            "VernacStartTheoremProof",
            "631d720bbe1dc0daab757f74945175780d64f312"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plg_cong in H.",
            "VernacExtend",
            "01eaf099b805d596ef0cb126e8ec711880181a0f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_cong_2 : forall A B C D, Parallelogram A B C D -> Cong A D B C.",
            "VernacStartTheoremProof",
            "991d037ade7bc9efdf1573e5a2846c2129dffbdc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plg_cong in H.",
            "VernacExtend",
            "01eaf099b805d596ef0cb126e8ec711880181a0f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_cong_1 : forall A B C D, Parallelogram_strict A B C D -> Cong A B C D.",
            "VernacStartTheoremProof",
            "8523e830337ad1a3df12be53ee74f19b2a7a7df5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plgs_cong in H.",
            "VernacExtend",
            "e3ecb445471271474d9c708010eaaadebdaefe6d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_cong_2 : forall A B C D, Parallelogram_strict A B C D -> Cong A D B C.",
            "VernacStartTheoremProof",
            "5a2faf80e524b6f987c7c264a9d28a9d7045edb5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plgs_cong in H.",
            "VernacExtend",
            "e3ecb445471271474d9c708010eaaadebdaefe6d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Plg_perm : forall A B C D, Parallelogram A B C D -> Parallelogram A B C D /\\ Parallelogram B C D A /\\ Parallelogram C D A B /\\Parallelogram D A B C /\\ Parallelogram A D C B /\\ Parallelogram D C B A /\\ Parallelogram C B A D /\\ Parallelogram B A D C.",
            "VernacStartTheoremProof",
            "cd9b6b661160736f667b2e8829162bff8e4e3858"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; try assumption.",
            "VernacExtend",
            "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
        ],
        [
            "split; try (apply plg_permut; assumption).",
            "VernacExtend",
            "058776177bafd4dba7dd720f0729f30d16ca19b5"
        ],
        [
            "split; try (do 2 apply plg_permut; assumption).",
            "VernacExtend",
            "55487fdffacfb28c0baf6bef10e64eb9e6bf5e3b"
        ],
        [
            "split; try (do 3 apply plg_permut; assumption).",
            "VernacExtend",
            "d9c84d7d3233718c779323fb2c03052892725962"
        ],
        [
            "split; try (apply plg_comm2; do 3 apply plg_permut; assumption).",
            "VernacExtend",
            "22c28b2cf869aa86ba76221ec43082a35fc09b3f"
        ],
        [
            "split; try (apply plg_comm2; do 2 apply plg_permut; assumption).",
            "VernacExtend",
            "ce7302241712a4ee69d7ae41892688d99fe4df17"
        ],
        [
            "split; try (apply plg_comm2; apply plg_permut; assumption).",
            "VernacExtend",
            "c8ef7376bbb1b3596ac47f74ebb354954f9e921e"
        ],
        [
            "apply plg_comm2; assumption.",
            "VernacExtend",
            "bb6c6f66b6d6c28f713558cc34b57a461f158104"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_not_comm_1 : forall A B C D : Tpoint, A <> B -> Parallelogram A B C D -> ~ Parallelogram A B D C.",
            "VernacStartTheoremProof",
            "f6faf560ab13fd799c77c6d0d33ded6e5c4783fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HNC := plg_not_comm A B C D H H0); spliter; assumption.",
            "VernacExtend",
            "dafe1b9255f360fc218d026a21795e232815b072"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_not_comm_2 : forall A B C D : Tpoint, A <> B -> Parallelogram A B C D -> ~ Parallelogram B A C D.",
            "VernacStartTheoremProof",
            "dc78edd3c04bfa26a6f96af6bf5a851dec293df4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HNC := plg_not_comm A B C D H H0); spliter; assumption.",
            "VernacExtend",
            "dafe1b9255f360fc218d026a21795e232815b072"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quadrilateral_inter_dec_1.",
            "VernacEndSegment",
            "121776c0a555c92821d53376791a4fbef55467c7"
        ],
        [
            "Ltac assert_cols := repeat match goal with | H:Bet ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;assert (Col X1 X2 X3) by (apply bet_col;apply H) | H:Midpoint ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := midpoint_col X2 X1 X3 H) | H:Out ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := out_col X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := par_id X1 X2 X3 H) | H:Par ?X1 ?X2 ?X3 ?X1 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := par_id X1 X2 X3 (par_right_comm X1 X2 X3 X1 H)) | H:Par ?X2 ?X1 ?X1 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := par_id X1 X2 X3 (par_left_comm X2 X1 X1 X3 H)) | H:Par ?X2 ?X1 ?X3 ?X1 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := par_id X1 X2 X3 (par_comm X2 X1 X3 X1 H)) end.",
            "VernacExtend",
            "ae2b87ff7eaef2699248d492d38c2eebcfda177a"
        ],
        [
            "Ltac permutation_intro_in_hyps_aux := repeat match goal with | H : Plg_tagged ?A ?B ?C ?D |- _ => apply Plg_tagged_Plg in H; apply Plg_perm in H; spliter | H : Par_tagged ?A ?B ?C ?D |- _ => apply Par_tagged_Par in H; apply Par_perm in H; spliter | H : Par_strict_tagged ?A ?B ?C ?D |- _ => apply Par_strict_tagged_Par_strict in H; apply Par_strict_perm in H; spliter | H : Perp_tagged ?A ?B ?C ?D |- _ => apply Perp_tagged_Perp in H; apply Perp_perm in H; spliter | H : Perp_in_tagged ?X ?A ?B ?C ?D |- _ => apply Perp_in_tagged_Perp_in in H; apply Perp_in_perm in H; spliter | H : Per_tagged ?A ?B ?C |- _ => apply Per_tagged_Per in H; apply Per_perm in H; spliter | H : Mid_tagged ?A ?B ?C |- _ => apply Mid_tagged_Mid in H; apply Mid_perm in H; spliter | H : NCol_tagged ?A ?B ?C |- _ => apply NCol_tagged_NCol in H; apply NCol_perm in H; spliter | H : Col_tagged ?A ?B ?C |- _ => apply Col_tagged_Col in H; apply Col_perm in H; spliter | H : Bet_tagged ?A ?B ?C |- _ => apply Bet_tagged_Bet in H; apply Bet_perm in H; spliter | H : Cong_tagged ?A ?B ?C ?D |- _ => apply Cong_tagged_Cong in H; apply Cong_perm in H; spliter | H : Diff_tagged ?A ?B |- _ => apply Diff_tagged_Diff in H; apply Diff_perm in H; spliter end.",
            "VernacExtend",
            "727fc067215df16e612c019529c02420bb5a80ef"
        ],
        [
            "Ltac permutation_intro_in_hyps := clean_reap_hyps; clean_trivial_hyps; tag_hyps; permutation_intro_in_hyps_aux.",
            "VernacExtend",
            "1abd90c0796d18c1821a2a57ece8acaeb459da42"
        ],
        [
            "Ltac assert_cols_aux := repeat match goal with | H:Bet ?X1 ?X2 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);assert (Col X1 X2 X3) by (apply bet_col;apply H) | H:Midpoint ?X1 ?X2 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := midpoint_col X2 X1 X3 H) | H:Out ?X1 ?X2 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := out_col X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id_1 X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id_2 X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id_3 X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id_4 X1 X2 X3 H) | H:Par ?X1 ?X2 ?X1 ?X3 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := par_id_5 X1 X2 X3 H) | H:Par ?X1 ?X2 ?X3 ?X4, H2:Col ?X1 ?X2 ?X5, H3:Col ?X3 ?X4 ?X5 |- _ => not_exist_hyp (Col X1 X2 X3);let N := fresh in assert (N := not_strict_par1 X1 X2 X3 X4 X5 H H2 H3) end.",
            "VernacExtend",
            "b627e4048df6bb31c3d4de7f8264da781db697f9"
        ],
        [
            "Ltac assert_cols_perm := permutation_intro_in_hyps; assert_cols_aux; clean_reap_hyps.",
            "VernacExtend",
            "e713abe6f6f3b3d5b9e2e32c7e8714541f7d86c9"
        ],
        [
            "Ltac not_exist_hyp_perm_cong A B C D := not_exist_hyp (Cong A B C D); not_exist_hyp (Cong A B D C); not_exist_hyp (Cong B A C D); not_exist_hyp (Cong B A D C); not_exist_hyp (Cong C D A B); not_exist_hyp (Cong C D B A); not_exist_hyp (Cong D C A B); not_exist_hyp (Cong D C B A).",
            "VernacExtend",
            "26ad5f44bfb7969c21d9a5568cdb792b38ef02e3"
        ],
        [
            "Ltac assert_congs_1 := repeat match goal with | H:Midpoint ?X1 ?X2 ?X3 |- _ => let h := fresh in not_exist_hyp_perm_cong X1 X2 X1 X3; assert (h := midpoint_cong X2 X1 X3 H) | H1:Midpoint ?M1 ?A1 ?B1, H2:Midpoint ?M2 ?A2 ?B2, H3:Cong ?A1 ?B1 ?A2 ?B2 |- _ => let h := fresh in not_exist_hyp_perm_cong A1 M1 A2 M2; assert (h := cong_cong_half_1 A1 M1 B1 A2 M2 B2 H1 H2 H3) | H:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_cong X1 X2 X3 X4; assert (h := plg_cong_1 X1 X2 X3 X4 H) | H:Parallelogram_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_cong X1 X2 X3 X4; assert (h := plgs_cong_1 X1 X2 X3 X4 H) end.",
            "VernacExtend",
            "0f025b79d70a57111037fbb5997ef60668bb38d6"
        ],
        [
            "Ltac assert_congs_2 := repeat match goal with | H1:Midpoint ?M1 ?A1 ?B1, H2:Midpoint ?M2 ?A2 ?B2, H3:Cong ?A1 ?B1 ?A2 ?B2 |- _ => let h := fresh in not_exist_hyp_perm_cong A1 M1 A2 M2; assert (h := cong_cong_half_2 A1 M1 B1 A2 M2 B2 H1 H2 H3) | H:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_cong X1 X4 X2 X3; assert (h := plg_cong_2 X1 X2 X3 X4 H);clean_reap_hyps | H:Parallelogram_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_cong X1 X4 X2 X3; assert (h := plgs_cong_2 X1 X2 X3 X4 H);clean_reap_hyps end.",
            "VernacExtend",
            "95045d9a4530436b277a13de72b2a973cb933ce8"
        ],
        [
            "Ltac assert_congs_perm := permutation_intro_in_hyps; assert_congs_1; assert_congs_2; clean_reap_hyps.",
            "VernacExtend",
            "bd199fc68f16b5d6bae19eb48eba43fdaa087886"
        ],
        [
            "Ltac not_exist_hyp_perm_para A B C D := not_exist_hyp (Parallelogram A B C D); not_exist_hyp (Parallelogram B C D A); not_exist_hyp (Parallelogram C D A B); not_exist_hyp (Parallelogram D A B C); not_exist_hyp (Parallelogram A D C B); not_exist_hyp (Parallelogram D C B A); not_exist_hyp (Parallelogram C B A D); not_exist_hyp (Parallelogram B A D C).",
            "VernacExtend",
            "28bdda4a9884a8792397f0f061b8b9c18c8ad84b"
        ],
        [
            "Ltac not_exist_hyp_perm_para_s A B C D := not_exist_hyp (Parallelogram_strict A B C D); not_exist_hyp (Parallelogram_strict B C D A); not_exist_hyp (Parallelogram_strict C D A B); not_exist_hyp (Parallelogram_strict D A B C); not_exist_hyp (Parallelogram_strict A D C B); not_exist_hyp (Parallelogram_strict D C B A); not_exist_hyp (Parallelogram_strict C B A D); not_exist_hyp (Parallelogram_strict B A D C).",
            "VernacExtend",
            "0f086a6083e943f7746da96f781ccd0c45a7030e"
        ],
        [
            "Ltac assert_paras_aux := repeat match goal with | H:Parallelogram_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_para X1 X2 X3 X4; assert (h := Parallelogram_strict_Parallelogram X1 X2 X3 X4 H) | H:Plg ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_para X1 X2 X3 X4; assert (h := plg_to_parallelogram X1 X2 X3 X4 H) | H:(~ Col ?X1 ?X2 ?X3), H2:Par ?X1 ?X2 ?X3 ?X4, H3:Par ?X1 ?X4 ?X2 ?X3 |- _ => let h := fresh in not_exist_hyp_perm_para_s X1 X2 X3 X4; assert (h := parallel_2_plg X1 X2 X3 X4 H H2 H3) end.",
            "VernacExtend",
            "39ad92b1ea35ea10dc2062bfcd285106fbb1eb55"
        ],
        [
            "Ltac assert_paras_perm := permutation_intro_in_hyps; assert_paras_aux; clean_reap_hyps.",
            "VernacExtend",
            "1fb59e8194534f9b61e965b09a577a5b689bd157"
        ],
        [
            "Ltac not_exist_hyp_perm_npara A B C D := not_exist_hyp (~Parallelogram A B C D); not_exist_hyp (~Parallelogram B C D A); not_exist_hyp (~Parallelogram C D A B); not_exist_hyp (~Parallelogram D A B C); not_exist_hyp (~Parallelogram A D C B); not_exist_hyp (~Parallelogram D C B A); not_exist_hyp (~Parallelogram C B A D); not_exist_hyp (~Parallelogram B A D C).",
            "VernacExtend",
            "e8b3bbfb741d97e7640c992841dbbf48cdc841c0"
        ],
        [
            "Ltac assert_nparas_1 := repeat match goal with | H:(?X1<>?X2), H2:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_npara X1 X2 X4 X3; assert (h := plg_not_comm_1 X1 X2 X3 X4 H H2) end.",
            "VernacExtend",
            "fe696c972202898351d292004371d4c350813450"
        ],
        [
            "Ltac assert_nparas_2 := repeat match goal with | H:(?X1<>?X2), H2:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_npara X2 X1 X3 X4; assert (h := plg_not_comm_2 X1 X2 X3 X4 H H2) end.",
            "VernacExtend",
            "c83b5e0bc849d01c1bdb623549ddf34048a486c2"
        ],
        [
            "Ltac assert_nparas_perm := permutation_intro_in_hyps; assert_nparas_1; assert_nparas_2; clean_reap_hyps.",
            "VernacExtend",
            "9a0e3cdf53f6964f92db118355a2c349454dcaea"
        ],
        [
            "Ltac diag_plg_intersection M A B C D H := let T := fresh in assert(T:= plg_mid A B C D H); ex_and T M.",
            "VernacExtend",
            "75836abf16538d4fa165bd7dd260baf8212a83c0"
        ],
        [
            "Tactic Notation \"Name\" ident(M) \"the\" \"intersection\" \"of\" \"the\" \"diagonals\" \"(\" ident(A) ident(C) \")\" \"and\" \"(\" ident(B) ident(D) \")\" \"of\" \"the\" \"parallelogram\" ident(H) := diag_plg_intersection M A B C D H.",
            "VernacExtend",
            "5ab510b059e237aa27a0dbf7fbda77209ef87698"
        ],
        [
            "Ltac assert_diffs := repeat match goal with | H:(~Col ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp3 X1 X2 X1 X3 X2 X3; assert (h := not_col_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:(~Bet ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp2 X1 X2 X2 X3; assert (h := not_bet_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq12__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq21__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq23__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?C <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq32__neq A B C H H2);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff_2 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?C <> ?D |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_3 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?D <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_4 A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D (swap_diff B A H2) H);clean_reap_hyps | H:Lt ?A ?B ?C ?D |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= lt_diff A B C D H);clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?B |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B (swap_diff B A H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?I |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B (swap_diff A I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?B |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?I |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B (swap_diff B I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?A<>?B |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct A B C H H2); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?B<>?A |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct A B C H (swap_diff B A H2)); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?B<>?C |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct_1 A B C H H2); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?C<>?B |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct_1 A B C H (swap_diff C B H2)); clean_reap_hyps | H:Perp ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_distinct A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Perp_at ?X ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_in_distinct X A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Out ?A ?B ?C |- _ => let T:= fresh in (not_exist_hyp2 A B A C); assert (T:= out_distinct A B C H); decompose [and] T;clear T;clean_reap_hyps | H:TS ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp6 A B A C A D B C B D C D; assert (h := ts_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:OS ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp5 A B A C A D B C B D; assert (h := os_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:~ Coplanar ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp6 A B A C A D B C B D C D; assert (h := ncop_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= conga_diff1 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm B C); assert (T:= conga_diff2 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm A' B'); assert (T:= conga_diff45 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm B' C'); assert (T:= conga_diff56 A B C A' B' C' H);clean_reap_hyps | H:(InAngle ?P ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp3 A B C B P B; assert (h := inangle_distincts A B C P H);decompose [and] h;clear h;clean_reap_hyps | H:LeA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := lea_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:LtA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := lta_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:(Acute ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp2 A B B C; assert (h := acute_distincts A B C H);decompose [and] h;clear h;clean_reap_hyps | H:(Obtuse ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp2 A B B C; assert (h := obtuse_distincts A B C H);decompose [and] h;clear h;clean_reap_hyps | H:SuppA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := suppa_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:(Orth_at ?X ?A ?B ?C ?U ?V) |- _ => let h := fresh in not_exist_hyp4 A B A C B C U V; assert (h := orth_at_distincts A B C U V X H);decompose [and] h;clear h;clean_reap_hyps | H:(Orth ?A ?B ?C ?U ?V) |- _ => let h := fresh in not_exist_hyp4 A B A C B C U V; assert (h := orth_distincts A B C U V H);decompose [and] h;clear h;clean_reap_hyps | H:Inter ?A ?B ?C ?D ?X |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= inter_distincts A B C D X H);decompose [and] T;clear T;clean_reap_hyps | H:Par_strict ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp6 A B A C A D B C B D C D); assert (T:= par_strict_distinct A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Par ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= par_distincts A B C D H);decompose [and] T;clear T;clean_reap_hyps | H:Perp ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_distinct A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Perp_at ?X ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_in_distinct X A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Out ?A ?B ?C |- _ => let T:= fresh in (not_exist_hyp2 A B A C); assert (T:= out_distinct A B C H); decompose [and] T;clear T;clean_reap_hyps | H:SumA ?A ?B ?C ?D ?E ?F ?G ?I ?J |- _ => let h := fresh in not_exist_hyp6 A B B C D E E F G I I J; assert (h := suma_distincts A B C D E F G I J H);decompose [and] h;clear h;clean_reap_hyps | H:TriSumA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp5 A B B C A C D E E F; assert (h := trisuma_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:SAMS ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := sams_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:Parallelogram_strict ?A ?B ?C ?D |- _ => let T := fresh in not_exist_hyp6 A B B C C D D A A C B D; assert (T:= plgs_diff A B C D H);decompose [and] T;clear T;clean_reap_hyps end.",
            "VernacExtend",
            "8560d5f7c8b4cdf5c93d30f360a4247a6d1f6f22"
        ],
        [
            "Hint Resolve parallelogram_strict_not_col parallelogram_strict_not_col_2 parallelogram_strict_not_col_3 parallelogram_strict_not_col_4 : col.",
            "VernacHints",
            "b9de6e066e323760e2c13906965b011637e421eb"
        ],
        [
            "Hint Resolve plg_cong_1 plg_cong_2 plgs_cong_1 plgs_cong_2 : cong.",
            "VernacHints",
            "29f44a6304c8b997cd10a29faf33e7a13383d53b"
        ],
        [
            "Section Quadrilateral_inter_dec_2.",
            "VernacBeginSection",
            "81aa990a10d15abb6df1ff95901f17086cb0b7ae"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma parallelogram_strict_midpoint : forall A B C D I, Parallelogram_strict A B C D -> Col I A C -> Col I B D -> Midpoint I A C /\\ Midpoint I B D.",
            "VernacStartTheoremProof",
            "a1444626442193d4dd4c8c3d5850e3b2bb7125fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=Parallelogram_strict_Parallelogram A B C D H).",
            "VernacExtend",
            "3ad431962c8809911a21f6c5799168a2d9ffd098"
        ],
        [
            "assert (HpF := plg_mid A B C D T).",
            "VernacExtend",
            "7528595bfacb1297b46a61f814289fb43546780f"
        ],
        [
            "elim HpF; intros I' HI;spliter;clear HpF.",
            "VernacExtend",
            "d438d0c26a8df25f5938775b7690378ea7944478"
        ],
        [
            "assert (H01 : Col A C I).",
            "VernacExtend",
            "9f172ccc6346e09f083b488b106b91df7e2d1212"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (H02 : Col D B I).",
            "VernacExtend",
            "63137f614a8391b7460da90b4aa9e3dd4e0978ac"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (H03 : ~Col A D C).",
            "VernacExtend",
            "7e6a925d8c82c2fc8bff6c4897ca31dc966decd1"
        ],
        [
            "apply parallelogram_strict_not_col_3 in H.",
            "VernacExtend",
            "d3d4d03f262cc3d6d433ed17c15969491de2f0da"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "assert (H8 := two_sides_not_col A C B D H4).",
            "VernacExtend",
            "8f476b1ab760ad7c94812d2c6038f0f915448a59"
        ],
        [
            "assert (MDB:D<>B).",
            "VernacExtend",
            "ca54ae9aed2b45a098cc523f97fbac7f9cb58e3e"
        ],
        [
            "assert (Col A I' C).",
            "VernacExtend",
            "63fa0f34a4d2226cda9d90b8fb649a68929e21f8"
        ],
        [
            "assert (H9 := midpoint_bet A I' C H2).",
            "VernacExtend",
            "d1d14a64c58f9e2621f67d1cf9ed843dc1e96eaf"
        ],
        [
            "assert (H10 := bet_col A I' C H9).",
            "VernacExtend",
            "d3bb406e4b1b474c99f87c410b1c2e7d63050389"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (H11 : ~ Col A C D).",
            "VernacExtend",
            "33b5713e589f3ced9951c0a2e234a93ffb7af59f"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (H12 := l7_2 I' B D H3).",
            "VernacExtend",
            "27decfc09c344fc49f02a762421568137590424b"
        ],
        [
            "assert (H13 : Col A C I').",
            "VernacExtend",
            "b9edc06cad8c8315a5897cd9e6455c7b9792e3fe"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply (midpoint_distinct A C I' D B H11 H13 H12).",
            "VernacExtend",
            "4183930d12d384309af1b87b3b7f0bbd742b0947"
        ],
        [
            "assert (H11 : Col D B I').",
            "VernacExtend",
            "110126069a21a44640975081a5864ae8ec33613e"
        ],
        [
            "assert (H14 := midpoint_bet B I' D H3).",
            "VernacExtend",
            "9c964040d895301f98b3d3e11b104d19cffbbe17"
        ],
        [
            "assert (H15 := bet_col B I' D H14).",
            "VernacExtend",
            "4eed5107e71ffc0aacee7c384948dce882cb0671"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (H12 : Col A C I').",
            "VernacExtend",
            "0a9f9ee9b91f2d01c7063a7e91392c3c38851dc1"
        ],
        [
            "assert (H14 := midpoint_bet A I' C H2).",
            "VernacExtend",
            "ed98527d7a2218d063b099c1985ddd50cec0267a"
        ],
        [
            "assert (H15 := bet_col A I' C H14).",
            "VernacExtend",
            "c4c8cc74e767c0bce202e1005c38c8be9d5bfe88"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply not_col_permutation_5 in H03.",
            "VernacExtend",
            "d875534c620771d8c884b4416a829564c9e06e61"
        ],
        [
            "assert (H13 := l6_21 A C D B I I' H03 MDB H01 H12 H02 H11).",
            "VernacExtend",
            "2793b8a60b57c1ca12f30b4702c38e6a12b2bb00"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite H13;assumption.",
            "VernacExtend",
            "17455f42a62b922d7d10d363e8dc8ffc2a96a57b"
        ],
        [
            "subst;assumption.",
            "VernacExtend",
            "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rmb_perp : forall A B C D, A <> C -> B <> D -> Rhombus A B C D -> Perp A C B D.",
            "VernacStartTheoremProof",
            "3792b3d9a805c12da8a6edc4be18aee839188448"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "unfold Rhombus in HH.",
            "VernacExtend",
            "2c349f5cd80aa4f53a8bc5215a2d8510d1ad3081"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply plg_to_parallelogram in H2.",
            "VernacExtend",
            "8196002adc2c99e3c7efe2e2853b0c07de6a22d0"
        ],
        [
            "apply plg_mid in H2.",
            "VernacExtend",
            "c822b08de717f461e3216af628b5d22e849e8b86"
        ],
        [
            "ex_and H2 M.",
            "VernacExtend",
            "90156c7baf2447c52786f87821dbd2fd3b103968"
        ],
        [
            "assert(HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "eapply (rmb_per _ _ _ _ M) in HH.",
            "VernacExtend",
            "18cdeae9e9e662d5f03313d5ce28862d0f8536b5"
        ],
        [
            "apply per_perp_in in HH.",
            "VernacExtend",
            "8813603647ad7f719e2d94b9d8c033617c7c3410"
        ],
        [
            "apply perp_in_perp_bis in HH.",
            "VernacExtend",
            "8cb321b7f480fbd1c14ebf015c9aaece28dc6216"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "apply perp_not_eq_1 in H5.",
            "VernacExtend",
            "5fac5d1aeceada526c204989b704158d5255eb98"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply bet_col in H4.",
            "VernacExtend",
            "d3cb7bf147ad47c10dbd9d3dc29978068213db38"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply bet_col in H2.",
            "VernacExtend",
            "9fc17029d3eefc0e630566187caadc0de84647d5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H2.",
            "VernacExtend",
            "e589542b88a6529dd38ae498a11bb541001f2754"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply l7_2 in H4.",
            "VernacExtend",
            "25c2ed688f1f59a0fb0f019010f6d35e2649f45f"
        ],
        [
            "apply is_midpoint_id in H4.",
            "VernacExtend",
            "7144287795038ee19aacb8cba80e3de9a56c08e6"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_permut : forall A B C D, Rectangle A B C D -> Rectangle B C D A.",
            "VernacStartTheoremProof",
            "8d2188ba9c57e92330631d3353850703c31ef9e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rectangle in *.",
            "VernacExtend",
            "83f964c8eaf9bd4259f43b79a90ac9023c30ae3a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "apply plg_permut in H.",
            "VernacExtend",
            "87a1092bc4b7ed0c17ca7956d16a86033abefd87"
        ],
        [
            "apply parallelogram_to_plg in H.",
            "VernacExtend",
            "7e8dbf681525a304311759597df91053b7329dd1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_comm2 : forall A B C D, Rectangle A B C D -> Rectangle B A D C.",
            "VernacStartTheoremProof",
            "dede21bfaa5cda600500fa08d885d82b58e9d7fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rectangle in *.",
            "VernacExtend",
            "83f964c8eaf9bd4259f43b79a90ac9023c30ae3a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "apply plg_comm2 in H.",
            "VernacExtend",
            "42195761cf3df4a9b0376177a1f2e0b724d8e57f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_per1 : forall A B C D, Rectangle A B C D -> Per B A D.",
            "VernacStartTheoremProof",
            "2b94d53154e38bf33647bbee4e3c3d7b0cc92e5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rectangle in H.",
            "VernacExtend",
            "dce6785ea483229d61d9ed3d334bf0e83934bdc8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= midpoint_existence A B).",
            "VernacExtend",
            "9b11161b77b4b419debbf78e9680e77b58c3beec"
        ],
        [
            "ex_and HH P.",
            "VernacExtend",
            "62826eef4f0c06ff0f259c30341fa8f0ebb13e10"
        ],
        [
            "assert(HH:= midpoint_existence C D).",
            "VernacExtend",
            "b34e76fc6a687ff61af5c743507dac06499e749e"
        ],
        [
            "ex_and HH Q.",
            "VernacExtend",
            "a5a3eb8f4397535a4267ca46296186dfb70cca1f"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Plg in HH.",
            "VernacExtend",
            "f0ec9a070b5cb3d7fbc2852e8c72effd997ad60d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 M.",
            "VernacExtend",
            "5b3b1f2dbda675587d20aeb91ced152f47c39cb8"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert(HH:=half_plgs A B C D P Q M H H1 H2 H4).",
            "VernacExtend",
            "41c7f3ef1ba445f6187e9d2cfae500279d5a0506"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Per A P Q).",
            "VernacExtend",
            "96d21404b66f4e6cd72a45acd72ce9036fcea9fa"
        ],
        [
            "eapply (per_col _ _ M).",
            "VernacExtend",
            "decef86e7d8a9e8827f569556aede092d2305373"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H7.",
            "VernacExtend",
            "c3eb4753392a00f72917c339fc47e55bcf93608c"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_identity in H8.",
            "VernacExtend",
            "14746d36fd8f9e68a633fac546ebc5ec1a3fa001"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert(B = C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (cong_cong_half_1 _ M _ _ M) in H0.",
            "VernacExtend",
            "51d850478588529af6d6a017210ab1bfe6fd8e1b"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply l7_3 in H1.",
            "VernacExtend",
            "a44cc5d138f8d35e68c7c625fb04a310aac62c0d"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "apply perp_in_comm.",
            "VernacExtend",
            "6033e0de5f3b46f2b2c7d2696e65f1e583bb90de"
        ],
        [
            "apply perp_perp_in.",
            "VernacExtend",
            "0c9febbe454aee0f549f39d335d2c9638c929291"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "eapply cop_par_perp__perp.",
            "VernacExtend",
            "fe214571b78d5f7b7c14e889eb6bf992f9fe6941"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply per_perp_in in H9.",
            "VernacExtend",
            "6ac7615bb4897b9e58bd91626fbfcac67bae8c47"
        ],
        [
            "apply perp_in_perp_bis in H9.",
            "VernacExtend",
            "7f68caa61e202421cdfed0cd75cb824744dab17d"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "apply perp_not_eq_1 in H9.",
            "VernacExtend",
            "9756bc07c3ae77faec4416b3659188c31b1a9caf"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "unfold Par_strict in H6.",
            "VernacExtend",
            "979e49d34621acd81b53f5562d24e9283cd73cfa"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "unfold Parallelogram_flat in H.",
            "VernacExtend",
            "89fd6ba7e080d5ffe7686bebf43f0fe3552e890a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A = B /\\ C = D \\/ A = D /\\ C = B).",
            "VernacExtend",
            "c2e8f631af434bb1e866b99bbdadeb54def4b91f"
        ],
        [
            "apply(midpoint_cong_uniqueness A C B D M).",
            "VernacExtend",
            "948d4c5eb8c7abd7d9d6931a5e831cf106787d08"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_per2 : forall A B C D, Rectangle A B C D -> Per A B C.",
            "VernacStartTheoremProof",
            "fd727b154eaf477e4301f20286b0242e03d40f5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_comm2 in H.",
            "VernacExtend",
            "8a3f7be8cbd035b8b584a26f2169e0773cf975d5"
        ],
        [
            "eapply rect_per1.",
            "VernacExtend",
            "d4a56bd297f6aefc1d88ca2c83448b770e64436e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_per3 : forall A B C D, Rectangle A B C D -> Per B C D.",
            "VernacStartTheoremProof",
            "0e64551990ceed686c3b2966cd6a63442c651d80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_permut in H.",
            "VernacExtend",
            "fc4e7a533e84740fa4544a247b0eff214b9c8a41"
        ],
        [
            "apply rect_comm2 in H.",
            "VernacExtend",
            "8a3f7be8cbd035b8b584a26f2169e0773cf975d5"
        ],
        [
            "eapply rect_per1.",
            "VernacExtend",
            "d4a56bd297f6aefc1d88ca2c83448b770e64436e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_per4 : forall A B C D, Rectangle A B C D -> Per A D C.",
            "VernacStartTheoremProof",
            "3dca5277bd40d7331c850a90906a2251555e7051"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_comm2 in H.",
            "VernacExtend",
            "8a3f7be8cbd035b8b584a26f2169e0773cf975d5"
        ],
        [
            "eapply rect_per2.",
            "VernacExtend",
            "a3fc93971113627c3dec2d4542b44a93b4b297b9"
        ],
        [
            "apply rect_permut.",
            "VernacExtend",
            "df9db4a0615cf5e6b20f73e661f4837d3dcd4606"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_per_rect1 : forall A B C D, Plg A B C D -> Per D A B -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "e5ead35670fa45cd272f12ed59e2a36e6b1d5122"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= midpoint_existence A B).",
            "VernacExtend",
            "9b11161b77b4b419debbf78e9680e77b58c3beec"
        ],
        [
            "ex_and HH P.",
            "VernacExtend",
            "62826eef4f0c06ff0f259c30341fa8f0ebb13e10"
        ],
        [
            "assert(HH:= midpoint_existence C D).",
            "VernacExtend",
            "b34e76fc6a687ff61af5c743507dac06499e749e"
        ],
        [
            "ex_and HH Q.",
            "VernacExtend",
            "a5a3eb8f4397535a4267ca46296186dfb70cca1f"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Plg in HH.",
            "VernacExtend",
            "f0ec9a070b5cb3d7fbc2852e8c72effd997ad60d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 M.",
            "VernacExtend",
            "5b3b1f2dbda675587d20aeb91ced152f47c39cb8"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert(HH:=half_plgs A B C D P Q M H H1 H2 H4).",
            "VernacExtend",
            "41c7f3ef1ba445f6187e9d2cfae500279d5a0506"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> D /\\ P <> Q).",
            "VernacExtend",
            "91cfdd4bf30c8c8abc9a9b3add1b0b7d6d40f28f"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "unfold Par_strict in H6.",
            "VernacExtend",
            "979e49d34621acd81b53f5562d24e9283cd73cfa"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Par in H6.",
            "VernacExtend",
            "0fe4566cd7600d9dcd64a77ba63f6d575ed5bf35"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply is_midpoint_id in H1.",
            "VernacExtend",
            "824d248fc903429016aa083f5692636c1b093d37"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(Perp P Q A B).",
            "VernacExtend",
            "cd98466e54e88fd5396ba601d835c296d23d352c"
        ],
        [
            "apply (cop_par_perp__perp A D P Q A B).",
            "VernacExtend",
            "9654a9806f4a109249fa1ce3182553984ac9e75a"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "apply per_perp_in in H0.",
            "VernacExtend",
            "fc33d17faddec10a8a604a7a61e2ad8e2bff4abe"
        ],
        [
            "apply perp_in_comm in H0.",
            "VernacExtend",
            "b9e06bfea049382e02170a652485dd62c6d2182b"
        ],
        [
            "apply perp_in_perp_bis in H0.",
            "VernacExtend",
            "83605d60fd202754fbc36a3b12d527fb01874c15"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_not_eq_1 in H0.",
            "VernacExtend",
            "67068a91882b815d7c0510978082a65dbacd17b6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "assert(Perp P M A B).",
            "VernacExtend",
            "90b2fe7f1cd97c1a606f9037c1ac53207e506f2f"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H7.",
            "VernacExtend",
            "c3eb4753392a00f72917c339fc47e55bcf93608c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H7.",
            "VernacExtend",
            "becbe44806ee25b566b423012e0da968d30f3c16"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(Perp A P P M).",
            "VernacExtend",
            "7e373c8d49f98373baee7356e77f293930205c13"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(Per A P M).",
            "VernacExtend",
            "8a3fc9eb627e6f26d4222c88aa9473923b3b2e1e"
        ],
        [
            "apply perp_comm in H15.",
            "VernacExtend",
            "8a4d096026f0294b14d8eb741876e2199956bddf"
        ],
        [
            "apply perp_perp_in in H15.",
            "VernacExtend",
            "85deee4f05a213a4ee626080061f6f724c1d18aa"
        ],
        [
            "apply perp_in_comm in H15.",
            "VernacExtend",
            "3935a999a48b0e6076443cb0490d887fe497e5d4"
        ],
        [
            "apply perp_in_per in H15.",
            "VernacExtend",
            "4455dd9dbc4e734862c4b7ae0da08904008cc06b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rectangle.",
            "VernacExtend",
            "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply parallelogram_to_plg .",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2 in H16.",
            "VernacExtend",
            "588f52dfc52887341b6ea6ae23aeecac1363f0d9"
        ],
        [
            "unfold Per in H16.",
            "VernacExtend",
            "7e92fb6b121f1bfaab3f4216cf53c733083ab4f6"
        ],
        [
            "ex_and H16 B'.",
            "VernacExtend",
            "5665cabc38da7ce3b964ae303f96aa5b8c3c6e5c"
        ],
        [
            "assert(B = B').",
            "VernacExtend",
            "d3a55d0ac488886a0e73853ef44d198b97fefab6"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Midpoint in H5.",
            "VernacExtend",
            "05d381ea1e3b32a9b648899f1a98a4defb1fbc1e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply cong_transitivity with A M; Cong.",
            "VernacExtend",
            "8c74d597f51d9b4f5b46a93efa4f8cdc021c114a"
        ],
        [
            "apply cong_transitivity with B M; Cong.",
            "VernacExtend",
            "0c6255d75e3dfe1f00f96b39268673dee8c09737"
        ],
        [
            "unfold Rectangle.",
            "VernacExtend",
            "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Parallelogram_flat in H.",
            "VernacExtend",
            "89fd6ba7e080d5ffe7686bebf43f0fe3552e890a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(D = A \\/ B = A).",
            "VernacExtend",
            "1b03ae90ad74896c9ecf75504fb56ff4b5ef2757"
        ],
        [
            "apply (l8_9 D A B).",
            "VernacExtend",
            "7c8fd71e903c7bdb7d80f111a31dd12829d13792"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_symmetry in H8.",
            "VernacExtend",
            "a792bcd9aa6ae6e7244a55f9916d6ebcac537409"
        ],
        [
            "apply cong_identity in H8.",
            "VernacExtend",
            "14746d36fd8f9e68a633fac546ebc5ec1a3fa001"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H7.",
            "VernacExtend",
            "2b5d0997ad66ff395cc4249320a9b8823ada01de"
        ],
        [
            "apply cong_identity in H7.",
            "VernacExtend",
            "877c844bddd3f96125296719231865acd56e696c"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_per_rect2 : forall A B C D, Plg A B C D -> Per C B A -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "ef15b5c9996693396f9fdea07782fcbbb5b94852"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_comm2.",
            "VernacExtend",
            "a8596fe73ec33b562e016ea86ed10abefeb200ec"
        ],
        [
            "apply plg_per_rect1.",
            "VernacExtend",
            "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "apply plg_comm2.",
            "VernacExtend",
            "9907a066aee3484b871d4f193f381973c4a71291"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_per_rect3 : forall A B C D, Plg A B C D -> Per A D C -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "86eb2e45a1acbf8e04e9c1dee795fce664094ec4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_permut.",
            "VernacExtend",
            "df9db4a0615cf5e6b20f73e661f4837d3dcd4606"
        ],
        [
            "apply plg_per_rect1.",
            "VernacExtend",
            "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "apply plg_permut.",
            "VernacExtend",
            "1b96ae4c005fda9ea4b4ae4386892ca8de5f3fba"
        ],
        [
            "apply plg_sym.",
            "VernacExtend",
            "686e27843fd6c8556e96e6d90f756bd57a9ba6e3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_per_rect4 : forall A B C D, Plg A B C D -> Per B C D -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "a8ce622fd71c2309b1b9773f2770c451332c744d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply rect_comm2.",
            "VernacExtend",
            "a8596fe73ec33b562e016ea86ed10abefeb200ec"
        ],
        [
            "apply plg_per_rect3.",
            "VernacExtend",
            "072009f07fbbeb73ab8e182fb236fb9b2359c838"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply plg_to_parallelogram in H.",
            "VernacExtend",
            "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
        ],
        [
            "apply plg_comm2.",
            "VernacExtend",
            "9907a066aee3484b871d4f193f381973c4a71291"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_per_rect : forall A B C D, Plg A B C D -> (Per D A B \\/ Per C B A \\/ Per A D C \\/ Per B C D) -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "a9ee1bfb83efd0e3b6ab5aaa2f591a95f5ca860d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply plg_per_rect1; assumption.",
            "VernacExtend",
            "043df19c5ff18186c6b613d124e14f26cf69b7ea"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply plg_per_rect2; assumption.",
            "VernacExtend",
            "a9c5ad6d4d68f1b8a2f71cf782f8bf98a1e1f98d"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply plg_per_rect3; assumption.",
            "VernacExtend",
            "33e8646b137e4b618b69a9a27e354fd9df58c480"
        ],
        [
            "apply plg_per_rect4; assumption.",
            "VernacExtend",
            "04bd28c236f18035bc8f8c900f38cd60f3f48fcb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_per : forall A B C D, Rectangle A B C D -> Per B A D /\\ Per A B C /\\ Per B C D /\\ Per A D C.",
            "VernacStartTheoremProof",
            "8aaad44375e41b0af0f30ce8dc3aae0a21f8bb2a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply (rect_per1 A B C D); assumption.",
            "VernacExtend",
            "36e5bb2d3d68df40af0729b4c2b71d7c166669c9"
        ],
        [
            "apply (rect_per2 A B C D); assumption.",
            "VernacExtend",
            "2d35a0c28034209204d3ceb0fa0f3e8fa0735392"
        ],
        [
            "apply (rect_per3 A B C D); assumption.",
            "VernacExtend",
            "8a6e4d5c00d92496c78730a1918e60d90e95e3a9"
        ],
        [
            "apply (rect_per4 A B C D); assumption.",
            "VernacExtend",
            "1995b9eb9804908f48f74835324ad02804db6509"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgf_rect_id : forall A B C D, Parallelogram_flat A B C D -> Rectangle A B C D -> A = D /\\ B = C \\/ A = B /\\ D = C.",
            "VernacStartTheoremProof",
            "e43a0384981f5e31bc20dcc9971bc86e300455a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Parallelogram_flat in H.",
            "VernacExtend",
            "89fd6ba7e080d5ffe7686bebf43f0fe3552e890a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Per B A D /\\ Per A B C /\\ Per B C D /\\ Per A D C).",
            "VernacExtend",
            "bec64664097ad1400f1f673cc95f656543fd2c44"
        ],
        [
            "apply rect_per.",
            "VernacExtend",
            "318c49cf8ff9cb9beab4b4aeb45597fb81d55635"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=l8_9 A B C H6 H).",
            "VernacExtend",
            "0ef08abc5dcdfe9e3bc85b94dd0cf5e38e069192"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H2.",
            "VernacExtend",
            "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "split; reflexivity.",
            "VernacExtend",
            "4dcd3619ac711de01342cf915900e96e80b675e1"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_identity in H3.",
            "VernacExtend",
            "66e848f8fbf6e4694366f8121b8567650ff35782"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "split; reflexivity.",
            "VernacExtend",
            "4dcd3619ac711de01342cf915900e96e80b675e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_perp3__perp : forall A B C D, Coplanar A B C D -> Perp A B B C -> Perp B C C D -> Perp C D D A -> Perp D A A B.",
            "VernacStartTheoremProof",
            "0b9cc470b330d376c5142e0845acc848dddc3c2a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Par A B C D) by (apply (l12_9 A B C D B C); Perp; Cop).",
            "VernacExtend",
            "984aa9c87c38007eae4806ae82a0eef9afe31e18"
        ],
        [
            "assert (Perp A B D A) by (apply (cop_par_perp__perp C D A B D A); Perp; Par; Cop).",
            "VernacExtend",
            "2ff841a343aa5bc0c7b3509b90767d694d4185aa"
        ],
        [
            "auto using perp_sym, perp_left_comm.",
            "VernacExtend",
            "778de3cf562cf3119a37b07276642416fc23d469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_perp3__rect : forall A B C D, Coplanar A B C D -> Perp A B B C -> Perp B C C D -> Perp C D D A -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "23a6304c84ffc2e11854c7efaca9dcbbba8f071b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Col A B C) by (assert_diffs; apply per_not_col; Perp).",
            "VernacExtend",
            "9fcfcb088a6ff9828d1daf6e4f212117a78f0293"
        ],
        [
            "assert (Par A B C D) by (apply (l12_9 A B C D B C); Perp; Cop).",
            "VernacExtend",
            "984aa9c87c38007eae4806ae82a0eef9afe31e18"
        ],
        [
            "assert (Perp D A A B) by (eapply cop_perp3__perp;eauto).",
            "VernacExtend",
            "dd489c360e454686e007904d494e5ab8dbabf209"
        ],
        [
            "assert (Par A D B C) by (apply (l12_9 A D B C A B); Perp; Cop).",
            "VernacExtend",
            "c9585952850374f73e5fe57be19053e0ee9cf8e2"
        ],
        [
            "assert (Parallelogram_strict A B C D) by (apply (parallel_2_plg); auto).",
            "VernacExtend",
            "fbdcd05732d41ab3d72032943ef601ba872698e3"
        ],
        [
            "apply plg_per_rect1.",
            "VernacExtend",
            "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "apply Parallelogram_strict_Parallelogram.",
            "VernacExtend",
            "d17b60e261b44cdd468a7fb3dd81c737b5de782a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_to_par_os : forall A B C D P , Bet A D P -> OS A D B C -> CongA B A P C D P -> Par A B C D.",
            "VernacStartTheoremProof",
            "d4e6012e6fa9915648ae8118d12fdbb964fb895d"
        ],
        [
            "intros A B C D P HBet HOS HCongA.",
            "VernacExtend",
            "9cb78af9ab7ff87c08caa5eb96b6e2ad92046978"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply par_right_comm, l12_22_b with P; trivial.",
            "VernacExtend",
            "af80a3145d70cd2e87c2424b3728245bd5a07ecb"
        ],
        [
            "apply l6_6, bet_out; Between.",
            "VernacExtend",
            "e48c89461a054d05adcf99e9dffbfdfd5f8627ff"
        ],
        [
            "apply invert_one_side, col_one_side with D; Col.",
            "VernacExtend",
            "e69b211a5fcff5218ad7df2d8a9aeadc0f827ead"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_par : forall A B C D, A <> B -> B <> C -> Parallelogram A B C D -> Par A B C D /\\ Par A D B C.",
            "VernacStartTheoremProof",
            "40807310b94b93c5db14255ac7cf6d3b4ce64ba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "apply plg_mid in HH.",
            "VernacExtend",
            "df0ac23543349f81aec615d897e11fb3437717af"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "assert(HH:=l12_17 A B C D M H H2 H3).",
            "VernacExtend",
            "f7f67fa02e1b98cae606bcdd1d2b50162c8bc48a"
        ],
        [
            "apply l7_2 in H2.",
            "VernacExtend",
            "18170cfa781766f76d8a57d9a8cb881b604c9a72"
        ],
        [
            "assert(HH1:=l12_17 B C D A M H0 H3 H2).",
            "VernacExtend",
            "72fe0a48f726b381e52cf75411fcfd8f2077e9b2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_par_1 : forall A B C D, A <> B -> B <> C -> Parallelogram A B C D -> Par A B C D.",
            "VernacStartTheoremProof",
            "eb67ae90b372be46a1968ee33d365ed3689d2afc"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HPar := plg_par A B C D H H0 H1); spliter...",
            "VernacExtend",
            "1bbbd079d904b2adfb83f7b618c3054088de1466"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_par_2 : forall A B C D, A <> B -> B <> C -> Parallelogram A B C D -> Par A D B C.",
            "VernacStartTheoremProof",
            "a28377dceef2c9a7b19eb66f20083ae0ff1ea6f3"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HPar := plg_par A B C D H H0 H1); spliter...",
            "VernacExtend",
            "1bbbd079d904b2adfb83f7b618c3054088de1466"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_pars_1: forall A B C D : Tpoint, Parallelogram_strict A B C D -> Par_strict A B C D.",
            "VernacStartTheoremProof",
            "978c87e5f8b4c507df6447e3c56d97eb4d2f0349"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HPar := plgs_par_strict A B C D H); spliter...",
            "VernacExtend",
            "6707eea45d63d139a412dfbe4b83dc7ced47ac20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_pars_2: forall A B C D : Tpoint, Parallelogram_strict A B C D -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "58b32160371c8202acf4484a21d268bc6b29183b"
        ],
        [
            "Proof with finish.",
            "VernacProof",
            "8229c64bbd7d728892a861381b24bf20c998d385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HPar := plgs_par_strict A B C D H); spliter...",
            "VernacExtend",
            "6707eea45d63d139a412dfbe4b83dc7ced47ac20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quadrilateral_inter_dec_2.",
            "VernacEndSegment",
            "ac90a18d633f53a785beaf63f6aea15bb41afa54"
        ],
        [
            "Ltac not_exist_hyp_perm_par A B C D := not_exist_hyp (Par A B C D); not_exist_hyp (Par A B D C); not_exist_hyp (Par B A C D); not_exist_hyp (Par B A D C); not_exist_hyp (Par C D A B); not_exist_hyp (Par C D B A); not_exist_hyp (Par D C A B); not_exist_hyp (Par D C B A).",
            "VernacExtend",
            "8699621f270dbdcb3de190557fdc6c332e72499b"
        ],
        [
            "Ltac not_exist_hyp_perm_pars A B C D := not_exist_hyp (Par_strict A B C D); not_exist_hyp (Par_strict A B D C); not_exist_hyp (Par_strict B A C D); not_exist_hyp (Par_strict B A D C); not_exist_hyp (Par_strict C D A B); not_exist_hyp (Par_strict C D B A); not_exist_hyp (Par_strict D C A B); not_exist_hyp (Par_strict D C B A).",
            "VernacExtend",
            "f0210f08d4556a9edadf15048a209edf24401148"
        ],
        [
            "Ltac assert_pars_1 := repeat match goal with | H:Par_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_par X1 X2 X3 X4; assert (h := par_strict_par X1 X2 X3 X4 H) | H:Par ?X1 ?X2 ?X3 ?X4, H2:Col ?X1 ?X2 ?X5, H3:(~Col ?X3 ?X4 ?X5) |- _ => let h := fresh in not_exist_hyp_perm_pars X1 X2 X3 X4; assert (h := par_not_col_strict X1 X2 X3 X4 X5 H H2 H3) | H: ?X1 <> ?X2, H2:?X2 <> ?X3, H3:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_par X1 X2 X3 X4; assert (h := plg_par_1 X1 X2 X3 X4 H H2 H3) | H:Parallelogram_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_pars X1 X2 X3 X4; assert (h := plgs_pars_1 X1 X2 X3 X4 H) end.",
            "VernacExtend",
            "f9d37bdc5e31704fb4ea35a79af99a51a0a819a3"
        ],
        [
            "Ltac assert_pars_2 := repeat match goal with | H: ?X1 <> ?X2, H2:?X2 <> ?X3, H3:Parallelogram ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_par X1 X4 X2 X3; assert (h := plg_par_2 X1 X2 X3 X4 H H2 H3) | H:Parallelogram_strict ?X1 ?X2 ?X3 ?X4 |- _ => let h := fresh in not_exist_hyp_perm_pars X1 X4 X2 X3; assert (h := plgs_pars_2 X1 X2 X3 X4 H) end.",
            "VernacExtend",
            "590c7a160de60f062db1f5136015ef0410c2b8f3"
        ],
        [
            "Ltac assert_pars_perm := permutation_intro_in_hyps; assert_pars_1; assert_pars_2; clean_reap_hyps.",
            "VernacExtend",
            "60d2fbcb5940df4d08f31c830fc87ebc33276e9a"
        ],
        [
            "Hint Resolve plg_par_1 plg_par_2 plgs_pars_1 plgs_pars_2 : par.",
            "VernacHints",
            "1bd3f46339797eff75244bdaccdf5b24308d8706"
        ],
        [
            "Section Quadrilateral_inter_dec_3.",
            "VernacBeginSection",
            "6e2fd88a775faeb8cdd6aa1a3a95bd9d5841b0e8"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Lemma par_cong_cong : forall A B C D, Par A B C D -> Cong A B C D -> Cong A C B D \\/ Cong A D B C.",
            "VernacStartTheoremProof",
            "401a166c4697fac533db6e2e6d211bbe5e08b5ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H0.",
            "VernacExtend",
            "d8ce644abbee23c3210e33341966fbe878d3f7b4"
        ],
        [
            "apply cong_identity in H0.",
            "VernacExtend",
            "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction(eq_dec_points A D).",
            "VernacExtend",
            "98dbf88bf9f091bd7259185370ee3d42c5c34ac1"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert(B = C \\/ Midpoint A B C).",
            "VernacExtend",
            "5531c06fd8c9d4a2c59ce05efc76f95f4943c675"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "unfold Par in H.",
            "VernacExtend",
            "284a91908ed6c88b12c5aa5041d4a061b896dfff"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Midpoint in H2.",
            "VernacExtend",
            "63fd5243094f3b803f67a96ed5401ef20db7ee32"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(HH:=par_cong_mid A B C D H H0).",
            "VernacExtend",
            "08b71121d535d6f596d367c843e5b504b17cdc08"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(HH:=mid_par_cong A B C D M H1 H2 H3 H4).",
            "VernacExtend",
            "362881d272fe6d41d55cc4728661a716f8f953f2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction(eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert(B = D \\/ Midpoint A B D).",
            "VernacExtend",
            "b08b672e3186cf6589c66fb8308d56223d7b6b5b"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "unfold Par in H.",
            "VernacExtend",
            "284a91908ed6c88b12c5aa5041d4a061b896dfff"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=mid_par_cong A B D C M H1 H4 H3 H5).",
            "VernacExtend",
            "086517620e593296c36010385ed26d727f35fb5e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong_cong : forall A B C D, Col A B C -> Col A B D -> Cong A B C D -> Cong A C B D \\/ Cong A D B C.",
            "VernacStartTheoremProof",
            "5e9ce185ff053646d903f36e63b957532e213515"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction(eq_dec_points C D).",
            "VernacExtend",
            "fc3e40e733fd75b978f2cf0bb2159aa253b3476f"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply par_cong_cong.",
            "VernacExtend",
            "7320c9fae4e693db696dba7f5e6d5defd0aee4f2"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split; Col; ColR.",
            "VernacExtend",
            "407db67601bf414d470f3112518d2e784da5a95e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong_cop : forall A B C D, Par A B C D -> Cong A B C D -> Coplanar A B C D.",
            "VernacStartTheoremProof",
            "a080ed8fd697ac6ecab38bf0f32176f0678c980a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (par_cong_mid A B C D) as [M HM]; trivial.",
            "VernacExtend",
            "9198061b96de6f33787827c99c50f41758227ba0"
        ],
        [
            "exists M; right.",
            "VernacExtend",
            "760d3e84ee2d5a79d6c2e0652d0faccdfaa39a5b"
        ],
        [
            "destruct HM as [[]|[]]; [left|right]; split; Col.",
            "VernacExtend",
            "1964146368971cfb194633f7bc768559cb09ddbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong_plg : forall A B C D, Par A B C D -> Cong A B C D -> Plg A B C D \\/ Plg A B D C.",
            "VernacStartTheoremProof",
            "2a92007368971cf5a0a60b3cea581be40009cf10"
        ],
        [
            "intros A B C D HPar HCong.",
            "VernacExtend",
            "70288aa23ddb20abb467a6bc2819a16fff1c8037"
        ],
        [
            "destruct (par_cong_mid A B C D) as [M HM]; trivial.",
            "VernacExtend",
            "9198061b96de6f33787827c99c50f41758227ba0"
        ],
        [
            "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
            "VernacExtend",
            "c103f31d69992967f5ddebe1f83720c9c3799b76"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; split; try (exists M; Col).",
            "VernacExtend",
            "38ca59fa8384ad534436895a7ae17d9331991673"
        ],
        [
            "elim (eq_dec_points A C); intro HAC; treat_equalities; Col; right; intro; treat_equalities; apply par_distincts in HPar; spliter; Col.",
            "VernacExtend",
            "eff0f0f7f7fe12a5fc1b5c4e0283f75802a1b5e0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; split; try (exists M; Col).",
            "VernacExtend",
            "df53a4b830c836d87c1066878fce567ff5fb419f"
        ],
        [
            "elim (eq_dec_points A D); intro HAD; treat_equalities; Col; right; intro; treat_equalities; apply par_distincts in HPar; spliter; Col.",
            "VernacExtend",
            "38e232db1170995ae7a6e330ce7ee879ffecc217"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong_plg_2 : forall A B C D, Par A B C D -> Cong A B C D -> Parallelogram A B C D \\/ Parallelogram A B D C.",
            "VernacStartTheoremProof",
            "63b403ff91d6e05cd71d2c10dfe2e925117eafd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HElim : Plg A B C D \\/ Plg A B D C) by (apply par_cong_plg; assumption).",
            "VernacExtend",
            "49d65e6ee1342e7ce2a46b92c2e366521969dbc3"
        ],
        [
            "elim HElim; intro.",
            "VernacExtend",
            "9dac13a0403a06dd06f1be72382551a8ab789b26"
        ],
        [
            "left; apply plg_to_parallelogram; assumption.",
            "VernacExtend",
            "cb4e81e6b314ec092f05a39a73941877eae79aeb"
        ],
        [
            "right; apply plg_to_parallelogram; assumption.",
            "VernacExtend",
            "ff16c7cf452fd33ae9719a043f3327e66f59b106"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_cong3_rect : forall A B C D, A <> C \\/ B <> D -> Par A B C D -> Cong A B C D -> Cong A D B C -> Cong A C B D -> Rectangle A B C D \\/ Rectangle A B D C.",
            "VernacStartTheoremProof",
            "17a5105eb4287ecc1667aa466a3755ad85cf747d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Par in H0.",
            "VernacExtend",
            "4a8348d73eb592079f68b35b7aaf9209f74c59bb"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "assert(HH:=par_strict_cong_mid1 A B C D H0 H1).",
            "VernacExtend",
            "aef25978d3e37e1086d89199277e2ad37de505ad"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold Rectangle.",
            "VernacExtend",
            "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold Plg.",
            "VernacExtend",
            "0b3420670f69bb220fe94b450f238dd9c4942442"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H5 M.",
            "VernacExtend",
            "39b0fcdf0d270f8eb1f6ee33bc9799942e932333"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Rectangle.",
            "VernacExtend",
            "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "unfold Plg.",
            "VernacExtend",
            "0b3420670f69bb220fe94b450f238dd9c4942442"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "unfold Par_strict in H0.",
            "VernacExtend",
            "9e162864cc3198768df48341f62e1cd680cc87b1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold Rectangle.",
            "VernacExtend",
            "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "unfold Parallelogram.",
            "VernacExtend",
            "dd0fbc868492523a91dda1d2bb7253e96937e8e7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Parallelogram_flat.",
            "VernacExtend",
            "36e7e83481b0de22e1ccb7a4878e366aeb571ec9"
        ],
        [
            "induction(eq_dec_points C D).",
            "VernacExtend",
            "fc3e40e733fd75b978f2cf0bb2159aa253b3476f"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "repeat split; Col; Cong.",
            "VernacExtend",
            "5002713d0c7266c62584bed984ddcf6d6c219419"
        ],
        [
            "repeat split; Col; Cong; ColR.",
            "VernacExtend",
            "a312e3ec6afae9f9f606e5f3cfcc188a19d6edb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pars_par_pars : forall A B C D, Par_strict A B C D -> Par A D B C -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "ad95aef6c1639a906c201eb1940199e666350fa1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Cop.",
            "VernacExtend",
            "4049659c0550a2da58c022f81b90fa72944250ad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pars_par_plg : forall A B C D, Par_strict A B C D -> Par A D B C -> Plg A B C D.",
            "VernacStartTheoremProof",
            "741d2c93f7b27e2f9cbd80bd51ed94a81ccc328d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Par_strict A D B C).",
            "VernacExtend",
            "9aeb206280a974960d5e48e36fbc66ca5383a358"
        ],
        [
            "apply pars_par_pars; auto.",
            "VernacExtend",
            "ef5996b88e6fc487e65a582b6e431ea5235a0f1e"
        ],
        [
            "assert(Par A B C D).",
            "VernacExtend",
            "de9a3084d11c7c1ed6426ada11ce08458a182731"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(A <> B /\\ C <> D /\\ A <> D /\\ B <> C).",
            "VernacExtend",
            "232f2a07fb7b10f16d8ab059a137081717ed9c53"
        ],
        [
            "apply par_distinct in H0.",
            "VernacExtend",
            "1d79b7c7b312b307e7e284f05e9099aff1e128dc"
        ],
        [
            "apply par_distinct in H2.",
            "VernacExtend",
            "b9485b9b331244ab4acb41f4cdcddc5963966227"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> C).",
            "VernacExtend",
            "6902c8d1b94940b2a9482cacf40e7731b9c07806"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(B <> D).",
            "VernacExtend",
            "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "unfold Plg.",
            "VernacExtend",
            "0b3420670f69bb220fe94b450f238dd9c4942442"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=midpoint_existence A C).",
            "VernacExtend",
            "cb1df0a9b5043cd21eedd0c858a50b863de9a281"
        ],
        [
            "ex_and HH M.",
            "VernacExtend",
            "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "prolong B M D' B M.",
            "VernacExtend",
            "e21f082c596ceb57f988e51b41d9fa219bd69e02"
        ],
        [
            "assert(Midpoint M B D').",
            "VernacExtend",
            "e4d38f1ad104d67c6295d775803a96e7fa7d5ac7"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Plg A B C D').",
            "VernacExtend",
            "1ec678f34473fcbaac64e446b78cda7ead4ef6f9"
        ],
        [
            "unfold Plg.",
            "VernacExtend",
            "0b3420670f69bb220fe94b450f238dd9c4942442"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert(Parallelogram A B C D').",
            "VernacExtend",
            "8a3c4a08462751142c2a954e5e5a2a9533631663"
        ],
        [
            "apply plg_to_parallelogram.",
            "VernacExtend",
            "74b4feba844277633db39494abdf0b315716f157"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=plg_par A B C D' H3 H6 H14).",
            "VernacExtend",
            "9fd999da8b5b9e3c675e3847237a73bf50ecf867"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(~Col C A B).",
            "VernacExtend",
            "10101811f25a8d53460b103ccd0ae59f2160209f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(Col C C D /\\ Col D' C D).",
            "VernacExtend",
            "1611cf154672c1b4583f6982daa178d565c62d7c"
        ],
        [
            "apply (parallel_uniqueness A B C D C D' C H2).",
            "VernacExtend",
            "2ba4a24977c685d95457bd789cb789407a1853ec"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> D').",
            "VernacExtend",
            "0e1b4d6b6a2c55ab6e0d94362f1d5a18c40c38c1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "unfold Par_strict in H1.",
            "VernacExtend",
            "8646690346cd1eda6e4c1123e6227909d6d0b842"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(HH:=mid_par_cong A B C D' M H3 H20 H9 H12).",
            "VernacExtend",
            "6003ceceeeb6714e29b9af9716fb37f01057a6b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Col A A D /\\ Col D' A D).",
            "VernacExtend",
            "e9e4e6da7f9580870eb976e3588bf783a141bdb2"
        ],
        [
            "apply (parallel_uniqueness B C A D A D' A).",
            "VernacExtend",
            "1f3d2f2d1e754597bf9b91ac73d78c8cf9eca704"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(D = D').",
            "VernacExtend",
            "1f3e843e3bdc4e40334b8f4064308da963d43408"
        ],
        [
            "eapply (l6_21 A D C D D D'); Col.",
            "VernacExtend",
            "0e9344c1d2a132f29bd42b152fc6a1a7b6dd9e42"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Par_strict in H.",
            "VernacExtend",
            "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_par_pars_not_cong : forall O A B A' B', Out O A B -> Out O A' B' -> Par_strict A A' B B' -> ~Cong A A' B B'.",
            "VernacStartTheoremProof",
            "f27cbbb3440b272ce168b82f8ad0d8ecb0e88652"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "unfold Par_strict in H1.",
            "VernacExtend",
            "8646690346cd1eda6e4c1123e6227909d6d0b842"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(A' <> B').",
            "VernacExtend",
            "02db2db58c1cbfccda17504b04746954a4f45953"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "unfold Par_strict in H1.",
            "VernacExtend",
            "8646690346cd1eda6e4c1123e6227909d6d0b842"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(O <> A).",
            "VernacExtend",
            "04d22298168c119f24793df00659d77b1edd79ee"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(O <> A').",
            "VernacExtend",
            "385a1a1446a820def8f58688c3867aa59679aab3"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(~Col O A A').",
            "VernacExtend",
            "7bc2d3b6ac5e20101dcb1b5786c93a6b4d6997e0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply out_col in H.",
            "VernacExtend",
            "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
        ],
        [
            "apply out_col in H0.",
            "VernacExtend",
            "384cea00093328b2e233f002311cdcafabfa802d"
        ],
        [
            "assert(Col O B A').",
            "VernacExtend",
            "caaf4bd5e3abb0945787dd0009de257bc159a1c1"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "unfold Par_strict in H1.",
            "VernacExtend",
            "8646690346cd1eda6e4c1123e6227909d6d0b842"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert(OS A B A' B').",
            "VernacExtend",
            "6861a19782e42abcf1b206d7790ffae6a1b22598"
        ],
        [
            "apply(out_one_side_1 _ _ _ _ O).",
            "VernacExtend",
            "efdc178658599af266c428898b35df14e8b09432"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply out_col in H.",
            "VernacExtend",
            "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
        ],
        [
            "apply out_col in H0.",
            "VernacExtend",
            "384cea00093328b2e233f002311cdcafabfa802d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply out_col in H.",
            "VernacExtend",
            "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Par A A' B B').",
            "VernacExtend",
            "dd27a9b94fcf736a3951a321ecd3bcc2e2ef6ce1"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=os_cong_par_cong_par A A' B B' H8 H2 H9).",
            "VernacExtend",
            "46a7325796e6d9ca1bd024c3b8b135e1c3019490"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Par in H11.",
            "VernacExtend",
            "715fade3be8f0cace3de8bed2abae89d57d58e26"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "unfold Par_strict in H11.",
            "VernacExtend",
            "2de832219b533ff1716d2b921b27b254ef76a147"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_col in H.",
            "VernacExtend",
            "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col in H0.",
            "VernacExtend",
            "384cea00093328b2e233f002311cdcafabfa802d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply out_col in H.",
            "VernacExtend",
            "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
        ],
        [
            "apply out_col in H0.",
            "VernacExtend",
            "384cea00093328b2e233f002311cdcafabfa802d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_uniqueness : forall A B C D D', Parallelogram A B C D -> Parallelogram A B C D' -> D = D'.",
            "VernacStartTheoremProof",
            "78fa6631ead6a87861ab66bca7cbda8362dec567"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plg_mid in H.",
            "VernacExtend",
            "3299964a9fbccb00319d7f1463263925021b13d0"
        ],
        [
            "apply plg_mid in H0.",
            "VernacExtend",
            "2d55c297e408981a0cc718348a45817b86a17c74"
        ],
        [
            "ex_and H M.",
            "VernacExtend",
            "8a24783e84de37ae94f1952e32fa851f73c9e1ca"
        ],
        [
            "ex_and H0 M'.",
            "VernacExtend",
            "dff51e0994b9933160b42083260f9045b79ef7c6"
        ],
        [
            "assert(M = M').",
            "VernacExtend",
            "9f675eef456e5911049dbda69ff394544498892d"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst M'.",
            "VernacExtend",
            "4c969501f42944f6e157546e616cc830554f160b"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_trans_trivial : forall A B C D B', Parallelogram_strict A B C D -> Parallelogram_strict C D A B' -> Parallelogram A B B' A.",
            "VernacStartTheoremProof",
            "92ea8a2be9e9142127d92ec38264470e3c43013a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply plgs_permut in H.",
            "VernacExtend",
            "d900665a221aad1f99ee6d678e90255b4bceca60"
        ],
        [
            "apply plgs_permut in H.",
            "VernacExtend",
            "d900665a221aad1f99ee6d678e90255b4bceca60"
        ],
        [
            "assert (B = B').",
            "VernacExtend",
            "d3a55d0ac488886a0e73853ef44d198b97fefab6"
        ],
        [
            "eapply plg_uniqueness.",
            "VernacExtend",
            "d83fd500e218a26f485fb10dcaf1436be9bced6e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply plg_trivial.",
            "VernacExtend",
            "3f687c91b21c40434b11bc37cbece5e514138ffc"
        ],
        [
            "apply plgs_diff in H.",
            "VernacExtend",
            "d87f3b41095f5db841844ab6be8c6bab20cb01a1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_strict_trans : forall A B C D E F, Par_strict A B C D -> Par_strict C D E F -> Par A B E F.",
            "VernacStartTheoremProof",
            "31c35002dee67767baea8827d9fbc281e18a75ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_pseudo_trans : forall A B C D E F, Parallelogram_strict A B C D -> Parallelogram_strict C D E F -> Parallelogram A B F E.",
            "VernacStartTheoremProof",
            "dfc84ef20263a2f947aa351fc3c4057a4ed680ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A E).",
            "VernacExtend",
            "e1f14a759ec5ae20351154492f8fee747766fad5"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "eapply (plgs_trans_trivial A B C D); assumption.",
            "VernacExtend",
            "ea6ae3999f183843ebb32161fd9ac169a5c737ef"
        ],
        [
            "apply plgs_diff in H.",
            "VernacExtend",
            "d87f3b41095f5db841844ab6be8c6bab20cb01a1"
        ],
        [
            "apply plgs_diff in H0.",
            "VernacExtend",
            "f196067a22af4a4d40e89176b67f14324ac2af98"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "prolong D C D' D C.",
            "VernacExtend",
            "6831b702374ad73be8b30244a83030b240567429"
        ],
        [
            "assert(C <> D').",
            "VernacExtend",
            "6334bf352d52bdd9bf8130f1f52fd8ac797d7ada"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply cong_symmetry in H14.",
            "VernacExtend",
            "8d073c91e01d81d936a7495f273984324f93e46c"
        ],
        [
            "apply cong_identity in H14.",
            "VernacExtend",
            "4fb614ce25d585e180b433d5b8882a8cceab3bf2"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assert(HH1:=plgs_par_strict A B C D H).",
            "VernacExtend",
            "40e157466a087815eaafa00d73dab97129b388ad"
        ],
        [
            "assert(HH2:=plgs_par_strict C D E F H0).",
            "VernacExtend",
            "225856a2cce4a85e1333f98b791aa3c6e1764548"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply par_strict_symmetry in H18.",
            "VernacExtend",
            "5e7c24720fcf87ca0465409cf01858f5e4ea4c44"
        ],
        [
            "assert(HH1:= l12_6 C D A B H18).",
            "VernacExtend",
            "e4d73038907ceef648256555bd6d37256becaceb"
        ],
        [
            "assert(HH2:= l12_6 C D E F H16).",
            "VernacExtend",
            "c2d6c59a91207ed8b35110ef7fad35873be5ddd8"
        ],
        [
            "assert(CongA A D D' B C D').",
            "VernacExtend",
            "21fa65fcb4957b486f5bbed9cb832153f24fda1c"
        ],
        [
            "apply par_preserves_conga_os.",
            "VernacExtend",
            "a975a9f63ecca0bf91d6f69ca5c357a81ab9f577"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA E D D' F C D').",
            "VernacExtend",
            "ac0b742f059330caa552a3aba47d4d96b3ec84a2"
        ],
        [
            "apply par_preserves_conga_os.",
            "VernacExtend",
            "a975a9f63ecca0bf91d6f69ca5c357a81ab9f577"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~ Col A C D).",
            "VernacExtend",
            "498132f6ca2265ee346b7a874729731ab8c58aaf"
        ],
        [
            "apply (par_strict_not_col_2 B).",
            "VernacExtend",
            "263269789235d321987c203f97e8716df085b131"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "assert(~ Col E C D).",
            "VernacExtend",
            "ba398fa019b01554eebb7f35545cbee615d66a94"
        ],
        [
            "apply (par_strict_not_col_2 F).",
            "VernacExtend",
            "14fb86a864737b6b26215c87523527b80d669db7"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "induction (cop_dec C D A E).",
            "VernacExtend",
            "77976889f9fc39a5b4e3db098380006148624c51"
        ],
        [
            "assert(HH:=cop__one_or_two_sides C D A E H24 H22 H23).",
            "VernacExtend",
            "4edc02127ec81bd2636373cbb76429874ccb5433"
        ],
        [
            "assert(CongA A D E B C F).",
            "VernacExtend",
            "fae065fae73c45c3ece16972a0d9f9c699793770"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(TS C D A F).",
            "VernacExtend",
            "6d921ddc02a860db886389e7e7488767165fc160"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS C D B F).",
            "VernacExtend",
            "3139dd7afb3859802bf92c771d5a4abbf46ef274"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply(l11_22a A D E D' B C F D').",
            "VernacExtend",
            "7bb2007ed2df1586690eb8c637b0fc139a8c04a2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply col_two_sides.",
            "VernacExtend",
            "2ca72b2dc5486d10b6904a3c44cc220f95096ea5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply between_identity in H2.",
            "VernacExtend",
            "7d110d1d338105b9976ea0d396d4a498f037f767"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (col_two_sides _ D).",
            "VernacExtend",
            "b65a3252a05170ef3fce6fddf8e32ff71d7d9601"
        ],
        [
            "apply bet_col in H2.",
            "VernacExtend",
            "9fc17029d3eefc0e630566187caadc0de84647d5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply(l11_22b A D E D' B C F D').",
            "VernacExtend",
            "365673ba0219c799b696999f97881792631c1019"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply col_one_side.",
            "VernacExtend",
            "43fc3e7e66b404b27bea05901cca44841277c900"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply between_identity in H2.",
            "VernacExtend",
            "7d110d1d338105b9976ea0d396d4a498f037f767"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (col_one_side _ D).",
            "VernacExtend",
            "0fdd3043f651d375f0d7a60aedebc123a8463512"
        ],
        [
            "apply bet_col in H2.",
            "VernacExtend",
            "9fc17029d3eefc0e630566187caadc0de84647d5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "apply HH1.",
            "VernacExtend",
            "c600c47380c483b1ee04b28adfc19940527da17a"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "apply HH2.",
            "VernacExtend",
            "17ffe487c682e8846fd970d8850644641c8d2ade"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HP0:=plgs_cong A B C D H).",
            "VernacExtend",
            "34db9fd153714526a5523e86f540aa4084d16a2d"
        ],
        [
            "assert(HP1:=plgs_cong C D E F H0).",
            "VernacExtend",
            "542012a7f3e2d058658772b193eea419a249ba3f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_symmetry in H27.",
            "VernacExtend",
            "a5a1aa8895bebfe6ebc4c131e131142f82828456"
        ],
        [
            "assert(HP:=cong2_conga_cong A D E B C F H25 H29 H27).",
            "VernacExtend",
            "cf8d1fb3d0583dbd363f95eb29dea9e6ae41a4a5"
        ],
        [
            "assert(Par A B E F).",
            "VernacExtend",
            "efd2f9cb634f620070d2e33512cd3e0330919757"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction(col_dec A E F).",
            "VernacExtend",
            "95a07abb5dda7a73bf909181d7563267c0130228"
        ],
        [
            "induction H30.",
            "VernacExtend",
            "62e153e9e802c89b998380f3b136688cb0dd15eb"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Parallelogram_flat.",
            "VernacExtend",
            "36e7e83481b0de22e1ccb7a4878e366aeb571ec9"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply cong_transitivity with C D; Cong.",
            "VernacExtend",
            "bff5b3aa387bb8d59555ad1506791884c2fc4d6c"
        ],
        [
            "induction(eq_dec_points A F).",
            "VernacExtend",
            "4e539e7ec443ff812c983bc24d43ab85835c93b6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply cong_symmetry in H27.",
            "VernacExtend",
            "a5a1aa8895bebfe6ebc4c131e131142f82828456"
        ],
        [
            "assert(HQ:=par_strict_cong_mid C A D B H17 H27).",
            "VernacExtend",
            "7ae69b3e1b837f3bdd793598134d34c31cb8afd4"
        ],
        [
            "ex_and HQ M.",
            "VernacExtend",
            "e2dac1efbeabf2098b30541993555a66ce73701e"
        ],
        [
            "induction H35.",
            "VernacExtend",
            "1751da0e1b2bc33a5760e1cf9219d52d578e3a04"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Par A E B F \\/ ~ Par_strict D C A B \\/ ~ Par_strict D C E F).",
            "VernacExtend",
            "df8611ec18fd078f3a8583bdedcce1a9dc8d485a"
        ],
        [
            "eapply(cong3_par2_par ); auto.",
            "VernacExtend",
            "08777b39f1db094481bc68d527cd2bc9f14acbab"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "apply par_comm.",
            "VernacExtend",
            "432fdb2fe99d3526e7401110094550bc785df5e3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "apply plg_to_parallelogram.",
            "VernacExtend",
            "74b4feba844277633db39494abdf0b315716f157"
        ],
        [
            "apply pars_par_plg.",
            "VernacExtend",
            "cea2d66e11a61b940c909c6773a6d50c56e3fb95"
        ],
        [
            "assert(Par A B F E).",
            "VernacExtend",
            "d8185f8bfd5ed69243038e44c0d6d891a82ac563"
        ],
        [
            "eapply par_trans.",
            "VernacExtend",
            "c4b70a496bb7884d25e85216576aab86452b7962"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply par_right_comm.",
            "VernacExtend",
            "abcb445c72d51a2b7a6af88c5b139a8f9d39ae53"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H33.",
            "VernacExtend",
            "d18daa923b19d30d5d1a20da69db946692085bd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply par_strict_left_comm.",
            "VernacExtend",
            "9bf7fec02e75f9890b5ef2fe3a56fd34896366be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply par_strict_left_comm.",
            "VernacExtend",
            "9bf7fec02e75f9890b5ef2fe3a56fd34896366be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct (par_cong_plg_2 A B E F); auto.",
            "VernacExtend",
            "6c9324ea2802678376bbbab5dd064ac20bf1a366"
        ],
        [
            "apply par_trans with C D; Par.",
            "VernacExtend",
            "0650c3d8c501c93dd4d25a533ffe4fda739bae76"
        ],
        [
            "apply cong_transitivity with C D; apply plgs_cong_1; assumption.",
            "VernacExtend",
            "72b667dc9993c55dcf53a7d3a6baf3ae7ef4f583"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert (OS A E B F).",
            "VernacExtend",
            "0e90f890d5d97bd7a3c1f6d56288e817b6a409db"
        ],
        [
            "apply (cop3_osp__os A D E); Cop.",
            "VernacExtend",
            "414e83387ea569bde7b9c4816cde65e0f785fd6e"
        ],
        [
            "assert (~ Col D A B) by (apply (par_strict_not_col_2 C), H18).",
            "VernacExtend",
            "d98e17e8ecb141788d1d1318bdf85c848a438404"
        ],
        [
            "apply osp_transitivity with C.",
            "VernacExtend",
            "dfece856caf0cbde740f4e641b59bb993f234bc5"
        ],
        [
            "apply cop2_os__osp with A D; [|Cop..|Side].",
            "VernacExtend",
            "62a5b0802c1706e4fac2821164bc26210779fb0a"
        ],
        [
            "intro; apply H24, coplanar_perm_12, coplanar_trans_1 with B; Col; Cop.",
            "VernacExtend",
            "8060a2554767223576e57fd2f586a6c1eb34938d"
        ],
        [
            "apply cop2_os__osp with D E; [|Cop..|Side].",
            "VernacExtend",
            "324079832efa1f35148eb463f420fb8c4b2925a4"
        ],
        [
            "intro; apply H24, coplanar_perm_12, coplanar_trans_1 with C; Col; Cop.",
            "VernacExtend",
            "1a87dc260a7532a27f527e621b0ab898bfc2e45d"
        ],
        [
            "apply (l9_9 A E B F); [|assumption].",
            "VernacExtend",
            "25df3e311deffd52e0b7f66215b3f11330c6f99b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply one_side_not_col123 in H26; Col.",
            "VernacExtend",
            "ac81a0dfcabb65a49cdfeb7f058324f65eb77778"
        ],
        [
            "apply one_side_not_col124 in H26; Col.",
            "VernacExtend",
            "5fe3cab05e954d3ff061150beb2dee66239da694"
        ],
        [
            "apply plg_mid in H25.",
            "VernacExtend",
            "14eac95f641797454acc38423bc1c7b931effe8b"
        ],
        [
            "destruct H25 as [M []].",
            "VernacExtend",
            "87f795af6f3e96956647739511d81e2285ec0c4a"
        ],
        [
            "exists M; split; [Col|Between].",
            "VernacExtend",
            "5a01c140df02d236f43adc6188f17846a3259b50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgf_plgs_trans : forall A B C D E F, A <> B -> Parallelogram_flat A B C D -> Parallelogram_strict C D E F -> Parallelogram_strict A B F E.",
            "VernacStartTheoremProof",
            "b95a80c695fd07e6ee7bf8ece0bef424268de09c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A D).",
            "VernacExtend",
            "98dbf88bf9f091bd7259185370ee3d42c5c34ac1"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply plgs_comm2.",
            "VernacExtend",
            "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction(eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_identity in H5.",
            "VernacExtend",
            "4126609ebcf06a9437eb33a42c940321ed455ff3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply plgs_comm2.",
            "VernacExtend",
            "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=plgs_par_strict C D E F H1).",
            "VernacExtend",
            "4798b6e7c130ecc48131af4d9a43f1086ae29335"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=plgs_cong C D E F H1).",
            "VernacExtend",
            "197ba68d34830a008fa671a2020977b8b64e3f17"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH2:= l12_6 C D E F H4).",
            "VernacExtend",
            "0429da1d3774f6a39eb4b4a44eeb820d7a0a345e"
        ],
        [
            "assert(HOS := HH2).",
            "VernacExtend",
            "26ab423c603cc2f0305cfa83a7e36925d969bcd7"
        ],
        [
            "induction HH2.",
            "VernacExtend",
            "53d7ad049aabb458d67aa92c73aee2d1859e075f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H9.",
            "VernacExtend",
            "33c05717809dd9341b5027dd01c726a82df2d781"
        ],
        [
            "assert(~ Col F C D).",
            "VernacExtend",
            "e237273254c2bc948f9aad515071327ef9034be2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H8.",
            "VernacExtend",
            "75a71d14673b58a1d11e1d6c6d843623779f71ee"
        ],
        [
            "assert(~ Col E C D).",
            "VernacExtend",
            "ba398fa019b01554eebb7f35545cbee615d66a94"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(D <> E).",
            "VernacExtend",
            "eb7300d4da11dc5d345e3c709d14bedd94969b3a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(HH0:=H0).",
            "VernacExtend",
            "f7d33f7919f61d212620b53de1133fb9d8e4f6cc"
        ],
        [
            "induction HH0.",
            "VernacExtend",
            "8dcf8abcc2047bc9a2d066d7fb0019610a2a28f5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong D C D' D C.",
            "VernacExtend",
            "6831b702374ad73be8b30244a83030b240567429"
        ],
        [
            "assert(D <> D').",
            "VernacExtend",
            "f5df797abab11b0d69c981027a9a8e0f1b9c5d7a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply between_identity in H22.",
            "VernacExtend",
            "3e9a0121180ba570b29bfb06e2c5876800eb223a"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(C <> D').",
            "VernacExtend",
            "6334bf352d52bdd9bf8130f1f52fd8ac797d7ada"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply cong_symmetry in H23.",
            "VernacExtend",
            "dbeaec067df7082f93a0cd61b3781ebf0d2aa54d"
        ],
        [
            "apply cong_identity in H23.",
            "VernacExtend",
            "ed3de17ee62eeefcd752aa6c30b362ac6167aac8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(CongA E D D' F C D').",
            "VernacExtend",
            "ac0b742f059330caa552a3aba47d4d96b3ec84a2"
        ],
        [
            "apply(par_preserves_conga_os D E F C D').",
            "VernacExtend",
            "538fa7acd8bcc521775821a2350604cdb02afa4c"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply cong_symmetry in H23.",
            "VernacExtend",
            "dbeaec067df7082f93a0cd61b3781ebf0d2aa54d"
        ],
        [
            "apply cong_identity in H23.",
            "VernacExtend",
            "ed3de17ee62eeefcd752aa6c30b362ac6167aac8"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction(eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert(B=D \\/ Midpoint A B D).",
            "VernacExtend",
            "b08b672e3186cf6589c66fb8308d56223d7b6b5b"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H27.",
            "VernacExtend",
            "bb2ffbc04b86010d1554b5b92e5dda3d72fe2be1"
        ],
        [
            "induction H21.",
            "VernacExtend",
            "786419b9f1c46298a535e9732135914cb2da82bc"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Parallelogram_strict.",
            "VernacExtend",
            "789693975b8978c7cce22a6bc35f900d3776f8a4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply (l9_8_2 _ _ D).",
            "VernacExtend",
            "8a494bf4804a44f32d2ad3bad76b1e43c7718044"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l12_6.",
            "VernacExtend",
            "bab751d2ee4ee4ca13b96896356d1eeb42ce8bb7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (par_col_par_2 _ D).",
            "VernacExtend",
            "ceaf1cd2885cefd54a95aa07d512d714d6ef8ec4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Midpoint in H27.",
            "VernacExtend",
            "d52899bb482abcfdc48a1c90a6a3b19fa5efc960"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H27.",
            "VernacExtend",
            "128739b42e8f3d50e91e59ce338fa1bfec785810"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply par_right_comm.",
            "VernacExtend",
            "abcb445c72d51a2b7a6af88c5b139a8f9d39ae53"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_transitivity with A D; Cong.",
            "VernacExtend",
            "6beacf8f18997f962a7eda8bbc736e7d2261ba66"
        ],
        [
            "induction(eq_dec_points B D).",
            "VernacExtend",
            "68cda50c5da6aaf6378fe56f939c3124947242d2"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert(A=C \\/ Midpoint B A C).",
            "VernacExtend",
            "3522d46a503c43a04f1057188b9597e68031529a"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H28.",
            "VernacExtend",
            "2c76866e7f4b157e98e3378c660f7f3c2db273ff"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply plgs_comm2.",
            "VernacExtend",
            "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
        ],
        [
            "unfold Parallelogram_strict.",
            "VernacExtend",
            "789693975b8978c7cce22a6bc35f900d3776f8a4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply (l9_8_2 _ _ C).",
            "VernacExtend",
            "7ed1af2501fadf90b8bb7994bbb172bea1d98c7e"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l12_6.",
            "VernacExtend",
            "bab751d2ee4ee4ca13b96896356d1eeb42ce8bb7"
        ],
        [
            "apply par_strict_symmetry.",
            "VernacExtend",
            "edc501c7820309ea87a9de5aca95548871147707"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (par_col_par_2 _ C).",
            "VernacExtend",
            "ac39f2aeebadb050a84b81cec493773c80ce1cb3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Midpoint in H28.",
            "VernacExtend",
            "c310a84304bd366c00d728a7e920e7c648a47904"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply bet_col in H28.",
            "VernacExtend",
            "71c345f611ca66490287f2f64f2a7749328fde35"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_transitivity with C B; Cong.",
            "VernacExtend",
            "f11cb70d994546c9ed8df0f30ce8b6855048c86e"
        ],
        [
            "assert(HH:=plgf_bet A B D C H0).",
            "VernacExtend",
            "c005fda744f4eb93b3f40480b09d5943c7fc9c16"
        ],
        [
            "assert(CongA A D E B C F).",
            "VernacExtend",
            "fae065fae73c45c3ece16972a0d9f9c699793770"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply out_conga.",
            "VernacExtend",
            "de6f6decf0cf5ed798ad84891816412113d30fec"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply (l5_1 _ C).",
            "VernacExtend",
            "f81b5b05efcf13ad950f195b56306923dacdaa70"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Bet D C B).",
            "VernacExtend",
            "6410d25d2c7f6ff313da25c43e49d90280b14efb"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H29.",
            "VernacExtend",
            "629e762bacb1cca90c65ecec78e62b6e90cc10da"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply (l5_2 D); auto.",
            "VernacExtend",
            "8f90d0f24bec0e866ee5ea6ef57d8e638178ebe7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "induction H29.",
            "VernacExtend",
            "2f8335f3df2232c141fffe3358762ec6f1a11a61"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply (out_conga D' D E D' C F).",
            "VernacExtend",
            "c237dfc4eba8d42b13ab09ebe2f7f90ed0642caf"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split;auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply (bet3_cong3_bet A B C D D'); auto; Cong.",
            "VernacExtend",
            "2b849f7f4b55a64eb3db2f5e4a580ffa77a60eb4"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "induction H29.",
            "VernacExtend",
            "2f8335f3df2232c141fffe3358762ec6f1a11a61"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong A E B F).",
            "VernacExtend",
            "439a5116f007052473cfca5db7c0eb9518824b24"
        ],
        [
            "eapply(cong2_conga_cong A D E B C F H29);Cong.",
            "VernacExtend",
            "bf229b16c5341e0061c5a9872125253b251aa235"
        ],
        [
            "assert(Cong_3 E A D F B C).",
            "VernacExtend",
            "21ee0ba89dfcc0b88ff0c104e0e9ec0f9d96e8ae"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "assert(Par A B E F).",
            "VernacExtend",
            "efd2f9cb634f620070d2e33512cd3e0330919757"
        ],
        [
            "eapply (par_trans A B C D E F).",
            "VernacExtend",
            "a991a81b8bc8cf67d176717f11eda981f7cb5985"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA E A D F B C).",
            "VernacExtend",
            "b3a6cd27f906b727c1aa8c34018ef21cd3c980ac"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A B E F).",
            "VernacExtend",
            "ef4a587ec016b458db8ff1ba4b63b86ed2c046fa"
        ],
        [
            "eapply l12_6.",
            "VernacExtend",
            "bab751d2ee4ee4ca13b96896356d1eeb42ce8bb7"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Col A B E).",
            "VernacExtend",
            "7f819fe85f3b5d552920ae8e9ce183e630255ef0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "eapply (col3 A B); Col.",
            "VernacExtend",
            "d10516134859faa51aaa89eb5c946f2dde991b8f"
        ],
        [
            "assert(Par A E F B).",
            "VernacExtend",
            "371db30da0662520895add3c3b0878798af43677"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "prolong A B A' A B.",
            "VernacExtend",
            "f323a72b258f564fbe2d0b6d5b63446e139221f0"
        ],
        [
            "apply (conga_to_par_os _ _ _ _ A'); auto.",
            "VernacExtend",
            "b267f427da1273a50afce84e30657ac9594d32c6"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply between_identity in H36.",
            "VernacExtend",
            "2bd9706d43bc3d15c2353478089f23d9b2564848"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_symmetry in H37.",
            "VernacExtend",
            "2fc161a62a9628c564f657b495d900824851fd7e"
        ],
        [
            "apply cong_identity in H37.",
            "VernacExtend",
            "0acc7ec1f2ee854367b15ecd072fd0e6f8eb7eb0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction H35.",
            "VernacExtend",
            "1751da0e1b2bc33a5760e1cf9219d52d578e3a04"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong A B A' A B.",
            "VernacExtend",
            "f323a72b258f564fbe2d0b6d5b63446e139221f0"
        ],
        [
            "apply (conga_to_par_os _ _ _ _ A'); auto.",
            "VernacExtend",
            "b267f427da1273a50afce84e30657ac9594d32c6"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply between_identity in H37.",
            "VernacExtend",
            "d6b37c9ff86911e98d85d177529ea6a80bff09b0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_symmetry in H38.",
            "VernacExtend",
            "a858476ab99bbe399232fddf9095ec9667332567"
        ],
        [
            "apply cong_identity in H38.",
            "VernacExtend",
            "95f94a37468f60299f8c88570ca9bf169022d5c6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction H35.",
            "VernacExtend",
            "1751da0e1b2bc33a5760e1cf9219d52d578e3a04"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong A B A' A B.",
            "VernacExtend",
            "f323a72b258f564fbe2d0b6d5b63446e139221f0"
        ],
        [
            "apply (conga_to_par_os _ _ _ _ A'); auto.",
            "VernacExtend",
            "b267f427da1273a50afce84e30657ac9594d32c6"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply out_conga.",
            "VernacExtend",
            "de6f6decf0cf5ed798ad84891816412113d30fec"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply between_identity in H37.",
            "VernacExtend",
            "d6b37c9ff86911e98d85d177529ea6a80bff09b0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_symmetry in H38.",
            "VernacExtend",
            "a858476ab99bbe399232fddf9095ec9667332567"
        ],
        [
            "apply cong_identity in H38.",
            "VernacExtend",
            "95f94a37468f60299f8c88570ca9bf169022d5c6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply (bet3_cong3_bet D _ _ A); auto; Cong.",
            "VernacExtend",
            "cd3c15ac0e5f3a36796dbe425aa6347c02f15c38"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong A B A' A C.",
            "VernacExtend",
            "3ebf8cb2d0b7e55e17c2e53040012155ba8494a4"
        ],
        [
            "apply (conga_to_par_os _ _ _ _ A'); auto.",
            "VernacExtend",
            "b267f427da1273a50afce84e30657ac9594d32c6"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply out_conga.",
            "VernacExtend",
            "de6f6decf0cf5ed798ad84891816412113d30fec"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply between_identity in H37.",
            "VernacExtend",
            "d6b37c9ff86911e98d85d177529ea6a80bff09b0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(Bet B C A').",
            "VernacExtend",
            "8aca464c5edf8e80aad0bc7b374a84ad5c17e63b"
        ],
        [
            "eapply (bet_cong_bet A); auto.",
            "VernacExtend",
            "901eec9cac007e8c86fd1b8e656d3fd1d4fe114a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_symmetry in H38.",
            "VernacExtend",
            "a858476ab99bbe399232fddf9095ec9667332567"
        ],
        [
            "apply cong_identity in H38.",
            "VernacExtend",
            "95f94a37468f60299f8c88570ca9bf169022d5c6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply (bet_cong_bet A); auto.",
            "VernacExtend",
            "901eec9cac007e8c86fd1b8e656d3fd1d4fe114a"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert(Plg A B F E).",
            "VernacExtend",
            "f4884a7e657d2ea7a99c363dcd74707e32e7cbcc"
        ],
        [
            "apply pars_par_plg.",
            "VernacExtend",
            "cea2d66e11a61b940c909c6773a6d50c56e3fb95"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "apply par_strict_right_comm.",
            "VernacExtend",
            "b3461cfadff067d77e96949ad9fd609f64829366"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "assert(Col A B E).",
            "VernacExtend",
            "7f819fe85f3b5d552920ae8e9ce183e630255ef0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "eapply (col3 A B); Col.",
            "VernacExtend",
            "d10516134859faa51aaa89eb5c946f2dde991b8f"
        ],
        [
            "Par.",
            "VernacExtend",
            "204d3bc48478a206fd337c12d856085317b90ede"
        ],
        [
            "apply plg_to_parallelogram in H36.",
            "VernacExtend",
            "faecf34103d7f3a5e6fb3eb8b0d59d8f02e56e37"
        ],
        [
            "induction H36.",
            "VernacExtend",
            "b4ab69ef64e20bfca21a88e0bb7f6dc39bd27417"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Parallelogram_flat in H36.",
            "VernacExtend",
            "90eb970fb949753668dd3d40092dfa44474a2e35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Col A B E).",
            "VernacExtend",
            "7f819fe85f3b5d552920ae8e9ce183e630255ef0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "eapply (col3 A B); Col.",
            "VernacExtend",
            "d10516134859faa51aaa89eb5c946f2dde991b8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgf_plgf_plgf: forall A B C D E F, A <> B -> Parallelogram_flat A B C D -> Parallelogram_flat C D E F -> Parallelogram_flat A B F E.",
            "VernacStartTheoremProof",
            "d13a9d5867f7019b1b6e88e8f13d807030519a37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(C <> D).",
            "VernacExtend",
            "cd208883812af04678e3be804bef961f988a0eb2"
        ],
        [
            "unfold Parallelogram_flat in H0.",
            "VernacExtend",
            "791732c4877ed0afdd5d3d0f8ef96fe3b96d5f02"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_identity in H3.",
            "VernacExtend",
            "66e848f8fbf6e4694366f8121b8567650ff35782"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(E <> F).",
            "VernacExtend",
            "7350cbaab0192dd33b9ea7816481c417a1da2867"
        ],
        [
            "unfold Parallelogram_flat in H1.",
            "VernacExtend",
            "c4c9e5e351aaaaf9d8483800ecc75bfc3c7dfba8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(HH:=plgs_existence C D H2).",
            "VernacExtend",
            "71b58ca61eb2098caecd7f6d56e7c41184317efa"
        ],
        [
            "ex_and HH D'.",
            "VernacExtend",
            "c503a5f59fe14f43849bd66370bdfde2b252b48b"
        ],
        [
            "ex_and H4 C'.",
            "VernacExtend",
            "5e457575cd7bdd1128982abab35b55ad94ca418c"
        ],
        [
            "assert(Parallelogram_strict A B C' D').",
            "VernacExtend",
            "2b46c90cfa742931db1a67da0b71ca127178cd6e"
        ],
        [
            "eapply (plgf_plgs_trans A B C D); auto.",
            "VernacExtend",
            "2045de82828195b0ae1754caa8754a446ebc53a2"
        ],
        [
            "assert(Parallelogram_strict E F C' D').",
            "VernacExtend",
            "e3667be4d9c2b3f7391c6221734c68d1befcbaa1"
        ],
        [
            "eapply (plgf_plgs_trans E F C D); auto.",
            "VernacExtend",
            "6fe758db49a6cbfc54437b6132e214238f736283"
        ],
        [
            "apply plgf_sym.",
            "VernacExtend",
            "26763d662c82789cfc1178845a9159314eb4628b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Parallelogram A B F E).",
            "VernacExtend",
            "4ac9ace84bea098738e95a871e18ae9695473d2e"
        ],
        [
            "eapply plgs_pseudo_trans.",
            "VernacExtend",
            "5b258bef4ff7b9551ca8e2da1e14b2547683c7d5"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply plgs_sym.",
            "VernacExtend",
            "e7175e1fcab158fa8ca51f46e3152c78cb8ec006"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "unfold TS in H7.",
            "VernacExtend",
            "b75221911ade4858c208f61d6a8d248586e176c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Parallelogram_flat in *.",
            "VernacExtend",
            "f4b11e3584298f814d342e06af0a7cb38cd654da"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assert(Col C D A).",
            "VernacExtend",
            "33d24e7867ee9666e4612c19a2321f3525944005"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert(Col C D B).",
            "VernacExtend",
            "058168466db817ad931aef02c3b37d62b05c6788"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply (col3 C D); Col.",
            "VernacExtend",
            "481b33b993f9655cf716a4944b7d14927d0111d0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plg_pseudo_trans : forall A B C D E F, Parallelogram A B C D -> Parallelogram C D E F -> Parallelogram A B F E \\/ (A = B /\\ C = D /\\ E = F /\\ A = E).",
            "VernacStartTheoremProof",
            "9f69ee1841a71973f8fcb0984be4aadfb21d9c85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(C = D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "assert(HH:=plgf_trivial_neq A C D H).",
            "VernacExtend",
            "f4e8950777cadcdf469e848488058568c98630c9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "unfold Parallelogram_strict in H0.",
            "VernacExtend",
            "fa946a51c8b0a797766cd5ca922bed287f49342c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(E=F).",
            "VernacExtend",
            "f4c1b10c413899d233f993ff77d48ab9d9a51348"
        ],
        [
            "assert(HH:=plgf_trivial_neq C E F H0).",
            "VernacExtend",
            "321cb37dfbca52de85f81863f8fbe2426d561c79"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "induction (eq_dec_points A E).",
            "VernacExtend",
            "e1f14a759ec5ae20351154492f8fee747766fad5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply plg_trivial1.",
            "VernacExtend",
            "73af8f107089f90bb74fde623b861b2773abbb82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(C <> D).",
            "VernacExtend",
            "cd208883812af04678e3be804bef961f988a0eb2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply plgf_sym in H.",
            "VernacExtend",
            "83516c7d19c673e9857cc51da2df03deb2bdef9a"
        ],
        [
            "apply plgf_trivial_neq in H.",
            "VernacExtend",
            "49e23f13eb6f7ca69dd6fe22b486ee961bdee962"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(E <> F).",
            "VernacExtend",
            "7350cbaab0192dd33b9ea7816481c417a1da2867"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "unfold Parallelogram_strict in H0.",
            "VernacExtend",
            "fa946a51c8b0a797766cd5ca922bed287f49342c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply plgf_sym in H0.",
            "VernacExtend",
            "a5322d31daf20d839df0eb468567607f0c15fbc3"
        ],
        [
            "apply plgf_trivial_neq in H0.",
            "VernacExtend",
            "0843b84abcd88a4b5d93440868ba937b3acd303b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "induction H; induction H0.",
            "VernacExtend",
            "906d854a3604cfb4b09d2dda63951fbe39ea3457"
        ],
        [
            "eapply plgs_pseudo_trans.",
            "VernacExtend",
            "5b258bef4ff7b9551ca8e2da1e14b2547683c7d5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply plgs_sym.",
            "VernacExtend",
            "e7175e1fcab158fa8ca51f46e3152c78cb8ec006"
        ],
        [
            "apply (plgf_plgs_trans F E D C);auto.",
            "VernacExtend",
            "831f7d476071d2a05b009d154915edf4ac525562"
        ],
        [
            "apply plgf_comm2.",
            "VernacExtend",
            "07cc8440ea9683dd0f45b0a805acbea95a1d8749"
        ],
        [
            "apply plgf_sym.",
            "VernacExtend",
            "26763d662c82789cfc1178845a9159314eb4628b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply plgs_comm2.",
            "VernacExtend",
            "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
        ],
        [
            "apply plgs_sym.",
            "VernacExtend",
            "e7175e1fcab158fa8ca51f46e3152c78cb8ec006"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply (plgf_plgs_trans A B C D E F); auto.",
            "VernacExtend",
            "57dd9f9ade02eb955dfc6a3270c10b6e80a48807"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply (plgf_plgf_plgf A B C D E F); auto.",
            "VernacExtend",
            "0f761a611ec0c6b129768727a5c8730b890453bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Square_Rhombus : forall A B C D, Square A B C D -> Rhombus A B C D.",
            "VernacStartTheoremProof",
            "0d1cd62fcdb636f4698044030781f590b00cdebc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rhombus.",
            "VernacExtend",
            "b48de8f087863804e0bc35e4462514721dbc3cf8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Square_Parallelogram in H.",
            "VernacExtend",
            "6ade7ea7e2d3aa782a8d3232552a2c923e4f1715"
        ],
        [
            "apply parallelogram_to_plg in H.",
            "VernacExtend",
            "7e8dbf681525a304311759597df91053b7329dd1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Square in H.",
            "VernacExtend",
            "91feb00ecbf9c3c3a3873d9cf38a7713191b784b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plgs_in_angle : forall A B C D, Parallelogram_strict A B C D -> InAngle D A B C.",
            "VernacStartTheoremProof",
            "37f4f500b8dc1ef013a90c5b0cbc98d382442a69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Plg A B C D).",
            "VernacExtend",
            "b26f76f0f9f18f18c939751a8ecedcea8a9b8411"
        ],
        [
            "apply parallelogram_to_plg.",
            "VernacExtend",
            "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Parallelogram_strict in H.",
            "VernacExtend",
            "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
        ],
        [
            "unfold Plg in H0.",
            "VernacExtend",
            "4c29d236f3fb6b7ac89f80e490845ce8c2ae328a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H1 M.",
            "VernacExtend",
            "10432ba9c543fbbd07c9d867f8faf1bf7ddceb46"
        ],
        [
            "assert(A <> B /\\ C <> B).",
            "VernacExtend",
            "3e0bcdff7ad04e3c6d41d43170d350e9a0d184a5"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; intro; subst B; apply H; Col.",
            "VernacExtend",
            "0e2de4d80a6467e62744a0bc799768a31075c8e4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold TS in HH.",
            "VernacExtend",
            "5d730ec8ab2a61acc4d8f44228faa3c07fe10794"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H9 T.",
            "VernacExtend",
            "c5558837538dcee4d280a099bd2f55da18287e43"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply l7_3 in H4.",
            "VernacExtend",
            "22eadbdaeb52e0a9fb5ae6e5c52ea502fa94ba1a"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply midpoint_bet in H1.",
            "VernacExtend",
            "0c96b2e03d2b6933939f7f8b3dded3076af151e4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_symmetry in H11.",
            "VernacExtend",
            "b33031bc9c1cfeb15e7fe07ba7cb60adc41f4e01"
        ],
        [
            "apply cong_identity in H11.",
            "VernacExtend",
            "37a4c174e081764ed8fbd03de45502bad74ba7e8"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_identity in H10.",
            "VernacExtend",
            "6c861648d5cb88172f8a5301b3e3dcfb684c9142"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_identity in H10.",
            "VernacExtend",
            "6c861648d5cb88172f8a5301b3e3dcfb684c9142"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_par_cong_cong_parallelogram : forall A B C D, B<>D -> Cong A B C D -> Cong B C D A -> Par B C A D -> Par A B C D -> Parallelogram A B C D.",
            "VernacStartTheoremProof",
            "c9b63789f1835f5f76750b0bc5937e612edfc6af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Parallelogram A B C D \\/ Parallelogram A B D C) by (apply par_cong_plg_2;finish).",
            "VernacExtend",
            "2cf628124b1e726ed30acd31274efc9c32cf9574"
        ],
        [
            "assert (Parallelogram B C A D \\/ Parallelogram B C D A) by (apply par_cong_plg_2;finish).",
            "VernacExtend",
            "d86f0b6ecfad43c23931dc02aca921dfadf2d88a"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "apply Plg_perm in H4.",
            "VernacExtend",
            "7b8d7182e6daae54f1fb09bd1e8f0f581ec75ccb"
        ],
        [
            "apply Plg_perm in H5.",
            "VernacExtend",
            "4e682c69417972c7d46b392eccc6827d8d4da39c"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply plg_not_comm in H8.",
            "VernacExtend",
            "8da0bbe43fd0bd736c8dbef62fbcc0bba5034d62"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Plg_perm in H5.",
            "VernacExtend",
            "4e682c69417972c7d46b392eccc6827d8d4da39c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma degenerated_rect_eq : forall A B C, Rectangle A B B C -> A = C.",
            "VernacStartTheoremProof",
            "2ed63bf7372421e3228c2d9760dbfa1eb5719254"
        ],
        [
            "intros A B C HRect.",
            "VernacExtend",
            "2fb8aa9a9e9dd5a63511836775a38297fd9d342c"
        ],
        [
            "apply Rectangle_Parallelogram in HRect; apply plg_mid in HRect.",
            "VernacExtend",
            "2dd4013d7bdc44979427ffbe0a1f228572fb0f62"
        ],
        [
            "destruct HRect as [M [HMid1 HMid2]]; treat_equalities; auto.",
            "VernacExtend",
            "6b7a468cbf5c132c2cdb796528b66c37ad0c5079"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rect_2_rect : forall A B C1 C2 D1 D2, A <> B -> Rectangle A B C1 D1 -> Rectangle A B C2 D2 -> Rectangle C1 D1 D2 C2.",
            "VernacStartTheoremProof",
            "e6dacb3371464a375a126869ef98dd6b55e8100e"
        ],
        [
            "intros A B C1 C2 D1 D2 HDiff HRect1 HRect2.",
            "VernacExtend",
            "ce0a8e0cfd329cca8ae3c84e70e4e259414c6397"
        ],
        [
            "elim (eq_dec_points C1 C2); intro HC1C2; treat_equalities.",
            "VernacExtend",
            "54302aa39f34af6c1654eb849fe307ccd97dd915"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Rectangle_Parallelogram in HRect1; apply plg_mid in HRect1.",
            "VernacExtend",
            "98f9a1bc8b913cb490c350139a9a44c76550c224"
        ],
        [
            "apply Rectangle_Parallelogram in HRect2; apply plg_mid in HRect2.",
            "VernacExtend",
            "0a87cd7543263d81bf4e5aa23e9d451ed6f80e79"
        ],
        [
            "destruct HRect1 as [M [HMid1 HMid2]]; destruct HRect2 as [M' [HMid3 HMid4]].",
            "VernacExtend",
            "2aa7f5b19793eb52e5b0083fb890c140cda7be79"
        ],
        [
            "treat_equalities; split; Cong; apply parallelogram_to_plg.",
            "VernacExtend",
            "0497fe6d61861aa451d67f0e85b1351b7747eb66"
        ],
        [
            "apply plg_trivial; intro; treat_equalities; auto.",
            "VernacExtend",
            "edb125d5dc4fab1812843af693e36c6f57b84f6d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points B C1); intro HBC1; elim (eq_dec_points B C2); intro HBC2; treat_equalities; [intuition|apply degenerated_rect_eq in HRect1; treat_equalities| apply degenerated_rect_eq in HRect2; treat_equalities|]; apply rect_comm2; auto; apply rect_comm2; do 2 (apply rect_permut); auto.",
            "VernacExtend",
            "f8f2af84312d7678fdcd92d2685ea2b3c7e75655"
        ],
        [
            "assert (HPara1 := HRect1); apply Rectangle_Parallelogram in HPara1.",
            "VernacExtend",
            "1b678427322e986a2c73ac7d12c08d3ed5b718cf"
        ],
        [
            "assert (HPara2 := HRect2); apply Rectangle_Parallelogram in HPara2.",
            "VernacExtend",
            "ea332864de31d43fe9cf6df7de40bddbf8e973cc"
        ],
        [
            "assert (HNC1 : ~ Col A B C1) by (apply rect_per2 in HRect1; apply per_not_col; auto).",
            "VernacExtend",
            "23f37428f506cbc393efd461a9f9d227ba710138"
        ],
        [
            "assert (HNC2 : ~ Col A B C2) by (apply rect_per2 in HRect2; apply per_not_col; auto).",
            "VernacExtend",
            "123fded4599e72b66492bc0a11728a0cadcefff7"
        ],
        [
            "apply plg_per_rect2.",
            "VernacExtend",
            "98532c11fac199369d4a4a94c9c3b89ea3040ff2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HPara1; clear HPara1; intro HPara1; [|unfold Parallelogram_flat in HPara1; spliter; intuition].",
            "VernacExtend",
            "ae5a7eeb4f83db3ca20d8affff6d62801f949ea2"
        ],
        [
            "elim HPara2; clear HPara2; intro HPara2; [|unfold Parallelogram_flat in HPara2; spliter; intuition].",
            "VernacExtend",
            "c9bb592e7ce3d3a70577e0881ab5579d3baf8de6"
        ],
        [
            "apply parallelogram_to_plg; apply plgs_pseudo_trans with B A; apply plgs_comm2; auto; do 2 (apply plgs_permut); auto.",
            "VernacExtend",
            "0ed3506c450cd78349fdd886c18f3e57c37a9a68"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (cop_dec A B C1 C2); intro HCop.",
            "VernacExtend",
            "ae41fa1cce620135412dbe6169cb18d095e629e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_per_1; auto; apply perp_sym; apply cop_par_perp__perp with A B; Cop; apply plg_par_1 in HPara2; Par; clear HPara1; clear HPara2.",
            "VernacExtend",
            "42fd2f7949496a3e91828af3bd390b359f893c32"
        ],
        [
            "apply rect_per2 in HRect1; apply rect_per2 in HRect2.",
            "VernacExtend",
            "ee915c8cd4c0a43c8e02f2cd44fcbf5aa9d7a975"
        ],
        [
            "assert (HCol : Col C1 C2 B) by (apply cop_per2__col with A; Perp; Cop).",
            "VernacExtend",
            "8cee551f1411cf15bf8d1f2e114805597fd9d6d8"
        ],
        [
            "apply perp_col0 with B C1; Col; apply per_perp in HRect1; Perp.",
            "VernacExtend",
            "676e04015c53ce397f4ec9d2dcbf36afcd5a766f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply rect_per in HRect1; apply rect_per in HRect2; spliter.",
            "VernacExtend",
            "09d62300d98c5467f379d574a834e0311c96efb8"
        ],
        [
            "destruct (eq_dec_points C2 D2); [subst; Perp|].",
            "VernacExtend",
            "aae285990d5d6e3e78755f638e9a2aeb5e90ccc5"
        ],
        [
            "assert (HOrth : Orth_at C2 B C1 C2 C2 D2); [|destruct HOrth as [_ [_ [_ [_ HOrth]]]]; apply HOrth; Col; Cop].",
            "VernacExtend",
            "c42afab282c71d3221cdd1cf332954fff998cafe"
        ],
        [
            "apply l11_61_bis with B A; Perp; Cop.",
            "VernacExtend",
            "b0a32e744b68d8cce1d088841bb3af108b6922b2"
        ],
        [
            "apply l11_60_bis; Perp; Cop.",
            "VernacExtend",
            "f57a881bf22c906c771088f33b7635f2648c675c"
        ],
        [
            "apply ncop__ncol with A; Cop.",
            "VernacExtend",
            "ce785aab6c4e06943d0bd6248b85f67f25bb764a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol123_plg__plgs : forall A B C D, ~ Col A B C -> Parallelogram A B C D -> Parallelogram_strict A B C D.",
            "VernacStartTheoremProof",
            "dd74e68cb097f7d8959b4aae40d58b891cb38310"
        ],
        [
            "intros A B C D HNC H; induction H; auto.",
            "VernacExtend",
            "381ddd6fd72a6fe03ce1c1544893713872e10dba"
        ],
        [
            "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; Col.",
            "VernacExtend",
            "867b63e99d24d5eef7c193987ec121963d034be7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol124_plg__plgs : forall A B C D, ~ Col A B D -> Parallelogram A B C D -> Parallelogram_strict A B C D.",
            "VernacStartTheoremProof",
            "d820cae498aa79e9bf438e8e9f06b99155d47d95"
        ],
        [
            "intros A B C D HNC H; induction H; auto.",
            "VernacExtend",
            "381ddd6fd72a6fe03ce1c1544893713872e10dba"
        ],
        [
            "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; Col.",
            "VernacExtend",
            "867b63e99d24d5eef7c193987ec121963d034be7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol134_plg__plgs : forall A B C D, ~ Col A C D -> Parallelogram A B C D -> Parallelogram_strict A B C D.",
            "VernacStartTheoremProof",
            "5e711db0f30d03f0a7892b127a74e7ad3a3fa545"
        ],
        [
            "intros A B C D HNC H; induction H; auto.",
            "VernacExtend",
            "381ddd6fd72a6fe03ce1c1544893713872e10dba"
        ],
        [
            "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; assert_diffs; ColR.",
            "VernacExtend",
            "9a32089bc8f8bcba1554ba7ff6b7ad90dcd5c9b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol234_plg__plgs : forall A B C D, ~ Col B C D -> Parallelogram A B C D -> Parallelogram_strict A B C D.",
            "VernacStartTheoremProof",
            "d5bd837a7fe5f96a628674a7502ad2195b428028"
        ],
        [
            "intros A B C D HNC H; induction H; auto.",
            "VernacExtend",
            "381ddd6fd72a6fe03ce1c1544893713872e10dba"
        ],
        [
            "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; assert_diffs; ColR.",
            "VernacExtend",
            "9a32089bc8f8bcba1554ba7ff6b7ad90dcd5c9b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol123_plg__pars1234 : forall A B C D, ~ Col A B C -> Parallelogram A B C D -> Par_strict A B C D.",
            "VernacStartTheoremProof",
            "2b6e34476ac51e4e2ca93bd01d1a7a6809ba4afa"
        ],
        [
            "intros; apply plgs_pars_1; apply ncol123_plg__plgs; auto.",
            "VernacExtend",
            "449ea7b088421ba1f9308bec11988c6c03196a27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol124_plg__pars1234 : forall A B C D, ~ Col A B D -> Parallelogram A B C D -> Par_strict A B C D.",
            "VernacStartTheoremProof",
            "3096aa05c3bfbaabfc17e2a0862e72767da57f9c"
        ],
        [
            "intros; apply plgs_pars_1; apply ncol124_plg__plgs; auto.",
            "VernacExtend",
            "c5627b7886987c281f21da6fcaf839c5c302a4ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol134_plg__pars1234 : forall A B C D, ~ Col A C D -> Parallelogram A B C D -> Par_strict A B C D.",
            "VernacStartTheoremProof",
            "2ec346533479359f62cfb7e25ea52febe0a93425"
        ],
        [
            "intros; apply plgs_pars_1; apply ncol134_plg__plgs; auto.",
            "VernacExtend",
            "ba8cdb9638d7d2ff612c079462885b181cc15017"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol234_plg__pars1234 : forall A B C D, ~ Col B C D -> Parallelogram A B C D -> Par_strict A B C D.",
            "VernacStartTheoremProof",
            "5df7570d5cad9e33946053f37950238a9991a84b"
        ],
        [
            "intros; apply plgs_pars_1; apply ncol234_plg__plgs; auto.",
            "VernacExtend",
            "491e9bde1743301224446b013351656b28ff02a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol123_plg__pars1423 : forall A B C D, ~ Col A B C -> Parallelogram A B C D -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "391e0c440a608cc698618e0bc2be885fb5bae2c5"
        ],
        [
            "intros; apply plgs_pars_2; apply ncol123_plg__plgs; auto.",
            "VernacExtend",
            "4d28bec1fee055fac84ebf51c084a2fa0c79a786"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol124_plg__pars1423 : forall A B C D, ~ Col A B D -> Parallelogram A B C D -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "cdd282f2c135f593dc553846fa15dd18fea22f78"
        ],
        [
            "intros; apply plgs_pars_2; apply ncol124_plg__plgs; auto.",
            "VernacExtend",
            "cf7a504f583cbb2617dae9d1714da5094aa4ba93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol134_plg__pars1423 : forall A B C D, ~ Col A C D -> Parallelogram A B C D -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "a7fdfd94127b7a06876c1d3448508f6f48933b03"
        ],
        [
            "intros; apply plgs_pars_2; apply ncol134_plg__plgs; auto.",
            "VernacExtend",
            "6e65d0d6fc45b2fb52818ce67749492472cb70d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol234_plg__pars1423 : forall A B C D, ~ Col B C D -> Parallelogram A B C D -> Par_strict A D B C.",
            "VernacStartTheoremProof",
            "536e843bfaacf3532602962c52ce930ceceabccc"
        ],
        [
            "intros; apply plgs_pars_2; apply ncol234_plg__plgs; auto.",
            "VernacExtend",
            "e0692497075fc07e0137541f38aa42edac4f6635"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sac_plg : forall A B C D, Saccheri A B C D -> Parallelogram A B C D.",
            "VernacStartTheoremProof",
            "02eeb123e20d61a72955736b6494b82c66810ce3"
        ],
        [
            "intros A B C D H.",
            "VernacExtend",
            "8a59f167d7ca5adb286875421e7b23f806c1ddf3"
        ],
        [
            "assert (T:=sac__par_strict1234 A B C D H).",
            "VernacExtend",
            "ff09bf981a27584a46420a3734c1e600e90b8e08"
        ],
        [
            "assert (U:=sac__par1423 A B C D H).",
            "VernacExtend",
            "7103c8ddd772d5a939c4eab6060391fc1cde4a6e"
        ],
        [
            "assert (V:=sac__par1234 A B C D H).",
            "VernacExtend",
            "70856c54ae29d599a6b8bfd313beba4cc6d29f21"
        ],
        [
            "apply par_2_plg;eauto using par_strict_not_col_1.",
            "VernacExtend",
            "5e8dbc7f882b8894b2a3b3c9f196c919e420bc5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sac_rectangle : forall A B C D, Saccheri A B C D -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "922f69db3142a8659c72c83d4206f788da4a8ecb"
        ],
        [
            "intros A B C D H.",
            "VernacExtend",
            "8a59f167d7ca5adb286875421e7b23f806c1ddf3"
        ],
        [
            "assert (Parallelogram A B C D) by (apply sac_plg;auto).",
            "VernacExtend",
            "246928224ce54de00750bcab37f4af00acb512b1"
        ],
        [
            "apply parallelogram_to_plg in H0.",
            "VernacExtend",
            "ea4019f820bc0f398032a474890f9da7006eeecf"
        ],
        [
            "apply plg_per_rect1.",
            "VernacExtend",
            "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Saccheri in H.",
            "VernacExtend",
            "380edb7f15253650c98787114795452ba77a6828"
        ],
        [
            "spliter;finish.",
            "VernacExtend",
            "510e643bc7b17e61eec9b389692fe927ec972c19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_square : forall A B, A<>B -> exists C D, Square A B C D.",
            "VernacStartTheoremProof",
            "b5d58be52804bff681414b81c8055aba919072e1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (exists_cong_per A B A B) as [C [HC1 HC2]].",
            "VernacExtend",
            "9f6e355325f55be4032ac56e3e3f4ee3085fe447"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (per__ex_saccheri B C A) as [D HSac]; Perp.",
            "VernacExtend",
            "7b53aeecbb31e1e7c04bec468a9195bf6c4f12de"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "assert (Rectangle B C D A) by (apply sac_rectangle;auto).",
            "VernacExtend",
            "f9a5fe02c9aa36bea3d24e9cd8361f38cd77ba4d"
        ],
        [
            "unfold Square;split.",
            "VernacExtend",
            "09ef798318dd3b40396d1604e706e2076b111da5"
        ],
        [
            "auto using rect_permut.",
            "VernacExtend",
            "71f8715949c7df17f72f3a413f96fb06c733bd51"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quadrilateral_inter_dec_3.",
            "VernacEndSegment",
            "72ad5f150dac4c4e575405f54dd69c52bf26e410"
        ],
        [
            "Section Quadrilateral_inter_dec_2D.",
            "VernacBeginSection",
            "97df3e4c91e7a19b5aa68b1a15d87c378f5fd8dd"
        ],
        [
            "Context `{T2D:Tarski_2D}.",
            "VernacContext",
            "14f267f1df37e6960d41f261868f4676668c9138"
        ],
        [
            "Context `{TE:@Tarski_euclidean Tn TnEQD}.",
            "VernacContext",
            "5ad1417170f9ae7b67f04abe0a42de7ad9b88135"
        ],
        [
            "Lemma perp3__perp : forall A B C D, Perp A B B C -> Perp B C C D -> Perp C D D A -> Perp D A A B.",
            "VernacStartTheoremProof",
            "65b904628a978f513e0172e4dc6ad012387fef34"
        ],
        [
            "intros A B C D.",
            "VernacExtend",
            "3cb4bc40e6b9225fee518467022fc0ed8d5c094f"
        ],
        [
            "apply cop_perp3__perp, all_coplanar.",
            "VernacExtend",
            "f02ee95c7050215715c8858838be4b5a66698e4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp3__rect : forall A B C D, Perp A B B C -> Perp B C C D -> Perp C D D A -> Rectangle A B C D.",
            "VernacStartTheoremProof",
            "31a49aa6aa4db3f04e81c344999950fd1b9adde1"
        ],
        [
            "intros A B C D.",
            "VernacExtend",
            "3cb4bc40e6b9225fee518467022fc0ed8d5c094f"
        ],
        [
            "apply cop_perp3__rect, all_coplanar.",
            "VernacExtend",
            "67e9a9379a1a60a629b7e460cbe2021a88516729"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Quadrilateral_inter_dec_2D.",
            "VernacEndSegment",
            "9d5681ec2f8aaab421240b5d35d65c4e71a429d2"
        ]
    ],
    "proofs": [
        {
            "name": "par_strict_cong_mid",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros A B A' B' HParS HCong.",
                        "VernacExtend",
                        "01495c7e5c9916ad5da5f410502d5aca656232c1"
                    ]
                },
                {
                    "command": [
                        "assert (HP:=parallel_uniqueness).",
                        "VernacExtend",
                        "03f6d88cb389fbe44e873b2dadef9ba4db1d5a7b"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A A') as [M1 HM1].",
                        "VernacExtend",
                        "091a511bd6a3c8b95772308c93f7c5c3bb8b17ae"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction B M1) as [B'' HB''].",
                        "VernacExtend",
                        "c42effffcea7429ba249c0a2363bd951d0b414b3"
                    ]
                },
                {
                    "command": [
                        "assert (HCol1 : Col B'' A' B').",
                        "VernacExtend",
                        "63aa0eebe7fd5ddb35c20997badc3b93c1ee0b36"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Col A' A' B' /\\ Col B'' A' B'); try (spliter; Col).",
                        "VernacExtend",
                        "3c5c934288db5d47b698f4dbbf76f5378d0c8165"
                    ]
                },
                {
                    "command": [
                        "assert (HPar := par_strict_par A B A' B' HParS); apply HP with A B A'; Col; unfold Par_strict in HParS; spliter; apply l12_17 with M1; Col.",
                        "VernacExtend",
                        "05701083fe4ae37c26e625c2874181526912433d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCong1 : Cong A' B' A' B'') by (assert (H := l7_13 M1 A' B'' A B HM1 HB''); eCong).",
                        "VernacExtend",
                        "6e24f1a4119f27d195dbca5cc211b70f3c9db133"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A B') as [M2 HM2].",
                        "VernacExtend",
                        "477c3f1647bc7bfda75b5c5f01bd32d1726b9280"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction B M2) as [A'' HA''].",
                        "VernacExtend",
                        "f474062e1b0e116592de2b933c7153d93ce60e4e"
                    ]
                },
                {
                    "command": [
                        "assert (HCol2 : Col A'' A' B').",
                        "VernacExtend",
                        "b6fb7d2192679fb647a84f22c7434f09c8add599"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Col B' A' B' /\\ Col A'' A' B'); try (spliter; Col).",
                        "VernacExtend",
                        "d791a650e9cafc316f050143a030e011adb67950"
                    ]
                },
                {
                    "command": [
                        "assert (HPar := par_strict_par A B A' B' HParS); apply HP with A B B'; Col; unfold Par_strict in HParS; spliter; apply l12_17 with M2; Col.",
                        "VernacExtend",
                        "cbdda27ad22f4cf49b9c37b6c3572fb11ae42d16"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCong2 : Cong A' B' B' A'') by (assert (H := l7_13 M2 B' A'' A B HM2 HA''); eCong).",
                        "VernacExtend",
                        "fb953957502f80c693a5a602e1caf8118759a7f8"
                    ]
                },
                {
                    "command": [
                        "elim (l7_20 A' B' B''); Col; intro HElim1; treat_equalities.",
                        "VernacExtend",
                        "45bd93b7876f5ebaf8f79b6c238443a00869afb6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists M1; left; Col.",
                        "VernacExtend",
                        "252ec61fe5256ae9e8d7b0aefc5ae30f5861f6bb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim (l7_20 B' A' A''); Cong; Col; intro HElim2; treat_equalities.",
                        "VernacExtend",
                        "6ba20999dbf397f74d03019373cad666c4ce9faf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists M2; right; Col.",
                        "VernacExtend",
                        "ad205d7e48e2f37df1a3280ce152309c6ec7a087"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exfalso; destruct (outer_pasch B' A A' B'' M1) as [I [HAIB' HA''IM1]]; unfold Midpoint in*; spliter; Between.",
                        "VernacExtend",
                        "a972df3f7203e182c31e5ad5740c2e638fd99bec"
                    ]
                },
                {
                    "command": [
                        "assert (HM1I : M1 <> I).",
                        "VernacExtend",
                        "e303721b452b4524304b8da19c177962976577a6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "show_distinct A M1; apply HParS; exists A; split; Col; assert_cols; ColR.",
                        "VernacExtend",
                        "9c5d26713352c96032bd3646b51a567ec9eabfea"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HB''M1 : B'' <> M1).",
                        "VernacExtend",
                        "33e4ebbdd0107db03da211dd49d313aef8f81bfe"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HParS; exists B; assert_cols; Col.",
                        "VernacExtend",
                        "6347e1c1062cdf5d4bd02d78bd49394d27549977"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "elim (l5_2 B'' M1 I B); Between; intro HBM1I.",
                        "VernacExtend",
                        "82d7960af6ddbb3a3dc16b3c4060a55d3e8d7bb9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse : TS A B' B A'').",
                        "VernacExtend",
                        "155a91687def06c59e7a7ace33321ea589c4d566"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists B'; Col).",
                        "VernacExtend",
                        "1c7fde2f3c8103aeb1183d7c20bab46bb33fa9a3"
                    ]
                },
                {
                    "command": [
                        "show_distinct B' A''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "b0cdcfd4162f950070dc935f25cd6c1e7ab81061"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "exists M2; assert_cols; Col.",
                        "VernacExtend",
                        "c28f55c96afa08468b3b9a177e41dc202df6c6ac"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in HFalse; apply HFalse; clear HFalse.",
                        "VernacExtend",
                        "68ae491558103e41822c13cab18663536070b865"
                    ]
                },
                {
                    "command": [
                        "exists A'; split.",
                        "VernacExtend",
                        "9809eda3d2e6c167c20b0690b7c5431f2d397982"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_2; apply l9_8_2 with B''.",
                        "VernacExtend",
                        "ec392613d4e406795b239a6e49041aae252b41a1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "show_distinct B' B''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "73651d96db823a215e9fa100c55432108a172959"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists B'; split; Col).",
                        "VernacExtend",
                        "f28b143e4a14ea5bee02f5b042349a7ee9f6afb2"
                    ]
                },
                {
                    "command": [
                        "exists I; assert_cols; split; Col; eBetween.",
                        "VernacExtend",
                        "c4603dae1a5f3952c190b87a8c4855f57f0af6d6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_19 with B'; Col; try (intro; treat_equalities; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "dfccf62f487f80f6c64a2cc5f38fe6a0021c0f1c"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "show_distinct B' B''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "73651d96db823a215e9fa100c55432108a172959"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "show_distinct B' A''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "b0cdcfd4162f950070dc935f25cd6c1e7ab81061"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
                    ]
                },
                {
                    "command": [
                        "exists B'; split; Col; Between.",
                        "VernacExtend",
                        "a2af6cf5bbc8595116879a6e660813877528f865"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse : OS A A' B B').",
                        "VernacExtend",
                        "3345a04da1388024b81e2aa9c043d3a1a3a01db7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists B''; split.",
                        "VernacExtend",
                        "d6e10257255ad55747eceeef0d5083f14799ee97"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A'; Col).",
                        "VernacExtend",
                        "051b90d706361269a684e91b07425f316c4b9eb4"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "585eb2028bc3b76a8f4ef2de92c2965c653dd51e"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "exists M1; assert_cols; Col.",
                        "VernacExtend",
                        "57e67b232187867ee0fbbe0259bc7c54b260b30a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "585eb2028bc3b76a8f4ef2de92c2965c653dd51e"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "exists A'; Col.",
                        "VernacExtend",
                        "2babf274cd4086e69b8a5a5501b304aaab1db80f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l9_9_bis in HFalse; apply HFalse; clear HFalse; apply l9_31.",
                        "VernacExtend",
                        "3532120ba1c2104ee60ddde1077e765566804d93"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; Col.",
                        "VernacExtend",
                        "a2a9af06f85cafc78d9c9dbeebab0220f26eb770"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with B''.",
                        "VernacExtend",
                        "d616ea631c1e321fafeae956b6c3ffdb8a45c9ff"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_19 with B'; Col; try (intro; treat_equalities; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "dfccf62f487f80f6c64a2cc5f38fe6a0021c0f1c"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "a1596fcc2cef5636949e4f2c88cabd1334d5ff2b"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "83649c5ecbf3230d470c9207dd4db0441ff8aa05"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; apply HParS; exists A; Col); Between.",
                        "VernacExtend",
                        "d49e6bf76bd8a47625b31b999b410096cecc869a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_cols; apply l9_19 with I; Col; try ColR; try (intro; treat_equalities; apply HParS; exists A; Col).",
                        "VernacExtend",
                        "0fdb5b19a03166fe7059f109fe35cc46df0b6ecd"
                    ]
                },
                {
                    "command": [
                        "show_distinct A' B'; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "ac59cbfe42524533a224cb884598a66957b3efd3"
                    ]
                },
                {
                    "command": [
                        "show_distinct B' B''; try (apply HParS; exists A; Col).",
                        "VernacExtend",
                        "73651d96db823a215e9fa100c55432108a172959"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HParS; exists A; split; Col; assert_cols; ColR).",
                        "VernacExtend",
                        "72e576d1d5cdffcfe33906003cd7e505fda0e308"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; apply HParS; assert_cols; exists B'; Col).",
                        "VernacExtend",
                        "687f4b6e93f9ff6e5bf8f9558e32e7ca8ce41d1d"
                    ]
                },
                {
                    "command": [
                        "eBetween.",
                        "VernacExtend",
                        "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_strict_cong_mid1",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in HH.",
                        "VernacExtend",
                        "a1cfde0998218aeac998e7eaa5d4f8c20ba6f08c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__one_or_two_sides A A' B B').",
                        "VernacExtend",
                        "7ed37a6f4e2fafcbeb362b5d2c1cba381447e1c6"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=par_cong_mid_ts A B A' B' H H0 H5).",
                        "VernacExtend",
                        "4c21a4c8324936955256720df4df1ece00993134"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=par_cong_mid_os A B A' B' H H0 H5).",
                        "VernacExtend",
                        "189fc58d4f994e7b19acc51dccee921865687e96"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong_mid",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_cong_mid; try assumption.",
                        "VernacExtend",
                        "7a1e65f74b55b394bc1278f3affdfaac5bfe1299"
                    ]
                },
                {
                    "command": [
                        "apply col_cong_mid.",
                        "VernacExtend",
                        "2ded0444da9a7d867627cb4afea62948255511a6"
                    ]
                },
                {
                    "command": [
                        "unfold Par.",
                        "VernacExtend",
                        "642acbae322dbde53b6e91408a0d5df9c103d66b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H1.",
                        "VernacExtend",
                        "8646690346cd1eda6e4c1123e6227909d6d0b842"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ts_cong_par_cong_par",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "intros A B A' B' HTS HCong HPar.",
                        "VernacExtend",
                        "b348f5829d16d65494b316cc7954a8c48b245b0f"
                    ]
                },
                {
                    "command": [
                        "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in *; spliter; Col).",
                        "VernacExtend",
                        "7319c905cdfc11ef1eadb32f20f84efb3a2453d9"
                    ]
                },
                {
                    "command": [
                        "destruct (par_cong_mid A B A' B') as [M HM]; Col.",
                        "VernacExtend",
                        "bd3406f3da89c9f7d8a1f0af79a5613ba52aa8c9"
                    ]
                },
                {
                    "command": [
                        "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
                        "VernacExtend",
                        "c103f31d69992967f5ddebe1f83720c9c3799b76"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert(HAB' : A <> B') by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "e650b89d2311bafbb634d296a83a0de9da2c3e89"
                    ]
                },
                {
                    "command": [
                        "split; try apply l7_13 with M; try apply l12_17 with M; Midpoint.",
                        "VernacExtend",
                        "e3e398a512b15b9fd776849b584017b68bc57b6f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert(HAA' : A <> A') by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "e1c933bba43eaa7babb05727d7ffa912c1e84359"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
                        "VernacExtend",
                        "2e2d07a435e35ce3d3068f489af3133343c5faad"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
                        "VernacExtend",
                        "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
                    ]
                },
                {
                    "command": [
                        "assert (Par A A' B' B); Par; apply l12_17 with M; Midpoint.",
                        "VernacExtend",
                        "737cb75f66c2db9cc65f14495d4ae1a56e38365a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_cong",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "destruct HPara as [HTS [HCong HPar]]; split; Col.",
                        "VernacExtend",
                        "e6d297c8b8967fe4ec56e3fa5330495902af174c"
                    ]
                },
                {
                    "command": [
                        "destruct (ts_cong_par_cong_par A B C D) as [HCong' HPar']; Cong.",
                        "VernacExtend",
                        "5f329caf988b02ccaf9f9f67904ba81d4a4b47ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_cong",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply plgs_cong.",
                        "VernacExtend",
                        "9dbab27999c31215ec923d21457205147c42b6a7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply plgf_cong.",
                        "VernacExtend",
                        "8b9accfbe5c1fd140ffb57c35826259a823f35b8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rmb_cong",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Rhombus in H.",
                        "VernacExtend",
                        "bd1e576fd290a304069b4cbd28b4bd8565d7bc7d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= plg_to_parallelogram A B C D H).",
                        "VernacExtend",
                        "87906205a2b66e578211bdde59d3f2bacb84e96c"
                    ]
                },
                {
                    "command": [
                        "assert(HH1:= plg_cong A B C D HH).",
                        "VernacExtend",
                        "a625045ce31a00dfbbf7c03d7c967436c27b289f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with B C; Cong.",
                        "VernacExtend",
                        "84196df96279b7781915a93b94819a58a3f8a12a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_conga1",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cong3_conga; auto.",
                        "VernacExtend",
                        "397f25e3ba2fbd3549af8b80954c72862060259c"
                    ]
                },
                {
                    "command": [
                        "assert(HH := plg_to_parallelogram A B C D H1).",
                        "VernacExtend",
                        "bc1d2d54c4ee5dd86dcaab4cf1efc7996151dc46"
                    ]
                },
                {
                    "command": [
                        "apply plg_cong in HH.",
                        "VernacExtend",
                        "0e77752c7a68973653a60fc85ed5f6c6251daa37"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "os_cong_par_cong_par",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "assert(A <> B /\\ A <> A').",
                        "VernacExtend",
                        "a34d3c7592983c979a480112ebc3ec09d5e0d53f"
                    ]
                },
                {
                    "command": [
                        "unfold OS in H.",
                        "VernacExtend",
                        "0ceff66c081ad02350f4a7c193cf5e7c07251364"
                    ]
                },
                {
                    "command": [
                        "ex_and H C.",
                        "VernacExtend",
                        "65cb0c649677e580014a6be0e1757c4b0670bdd8"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H.",
                        "VernacExtend",
                        "cc0b5b58da828396f886d519b2f0c310639269ac"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst A'.",
                        "VernacExtend",
                        "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= (par_strict_cong_mid1 A B A' B' H1 H0 )).",
                        "VernacExtend",
                        "5ebac4df552645bef5486197d0cfce0852d5a03f"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H4.",
                        "VernacExtend",
                        "de9105e1787a49a935e891e69840dca47dda6bce"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 M.",
                        "VernacExtend",
                        "39b0fcdf0d270f8eb1f6ee33bc9799942e932333"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= mid_par_cong A B B' A' M H2 H3).",
                        "VernacExtend",
                        "12fe7a3e4fca07e9cd3b6909bc52acadd4c1beda"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A B B' A' /\\ Cong A A' B' B /\\ Par A B B' A' /\\ Par A A' B' B).",
                        "VernacExtend",
                        "b52bf4481e5c5134d5436df7a9b284bfcb4fb63c"
                    ]
                },
                {
                    "command": [
                        "apply HH.",
                        "VernacExtend",
                        "cee39940038212d757baee03cd54f334d2d6adad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Par.",
                        "VernacExtend",
                        "204d3bc48478a206fd337c12d856085317b90ede"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold OS in H.",
                        "VernacExtend",
                        "0ceff66c081ad02350f4a7c193cf5e7c07251364"
                    ]
                },
                {
                    "command": [
                        "ex_and H C.",
                        "VernacExtend",
                        "65cb0c649677e580014a6be0e1757c4b0670bdd8"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H5.",
                        "VernacExtend",
                        "741ca389f60a4391f0a75987e3c2ca91e495e497"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_permut",
            "line_nb": 657,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "destruct HPara as [HTS [HCong HPar]].",
                        "VernacExtend",
                        "c30645558f35d9f3a3482786c92e498cbb5b698e"
                    ]
                },
                {
                    "command": [
                        "destruct (ts_cong_par_cong_par A B C D) as [HCong' HPar']; Col.",
                        "VernacExtend",
                        "2a355018ecd12635c5c3054cb38cc34637b3ca8b"
                    ]
                },
                {
                    "command": [
                        "destruct (par_cong_mid A B C D) as [M HM]; Col.",
                        "VernacExtend",
                        "c683423e629f6de1bb843ad23b60c4859a3bff21"
                    ]
                },
                {
                    "command": [
                        "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
                        "VernacExtend",
                        "c103f31d69992967f5ddebe1f83720c9c3799b76"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HAM : A <> M) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "814559cba383db3c40e62a420cf028d34f73d0d3"
                    ]
                },
                {
                    "command": [
                        "assert (HCM : C <> M) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "253f4f4f04fc079e5e1cd83745aa8186b2a7f1aa"
                    ]
                },
                {
                    "command": [
                        "assert (HBD : B <> D) by (assert (H:=not_two_sides_id B A C); intro; treat_equalities; Col).",
                        "VernacExtend",
                        "8a19218f35553f4cd832753e28dbfe066fc5e946"
                    ]
                },
                {
                    "command": [
                        "destruct HTS as [HAC [HABC HTS]]; assert_cols.",
                        "VernacExtend",
                        "82542ad7172d0de72621b905b79b0b1db7eae169"
                    ]
                },
                {
                    "command": [
                        "repeat try (split; Cong; Par; try (intro; apply HABC; ColR)).",
                        "VernacExtend",
                        "91137342a07d1c853b509697443ee420d4394d77"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter; exists M; split; Col; Between.",
                        "VernacExtend",
                        "439cdd0b2fca84c2b284c8fbe0c763daa3914f21"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
                    ]
                },
                {
                    "command": [
                        "assert(HAC : A <> C) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "2b004e835ba1cab2ecfbedffd3d92dc0ba1e14e7"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
                        "VernacExtend",
                        "2e2d07a435e35ce3d3068f489af3133343c5faad"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
                        "VernacExtend",
                        "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
                    ]
                },
                {
                    "command": [
                        "assert (Par A C D B); Par; apply l12_17 with M; Midpoint.",
                        "VernacExtend",
                        "84ec2aef150d44291a61926c103252ef56903e67"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_permut",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "elim HPara; clear HPara; intro HPara.",
                        "VernacExtend",
                        "cd66da42269ccd42e1b25bdcad358d7fc77f7575"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "left; apply plgs_permut; Col.",
                        "VernacExtend",
                        "2247a890c0b8b30473e1046095be0a9ed539c8da"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "right; apply plgf_permut; Col.",
                        "VernacExtend",
                        "17ae542eb13bf2dbd93c04eb9e816df1bee06d1d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_mid",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "destruct HPara as [HTS [HCong HPar]].",
                        "VernacExtend",
                        "c30645558f35d9f3a3482786c92e498cbb5b698e"
                    ]
                },
                {
                    "command": [
                        "destruct (par_cong_mid A B C D) as [M HM]; Col.",
                        "VernacExtend",
                        "c683423e629f6de1bb843ad23b60c4859a3bff21"
                    ]
                },
                {
                    "command": [
                        "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2]; try (exists M; Col).",
                        "VernacExtend",
                        "dc94a152e54f308a2884728db0996951d21677a0"
                    ]
                },
                {
                    "command": [
                        "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
                    ]
                },
                {
                    "command": [
                        "assert(HAC : A <> C) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "2b004e835ba1cab2ecfbedffd3d92dc0ba1e14e7"
                    ]
                },
                {
                    "command": [
                        "assert (HFalse := HTS); apply l9_9 in HFalse; exfalso; apply HFalse; clear HFalse.",
                        "VernacExtend",
                        "2e2d07a435e35ce3d3068f489af3133343c5faad"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HTS; spliter; apply l12_6; apply par_not_col_strict with B; Col.",
                        "VernacExtend",
                        "2c6769e0cb48dacbe33c9939fe28de1ea627fb35"
                    ]
                },
                {
                    "command": [
                        "assert (Par A C D B); Par; apply l12_17 with M; Midpoint.",
                        "VernacExtend",
                        "84ec2aef150d44291a61926c103252ef56903e67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_mid",
            "line_nb": 700,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "elim HPara; clear HPara; intro HPara.",
                        "VernacExtend",
                        "cd66da42269ccd42e1b25bdcad358d7fc77f7575"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply plgs_mid; Col.",
                        "VernacExtend",
                        "eb7b7660d3ca8f1b3a533927c10ad512eb4aa6c3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply plgf_mid; Col.",
                        "VernacExtend",
                        "42bc6c98f0e54396318c907cd752868e1024e4f5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_mid_2",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (plg_mid A B C D).",
                        "VernacExtend",
                        "b2162171bba134628db478577827eced68d3aee2"
                    ]
                },
                {
                    "command": [
                        "intros I' HI'.",
                        "VernacExtend",
                        "e2b3e676f28c56133924ddbfa756445b662b9cd5"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_not_comm",
            "line_nb": 719,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in *.",
                        "VernacExtend",
                        "1c81353e76d4343a43155e823fd254294a509987"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= ts_cong_par_cong_par A B C D H H4 H3).",
                        "VernacExtend",
                        "1ff266352524dfba3ede80e08abf4b8d22dce63d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Par_strict A D C B).",
                        "VernacExtend",
                        "609b4f4436de4e611ccc9e650c3dac0ca2467bb7"
                    ]
                },
                {
                    "command": [
                        "induction H6.",
                        "VernacExtend",
                        "d952b6a4752e23dd01aab6ed4b924826224b8867"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict.",
                        "VernacExtend",
                        "a2ccecd8e00b0539043d023883500e6648d8b9d6"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cop.",
                        "VernacExtend",
                        "4049659c0550a2da58c022f81b90fa72944250ad"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply l12_6 in H7.",
                        "VernacExtend",
                        "c1e464213682688a4de9621fee9bba4c20356324"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H0.",
                        "VernacExtend",
                        "5a50635b6fce705b0ce581f74f71037d0402f1ce"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry in H7.",
                        "VernacExtend",
                        "152737bd4cea1ef11301d0ca164581341de744bd"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=ts_cong_par_cong_par A B C D H H4 H3).",
                        "VernacExtend",
                        "1ff266352524dfba3ede80e08abf4b8d22dce63d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry in H6.",
                        "VernacExtend",
                        "93b8a8843c0d67ff06f67b3bb699b3c31e4f507b"
                    ]
                },
                {
                    "command": [
                        "assert(Par_strict C B A D).",
                        "VernacExtend",
                        "6334c9ccb378479f0fdde490af1acb954dbd68d4"
                    ]
                },
                {
                    "command": [
                        "induction H6.",
                        "VernacExtend",
                        "d952b6a4752e23dd01aab6ed4b924826224b8867"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict.",
                        "VernacExtend",
                        "a2ccecd8e00b0539043d023883500e6648d8b9d6"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cop.",
                        "VernacExtend",
                        "4049659c0550a2da58c022f81b90fa72944250ad"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H13.",
                        "VernacExtend",
                        "9696b87ee384fc17e17e6c753b792801086b845d"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply l12_6 in H7.",
                        "VernacExtend",
                        "c1e464213682688a4de9621fee9bba4c20356324"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H0.",
                        "VernacExtend",
                        "5a50635b6fce705b0ce581f74f71037d0402f1ce"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side in H7.",
                        "VernacExtend",
                        "d82056ae9f584de8efe79c320d2084496c4096a8"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_not_comm",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram.",
                        "VernacExtend",
                        "dd0fbc868492523a91dda1d2bb7253e96937e8e7"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "apply plgs_not_comm in H0.",
                        "VernacExtend",
                        "447f8221cbc7f7703de6dd0fd80b4142a8a19757"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H0.",
                        "VernacExtend",
                        "fa946a51c8b0a797766cd5ca922bed287f49342c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in H1.",
                        "VernacExtend",
                        "c4c9e5e351aaaaf9d8483800ecc75bfc3c7dfba8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry in H2.",
                        "VernacExtend",
                        "d55e1fcb1fd3b0a6670c8d6a5e3d048f9a3d6ff2"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H2.",
                        "VernacExtend",
                        "bc2923f2c9641053efb2601e4f6653fa0acb380c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H10.",
                        "VernacExtend",
                        "169c3dd7a02593ce4f62696429eb3c1035f98388"
                    ]
                },
                {
                    "command": [
                        "exists D; Col.",
                        "VernacExtend",
                        "b87c87d33eccededacba7450d83dc651e62674cb"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H0.",
                        "VernacExtend",
                        "16ab0ab16b317c3711db29b59d8a9efd3730be93"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(~ Parallelogram_strict A B D C /\\ ~ Parallelogram_strict B A C D).",
                        "VernacExtend",
                        "7559798f8e7125450e87ca905601c3c3f47ff8fe"
                    ]
                },
                {
                    "command": [
                        "apply plgs_not_comm.",
                        "VernacExtend",
                        "96206d0665177c88950e1f1cca9c3c8bdb2cc3ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H0.",
                        "VernacExtend",
                        "fa946a51c8b0a797766cd5ca922bed287f49342c"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in H1.",
                        "VernacExtend",
                        "c4c9e5e351aaaaf9d8483800ecc75bfc3c7dfba8"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H0.",
                        "VernacExtend",
                        "16ab0ab16b317c3711db29b59d8a9efd3730be93"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "assert(~ Parallelogram_flat A B D C /\\ ~ Parallelogram_flat B A C D).",
                        "VernacExtend",
                        "6cce16f56a235160b5ae7fe6fb3d4fc18acccadd"
                    ]
                },
                {
                    "command": [
                        "apply plgf_not_comm.",
                        "VernacExtend",
                        "53b4e12c0e07c846f7c85acf682d98d0940ed81c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H3.",
                        "VernacExtend",
                        "3d21d546fe4803046f74712a85612b0406796048"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in H0.",
                        "VernacExtend",
                        "791732c4877ed0afdd5d3d0f8ef96fe3b96d5f02"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H3.",
                        "VernacExtend",
                        "e053fc0e96c5ab9b604e3077980be0cbf9119467"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply plgf_not_comm in H0.",
                        "VernacExtend",
                        "65710f99514df3f412f10011763dd6492f217a74"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H3.",
                        "VernacExtend",
                        "3d21d546fe4803046f74712a85612b0406796048"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in H0.",
                        "VernacExtend",
                        "791732c4877ed0afdd5d3d0f8ef96fe3b96d5f02"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H3.",
                        "VernacExtend",
                        "e053fc0e96c5ab9b604e3077980be0cbf9119467"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallelogram_to_plg",
            "line_nb": 830,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "destruct (plg_mid A B C D) as [M HM]; Col.",
                        "VernacExtend",
                        "7063b955785df3e809ae4471aed380b7a1cfd3c0"
                    ]
                },
                {
                    "command": [
                        "split; try (exists M; Col).",
                        "VernacExtend",
                        "8abf63dc220888555289ce6810837fa24364b7ad"
                    ]
                },
                {
                    "command": [
                        "elim HPara; clear HPara; intro HPara; try (apply plgs_diff in HPara; spliter; Col); unfold Parallelogram_flat in HPara; spliter; Col.",
                        "VernacExtend",
                        "8919e6c3889be931d3493ed054387d2026ca3e81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallelogram_equiv_plg",
            "line_nb": 836,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram.",
                        "VernacExtend",
                        "74b4feba844277633db39494abdf0b315716f157"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_two_sides",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= plgs_mid A B C D H).",
                        "VernacExtend",
                        "91ccb7ea360b9c841539aba0e95cba987e9e6ce1"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H.",
                        "VernacExtend",
                        "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold TS.",
                        "VernacExtend",
                        "b797aa08231484e4dce465b473be143ea9f36b33"
                    ]
                },
                {
                    "command": [
                        "assert(~Col B A C).",
                        "VernacExtend",
                        "119e756c043d3eda79fbabedada4b8a673b1637b"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H.",
                        "VernacExtend",
                        "cc0b5b58da828396f886d519b2f0c310639269ac"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert(B <> D).",
                        "VernacExtend",
                        "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=one_side_reflexivity A C B H4).",
                        "VernacExtend",
                        "771e54caae7b30071f27475e6e72f8fb97458e92"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H.",
                        "VernacExtend",
                        "4edccaf568d2da405946e0e60bb535bb71f6a784"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H.",
                        "VernacExtend",
                        "cc0b5b58da828396f886d519b2f0c310639269ac"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col B A C).",
                        "VernacExtend",
                        "119e756c043d3eda79fbabedada4b8a673b1637b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Col M A B).",
                        "VernacExtend",
                        "549c5462911795ad21cf09bb2c67bdf15831e94a"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H1.",
                        "VernacExtend",
                        "02391658ec4b0bc896630613ed31279a22db1590"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H1.",
                        "VernacExtend",
                        "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "eapply (col_transitivity_1 _ M).",
                        "VernacExtend",
                        "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst M.",
                        "VernacExtend",
                        "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
                    ]
                },
                {
                    "command": [
                        "apply is_midpoint_id in H0.",
                        "VernacExtend",
                        "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H0.",
                        "VernacExtend",
                        "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply bet_col.",
                        "VernacExtend",
                        "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Col M B C).",
                        "VernacExtend",
                        "a9f0ce9972827a8e03952394334b6876a1b88ace"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H1.",
                        "VernacExtend",
                        "02391658ec4b0bc896630613ed31279a22db1590"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H1.",
                        "VernacExtend",
                        "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1.",
                        "VernacExtend",
                        "14e18c0fd9f924050c674020d62e1f21b605c996"
                    ]
                },
                {
                    "command": [
                        "eapply (col_transitivity_1 _ M).",
                        "VernacExtend",
                        "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst M.",
                        "VernacExtend",
                        "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
                    ]
                },
                {
                    "command": [
                        "apply l7_2 in H0.",
                        "VernacExtend",
                        "6d641a5885c23b68a8f5d616d2a4aaec60b9f1a5"
                    ]
                },
                {
                    "command": [
                        "apply is_midpoint_id in H0.",
                        "VernacExtend",
                        "20faeb058ecad52a910562fb7c6b88dc8ac9cfc6"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H0.",
                        "VernacExtend",
                        "e28a3f618d0badafcc478fd7b36fd082e006f6c4"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H0.",
                        "VernacExtend",
                        "6a0b23454f2414aae26bf642795e229b7ee01883"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H1.",
                        "VernacExtend",
                        "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_par_strict",
            "line_nb": 1147,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPara.",
                        "VernacExtend",
                        "5d78520f3f2d2338f395668575624515f479f526"
                    ]
                },
                {
                    "command": [
                        "destruct (plgs_mid A B C D) as [M [HMid1 HMid2]]; Col.",
                        "VernacExtend",
                        "0c7028c04ded2ae75f57b0be147ddeb3876ad75e"
                    ]
                },
                {
                    "command": [
                        "destruct HPara as [HTS [HCong HPar]].",
                        "VernacExtend",
                        "c30645558f35d9f3a3482786c92e498cbb5b698e"
                    ]
                },
                {
                    "command": [
                        "assert(HAB : A <> B) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "49c66d4e7a99e19fd3a3a4dbffc5a6666b2b40f6"
                    ]
                },
                {
                    "command": [
                        "assert(HAC : A <> D) by (intro; treat_equalities; unfold TS in HTS; spliter; Col).",
                        "VernacExtend",
                        "3b95a4f074bfc39c3aa479eaa376a1a3eb005f40"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HTS; spliter; split; try apply par_not_col_strict with C; Col.",
                        "VernacExtend",
                        "a653184affdf4f724826ca91781060cbcd9d99ef"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D C B); Par; apply l12_17 with M; Midpoint.",
                        "VernacExtend",
                        "2672abf2cba48e9f7f453d04a9884ea6f40ee618"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_comm2",
            "line_nb": 1238,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "apply plgs_two_sides in HH.",
                        "VernacExtend",
                        "1b14c8265c2c904a7e769b0605ff0218039c9096"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in *.",
                        "VernacExtend",
                        "1c81353e76d4343a43155e823fd254294a509987"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply par_comm.",
                        "VernacExtend",
                        "432fdb2fe99d3526e7401110094550bc785df5e3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgf_comm2",
            "line_nb": 1252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in *.",
                        "VernacExtend",
                        "f4b11e3584298f814d342e06af0a7cb38cd654da"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_comm2",
            "line_nb": 1263,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply plgs_comm2.",
                        "VernacExtend",
                        "5de91362266259adcaa96ded6cd5cd7ebdf0c9ec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply plgf_comm2.",
                        "VernacExtend",
                        "07cc8440ea9683dd0f45b0a805acbea95a1d8749"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_perp_rectangle",
            "line_nb": 1483,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Rhombus A B C D).",
                        "VernacExtend",
                        "06f2c5421862847956f9e8436a99119566a97b1a"
                    ]
                },
                {
                    "command": [
                        "apply perp_rmb.",
                        "VernacExtend",
                        "27d9bddc30f8fbae9b01aafb5a82c0893e49db8e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rhombus_Rectangle_Square;auto.",
                        "VernacExtend",
                        "d789590db122b16c3262c633400be64bf3867f6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallel_2_plg",
            "line_nb": 1504,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B C D /\\ Cong B C D A /\\ TS B D A C /\\ TS A C B D) by (apply l12_19;Par).",
                        "VernacExtend",
                        "82c700c2790883a928e44c4b9cbd0741f9403ed1"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict; intuition.",
                        "VernacExtend",
                        "fae7e22e41940c9ad6b9074005ef0ada914f8f31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_2_plg",
            "line_nb": 1509,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := parallel_2_plg A B C D H H0 H1).",
                        "VernacExtend",
                        "b6f744014261cf2bcabe306b3e38ebf4ccd72e01"
                    ]
                },
                {
                    "command": [
                        "apply Parallelogram_strict_Parallelogram; assumption.",
                        "VernacExtend",
                        "1c372924496f438097142d35712962cb1a9404f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_cong_1",
            "line_nb": 1514,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply plg_cong in H.",
                        "VernacExtend",
                        "01eaf099b805d596ef0cb126e8ec711880181a0f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_cong_2",
            "line_nb": 1520,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply plg_cong in H.",
                        "VernacExtend",
                        "01eaf099b805d596ef0cb126e8ec711880181a0f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_cong_1",
            "line_nb": 1526,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply plgs_cong in H.",
                        "VernacExtend",
                        "e3ecb445471271474d9c708010eaaadebdaefe6d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_cong_2",
            "line_nb": 1532,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply plgs_cong in H.",
                        "VernacExtend",
                        "e3ecb445471271474d9c708010eaaadebdaefe6d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Plg_perm",
            "line_nb": 1538,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; try assumption.",
                        "VernacExtend",
                        "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
                    ]
                },
                {
                    "command": [
                        "split; try (apply plg_permut; assumption).",
                        "VernacExtend",
                        "058776177bafd4dba7dd720f0729f30d16ca19b5"
                    ]
                },
                {
                    "command": [
                        "split; try (do 2 apply plg_permut; assumption).",
                        "VernacExtend",
                        "55487fdffacfb28c0baf6bef10e64eb9e6bf5e3b"
                    ]
                },
                {
                    "command": [
                        "split; try (do 3 apply plg_permut; assumption).",
                        "VernacExtend",
                        "d9c84d7d3233718c779323fb2c03052892725962"
                    ]
                },
                {
                    "command": [
                        "split; try (apply plg_comm2; do 3 apply plg_permut; assumption).",
                        "VernacExtend",
                        "22c28b2cf869aa86ba76221ec43082a35fc09b3f"
                    ]
                },
                {
                    "command": [
                        "split; try (apply plg_comm2; do 2 apply plg_permut; assumption).",
                        "VernacExtend",
                        "ce7302241712a4ee69d7ae41892688d99fe4df17"
                    ]
                },
                {
                    "command": [
                        "split; try (apply plg_comm2; apply plg_permut; assumption).",
                        "VernacExtend",
                        "c8ef7376bbb1b3596ac47f74ebb354954f9e921e"
                    ]
                },
                {
                    "command": [
                        "apply plg_comm2; assumption.",
                        "VernacExtend",
                        "bb6c6f66b6d6c28f713558cc34b57a461f158104"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_not_comm_1",
            "line_nb": 1549,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HNC := plg_not_comm A B C D H H0); spliter; assumption.",
                        "VernacExtend",
                        "dafe1b9255f360fc218d026a21795e232815b072"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_not_comm_2",
            "line_nb": 1553,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HNC := plg_not_comm A B C D H H0); spliter; assumption.",
                        "VernacExtend",
                        "dafe1b9255f360fc218d026a21795e232815b072"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallelogram_strict_midpoint",
            "line_nb": 1582,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T:=Parallelogram_strict_Parallelogram A B C D H).",
                        "VernacExtend",
                        "3ad431962c8809911a21f6c5799168a2d9ffd098"
                    ]
                },
                {
                    "command": [
                        "assert (HpF := plg_mid A B C D T).",
                        "VernacExtend",
                        "7528595bfacb1297b46a61f814289fb43546780f"
                    ]
                },
                {
                    "command": [
                        "elim HpF; intros I' HI;spliter;clear HpF.",
                        "VernacExtend",
                        "d438d0c26a8df25f5938775b7690378ea7944478"
                    ]
                },
                {
                    "command": [
                        "assert (H01 : Col A C I).",
                        "VernacExtend",
                        "9f172ccc6346e09f083b488b106b91df7e2d1212"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (H02 : Col D B I).",
                        "VernacExtend",
                        "63137f614a8391b7460da90b4aa9e3dd4e0978ac"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (H03 : ~Col A D C).",
                        "VernacExtend",
                        "7e6a925d8c82c2fc8bff6c4897ca31dc966decd1"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_strict_not_col_3 in H.",
                        "VernacExtend",
                        "d3d4d03f262cc3d6d433ed17c15969491de2f0da"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H.",
                        "VernacExtend",
                        "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := two_sides_not_col A C B D H4).",
                        "VernacExtend",
                        "8f476b1ab760ad7c94812d2c6038f0f915448a59"
                    ]
                },
                {
                    "command": [
                        "assert (MDB:D<>B).",
                        "VernacExtend",
                        "ca54ae9aed2b45a098cc523f97fbac7f9cb58e3e"
                    ]
                },
                {
                    "command": [
                        "assert (Col A I' C).",
                        "VernacExtend",
                        "63fa0f34a4d2226cda9d90b8fb649a68929e21f8"
                    ]
                },
                {
                    "command": [
                        "assert (H9 := midpoint_bet A I' C H2).",
                        "VernacExtend",
                        "d1d14a64c58f9e2621f67d1cf9ed843dc1e96eaf"
                    ]
                },
                {
                    "command": [
                        "assert (H10 := bet_col A I' C H9).",
                        "VernacExtend",
                        "d3bb406e4b1b474c99f87c410b1c2e7d63050389"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (H11 : ~ Col A C D).",
                        "VernacExtend",
                        "33b5713e589f3ced9951c0a2e234a93ffb7af59f"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (H12 := l7_2 I' B D H3).",
                        "VernacExtend",
                        "27decfc09c344fc49f02a762421568137590424b"
                    ]
                },
                {
                    "command": [
                        "assert (H13 : Col A C I').",
                        "VernacExtend",
                        "b9edc06cad8c8315a5897cd9e6455c7b9792e3fe"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply (midpoint_distinct A C I' D B H11 H13 H12).",
                        "VernacExtend",
                        "4183930d12d384309af1b87b3b7f0bbd742b0947"
                    ]
                },
                {
                    "command": [
                        "assert (H11 : Col D B I').",
                        "VernacExtend",
                        "110126069a21a44640975081a5864ae8ec33613e"
                    ]
                },
                {
                    "command": [
                        "assert (H14 := midpoint_bet B I' D H3).",
                        "VernacExtend",
                        "9c964040d895301f98b3d3e11b104d19cffbbe17"
                    ]
                },
                {
                    "command": [
                        "assert (H15 := bet_col B I' D H14).",
                        "VernacExtend",
                        "4eed5107e71ffc0aacee7c384948dce882cb0671"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (H12 : Col A C I').",
                        "VernacExtend",
                        "0a9f9ee9b91f2d01c7063a7e91392c3c38851dc1"
                    ]
                },
                {
                    "command": [
                        "assert (H14 := midpoint_bet A I' C H2).",
                        "VernacExtend",
                        "ed98527d7a2218d063b099c1985ddd50cec0267a"
                    ]
                },
                {
                    "command": [
                        "assert (H15 := bet_col A I' C H14).",
                        "VernacExtend",
                        "c4c8cc74e767c0bce202e1005c38c8be9d5bfe88"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply not_col_permutation_5 in H03.",
                        "VernacExtend",
                        "d875534c620771d8c884b4416a829564c9e06e61"
                    ]
                },
                {
                    "command": [
                        "assert (H13 := l6_21 A C D B I I' H03 MDB H01 H12 H02 H11).",
                        "VernacExtend",
                        "2793b8a60b57c1ca12f30b4702c38e6a12b2bb00"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite H13;assumption.",
                        "VernacExtend",
                        "17455f42a62b922d7d10d363e8dc8ffc2a96a57b"
                    ]
                },
                {
                    "command": [
                        "subst;assumption.",
                        "VernacExtend",
                        "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rect_permut",
            "line_nb": 1664,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Rectangle in *.",
                        "VernacExtend",
                        "83f964c8eaf9bd4259f43b79a90ac9023c30ae3a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H.",
                        "VernacExtend",
                        "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
                    ]
                },
                {
                    "command": [
                        "apply plg_permut in H.",
                        "VernacExtend",
                        "87a1092bc4b7ed0c17ca7956d16a86033abefd87"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg in H.",
                        "VernacExtend",
                        "7e8dbf681525a304311759597df91053b7329dd1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rect_comm2",
            "line_nb": 1675,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Rectangle in *.",
                        "VernacExtend",
                        "83f964c8eaf9bd4259f43b79a90ac9023c30ae3a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H.",
                        "VernacExtend",
                        "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
                    ]
                },
                {
                    "command": [
                        "apply plg_comm2 in H.",
                        "VernacExtend",
                        "42195761cf3df4a9b0376177a1f2e0b724d8e57f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_per_rect2",
            "line_nb": 1939,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply rect_comm2.",
                        "VernacExtend",
                        "a8596fe73ec33b562e016ea86ed10abefeb200ec"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect1.",
                        "VernacExtend",
                        "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H.",
                        "VernacExtend",
                        "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
                    ]
                },
                {
                    "command": [
                        "apply plg_comm2.",
                        "VernacExtend",
                        "9907a066aee3484b871d4f193f381973c4a71291"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_per_rect3",
            "line_nb": 1949,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply rect_permut.",
                        "VernacExtend",
                        "df9db4a0615cf5e6b20f73e661f4837d3dcd4606"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect1.",
                        "VernacExtend",
                        "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H.",
                        "VernacExtend",
                        "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
                    ]
                },
                {
                    "command": [
                        "apply plg_permut.",
                        "VernacExtend",
                        "1b96ae4c005fda9ea4b4ae4386892ca8de5f3fba"
                    ]
                },
                {
                    "command": [
                        "apply plg_sym.",
                        "VernacExtend",
                        "686e27843fd6c8556e96e6d90f756bd57a9ba6e3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_per_rect4",
            "line_nb": 1961,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply rect_comm2.",
                        "VernacExtend",
                        "a8596fe73ec33b562e016ea86ed10abefeb200ec"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect3.",
                        "VernacExtend",
                        "072009f07fbbeb73ab8e182fb236fb9b2359c838"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram in H.",
                        "VernacExtend",
                        "e52f10cae3750f42f19b04164fb6b785d36a4dd5"
                    ]
                },
                {
                    "command": [
                        "apply plg_comm2.",
                        "VernacExtend",
                        "9907a066aee3484b871d4f193f381973c4a71291"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_per_rect",
            "line_nb": 1971,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect1; assumption.",
                        "VernacExtend",
                        "043df19c5ff18186c6b613d124e14f26cf69b7ea"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect2; assumption.",
                        "VernacExtend",
                        "a9c5ad6d4d68f1b8a2f71cf782f8bf98a1e1f98d"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect3; assumption.",
                        "VernacExtend",
                        "33e8646b137e4b618b69a9a27e354fd9df58c480"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect4; assumption.",
                        "VernacExtend",
                        "04bd28c236f18035bc8f8c900f38cd60f3f48fcb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rect_per",
            "line_nb": 1981,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply (rect_per1 A B C D); assumption.",
                        "VernacExtend",
                        "36e5bb2d3d68df40af0729b4c2b71d7c166669c9"
                    ]
                },
                {
                    "command": [
                        "apply (rect_per2 A B C D); assumption.",
                        "VernacExtend",
                        "2d35a0c28034209204d3ceb0fa0f3e8fa0735392"
                    ]
                },
                {
                    "command": [
                        "apply (rect_per3 A B C D); assumption.",
                        "VernacExtend",
                        "8a6e4d5c00d92496c78730a1918e60d90e95e3a9"
                    ]
                },
                {
                    "command": [
                        "apply (rect_per4 A B C D); assumption.",
                        "VernacExtend",
                        "1995b9eb9804908f48f74835324ad02804db6509"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgf_rect_id",
            "line_nb": 1989,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat in H.",
                        "VernacExtend",
                        "89fd6ba7e080d5ffe7686bebf43f0fe3552e890a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Per B A D /\\ Per A B C /\\ Per B C D /\\ Per A D C).",
                        "VernacExtend",
                        "bec64664097ad1400f1f673cc95f656543fd2c44"
                    ]
                },
                {
                    "command": [
                        "apply rect_per.",
                        "VernacExtend",
                        "318c49cf8ff9cb9beab4b4aeb45597fb81d55635"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=l8_9 A B C H6 H).",
                        "VernacExtend",
                        "0ef08abc5dcdfe9e3bc85b94dd0cf5e38e069192"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H2.",
                        "VernacExtend",
                        "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H2.",
                        "VernacExtend",
                        "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "split; reflexivity.",
                        "VernacExtend",
                        "4dcd3619ac711de01342cf915900e96e80b675e1"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H3.",
                        "VernacExtend",
                        "66e848f8fbf6e4694366f8121b8567650ff35782"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "split; reflexivity.",
                        "VernacExtend",
                        "4dcd3619ac711de01342cf915900e96e80b675e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_perp3__perp",
            "line_nb": 2011,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (apply (l12_9 A B C D B C); Perp; Cop).",
                        "VernacExtend",
                        "984aa9c87c38007eae4806ae82a0eef9afe31e18"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A B D A) by (apply (cop_par_perp__perp C D A B D A); Perp; Par; Cop).",
                        "VernacExtend",
                        "2ff841a343aa5bc0c7b3509b90767d694d4185aa"
                    ]
                },
                {
                    "command": [
                        "auto using perp_sym, perp_left_comm.",
                        "VernacExtend",
                        "778de3cf562cf3119a37b07276642416fc23d469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_perp3__rect",
            "line_nb": 2017,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B C) by (assert_diffs; apply per_not_col; Perp).",
                        "VernacExtend",
                        "9fcfcb088a6ff9828d1daf6e4f212117a78f0293"
                    ]
                },
                {
                    "command": [
                        "assert (Par A B C D) by (apply (l12_9 A B C D B C); Perp; Cop).",
                        "VernacExtend",
                        "984aa9c87c38007eae4806ae82a0eef9afe31e18"
                    ]
                },
                {
                    "command": [
                        "assert (Perp D A A B) by (eapply cop_perp3__perp;eauto).",
                        "VernacExtend",
                        "dd489c360e454686e007904d494e5ab8dbabf209"
                    ]
                },
                {
                    "command": [
                        "assert (Par A D B C) by (apply (l12_9 A D B C A B); Perp; Cop).",
                        "VernacExtend",
                        "c9585952850374f73e5fe57be19053e0ee9cf8e2"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram_strict A B C D) by (apply (parallel_2_plg); auto).",
                        "VernacExtend",
                        "fbdcd05732d41ab3d72032943ef601ba872698e3"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect1.",
                        "VernacExtend",
                        "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "apply Parallelogram_strict_Parallelogram.",
                        "VernacExtend",
                        "d17b60e261b44cdd468a7fb3dd81c737b5de782a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_to_par_os",
            "line_nb": 2030,
            "steps": [
                {
                    "command": [
                        "intros A B C D P HBet HOS HCongA.",
                        "VernacExtend",
                        "9cb78af9ab7ff87c08caa5eb96b6e2ad92046978"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply par_right_comm, l12_22_b with P; trivial.",
                        "VernacExtend",
                        "af80a3145d70cd2e87c2424b3728245bd5a07ecb"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, bet_out; Between.",
                        "VernacExtend",
                        "e48c89461a054d05adcf99e9dffbfdfd5f8627ff"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, col_one_side with D; Col.",
                        "VernacExtend",
                        "e69b211a5fcff5218ad7df2d8a9aeadc0f827ead"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plg_par",
            "line_nb": 2037,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= H1).",
                        "VernacExtend",
                        "ae8e35421543d37630c79875cbe48bca885fec77"
                    ]
                },
                {
                    "command": [
                        "apply plg_mid in HH.",
                        "VernacExtend",
                        "df0ac23543349f81aec615d897e11fb3437717af"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=l12_17 A B C D M H H2 H3).",
                        "VernacExtend",
                        "f7f67fa02e1b98cae606bcdd1d2b50162c8bc48a"
                    ]
                },
                {
                    "command": [
                        "apply l7_2 in H2.",
                        "VernacExtend",
                        "18170cfa781766f76d8a57d9a8cb881b604c9a72"
                    ]
                },
                {
                    "command": [
                        "assert(HH1:=l12_17 B C D A M H0 H3 H2).",
                        "VernacExtend",
                        "72fe0a48f726b381e52cf75411fcfd8f2077e9b2"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry.",
                        "VernacExtend",
                        "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
                    ]
                },
                {
                    "command": [
                        "Par.",
                        "VernacExtend",
                        "204d3bc48478a206fd337c12d856085317b90ede"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong_cong",
            "line_nb": 2079,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H0.",
                        "VernacExtend",
                        "d8ce644abbee23c3210e33341966fbe878d3f7b4"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H0.",
                        "VernacExtend",
                        "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A D).",
                        "VernacExtend",
                        "98dbf88bf9f091bd7259185370ee3d42c5c34ac1"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "assert(B = C \\/ Midpoint A B C).",
                        "VernacExtend",
                        "5531c06fd8c9d4a2c59ce05efc76f95f4943c675"
                    ]
                },
                {
                    "command": [
                        "eapply l7_20.",
                        "VernacExtend",
                        "70911807aab4eb241715fb7911ea258aa583b4e2"
                    ]
                },
                {
                    "command": [
                        "unfold Par in H.",
                        "VernacExtend",
                        "284a91908ed6c88b12c5aa5041d4a061b896dfff"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H2.",
                        "VernacExtend",
                        "63fd5243094f3b803f67a96ed5401ef20db7ee32"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=par_cong_mid A B C D H H0).",
                        "VernacExtend",
                        "08b71121d535d6f596d367c843e5b504b17cdc08"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=mid_par_cong A B C D M H1 H2 H3 H4).",
                        "VernacExtend",
                        "362881d272fe6d41d55cc4728661a716f8f953f2"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A C).",
                        "VernacExtend",
                        "bda996de19e922f2f3aa46630bed62394edd5e36"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "assert(B = D \\/ Midpoint A B D).",
                        "VernacExtend",
                        "b08b672e3186cf6589c66fb8308d56223d7b6b5b"
                    ]
                },
                {
                    "command": [
                        "eapply l7_20.",
                        "VernacExtend",
                        "70911807aab4eb241715fb7911ea258aa583b4e2"
                    ]
                },
                {
                    "command": [
                        "unfold Par in H.",
                        "VernacExtend",
                        "284a91908ed6c88b12c5aa5041d4a061b896dfff"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply False_ind.",
                        "VernacExtend",
                        "953e151f97c8c6479faad3bcd88fb0b89b03443a"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H4.",
                        "VernacExtend",
                        "8d9f5504c56bc5d5737b86810a4591165b10e524"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=mid_par_cong A B D C M H1 H4 H3 H5).",
                        "VernacExtend",
                        "086517620e593296c36010385ed26d727f35fb5e"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cong_cong",
            "line_nb": 2148,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H1.",
                        "VernacExtend",
                        "534756e210e3cbc7f53391a0447a3fed3127ac47"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H1.",
                        "VernacExtend",
                        "afb1f7bf499b438f5747233f4604e9bbca4717f6"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points C D).",
                        "VernacExtend",
                        "fc3e40e733fd75b978f2cf0bb2159aa253b3476f"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H1.",
                        "VernacExtend",
                        "afb1f7bf499b438f5747233f4604e9bbca4717f6"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "apply par_cong_cong.",
                        "VernacExtend",
                        "7320c9fae4e693db696dba7f5e6d5defd0aee4f2"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; ColR.",
                        "VernacExtend",
                        "407db67601bf414d470f3112518d2e784da5a95e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong_cop",
            "line_nb": 2168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (par_cong_mid A B C D) as [M HM]; trivial.",
                        "VernacExtend",
                        "9198061b96de6f33787827c99c50f41758227ba0"
                    ]
                },
                {
                    "command": [
                        "exists M; right.",
                        "VernacExtend",
                        "760d3e84ee2d5a79d6c2e0652d0faccdfaa39a5b"
                    ]
                },
                {
                    "command": [
                        "destruct HM as [[]|[]]; [left|right]; split; Col.",
                        "VernacExtend",
                        "1964146368971cfb194633f7bc768559cb09ddbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong_plg",
            "line_nb": 2174,
            "steps": [
                {
                    "command": [
                        "intros A B C D HPar HCong.",
                        "VernacExtend",
                        "70288aa23ddb20abb467a6bc2819a16fff1c8037"
                    ]
                },
                {
                    "command": [
                        "destruct (par_cong_mid A B C D) as [M HM]; trivial.",
                        "VernacExtend",
                        "9198061b96de6f33787827c99c50f41758227ba0"
                    ]
                },
                {
                    "command": [
                        "elim HM; clear HM; intro HM; destruct HM as [HMid1 HMid2].",
                        "VernacExtend",
                        "c103f31d69992967f5ddebe1f83720c9c3799b76"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "left; split; try (exists M; Col).",
                        "VernacExtend",
                        "38ca59fa8384ad534436895a7ae17d9331991673"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A C); intro HAC; treat_equalities; Col; right; intro; treat_equalities; apply par_distincts in HPar; spliter; Col.",
                        "VernacExtend",
                        "eff0f0f7f7fe12a5fc1b5c4e0283f75802a1b5e0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "right; split; try (exists M; Col).",
                        "VernacExtend",
                        "df53a4b830c836d87c1066878fce567ff5fb419f"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A D); intro HAD; treat_equalities; Col; right; intro; treat_equalities; apply par_distincts in HPar; spliter; Col.",
                        "VernacExtend",
                        "38e232db1170995ae7a6e330ce7ee879ffecc217"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong_plg_2",
            "line_nb": 2187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HElim : Plg A B C D \\/ Plg A B D C) by (apply par_cong_plg; assumption).",
                        "VernacExtend",
                        "49d65e6ee1342e7ce2a46b92c2e366521969dbc3"
                    ]
                },
                {
                    "command": [
                        "elim HElim; intro.",
                        "VernacExtend",
                        "9dac13a0403a06dd06f1be72382551a8ab789b26"
                    ]
                },
                {
                    "command": [
                        "left; apply plg_to_parallelogram; assumption.",
                        "VernacExtend",
                        "cb4e81e6b314ec092f05a39a73941877eae79aeb"
                    ]
                },
                {
                    "command": [
                        "right; apply plg_to_parallelogram; assumption.",
                        "VernacExtend",
                        "ff16c7cf452fd33ae9719a043f3327e66f59b106"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_cong3_rect",
            "line_nb": 2194,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Par in H0.",
                        "VernacExtend",
                        "4a8348d73eb592079f68b35b7aaf9209f74c59bb"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=par_strict_cong_mid1 A B C D H0 H1).",
                        "VernacExtend",
                        "aef25978d3e37e1086d89199277e2ad37de505ad"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold Rectangle.",
                        "VernacExtend",
                        "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold Plg.",
                        "VernacExtend",
                        "0b3420670f69bb220fe94b450f238dd9c4942442"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 M.",
                        "VernacExtend",
                        "39b0fcdf0d270f8eb1f6ee33bc9799942e932333"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold Rectangle.",
                        "VernacExtend",
                        "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "unfold Plg.",
                        "VernacExtend",
                        "0b3420670f69bb220fe94b450f238dd9c4942442"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H0.",
                        "VernacExtend",
                        "9e162864cc3198768df48341f62e1cd680cc87b1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H9.",
                        "VernacExtend",
                        "d0479838914cfca7017024564d1663cd6466cb01"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold Rectangle.",
                        "VernacExtend",
                        "b1cad81b3b3f22582ec3525e36f2adfd32638d01"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram.",
                        "VernacExtend",
                        "dd0fbc868492523a91dda1d2bb7253e96937e8e7"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_flat.",
                        "VernacExtend",
                        "36e7e83481b0de22e1ccb7a4878e366aeb571ec9"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points C D).",
                        "VernacExtend",
                        "fc3e40e733fd75b978f2cf0bb2159aa253b3476f"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H1.",
                        "VernacExtend",
                        "afb1f7bf499b438f5747233f4604e9bbca4717f6"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; Cong.",
                        "VernacExtend",
                        "5002713d0c7266c62584bed984ddcf6d6c219419"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; Cong; ColR.",
                        "VernacExtend",
                        "a312e3ec6afae9f9f606e5f3cfcc188a19d6edb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pars_par_pars",
            "line_nb": 2238,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cop.",
                        "VernacExtend",
                        "4049659c0550a2da58c022f81b90fa72944250ad"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 X.",
                        "VernacExtend",
                        "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H8.",
                        "VernacExtend",
                        "2014720df0411c2963f20792fe424080d05f44aa"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pars_par_plg",
            "line_nb": 2252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(Par_strict A D B C).",
                        "VernacExtend",
                        "9aeb206280a974960d5e48e36fbc66ca5383a358"
                    ]
                },
                {
                    "command": [
                        "apply pars_par_pars; auto.",
                        "VernacExtend",
                        "ef5996b88e6fc487e65a582b6e431ea5235a0f1e"
                    ]
                },
                {
                    "command": [
                        "assert(Par A B C D).",
                        "VernacExtend",
                        "de9a3084d11c7c1ed6426ada11ce08458a182731"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(A <> B /\\ C <> D /\\ A <> D /\\ B <> C).",
                        "VernacExtend",
                        "232f2a07fb7b10f16d8ab059a137081717ed9c53"
                    ]
                },
                {
                    "command": [
                        "apply par_distinct in H0.",
                        "VernacExtend",
                        "1d79b7c7b312b307e7e284f05e9099aff1e128dc"
                    ]
                },
                {
                    "command": [
                        "apply par_distinct in H2.",
                        "VernacExtend",
                        "b9485b9b331244ab4acb41f4cdcddc5963966227"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(A <> C).",
                        "VernacExtend",
                        "6902c8d1b94940b2a9482cacf40e7731b9c07806"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H9.",
                        "VernacExtend",
                        "d0479838914cfca7017024564d1663cd6466cb01"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assert(B <> D).",
                        "VernacExtend",
                        "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H10.",
                        "VernacExtend",
                        "169c3dd7a02593ce4f62696429eb3c1035f98388"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "unfold Plg.",
                        "VernacExtend",
                        "0b3420670f69bb220fe94b450f238dd9c4942442"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=midpoint_existence A C).",
                        "VernacExtend",
                        "cb1df0a9b5043cd21eedd0c858a50b863de9a281"
                    ]
                },
                {
                    "command": [
                        "ex_and HH M.",
                        "VernacExtend",
                        "0b9f2601a1b95f9d78ff6ab49de160fec244e865"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "prolong B M D' B M.",
                        "VernacExtend",
                        "e21f082c596ceb57f988e51b41d9fa219bd69e02"
                    ]
                },
                {
                    "command": [
                        "assert(Midpoint M B D').",
                        "VernacExtend",
                        "e4d38f1ad104d67c6295d775803a96e7fa7d5ac7"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "assert(Plg A B C D').",
                        "VernacExtend",
                        "1ec678f34473fcbaac64e446b78cda7ead4ef6f9"
                    ]
                },
                {
                    "command": [
                        "unfold Plg.",
                        "VernacExtend",
                        "0b3420670f69bb220fe94b450f238dd9c4942442"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "assert(Parallelogram A B C D').",
                        "VernacExtend",
                        "8a3c4a08462751142c2a954e5e5a2a9533631663"
                    ]
                },
                {
                    "command": [
                        "apply plg_to_parallelogram.",
                        "VernacExtend",
                        "74b4feba844277633db39494abdf0b315716f157"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=plg_par A B C D' H3 H6 H14).",
                        "VernacExtend",
                        "9fd999da8b5b9e3c675e3847237a73bf50ecf867"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(~Col C A B).",
                        "VernacExtend",
                        "10101811f25a8d53460b103ccd0ae59f2160209f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H20.",
                        "VernacExtend",
                        "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assert(Col C C D /\\ Col D' C D).",
                        "VernacExtend",
                        "1611cf154672c1b4583f6982daa178d565c62d7c"
                    ]
                },
                {
                    "command": [
                        "apply (parallel_uniqueness A B C D C D' C H2).",
                        "VernacExtend",
                        "2ba4a24977c685d95457bd789cb789407a1853ec"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(A <> D').",
                        "VernacExtend",
                        "0e1b4d6b6a2c55ab6e0d94362f1d5a18c40c38c1"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst D'.",
                        "VernacExtend",
                        "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H1.",
                        "VernacExtend",
                        "8646690346cd1eda6e4c1123e6227909d6d0b842"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H22.",
                        "VernacExtend",
                        "2abe0d9d1b642a780a9ebe28decc294818a083ed"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=mid_par_cong A B C D' M H3 H20 H9 H12).",
                        "VernacExtend",
                        "6003ceceeeb6714e29b9af9716fb37f01057a6b6"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Col A A D /\\ Col D' A D).",
                        "VernacExtend",
                        "e9e4e6da7f9580870eb976e3588bf783a141bdb2"
                    ]
                },
                {
                    "command": [
                        "apply (parallel_uniqueness B C A D A D' A).",
                        "VernacExtend",
                        "1f3d2f2d1e754597bf9b91ac73d78c8cf9eca704"
                    ]
                },
                {
                    "command": [
                        "Par.",
                        "VernacExtend",
                        "204d3bc48478a206fd337c12d856085317b90ede"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "apply par_left_comm.",
                        "VernacExtend",
                        "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
                    ]
                },
                {
                    "command": [
                        "Par.",
                        "VernacExtend",
                        "204d3bc48478a206fd337c12d856085317b90ede"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(D = D').",
                        "VernacExtend",
                        "1f3e843e3bdc4e40334b8f4064308da963d43408"
                    ]
                },
                {
                    "command": [
                        "eapply (l6_21 A D C D D D'); Col.",
                        "VernacExtend",
                        "0e9344c1d2a132f29bd42b152fc6a1a7b6dd9e42"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H.",
                        "VernacExtend",
                        "1cc17a6e0886c6af50eeb441a4d9920914dc1c10"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H30.",
                        "VernacExtend",
                        "ee7d936337168bc5180993de9f345fc5e560fa0e"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "subst D'.",
                        "VernacExtend",
                        "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_par_pars_not_cong",
            "line_nb": 2350,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(A <> B).",
                        "VernacExtend",
                        "054074d1c4aab44077b809892d45c03b9ae82923"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H1.",
                        "VernacExtend",
                        "8646690346cd1eda6e4c1123e6227909d6d0b842"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assert(A' <> B').",
                        "VernacExtend",
                        "02db2db58c1cbfccda17504b04746954a4f45953"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst B'.",
                        "VernacExtend",
                        "8cde9e92b7e45a08022881a785185790cfb3adef"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H1.",
                        "VernacExtend",
                        "8646690346cd1eda6e4c1123e6227909d6d0b842"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "assert(O <> A).",
                        "VernacExtend",
                        "04d22298168c119f24793df00659d77b1edd79ee"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H.",
                        "VernacExtend",
                        "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert(O <> A').",
                        "VernacExtend",
                        "385a1a1446a820def8f58688c3867aa59679aab3"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H0.",
                        "VernacExtend",
                        "7082b3e136a063dbe84dc2c4fe8234d250a53969"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert(~Col O A A').",
                        "VernacExtend",
                        "7bc2d3b6ac5e20101dcb1b5786c93a6b4d6997e0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H.",
                        "VernacExtend",
                        "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H0.",
                        "VernacExtend",
                        "384cea00093328b2e233f002311cdcafabfa802d"
                    ]
                },
                {
                    "command": [
                        "assert(Col O B A').",
                        "VernacExtend",
                        "caaf4bd5e3abb0945787dd0009de257bc159a1c1"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H1.",
                        "VernacExtend",
                        "8646690346cd1eda6e4c1123e6227909d6d0b842"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H11.",
                        "VernacExtend",
                        "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
                    ]
                },
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "assert(OS A B A' B').",
                        "VernacExtend",
                        "6861a19782e42abcf1b206d7790ffae6a1b22598"
                    ]
                },
                {
                    "command": [
                        "apply(out_one_side_1 _ _ _ _ O).",
                        "VernacExtend",
                        "efdc178658599af266c428898b35df14e8b09432"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H.",
                        "VernacExtend",
                        "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H0.",
                        "VernacExtend",
                        "384cea00093328b2e233f002311cdcafabfa802d"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H.",
                        "VernacExtend",
                        "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(Par A A' B B').",
                        "VernacExtend",
                        "dd27a9b94fcf736a3951a321ecd3bcc2e2ef6ce1"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=os_cong_par_cong_par A A' B B' H8 H2 H9).",
                        "VernacExtend",
                        "46a7325796e6d9ca1bd024c3b8b135e1c3019490"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Par in H11.",
                        "VernacExtend",
                        "715fade3be8f0cace3de8bed2abae89d57d58e26"
                    ]
                },
                {
                    "command": [
                        "induction H11.",
                        "VernacExtend",
                        "7559a9688240e9cbd9e56430c8ba163a9a120564"
                    ]
                },
                {
                    "command": [
                        "unfold Par_strict in H11.",
                        "VernacExtend",
                        "2de832219b533ff1716d2b921b27b254ef76a147"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H14.",
                        "VernacExtend",
                        "315c064431a47ec3c8cc41e58a75c8eb749330ef"
                    ]
                },
                {
                    "command": [
                        "exists O.",
                        "VernacExtend",
                        "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H.",
                        "VernacExtend",
                        "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H0.",
                        "VernacExtend",
                        "384cea00093328b2e233f002311cdcafabfa802d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H.",
                        "VernacExtend",
                        "c48b3ef4f07aa36f670ef06f33e228a96dea94eb"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H0.",
                        "VernacExtend",
                        "384cea00093328b2e233f002311cdcafabfa802d"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Square_Rhombus",
            "line_nb": 3212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Rhombus.",
                        "VernacExtend",
                        "b48de8f087863804e0bc35e4462514721dbc3cf8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Square_Parallelogram in H.",
                        "VernacExtend",
                        "6ade7ea7e2d3aa782a8d3232552a2c923e4f1715"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg in H.",
                        "VernacExtend",
                        "7e8dbf681525a304311759597df91053b7329dd1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Square in H.",
                        "VernacExtend",
                        "91feb00ecbf9c3c3a3873d9cf38a7713191b784b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plgs_in_angle",
            "line_nb": 3222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(Plg A B C D).",
                        "VernacExtend",
                        "b26f76f0f9f18f18c939751a8ecedcea8a9b8411"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg.",
                        "VernacExtend",
                        "f83ab1cbbaf6313f9d0654812389b3dbd983494c"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Parallelogram_strict in H.",
                        "VernacExtend",
                        "e4579a67d1a5239ef454cc2b43d4c4cc99f63820"
                    ]
                },
                {
                    "command": [
                        "unfold Plg in H0.",
                        "VernacExtend",
                        "4c29d236f3fb6b7ac89f80e490845ce8c2ae328a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 M.",
                        "VernacExtend",
                        "10432ba9c543fbbd07c9d867f8faf1bf7ddceb46"
                    ]
                },
                {
                    "command": [
                        "assert(A <> B /\\ C <> B).",
                        "VernacExtend",
                        "3e0bcdff7ad04e3c6d41d43170d350e9a0d184a5"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H.",
                        "VernacExtend",
                        "cc0b5b58da828396f886d519b2f0c310639269ac"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; intro; subst B; apply H; Col.",
                        "VernacExtend",
                        "0e2de4d80a6467e62744a0bc799768a31075c8e4"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HH.",
                        "VernacExtend",
                        "5d730ec8ab2a61acc4d8f44228faa3c07fe10794"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H9 T.",
                        "VernacExtend",
                        "c5558837538dcee4d280a099bd2f55da18287e43"
                    ]
                },
                {
                    "command": [
                        "unfold InAngle.",
                        "VernacExtend",
                        "26800be71d27e0dab351c9587e5270c0dffa3f13"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "apply l7_3 in H4.",
                        "VernacExtend",
                        "22eadbdaeb52e0a9fb5ae6e5c52ea502fa94ba1a"
                    ]
                },
                {
                    "command": [
                        "subst M.",
                        "VernacExtend",
                        "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_bet in H1.",
                        "VernacExtend",
                        "0c96b2e03d2b6933939f7f8b3dded3076af151e4"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H1.",
                        "VernacExtend",
                        "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "exists M.",
                        "VernacExtend",
                        "2a4b5607a006ea853718a616784ce7d5094d0af9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_bet.",
                        "VernacExtend",
                        "a349dc09e4c6302d6f25689cdf50363339f6914f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst M.",
                        "VernacExtend",
                        "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H4.",
                        "VernacExtend",
                        "8d9f5504c56bc5d5737b86810a4591165b10e524"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H11.",
                        "VernacExtend",
                        "b33031bc9c1cfeb15e7fe07ba7cb60adc41f4e01"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H11.",
                        "VernacExtend",
                        "37a4c174e081764ed8fbd03de45502bad74ba7e8"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H10.",
                        "VernacExtend",
                        "6c861648d5cb88172f8a5301b3e3dcfb684c9142"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H10.",
                        "VernacExtend",
                        "6c861648d5cb88172f8a5301b3e3dcfb684c9142"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_bet.",
                        "VernacExtend",
                        "a349dc09e4c6302d6f25689cdf50363339f6914f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_par_cong_cong_parallelogram",
            "line_nb": 3277,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram A B C D \\/ Parallelogram A B D C) by (apply par_cong_plg_2;finish).",
                        "VernacExtend",
                        "2cf628124b1e726ed30acd31274efc9c32cf9574"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram B C A D \\/ Parallelogram B C D A) by (apply par_cong_plg_2;finish).",
                        "VernacExtend",
                        "d86f0b6ecfad43c23931dc02aca921dfadf2d88a"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H5.",
                        "VernacExtend",
                        "95b234133c893feab1fa02ba35d711b8dc2279bb"
                    ]
                },
                {
                    "command": [
                        "apply Plg_perm in H4.",
                        "VernacExtend",
                        "7b8d7182e6daae54f1fb09bd1e8f0f581ec75ccb"
                    ]
                },
                {
                    "command": [
                        "apply Plg_perm in H5.",
                        "VernacExtend",
                        "4e682c69417972c7d46b392eccc6827d8d4da39c"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply plg_not_comm in H8.",
                        "VernacExtend",
                        "8da0bbe43fd0bd736c8dbef62fbcc0bba5034d62"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Plg_perm in H5.",
                        "VernacExtend",
                        "4e682c69417972c7d46b392eccc6827d8d4da39c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "degenerated_rect_eq",
            "line_nb": 3295,
            "steps": [
                {
                    "command": [
                        "intros A B C HRect.",
                        "VernacExtend",
                        "2fb8aa9a9e9dd5a63511836775a38297fd9d342c"
                    ]
                },
                {
                    "command": [
                        "apply Rectangle_Parallelogram in HRect; apply plg_mid in HRect.",
                        "VernacExtend",
                        "2dd4013d7bdc44979427ffbe0a1f228572fb0f62"
                    ]
                },
                {
                    "command": [
                        "destruct HRect as [M [HMid1 HMid2]]; treat_equalities; auto.",
                        "VernacExtend",
                        "6b7a468cbf5c132c2cdb796528b66c37ad0c5079"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rect_2_rect",
            "line_nb": 3300,
            "steps": [
                {
                    "command": [
                        "intros A B C1 C2 D1 D2 HDiff HRect1 HRect2.",
                        "VernacExtend",
                        "ce0a8e0cfd329cca8ae3c84e70e4e259414c6397"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points C1 C2); intro HC1C2; treat_equalities.",
                        "VernacExtend",
                        "54302aa39f34af6c1654eb849fe307ccd97dd915"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Rectangle_Parallelogram in HRect1; apply plg_mid in HRect1.",
                        "VernacExtend",
                        "98f9a1bc8b913cb490c350139a9a44c76550c224"
                    ]
                },
                {
                    "command": [
                        "apply Rectangle_Parallelogram in HRect2; apply plg_mid in HRect2.",
                        "VernacExtend",
                        "0a87cd7543263d81bf4e5aa23e9d451ed6f80e79"
                    ]
                },
                {
                    "command": [
                        "destruct HRect1 as [M [HMid1 HMid2]]; destruct HRect2 as [M' [HMid3 HMid4]].",
                        "VernacExtend",
                        "2aa7f5b19793eb52e5b0083fb890c140cda7be79"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; split; Cong; apply parallelogram_to_plg.",
                        "VernacExtend",
                        "0497fe6d61861aa451d67f0e85b1351b7747eb66"
                    ]
                },
                {
                    "command": [
                        "apply plg_trivial; intro; treat_equalities; auto.",
                        "VernacExtend",
                        "edb125d5dc4fab1812843af693e36c6f57b84f6d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points B C1); intro HBC1; elim (eq_dec_points B C2); intro HBC2; treat_equalities; [intuition|apply degenerated_rect_eq in HRect1; treat_equalities| apply degenerated_rect_eq in HRect2; treat_equalities|]; apply rect_comm2; auto; apply rect_comm2; do 2 (apply rect_permut); auto.",
                        "VernacExtend",
                        "f8f2af84312d7678fdcd92d2685ea2b3c7e75655"
                    ]
                },
                {
                    "command": [
                        "assert (HPara1 := HRect1); apply Rectangle_Parallelogram in HPara1.",
                        "VernacExtend",
                        "1b678427322e986a2c73ac7d12c08d3ed5b718cf"
                    ]
                },
                {
                    "command": [
                        "assert (HPara2 := HRect2); apply Rectangle_Parallelogram in HPara2.",
                        "VernacExtend",
                        "ea332864de31d43fe9cf6df7de40bddbf8e973cc"
                    ]
                },
                {
                    "command": [
                        "assert (HNC1 : ~ Col A B C1) by (apply rect_per2 in HRect1; apply per_not_col; auto).",
                        "VernacExtend",
                        "23f37428f506cbc393efd461a9f9d227ba710138"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A B C2) by (apply rect_per2 in HRect2; apply per_not_col; auto).",
                        "VernacExtend",
                        "123fded4599e72b66492bc0a11728a0cadcefff7"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect2.",
                        "VernacExtend",
                        "98532c11fac199369d4a4a94c9c3b89ea3040ff2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HPara1; clear HPara1; intro HPara1; [|unfold Parallelogram_flat in HPara1; spliter; intuition].",
                        "VernacExtend",
                        "ae5a7eeb4f83db3ca20d8affff6d62801f949ea2"
                    ]
                },
                {
                    "command": [
                        "elim HPara2; clear HPara2; intro HPara2; [|unfold Parallelogram_flat in HPara2; spliter; intuition].",
                        "VernacExtend",
                        "c9bb592e7ce3d3a70577e0881ab5579d3baf8de6"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg; apply plgs_pseudo_trans with B A; apply plgs_comm2; auto; do 2 (apply plgs_permut); auto.",
                        "VernacExtend",
                        "0ed3506c450cd78349fdd886c18f3e57c37a9a68"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "elim (cop_dec A B C1 C2); intro HCop.",
                        "VernacExtend",
                        "ae41fa1cce620135412dbe6169cb18d095e629e7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; auto; apply perp_sym; apply cop_par_perp__perp with A B; Cop; apply plg_par_1 in HPara2; Par; clear HPara1; clear HPara2.",
                        "VernacExtend",
                        "42fd2f7949496a3e91828af3bd390b359f893c32"
                    ]
                },
                {
                    "command": [
                        "apply rect_per2 in HRect1; apply rect_per2 in HRect2.",
                        "VernacExtend",
                        "ee915c8cd4c0a43c8e02f2cd44fcbf5aa9d7a975"
                    ]
                },
                {
                    "command": [
                        "assert (HCol : Col C1 C2 B) by (apply cop_per2__col with A; Perp; Cop).",
                        "VernacExtend",
                        "8cee551f1411cf15bf8d1f2e114805597fd9d6d8"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with B C1; Col; apply per_perp in HRect1; Perp.",
                        "VernacExtend",
                        "676e04015c53ce397f4ec9d2dcbf36afcd5a766f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply rect_per in HRect1; apply rect_per in HRect2; spliter.",
                        "VernacExtend",
                        "09d62300d98c5467f379d574a834e0311c96efb8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points C2 D2); [subst; Perp|].",
                        "VernacExtend",
                        "aae285990d5d6e3e78755f638e9a2aeb5e90ccc5"
                    ]
                },
                {
                    "command": [
                        "assert (HOrth : Orth_at C2 B C1 C2 C2 D2); [|destruct HOrth as [_ [_ [_ [_ HOrth]]]]; apply HOrth; Col; Cop].",
                        "VernacExtend",
                        "c42afab282c71d3221cdd1cf332954fff998cafe"
                    ]
                },
                {
                    "command": [
                        "apply l11_61_bis with B A; Perp; Cop.",
                        "VernacExtend",
                        "b0a32e744b68d8cce1d088841bb3af108b6922b2"
                    ]
                },
                {
                    "command": [
                        "apply l11_60_bis; Perp; Cop.",
                        "VernacExtend",
                        "f57a881bf22c906c771088f33b7635f2648c675c"
                    ]
                },
                {
                    "command": [
                        "apply ncop__ncol with A; Cop.",
                        "VernacExtend",
                        "ce785aab6c4e06943d0bd6248b85f67f25bb764a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol123_plg__plgs",
            "line_nb": 3339,
            "steps": [
                {
                    "command": [
                        "intros A B C D HNC H; induction H; auto.",
                        "VernacExtend",
                        "381ddd6fd72a6fe03ce1c1544893713872e10dba"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; Col.",
                        "VernacExtend",
                        "867b63e99d24d5eef7c193987ec121963d034be7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol124_plg__plgs",
            "line_nb": 3343,
            "steps": [
                {
                    "command": [
                        "intros A B C D HNC H; induction H; auto.",
                        "VernacExtend",
                        "381ddd6fd72a6fe03ce1c1544893713872e10dba"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; Col.",
                        "VernacExtend",
                        "867b63e99d24d5eef7c193987ec121963d034be7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol134_plg__plgs",
            "line_nb": 3347,
            "steps": [
                {
                    "command": [
                        "intros A B C D HNC H; induction H; auto.",
                        "VernacExtend",
                        "381ddd6fd72a6fe03ce1c1544893713872e10dba"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; assert_diffs; ColR.",
                        "VernacExtend",
                        "9a32089bc8f8bcba1554ba7ff6b7ad90dcd5c9b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol234_plg__plgs",
            "line_nb": 3351,
            "steps": [
                {
                    "command": [
                        "intros A B C D HNC H; induction H; auto.",
                        "VernacExtend",
                        "381ddd6fd72a6fe03ce1c1544893713872e10dba"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HNC; unfold Parallelogram_flat in *; spliter; assert_diffs; ColR.",
                        "VernacExtend",
                        "9a32089bc8f8bcba1554ba7ff6b7ad90dcd5c9b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol123_plg__pars1234",
            "line_nb": 3355,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_1; apply ncol123_plg__plgs; auto.",
                        "VernacExtend",
                        "449ea7b088421ba1f9308bec11988c6c03196a27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol124_plg__pars1234",
            "line_nb": 3358,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_1; apply ncol124_plg__plgs; auto.",
                        "VernacExtend",
                        "c5627b7886987c281f21da6fcaf839c5c302a4ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol134_plg__pars1234",
            "line_nb": 3361,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_1; apply ncol134_plg__plgs; auto.",
                        "VernacExtend",
                        "ba8cdb9638d7d2ff612c079462885b181cc15017"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol234_plg__pars1234",
            "line_nb": 3364,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_1; apply ncol234_plg__plgs; auto.",
                        "VernacExtend",
                        "491e9bde1743301224446b013351656b28ff02a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol123_plg__pars1423",
            "line_nb": 3367,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_2; apply ncol123_plg__plgs; auto.",
                        "VernacExtend",
                        "4d28bec1fee055fac84ebf51c084a2fa0c79a786"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol124_plg__pars1423",
            "line_nb": 3370,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_2; apply ncol124_plg__plgs; auto.",
                        "VernacExtend",
                        "cf7a504f583cbb2617dae9d1714da5094aa4ba93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol134_plg__pars1423",
            "line_nb": 3373,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_2; apply ncol134_plg__plgs; auto.",
                        "VernacExtend",
                        "6e65d0d6fc45b2fb52818ce67749492472cb70d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncol234_plg__pars1423",
            "line_nb": 3376,
            "steps": [
                {
                    "command": [
                        "intros; apply plgs_pars_2; apply ncol234_plg__plgs; auto.",
                        "VernacExtend",
                        "e0692497075fc07e0137541f38aa42edac4f6635"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sac_plg",
            "line_nb": 3379,
            "steps": [
                {
                    "command": [
                        "intros A B C D H.",
                        "VernacExtend",
                        "8a59f167d7ca5adb286875421e7b23f806c1ddf3"
                    ]
                },
                {
                    "command": [
                        "assert (T:=sac__par_strict1234 A B C D H).",
                        "VernacExtend",
                        "ff09bf981a27584a46420a3734c1e600e90b8e08"
                    ]
                },
                {
                    "command": [
                        "assert (U:=sac__par1423 A B C D H).",
                        "VernacExtend",
                        "7103c8ddd772d5a939c4eab6060391fc1cde4a6e"
                    ]
                },
                {
                    "command": [
                        "assert (V:=sac__par1234 A B C D H).",
                        "VernacExtend",
                        "70856c54ae29d599a6b8bfd313beba4cc6d29f21"
                    ]
                },
                {
                    "command": [
                        "apply par_2_plg;eauto using par_strict_not_col_1.",
                        "VernacExtend",
                        "5e8dbc7f882b8894b2a3b3c9f196c919e420bc5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sac_rectangle",
            "line_nb": 3386,
            "steps": [
                {
                    "command": [
                        "intros A B C D H.",
                        "VernacExtend",
                        "8a59f167d7ca5adb286875421e7b23f806c1ddf3"
                    ]
                },
                {
                    "command": [
                        "assert (Parallelogram A B C D) by (apply sac_plg;auto).",
                        "VernacExtend",
                        "246928224ce54de00750bcab37f4af00acb512b1"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_to_plg in H0.",
                        "VernacExtend",
                        "ea4019f820bc0f398032a474890f9da7006eeecf"
                    ]
                },
                {
                    "command": [
                        "apply plg_per_rect1.",
                        "VernacExtend",
                        "0a91bfec86f47a4f7053d5746af67cbe3f376cfb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Saccheri in H.",
                        "VernacExtend",
                        "380edb7f15253650c98787114795452ba77a6828"
                    ]
                },
                {
                    "command": [
                        "spliter;finish.",
                        "VernacExtend",
                        "510e643bc7b17e61eec9b389692fe927ec972c19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_square",
            "line_nb": 3395,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_cong_per A B A B) as [C [HC1 HC2]].",
                        "VernacExtend",
                        "9f6e355325f55be4032ac56e3e3f4ee3085fe447"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (per__ex_saccheri B C A) as [D HSac]; Perp.",
                        "VernacExtend",
                        "7b53aeecbb31e1e7c04bec468a9195bf6c4f12de"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "assert (Rectangle B C D A) by (apply sac_rectangle;auto).",
                        "VernacExtend",
                        "f9a5fe02c9aa36bea3d24e9cd8361f38cd77ba4d"
                    ]
                },
                {
                    "command": [
                        "unfold Square;split.",
                        "VernacExtend",
                        "09ef798318dd3b40396d1604e706e2076b111da5"
                    ]
                },
                {
                    "command": [
                        "auto using rect_permut.",
                        "VernacExtend",
                        "71f8715949c7df17f72f3a413f96fb06c733bd51"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp3__perp",
            "line_nb": 3411,
            "steps": [
                {
                    "command": [
                        "intros A B C D.",
                        "VernacExtend",
                        "3cb4bc40e6b9225fee518467022fc0ed8d5c094f"
                    ]
                },
                {
                    "command": [
                        "apply cop_perp3__perp, all_coplanar.",
                        "VernacExtend",
                        "f02ee95c7050215715c8858838be4b5a66698e4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp3__rect",
            "line_nb": 3415,
            "steps": [
                {
                    "command": [
                        "intros A B C D.",
                        "VernacExtend",
                        "3cb4bc40e6b9225fee518467022fc0ed8d5c094f"
                    ]
                },
                {
                    "command": [
                        "apply cop_perp3__rect, all_coplanar.",
                        "VernacExtend",
                        "67e9a9379a1a60a629b7e460cbe2021a88516729"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}