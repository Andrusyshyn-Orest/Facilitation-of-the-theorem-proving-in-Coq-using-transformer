{
    "filename": "Tarski_dev/Tactics/CoincR_for_cop.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Tarski_dev.Ch09_plane.",
            "VernacRequire",
            "56e54735c06a0845a102f1a317b1c47066572ba6"
        ],
        [
            "Require Import NArith.",
            "VernacRequire",
            "94ad0f31c6e8f77c89e55924450f512e031ec933"
        ],
        [
            "Require Import GeoCoq.Utils.sets.",
            "VernacRequire",
            "683b6258c49d18c9e40d121098acf4ce0c5cd444"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Models.tarski_to_coinc_theory_for_cop.",
            "VernacRequire",
            "587dde54b714897e5f8332d76436a68c97bbc630"
        ],
        [
            "Require Import GeoCoq.Tactics.Coinc.CoincR.",
            "VernacRequire",
            "0b48e4a5ce4e4fe697843f2e38810dd1e45c96c8"
        ],
        [
            "Section CoincR_for_cop.",
            "VernacBeginSection",
            "51ca416493e1ff09dfbabd8de2de38942d344731"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Definition ss_ok_for_cop ss interp := @ss_ok Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop ss interp.",
            "VernacDefinition",
            "d8f2aefd462b3be977ff7047bea0e5be749bddc0"
        ],
        [
            "Lemma ss_ok_empty_for_cop : forall interp, ss_ok_for_cop SS.empty interp.",
            "VernacStartTheoremProof",
            "c578d0cbef65ee6ba00a194ea726b03f5c2141fd"
        ],
        [
            "exact ss_ok_empty.",
            "VernacExtend",
            "bd597f41f480f272c9694599902438b86c4f2aee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_coincs_for_cop : forall A B C D pa pb pc pd ss interp, Coplanar A B C D -> interp pa = A -> interp pb = B -> interp pc = C -> interp pd = D -> ss_ok_for_cop ss interp -> ss_ok_for_cop (SS.add (@CPToSS 4 (pa, (pb, (pc, pd)))) ss) interp.",
            "VernacStartTheoremProof",
            "5d1ac119b7f9706f1bd97b3e3afe075caf87a250"
        ],
        [
            "intros A B C D pa pb pc pd ss interp HCol HA HB HC HD HSS.",
            "VernacExtend",
            "207e8d04201a506a630ba04f65ae3a7818ae655c"
        ],
        [
            "apply (@collect_coincs Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop); [apply Tarski_is_a_Coinc_theory_for_cop|simpl|auto].",
            "VernacExtend",
            "8ad0cefc6a2830844d27567b02146a12f617c055"
        ],
        [
            "rewrite HA; rewrite HB; rewrite HC; rewrite HD; auto.",
            "VernacExtend",
            "946dc0954fa083100b099082d0c72247f53c8d0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition st_ok_for_cop st interp := @st_ok Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop st interp.",
            "VernacDefinition",
            "abe92a3026554ffeb3ec25fbfa4bf8c42176929c"
        ],
        [
            "Lemma st_ok_empty_for_cop : forall interp, st_ok_for_cop STempty interp.",
            "VernacStartTheoremProof",
            "5402599181b1a0daa5364a189ada48ad045a6025"
        ],
        [
            "exact st_ok_empty.",
            "VernacExtend",
            "ea12415985feb4f0effce603c3b2c95244ce9d8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_wds_for_cop : forall A B C pa pb pc st interp, ~ Col A B C -> interp pa = A -> interp pb = B -> interp pc = C -> st_ok_for_cop st interp -> st_ok_for_cop (STadd (pa, (pb, pc)) st) interp.",
            "VernacStartTheoremProof",
            "698aaaf8af5664b6df71a9cdb4c355096a6d6cc8"
        ],
        [
            "intros A B C pa pb pc st interp HDiff HA HB HC HST.",
            "VernacExtend",
            "c96fb86e08200d4d8d0b5480aeddc1f3f132909c"
        ],
        [
            "apply (@collect_wds Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop); [apply Tarski_is_a_Coinc_theory_for_cop|simpl|auto].",
            "VernacExtend",
            "9658d11b4225977717ff18e3cd3f06a4299d3ead"
        ],
        [
            "rewrite HA; rewrite HB; rewrite HC; auto.",
            "VernacExtend",
            "cbe113f53abbfa79426ffa430a0e7176ae6deb1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition test_coinc_for_cop ss st (pa pb pc pd : positive) := @test_coinc Tarski_is_a_Arity_for_cop ss st (pa, (pb, (pc, pd))).",
            "VernacDefinition",
            "8f01c3941a9fabe7a26e09bfb7f82e703c5044f9"
        ],
        [
            "Definition interp_CP_for_cop (pa pb pc pd : positive) interp := @interp_CP Tarski_is_a_Arity_for_cop 3 (pa, (pb, (pc, pd))) interp.",
            "VernacDefinition",
            "95028c32a6011ad11dd6058f8c30ce1d31915088"
        ],
        [
            "Lemma test_coinc_ok_for_cop : forall pa pb pc pd ss st interp, ss_ok_for_cop ss interp -> st_ok_for_cop st interp -> test_coinc_for_cop ss st pa pb pc pd = true -> Coplanar (interp pa) (interp pb) (interp pc) (interp pd).",
            "VernacStartTheoremProof",
            "c0a6e94f574767354a3b03b44b6b7af8187424fb"
        ],
        [
            "intros pa pb pc pd ss st interp HSS HST HTest.",
            "VernacExtend",
            "196d15b51e32b1dc9f95180c5198e3c5a7298ac9"
        ],
        [
            "assert (HCop := @test_coinc_ok Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop Tarski_is_a_Coinc_theory_for_cop ss st interp (pa, (pb, (pc, pd))) HSS HST HTest).",
            "VernacExtend",
            "80b2ceec789687a7b0638d9b5cbed7a4fb20a7e3"
        ],
        [
            "simpl in HCop; auto.",
            "VernacExtend",
            "57f10dbc070e6a95a380ceaba107f62481aac8f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CoincR_for_cop.",
            "VernacEndSegment",
            "f5d9a78fa890d4a200ebc1742d6ffbf030e3865f"
        ],
        [
            "Ltac assert_ss_ok Tpoint Cop lvar := repeat match goal with | HCop : Cop ?A ?B ?C ?D, HOK : ss_ok_for_cop ?SS ?Interp |- _ => let pa := List_assoc Tpoint A lvar in let pb := List_assoc Tpoint B lvar in let pc := List_assoc Tpoint C lvar in let pd := List_assoc Tpoint D lvar in apply PropToTagged in HCop; apply (collect_coincs_for_cop A B C D pa pb pc pd SS Interp HCop) in HOK; try reflexivity end.",
            "VernacExtend",
            "a9234d8822224cb06d64fd79537114d04fe23dce"
        ],
        [
            "Ltac assert_st_ok Tpoint Col lvar := repeat match goal with | HNCol : ~ Col ?A ?B ?C, HOK : st_ok_for_cop ?ST ?Interp |- _ => let pa := List_assoc Tpoint A lvar in let pb := List_assoc Tpoint B lvar in let pc := List_assoc Tpoint C lvar in apply PropToTagged in HNCol; apply (collect_wds_for_cop A B C pa pb pc ST Interp HNCol) in HOK; try reflexivity end.",
            "VernacExtend",
            "9ae4e32111bfd58835b61346e1b28aea57fef40a"
        ],
        [
            "Ltac Cop_refl Tpoint Col Cop := match goal with | Default : Tpoint |- Cop ?A ?B ?C ?D => let lvar := build_numbered_points_list Tpoint in let pa := List_assoc Tpoint A lvar in let pb := List_assoc Tpoint B lvar in let pc := List_assoc Tpoint C lvar in let pd := List_assoc Tpoint D lvar in let c := ((vm_compute;reflexivity) || fail 2 \"Can not be deduced\") in let HSS := fresh in assert (HSS := ss_ok_empty_for_cop (interp lvar Default)); assert_ss_ok Tpoint Cop lvar; let HST := fresh in assert (HST := st_ok_empty_for_cop (interp lvar Default)); assert_st_ok Tpoint Col lvar; match goal with | HOKSS : ss_ok_for_cop ?SS ?Interp, HOKST : st_ok_for_cop ?ST ?Interp |- _ => apply (test_coinc_ok_for_cop pa pb pc pd SS ST Interp HOKSS HOKST); c end end.",
            "VernacExtend",
            "2d254a24c0b42e8285a7b7eecd6271a72c0386ca"
        ]
    ],
    "proofs": [
        {
            "name": "ss_ok_empty_for_cop",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "exact ss_ok_empty.",
                        "VernacExtend",
                        "bd597f41f480f272c9694599902438b86c4f2aee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_coincs_for_cop",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros A B C D pa pb pc pd ss interp HCol HA HB HC HD HSS.",
                        "VernacExtend",
                        "207e8d04201a506a630ba04f65ae3a7818ae655c"
                    ]
                },
                {
                    "command": [
                        "apply (@collect_coincs Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop); [apply Tarski_is_a_Coinc_theory_for_cop|simpl|auto].",
                        "VernacExtend",
                        "8ad0cefc6a2830844d27567b02146a12f617c055"
                    ]
                },
                {
                    "command": [
                        "rewrite HA; rewrite HB; rewrite HC; rewrite HD; auto.",
                        "VernacExtend",
                        "946dc0954fa083100b099082d0c72247f53c8d0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "st_ok_empty_for_cop",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "exact st_ok_empty.",
                        "VernacExtend",
                        "ea12415985feb4f0effce603c3b2c95244ce9d8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_wds_for_cop",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros A B C pa pb pc st interp HDiff HA HB HC HST.",
                        "VernacExtend",
                        "c96fb86e08200d4d8d0b5480aeddc1f3f132909c"
                    ]
                },
                {
                    "command": [
                        "apply (@collect_wds Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop); [apply Tarski_is_a_Coinc_theory_for_cop|simpl|auto].",
                        "VernacExtend",
                        "9658d11b4225977717ff18e3cd3f06a4299d3ead"
                    ]
                },
                {
                    "command": [
                        "rewrite HA; rewrite HB; rewrite HC; auto.",
                        "VernacExtend",
                        "cbe113f53abbfa79426ffa430a0e7176ae6deb1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "test_coinc_ok_for_cop",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros pa pb pc pd ss st interp HSS HST HTest.",
                        "VernacExtend",
                        "196d15b51e32b1dc9f95180c5198e3c5a7298ac9"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := @test_coinc_ok Tarski_is_a_Arity_for_cop Tarski_is_a_Coinc_predicates_for_cop Tarski_is_a_Coinc_theory_for_cop ss st interp (pa, (pb, (pc, pd))) HSS HST HTest).",
                        "VernacExtend",
                        "80b2ceec789687a7b0638d9b5cbed7a4fb20a7e3"
                    ]
                },
                {
                    "command": [
                        "simpl in HCop; auto.",
                        "VernacExtend",
                        "57f10dbc070e6a95a380ceaba107f62481aac8f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}