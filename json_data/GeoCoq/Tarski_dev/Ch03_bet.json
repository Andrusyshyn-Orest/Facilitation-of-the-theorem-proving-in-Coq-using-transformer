{
    "filename": "Tarski_dev/Ch03_bet.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch02_cong.",
            "VernacRequire",
            "f718c42648d0b3da50e5bff5fa152c5fd54df21f"
        ],
        [
            "Section T2_1.",
            "VernacBeginSection",
            "2369298d1a77d1c161a1d3f807b2e8b760be5015"
        ],
        [
            "Context `{Tn:Tarski_neutral_dimensionless}.",
            "VernacContext",
            "19982cdd2d307fcea7f3b23e9bd1bd6ebb36d5bb"
        ],
        [
            "Lemma bet_col : forall A B C, Bet A B C -> Col A B C.",
            "VernacStartTheoremProof",
            "9ad01b2d9146f223d21bf8a7b3e518f3266e6ff9"
        ],
        [
            "intros;unfold Col;auto.",
            "VernacExtend",
            "fb72d8f69935480cc46d5984be713c6b479ac67a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_trivial : forall A B : Tpoint, Bet A B B.",
            "VernacStartTheoremProof",
            "e85e210a67c595d8f1de9ef9f2dd0b3c11271e2f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong A B x B B.",
            "VernacExtend",
            "a3d9da6c0395c9cf13a6523ca5c51fc19570bf19"
        ],
        [
            "assert (x = B) by (apply cong_reverse_identity with B; Cong).",
            "VernacExtend",
            "2429e658ead7f75ff68b01a5e462020d82933ac1"
        ],
        [
            "subst;assumption.",
            "VernacExtend",
            "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_symmetry : forall A B C : Tpoint, Bet A B C -> Bet C B A.",
            "VernacStartTheoremProof",
            "928c294c6988c8313c276cf4831c6c87245b43b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Bet B C C) by (apply between_trivial).",
            "VernacExtend",
            "bfd0e818a18b6f9c3af160c7b1b1a19b4817e0a7"
        ],
        [
            "assert(exists x, Bet B x B /\\ Bet C x A) by (apply inner_pasch with C;auto).",
            "VernacExtend",
            "1b93dcca2e252bf9c01b0e447c085b5b10c4a18e"
        ],
        [
            "ex_and H1 x.",
            "VernacExtend",
            "c361a38a1b27acee6c483cf87a7f204f2e88a370"
        ],
        [
            "apply between_identity in H1; subst; assumption.",
            "VernacExtend",
            "2deb8cdd4154ebd555244d5089cd945484bb9e40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bet_cases : forall A B C, Bet A B C \\/ Bet C B A -> Bet A B C.",
            "VernacStartTheoremProof",
            "dcfc3b4952baf8c038da2b98926bf0c5d5bdd70c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H; auto using between_symmetry.",
            "VernacExtend",
            "df523102cc86dc0014466fd55466ddd2f7812daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bet_perm : forall A B C, Bet A B C -> Bet A B C /\\ Bet C B A.",
            "VernacStartTheoremProof",
            "b75b0f81d234b40a11e2015a63a6b1b67e9d03db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "auto using between_symmetry.",
            "VernacExtend",
            "25d420052f40eb538c9c7010fb8fb79f31c3832e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_trivial2 : forall A B : Tpoint, Bet A A B.",
            "VernacStartTheoremProof",
            "90d2bae2934a6cad3028de8000bbc639ebd8d971"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_equality : forall A B C : Tpoint, Bet A B C -> Bet B A C -> A = B.",
            "VernacStartTheoremProof",
            "79e6b9c247beed54d5a6bd1e5a17b2d0d281eb22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists x, Bet B x B /\\ Bet A x A) by (apply (inner_pasch A B C);assumption).",
            "VernacExtend",
            "abdb334ca494013175ab89b4361d8c13244b556b"
        ],
        [
            "ex_and H1 x.",
            "VernacExtend",
            "c361a38a1b27acee6c483cf87a7f204f2e88a370"
        ],
        [
            "apply between_identity in H1.",
            "VernacExtend",
            "1a351db9428901686a7484b9395bdf448a2b5084"
        ],
        [
            "apply between_identity in H2.",
            "VernacExtend",
            "7d110d1d338105b9976ea0d396d4a498f037f767"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_equality_2 : forall A B C : Tpoint, Bet A B C -> Bet A C B -> B = C.",
            "VernacStartTheoremProof",
            "a35b77b2ec1bb8b010ceed247c16c80677b24688"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply between_equality with A; auto using between_symmetry.",
            "VernacExtend",
            "26bab9ef6acb01f129886c7aa6ebc3c2ca10cee8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_exchange3 : forall A B C D, Bet A B C -> Bet A C D -> Bet B C D.",
            "VernacStartTheoremProof",
            "fcd3cd0f3c07401da57e6d291b8843e1d2190264"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists x, Bet C x C /\\ Bet B x D) by (apply inner_pasch with A; apply between_symmetry; auto).",
            "VernacExtend",
            "6f0ad57a9679114003b0efacd52fcb21dc2921a3"
        ],
        [
            "ex_and H1 x.",
            "VernacExtend",
            "c361a38a1b27acee6c483cf87a7f204f2e88a370"
        ],
        [
            "assert (C = x) by (apply between_identity; auto); subst; auto.",
            "VernacExtend",
            "ab199b7ed6abca6f67624fa49d4796904d7da1fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_neq12__neq : forall A B C, Bet A B C -> A <> B -> A <> C.",
            "VernacStartTheoremProof",
            "586bd26b2b7e6f5d12b49b04cdd2cef364e118c6"
        ],
        [
            "intros A B C HBet HAB Heq.",
            "VernacExtend",
            "035e75e6142e22ec65e5a8954d1ee5f49a2f4f4d"
        ],
        [
            "subst C; apply HAB, between_identity; trivial.",
            "VernacExtend",
            "8a2b23c3eb4c8312688c1205c84bb730edc0bc80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_neq21__neq : forall A B C, Bet A B C -> B <> A -> A <> C.",
            "VernacStartTheoremProof",
            "fc281626fa053af3038e742ac2d5002fe56468df"
        ],
        [
            "intros A B C HBet HAB.",
            "VernacExtend",
            "a9fb0c32ef5fb89254c6348be0880d050390ac04"
        ],
        [
            "apply bet_neq12__neq with B; auto.",
            "VernacExtend",
            "9658210467fac50c88dd666e5ed4e32992ee3978"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_neq23__neq : forall A B C, Bet A B C -> B <> C -> A <> C.",
            "VernacStartTheoremProof",
            "04873d45caa7e1d530284881e05c0241de6f0804"
        ],
        [
            "intros A B C HBet HBC Heq.",
            "VernacExtend",
            "9a6b4b7581ce6002a895f91303ac953a258d4a18"
        ],
        [
            "subst C; apply HBC; symmetry.",
            "VernacExtend",
            "f7d31fe4891d7a9e4495a9145ecdc93c7ae36000"
        ],
        [
            "apply between_identity; trivial.",
            "VernacExtend",
            "e1590ab534d7346b49074131f5d520ffe140b4cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_neq32__neq : forall A B C, Bet A B C -> C <> B -> A <> C.",
            "VernacStartTheoremProof",
            "d1ded32786656caacad8ccd86f9f10c8287e2bcb"
        ],
        [
            "intros A B C HBet HAB.",
            "VernacExtend",
            "a9fb0c32ef5fb89254c6348be0880d050390ac04"
        ],
        [
            "apply bet_neq23__neq with B; auto.",
            "VernacExtend",
            "cb1a1cac0cd3836ef24594433fdb8d08d7c70c62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_bet_distincts : forall A B C, ~ Bet A B C -> A <> B /\\ B <> C.",
            "VernacStartTheoremProof",
            "d95dfc0777c9d552c5718bed2ee54ab376e3c028"
        ],
        [
            "intros A B C HNBet.",
            "VernacExtend",
            "882914fe0e5f0ca55e21b2c66e435ac42b3a500c"
        ],
        [
            "repeat split; intro; subst B; apply HNBet.",
            "VernacExtend",
            "b90a18beb24f565a7c7b82162d52dfb203430c21"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T2_1.",
            "VernacEndSegment",
            "5c5a22686df867ff742c8ef590f1d722d3128d73"
        ],
        [
            "Ltac not_exist_hyp_perm_col A B C := not_exist_hyp (Col A B C); not_exist_hyp (Col A C B); not_exist_hyp (Col B A C); not_exist_hyp (Col B C A); not_exist_hyp (Col C A B); not_exist_hyp (Col C B A).",
            "VernacExtend",
            "88a11b2bfd791519b6abdc00a4f70f735eda7f2e"
        ],
        [
            "Ltac assert_cols := repeat match goal with | H:Bet ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;assert (Col X1 X2 X3) by (apply bet_col;apply H) end.",
            "VernacExtend",
            "1d85327a520d45217a6bb216c7cb4c91ec61c2f2"
        ],
        [
            "Ltac clean_trivial_hyps := repeat match goal with | H:(Cong ?X1 ?X1 ?X2 ?X2) |- _ => clear H | H:(Cong ?X1 ?X2 ?X2 ?X1) |- _ => clear H | H:(Cong ?X1 ?X2 ?X1 ?X2) |- _ => clear H | H:(Bet ?X1 ?X1 ?X2) |- _ => clear H | H:(Bet ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X1 ?X2) |- _ => clear H | H:(Col ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X2 ?X1) |- _ => clear H end.",
            "VernacExtend",
            "205ec8e94190c1e62f8a3e84ad0fe8e2c9bd5f81"
        ],
        [
            "Ltac clean_reap_hyps := clean_duplicated_hyps; repeat match goal with | H:(Col ?A ?B ?C), H2 : Col ?A ?C ?B |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?A ?C |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?C ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?B ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?A ?B |- _ => clear H2 | H:(Bet ?A ?B ?C), H2 : Bet ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?A ?B ?D ?C |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?C ?D |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?D ?C |- _ => clear H2 | H:(?A<>?B), H2 : (?B<>?A) |- _ => clear H2 end.",
            "VernacExtend",
            "df2d4915c6cb75d3debf2f1322b2d5ed7646bb86"
        ],
        [
            "Ltac clean := clean_trivial_hyps;clean_reap_hyps.",
            "VernacExtend",
            "bacc52c10944221f6b2d0c48a22af2864eebb2bb"
        ],
        [
            "Ltac smart_subst X := subst X;clean.",
            "VernacExtend",
            "bfe415287ec55cbf188787762cae8b6ed6e79816"
        ],
        [
            "Ltac treat_equalities_aux := repeat match goal with | H:(?X1 = ?X2) |- _ => smart_subst X2 end.",
            "VernacExtend",
            "3d36aae2eea3da7c83ef7450bbeae675d2eb6908"
        ],
        [
            "Ltac treat_equalities := try treat_equalities_aux; repeat match goal with | H:(Cong ?X3 ?X3 ?X1 ?X2) |- _ => apply cong_symmetry in H; apply cong_identity in H;smart_subst X2 | H:(Cong ?X1 ?X2 ?X3 ?X3) |- _ => apply cong_identity in H;smart_subst X2 | H:(Bet ?X1 ?X2 ?X1) |- _ => apply between_identity in H;smart_subst X2 end.",
            "VernacExtend",
            "529f8a8e817aaf2253c1564ab320c0ce17e8b01a"
        ],
        [
            "Ltac show_distinct X Y := assert (X<>Y);[unfold not;intro;treat_equalities|idtac].",
            "VernacExtend",
            "7d5fc94af9283ca3007f2b5fbee477eacd39e1f6"
        ],
        [
            "Hint Resolve between_symmetry bet_col : between.",
            "VernacHints",
            "c73703918dad56595166345a654f8669ebf97582"
        ],
        [
            "Hint Resolve between_trivial between_trivial2 : between_no_eauto.",
            "VernacHints",
            "fd67a07869932cb77793cc159482fca5023e4c28"
        ],
        [
            "Ltac eBetween := treat_equalities;eauto with between.",
            "VernacExtend",
            "596cac674bd10c1dd4ea89abce7388c09d196fc2"
        ],
        [
            "Ltac Between := treat_equalities;auto with between between_no_eauto.",
            "VernacExtend",
            "00f278711eab7376ecd572ae6a4fc2da27659aaf"
        ],
        [
            "Section T2_2.",
            "VernacBeginSection",
            "4f17ada0fce6202b5fbb808b4c000387d1dd6333"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma between_inner_transitivity : forall A B C D, Bet A B D -> Bet B C D -> Bet A B C.",
            "VernacStartTheoremProof",
            "2b812f58dd809414e968a4c523ec176ad1967522"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists x, Bet B x B /\\ Bet C x A) by (apply inner_pasch with D;auto).",
            "VernacExtend",
            "08558d5de6d60659170bba5239b9308a132b00c2"
        ],
        [
            "ex_and H1 x.",
            "VernacExtend",
            "c361a38a1b27acee6c483cf87a7f204f2e88a370"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outer_transitivity_between2 : forall A B C D, Bet A B C -> Bet B C D -> B<>C -> Bet A C D.",
            "VernacStartTheoremProof",
            "8a2ee155fbff39c6459de994aa0c95cdf83cd7c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong A C x C D.",
            "VernacExtend",
            "ccc626b4d3869401365057442b267ac836ae8063"
        ],
        [
            "assert (x = D) by (apply (construction_uniqueness B C C D); try apply (between_exchange3 A B C x); Cong).",
            "VernacExtend",
            "d59add57605fe52c3fdf00ff91aacb7d48275c93"
        ],
        [
            "subst x;assumption.",
            "VernacExtend",
            "1da2d8d6ffd5f417004e58b68b44888d629db6d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T2_2.",
            "VernacEndSegment",
            "f9bcb55d02483ec2c198c74aa314614e0f6c6301"
        ],
        [
            "Hint Resolve outer_transitivity_between2 between_inner_transitivity between_exchange3 : between.",
            "VernacHints",
            "2b02b48e87bb61a8ca35d466120b55189710bd56"
        ],
        [
            "Section T2_3.",
            "VernacBeginSection",
            "a668116eb6f465e9be7721a7769e4b80ece0de32"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma between_exchange2 : forall A B C D, Bet A B D -> Bet B C D -> Bet A C D.",
            "VernacStartTheoremProof",
            "ef05ed993c4fdf95c1664847d5f7eab5088479cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points B C);eBetween.",
            "VernacExtend",
            "c8dd7126f4eebaaef854667f1e93f18284ad193f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outer_transitivity_between : forall A B C D, Bet A B C -> Bet B C D -> B<>C -> Bet A B D.",
            "VernacStartTheoremProof",
            "b41fc4b2b381457c570ae4371aa7d68c0ac99f94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply (outer_transitivity_between2) with C; Between.",
            "VernacExtend",
            "1c1c731ea48d2108215867b61cd066fadac95dd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_exchange4 : forall A B C D, Bet A B C -> Bet A C D -> Bet A B D.",
            "VernacStartTheoremProof",
            "a7a1601e14f7474d1ed1b4436a007aaa1aa02fa6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply between_exchange2 with C; Between.",
            "VernacExtend",
            "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T2_3.",
            "VernacEndSegment",
            "460030f4b151e710b34ec32f248addfc5cf22241"
        ],
        [
            "Hint Resolve between_exchange2 outer_transitivity_between between_exchange4 : between.",
            "VernacHints",
            "809616d4b7565b8d0b0315957fa873f6fae88f90"
        ],
        [
            "Section T2_4.",
            "VernacBeginSection",
            "2fb657435faa648513d5df87a53b7149a8a02f20"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma l3_9_4 : forall A1 A2 A3 A4, Bet_4 A1 A2 A3 A4 -> Bet_4 A4 A3 A2 A1.",
            "VernacStartTheoremProof",
            "1003339c5f3474d6924828d55dbbf48c81eaaa0c"
        ],
        [
            "unfold Bet_4.",
            "VernacExtend",
            "970a91fd4b0be5efc100cb157b1f3cef9edd34da"
        ],
        [
            "intros;spliter; auto with between.",
            "VernacExtend",
            "01bab1a74dd6bfaa63ee3a27f56ba1cd1a19b0ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l3_17 : forall A B C A' B' P, Bet A B C -> Bet A' B' C -> Bet A P A' -> exists Q, Bet P Q C /\\ Bet B Q B'.",
            "VernacStartTheoremProof",
            "d80fe4e6018b6bcf8fddb9933294aff65c3cf719"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists Q', Bet B' Q' A /\\ Bet P Q' C) by (eapply inner_pasch;eBetween).",
            "VernacExtend",
            "e98ad5f384e9eac6dc7eec129d946d511f07af29"
        ],
        [
            "ex_and H2 x.",
            "VernacExtend",
            "ef1da8141f36d98aa551eee108adcde9db935cbc"
        ],
        [
            "assert (exists y, Bet x y C /\\ Bet B y B') by (eapply inner_pasch;eBetween).",
            "VernacExtend",
            "6ee672015da98b613f0aa37570a44d2f22d9a4e2"
        ],
        [
            "ex_and H4 y.",
            "VernacExtend",
            "d1289a4fd70ff45e3d02f470a01aca6cb9a9103f"
        ],
        [
            "exists y;eBetween.",
            "VernacExtend",
            "c56b8b57efb187ec1fcc9905fbdac2805efd5cef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_dim_ex : exists A B C, ~ (Bet A B C \\/ Bet B C A \\/ Bet C A B).",
            "VernacStartTheoremProof",
            "9581144a79eb7933dae97c25d81b1e50de085fe2"
        ],
        [
            "exists PA.",
            "VernacExtend",
            "622b4aa6785bc89721152376cb73c5b80405758d"
        ],
        [
            "exists PB.",
            "VernacExtend",
            "69c21241806210762e0ce7bf255fb6c8c374fa9e"
        ],
        [
            "exists PC.",
            "VernacExtend",
            "ae87fdaa92558c05e4a309201318eed4cc1bce62"
        ],
        [
            "apply lower_dim.",
            "VernacExtend",
            "fde5b28f165f075785a484c54b0ba551bc174bbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_distinct_points : exists X, exists Y: Tpoint, X <> Y.",
            "VernacStartTheoremProof",
            "b38160a64f7c1ba2ee3b032ccf695e9fae8ed72f"
        ],
        [
            "assert (ld:=lower_dim_ex).",
            "VernacExtend",
            "3f723c866dee2e000b8ce600c3f7490b6a621f51"
        ],
        [
            "ex_elim ld A.",
            "VernacExtend",
            "8a18c8f7df13c4266ef28717644e3f374d4bb194"
        ],
        [
            "ex_elim H B.",
            "VernacExtend",
            "6e33c7007c8463ac101cba00243870b7e612dcfc"
        ],
        [
            "ex_elim H0 C.",
            "VernacExtend",
            "3b3d7d094f6244c805e592b227f17e22f04bd0a2"
        ],
        [
            "exists A; exists B.",
            "VernacExtend",
            "7e77e6a4d5d50cc3e964e19602c9d666bb5fecce"
        ],
        [
            "intro; subst; apply H.",
            "VernacExtend",
            "5e36b9ff5de74f2a0185dfde3834bae74ef19ef8"
        ],
        [
            "right; right; apply between_trivial.",
            "VernacExtend",
            "9cef259009b2adef6e54c5fbfe82d9a714169092"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma point_construction_different : forall A B, exists C, Bet A B C /\\ B <> C.",
            "VernacStartTheoremProof",
            "8be0a54d35f1628f0291fc5a21ada7e8c75e5714"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (tdp := two_distinct_points).",
            "VernacExtend",
            "7eb270c1387c17c586de780fa4683cf2d4aabafb"
        ],
        [
            "ex_elim tdp x.",
            "VernacExtend",
            "dce50e31a4016c8f01269830ec3bf7081de19b6e"
        ],
        [
            "ex_elim H y.",
            "VernacExtend",
            "2c009f9c7a36e36d4a3d38f9e9b384bb5ac11ccf"
        ],
        [
            "prolong A B F x y.",
            "VernacExtend",
            "904a4cf95197d788ced486237252206603b5d275"
        ],
        [
            "exists F.",
            "VernacExtend",
            "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
        ],
        [
            "show_distinct B F.",
            "VernacExtend",
            "d284519a4695ba322cff09c3487ffb29e025e6e1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma another_point : forall A: Tpoint, exists B, A<>B.",
            "VernacStartTheoremProof",
            "c0a71e38437e8a9fa25b47c4222ba88ace4e78ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (pcd := point_construction_different A A).",
            "VernacExtend",
            "2c0ad7f09cdd9b63ce866fccc2285e29ce4cb704"
        ],
        [
            "ex_and pcd B.",
            "VernacExtend",
            "01cc2884596695420f96659e069884dbb18b4c7d"
        ],
        [
            "exists B;assumption.",
            "VernacExtend",
            "0da9dfd8fe595afcf46bc06d9828e427cdebfe5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T2_4.",
            "VernacEndSegment",
            "115d20ef4e00df586ef316017bedfe75327b7034"
        ],
        [
            "Section Beeson_1.",
            "VernacBeginSection",
            "8b362501cef04b7907ecabae389132a8a5a2cb77"
        ],
        [
            "Context `{Tn:Tarski_neutral_dimensionless}.",
            "VernacContext",
            "19982cdd2d307fcea7f3b23e9bd1bd6ebb36d5bb"
        ],
        [
            "Variable Cong_stability : forall A B C D, ~ ~ Cong A B C D -> Cong A B C D.",
            "VernacAssumption",
            "52c93d0de7ca196868c9c334ec488335b360c792"
        ],
        [
            "Lemma l2_11_b : forall A B C A' B' C', Bet A B C -> Bet A' B' C' -> Cong A B A' B' -> Cong B C B' C' -> Cong A C A' C'.",
            "VernacStartTheoremProof",
            "f820a00862bf9257486c03f47942e7061d62e3b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Cong_stability; intro.",
            "VernacExtend",
            "8fb2c649c1d1ef47f37ed82d3f4fd6ee8926dc68"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro; subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "assert (A'=B') by (apply (cong_identity A' B' B); Cong).",
            "VernacExtend",
            "4de5a82bb8d28e67bf4415d6aa6cc2058684a704"
        ],
        [
            "subst; tauto.",
            "VernacExtend",
            "242b88ac37f1205319ab9d9cd58773501a7271b8"
        ],
        [
            "assert (Cong C A C' A') by (apply (five_segment _ _ _ _ _ _ _ _ H1 );auto using cong_trivial_identity, cong_commutativity).",
            "VernacExtend",
            "1be7ea8ac8129ceee4b5c9e40e7734c1c74f8e59"
        ],
        [
            "apply H3; Cong.",
            "VernacExtend",
            "8fc709e006ca80ee40c355db07c04f797acf329d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_dec_eq_dec_b : (forall A B:Tpoint, ~ A <> B -> A = B).",
            "VernacStartTheoremProof",
            "378f05e4e4bcb64c606b1df9a4a6c785e3b13cca"
        ],
        [
            "intros A B HAB.",
            "VernacExtend",
            "93185588036a8a63b6bb34231ac3b3bab4c2385e"
        ],
        [
            "apply cong_identity with A.",
            "VernacExtend",
            "f4ab7efb4ab47d6e46bc2d8a4790e5a95b53e0e6"
        ],
        [
            "apply Cong_stability.",
            "VernacExtend",
            "f3efdb9c7f30a9de46ade133e5caef157f561277"
        ],
        [
            "intro HNCong.",
            "VernacExtend",
            "7b58ff8a3ff68ee4785ca34e3d2e503d47efe419"
        ],
        [
            "apply HAB.",
            "VernacExtend",
            "dfefecb2bffb160f6e58586154a2e53ee3c785bb"
        ],
        [
            "intro HEq.",
            "VernacExtend",
            "5ba0ec7bcb7e0b7d3571015fa4add3d531fa33ef"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply HNCong.",
            "VernacExtend",
            "a3afddee961db56c5fdf29cc028977f5812aab57"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Beeson_1.",
            "VernacEndSegment",
            "d01b0b3644c6f84a9d866feecb14f41140d48510"
        ],
        [
            "Section Beeson_2.",
            "VernacBeginSection",
            "22032b8c0a943071425a1cfa3831f17be1b0fceb"
        ],
        [
            "Context `{Tn:Tarski_neutral_dimensionless}.",
            "VernacContext",
            "19982cdd2d307fcea7f3b23e9bd1bd6ebb36d5bb"
        ],
        [
            "Variable Bet_stability : forall A B C, ~ ~ Bet A B C -> Bet A B C.",
            "VernacAssumption",
            "9bfe4a9117c6667c7048a749322a7c365dc5c1e1"
        ],
        [
            "Lemma bet_dec_eq_dec_b : (forall A B:Tpoint, ~ A <> B -> A = B).",
            "VernacStartTheoremProof",
            "d40d2e315d62a99f70cae60fb14622b4fdb0c2c2"
        ],
        [
            "intros A B HAB.",
            "VernacExtend",
            "93185588036a8a63b6bb34231ac3b3bab4c2385e"
        ],
        [
            "apply between_identity.",
            "VernacExtend",
            "be5bd53a9ca348add08532749a790ae2927c0f7e"
        ],
        [
            "apply Bet_stability.",
            "VernacExtend",
            "126158eb5ca6b57da80f5f3aa23219c9320087b1"
        ],
        [
            "intro HNBet.",
            "VernacExtend",
            "41c69df9d629ab5d15019807e428e889d1fbb6ab"
        ],
        [
            "apply HAB.",
            "VernacExtend",
            "dfefecb2bffb160f6e58586154a2e53ee3c785bb"
        ],
        [
            "intro HEq.",
            "VernacExtend",
            "5ba0ec7bcb7e0b7d3571015fa4add3d531fa33ef"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply HNBet.",
            "VernacExtend",
            "2c8f67f523132eafb6d0654cb3079db3cd4bc9ad"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma BetSEq : forall A B C, BetS A B C <-> Bet A B C /\\ A <> B /\\ A <> C /\\ B <> C.",
            "VernacStartTheoremProof",
            "a25fcade073c3e4b477cff0ad6de06120efe0974"
        ],
        [
            "intros; unfold BetS; split; intro; spliter; repeat split; auto; intro; treat_equalities; auto.",
            "VernacExtend",
            "70469e7bc8cbc7a097ed0de060bb8c5d43aa4804"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Beeson_2.",
            "VernacEndSegment",
            "226601b73804224bd96a93c707a124437a9f1dd8"
        ]
    ],
    "proofs": [
        {
            "name": "bet_col",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros;unfold Col;auto.",
                        "VernacExtend",
                        "fb72d8f69935480cc46d5984be713c6b479ac67a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_trivial",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "prolong A B x B B.",
                        "VernacExtend",
                        "a3d9da6c0395c9cf13a6523ca5c51fc19570bf19"
                    ]
                },
                {
                    "command": [
                        "assert (x = B) by (apply cong_reverse_identity with B; Cong).",
                        "VernacExtend",
                        "2429e658ead7f75ff68b01a5e462020d82933ac1"
                    ]
                },
                {
                    "command": [
                        "subst;assumption.",
                        "VernacExtend",
                        "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_symmetry",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Bet B C C) by (apply between_trivial).",
                        "VernacExtend",
                        "bfd0e818a18b6f9c3af160c7b1b1a19b4817e0a7"
                    ]
                },
                {
                    "command": [
                        "assert(exists x, Bet B x B /\\ Bet C x A) by (apply inner_pasch with C;auto).",
                        "VernacExtend",
                        "1b93dcca2e252bf9c01b0e447c085b5b10c4a18e"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 x.",
                        "VernacExtend",
                        "c361a38a1b27acee6c483cf87a7f204f2e88a370"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H1; subst; assumption.",
                        "VernacExtend",
                        "2deb8cdd4154ebd555244d5089cd945484bb9e40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bet_cases",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H; auto using between_symmetry.",
                        "VernacExtend",
                        "df523102cc86dc0014466fd55466ddd2f7812daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bet_perm",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "auto using between_symmetry.",
                        "VernacExtend",
                        "25d420052f40eb538c9c7010fb8fb79f31c3832e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_trivial2",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_equality",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, Bet B x B /\\ Bet A x A) by (apply (inner_pasch A B C);assumption).",
                        "VernacExtend",
                        "abdb334ca494013175ab89b4361d8c13244b556b"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 x.",
                        "VernacExtend",
                        "c361a38a1b27acee6c483cf87a7f204f2e88a370"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H1.",
                        "VernacExtend",
                        "1a351db9428901686a7484b9395bdf448a2b5084"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H2.",
                        "VernacExtend",
                        "7d110d1d338105b9976ea0d396d4a498f037f767"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_equality_2",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply between_equality with A; auto using between_symmetry.",
                        "VernacExtend",
                        "26bab9ef6acb01f129886c7aa6ebc3c2ca10cee8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_exchange3",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, Bet C x C /\\ Bet B x D) by (apply inner_pasch with A; apply between_symmetry; auto).",
                        "VernacExtend",
                        "6f0ad57a9679114003b0efacd52fcb21dc2921a3"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 x.",
                        "VernacExtend",
                        "c361a38a1b27acee6c483cf87a7f204f2e88a370"
                    ]
                },
                {
                    "command": [
                        "assert (C = x) by (apply between_identity; auto); subst; auto.",
                        "VernacExtend",
                        "ab199b7ed6abca6f67624fa49d4796904d7da1fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_neq12__neq",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros A B C HBet HAB Heq.",
                        "VernacExtend",
                        "035e75e6142e22ec65e5a8954d1ee5f49a2f4f4d"
                    ]
                },
                {
                    "command": [
                        "subst C; apply HAB, between_identity; trivial.",
                        "VernacExtend",
                        "8a2b23c3eb4c8312688c1205c84bb730edc0bc80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_neq21__neq",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros A B C HBet HAB.",
                        "VernacExtend",
                        "a9fb0c32ef5fb89254c6348be0880d050390ac04"
                    ]
                },
                {
                    "command": [
                        "apply bet_neq12__neq with B; auto.",
                        "VernacExtend",
                        "9658210467fac50c88dd666e5ed4e32992ee3978"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_neq23__neq",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros A B C HBet HBC Heq.",
                        "VernacExtend",
                        "9a6b4b7581ce6002a895f91303ac953a258d4a18"
                    ]
                },
                {
                    "command": [
                        "subst C; apply HBC; symmetry.",
                        "VernacExtend",
                        "f7d31fe4891d7a9e4495a9145ecdc93c7ae36000"
                    ]
                },
                {
                    "command": [
                        "apply between_identity; trivial.",
                        "VernacExtend",
                        "e1590ab534d7346b49074131f5d520ffe140b4cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_neq32__neq",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros A B C HBet HAB.",
                        "VernacExtend",
                        "a9fb0c32ef5fb89254c6348be0880d050390ac04"
                    ]
                },
                {
                    "command": [
                        "apply bet_neq23__neq with B; auto.",
                        "VernacExtend",
                        "cb1a1cac0cd3836ef24594433fdb8d08d7c70c62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_bet_distincts",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros A B C HNBet.",
                        "VernacExtend",
                        "882914fe0e5f0ca55e21b2c66e435ac42b3a500c"
                    ]
                },
                {
                    "command": [
                        "repeat split; intro; subst B; apply HNBet.",
                        "VernacExtend",
                        "b90a18beb24f565a7c7b82162d52dfb203430c21"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial2.",
                        "VernacExtend",
                        "09ca3a830f68cf2d030902e5b58c75ccba430b60"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_inner_transitivity",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists x, Bet B x B /\\ Bet C x A) by (apply inner_pasch with D;auto).",
                        "VernacExtend",
                        "08558d5de6d60659170bba5239b9308a132b00c2"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 x.",
                        "VernacExtend",
                        "c361a38a1b27acee6c483cf87a7f204f2e88a370"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outer_transitivity_between2",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "prolong A C x C D.",
                        "VernacExtend",
                        "ccc626b4d3869401365057442b267ac836ae8063"
                    ]
                },
                {
                    "command": [
                        "assert (x = D) by (apply (construction_uniqueness B C C D); try apply (between_exchange3 A B C x); Cong).",
                        "VernacExtend",
                        "d59add57605fe52c3fdf00ff91aacb7d48275c93"
                    ]
                },
                {
                    "command": [
                        "subst x;assumption.",
                        "VernacExtend",
                        "1da2d8d6ffd5f417004e58b68b44888d629db6d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_exchange2",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points B C);eBetween.",
                        "VernacExtend",
                        "c8dd7126f4eebaaef854667f1e93f18284ad193f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outer_transitivity_between",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "apply (outer_transitivity_between2) with C; Between.",
                        "VernacExtend",
                        "1c1c731ea48d2108215867b61cd066fadac95dd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_exchange4",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange2 with C; Between.",
                        "VernacExtend",
                        "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l3_9_4",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "unfold Bet_4.",
                        "VernacExtend",
                        "970a91fd4b0be5efc100cb157b1f3cef9edd34da"
                    ]
                },
                {
                    "command": [
                        "intros;spliter; auto with between.",
                        "VernacExtend",
                        "01bab1a74dd6bfaa63ee3a27f56ba1cd1a19b0ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l3_17",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists Q', Bet B' Q' A /\\ Bet P Q' C) by (eapply inner_pasch;eBetween).",
                        "VernacExtend",
                        "e98ad5f384e9eac6dc7eec129d946d511f07af29"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 x.",
                        "VernacExtend",
                        "ef1da8141f36d98aa551eee108adcde9db935cbc"
                    ]
                },
                {
                    "command": [
                        "assert (exists y, Bet x y C /\\ Bet B y B') by (eapply inner_pasch;eBetween).",
                        "VernacExtend",
                        "6ee672015da98b613f0aa37570a44d2f22d9a4e2"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 y.",
                        "VernacExtend",
                        "d1289a4fd70ff45e3d02f470a01aca6cb9a9103f"
                    ]
                },
                {
                    "command": [
                        "exists y;eBetween.",
                        "VernacExtend",
                        "c56b8b57efb187ec1fcc9905fbdac2805efd5cef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_dim_ex",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "exists PA.",
                        "VernacExtend",
                        "622b4aa6785bc89721152376cb73c5b80405758d"
                    ]
                },
                {
                    "command": [
                        "exists PB.",
                        "VernacExtend",
                        "69c21241806210762e0ce7bf255fb6c8c374fa9e"
                    ]
                },
                {
                    "command": [
                        "exists PC.",
                        "VernacExtend",
                        "ae87fdaa92558c05e4a309201318eed4cc1bce62"
                    ]
                },
                {
                    "command": [
                        "apply lower_dim.",
                        "VernacExtend",
                        "fde5b28f165f075785a484c54b0ba551bc174bbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_distinct_points",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "assert (ld:=lower_dim_ex).",
                        "VernacExtend",
                        "3f723c866dee2e000b8ce600c3f7490b6a621f51"
                    ]
                },
                {
                    "command": [
                        "ex_elim ld A.",
                        "VernacExtend",
                        "8a18c8f7df13c4266ef28717644e3f374d4bb194"
                    ]
                },
                {
                    "command": [
                        "ex_elim H B.",
                        "VernacExtend",
                        "6e33c7007c8463ac101cba00243870b7e612dcfc"
                    ]
                },
                {
                    "command": [
                        "ex_elim H0 C.",
                        "VernacExtend",
                        "3b3d7d094f6244c805e592b227f17e22f04bd0a2"
                    ]
                },
                {
                    "command": [
                        "exists A; exists B.",
                        "VernacExtend",
                        "7e77e6a4d5d50cc3e964e19602c9d666bb5fecce"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply H.",
                        "VernacExtend",
                        "5e36b9ff5de74f2a0185dfde3834bae74ef19ef8"
                    ]
                },
                {
                    "command": [
                        "right; right; apply between_trivial.",
                        "VernacExtend",
                        "9cef259009b2adef6e54c5fbfe82d9a714169092"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "point_construction_different",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (tdp := two_distinct_points).",
                        "VernacExtend",
                        "7eb270c1387c17c586de780fa4683cf2d4aabafb"
                    ]
                },
                {
                    "command": [
                        "ex_elim tdp x.",
                        "VernacExtend",
                        "dce50e31a4016c8f01269830ec3bf7081de19b6e"
                    ]
                },
                {
                    "command": [
                        "ex_elim H y.",
                        "VernacExtend",
                        "2c009f9c7a36e36d4a3d38f9e9b384bb5ac11ccf"
                    ]
                },
                {
                    "command": [
                        "prolong A B F x y.",
                        "VernacExtend",
                        "904a4cf95197d788ced486237252206603b5d275"
                    ]
                },
                {
                    "command": [
                        "exists F.",
                        "VernacExtend",
                        "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
                    ]
                },
                {
                    "command": [
                        "show_distinct B F.",
                        "VernacExtend",
                        "d284519a4695ba322cff09c3487ffb29e025e6e1"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "another_point",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (pcd := point_construction_different A A).",
                        "VernacExtend",
                        "2c0ad7f09cdd9b63ce866fccc2285e29ce4cb704"
                    ]
                },
                {
                    "command": [
                        "ex_and pcd B.",
                        "VernacExtend",
                        "01cc2884596695420f96659e069884dbb18b4c7d"
                    ]
                },
                {
                    "command": [
                        "exists B;assumption.",
                        "VernacExtend",
                        "0da9dfd8fe595afcf46bc06d9828e427cdebfe5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2_11_b",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Cong_stability; intro.",
                        "VernacExtend",
                        "8fb2c649c1d1ef47f37ed82d3f4fd6ee8926dc68"
                    ]
                },
                {
                    "command": [
                        "assert (A<>B).",
                        "VernacExtend",
                        "054074d1c4aab44077b809892d45c03b9ae82923"
                    ]
                },
                {
                    "command": [
                        "intro; subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "assert (A'=B') by (apply (cong_identity A' B' B); Cong).",
                        "VernacExtend",
                        "4de5a82bb8d28e67bf4415d6aa6cc2058684a704"
                    ]
                },
                {
                    "command": [
                        "subst; tauto.",
                        "VernacExtend",
                        "242b88ac37f1205319ab9d9cd58773501a7271b8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C A C' A') by (apply (five_segment _ _ _ _ _ _ _ _ H1 );auto using cong_trivial_identity, cong_commutativity).",
                        "VernacExtend",
                        "1be7ea8ac8129ceee4b5c9e40e7734c1c74f8e59"
                    ]
                },
                {
                    "command": [
                        "apply H3; Cong.",
                        "VernacExtend",
                        "8fc709e006ca80ee40c355db07c04f797acf329d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_dec_eq_dec_b",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros A B HAB.",
                        "VernacExtend",
                        "93185588036a8a63b6bb34231ac3b3bab4c2385e"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity with A.",
                        "VernacExtend",
                        "f4ab7efb4ab47d6e46bc2d8a4790e5a95b53e0e6"
                    ]
                },
                {
                    "command": [
                        "apply Cong_stability.",
                        "VernacExtend",
                        "f3efdb9c7f30a9de46ade133e5caef157f561277"
                    ]
                },
                {
                    "command": [
                        "intro HNCong.",
                        "VernacExtend",
                        "7b58ff8a3ff68ee4785ca34e3d2e503d47efe419"
                    ]
                },
                {
                    "command": [
                        "apply HAB.",
                        "VernacExtend",
                        "dfefecb2bffb160f6e58586154a2e53ee3c785bb"
                    ]
                },
                {
                    "command": [
                        "intro HEq.",
                        "VernacExtend",
                        "5ba0ec7bcb7e0b7d3571015fa4add3d531fa33ef"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply HNCong.",
                        "VernacExtend",
                        "a3afddee961db56c5fdf29cc028977f5812aab57"
                    ]
                },
                {
                    "command": [
                        "apply cong_pseudo_reflexivity.",
                        "VernacExtend",
                        "487306551e28f43f75beffe7e8fa32f00c95dd25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_dec_eq_dec_b",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros A B HAB.",
                        "VernacExtend",
                        "93185588036a8a63b6bb34231ac3b3bab4c2385e"
                    ]
                },
                {
                    "command": [
                        "apply between_identity.",
                        "VernacExtend",
                        "be5bd53a9ca348add08532749a790ae2927c0f7e"
                    ]
                },
                {
                    "command": [
                        "apply Bet_stability.",
                        "VernacExtend",
                        "126158eb5ca6b57da80f5f3aa23219c9320087b1"
                    ]
                },
                {
                    "command": [
                        "intro HNBet.",
                        "VernacExtend",
                        "41c69df9d629ab5d15019807e428e889d1fbb6ab"
                    ]
                },
                {
                    "command": [
                        "apply HAB.",
                        "VernacExtend",
                        "dfefecb2bffb160f6e58586154a2e53ee3c785bb"
                    ]
                },
                {
                    "command": [
                        "intro HEq.",
                        "VernacExtend",
                        "5ba0ec7bcb7e0b7d3571015fa4add3d531fa33ef"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply HNBet.",
                        "VernacExtend",
                        "2c8f67f523132eafb6d0654cb3079db3cd4bc9ad"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BetSEq",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros; unfold BetS; split; intro; spliter; repeat split; auto; intro; treat_equalities; auto.",
                        "VernacExtend",
                        "70469e7bc8cbc7a097ed0de060bb8c5d43aa4804"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}