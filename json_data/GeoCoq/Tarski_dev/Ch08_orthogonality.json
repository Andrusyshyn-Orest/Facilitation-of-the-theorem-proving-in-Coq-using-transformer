{
    "filename": "Tarski_dev/Ch08_orthogonality.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch07_midpoint.",
            "VernacRequire",
            "a518278ecac361d1b666f9e1655bf8672830a959"
        ],
        [
            "Require Export GeoCoq.Tactics.Coinc.ColR.",
            "VernacRequire",
            "7e451e1b4641aea5482fe360576ecf9c3590a3a1"
        ],
        [
            "Ltac not_exist_hyp_perm_ncol A B C := not_exist_hyp (~ Col A B C); not_exist_hyp (~ Col A C B); not_exist_hyp (~ Col B A C); not_exist_hyp (~ Col B C A); not_exist_hyp (~ Col C A B); not_exist_hyp (~ Col C B A).",
            "VernacExtend",
            "42f28f970d2ca7c3c1381c45b8dc0f7d497801e2"
        ],
        [
            "Ltac assert_diffs_by_cases := repeat match goal with | A: Tpoint, B: Tpoint |- _ => not_exist_hyp_comm A B;induction (eq_dec_points A B);[treat_equalities;solve [finish|trivial] |idtac] end.",
            "VernacExtend",
            "5c3102e25094b72dd3404ba98843dff2fc75b25f"
        ],
        [
            "Ltac assert_cols := repeat match goal with | H:Bet ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;assert (Col X1 X2 X3) by (apply bet_col;apply H) | H:Midpoint ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := midpoint_col X2 X1 X3 H) | H:Out ?X1 ?X2 ?X3 |- _ => not_exist_hyp_perm_col X1 X2 X3;let N := fresh in assert (N := out_col X1 X2 X3 H) end.",
            "VernacExtend",
            "be90313ad67996dcc58d8eee60b4fdebcbaa334b"
        ],
        [
            "Ltac assert_bets := repeat match goal with | H:Midpoint ?B ?A ?C |- _ => let T := fresh in not_exist_hyp (Bet A B C); assert (T := midpoint_bet A B C H) end.",
            "VernacExtend",
            "63b90a2e36d73c12379a288f385d818d36ed8f92"
        ],
        [
            "Ltac clean_reap_hyps := clean_duplicated_hyps; repeat match goal with | H:(Midpoint ?A ?B ?C), H2 : Midpoint ?A ?C ?B |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?A ?C ?B |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?A ?C |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?B ?C ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?B ?A |- _ => clear H2 | H:(Col ?A ?B ?C), H2 : Col ?C ?A ?B |- _ => clear H2 | H:(Bet ?A ?B ?C), H2 : Bet ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?A ?B ?D ?C |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?C ?D ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?B ?A |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?D ?C ?A ?B |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?C ?D |- _ => clear H2 | H:(Cong ?A ?B ?C ?D), H2 : Cong ?B ?A ?D ?C |- _ => clear H2 | H:(?A<>?B), H2 : (?B<>?A) |- _ => clear H2 end.",
            "VernacExtend",
            "019100111e26c429acf09131672327380849a4ff"
        ],
        [
            "Ltac assert_diffs := repeat match goal with | H:(~Col ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp3 X1 X2 X1 X3 X2 X3; assert (h := not_col_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:(~Bet ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp2 X1 X2 X2 X3; assert (h := not_bet_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq12__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq21__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq23__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?C <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq32__neq A B C H H2);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff_2 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?C <> ?D |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_3 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?D <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_4 A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D H2 H);clean_reap_hyps | H:Lt ?A ?B ?C ?D |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= lt_diff A B C D H);clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?B |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B (swap_diff B A H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?I |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B (swap_diff A I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?B |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?I |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B (swap_diff B I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Out ?A ?B ?C |- _ => let T:= fresh in (not_exist_hyp2 A B A C); assert (T:= out_distinct A B C H); decompose [and] T;clear T;clean_reap_hyps end.",
            "VernacExtend",
            "bed5d4d263663e0f4de8bfaa4b8b48b9e625f746"
        ],
        [
            "Ltac clean_trivial_hyps := repeat match goal with | H:(Cong ?X1 ?X1 ?X2 ?X2) |- _ => clear H | H:(Cong ?X1 ?X2 ?X2 ?X1) |- _ => clear H | H:(Cong ?X1 ?X2 ?X1 ?X2) |- _ => clear H | H:(Bet ?X1 ?X1 ?X2) |- _ => clear H | H:(Bet ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X1 ?X2) |- _ => clear H | H:(Col ?X2 ?X1 ?X1) |- _ => clear H | H:(Col ?X1 ?X2 ?X1) |- _ => clear H | H:(Midpoint ?X1 ?X1 ?X1) |- _ => clear H end.",
            "VernacExtend",
            "c862efe298f22f6340c8cd1cf201bd2e5e62e558"
        ],
        [
            "Ltac clean := clean_trivial_hyps;clean_reap_hyps.",
            "VernacExtend",
            "bacc52c10944221f6b2d0c48a22af2864eebb2bb"
        ],
        [
            "Ltac treat_equalities := try treat_equalities_aux; repeat match goal with | H:(Cong ?X3 ?X3 ?X1 ?X2) |- _ => apply cong_symmetry in H; apply cong_identity in H; smart_subst X2;clean_reap_hyps | H:(Cong ?X1 ?X2 ?X3 ?X3) |- _ => apply cong_identity in H;smart_subst X2;clean_reap_hyps | H:(Bet ?X1 ?X2 ?X1) |- _ => apply between_identity in H;smart_subst X2;clean_reap_hyps | H:(Midpoint ?X ?Y ?Y) |- _ => apply l7_3 in H; smart_subst Y;clean_reap_hyps | H : Bet ?A ?B ?C, H2 : Bet ?B ?A ?C |- _ => let T := fresh in not_exist_hyp (A=B); assert (T : A=B) by (apply (between_equality A B C); finish); smart_subst A;clean_reap_hyps | H : Bet ?A ?B ?C, H2 : Bet ?A ?C ?B |- _ => let T := fresh in not_exist_hyp (B=C); assert (T : B=C) by (apply (between_equality_2 A B C); finish); smart_subst B;clean_reap_hyps | H : Bet ?A ?B ?C, H2 : Bet ?C ?A ?B |- _ => let T := fresh in not_exist_hyp (A=B); assert (T : A=B) by (apply (between_equality A B C); finish); smart_subst A;clean_reap_hyps | H : Bet ?A ?B ?C, H2 : Bet ?B ?C ?A |- _ => let T := fresh in not_exist_hyp (B=C); assert (T : B=C) by (apply (between_equality_2 A B C); finish); smart_subst A;clean_reap_hyps | H:(Le ?X1 ?X2 ?X3 ?X3) |- _ => apply le_zero in H;smart_subst X2;clean_reap_hyps | H : Midpoint ?P ?A ?P1, H2 : Midpoint ?P ?A ?P2 |- _ => let T := fresh in not_exist_hyp (P1=P2); assert (T := symmetric_point_uniqueness A P P1 P2 H H2); smart_subst P1;clean_reap_hyps | H : Midpoint ?A ?P ?X, H2 : Midpoint ?A ?Q ?X |- _ => let T := fresh in not_exist_hyp (P=Q); assert (T := l7_9 P Q A X H H2); smart_subst P;clean_reap_hyps | H : Midpoint ?A ?P ?X, H2 : Midpoint ?A ?X ?Q |- _ => let T := fresh in not_exist_hyp (P=Q); assert (T := l7_9_bis P Q A X H H2); smart_subst P;clean_reap_hyps | H : Midpoint ?M ?A ?A |- _ => let T := fresh in not_exist_hyp (M=A); assert (T : l7_3 M A H); smart_subst M;clean_reap_hyps | H : Midpoint ?A ?P ?P', H2 : Midpoint ?B ?P ?P' |- _ => let T := fresh in not_exist_hyp (A=B); assert (T := l7_17 P P' A B H H2); smart_subst A;clean_reap_hyps | H : Midpoint ?A ?P ?P', H2 : Midpoint ?B ?P' ?P |- _ => let T := fresh in not_exist_hyp (A=B); assert (T := l7_17_bis P P' A B H H2); smart_subst A;clean_reap_hyps | H : Midpoint ?A ?B ?A |- _ => let T := fresh in not_exist_hyp (A=B); assert (T := is_midpoint_id_2 A B H); smart_subst A;clean_reap_hyps | H : Midpoint ?A ?A ?B |- _ => let T := fresh in not_exist_hyp (A=B); assert (T := is_midpoint_id A B H); smart_subst A;clean_reap_hyps end.",
            "VernacExtend",
            "3cc136b9bf065429d5ebcdb4a82db8b93db2c633"
        ],
        [
            "Ltac ColR := let tpoint := constr:(Tpoint) in let col := constr:(Col) in treat_equalities; assert_cols; assert_diffs; try (solve [Col]); Col_refl tpoint col.",
            "VernacExtend",
            "d62923859746db039aa976a7dc7e9dae03a1931a"
        ],
        [
            "Ltac search_contradiction := match goal with | H: ?A <> ?A |- _ => exfalso;apply H;reflexivity | H: ~ Col ?A ?B ?C |- _ => exfalso;apply H;ColR | H: ~ ?P, H2 : ?P |- _ => exfalso;apply (H H2) end.",
            "VernacExtend",
            "e194d4591dc4479531b6f39fe210b40a091af8a9"
        ],
        [
            "Ltac show_distinct' X Y := assert (X<>Y); [intro;treat_equalities; (solve [search_contradiction])|idtac].",
            "VernacExtend",
            "0b178f1e82ce05896eacd101c4d65bc7a336fbdf"
        ],
        [
            "Ltac assert_all_diffs_by_contradiction := repeat match goal with | A: Tpoint, B: Tpoint |- _ => not_exist_hyp_comm A B;show_distinct' A B end.",
            "VernacExtend",
            "6cdda0eca52e0af03f3981a0e0221aebab6bc5f5"
        ],
        [
            "Section T8_1.",
            "VernacBeginSection",
            "0db1dc1046a52f40eab15d9cd9b28b7c863a14c5"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma per_dec : forall A B C, Per A B C \\/ ~ Per A B C.",
            "VernacStartTheoremProof",
            "f0f98627773edc5c0c4223c5e957098c74ad4da1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "elim (symmetric_point_construction C B);intros C' HC'.",
            "VernacExtend",
            "0e977b0cb13f64b223567244b6c361eb14cfb2fb"
        ],
        [
            "elim (cong_dec A C A C');intro.",
            "VernacExtend",
            "d5cd49a2a114febbcc9a56f749a59bc40ea9aec8"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "decompose [ex and] H0;clear H0.",
            "VernacExtend",
            "7533f3731c625c8a3fa4edee435a85cf2100bdb9"
        ],
        [
            "assert (C'=x) by (apply symmetric_point_uniqueness with C B;assumption).",
            "VernacExtend",
            "74bfcb55376c57733b4ced88a560de9ad5c7fead"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_2 : forall A B C, Per A B C -> Per C B A.",
            "VernacStartTheoremProof",
            "591e66a374d16f427fc62ba45eeb4ce8a6d9b65b"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "assert (exists A', Midpoint B A A').",
            "VernacExtend",
            "a2ff799c7484c83adf74f7a8f043941ebacddb89"
        ],
        [
            "apply symmetric_point_construction.",
            "VernacExtend",
            "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
        ],
        [
            "ex_and H1 A'.",
            "VernacExtend",
            "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T8_1.",
            "VernacEndSegment",
            "7e56772f5b13274deb44633be3e1028060290e4f"
        ],
        [
            "Hint Resolve l8_2 : perp.",
            "VernacHints",
            "8b4740b5d2c6d7b83167eb02427c7ae76190052f"
        ],
        [
            "Ltac Perp := auto with perp.",
            "VernacExtend",
            "fea33882c09927a3f8cd738b6fa9781ba5a14e70"
        ],
        [
            "Section T8_2.",
            "VernacBeginSection",
            "62185461c7c444118fdbb9fa3926d267bdc54482"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma Per_cases : forall A B C, Per A B C \\/ Per C B A -> Per A B C.",
            "VernacStartTheoremProof",
            "a3a70cedd7370d5b37774928efb3a324f362dba6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H;Perp.",
            "VernacExtend",
            "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Per_perm : forall A B C, Per A B C -> Per A B C /\\ Per C B A.",
            "VernacStartTheoremProof",
            "fc82e4656cf806ddc2ec0cb1199406c33d982be6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; Perp.",
            "VernacExtend",
            "bc5953d6f0d76d444d426576ad647efe219ea91b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_3 : forall A B C A', Per A B C -> A<>B -> Col B A A' -> Per A' B C.",
            "VernacStartTheoremProof",
            "993e16ebb3134dea90596aa78c44f07beb58c169"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Midpoint in *;spliter.",
            "VernacExtend",
            "94cfb4754c2f0312d41786041551ef933e840506"
        ],
        [
            "eapply l4_17 with A B;finish.",
            "VernacExtend",
            "cb9ed9232d33570f17106471d6e439f1b65d8cb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_4 : forall A B C C', Per A B C -> Midpoint B C C' -> Per A B C'.",
            "VernacStartTheoremProof",
            "6f7316866fe6608ec5ccb222ac832267948c69b7"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H B'.",
            "VernacExtend",
            "a962e6b9fc39dc63b4599d58ccc49e354dabc4cb"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B' = C') by (eapply symmetric_point_uniqueness;eauto).",
            "VernacExtend",
            "15c2e91acf18a2859203f4d5c295707f503fbbeb"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_5 : forall A B, Per A B B.",
            "VernacStartTheoremProof",
            "9034c9227dec871cb029e515755eca491d97a57c"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_3_2.",
            "VernacExtend",
            "5641bc5af04a7d045c3262eb7834ebac786414e2"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_6 : forall A B C A', Per A B C -> Per A' B C -> Bet A C A' -> B=C.",
            "VernacStartTheoremProof",
            "6d4afec1dddd88c9b3e9064000e8bda6c883f122"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "ex_and H0 C''.",
            "VernacExtend",
            "71e20c932b4a81053893852c445b04a889758d03"
        ],
        [
            "assert (C'=C'') by (eapply symmetric_point_uniqueness;eauto).",
            "VernacExtend",
            "5478c4323e60c54aab74f9d91871d8c5d99ca663"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "assert (C = C') by (eapply l4_19;eauto).",
            "VernacExtend",
            "0d4f78379d22eaa3fa51543d85103a54ee07b07a"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply l7_3.",
            "VernacExtend",
            "e0ed8044d8d76b674bae6c3d6c16560c62b151be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T8_2.",
            "VernacEndSegment",
            "4bda5804d85178df71c9cdc2f44740e03f75e33c"
        ],
        [
            "Hint Resolve l8_5 : perp.",
            "VernacHints",
            "8cc78d879ab522e30c0c4cbd91cf8814576eb76b"
        ],
        [
            "Ltac let_symmetric C P A := let id1:=fresh in (assert (id1:(exists A', Midpoint P A A')); [apply symmetric_point_construction|ex_and id1 C]).",
            "VernacExtend",
            "cb1832b9187e6bbf22158389b19a5e62f3c1f3e4"
        ],
        [
            "Ltac symmetric B' A B := assert(sp:= symmetric_point_construction B A); ex_and sp B'.",
            "VernacExtend",
            "ffc190f59e7fb7557881e397ccf958657dec3401"
        ],
        [
            "Section T8_3.",
            "VernacBeginSection",
            "fc7c438e7dd8013807e6088d30e1f84ed3043ca2"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma l8_7 : forall A B C, Per A B C -> Per A C B -> B=C.",
            "VernacStartTheoremProof",
            "dc78ae7bacdb7e584b6cd36173e5f7d78b012526"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "symmetric A' C A.",
            "VernacExtend",
            "974a6d49638274741a36df11e7d31cb4750c761d"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per C' C A).",
            "VernacExtend",
            "daee8892b4dedb40d074da16ba32112865c0b8bf"
        ],
        [
            "eapply l8_3.",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Midpoint in H.",
            "VernacExtend",
            "c36b2a6dac3a427ab99d151105242184ce83b07f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong A C' A' C').",
            "VernacExtend",
            "7d8b520982eacdc1ab7c698f32a7db4cfd9cb292"
        ],
        [
            "unfold Per in H4.",
            "VernacExtend",
            "f2b135d5a713068a79dd73a1b1f096f0da149840"
        ],
        [
            "ex_and H4 Z.",
            "VernacExtend",
            "6edd85d4ebc6395ea9aa186d132afaf53cb46d42"
        ],
        [
            "assert (A' = Z) by (eapply (symmetric_point_uniqueness A C A');auto).",
            "VernacExtend",
            "49ef5052d932e89452e48bf4cb96829f19999293"
        ],
        [
            "subst Z.",
            "VernacExtend",
            "175cfad89f3c163fd5ad63767fa7d8c442d6186d"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Cong A' C A' C').",
            "VernacExtend",
            "964322bea8f4207adfc888c6c996e1413b1fdaa0"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per A' B C).",
            "VernacExtend",
            "b087e010a910eb8f854d301a96cb28f8077559bf"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "repeat split;auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "eapply l8_6.",
            "VernacExtend",
            "38a0e1c4d18c8128f55addd6f711722017ce70a6"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Midpoint;auto.",
            "VernacExtend",
            "313926c131ccdc71327bee386e3be785f876cd18"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_8 : forall A B, Per A B A -> A=B.",
            "VernacStartTheoremProof",
            "68565b46ac7241912483b7320e71d18b2059404c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_7 with A.",
            "VernacExtend",
            "898c07bed418c7ddbb1b911408fc44a309059dca"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_distinct : forall A B C, Per A B C -> A <> B -> A <> C.",
            "VernacStartTheoremProof",
            "dc063858303e2d2b14ac68affafdc1b5ec389015"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply (l8_8).",
            "VernacExtend",
            "cd2d1086c70ba6b773dc8e2e3646742729981115"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_distinct_1 : forall A B C, Per A B C -> B <> C -> A <> C.",
            "VernacStartTheoremProof",
            "94ea9d430d7b6fa0d2d49778cd99e1c3818bb978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply eq_sym.",
            "VernacExtend",
            "313410cb7bcb68dc243125f00e91764f51d94be6"
        ],
        [
            "apply (l8_8).",
            "VernacExtend",
            "cd2d1086c70ba6b773dc8e2e3646742729981115"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_9 : forall A B C, Per A B C -> Col A B C -> A=B \\/ C=B.",
            "VernacStartTheoremProof",
            "6dac4f0661878b4ce7b153332c7bc4eb3ac93200"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (eq_dec_points A B);intro.",
            "VernacExtend",
            "ffd7b0af2a49605e7c7252492bcfb24779f940dd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "eapply l8_5.",
            "VernacExtend",
            "fb0d4ac1e56cbae04f3601266c843902132cf365"
        ],
        [
            "apply l8_3 with A; Col.",
            "VernacExtend",
            "fe59b3d5ef06ac40c02c5b867681ea0c06793ffc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_10 : forall A B C A' B' C', Per A B C -> Cong_3 A B C A' B' C' -> Per A' B' C'.",
            "VernacStartTheoremProof",
            "1dcc008a7e3390f68e9abcbcec5b6ab8974a4509"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H D.",
            "VernacExtend",
            "5e773729030edd0cfef89f1384f1c806df9d6a4a"
        ],
        [
            "prolong C' B' D' B' C'.",
            "VernacExtend",
            "db0e466086dc8d8aada707d666c5ca7ab9d488c9"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Cong_3, Midpoint in *.",
            "VernacExtend",
            "3014d7daf75f320fd0e78d6013a923e51847339f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (eq_dec_points C B).",
            "VernacExtend",
            "021929c41b94e147e1b7d8f513756db473e881b6"
        ],
        [
            "treat_equalities;Cong.",
            "VernacExtend",
            "3008ea797afa9551cbe2f0c6fa3d7ef0d856cdc4"
        ],
        [
            "assert(OFSC C B D A C' B' D' A').",
            "VernacExtend",
            "f9c188dc8b9415ea1fa79d11eeba08bde4db22bc"
        ],
        [
            "unfold OFSC.",
            "VernacExtend",
            "492752124a3e0e575422433695b3cbf9807f06bc"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert (Cong D A D' A').",
            "VernacExtend",
            "b3804ba9fb0082f1425ac628f94cf236e74f0b85"
        ],
        [
            "eapply five_segment_with_def.",
            "VernacExtend",
            "ae363f51f3370e7c192354099ac43ac5f16e52c8"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_col_per_per : forall A X C U V, A<>X -> C<>X -> Col U A X -> Col V C X -> Per A X C -> Per U X V.",
            "VernacStartTheoremProof",
            "91d6805bdbdd6004055d416c584d8cbcb635d861"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Per U X C) by (apply (l8_3 A X C U);Col).",
            "VernacExtend",
            "b39ff261c1907b26b1ca207ce54de9002d0f2e78"
        ],
        [
            "apply l8_2 in H4.",
            "VernacExtend",
            "32751faf0d516a9c02c72e28192bbcbede5276ef"
        ],
        [
            "apply l8_2 .",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply (l8_3 C X U V);Col.",
            "VernacExtend",
            "3432a296d94b03335d3164c4bb818524d947d407"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_dec : forall X A B C D, Perp_at X A B C D \\/ ~ Perp_at X A B C D.",
            "VernacStartTheoremProof",
            "3f2f59b7d192d11615d2522d53310f095f07bb1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "elim (eq_dec_points A B);intro; elim (eq_dec_points C D);intro; elim (col_dec X A B);intro; elim (col_dec X C D);intro; try tauto.",
            "VernacExtend",
            "0b11afcb120fd09f35392fff3f1935f72d197207"
        ],
        [
            "elim (eq_dec_points B X);intro; elim (eq_dec_points D X);intro;subst;treat_equalities.",
            "VernacExtend",
            "a0cac3600d0bc2b563a05ce06158ab99b73339b4"
        ],
        [
            "elim (per_dec A X C);intro.",
            "VernacExtend",
            "310b86d0d769f0e058f84faaeed03e013e32b15c"
        ],
        [
            "left;repeat split;Col;intros; apply col_col_per_per with A C;Col.",
            "VernacExtend",
            "044ca65b88875ef215a2c62ace195741a134d521"
        ],
        [
            "right;intro;spliter;apply H3;apply H8;Col.",
            "VernacExtend",
            "27d588fce01aab70e6578191b3095d18e88c77b3"
        ],
        [
            "elim (per_dec A X D);intro.",
            "VernacExtend",
            "79f90123fca282853e09c86c84a796378e40a216"
        ],
        [
            "left;repeat split;Col;intros; apply col_col_per_per with A D;Col;ColR.",
            "VernacExtend",
            "a5cbc865af45aa43b97765838f79e5dc0ea0df46"
        ],
        [
            "right;intro;spliter;apply H3;apply H9;Col.",
            "VernacExtend",
            "9ecc2a480d0ca16f766da72dd00c0e452fb2c843"
        ],
        [
            "elim (per_dec B X C);intro.",
            "VernacExtend",
            "aa8d5f739bc0d1dee57beb55f2ada4b6c3edc82b"
        ],
        [
            "left;repeat split;Col;intros; apply col_col_per_per with B C;Col;ColR.",
            "VernacExtend",
            "0299b87f8c0aaeb70e5df2864a0c41610ae002f9"
        ],
        [
            "right;intro;spliter;apply H4;apply H9;Col.",
            "VernacExtend",
            "cad9176ed6b2c702492950d760995b0c8e0a4096"
        ],
        [
            "elim (per_dec B X D);intro.",
            "VernacExtend",
            "31d580d8113b39e94199e0d2c1b27593529f04b3"
        ],
        [
            "left;repeat split;Col;intros; apply col_col_per_per with B D;Col;ColR.",
            "VernacExtend",
            "d40b0ee3260cbcca98ede559637b36c6a5ea9658"
        ],
        [
            "right;intro;spliter;apply H5;apply H10;Col.",
            "VernacExtend",
            "b00e86ac3f426dcd04884a5076e0d0e4e7cc83ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_distinct : forall A B C D, Perp A B C D -> A <> B /\\ C <> D.",
            "VernacStartTheoremProof",
            "c5e4ff6a08517af460e56338304a907e9c9c3279"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_elim H X.",
            "VernacExtend",
            "628e6e5805283f9c580405fc6421d775f66905e5"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_12 : forall A B C D X, Perp_at X A B C D -> Perp_at X C D A B.",
            "VernacStartTheoremProof",
            "fadeb46784ef528b3997055eb06a8eb355374c79"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intros;eapply l8_2;eauto.",
            "VernacExtend",
            "eb624fb8aea986dcca5df387c901228a4e22c7a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_col : forall A B C D, B <> C -> Per A B C -> Col B C D -> Per A B D.",
            "VernacStartTheoremProof",
            "4efc9cf9363a2161df0a9c5421500f4765801a3a"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H0 C'.",
            "VernacExtend",
            "1f2021fe4adb3d11368c967beff0696570a2eb75"
        ],
        [
            "prolong D B D' D B.",
            "VernacExtend",
            "aa16218f4560fbf5ec50dcf97747041fe9ec6c1b"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "assert (Midpoint B C C').",
            "VernacExtend",
            "504fa0a772bccbfc192a570cdaa78f6a9bb899f8"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "assert (Midpoint B D D') by (unfold Midpoint;split;Cong).",
            "VernacExtend",
            "a48aeef99f24d7f88b9e25c894fb1dacdf6edcdb"
        ],
        [
            "assert (Midpoint B D D').",
            "VernacExtend",
            "976eccffbb7ba13588b1d6651ea7d898b66cd5e0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Col in H1.",
            "VernacExtend",
            "f902562d9420a795f367a4c48e588556bdd89251"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "assert (Bet B C' D').",
            "VernacExtend",
            "87b8f6dfa5a8405504fb53e255fa140f3866e03f"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "eapply l7_3_2.",
            "VernacExtend",
            "bddefec11bd10daad3f3094d74435628fb6829cb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C D C' D').",
            "VernacExtend",
            "2bb0845bdbfc2760f1dfe735e6310a33afff315e"
        ],
        [
            "eapply l4_3_1.",
            "VernacExtend",
            "6c171025bbc0fa37d7d635236ac5c6971fd38a68"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(OFSC B C D A B C' D' A) by (unfold OFSC;repeat split;Cong).",
            "VernacExtend",
            "85aeb599b454b88706c3c4ce327d8ef03e659e07"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eauto using five_segment_with_def.",
            "VernacExtend",
            "d16eea784914b2d42c7e5a241234ae7161f36cd0"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "assert (Bet C' D' B).",
            "VernacExtend",
            "5fbebe369892dbcfac4ad6ef01f375263f724d3d"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_3_2.",
            "VernacExtend",
            "5641bc5af04a7d045c3262eb7834ebac786414e2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C D C' D') by (eapply l4_3 with B B;Between;Cong).",
            "VernacExtend",
            "97681d85375e5000f3210c8f71cd4b4b85bab542"
        ],
        [
            "assert(IFSC B D C A B D' C' A) by (unfold IFSC;repeat split;Between;Cong).",
            "VernacExtend",
            "5bf647b86846b4a9ddf22dff963dc3408bc9d824"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eauto using l4_2.",
            "VernacExtend",
            "ca06fd69bc8c8ce7c61405162f6a9b2d969f13e5"
        ],
        [
            "assert (Bet D' B C').",
            "VernacExtend",
            "c2dc9db02db0753aafda0f4a1ff56eb54116d614"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "eapply l7_3_2.",
            "VernacExtend",
            "bddefec11bd10daad3f3094d74435628fb6829cb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C D C' D') by (eapply l2_11 with B B;Between;Cong).",
            "VernacExtend",
            "4a8af4bff711b7bbf4b0549ea876622fc3d7d8ce"
        ],
        [
            "assert(OFSC C B D A C' B D' A) by (unfold OFSC;repeat split;Between;Cong).",
            "VernacExtend",
            "01b71ac71d8f81bc8fbe15574df3f9e9ee20a71d"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eauto using five_segment_with_def.",
            "VernacExtend",
            "d16eea784914b2d42c7e5a241234ae7161f36cd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_13_2 : forall A B C D X, A <> B -> C <> D -> Col X A B -> Col X C D -> (exists U, exists V :Tpoint, Col U A B /\\ Col V C D /\\ U<>X /\\ V<>X /\\ Per U X V) -> Perp_at X A B C D.",
            "VernacStartTheoremProof",
            "e16fd29c717d630819f7124f0e4bd8015d8121fc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H3 U.",
            "VernacExtend",
            "f6f7c98175434d4422bb902d8fa562f5d1142d23"
        ],
        [
            "ex_and H4 V.",
            "VernacExtend",
            "c7f30291672c2aa6c5a60381556b48b81fb0f789"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Per V X U0).",
            "VernacExtend",
            "2fbe0ba6db11e16292bf26a1a3ff526eda2a9fbf"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "eapply l8_3.",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col3.",
            "VernacExtend",
            "868bf06b19fdafb8a75ff441bfee26070ac4b11f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "2:eapply l8_2.",
            "VernacExtend",
            "b48242829de00de523c67ca8702f49608ff77296"
        ],
        [
            "2:apply H10.",
            "VernacExtend",
            "d50710bbda3cee3c25062bcc19e73e52353678e9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply col3.",
            "VernacExtend",
            "868bf06b19fdafb8a75ff441bfee26070ac4b11f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_1 : forall A B, ~ Perp A B A B.",
            "VernacStartTheoremProof",
            "5ee40e572f1a409e4e5c8a1f39bccf8c45ca790b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Per A X A).",
            "VernacExtend",
            "4a37aab9529849f2815633a9a94bc6218b3a1b5c"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (A = X).",
            "VernacExtend",
            "dc514689b6e89b6452ac73fcfcdfeae46fefb873"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "2: apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "assert (Per B X B) by (apply H3;Col).",
            "VernacExtend",
            "5548a30c6400a79a33ce2fac9a9263b5f157c4ef"
        ],
        [
            "assert (B = X).",
            "VernacExtend",
            "79d7fc3a026775d86b8dea4920baa099172ed104"
        ],
        [
            "eapply l8_7 with B.",
            "VernacExtend",
            "4a707ba7988968ce5e50d03566172e3de13a93ff"
        ],
        [
            "2: apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_1a : forall X A B C D, Perp_at X A B C D -> Perp A B C D.",
            "VernacStartTheoremProof",
            "cacf3ede4a7316fac75ca69988360a2630b61a72"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_distinct : forall X A B C D , Perp_at X A B C D -> A <> B /\\ C <> D.",
            "VernacStartTheoremProof",
            "a3c3f78dc9ad2f38c2018cf656c74ac5e503a4ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_14_2_1a in H.",
            "VernacExtend",
            "8e290495c6ff64dd7ebf3f9b336d589944de3f25"
        ],
        [
            "apply perp_distinct.",
            "VernacExtend",
            "3cfc6cd7c9dce448a2a54a0aea9698f8194fd378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_1b : forall X A B C D Y, Perp_at X A B C D -> Col Y A B -> Col Y C D -> X=Y.",
            "VernacStartTheoremProof",
            "9b112cbef013a422f81c92faf76cdbadc731c868"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in H.",
            "VernacExtend",
            "b000e34b756b9c91df4f72f9c970da5204109645"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply (H5 Y Y) in H1.",
            "VernacExtend",
            "c8c48d518a4914f0211a6a1477a870939f1304cf"
        ],
        [
            "apply eq_sym, l8_8; assumption.",
            "VernacExtend",
            "b5c9248c7361ec90f4a826662011b47563aa7e6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_1b_bis : forall A B C D X, Perp A B C D -> Col X A B -> Col X C D -> Perp_at X A B C D.",
            "VernacStartTheoremProof",
            "6a4046cbf199ac02e91d23778c75f4637d3c7cd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_and H Y.",
            "VernacExtend",
            "3425e8cbbaff15c569c6428409b6d89af1108b21"
        ],
        [
            "assert (Y = X) by (eapply (l8_14_2_1b Y _ _ _ _ X) in H2;assumption).",
            "VernacExtend",
            "772e34723c149e88e8bc653c1539aaffdb01d942"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_2_2 : forall X A B C D, Perp A B C D -> (forall Y, Col Y A B -> Col Y C D -> X=Y) -> Perp_at X A B C D.",
            "VernacStartTheoremProof",
            "be490e09a1987c5979a6dcdae58f363a54743f06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_14_2_1b_bis.",
            "VernacExtend",
            "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_and H Y.",
            "VernacExtend",
            "3425e8cbbaff15c569c6428409b6d89af1108b21"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Col Y C D) by assumption.",
            "VernacExtend",
            "fe744c7a1b076f3b6a4497a1664442eccf293e4b"
        ],
        [
            "apply (H0 Y H2) in H3.",
            "VernacExtend",
            "08d7874d15c1746cde0af5c5fe5c09eaa3da2e55"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_and H Y.",
            "VernacExtend",
            "3425e8cbbaff15c569c6428409b6d89af1108b21"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Col Y C D).",
            "VernacExtend",
            "e28ad094b5a717f11c63cc5c86eb7bd73cd827dd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (H0 Y H2) in H3.",
            "VernacExtend",
            "08d7874d15c1746cde0af5c5fe5c09eaa3da2e55"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_14_3 : forall A B C D X Y, Perp_at X A B C D -> Perp_at Y A B C D -> X=Y.",
            "VernacStartTheoremProof",
            "66413c7f4e7c2f9cea3b755368adf4d3bdec78e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_14_2_1b.",
            "VernacExtend",
            "74cbd30bfbb3a715816f7856ddfbea19efb604dd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply l8_12 in H0.",
            "VernacExtend",
            "fd49405121bcc5215d2218e81670b9edc61cc589"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_15_1 : forall A B C X, Col A B X -> Perp A B C X -> Perp_at X A B C X.",
            "VernacStartTheoremProof",
            "da54a7668cd8379ba24305760281e391d361104b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_14_2_1b_bis;Col.",
            "VernacExtend",
            "869feab215209097794a341e152f0de10a51ad71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_15_2 : forall A B C X, Col A B X -> Perp_at X A B C X -> Perp A B C X.",
            "VernacStartTheoremProof",
            "a2b2bb055b78beee84a64f15bbfd55f3187631bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_14_2_1a.",
            "VernacExtend",
            "11ac97c86c041438ed445d2c885bf89fc8155b5a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_per : forall A B C, Perp_at B A B B C-> Per A B C.",
            "VernacStartTheoremProof",
            "0ac1565f1049890fe738c1e80571c74b73bf6aee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in H.",
            "VernacExtend",
            "b000e34b756b9c91df4f72f9c970da5204109645"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H3;Col.",
            "VernacExtend",
            "07d0850bd548b476a2c6bbc891669c5ee49e5b8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_sym : forall A B C D, Perp A B C D -> Perp C D A B.",
            "VernacStartTheoremProof",
            "86eb21be8b40713820650bda1e77dad865559d0d"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "apply l8_12.",
            "VernacExtend",
            "44aef0b1136e4e7a0298e49b153e02ebacd421a9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_col0 : forall A B C D X Y, Perp A B C D -> X <> Y -> Col A B X -> Col A B Y -> Perp C D X Y.",
            "VernacStartTheoremProof",
            "a684487e07ae3779ba04e3a39c47c4c4fcd1acc8"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H X0.",
            "VernacExtend",
            "7f9d0a87e7e9bdd9c3f0aced491be08831cc4bb7"
        ],
        [
            "exists X0.",
            "VernacExtend",
            "ff9194e071b432be6c1451e5c1fb605c2dfae7b0"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col3.",
            "VernacExtend",
            "868bf06b19fdafb8a75ff441bfee26070ac4b11f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "assert(Col A X Y).",
            "VernacExtend",
            "6e3bc0594e0d204736e59ca7f87c612dd1469a46"
        ],
        [
            "eapply col3 with A B;Col.",
            "VernacExtend",
            "5dd643a8f18270e2e41081e6a83e9628e4eeb8bc"
        ],
        [
            "assert (Col B X Y).",
            "VernacExtend",
            "710db14c245bf76a37ab43063aba5b838608d646"
        ],
        [
            "eapply col3 with A B;Col.",
            "VernacExtend",
            "5dd643a8f18270e2e41081e6a83e9628e4eeb8bc"
        ],
        [
            "eapply col3 with X Y;Col.",
            "VernacExtend",
            "ef54c7d0dc291b5323bc39727cf612b8b1a7ebe5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_perp_in : forall A B C, A <> B -> B <> C -> Per A B C -> Perp_at B A B B C.",
            "VernacStartTheoremProof",
            "9830085d5205a1ef2dc35ec954e96ef99d60be7b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_perp : forall A B C, A <> B -> B <> C -> Per A B C -> Perp A B B C.",
            "VernacStartTheoremProof",
            "555de66a1f2f4fdddeeb53fa681a514fa0c171e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply per_perp_in in H1.",
            "VernacExtend",
            "ac64be4e7f40d5b69dedd8d19349387d50072200"
        ],
        [
            "eapply l8_14_2_1a with B;assumption.",
            "VernacExtend",
            "8a09ce8779900c810f11ef20eb36498e2782821d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_left_comm : forall A B C D, Perp A B C D -> Perp B A C D.",
            "VernacStartTheoremProof",
            "2bd4cfaa68f29639396842eced7a1279b112c038"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_right_comm : forall A B C D, Perp A B C D -> Perp A B D C.",
            "VernacStartTheoremProof",
            "24105a3b08ea41875b51e537f7181600726ec655"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_comm : forall A B C D, Perp A B C D -> Perp B A D C.",
            "VernacStartTheoremProof",
            "98e3e980d5c0f15f137920036f373e9713c019df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_sym : forall A B C D X, Perp_at X A B C D -> Perp_at X C D A B.",
            "VernacStartTheoremProof",
            "3f8491d2048764545764a08888ef22b9baf97cfa"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H3;assumption.",
            "VernacExtend",
            "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_left_comm : forall A B C D X, Perp_at X A B C D -> Perp_at X B A C D.",
            "VernacStartTheoremProof",
            "125aaa5864c69b1236338a62a296626afbf4642a"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_right_comm : forall A B C D X, Perp_at X A B C D -> Perp_at X A B D C.",
            "VernacStartTheoremProof",
            "36d75ddbe2bdb8527257536146b50795aef5b1ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_in_sym.",
            "VernacExtend",
            "24d80e91aafb00ee02dfda8e42383eea93b0e272"
        ],
        [
            "apply perp_in_left_comm.",
            "VernacExtend",
            "7afca9b15e69a43380e6144468006b03a868f32c"
        ],
        [
            "apply perp_in_sym.",
            "VernacExtend",
            "24d80e91aafb00ee02dfda8e42383eea93b0e272"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_comm : forall A B C D X, Perp_at X A B C D -> Perp_at X B A D C.",
            "VernacStartTheoremProof",
            "c516e8130fd0b03b7482031d41ccf37537a97bcd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_in_left_comm.",
            "VernacExtend",
            "7afca9b15e69a43380e6144468006b03a868f32c"
        ],
        [
            "apply perp_in_right_comm.",
            "VernacExtend",
            "f708d91949733e6d7c3ff6e044245680b16691de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T8_3.",
            "VernacEndSegment",
            "64036b4e4ce71daa61ebc816fa9d25fdc8e39ae4"
        ],
        [
            "Hint Resolve perp_sym perp_left_comm perp_right_comm perp_comm per_perp_in per_perp perp_in_per perp_in_left_comm perp_in_right_comm perp_in_comm perp_in_sym : perp.",
            "VernacHints",
            "d41a921d4a993b1c641a82e78d3ec2ce4a907862"
        ],
        [
            "Ltac double A B A' := assert (mp:= symmetric_point_construction A B); elim mp; intros A' ; intro; clear mp.",
            "VernacExtend",
            "3fd4f5bb25394efde5036c45eec05f1ea3b8b8f7"
        ],
        [
            "Section T8_4.",
            "VernacBeginSection",
            "a1d6e1801101099264df4e0bf5938231ab5c9af7"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma Perp_cases : forall A B C D, Perp A B C D \\/ Perp B A C D \\/ Perp A B D C \\/ Perp B A D C \\/ Perp C D A B \\/ Perp C D B A \\/ Perp D C A B \\/ Perp D C B A -> Perp A B C D.",
            "VernacStartTheoremProof",
            "3cf1145643809ebfe21f0f990d0d812a1d7e404d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H; Perp.",
            "VernacExtend",
            "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Perp_perm : forall A B C D, Perp A B C D -> Perp A B C D /\\ Perp B A C D /\\ Perp A B D C /\\ Perp B A D C /\\ Perp C D A B /\\ Perp C D B A /\\ Perp D C A B /\\ Perp D C B A.",
            "VernacStartTheoremProof",
            "2a61c7be01c7e2094c5e43bc073d5d2cf5822ded"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split; Perp.",
            "VernacExtend",
            "2607a7b66258044797f6e969fab05b57e7ac167d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Perp_in_cases : forall X A B C D, Perp_at X A B C D \\/ Perp_at X B A C D \\/ Perp_at X A B D C \\/ Perp_at X B A D C \\/ Perp_at X C D A B \\/ Perp_at X C D B A \\/ Perp_at X D C A B \\/ Perp_at X D C B A -> Perp_at X A B C D.",
            "VernacStartTheoremProof",
            "0e5303fc32032e9a72bb0e9a1487d575bda205a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H; Perp.",
            "VernacExtend",
            "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Perp_in_perm : forall X A B C D, Perp_at X A B C D -> Perp_at X A B C D /\\ Perp_at X B A C D /\\ Perp_at X A B D C /\\ Perp_at X B A D C /\\ Perp_at X C D A B /\\ Perp_at X C D B A /\\ Perp_at X D C A B /\\ Perp_at X D C B A.",
            "VernacStartTheoremProof",
            "1dfdc96f476ac9486d164132793636294b7e6de7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 7 (split; Perp).",
            "VernacExtend",
            "31ad82289456bd9cd4dcb059d52f9a5d4c31593f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_col : forall A B C D X, Perp_at X A B C D -> Col A B X /\\ Col C D X.",
            "VernacStartTheoremProof",
            "9e3c4a2d3f4944a72d4c897b6507eddb0f8c1d25"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_perp_in : forall A B C, Perp A B C A -> Perp_at A A B C A.",
            "VernacStartTheoremProof",
            "ae35a90c7f50faa22cb51ddbf9f13f4794b946a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_15_1.",
            "VernacExtend",
            "43d410a5429b19c8fa5483cdde2a8fa5c0e5a68c"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_per_1 : forall A B C, Perp A B C A -> Per B A C.",
            "VernacStartTheoremProof",
            "2d82a4b8d775e3e6c6352572a221636cc8e57525"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp_at A A B C A).",
            "VernacExtend",
            "890d29470e2571f5cfe5238e3c83741a3b2c409b"
        ],
        [
            "apply perp_perp_in.",
            "VernacExtend",
            "0c9febbe454aee0f549f39d335d2c9638c929291"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_per_2 : forall A B C, Perp A B A C -> Per B A C.",
            "VernacStartTheoremProof",
            "9f98169672d56ca941f035aa9c2b62fa27bbb935"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_right_comm in H.",
            "VernacExtend",
            "9af55678888ba10bee27f62b3c6148a8422632f8"
        ],
        [
            "apply perp_per_1; assumption.",
            "VernacExtend",
            "428349b4a0f7e46457675de22ab833eac9eb82b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_col : forall A B C D E, A<>E -> Perp A B C D -> Col A B E -> Perp A E C D.",
            "VernacStartTheoremProof",
            "a4dabb5f639928e3a66f6288d6ec3f9b9cb1ab68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_col0 with A B;finish.",
            "VernacExtend",
            "684d9b4ee78c4e7254ba6b8da3173f3f9f26c1b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_col2 : forall A B C D X Y, Perp A B X Y -> C <> D -> Col A B C -> Col A B D -> Perp C D X Y.",
            "VernacStartTheoremProof",
            "d8554905a4db6ac1a044885254f750973c32d523"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply perp_distinct in HH.",
            "VernacExtend",
            "c324e89c6024aebca0c891ad27a059df4a6db0a2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply perp_col with B;finish.",
            "VernacExtend",
            "24c1cddd3409f53c210c4d40dc508cfcef2b726d"
        ],
        [
            "assert(Perp A C X Y) by (eapply perp_col;eauto).",
            "VernacExtend",
            "a78b1428fffead7ba7a46ad35d3f06f2741cf8a4"
        ],
        [
            "eapply perp_col with A;finish.",
            "VernacExtend",
            "4a8bac98c782ab16cd5958a62c54a2e7bbd765bd"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_not_eq_1 : forall A B C D, Perp A B C D -> A<>B.",
            "VernacStartTheoremProof",
            "a818147bdcf6a3798a5bf0501686559a857c4eb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_elim H X.",
            "VernacExtend",
            "628e6e5805283f9c580405fc6421d775f66905e5"
        ],
        [
            "unfold Perp_at in H0.",
            "VernacExtend",
            "145f6972257cff907e541073b4ed47143def2c6d"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_not_eq_2 : forall A B C D, Perp A B C D -> C<>D.",
            "VernacStartTheoremProof",
            "fdc3b9276fc98881ece4012f76d20c554ae60245"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply perp_sym in H.",
            "VernacExtend",
            "91062f18a7a48f855caa0d652851d31a00cc1eb6"
        ],
        [
            "eapply perp_not_eq_1.",
            "VernacExtend",
            "f3104989489a9d095748cfee7a79294b872a20a9"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_per_diff : forall A B P R , A <> B -> Cong A P B R -> Per B A P -> Per A B R -> P <> R.",
            "VernacStartTheoremProof",
            "686ef5d9e58802c97d6819afb09cb521bf5b5b97"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_not_colp : forall A B P R, A <> B -> A <> P -> B <> R -> Per B A P -> Per A B R -> ~Col P A R.",
            "VernacStartTheoremProof",
            "4eeb18fcbead08dd849c8f63a7c5083df528ef6f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Perp A B P A).",
            "VernacExtend",
            "088c9d49e9262bf96f4c9aa8ada478ef0f8783bd"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply per_perp;finish.",
            "VernacExtend",
            "8ceb9964f9bd1626ddc4b59249a548da2ffc1fcf"
        ],
        [
            "assert (Perp A B B R).",
            "VernacExtend",
            "987d3c24ce1da87d5580f604bda8bbc875c6fc59"
        ],
        [
            "apply per_perp;finish.",
            "VernacExtend",
            "8ceb9964f9bd1626ddc4b59249a548da2ffc1fcf"
        ],
        [
            "assert (Per B A R).",
            "VernacExtend",
            "a383086d22230fba5c9d020c6851bc3d7e06eaac"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "apply l8_2 in H3.",
            "VernacExtend",
            "ae80faa0f48db7f4677bf97cdf96633e65e6b2fd"
        ],
        [
            "apply l8_2 in H7.",
            "VernacExtend",
            "7db734f33415cd58f0590c3b0fe0e86ccf5ed2ca"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_not_col : forall A B C, A <> B -> B <> C -> Per A B C -> ~Col A B C.",
            "VernacStartTheoremProof",
            "39ee932e2b9ca4105f7d0f6be2d25a22405a08f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Per in H1.",
            "VernacExtend",
            "59cf689935a884fc6e799a1d7b65ce7cf89e9cdd"
        ],
        [
            "ex_and H1 C'.",
            "VernacExtend",
            "248e9ea85399d664e369da129ccc15bf10a91d3e"
        ],
        [
            "assert (C = C' \\/ Midpoint A C C').",
            "VernacExtend",
            "fd6a8dfc6aa51767348f26ede39bdee1c3db3d6a"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "assert_cols;ColR.",
            "VernacExtend",
            "dcd52a43783682cf5a688003361ca2c9539a8678"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H4;treat_equalities; intuition.",
            "VernacExtend",
            "c59a10754401e792dc6b971c610e689ec98a5f5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_not_col2 : forall A B C D, Perp A B C D -> ~ Col A B C \\/ ~ Col A B D.",
            "VernacStartTheoremProof",
            "4c694545d9c51653fae770dfb6de4f03c7bf1aa2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(Perp_at C A B C D).",
            "VernacExtend",
            "b2deca8b3205f3c922662533c397a2e592afb816"
        ],
        [
            "apply l8_14_2_1b_bis; Col.",
            "VernacExtend",
            "3f5ffb90ef7c0657463305d719f2de6bd4c357de"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Perp_at D A B C D).",
            "VernacExtend",
            "e247d173e4483cdd186b067fb729596e5a8f9ca9"
        ],
        [
            "apply l8_14_2_1b_bis; Col.",
            "VernacExtend",
            "3f5ffb90ef7c0657463305d719f2de6bd4c357de"
        ],
        [
            "assert(C = D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "eapply l8_14_3.",
            "VernacExtend",
            "80c3c2283642340068b387536ebfd168be7c495b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_not_eq_2 in H.",
            "VernacExtend",
            "6e9c2284e64c44d30956337c1d569d641566d466"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_not_col : forall A B P, Perp A B P A -> ~ Col A B P.",
            "VernacStartTheoremProof",
            "5adc41bfc9cc0176a1b31d6268536a0b88bd576b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp_at A A B P A).",
            "VernacExtend",
            "e158f6e0b29de6acc116dd6dbf5c41e00673fc11"
        ],
        [
            "apply perp_perp_in.",
            "VernacExtend",
            "0c9febbe454aee0f549f39d335d2c9638c929291"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per P A B).",
            "VernacExtend",
            "fc72182aeed47b9f5833deda8b7651726bc76df3"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "apply perp_in_sym.",
            "VernacExtend",
            "24d80e91aafb00ee02dfda8e42383eea93b0e272"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_in_left_comm in H0.",
            "VernacExtend",
            "49a502923ad93ae92a40d3b88f217afc9436692c"
        ],
        [
            "assert (~ Col B A P -> ~ Col A B P).",
            "VernacExtend",
            "1bcaba66e415d1f04cf4ccea2340711fbb5a7a51"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply perp_distinct in H.",
            "VernacExtend",
            "519d68c45c659aa92307200baa57b696f1737097"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply per_not_col.",
            "VernacExtend",
            "5048534e861bed3c0c140b89a47a72b850eee207"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "apply perp_in_right_comm.",
            "VernacExtend",
            "f708d91949733e6d7c3ff6e044245680b16691de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_col_perp_in : forall A B C D E P, C <> E -> Col C D E -> Perp_at P A B C D -> Perp_at P A B C E.",
            "VernacStartTheoremProof",
            "65171b5cae9cad84137a6cbd8ddd2bf4066efeed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_col2_bis : forall A B C D P Q, Perp A B P Q -> Col C D P -> Col C D Q -> C <> D -> Perp A B C D.",
            "VernacStartTheoremProof",
            "28bbd7ca86f846fc0075b1f4e3238b4e1b8483de"
        ],
        [
            "intros A B C D P Q HPerp HCol1 HCol2 HCD.",
            "VernacExtend",
            "08ad886bc7fc717a0a8af79f33ef2756ba507449"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_col2 with P Q; Perp; ColR.",
            "VernacExtend",
            "075d460234d2bcbcda4244732acfd0c6236d0db1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_perp_bis : forall A B C D X, Perp_at X A B C D -> Perp X B C D \\/ Perp A X C D.",
            "VernacStartTheoremProof",
            "f29e2742d6dff7d8e72cbc5f9413dd4a1b33dcb6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points X A).",
            "VernacExtend",
            "03553a719bbe883baef7393821ccdbba79b55c67"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_per_perp : forall A B C D, A <> B -> B <> C -> D <> B -> D <> C -> Col B C D -> Per A B C -> Perp C D A B.",
            "VernacStartTheoremProof",
            "d958eb7c3bdc11769f544d0f472e0d71644974ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply per_perp_in in H4.",
            "VernacExtend",
            "ae90b4b3ab08d700837cc3e2142a69efd4303357"
        ],
        [
            "apply perp_in_perp_bis in H4.",
            "VernacExtend",
            "2dfa3ec26b1aeb5e6ddf30bbc380ee24744741d0"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "eapply (perp_col _ B).",
            "VernacExtend",
            "cc0215390a1cd300f44ba54566baed5f9f9af1a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_cong_mid : forall A B C H, B <> C -> Bet A B C -> Cong A H C H -> Per H B C -> Midpoint B A C.",
            "VernacStartTheoremProof",
            "7336883dda09e90146c8668b08daf59ef6df5de1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points H B).",
            "VernacExtend",
            "4af18d82b05a895f60385308cb9231872a482b44"
        ],
        [
            "subst H.",
            "VernacExtend",
            "f1a356c60f00949319e5be2b6a9169472987b785"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per C B H).",
            "VernacExtend",
            "dbd56d2dd1e44a1b4fe6cfb9c643c67526b7e92a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per H B A).",
            "VernacExtend",
            "7d7b927766488e6b17d5e7809eb5fa7a9793214b"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per A B H).",
            "VernacExtend",
            "8b69d6945708b42ddecccbc4bf1bf6fa4d2b8854"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Per in *.",
            "VernacExtend",
            "cb7b87362e910ccf5bf8015ae43a235e8db00d3d"
        ],
        [
            "ex_and H3 C'.",
            "VernacExtend",
            "ff7aa28884c5cddf3e7b7dddf6bc8a3390ac22c5"
        ],
        [
            "ex_and H5 H'.",
            "VernacExtend",
            "6635600b06e599c1db65cbd189baac37a1a6caa4"
        ],
        [
            "ex_and H6 A'.",
            "VernacExtend",
            "0126bf09c333a913a045a139e3c70f3bdd08ee92"
        ],
        [
            "ex_and H7 H''.",
            "VernacExtend",
            "27f301c14c25d960dcf6375dff5639e8d7dae1b9"
        ],
        [
            "assert (H' = H'').",
            "VernacExtend",
            "f1b39a66e03a0ca1b6ae9b68e8b3b997a6f44277"
        ],
        [
            "eapply construction_uniqueness.",
            "VernacExtend",
            "928b48d22b7aedfb9e2c53039ddcc1800f8bfaf9"
        ],
        [
            "2: apply midpoint_bet.",
            "VernacExtend",
            "6522b031b580a82dec27560f5937155249df3063"
        ],
        [
            "2:apply H5.",
            "VernacExtend",
            "42fd69307b59659a584caffc20da7549c0e12154"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst H''.",
            "VernacExtend",
            "f5981ab841cd41cdc2a0d8ae4b143f003bbd55ed"
        ],
        [
            "assert(IFSC H B H' A H B H' C).",
            "VernacExtend",
            "23c43cb9efe3cf74f00a13cd8bba2aa65cdcf0da"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_2 in H12.",
            "VernacExtend",
            "0a1c03a520dde5290ec1be2c568c4d1f1d7ce3f1"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_double_cong : forall A B C C', Per A B C -> Midpoint B C C' -> Cong A C A C'.",
            "VernacStartTheoremProof",
            "2fdfdb60b2e1918f0aa153ad34bfe2d95ec1ac05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "ex_and H C''.",
            "VernacExtend",
            "467ceb355207d52019ec6ea6fa820587dc325ed2"
        ],
        [
            "assert (C' = C'').",
            "VernacExtend",
            "abda04dea222a65794dde7d4d32363023cd58a5d"
        ],
        [
            "eapply l7_9.",
            "VernacExtend",
            "2d1b9759b531f4ceebb32416848b0daeaf205b9a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_perp_or_mid : forall A B M X, A <> B -> Midpoint M A B -> Cong A X B X -> X = M \\/ ~Col A B X /\\ Perp_at M X M A B.",
            "VernacStartTheoremProof",
            "03d9a55061986d98cebc5bbb44b6bb3430b70fa2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(col_dec A B X).",
            "VernacExtend",
            "39431033d94ce73c69b26e2ec1c1bae626a8da55"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(A = B \\/ Midpoint X A B).",
            "VernacExtend",
            "33836d493b7071b86bb2f430a5efe93405be938c"
        ],
        [
            "apply l7_20; Col.",
            "VernacExtend",
            "5822efe3f85a68cb08cac1123d47951b2a4aa2fa"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply (l7_17 A B); auto.",
            "VernacExtend",
            "83cac34a661c5beebcbdb7bb44b8bdf812967dd3"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert(Col M A B).",
            "VernacExtend",
            "549c5462911795ad21cf09bb2c67bdf15831e94a"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter; Col.",
            "VernacExtend",
            "06239419a8ae9f5ccd1709f02171cc6a620beb58"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Per X M A) by (unfold Per;exists B;split; Cong).",
            "VernacExtend",
            "3c8d9357eccb331387f37556117b5f019a55d3fc"
        ],
        [
            "apply per_perp_in in H4.",
            "VernacExtend",
            "ae90b4b3ab08d700837cc3e2142a69efd4303357"
        ],
        [
            "apply perp_in_right_comm in H4.",
            "VernacExtend",
            "e7a2999a0fe7214f304d4a42eab12b381daa6c10"
        ],
        [
            "apply(perp_in_col_perp_in X M A M B M); Col.",
            "VernacExtend",
            "daabe7201604766acf99e766c3729aa1c573249c"
        ],
        [
            "intro;treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "apply H2; Col.",
            "VernacExtend",
            "ad4ebd24361c58efe58cd1e89ddbcff44bba6d59"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_per2_cases : forall A B C D B', B <> C -> B' <> C -> C <> D -> Col B C D -> Per A B C -> Per A B' C -> B = B' \\/ ~Col B' C D.",
            "VernacStartTheoremProof",
            "7580eec1bb31f417bde1186d636c5713db237144"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points B B').",
            "VernacExtend",
            "15e17b16f694f7c59832aae6f4f287a6a67cb2f2"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col C B B').",
            "VernacExtend",
            "564f472790aff3b98860f193681106c5c6235332"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert(Per A B' B).",
            "VernacExtend",
            "80bebd2f9c0758d729054a34969344e31cc70816"
        ],
        [
            "apply(per_col A B' C B H0 H4); Col.",
            "VernacExtend",
            "39d2986ceebb0934327ad903cee086514656d3e8"
        ],
        [
            "assert(Per A B B').",
            "VernacExtend",
            "5ed66bf3518cc316d069aeaeabb49e0b94f2d11e"
        ],
        [
            "apply(per_col A B C B' H H3); Col.",
            "VernacExtend",
            "bd452eebaf65a02e834da00c6cda8415a8bc18f0"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply (l8_7 A); auto.",
            "VernacExtend",
            "184879627300220c2011623ee6dad7c91950e8b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_16_1 : forall A B C U X, Col A B X -> Col A B U -> Perp A B C X -> ~ Col A B C /\\ Per C X U.",
            "VernacStartTheoremProof",
            "020d439b11fffbb7db317ba4383a953f1f237f5c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points U X).",
            "VernacExtend",
            "0ac3e015e15702ea692d62904516d4e87d203617"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "destruct (perp_not_col2 A B C U); auto.",
            "VernacExtend",
            "ff721accd167d6f8b8cc340e70681819c31b8574"
        ],
        [
            "apply l8_5.",
            "VernacExtend",
            "d5060bb18205f3366c51ad83882ac488c08f0296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Perp_at X A B C X).",
            "VernacExtend",
            "ba645d9d99450d6792d3bdf505ca34ca72b443bc"
        ],
        [
            "eapply l8_15_1.",
            "VernacExtend",
            "5d0964fc5f71c0282a7dfecb89864392d928132c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (X = U).",
            "VernacExtend",
            "f7c31f3e4a50376a41096be0787b70239ff92b26"
        ],
        [
            "eapply l8_14_2_1b.",
            "VernacExtend",
            "74cbd30bfbb3a715816f7856ddfbea19efb604dd"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply col3 with A B;Col.",
            "VernacExtend",
            "5dd643a8f18270e2e41081e6a83e9628e4eeb8bc"
        ],
        [
            "apply perp_distinct in H1; spliter; auto.",
            "VernacExtend",
            "918a951fa39e2e27ecdf75409ae994eb0c1fc688"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply l8_14_2_1b_bis with C X U X;try Col.",
            "VernacExtend",
            "0fb8694645f275da7360dbf9303a16f7f1c2df11"
        ],
        [
            "assert (Col A X U).",
            "VernacExtend",
            "aa833f8bfc9a5ada0fdb6b85b43af6e32383f2f6"
        ],
        [
            "eapply (col3 A B);Col.",
            "VernacExtend",
            "d10516134859faa51aaa89eb5c946f2dde991b8f"
        ],
        [
            "apply perp_distinct in H1; spliter; auto.",
            "VernacExtend",
            "918a951fa39e2e27ecdf75409ae994eb0c1fc688"
        ],
        [
            "eapply perp_col0 with A B;Col.",
            "VernacExtend",
            "0ddfbc12738a8778abafe94e51571026dd8cacb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_16_2 : forall A B C U X, Col A B X -> Col A B U -> U<>X -> ~ Col A B C -> Per C X U -> Perp A B C X.",
            "VernacStartTheoremProof",
            "76d38cb7429d110d2bfca13d1b8cac25d72dc3b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (C <> X).",
            "VernacExtend",
            "e94d4c6695334ec6355186d9706b42c748966f0d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "eapply l8_13_2.",
            "VernacExtend",
            "1d862c03ac8e9b4cfa3f02cfa16badb4021d4abf"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists U.",
            "VernacExtend",
            "5fa927449745739df126de32a00d9a77c57aa9f7"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_18_uniqueness : forall A B C X Y, ~ Col A B C -> Col A B X -> Perp A B C X -> Col A B Y -> Perp A B C Y -> X=Y.",
            "VernacStartTheoremProof",
            "e8ad85b9203e0ab1b056e93fdfe4700ca0dcc7e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "show_distinct A B.",
            "VernacExtend",
            "5adab21d06695dd86576309f95a9238554958afd"
        ],
        [
            "solve [intuition].",
            "VernacExtend",
            "a44c77fe0ad6731ace858e9158278f1620dc35f8"
        ],
        [
            "assert (Perp_at X A B C X) by (eapply l8_15_1;assumption).",
            "VernacExtend",
            "56a770683140d63292aa23e0b83a00487904962a"
        ],
        [
            "assert (Perp_at Y A B C Y) by (eapply l8_15_1;assumption).",
            "VernacExtend",
            "5062ffefc44bb6cc643f3d0f54f7eb760eb0bc43"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l8_7 with C;apply l8_2;[apply H14 |apply H10];Col.",
            "VernacExtend",
            "0bbd752654fb7f339d2dd7feb4a2da3b5aa4d142"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_distinct : forall A B X C C', ~ Col A B C -> Col A B X -> Midpoint X C C' -> C <> C'.",
            "VernacStartTheoremProof",
            "fa90070508d6d4d899c69478d3a1cdfa3569b6d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Midpoint in H1.",
            "VernacExtend",
            "02391658ec4b0bc896630613ed31279a22db1590"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_20_1 : forall A B C C' D P, Per A B C -> Midpoint P C' D -> Midpoint A C' C -> Midpoint B D C -> Per B A P.",
            "VernacStartTheoremProof",
            "d562ba32c055caa57b6fc1faac10bfeb9d6ffbf6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "double B A B'.",
            "VernacExtend",
            "225e2a5dc8d371f50d605d5853860c4b5fb5d0fb"
        ],
        [
            "double D A D'.",
            "VernacExtend",
            "4ed4b599c1c3d29b9450f0dddb4e69d3dc7eb9a6"
        ],
        [
            "double P A P'.",
            "VernacExtend",
            "5ddb93559f2fa0e179e97630b1c30cabfca7ae9a"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "unfold Midpoint in H5.",
            "VernacExtend",
            "05d381ea1e3b32a9b648899f1a98a4defb1fbc1e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l8_2.",
            "VernacExtend",
            "0fc9904285013063a60948132651a763b13c3f64"
        ],
        [
            "eapply l8_5.",
            "VernacExtend",
            "fb0d4ac1e56cbae04f3601266c843902132cf365"
        ],
        [
            "assert (Per B' B C).",
            "VernacExtend",
            "9bd9db24953b91f5ea908feeb195afbbd791d6f9"
        ],
        [
            "eapply l8_3.",
            "VernacExtend",
            "f4f1adb8249f94b7110cd4629df20d6d56bd4ece"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per B B' C').",
            "VernacExtend",
            "3ddcfd96e07b07bdfee7ead697ebe4b9eced790c"
        ],
        [
            "eapply l8_10.",
            "VernacExtend",
            "1ee3d8217c9ac2206eea0fb7c7068e5e356cf7a6"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Midpoint B' D' C').",
            "VernacExtend",
            "9b601652b84c34f8d709a753880e228fb08d10eb"
        ],
        [
            "eapply symmetry_preserves_midpoint.",
            "VernacExtend",
            "b384c091c453fd003d9060bed30f8c612686bb00"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Midpoint P' C D').",
            "VernacExtend",
            "91cc30d29956dc025639502e5dc7aa05b4d08dcf"
        ],
        [
            "eapply symmetry_preserves_midpoint.",
            "VernacExtend",
            "b384c091c453fd003d9060bed30f8c612686bb00"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Per in H7.",
            "VernacExtend",
            "41ffd9c700a92b7cc2438d53b5838fe3d8765c93"
        ],
        [
            "ex_and H7 D''.",
            "VernacExtend",
            "ec2d44a9fdd873c04c1e9094718e8930fd427e83"
        ],
        [
            "assert (D''= D).",
            "VernacExtend",
            "d31e784cc73e4bccca8c57af31b786f6e9308c5e"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D''.",
            "VernacExtend",
            "e0e94b74de0a3b8eabcf9bbf0fedaeb2b8e94297"
        ],
        [
            "unfold Per in H8.",
            "VernacExtend",
            "385ddb4a11aa7eba10eedce3a54d498fbc5266bc"
        ],
        [
            "ex_and H8 D''.",
            "VernacExtend",
            "34167c5869785527abbff8e99aa01ece8513a61f"
        ],
        [
            "assert (D' = D'').",
            "VernacExtend",
            "d6b3636b836689a1e9756e0d9b0eccd79de57a50"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D''.",
            "VernacExtend",
            "e0e94b74de0a3b8eabcf9bbf0fedaeb2b8e94297"
        ],
        [
            "assert (Midpoint P C' D).",
            "VernacExtend",
            "f1c59071cacbbb5da546b0f5060409e07886b27e"
        ],
        [
            "eapply symmetry_preserves_midpoint.",
            "VernacExtend",
            "b384c091c453fd003d9060bed30f8c612686bb00"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C D C' D').",
            "VernacExtend",
            "2bb0845bdbfc2760f1dfe735e6310a33afff315e"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong C' D C D').",
            "VernacExtend",
            "36ef577d5c9853cd900e05563389ea7693cd233b"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong P D P' D').",
            "VernacExtend",
            "dd9740efbf24bf242b0352b6bb22c6693b4a3193"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong P D P' C).",
            "VernacExtend",
            "99914a49d1b0bd9c152e5cde4749caa71658c86b"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "unfold Midpoint in H10.",
            "VernacExtend",
            "3784d6af68eb15bde27bacdd48e0f292ac33e525"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (IFSC C' P D B D' P' C B).",
            "VernacExtend",
            "0f66a291d70bd1f22448f0fb74967ace8605b90d"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong P B P' B).",
            "VernacExtend",
            "43172f4d2558f57ad338c21f433fe9ff8f241a91"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_20_2 : forall A B C C' D P, Per A B C -> Midpoint P C' D -> Midpoint A C' C -> Midpoint B D C -> B<>C -> A<>P.",
            "VernacStartTheoremProof",
            "7ab61280e3e5b9d7f1feacc983b9ecc78b7263c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "assert (C = D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert (B = C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "apply l7_3.",
            "VernacExtend",
            "e0ed8044d8d76b674bae6c3d6c16560c62b151be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_col1 : forall A B C D X, C <> X -> Perp A B C D -> Col C D X -> Perp A B C X.",
            "VernacStartTheoremProof",
            "af106728eb6463619d8d10061a7bfec714594432"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=perp_distinct A B C D H0).",
            "VernacExtend",
            "df5126a614affa530be4ec2dbcd5b62d57ac60b3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Perp in *.",
            "VernacExtend",
            "2be98c6eee3df4f71a741f342f82e94de254290a"
        ],
        [
            "ex_and H0 P.",
            "VernacExtend",
            "d2c2ec0968737c29a68f242b092b227d7bad8d3a"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply col_transitivity_2.",
            "VernacExtend",
            "34deee177766d8e8210e4b1ea50e01e28e4f6d6d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_18_existence : forall A B C, ~ Col A B C -> exists X, Col A B X /\\ Perp A B C X.",
            "VernacStartTheoremProof",
            "8ce783f4f5c61a8d17bb3c31de9b2817abed1403"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong B A Y A C.",
            "VernacExtend",
            "a40d2d64c3ba3c2bb731b633d8e65cbb2a29eda3"
        ],
        [
            "assert (exists P, Midpoint P C Y) by (apply l7_25 with A;Cong).",
            "VernacExtend",
            "b0c6d95986f77cb8e66282eac53121ccf590cfd9"
        ],
        [
            "ex_and H2 P.",
            "VernacExtend",
            "def0c78f64ec58e2d9899580dcf7798b91ef5b2d"
        ],
        [
            "assert (Per A P Y) by (unfold Per;exists C;auto using l7_2).",
            "VernacExtend",
            "f0b422d8c8c4bf00fd58d8402283db825b40b082"
        ],
        [
            "prolong A Y Z Y P.",
            "VernacExtend",
            "4f234c8a1a149408e43d664de2078ae01e119c4c"
        ],
        [
            "prolong P Y Q Y A.",
            "VernacExtend",
            "199ddd05cc8fc52f55e70a64d8af8d5c97f91261"
        ],
        [
            "prolong Q Z Q' Q Z.",
            "VernacExtend",
            "6ef0e35a8eda9566c26d93a3f6c859a4c9ec32ba"
        ],
        [
            "assert (Midpoint Z Q Q') by (unfold Midpoint;split;Cong).",
            "VernacExtend",
            "cdf06fc606bd9a6b03635ec909d1dafc577f0efd"
        ],
        [
            "prolong Q' Y C' Y C.",
            "VernacExtend",
            "ba729956ad4a7cc31464d93f4346ffdaeb249c3d"
        ],
        [
            "assert (exists X, Midpoint X C C') by (apply l7_25 with Y;Cong).",
            "VernacExtend",
            "de75b8b744f5aa2e7db291f5bb8ee7f25cb5d5b1"
        ],
        [
            "ex_and H13 X.",
            "VernacExtend",
            "40d6fbdc9b77dfe99246b5bcbecd33ac98dd495c"
        ],
        [
            "assert (OFSC A Y Z Q Q Y P A) by (unfold OFSC;repeat split;Between;Cong).",
            "VernacExtend",
            "21b2711211d3c7687cfb4b6977703d8501f3a593"
        ],
        [
            "show_distinct A Y.",
            "VernacExtend",
            "fba3ebcc79b507bf100c0b4c018488b134a1183f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Cong Z Q P A) by (eauto using five_segment_with_def).",
            "VernacExtend",
            "1c992011b1a6ce6a24c774f84e74c4d4721149b8"
        ],
        [
            "assert (Cong_3 A P Y Q Z Y) by (unfold Cong_3;repeat split;Cong).",
            "VernacExtend",
            "81e6c49e09d85a364fbe20627721771047d09a46"
        ],
        [
            "assert (Per Q Z Y) by (eauto using l8_10).",
            "VernacExtend",
            "c1df58651abd022d6a3e59d00c0da73e23f2e824"
        ],
        [
            "assert (Per Y Z Q) by eauto using l8_2.",
            "VernacExtend",
            "7065bae3ab5b62be9923b236f8b81b2e7d5e87ae"
        ],
        [
            "show_distinct P Y.",
            "VernacExtend",
            "9a754d3f66274169e1b4ab586655cea46deb1d40"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "Col5.",
            "VernacExtend",
            "b8ba68e82e434a9a8272f2e39ecddbb1fdeae099"
        ],
        [
            "unfold Per in H19.",
            "VernacExtend",
            "b8790ee951fdf834298c047135b6faaedb384a44"
        ],
        [
            "ex_and H19 Q''.",
            "VernacExtend",
            "cb18fbcb158c794c00dc675f69f4bcd7b6508025"
        ],
        [
            "assert (Q' = Q'').",
            "VernacExtend",
            "84c4488d8b754c9bd62e4408941ab763a5243c47"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst Q''.",
            "VernacExtend",
            "c4983dad1d951185bae4a685daa3372d0116e0b8"
        ],
        [
            "assert (hy:Bet Z Y X).",
            "VernacExtend",
            "a9e22b4d4cd83e0bf9840352fef2668fbf9f98e7"
        ],
        [
            "apply (l7_22 Q C Q' C' Y Z X);Cong.",
            "VernacExtend",
            "c0aa71428bd9b5d4ef8af1f1375d5b3065a9d588"
        ],
        [
            "assert (T:=outer_transitivity_between2 C P Y Q).",
            "VernacExtend",
            "aa25d299f631b532c5041af3d836ad4ba5da0cb2"
        ],
        [
            "assert_bets.",
            "VernacExtend",
            "9f11de834d80cd23de9799f11c91aacfc3dc0559"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply T;Between.",
            "VernacExtend",
            "ecf031fb1bdec3cb960aad7fcf4a9fd87aa80079"
        ],
        [
            "show_distinct Q Y.",
            "VernacExtend",
            "3f0c200f6b6d11f466f1379147faf668cdd213ec"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Per Y X C) by (unfold Per;exists C';split;Cong).",
            "VernacExtend",
            "6c9a3193d1400d24169b10e9b7b7eebee0202ada"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Col P Y Q).",
            "VernacExtend",
            "29860a43f8584bf7fc082c1fbe7e015c67fcecee"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col P Y C).",
            "VernacExtend",
            "32c13681b532d6ca9af30b57ae8157db626ca5b7"
        ],
        [
            "unfold Midpoint in H3.",
            "VernacExtend",
            "c870c3301b29dc8ce5c31434123448e6e60f69c9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Col P Q C) by ColR.",
            "VernacExtend",
            "8914b61c0d7d4e528e1b2b3675d13fd1090c5359"
        ],
        [
            "assert (Col Y Q C) by ColR.",
            "VernacExtend",
            "ea313c282b9ee1d22e6ed9cd40ba9a681d7c1d72"
        ],
        [
            "assert (Col A Y B) by (assert_cols;Col).",
            "VernacExtend",
            "dbdbbf0d39ccad3437f8a55753a2eb58805cc223"
        ],
        [
            "assert (Col A Y Z) by (assert_cols;Col).",
            "VernacExtend",
            "b2447309775d4525857fac44aef3af19e7c4a412"
        ],
        [
            "assert (Col A B Z) by ColR.",
            "VernacExtend",
            "cbe881d29839df390658cf8f26b5eee6430ff0c0"
        ],
        [
            "assert (Col Y B Z) by ColR.",
            "VernacExtend",
            "13a10294c6cb0b7b378a61d8fcbe278c965118f8"
        ],
        [
            "assert (Col Q Y P) by Col.",
            "VernacExtend",
            "c8e864da8cec513ea2f8f8ee1238c3a97abbc0b8"
        ],
        [
            "assert(Q <> C).",
            "VernacExtend",
            "db7996815f23cede5ad7c2defc5a56f9a9fa0cd7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assert (Bet B Y Z) by (apply outer_transitivity_between2 with A;auto).",
            "VernacExtend",
            "a7347893a70ded2ff99e224fa8f1c0941d98e386"
        ],
        [
            "apply between_symmetry in H3.",
            "VernacExtend",
            "4352193e73f8ad6c7b5ce1fb0642ce387c447b06"
        ],
        [
            "assert (Y = P).",
            "VernacExtend",
            "620c63a0db8afa7c0e49d540e194d18beb956812"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Y B Z) by ColR.",
            "VernacExtend",
            "13a10294c6cb0b7b378a61d8fcbe278c965118f8"
        ],
        [
            "show_distinct Y Q'.",
            "VernacExtend",
            "330443cefb299bfdb781ccdaa71dd84d8775cff0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Y Q' C') by (assert_cols;Col).",
            "VernacExtend",
            "77359eed83d069b4169be486d75a5a312a8d5001"
        ],
        [
            "assert (Q <> Q').",
            "VernacExtend",
            "bbd2e57501fd921126b823fa1e118651e10a6df4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold OFSC, Cong_3 in *.",
            "VernacExtend",
            "927222783da8ea67c7d486e73520018121fa0ab5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert (C <> C').",
            "VernacExtend",
            "173b5c84016e360893231fa387ff71eb35f411db"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply l7_3 in H14.",
            "VernacExtend",
            "52ccc52e7d2f025b1b8e04a8ae0bd223b8df6167"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert (Col Z Q Q') by (assert_cols;ColR).",
            "VernacExtend",
            "ca65bcdc749b3298d5af5444c0d6e136421be14e"
        ],
        [
            "assert (Y <> Z).",
            "VernacExtend",
            "b11950153cbf457171eca26126a1d03bda6f9c61"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Z.",
            "VernacExtend",
            "175cfad89f3c163fd5ad63767fa7d8c442d6186d"
        ],
        [
            "unfold OFSC, Cong_3, Midpoint in *.",
            "VernacExtend",
            "68cb04fdd1bf8294d2f9bd5d40cd6c3c2228041b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert(OFSC Q Y C Z Q' Y C' Z).",
            "VernacExtend",
            "fe166e14248c7c4bbab2ce977e081cbadbe8f2ec"
        ],
        [
            "unfold OFSC.",
            "VernacExtend",
            "492752124a3e0e575422433695b3cbf9807f06bc"
        ],
        [
            "repeat split;Between;Cong.",
            "VernacExtend",
            "15a9387370927b31481a4fd44beaf3d15836b154"
        ],
        [
            "unfold OFSC, Midpoint in *.",
            "VernacExtend",
            "d3ceae62f603dd84fb1b48720bbc057aa3e8f8d5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply outer_transitivity_between with P;Between;Cong.",
            "VernacExtend",
            "9f9aaed2fc91822d62c77a16cc89e0f28ffc90c0"
        ],
        [
            "assert (Cong C Z C' Z) by (eauto using five_segment_with_def).",
            "VernacExtend",
            "1a4364a3d1dc4c32d94b5ab65f92781e4dc8b33c"
        ],
        [
            "assert (Col Z Y X) by (assert_cols;Col).",
            "VernacExtend",
            "c9596621b43b2a558af652c068365c25c95ecdb5"
        ],
        [
            "show_distinct Y Z.",
            "VernacExtend",
            "219b00964ee5885801dd635d5238a803e1fdfd71"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert(C <> X).",
            "VernacExtend",
            "e94d4c6695334ec6355186d9706b42c748966f0d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold OFSC,Cong_3,Midpoint in *.",
            "VernacExtend",
            "68cb04fdd1bf8294d2f9bd5d40cd6c3c2228041b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert(X <> Y).",
            "VernacExtend",
            "b84dc18dd0f142a773e181451bb0c75f076f9262"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold OFSC,Cong_3,Midpoint in *.",
            "VernacExtend",
            "68cb04fdd1bf8294d2f9bd5d40cd6c3c2228041b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "clean_trivial_hyps.",
            "VernacExtend",
            "ac97f941a1a2a1c1aa41d983627aedf3348ee9a7"
        ],
        [
            "show_distinct C' Y.",
            "VernacExtend",
            "ff9f699e119b7478d0807a954ad13dde96851f99"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Y C' P ).",
            "VernacExtend",
            "5d32fa9434fa6137688b7644a6c3e4fd2e6ae37a"
        ],
        [
            "eapply col_transitivity_1 with C.",
            "VernacExtend",
            "b232688f124bb2c44860b5a03c1436e29b50f402"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "show_distinct P Q.",
            "VernacExtend",
            "d85533e59e258f41c9606c3c698fb0e67371422a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Y P Q') by ColR.",
            "VernacExtend",
            "425af5a706053deb8e18e262daf443b0959075d9"
        ],
        [
            "assert (Col Y Q Q') by ColR.",
            "VernacExtend",
            "1b1fa6cc4daa0e8de003bbdbbb1ec617d8abd986"
        ],
        [
            "assert (Col Q Y Z) by (assert_cols;ColR).",
            "VernacExtend",
            "8f3c4f3af89ab7bdab43c1737e5eb1737ff39dc3"
        ],
        [
            "assert (Col Y Z C) by (assert_bets;assert_cols;ColR).",
            "VernacExtend",
            "1dc87e757d45a58bf8062f8ad5930fcfc672b518"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert (Perp_at X Y Z C X).",
            "VernacExtend",
            "5f438701f03b884e856f516d940618774859f37c"
        ],
        [
            "eapply l8_13_2;Col.",
            "VernacExtend",
            "25b4441041265242db37cab11331085493af8c13"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split;Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "assert (Col A B X) by ColR.",
            "VernacExtend",
            "27406fb365bd793ed2f73f9ce78cd4681c5933a0"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "repeat split;Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in H52.",
            "VernacExtend",
            "b31ebeddb48277ee42c211b48bfe35f9a0627184"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H57;ColR.",
            "VernacExtend",
            "f3da719a82eaf16eecfb5cc4352b1bf908ef5527"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_21_aux : forall A B C, ~ Col A B C -> exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet C T P.",
            "VernacStartTheoremProof",
            "c9f471ac643229c1257fd4fb912ade1017f5499f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists X : Tpoint, Col A B X /\\ Perp A B C X).",
            "VernacExtend",
            "c6e8e3f19a6adb111b72186f2dcac8eba070cff1"
        ],
        [
            "eapply l8_18_existence.",
            "VernacExtend",
            "df75c2ab8ca9dd8ec29aa6aa5c029ed1fd38e82c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "assert (Perp_at X A B C X).",
            "VernacExtend",
            "ba645d9d99450d6792d3bdf505ca34ca72b443bc"
        ],
        [
            "eapply l8_15_1; assert_diffs; auto.",
            "VernacExtend",
            "9d15a015863fcac92be75d8b049bc496b4f34bc4"
        ],
        [
            "assert (Per A X C).",
            "VernacExtend",
            "33249f2e72f955692f9cdc0afce70372b3f34336"
        ],
        [
            "unfold Perp_at in H2.",
            "VernacExtend",
            "163eea6607e600cc5046541ef3312c1be2b2ef05"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert(HH:= H3).",
            "VernacExtend",
            "f4c59c1ce7d256479716e5178152c331faa76bde"
        ],
        [
            "unfold Per in H3.",
            "VernacExtend",
            "f93716bde3d3b066c68c7f4941c0f21cead09d2c"
        ],
        [
            "ex_and H3 C'.",
            "VernacExtend",
            "ff7aa28884c5cddf3e7b7dddf6bc8a3390ac22c5"
        ],
        [
            "double C A C''.",
            "VernacExtend",
            "42b00a9489bb57f1905cfd57be3888444360dd8a"
        ],
        [
            "assert (exists P, Midpoint P C' C'').",
            "VernacExtend",
            "c6b90631fa6760e7a71932c06aab35f10a8c96a0"
        ],
        [
            "eapply l7_25.",
            "VernacExtend",
            "7bbb896d42e104b07bab881e2b3d1c19d20857db"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption; spliter.",
            "VernacExtend",
            "8425cfc57b9f94c930cfb8e19016d821b7bd91fd"
        ],
        [
            "ex_elim H6 P.",
            "VernacExtend",
            "00addaf46d545d145ffd34e3439dc65d5732802d"
        ],
        [
            "assert (Per X A P).",
            "VernacExtend",
            "32e6e1b49afbba3ac6666ce2cb1d79d241bcfa60"
        ],
        [
            "eapply l8_20_1.",
            "VernacExtend",
            "66b12269ed6fffdfa3df5c648d9fa0130244a212"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (X <> C).",
            "VernacExtend",
            "c6c014348a31f750b9b12368cbc1aa2c39285dfa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "eapply l8_20_2.",
            "VernacExtend",
            "f4a079f7f88d59cb3688c5bd04093473660f4039"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (exists T, Bet P T C /\\ Bet A T X).",
            "VernacExtend",
            "24d6555591b7ce72f421084074b8a0c454d72d9b"
        ],
        [
            "eapply l3_17.",
            "VernacExtend",
            "5a9204bf12e810952957de6ac76efe20e1c29988"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "ex_and H10 T.",
            "VernacExtend",
            "834bd7fec050ca98b99fbe39708c5351939a59cf"
        ],
        [
            "induction (eq_dec_points A X).",
            "VernacExtend",
            "f0dfcb2e07469b66b3c4a70125bac07472563157"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "apply between_identity in H11.",
            "VernacExtend",
            "ec37879201f6d195d4f1d4cbc182be4c0f9d973b"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "assert (C'= C'').",
            "VernacExtend",
            "abda04dea222a65794dde7d4d32363023cd58a5d"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "apply l7_3 in H7.",
            "VernacExtend",
            "31ca3d641cd2f7965bbc4ae295b9d4bbd708aeb5"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "assert (Col A C C') by (assert_cols;ColR).",
            "VernacExtend",
            "c7d3369d926a8b21166b5f10509cab23b7d9bdf1"
        ],
        [
            "repeat split;Col;Between.",
            "VernacExtend",
            "6e2f777d92e67c19fe247e92aa798a7e2d0941b3"
        ],
        [
            "apply perp_col0 with C A;auto using perp_sym;assert_cols;Col.",
            "VernacExtend",
            "7348c9a5eb8ccd5522c936711830d7662ba89c7a"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "unfold Perp_at.",
            "VernacExtend",
            "c717d8603614b0e532ee4e96382b6cdea99b12cf"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "unfold Perp_at in H2.",
            "VernacExtend",
            "163eea6607e600cc5046541ef3312c1be2b2ef05"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply per_col in H6.",
            "VernacExtend",
            "d90a11edddfcd55f993dbd67bb24d6dad75e7a88"
        ],
        [
            "apply l8_2 in H6.",
            "VernacExtend",
            "7b7f1a7f2751803e5a5aa047f670281748ffd260"
        ],
        [
            "eapply per_col in H6.",
            "VernacExtend",
            "d90a11edddfcd55f993dbd67bb24d6dad75e7a88"
        ],
        [
            "eapply l8_2 in H6.",
            "VernacExtend",
            "525177a1507044828ef9f47320812aea22c28e3b"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assert_cols;ColR.",
            "VernacExtend",
            "dcd52a43783682cf5a688003361ca2c9539a8678"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_21 : forall A B C, A <> B -> exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet C T P.",
            "VernacStartTheoremProof",
            "b237883c837a9e754f07db875a41637dcf097e12"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "assert (exists C', ~ Col A B C').",
            "VernacExtend",
            "5e60754837258670e9555dc9db2f6e62eb10522c"
        ],
        [
            "eapply not_col_exists.",
            "VernacExtend",
            "dcbeb3acfb9da102987cf84bcf2f68731f6823ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_elim H1 C'.",
            "VernacExtend",
            "bc099ff357c57b338ed75fea19147f377a96bb63"
        ],
        [
            "assert ( exists P : Tpoint, (exists T : Tpoint, Perp A B P A /\\ Col A B T /\\ Bet C' T P)).",
            "VernacExtend",
            "ad210cb4439fb8fd6e7db83571b0392969d0c28d"
        ],
        [
            "eapply l8_21_aux.",
            "VernacExtend",
            "f4ef2da19ea080752ae5f8765a5ac781c503a8a3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_elim H1 P.",
            "VernacExtend",
            "98d1509a3d681a1a83561110109540c3aa7fd3c1"
        ],
        [
            "ex_and H3 T.",
            "VernacExtend",
            "e9b4960cf56ec74f3403e01176077468cd739a52"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "eapply l8_21_aux.",
            "VernacExtend",
            "f4ef2da19ea080752ae5f8765a5ac781c503a8a3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_cong : forall A B P R X , A <> B -> A <> P -> Per B A P -> Per A B R -> Cong A P B R -> Col A B X -> Bet P X R -> Cong A R P B.",
            "VernacStartTheoremProof",
            "11613eedddf3465c55d4cb38dd52c8d5c24a7a16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Per P A B).",
            "VernacExtend",
            "fc72182aeed47b9f5833deda8b7651726bc76df3"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "double B R Q.",
            "VernacExtend",
            "7744c9a2b85508eb128468e6e57e1360e5c68a95"
        ],
        [
            "assert (B <> R).",
            "VernacExtend",
            "d080aae81f744e330a70a14046d64a173dd34205"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "apply cong_identity in H3.",
            "VernacExtend",
            "66e848f8fbf6e4694366f8121b8567650ff35782"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Per A B Q).",
            "VernacExtend",
            "d9050076351134f4a0944e3807f40fd49cdf73d6"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per P A X).",
            "VernacExtend",
            "317f8f019304fbc08b712bd2f28e5f00e8e0f7be"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B <> Q).",
            "VernacExtend",
            "f2d0296ec739e4ffa59c72cec7847db94d0d0d41"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply l7_3 in H7.",
            "VernacExtend",
            "31ca3d641cd2f7965bbc4ae295b9d4bbd708aeb5"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Per R B X).",
            "VernacExtend",
            "bb4835fac1d531e7e2eef9cc0917c2404c0598a3"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (X <> A).",
            "VernacExtend",
            "5d29e78a8b816f035da4d622be8aaae272844036"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert (~Col P A R).",
            "VernacExtend",
            "8c1e50bf62ba20f0bd04bf1bbe4fffae7b53206f"
        ],
        [
            "eapply per_not_colp.",
            "VernacExtend",
            "040df811fb9bafc9922b4f807c7a4bb6e5547787"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "double P A P'.",
            "VernacExtend",
            "5ddb93559f2fa0e179e97630b1c30cabfca7ae9a"
        ],
        [
            "prolong P' X R' X R.",
            "VernacExtend",
            "04015e5bdf54f6109a70f369d05c00f77d8aa4a8"
        ],
        [
            "assert (exists M, Midpoint M R R').",
            "VernacExtend",
            "c67c1c9b0bdb2185b09ce95b5a8a7e661506928b"
        ],
        [
            "eapply l7_25.",
            "VernacExtend",
            "7bbb896d42e104b07bab881e2b3d1c19d20857db"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "ex_elim H17 M.",
            "VernacExtend",
            "589eb307547c31d260f51a6e43fad42efa61e1a3"
        ],
        [
            "assert (Per X M R).",
            "VernacExtend",
            "4ec6534c9d05f648ac70201ff335a5f4680a3eee"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists R'.",
            "VernacExtend",
            "cf72ee6a6a0197c19324494c7e2589f9e89b5a04"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong X P X P').",
            "VernacExtend",
            "f49fd9e6384f73c2efe62b6f32532f0cd5fceea2"
        ],
        [
            "apply l8_2 in H10.",
            "VernacExtend",
            "93d2c261a91b70634084adf80a6ce8d8a8f72b9b"
        ],
        [
            "unfold Per in H10.",
            "VernacExtend",
            "14af4ccb3d20c166175e9027fdbe7df7c18e7c5a"
        ],
        [
            "ex_and H10 P''.",
            "VernacExtend",
            "7d10efa6708f036326295f0598a74bc6efa1fa4a"
        ],
        [
            "assert (P'=P'').",
            "VernacExtend",
            "21f6878ff8744369247d1f8cfe8a7127c3db0833"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "subst P''.",
            "VernacExtend",
            "9636429ea4d156e57c617301d8846690e4d95a19"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (X <> P').",
            "VernacExtend",
            "21afb960f8e715f5cf8f0f4832d882e39f3986ca"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply cong_identity in H19.",
            "VernacExtend",
            "3b045164707082ebda34d405dadd3bfe89ec4cfc"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply l7_3 in H14.",
            "VernacExtend",
            "52ccc52e7d2f025b1b8e04a8ae0bd223b8df6167"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (P <> P').",
            "VernacExtend",
            "f96e6df5c95c0715817ec5043d86a714aa677108"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "eapply l7_3 in H14.",
            "VernacExtend",
            "f57691c7072d88394f0dae0fe7f5cdab684045d0"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(~Col X P P').",
            "VernacExtend",
            "bcbec5e139f8061c9cbd9f385d43c5b2e78bb377"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col X P A).",
            "VernacExtend",
            "b53c8c68fef16120a2dba7b16b19a7b74e19334b"
        ],
        [
            "eapply col3.",
            "VernacExtend",
            "868bf06b19fdafb8a75ff441bfee26070ac4b11f"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1 in H23.",
            "VernacExtend",
            "d96de4611a55e403947a3a607ffb0169a8b15553"
        ],
        [
            "assert (P = A \\/ X = A).",
            "VernacExtend",
            "4719b5ae7ecb1a3b5c7c9b3a712d00bd603dbfa2"
        ],
        [
            "eapply l8_9.",
            "VernacExtend",
            "24967c362c17226df46af018f1841327edbcedb3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H24.",
            "VernacExtend",
            "4b53c0e981df91ae7f029ab819891ce11adbc255"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet A X M).",
            "VernacExtend",
            "4112cd219926c2cc1885fa0c698e073122b4dada"
        ],
        [
            "eapply l7_22.",
            "VernacExtend",
            "0c5c17e985fccf5ecab92ee37be37b6c66de059f"
        ],
        [
            "5:apply H14.",
            "VernacExtend",
            "c11edff9a8d49eeb013284e57945b8ed8e0dc934"
        ],
        [
            "5:apply H18.",
            "VernacExtend",
            "a64c8d3f3c9e06f91f7d816d122fd77dd1b7c0e6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (X <> R).",
            "VernacExtend",
            "329c03418aac44dc344cf29113bcbce7927f0a7c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply l8_8 in H12.",
            "VernacExtend",
            "5ee4529c5caf78b0e336ff31bfd144d2cd92a965"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (X <> R').",
            "VernacExtend",
            "53606d038566fa22bc6a558c51369107414484cc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "apply cong_symmetry in H16.",
            "VernacExtend",
            "f771f3f5855bc7c2d5817345ba280e245899b7c8"
        ],
        [
            "apply cong_identity in H16.",
            "VernacExtend",
            "acefc3f58cb7b6c5e94939de41c51d2f2c280744"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (M <> X).",
            "VernacExtend",
            "82d76d8ac86685c71860d6ac5f28f6c0a32b7f9f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (M = B).",
            "VernacExtend",
            "b0c7cc0f0df5baf953b3372c88b6affdf648ca03"
        ],
        [
            "eapply (l8_18_uniqueness A X R).",
            "VernacExtend",
            "1a92c6698aada0cd0c3dd6c6b48e70c5fbe3a284"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A B R).",
            "VernacExtend",
            "0297d4ff59f71a3e210662ae50b5d06f24636c8d"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H28.",
            "VernacExtend",
            "6b8732fef2923d01547eff572e1cbd48552d1a2b"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply per_not_col.",
            "VernacExtend",
            "b9b137b045f9958c97d3338071723a4e5e83bad3"
        ],
        [
            "apply H; apply H12.",
            "VernacExtend",
            "290803dd397b080bf9d3fd277d1cb46d0991adcc"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption; eapply col_transitivity_1.",
            "VernacExtend",
            "da38076ef41480e331f30df252c691e7cb6c009b"
        ],
        [
            "apply per_perp in H17.",
            "VernacExtend",
            "35c4e8e9106e15ba8bb1df69953078ba79eb82f1"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply (symmetric_point_uniqueness R R R R') in H18.",
            "VernacExtend",
            "9389b620e8030577db6eaadf7c4a62248592bf00"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_3_2.",
            "VernacExtend",
            "bddefec11bd10daad3f3094d74435628fb6829cb"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply per_perp in H10.",
            "VernacExtend",
            "f56104359b7eb3974daea1fc7641258f9bb5d9ac"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "apply per_perp in H2.",
            "VernacExtend",
            "a9bba1a9b26edff90156af895b6690f489943621"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "assert(OFSC P X R P' P' X R' P).",
            "VernacExtend",
            "390559c6cff2c77266c59fdfd7247ae81d6b16a5"
        ],
        [
            "unfold OFSC.",
            "VernacExtend",
            "492752124a3e0e575422433695b3cbf9807f06bc"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong R P' R' P).",
            "VernacExtend",
            "a730d5ee229879d247df85515b4a8d57fcb9cedd"
        ],
        [
            "eapply five_segment_with_def.",
            "VernacExtend",
            "ae363f51f3370e7c192354099ac43ac5f16e52c8"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert (IFSC P' A P R R' B R P).",
            "VernacExtend",
            "2b6ff96fa3885c4fbfcd7467cd0aa6faf3d3024b"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply midpoint_cong.",
            "VernacExtend",
            "d6ff577dd7ddf3a8aebd1a32b23873a0cd326c9f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "eapply cong_right_commutativity.",
            "VernacExtend",
            "c59e4f320f69dee8565c6a40af0c72bc669a85fd"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "eapply H29.",
            "VernacExtend",
            "68f71f4abc9cdade1c35ec183ec264b26f49da83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_cong : forall A B P R X, A <> B -> A <> P -> Perp A B P A -> Perp A B R B -> Cong A P B R -> Col A B X -> Bet P X R -> Cong A R P B.",
            "VernacStartTheoremProof",
            "4a24e871055dba90d5df71a041d95c3185f8ae24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (per_cong A B P R X).",
            "VernacExtend",
            "10856774d27246ce0e89e067e0f65ab49eef89ce"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_per_1.",
            "VernacExtend",
            "d5ead9bbd3c9c1e70f8abd2e88ebba4abd8a16a5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply perp_per_1.",
            "VernacExtend",
            "e31ac581a6ee373cabda5caca97ab560ef085c87"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_left_comm;auto.",
            "VernacExtend",
            "68a2d553d68e24535abacc319f346ad10894bfe1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_exists : forall O A B, A <> B -> exists X, Perp O X A B.",
            "VernacStartTheoremProof",
            "fcc68528f8d48322a69b95fc424bd4041805e01f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(col_dec A B O).",
            "VernacExtend",
            "cb75c075a32a611675161354303c0eeaac4c7e33"
        ],
        [
            "destruct (diff_col_ex3 A B O H0) as [C].",
            "VernacExtend",
            "653879181bfc5070fb9e53b8593d5e680fb737a1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct (l8_21 O C O H3) as [P [T]].",
            "VernacExtend",
            "5ae3bd19bac5bf429cbf1de4894faf487613b85e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply (perp_col2 O C); ColR.",
            "VernacExtend",
            "e9dab0cbb599ef0fcae8688297cb38f70465674e"
        ],
        [
            "destruct (l8_18_existence A B O H0) as [X []].",
            "VernacExtend",
            "e4d75e2f79975cf89b3af76cbfe67e0cfb8655b8"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_vector : forall A B, A <> B -> (exists X, exists Y, Perp A B X Y).",
            "VernacStartTheoremProof",
            "bd4f1e5d025809a0d21a09dd13b8a0ffb040fde6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "destruct (perp_exists A A B) as [Y]; auto.",
            "VernacExtend",
            "21fb2c8c4c4f56ffffb7dd932a76f5f9691c428e"
        ],
        [
            "exists Y; Perp.",
            "VernacExtend",
            "a9ca7c05cd174df6770b69df275411d19ebdee1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_existence_aux : forall A B P Q T, A<>B -> Perp A B Q B -> Perp A B P A -> Col A B T -> Bet Q T P -> Le A P B Q -> exists X : Tpoint, Midpoint X A B.",
            "VernacStartTheoremProof",
            "fbc763180e8a2feecf06d417ba62b9e6d7f860aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Le in H4.",
            "VernacExtend",
            "b62a75bc311c2f9402f9304687b973c2d3b59af5"
        ],
        [
            "ex_and H4 R.",
            "VernacExtend",
            "3b3c803c8c2b431fb1955e77a7da426d265aa892"
        ],
        [
            "assert (exists X, Bet T X B /\\ Bet R X P).",
            "VernacExtend",
            "8371f55b4a1255f78dfe485ec96a4ff6cd88bc21"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H6 X.",
            "VernacExtend",
            "25fcabcd0369758b80fd495d8727c671ece6986c"
        ],
        [
            "assert (Col A B X).",
            "VernacExtend",
            "c73d4cb26e26a1cb63eff7d608c9e88fe09fc41f"
        ],
        [
            "induction (eq_dec_points T B).",
            "VernacExtend",
            "ffbcc101b8be52c0192cfe494744b026caed936b"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply between_identity in H6.",
            "VernacExtend",
            "b5e0f582671432b96e53e2e25a1a24edfc555d64"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert_cols;ColR.",
            "VernacExtend",
            "dcd52a43783682cf5a688003361ca2c9539a8678"
        ],
        [
            "induction(col_dec A B P).",
            "VernacExtend",
            "6b370160a72bfe5db1d3f73b714749c4af60facd"
        ],
        [
            "assert (B=A \\/ P=A).",
            "VernacExtend",
            "402be8e5d1258cc04cb6aeafdca37c685c270be6"
        ],
        [
            "eapply l8_9.",
            "VernacExtend",
            "24967c362c17226df46af018f1841327edbcedb3"
        ],
        [
            "apply perp_per_1.",
            "VernacExtend",
            "d5ead9bbd3c9c1e70f8abd2e88ebba4abd8a16a5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "eapply l7_3_2.",
            "VernacExtend",
            "bddefec11bd10daad3f3094d74435628fb6829cb"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply perp_distinct in H1.",
            "VernacExtend",
            "a79de17175c5f991bd21b13837d817ffd943fdf4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (B <> R).",
            "VernacExtend",
            "d080aae81f744e330a70a14046d64a173dd34205"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assert (~Col A B Q).",
            "VernacExtend",
            "a7b586afcbc3a572000929aee908b9c94d9b6e3f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (A=B \\/ Q=B).",
            "VernacExtend",
            "b7815e173305efea7696281777293bd41830c868"
        ],
        [
            "eapply l8_9.",
            "VernacExtend",
            "24967c362c17226df46af018f1841327edbcedb3"
        ],
        [
            "apply perp_per_2.",
            "VernacExtend",
            "60947696109c1cef08e186fd3eaddec21a6fbf31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (~Col A B R).",
            "VernacExtend",
            "e6efec84c653eebdf0edca4170f3b142a2be7ea4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A Q).",
            "VernacExtend",
            "0a64c21dcfa0fe88ed3741c3f9197ef4b91231d3"
        ],
        [
            "assert_cols;ColR.",
            "VernacExtend",
            "dcd52a43783682cf5a688003361ca2c9539a8678"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "show_distinct P R.",
            "VernacExtend",
            "9d316cfe8d1a18de96ef415dae5e23d52025cc58"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "induction (eq_dec_points A P).",
            "VernacExtend",
            "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply perp_distinct in H1.",
            "VernacExtend",
            "a79de17175c5f991bd21b13837d817ffd943fdf4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Perp A B R B).",
            "VernacExtend",
            "8090c0cb6e2bc2f96e85cef20e3515c84ed2a463"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert_cols;Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply between_symmetry in H7.",
            "VernacExtend",
            "6a73f9f2ecfe1696c142579e1e7346f65147ff9b"
        ],
        [
            "assert (Cong A R P B).",
            "VernacExtend",
            "73b73f75e6051fb40a0d1d69e6a39d5015feea9a"
        ],
        [
            "apply (perp_cong A B P R X); assumption.",
            "VernacExtend",
            "1a816da250fb6461a6fe1be7cd1d4f630b40daa6"
        ],
        [
            "assert (Midpoint X A B /\\ Midpoint X P R).",
            "VernacExtend",
            "f7d49478660c68c34641973614dbb19c50ba6cd1"
        ],
        [
            "apply (l7_21 A P B R X);finish.",
            "VernacExtend",
            "c0217018d5da9b020c1e472fe046c5873370b97e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_existence : forall A B, exists X, Midpoint X A B.",
            "VernacStartTheoremProof",
            "b74741e9cd936db9fcf26eac6840ea04a04cf85e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "apply l7_3_2.",
            "VernacExtend",
            "5641bc5af04a7d045c3262eb7834ebac786414e2"
        ],
        [
            "cut(exists Q, Perp A B B Q).",
            "VernacExtend",
            "b312e66deef681a4c2a71ce7e8fabf0da0a14dbd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "ex_elim H0 Q.",
            "VernacExtend",
            "d7a78045edf4c273bfe43f82c1fb7e9e7975cddc"
        ],
        [
            "cut(exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet Q T P).",
            "VernacExtend",
            "42fc445e8ee26900caf8c988dd528ccb538eb8c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_elim H0 P.",
            "VernacExtend",
            "7fceca958eeb881ed4229f36e22b764e13d51cbe"
        ],
        [
            "ex_and H2 T.",
            "VernacExtend",
            "1851eeb922f2b9c6bab14d25a6a6e51037064cc7"
        ],
        [
            "assert (Le A P B Q \\/ Le B Q A P) by (apply le_cases).",
            "VernacExtend",
            "e7ddf15c036432aec0e662c96366d6fec538ccb3"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "apply midpoint_existence_aux with P Q T;finish;Perp.",
            "VernacExtend",
            "a0d0b0d2a598740e3c702354679c07086a6a03ea"
        ],
        [
            "assert (exists X : Tpoint, Midpoint X B A) by (apply (midpoint_existence_aux B A Q P T);finish;Perp;Between).",
            "VernacExtend",
            "b5988a3a9a48ce7fc7404a7f5fed625742f4a180"
        ],
        [
            "ex_elim H5 X.",
            "VernacExtend",
            "707d95c1fe02f778a17543f81e89ccd7643e65a0"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "apply l8_21;assumption.",
            "VernacExtend",
            "47d25a2739ac70791da637dd3f5600638f59941c"
        ],
        [
            "assert (exists P : Tpoint, (exists T : Tpoint, Perp B A P B /\\ Col B A T /\\ Bet A T P)) by (apply (l8_21 B A);auto).",
            "VernacExtend",
            "d1b35f803fe8bc47cf7c9c03ab66f403dd618e92"
        ],
        [
            "ex_elim H0 P.",
            "VernacExtend",
            "7fceca958eeb881ed4229f36e22b764e13d51cbe"
        ],
        [
            "ex_elim H1 T.",
            "VernacExtend",
            "a8064336da8be0a88fa88bfea22d77fc49a20972"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_id : forall A B C X, Perp_at X A B C A -> X = A.",
            "VernacStartTheoremProof",
            "7aa8fbbc0b519c319de5c13644120270cd0d2258"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Perp A B C A).",
            "VernacExtend",
            "cb9d426a7201df578deec262063d3cc60cffbf79"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (A <> B /\\ C <> A).",
            "VernacExtend",
            "c4700e6e7809f2a54919329e968d862b00b9cc5b"
        ],
        [
            "apply perp_distinct.",
            "VernacExtend",
            "3cfc6cd7c9dce448a2a54a0aea9698f8194fd378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (HH:=H0).",
            "VernacExtend",
            "bf875902a496ade0bcfcb6336d4c6dc942dce0f8"
        ],
        [
            "apply perp_perp_in in HH.",
            "VernacExtend",
            "dece997d5bac1113ebc3c7090d95f6ccc5faed81"
        ],
        [
            "assert (l8_16_1:=l8_16_1 A B C B A).",
            "VernacExtend",
            "4e1d331e2db0507136159bc6004621e64e78de40"
        ],
        [
            "assert (~Col A B C /\\ Per C A B).",
            "VernacExtend",
            "f278c7a95049e19571d71f7f04de7d86bfa0660f"
        ],
        [
            "apply l8_16_1;Col.",
            "VernacExtend",
            "b25fba6c59aa7ec36f1b84f93600461424142e14"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Perp_at in H.",
            "VernacExtend",
            "b000e34b756b9c91df4f72f9c970da5204109645"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l8_18_uniqueness with A B C;finish.",
            "VernacExtend",
            "78c1f4fb999409dec2a770629ffb70c2c8f24989"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col with A;finish.",
            "VernacExtend",
            "4a8bac98c782ab16cd5958a62c54a2e7bbd765bd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_22 : forall A B P R X , A <> B -> A <> P -> Per B A P -> Per A B R -> Cong A P B R -> Col A B X -> Bet P X R -> Cong A R P B /\\ Midpoint X A B /\\ Midpoint X P R.",
            "VernacStartTheoremProof",
            "f651a17d25027336a0406b753410a25bea0b5f07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong A R P B).",
            "VernacExtend",
            "73b73f75e6051fb40a0d1d69e6a39d5015feea9a"
        ],
        [
            "apply (per_cong A B P R X); assumption.",
            "VernacExtend",
            "6456d6f91edf914595cdf81d398e380cd6061040"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (~ Col B A P).",
            "VernacExtend",
            "c369e16bc2bc66e5544ee1662f0e10feefb1d105"
        ],
        [
            "eapply per_not_col.",
            "VernacExtend",
            "b9b137b045f9958c97d3338071723a4e5e83bad3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_all_diffs_by_contradiction.",
            "VernacExtend",
            "828df9d95ed8845abc382faae4d2c3b6486ff885"
        ],
        [
            "apply l7_21;finish.",
            "VernacExtend",
            "df6cf5de39a6452994a39f19751e5dee979875e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_22_bis : forall A B P R X, A <> B -> A <> P -> Perp A B P A -> Perp A B R B -> Cong A P B R -> Col A B X -> Bet P X R -> Cong A R P B /\\ Midpoint X A B /\\ Midpoint X P R.",
            "VernacStartTheoremProof",
            "d6fe5f1427c112e1513750c0b36e41bab1f117fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l8_22;finish.",
            "VernacExtend",
            "2adcd940a838a471c1139782aa6ba6f78a245b90"
        ],
        [
            "apply perp_per_1;finish.",
            "VernacExtend",
            "144b3b430113daa2c7291d8c9f1bfb51e8917b13"
        ],
        [
            "apply perp_per_1;finish;Perp.",
            "VernacExtend",
            "9e577ea52909784877a1b37b936accd26c5b3ce3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_perp : forall A B C D X, Perp_at X A B C D -> Perp A B C D.",
            "VernacStartTheoremProof",
            "81d66334a2ed1173051d15051883bfc2125ce9dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp.",
            "VernacExtend",
            "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T8_4.",
            "VernacEndSegment",
            "47c40d8382d8a3e3df77f5e6e9e1c9b8c6f2b938"
        ],
        [
            "Hint Resolve perp_per_1 perp_per_2 perp_col perp_perp_in perp_in_perp : perp.",
            "VernacHints",
            "7ed27049904d1a9e43c90d183e49bb1d0386474e"
        ],
        [
            "Section T8_5.",
            "VernacBeginSection",
            "0339a360ce7cc366d52b6ca119c8673984a2ca7d"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma perp_proj : forall A B C D, Perp A B C D -> ~Col A C D -> exists X, Col A B X /\\ Perp A X C D.",
            "VernacStartTheoremProof",
            "7fc9771b67744391d726c4e0f2b4d67885638d57"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp in H.",
            "VernacExtend",
            "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_in_perp in H1.",
            "VernacExtend",
            "ff806c83b168e604dc2a5779abe3baf80b4c0621"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_24 : forall A B P Q R T, Perp P A A B -> Perp Q B A B -> Col A B T -> Bet P T Q -> Bet B R Q -> Cong A P B R -> exists X, Midpoint X A B /\\ Midpoint X P R.",
            "VernacStartTheoremProof",
            "41fc12f465c1aec94b090334555b862cdd91df41"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Le in H4.",
            "VernacExtend",
            "b62a75bc311c2f9402f9304687b973c2d3b59af5"
        ],
        [
            "assert (exists X, Bet T X B /\\ Bet R X P).",
            "VernacExtend",
            "8371f55b4a1255f78dfe485ec96a4ff6cd88bc21"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 X.",
            "VernacExtend",
            "ca2ea52a9ad948e2b54c82d2f2e94e2f61de9ad6"
        ],
        [
            "assert (Col A B X).",
            "VernacExtend",
            "c73d4cb26e26a1cb63eff7d608c9e88fe09fc41f"
        ],
        [
            "induction (eq_dec_points T B).",
            "VernacExtend",
            "ffbcc101b8be52c0192cfe494744b026caed936b"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply between_identity in H5.",
            "VernacExtend",
            "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert (Col T X B).",
            "VernacExtend",
            "fc763d1913482fdc376f129623c3d5b0648d5404"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "apply perp_distinct in H.",
            "VernacExtend",
            "519d68c45c659aa92307200baa57b696f1737097"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (A <> P).",
            "VernacExtend",
            "54e4b3d95c075e4dfe29b0b29b203e1a05e747fb"
        ],
        [
            "apply perp_distinct in H.",
            "VernacExtend",
            "519d68c45c659aa92307200baa57b696f1737097"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction(col_dec A B P).",
            "VernacExtend",
            "6b370160a72bfe5db1d3f73b714749c4af60facd"
        ],
        [
            "assert (B=A \\/ P=A).",
            "VernacExtend",
            "402be8e5d1258cc04cb6aeafdca37c685c270be6"
        ],
        [
            "eapply l8_9.",
            "VernacExtend",
            "24967c362c17226df46af018f1841327edbcedb3"
        ],
        [
            "apply perp_per_1.",
            "VernacExtend",
            "d5ead9bbd3c9c1e70f8abd2e88ebba4abd8a16a5"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (B <> R).",
            "VernacExtend",
            "d080aae81f744e330a70a14046d64a173dd34205"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Q <> B).",
            "VernacExtend",
            "84028989518831b4ec47fd707ef42da261e6d7d2"
        ],
        [
            "apply perp_distinct in H0.",
            "VernacExtend",
            "58da85bd9ae61cb31c39af8552c45789b21d3382"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (~Col A B Q).",
            "VernacExtend",
            "a7b586afcbc3a572000929aee908b9c94d9b6e3f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (A=B \\/ Q=B).",
            "VernacExtend",
            "b7815e173305efea7696281777293bd41830c868"
        ],
        [
            "eapply l8_9.",
            "VernacExtend",
            "24967c362c17226df46af018f1841327edbcedb3"
        ],
        [
            "apply perp_per_2.",
            "VernacExtend",
            "60947696109c1cef08e186fd3eaddec21a6fbf31"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H14.",
            "VernacExtend",
            "f5a05fe2485bcd9a092ccb06894396aa5209d505"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (~Col A B R).",
            "VernacExtend",
            "e6efec84c653eebdf0edca4170f3b142a2be7ea4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col B A Q).",
            "VernacExtend",
            "0a64c21dcfa0fe88ed3741c3f9197ef4b91231d3"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (P <> R).",
            "VernacExtend",
            "3e3c5f2cd81f8462873234d377df3ba3b310ded9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "apply between_identity in H6.",
            "VernacExtend",
            "b5e0f582671432b96e53e2e25a1a24edfc555d64"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction (eq_dec_points A P).",
            "VernacExtend",
            "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply perp_distinct in H.",
            "VernacExtend",
            "519d68c45c659aa92307200baa57b696f1737097"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Perp A B R B).",
            "VernacExtend",
            "8090c0cb6e2bc2f96e85cef20e3515c84ed2a463"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert (Cong A R P B).",
            "VernacExtend",
            "73b73f75e6051fb40a0d1d69e6a39d5015feea9a"
        ],
        [
            "apply (perp_cong A B P R X).",
            "VernacExtend",
            "e1960cc32e9422534ac61ace2fd242879a064df5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Midpoint X A B /\\ Midpoint X P R).",
            "VernacExtend",
            "f7d49478660c68c34641973614dbb19c50ba6cd1"
        ],
        [
            "apply (l7_21 A P B R X).",
            "VernacExtend",
            "267850dc061845f288cfcf00acad7c5e3f93eace"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_per2__per : forall A B C P X, A <> B -> Col A B C -> Per A X P -> Per B X P -> Per C X P.",
            "VernacStartTheoremProof",
            "cf70062795a0449c93d4ccb4902e971c0a55e272"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (symmetric_point_construction P X) as [Q].",
            "VernacExtend",
            "a1e4fb680506b24ab4404d2207be2c6fe2b62840"
        ],
        [
            "exists Q; split.",
            "VernacExtend",
            "218bf4c78ebf958172a9fa4b65363a17e09b8d20"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (l4_17 A B); try apply per_double_cong with X; assumption.",
            "VernacExtend",
            "0b6b60a086fee262967af9120003715191e305a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_per_1 : forall A B C D X, Perp_at X A B C D -> Per A X C.",
            "VernacStartTheoremProof",
            "0cbb2f0f5da62d6c337f6bc99cd31f4d73e0d9bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "apply H5; Col.",
            "VernacExtend",
            "e118bc03f1742b090414a771fbc3e37f628c4537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_per_2 : forall A B C D X, Perp_at X A B C D -> Per A X D.",
            "VernacStartTheoremProof",
            "2ba2cff26d600c208c1fd3d03a1a21d27f1667eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "apply H5; Col.",
            "VernacExtend",
            "e118bc03f1742b090414a771fbc3e37f628c4537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_per_3 : forall A B C D X, Perp_at X A B C D -> Per B X C.",
            "VernacStartTheoremProof",
            "7e7dc04b77425b86b322b28e165f46207887c999"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "apply H5; Col.",
            "VernacExtend",
            "e118bc03f1742b090414a771fbc3e37f628c4537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp_in_per_4 : forall A B C D X, Perp_at X A B C D -> Per B X D.",
            "VernacStartTheoremProof",
            "918265ec61b77be1f1dd05fcc24341d3128c1001"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Perp_at in *.",
            "VernacExtend",
            "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "apply H5; Col.",
            "VernacExtend",
            "e118bc03f1742b090414a771fbc3e37f628c4537"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T8_5.",
            "VernacEndSegment",
            "f06671223ed6b09a60bd0e3a15f752346497197e"
        ],
        [
            "Hint Resolve perp_in_per_1 perp_in_per_2 perp_in_per_3 perp_in_per_4 : perp.",
            "VernacHints",
            "abc6d3b74844b95bec606106a1b563c3da5fe945"
        ],
        [
            "Ltac midpoint M A B := let T:= fresh in assert (T:= midpoint_existence A B); ex_and T M.",
            "VernacExtend",
            "e8bbeb1350a512ffe73ebeadfc401ac5824a0068"
        ],
        [
            "Tactic Notation \"Name\" ident(M) \"the\" \"midpoint\" \"of\" ident(A) \"and\" ident(B) := midpoint M A B.",
            "VernacExtend",
            "66dd154e703bf3e35c9b6321081598d3fc917ffe"
        ]
    ],
    "proofs": [
        {
            "name": "per_dec",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "elim (symmetric_point_construction C B);intros C' HC'.",
                        "VernacExtend",
                        "0e977b0cb13f64b223567244b6c361eb14cfb2fb"
                    ]
                },
                {
                    "command": [
                        "elim (cong_dec A C A C');intro.",
                        "VernacExtend",
                        "d5cd49a2a114febbcc9a56f749a59bc40ea9aec8"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H0;clear H0.",
                        "VernacExtend",
                        "7533f3731c625c8a3fa4edee435a85cf2100bdb9"
                    ]
                },
                {
                    "command": [
                        "assert (C'=x) by (apply symmetric_point_uniqueness with C B;assumption).",
                        "VernacExtend",
                        "74bfcb55376c57733b4ced88a560de9ad5c7fead"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Per_cases",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H;Perp.",
                        "VernacExtend",
                        "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Per_perm",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; Perp.",
                        "VernacExtend",
                        "bc5953d6f0d76d444d426576ad647efe219ea91b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_3",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H C'.",
                        "VernacExtend",
                        "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *;spliter.",
                        "VernacExtend",
                        "94cfb4754c2f0312d41786041551ef933e840506"
                    ]
                },
                {
                    "command": [
                        "eapply l4_17 with A B;finish.",
                        "VernacExtend",
                        "cb9ed9232d33570f17106471d6e439f1b65d8cb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_4",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H B'.",
                        "VernacExtend",
                        "a962e6b9fc39dc63b4599d58ccc49e354dabc4cb"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l7_2.",
                        "VernacExtend",
                        "43229a619938fa96f6132d12b6f260b53b3e4d30"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (B' = C') by (eapply symmetric_point_uniqueness;eauto).",
                        "VernacExtend",
                        "15c2e91acf18a2859203f4d5c295707f503fbbeb"
                    ]
                },
                {
                    "command": [
                        "subst B'.",
                        "VernacExtend",
                        "8cde9e92b7e45a08022881a785185790cfb3adef"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_5",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l7_3_2.",
                        "VernacExtend",
                        "5641bc5af04a7d045c3262eb7834ebac786414e2"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_6",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "unfold Per.",
                        "VernacExtend",
                        "37c5e182af51240a790620af38dd30226754701e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H C'.",
                        "VernacExtend",
                        "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 C''.",
                        "VernacExtend",
                        "71e20c932b4a81053893852c445b04a889758d03"
                    ]
                },
                {
                    "command": [
                        "assert (C'=C'') by (eapply symmetric_point_uniqueness;eauto).",
                        "VernacExtend",
                        "5478c4323e60c54aab74f9d91871d8c5d99ca663"
                    ]
                },
                {
                    "command": [
                        "subst C''.",
                        "VernacExtend",
                        "baf9e25f24f7f72e069af1c7b2831385b5536daa"
                    ]
                },
                {
                    "command": [
                        "assert (C = C') by (eapply l4_19;eauto).",
                        "VernacExtend",
                        "0d4f78379d22eaa3fa51543d85103a54ee07b07a"
                    ]
                },
                {
                    "command": [
                        "subst C'.",
                        "VernacExtend",
                        "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
                    ]
                },
                {
                    "command": [
                        "apply l7_3.",
                        "VernacExtend",
                        "e0ed8044d8d76b674bae6c3d6c16560c62b151be"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_8",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_7 with A.",
                        "VernacExtend",
                        "898c07bed418c7ddbb1b911408fc44a309059dca"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "apply l8_5.",
                        "VernacExtend",
                        "d5060bb18205f3366c51ad83882ac488c08f0296"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per_distinct",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply (l8_8).",
                        "VernacExtend",
                        "cd2d1086c70ba6b773dc8e2e3646742729981115"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per_distinct_1",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym.",
                        "VernacExtend",
                        "313410cb7bcb68dc243125f00e91764f51d94be6"
                    ]
                },
                {
                    "command": [
                        "apply (l8_8).",
                        "VernacExtend",
                        "cd2d1086c70ba6b773dc8e2e3646742729981115"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_col_per_per",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Per U X C) by (apply (l8_3 A X C U);Col).",
                        "VernacExtend",
                        "b39ff261c1907b26b1ca207ce54de9002d0f2e78"
                    ]
                },
                {
                    "command": [
                        "apply l8_2 in H4.",
                        "VernacExtend",
                        "32751faf0d516a9c02c72e28192bbcbede5276ef"
                    ]
                },
                {
                    "command": [
                        "apply l8_2 .",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "apply (l8_3 C X U V);Col.",
                        "VernacExtend",
                        "3432a296d94b03335d3164c4bb818524d947d407"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_dec",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at.",
                        "VernacExtend",
                        "c717d8603614b0e532ee4e96382b6cdea99b12cf"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A B);intro; elim (eq_dec_points C D);intro; elim (col_dec X A B);intro; elim (col_dec X C D);intro; try tauto.",
                        "VernacExtend",
                        "0b11afcb120fd09f35392fff3f1935f72d197207"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points B X);intro; elim (eq_dec_points D X);intro;subst;treat_equalities.",
                        "VernacExtend",
                        "a0cac3600d0bc2b563a05ce06158ab99b73339b4"
                    ]
                },
                {
                    "command": [
                        "elim (per_dec A X C);intro.",
                        "VernacExtend",
                        "310b86d0d769f0e058f84faaeed03e013e32b15c"
                    ]
                },
                {
                    "command": [
                        "left;repeat split;Col;intros; apply col_col_per_per with A C;Col.",
                        "VernacExtend",
                        "044ca65b88875ef215a2c62ace195741a134d521"
                    ]
                },
                {
                    "command": [
                        "right;intro;spliter;apply H3;apply H8;Col.",
                        "VernacExtend",
                        "27d588fce01aab70e6578191b3095d18e88c77b3"
                    ]
                },
                {
                    "command": [
                        "elim (per_dec A X D);intro.",
                        "VernacExtend",
                        "79f90123fca282853e09c86c84a796378e40a216"
                    ]
                },
                {
                    "command": [
                        "left;repeat split;Col;intros; apply col_col_per_per with A D;Col;ColR.",
                        "VernacExtend",
                        "a5cbc865af45aa43b97765838f79e5dc0ea0df46"
                    ]
                },
                {
                    "command": [
                        "right;intro;spliter;apply H3;apply H9;Col.",
                        "VernacExtend",
                        "9ecc2a480d0ca16f766da72dd00c0e452fb2c843"
                    ]
                },
                {
                    "command": [
                        "elim (per_dec B X C);intro.",
                        "VernacExtend",
                        "aa8d5f739bc0d1dee57beb55f2ada4b6c3edc82b"
                    ]
                },
                {
                    "command": [
                        "left;repeat split;Col;intros; apply col_col_per_per with B C;Col;ColR.",
                        "VernacExtend",
                        "0299b87f8c0aaeb70e5df2864a0c41610ae002f9"
                    ]
                },
                {
                    "command": [
                        "right;intro;spliter;apply H4;apply H9;Col.",
                        "VernacExtend",
                        "cad9176ed6b2c702492950d760995b0c8e0a4096"
                    ]
                },
                {
                    "command": [
                        "elim (per_dec B X D);intro.",
                        "VernacExtend",
                        "31d580d8113b39e94199e0d2c1b27593529f04b3"
                    ]
                },
                {
                    "command": [
                        "left;repeat split;Col;intros; apply col_col_per_per with B D;Col;ColR.",
                        "VernacExtend",
                        "d40b0ee3260cbcca98ede559637b36c6a5ea9658"
                    ]
                },
                {
                    "command": [
                        "right;intro;spliter;apply H5;apply H10;Col.",
                        "VernacExtend",
                        "b00e86ac3f426dcd04884a5076e0d0e4e7cc83ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_distinct",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_elim H X.",
                        "VernacExtend",
                        "628e6e5805283f9c580405fc6421d775f66905e5"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H0.",
                        "VernacExtend",
                        "145f6972257cff907e541073b4ed47143def2c6d"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_12",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold Perp_at.",
                        "VernacExtend",
                        "c717d8603614b0e532ee4e96382b6cdea99b12cf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "intros;eapply l8_2;eauto.",
                        "VernacExtend",
                        "eb624fb8aea986dcca5df387c901228a4e22c7a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_14_2_1a",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_distinct",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_14_2_1a in H.",
                        "VernacExtend",
                        "8e290495c6ff64dd7ebf3f9b336d589944de3f25"
                    ]
                },
                {
                    "command": [
                        "apply perp_distinct.",
                        "VernacExtend",
                        "3cfc6cd7c9dce448a2a54a0aea9698f8194fd378"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_14_2_1b",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H.",
                        "VernacExtend",
                        "b000e34b756b9c91df4f72f9c970da5204109645"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply (H5 Y Y) in H1.",
                        "VernacExtend",
                        "c8c48d518a4914f0211a6a1477a870939f1304cf"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, l8_8; assumption.",
                        "VernacExtend",
                        "b5c9248c7361ec90f4a826662011b47563aa7e6c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_14_2_1b_bis",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_and H Y.",
                        "VernacExtend",
                        "3425e8cbbaff15c569c6428409b6d89af1108b21"
                    ]
                },
                {
                    "command": [
                        "assert (Y = X) by (eapply (l8_14_2_1b Y _ _ _ _ X) in H2;assumption).",
                        "VernacExtend",
                        "772e34723c149e88e8bc653c1539aaffdb01d942"
                    ]
                },
                {
                    "command": [
                        "subst Y.",
                        "VernacExtend",
                        "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_14_2_2",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply l8_14_2_1b_bis.",
                        "VernacExtend",
                        "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_and H Y.",
                        "VernacExtend",
                        "3425e8cbbaff15c569c6428409b6d89af1108b21"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H1.",
                        "VernacExtend",
                        "5702c0c19084a73004cfdd0a4782b48c177c339c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Col Y C D) by assumption.",
                        "VernacExtend",
                        "fe744c7a1b076f3b6a4497a1664442eccf293e4b"
                    ]
                },
                {
                    "command": [
                        "apply (H0 Y H2) in H3.",
                        "VernacExtend",
                        "08d7874d15c1746cde0af5c5fe5c09eaa3da2e55"
                    ]
                },
                {
                    "command": [
                        "subst Y.",
                        "VernacExtend",
                        "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_and H Y.",
                        "VernacExtend",
                        "3425e8cbbaff15c569c6428409b6d89af1108b21"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H1.",
                        "VernacExtend",
                        "5702c0c19084a73004cfdd0a4782b48c177c339c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Col Y C D).",
                        "VernacExtend",
                        "e28ad094b5a717f11c63cc5c86eb7bd73cd827dd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (H0 Y H2) in H3.",
                        "VernacExtend",
                        "08d7874d15c1746cde0af5c5fe5c09eaa3da2e55"
                    ]
                },
                {
                    "command": [
                        "subst Y.",
                        "VernacExtend",
                        "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_15_1",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply l8_14_2_1b_bis;Col.",
                        "VernacExtend",
                        "869feab215209097794a341e152f0de10a51ad71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_per",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H.",
                        "VernacExtend",
                        "b000e34b756b9c91df4f72f9c970da5204109645"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H3;Col.",
                        "VernacExtend",
                        "07d0850bd548b476a2c6bbc891669c5ee49e5b8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_sym",
            "line_nb": 456,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H X.",
                        "VernacExtend",
                        "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "apply l8_12.",
                        "VernacExtend",
                        "44aef0b1136e4e7a0298e49b153e02ebacd421a9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per_perp",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply per_perp_in in H1.",
                        "VernacExtend",
                        "ac64be4e7f40d5b69dedd8d19349387d50072200"
                    ]
                },
                {
                    "command": [
                        "eapply l8_14_2_1a with B;assumption.",
                        "VernacExtend",
                        "8a09ce8779900c810f11ef20eb36498e2782821d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_left_comm",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H X.",
                        "VernacExtend",
                        "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_right_comm",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H X.",
                        "VernacExtend",
                        "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_comm",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply perp_left_comm.",
                        "VernacExtend",
                        "efa78a8865c34786daf878cacea01a7abf0ecfe8"
                    ]
                },
                {
                    "command": [
                        "apply perp_right_comm.",
                        "VernacExtend",
                        "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_sym",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "unfold Perp_at.",
                        "VernacExtend",
                        "c717d8603614b0e532ee4e96382b6cdea99b12cf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "apply H3;assumption.",
                        "VernacExtend",
                        "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_left_comm",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "unfold Perp_at.",
                        "VernacExtend",
                        "c717d8603614b0e532ee4e96382b6cdea99b12cf"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_right_comm",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_sym.",
                        "VernacExtend",
                        "24d80e91aafb00ee02dfda8e42383eea93b0e272"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_left_comm.",
                        "VernacExtend",
                        "7afca9b15e69a43380e6144468006b03a868f32c"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_sym.",
                        "VernacExtend",
                        "24d80e91aafb00ee02dfda8e42383eea93b0e272"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_comm",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_left_comm.",
                        "VernacExtend",
                        "7afca9b15e69a43380e6144468006b03a868f32c"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_right_comm.",
                        "VernacExtend",
                        "f708d91949733e6d7c3ff6e044245680b16691de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Perp_cases",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H; Perp.",
                        "VernacExtend",
                        "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Perp_perm",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split; Perp.",
                        "VernacExtend",
                        "2607a7b66258044797f6e969fab05b57e7ac167d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Perp_in_cases",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H; Perp.",
                        "VernacExtend",
                        "d0642ddc4ae650279fcafaab6ae8159cac372a6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Perp_in_perm",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 7 (split; Perp).",
                        "VernacExtend",
                        "31ad82289456bd9cd4dcb059d52f9a5d4c31593f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_col",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "unfold Perp_at.",
                        "VernacExtend",
                        "c717d8603614b0e532ee4e96382b6cdea99b12cf"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_perp_in",
            "line_nb": 596,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_15_1.",
                        "VernacExtend",
                        "43d410a5429b19c8fa5483cdde2a8fa5c0e5a68c"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_and H X.",
                        "VernacExtend",
                        "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H0.",
                        "VernacExtend",
                        "145f6972257cff907e541073b4ed47143def2c6d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_per_1",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp_at A A B C A).",
                        "VernacExtend",
                        "890d29470e2571f5cfe5238e3c83741a3b2c409b"
                    ]
                },
                {
                    "command": [
                        "apply perp_perp_in.",
                        "VernacExtend",
                        "0c9febbe454aee0f549f39d335d2c9638c929291"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H0.",
                        "VernacExtend",
                        "145f6972257cff907e541073b4ed47143def2c6d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_per_2",
            "line_nb": 616,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply perp_right_comm in H.",
                        "VernacExtend",
                        "9af55678888ba10bee27f62b3c6148a8422632f8"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; assumption.",
                        "VernacExtend",
                        "428349b4a0f7e46457675de22ab833eac9eb82b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_col",
            "line_nb": 621,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with A B;finish.",
                        "VernacExtend",
                        "684d9b4ee78c4e7254ba6b8da3173f3f9f26c1b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_col2",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "apply perp_distinct in HH.",
                        "VernacExtend",
                        "c324e89c6024aebca0c891ad27a059df4a6db0a2"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A C).",
                        "VernacExtend",
                        "bda996de19e922f2f3aa46630bed62394edd5e36"
                    ]
                },
                {
                    "command": [
                        "subst A.",
                        "VernacExtend",
                        "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
                    ]
                },
                {
                    "command": [
                        "apply perp_col with B;finish.",
                        "VernacExtend",
                        "24c1cddd3409f53c210c4d40dc508cfcef2b726d"
                    ]
                },
                {
                    "command": [
                        "assert(Perp A C X Y) by (eapply perp_col;eauto).",
                        "VernacExtend",
                        "a78b1428fffead7ba7a46ad35d3f06f2741cf8a4"
                    ]
                },
                {
                    "command": [
                        "eapply perp_col with A;finish.",
                        "VernacExtend",
                        "4a8bac98c782ab16cd5958a62c54a2e7bbd765bd"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_not_eq_1",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp in H.",
                        "VernacExtend",
                        "bf19ed225506e3dbb4ba373839bc3863b7baeeec"
                    ]
                },
                {
                    "command": [
                        "ex_elim H X.",
                        "VernacExtend",
                        "628e6e5805283f9c580405fc6421d775f66905e5"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H0.",
                        "VernacExtend",
                        "145f6972257cff907e541073b4ed47143def2c6d"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per_not_col",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Per in H1.",
                        "VernacExtend",
                        "59cf689935a884fc6e799a1d7b65ce7cf89e9cdd"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 C'.",
                        "VernacExtend",
                        "248e9ea85399d664e369da129ccc15bf10a91d3e"
                    ]
                },
                {
                    "command": [
                        "assert (C = C' \\/ Midpoint A C C').",
                        "VernacExtend",
                        "fd6a8dfc6aa51767348f26ede39bdee1c3db3d6a"
                    ]
                },
                {
                    "command": [
                        "eapply l7_20.",
                        "VernacExtend",
                        "70911807aab4eb241715fb7911ea258aa583b4e2"
                    ]
                },
                {
                    "command": [
                        "assert_cols;ColR.",
                        "VernacExtend",
                        "dcd52a43783682cf5a688003361ca2c9539a8678"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H4;treat_equalities; intuition.",
                        "VernacExtend",
                        "c59a10754401e792dc6b971c610e689ec98a5f5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_not_col",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp_at A A B P A).",
                        "VernacExtend",
                        "e158f6e0b29de6acc116dd6dbf5c41e00673fc11"
                    ]
                },
                {
                    "command": [
                        "apply perp_perp_in.",
                        "VernacExtend",
                        "0c9febbe454aee0f549f39d335d2c9638c929291"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (Per P A B).",
                        "VernacExtend",
                        "fc72182aeed47b9f5833deda8b7651726bc76df3"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_per.",
                        "VernacExtend",
                        "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_sym.",
                        "VernacExtend",
                        "24d80e91aafb00ee02dfda8e42383eea93b0e272"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_left_comm in H0.",
                        "VernacExtend",
                        "49a502923ad93ae92a40d3b88f217afc9436692c"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A P -> ~ Col A B P).",
                        "VernacExtend",
                        "1bcaba66e415d1f04cf4ccea2340711fbb5a7a51"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_4.",
                        "VernacExtend",
                        "54503687d69ef6d95431dca18b161ad914cc94d5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply perp_distinct in H.",
                        "VernacExtend",
                        "519d68c45c659aa92307200baa57b696f1737097"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply per_not_col.",
                        "VernacExtend",
                        "5048534e861bed3c0c140b89a47a72b850eee207"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_per.",
                        "VernacExtend",
                        "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_right_comm.",
                        "VernacExtend",
                        "f708d91949733e6d7c3ff6e044245680b16691de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_col_perp_in",
            "line_nb": 740,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_col2_bis",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "intros A B C D P Q HPerp HCol1 HCol2 HCD.",
                        "VernacExtend",
                        "08ad886bc7fc717a0a8af79f33ef2756ba507449"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "apply perp_col2 with P Q; Perp; ColR.",
                        "VernacExtend",
                        "075d460234d2bcbcda4244732acfd0c6236d0db1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_per_perp",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply per_perp_in in H4.",
                        "VernacExtend",
                        "ae90b4b3ab08d700837cc3e2142a69efd4303357"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_perp_bis in H4.",
                        "VernacExtend",
                        "2dfa3ec26b1aeb5e6ddf30bbc380ee24744741d0"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "apply perp_distinct in H4.",
                        "VernacExtend",
                        "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "absurde.",
                        "VernacExtend",
                        "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
                    ]
                },
                {
                    "command": [
                        "eapply (perp_col _ B).",
                        "VernacExtend",
                        "cc0215390a1cd300f44ba54566baed5f9f9af1a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "apply perp_right_comm.",
                        "VernacExtend",
                        "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_4.",
                        "VernacExtend",
                        "54503687d69ef6d95431dca18b161ad914cc94d5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_perp_or_mid",
            "line_nb": 887,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(col_dec A B X).",
                        "VernacExtend",
                        "39431033d94ce73c69b26e2ec1c1bae626a8da55"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assert(A = B \\/ Midpoint X A B).",
                        "VernacExtend",
                        "33836d493b7071b86bb2f430a5efe93405be938c"
                    ]
                },
                {
                    "command": [
                        "apply l7_20; Col.",
                        "VernacExtend",
                        "5822efe3f85a68cb08cac1123d47951b2a4aa2fa"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "apply (l7_17 A B); auto.",
                        "VernacExtend",
                        "83cac34a661c5beebcbdb7bb44b8bdf812967dd3"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "assert(Col M A B).",
                        "VernacExtend",
                        "549c5462911795ad21cf09bb2c67bdf15831e94a"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "spliter; Col.",
                        "VernacExtend",
                        "06239419a8ae9f5ccd1709f02171cc6a620beb58"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Per X M A) by (unfold Per;exists B;split; Cong).",
                        "VernacExtend",
                        "3c8d9357eccb331387f37556117b5f019a55d3fc"
                    ]
                },
                {
                    "command": [
                        "apply per_perp_in in H4.",
                        "VernacExtend",
                        "ae90b4b3ab08d700837cc3e2142a69efd4303357"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_right_comm in H4.",
                        "VernacExtend",
                        "e7a2999a0fe7214f304d4a42eab12b381daa6c10"
                    ]
                },
                {
                    "command": [
                        "apply(perp_in_col_perp_in X M A M B M); Col.",
                        "VernacExtend",
                        "daabe7201604766acf99e766c3729aa1c573249c"
                    ]
                },
                {
                    "command": [
                        "intro;treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "apply H2; Col.",
                        "VernacExtend",
                        "ad4ebd24361c58efe58cd1e89ddbcff44bba6d59"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_per2_cases",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points B B').",
                        "VernacExtend",
                        "15e17b16f694f7c59832aae6f4f287a6a67cb2f2"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Col C B B').",
                        "VernacExtend",
                        "564f472790aff3b98860f193681106c5c6235332"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "assert(Per A B' B).",
                        "VernacExtend",
                        "80bebd2f9c0758d729054a34969344e31cc70816"
                    ]
                },
                {
                    "command": [
                        "apply(per_col A B' C B H0 H4); Col.",
                        "VernacExtend",
                        "39d2986ceebb0934327ad903cee086514656d3e8"
                    ]
                },
                {
                    "command": [
                        "assert(Per A B B').",
                        "VernacExtend",
                        "5ed66bf3518cc316d069aeaeabb49e0b94f2d11e"
                    ]
                },
                {
                    "command": [
                        "apply(per_col A B C B' H H3); Col.",
                        "VernacExtend",
                        "bd452eebaf65a02e834da00c6cda8415a8bc18f0"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "apply (l8_7 A); auto.",
                        "VernacExtend",
                        "184879627300220c2011623ee6dad7c91950e8b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_16_2",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (C <> X).",
                        "VernacExtend",
                        "e94d4c6695334ec6355186d9706b42c748966f0d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "eapply l8_13_2.",
                        "VernacExtend",
                        "1d862c03ac8e9b4cfa3f02cfa16badb4021d4abf"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "exists U.",
                        "VernacExtend",
                        "5fa927449745739df126de32a00d9a77c57aa9f7"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_18_uniqueness",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "show_distinct A B.",
                        "VernacExtend",
                        "5adab21d06695dd86576309f95a9238554958afd"
                    ]
                },
                {
                    "command": [
                        "solve [intuition].",
                        "VernacExtend",
                        "a44c77fe0ad6731ace858e9158278f1620dc35f8"
                    ]
                },
                {
                    "command": [
                        "assert (Perp_at X A B C X) by (eapply l8_15_1;assumption).",
                        "VernacExtend",
                        "56a770683140d63292aa23e0b83a00487904962a"
                    ]
                },
                {
                    "command": [
                        "assert (Perp_at Y A B C Y) by (eapply l8_15_1;assumption).",
                        "VernacExtend",
                        "5062ffefc44bb6cc643f3d0f54f7eb760eb0bc43"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l8_7 with C;apply l8_2;[apply H14 |apply H10];Col.",
                        "VernacExtend",
                        "0bbd752654fb7f339d2dd7feb4a2da3b5aa4d142"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_distinct",
            "line_nb": 982,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst C'.",
                        "VernacExtend",
                        "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H1.",
                        "VernacExtend",
                        "02391658ec4b0bc896630613ed31279a22db1590"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_21",
            "line_nb": 1433,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(col_dec A B C).",
                        "VernacExtend",
                        "a308b0a7aa87a8d722d63307a143a32131516309"
                    ]
                },
                {
                    "command": [
                        "assert (exists C', ~ Col A B C').",
                        "VernacExtend",
                        "5e60754837258670e9555dc9db2f6e62eb10522c"
                    ]
                },
                {
                    "command": [
                        "eapply not_col_exists.",
                        "VernacExtend",
                        "dcbeb3acfb9da102987cf84bcf2f68731f6823ec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ex_elim H1 C'.",
                        "VernacExtend",
                        "bc099ff357c57b338ed75fea19147f377a96bb63"
                    ]
                },
                {
                    "command": [
                        "assert ( exists P : Tpoint, (exists T : Tpoint, Perp A B P A /\\ Col A B T /\\ Bet C' T P)).",
                        "VernacExtend",
                        "ad210cb4439fb8fd6e7db83571b0392969d0c28d"
                    ]
                },
                {
                    "command": [
                        "eapply l8_21_aux.",
                        "VernacExtend",
                        "f4ef2da19ea080752ae5f8765a5ac781c503a8a3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ex_elim H1 P.",
                        "VernacExtend",
                        "98d1509a3d681a1a83561110109540c3aa7fd3c1"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 T.",
                        "VernacExtend",
                        "e9b4960cf56ec74f3403e01176077468cd739a52"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial2.",
                        "VernacExtend",
                        "09ca3a830f68cf2d030902e5b58c75ccba430b60"
                    ]
                },
                {
                    "command": [
                        "eapply l8_21_aux.",
                        "VernacExtend",
                        "f4ef2da19ea080752ae5f8765a5ac781c503a8a3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_cong",
            "line_nb": 1733,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (per_cong A B P R X).",
                        "VernacExtend",
                        "10856774d27246ce0e89e067e0f65ab49eef89ce"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1.",
                        "VernacExtend",
                        "d5ead9bbd3c9c1e70f8abd2e88ebba4abd8a16a5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "eapply perp_per_1.",
                        "VernacExtend",
                        "e31ac581a6ee373cabda5caca97ab560ef085c87"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply perp_left_comm;auto.",
                        "VernacExtend",
                        "68a2d553d68e24535abacc319f346ad10894bfe1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_exists",
            "line_nb": 1747,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(col_dec A B O).",
                        "VernacExtend",
                        "cb75c075a32a611675161354303c0eeaac4c7e33"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 A B O H0) as [C].",
                        "VernacExtend",
                        "653879181bfc5070fb9e53b8593d5e680fb737a1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_21 O C O H3) as [P [T]].",
                        "VernacExtend",
                        "5ae3bd19bac5bf429cbf1de4894faf487613b85e"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "apply perp_comm.",
                        "VernacExtend",
                        "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "apply (perp_col2 O C); ColR.",
                        "VernacExtend",
                        "e9dab0cbb599ef0fcae8688297cb38f70465674e"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B O H0) as [X []].",
                        "VernacExtend",
                        "e4d75e2f79975cf89b3af76cbfe67e0cfb8655b8"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_vector",
            "line_nb": 1763,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_exists A A B) as [Y]; auto.",
                        "VernacExtend",
                        "21fb2c8c4c4f56ffffb7dd932a76f5f9691c428e"
                    ]
                },
                {
                    "command": [
                        "exists Y; Perp.",
                        "VernacExtend",
                        "a9ca7c05cd174df6770b69df275411d19ebdee1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_existence",
            "line_nb": 1855,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "apply l7_3_2.",
                        "VernacExtend",
                        "5641bc5af04a7d045c3262eb7834ebac786414e2"
                    ]
                },
                {
                    "command": [
                        "cut(exists Q, Perp A B B Q).",
                        "VernacExtend",
                        "b312e66deef681a4c2a71ce7e8fabf0da0a14dbd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "ex_elim H0 Q.",
                        "VernacExtend",
                        "d7a78045edf4c273bfe43f82c1fb7e9e7975cddc"
                    ]
                },
                {
                    "command": [
                        "cut(exists P, exists T, Perp A B P A /\\ Col A B T /\\ Bet Q T P).",
                        "VernacExtend",
                        "42fc445e8ee26900caf8c988dd528ccb538eb8c7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_elim H0 P.",
                        "VernacExtend",
                        "7fceca958eeb881ed4229f36e22b764e13d51cbe"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 T.",
                        "VernacExtend",
                        "1851eeb922f2b9c6bab14d25a6a6e51037064cc7"
                    ]
                },
                {
                    "command": [
                        "assert (Le A P B Q \\/ Le B Q A P) by (apply le_cases).",
                        "VernacExtend",
                        "e7ddf15c036432aec0e662c96366d6fec538ccb3"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_existence_aux with P Q T;finish;Perp.",
                        "VernacExtend",
                        "a0d0b0d2a598740e3c702354679c07086a6a03ea"
                    ]
                },
                {
                    "command": [
                        "assert (exists X : Tpoint, Midpoint X B A) by (apply (midpoint_existence_aux B A Q P T);finish;Perp;Between).",
                        "VernacExtend",
                        "b5988a3a9a48ce7fc7404a7f5fed625742f4a180"
                    ]
                },
                {
                    "command": [
                        "ex_elim H5 X.",
                        "VernacExtend",
                        "707d95c1fe02f778a17543f81e89ccd7643e65a0"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "finish.",
                        "VernacExtend",
                        "0eb65e2600b0e543719211fd4fd520bb87987cf1"
                    ]
                },
                {
                    "command": [
                        "apply l8_21;assumption.",
                        "VernacExtend",
                        "47d25a2739ac70791da637dd3f5600638f59941c"
                    ]
                },
                {
                    "command": [
                        "assert (exists P : Tpoint, (exists T : Tpoint, Perp B A P B /\\ Col B A T /\\ Bet A T P)) by (apply (l8_21 B A);auto).",
                        "VernacExtend",
                        "d1b35f803fe8bc47cf7c9c03ab66f403dd618e92"
                    ]
                },
                {
                    "command": [
                        "ex_elim H0 P.",
                        "VernacExtend",
                        "7fceca958eeb881ed4229f36e22b764e13d51cbe"
                    ]
                },
                {
                    "command": [
                        "ex_elim H1 T.",
                        "VernacExtend",
                        "a8064336da8be0a88fa88bfea22d77fc49a20972"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_id",
            "line_nb": 1883,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Perp A B C A).",
                        "VernacExtend",
                        "cb9d426a7201df578deec262063d3cc60cffbf79"
                    ]
                },
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (A <> B /\\ C <> A).",
                        "VernacExtend",
                        "c4700e6e7809f2a54919329e968d862b00b9cc5b"
                    ]
                },
                {
                    "command": [
                        "apply perp_distinct.",
                        "VernacExtend",
                        "3cfc6cd7c9dce448a2a54a0aea9698f8194fd378"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (HH:=H0).",
                        "VernacExtend",
                        "bf875902a496ade0bcfcb6336d4c6dc942dce0f8"
                    ]
                },
                {
                    "command": [
                        "apply perp_perp_in in HH.",
                        "VernacExtend",
                        "dece997d5bac1113ebc3c7090d95f6ccc5faed81"
                    ]
                },
                {
                    "command": [
                        "assert (l8_16_1:=l8_16_1 A B C B A).",
                        "VernacExtend",
                        "4e1d331e2db0507136159bc6004621e64e78de40"
                    ]
                },
                {
                    "command": [
                        "assert (~Col A B C /\\ Per C A B).",
                        "VernacExtend",
                        "f278c7a95049e19571d71f7f04de7d86bfa0660f"
                    ]
                },
                {
                    "command": [
                        "apply l8_16_1;Col.",
                        "VernacExtend",
                        "b25fba6c59aa7ec36f1b84f93600461424142e14"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in H.",
                        "VernacExtend",
                        "b000e34b756b9c91df4f72f9c970da5204109645"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "eapply l8_18_uniqueness with A B C;finish.",
                        "VernacExtend",
                        "78c1f4fb999409dec2a770629ffb70c2c8f24989"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym.",
                        "VernacExtend",
                        "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
                    ]
                },
                {
                    "command": [
                        "eapply perp_col with A;finish.",
                        "VernacExtend",
                        "4a8bac98c782ab16cd5958a62c54a2e7bbd765bd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_22",
            "line_nb": 1908,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A R P B).",
                        "VernacExtend",
                        "73b73f75e6051fb40a0d1d69e6a39d5015feea9a"
                    ]
                },
                {
                    "command": [
                        "apply (per_cong A B P R X); assumption.",
                        "VernacExtend",
                        "6456d6f91edf914595cdf81d398e380cd6061040"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B A P).",
                        "VernacExtend",
                        "c369e16bc2bc66e5544ee1662f0e10feefb1d105"
                    ]
                },
                {
                    "command": [
                        "eapply per_not_col.",
                        "VernacExtend",
                        "b9b137b045f9958c97d3338071723a4e5e83bad3"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert_all_diffs_by_contradiction.",
                        "VernacExtend",
                        "828df9d95ed8845abc382faae4d2c3b6486ff885"
                    ]
                },
                {
                    "command": [
                        "apply l7_21;finish.",
                        "VernacExtend",
                        "df6cf5de39a6452994a39f19751e5dee979875e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_22_bis",
            "line_nb": 1922,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l8_22;finish.",
                        "VernacExtend",
                        "2adcd940a838a471c1139782aa6ba6f78a245b90"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1;finish.",
                        "VernacExtend",
                        "144b3b430113daa2c7291d8c9f1bfb51e8917b13"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1;finish;Perp.",
                        "VernacExtend",
                        "9e577ea52909784877a1b37b936accd26c5b3ce3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_perp",
            "line_nb": 1928,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp.",
                        "VernacExtend",
                        "b28b6d4fccb27526ccfcec35b7b16ed3a28ca07c"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_per2__per",
            "line_nb": 2106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P X) as [Q].",
                        "VernacExtend",
                        "a1e4fb680506b24ab4404d2207be2c6fe2b62840"
                    ]
                },
                {
                    "command": [
                        "exists Q; split.",
                        "VernacExtend",
                        "218bf4c78ebf958172a9fa4b65363a17e09b8d20"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (l4_17 A B); try apply per_double_cong with X; assumption.",
                        "VernacExtend",
                        "0b6b60a086fee262967af9120003715191e305a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_per_1",
            "line_nb": 2113,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "apply H5; Col.",
                        "VernacExtend",
                        "e118bc03f1742b090414a771fbc3e37f628c4537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_per_2",
            "line_nb": 2119,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "apply H5; Col.",
                        "VernacExtend",
                        "e118bc03f1742b090414a771fbc3e37f628c4537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_per_3",
            "line_nb": 2125,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "apply H5; Col.",
                        "VernacExtend",
                        "e118bc03f1742b090414a771fbc3e37f628c4537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp_in_per_4",
            "line_nb": 2131,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *.",
                        "VernacExtend",
                        "7ab61d92fc6437a5bf040dbdb5990c098a5d4550"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "apply H5; Col.",
                        "VernacExtend",
                        "e118bc03f1742b090414a771fbc3e37f628c4537"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}