{
    "filename": "Tarski_dev/Ch16_coordinates.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch15_lengths.",
            "VernacRequire",
            "c5257cc2096fa4401b1513bc17f53b5212a1b8e0"
        ],
        [
            "Section T16.",
            "VernacBeginSection",
            "8304040c5b5006b759e4a320a5cf447e234a8b0d"
        ],
        [
            "Context `{T2D:Tarski_2D}.",
            "VernacContext",
            "14f267f1df37e6960d41f261868f4676668c9138"
        ],
        [
            "Context `{TE:@Tarski_euclidean Tn TnEQD}.",
            "VernacContext",
            "5ad1417170f9ae7b67f04abe0a42de7ad9b88135"
        ],
        [
            "Lemma grid_exchange_axes : forall O E S U1 U2, Cs O E S U1 U2 -> Cs O E S U2 U1.",
            "VernacStartTheoremProof",
            "9fb60b585ae3a7e2bd5dd6ba52552c7ee42f7f57"
        ],
        [
            "intros O E S U1 U2 HCs.",
            "VernacExtend",
            "db93926939e25ed2f7de07e2a384864d10d75819"
        ],
        [
            "destruct HCs as [HDiff [HCong1 [HCong2 HPer]]].",
            "VernacExtend",
            "9397264cdcefab7d79910bf308122b06b7148a5d"
        ],
        [
            "repeat (split; Perp).",
            "VernacExtend",
            "3637a5cb316e1227272f0ecd7df366b625db4fbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cs_not_Col : forall O E S U1 U2, Cs O E S U1 U2 -> ~ Col U1 S U2.",
            "VernacStartTheoremProof",
            "cc24ca93fdc2fe8c8f9d38a900f7d90d1ad3a1ae"
        ],
        [
            "unfold Cs; intros O E S U1 U2 HCs.",
            "VernacExtend",
            "ba4d787580d0fdeabd28f1d0db6fa5917add14c0"
        ],
        [
            "spliter; assert_diffs; apply per_not_col; Perp.",
            "VernacExtend",
            "93950e17bdd70cef3a11f7947c2c0acbaf510bce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_grid : exists O E E' S U1 U2, ~ Col O E E' /\\ Cs O E S U1 U2.",
            "VernacStartTheoremProof",
            "36bac0cb7326f145ab029f01817d73f75770b3cd"
        ],
        [
            "destruct lower_dim_ex as [O [I [X HNC]]].",
            "VernacExtend",
            "5bd54a7fae3e3da92c95c155e3a0eaa2ec80ed99"
        ],
        [
            "assert (H : ~ Col O I X) by auto; clear HNC; rename H into HNC.",
            "VernacExtend",
            "3c2b4f3627c627b7fb25a9940ab756365e55bd35"
        ],
        [
            "assert_diffs; destruct (ex_per_cong I O O X O I) as [J HJ]; Col; spliter.",
            "VernacExtend",
            "7329f65666a122b9bfb8cdb78ee3bfb0b1ebbc3c"
        ],
        [
            "exists O; exists I; exists X; exists O; exists I; exists J.",
            "VernacExtend",
            "9b79a69b12e18d160dddd42621827383ff614f31"
        ],
        [
            "repeat (split; finish).",
            "VernacExtend",
            "1b4198642c041cc1488873240da2d7d0832f3886"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_grid_spec : exists S U1 U2, Cs PA PB S U1 U2.",
            "VernacStartTheoremProof",
            "bef7b0fe486dc91e8a986abb3dadacb5bd8157f4"
        ],
        [
            "assert (~ Col PA PB PC) by (apply lower_dim).",
            "VernacExtend",
            "e67685d0dd5a1366cbaf4ab9ba672221a8810dba"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (ex_per_cong PB PA PA PC PA PB) as [J HJ]; Col; spliter.",
            "VernacExtend",
            "d1daf4e329019aa22592044e2ff4ba2f85afdb06"
        ],
        [
            "exists PA; exists PB; exists J.",
            "VernacExtend",
            "0ab2932575c41d0e9783b7db574fce2d173762d3"
        ],
        [
            "repeat (split; finish).",
            "VernacExtend",
            "1b4198642c041cc1488873240da2d7d0832f3886"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coord_exchange_axes : forall O E S U1 U2 P X Y, Cd O E S U1 U2 P X Y -> Cd O E S U2 U1 P Y X.",
            "VernacStartTheoremProof",
            "6041cc17c1a9ac51a4945f7e35dfd1f8ac2e12b4"
        ],
        [
            "intros O E S U1 U2 P X Y HCd.",
            "VernacExtend",
            "44ed2b9ecc416285b0b2d1137fcb2baad83fa992"
        ],
        [
            "destruct HCd as [HCs [H [HPX HPY]]]; clear H.",
            "VernacExtend",
            "8382e40df76d49fd51e87a752055fe5461114cc0"
        ],
        [
            "split; try (apply grid_exchange_axes; auto).",
            "VernacExtend",
            "cc1cbc6fe9461fccb8b57d389a6e3312f693fd9a"
        ],
        [
            "split; try apply all_coplanar.",
            "VernacExtend",
            "2df7796cf1cad550a1414ae508053bf8da13efc7"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cd_Col : forall O E S U1 U2 P X Y, Cd O E S U1 U2 P X Y -> Col O E X /\\ Col O E Y.",
            "VernacStartTheoremProof",
            "e3965de8161386a83e7d64c28716d3741f470adb"
        ],
        [
            "unfold Cd; unfold Projp; intros O E S U1 U2 P X Y HCd.",
            "VernacExtend",
            "997275c021f8b2586832df66a6c54b6e16940e20"
        ],
        [
            "destruct HCd as [HCs [HC [[PX HPX] [PY HPY]]]]; clear HC.",
            "VernacExtend",
            "d1ecc5c64e53e77185fef3c758f071f2214cd7e1"
        ],
        [
            "destruct HPX as [[HDiff1 HElim1] HCong1]; destruct HPY as [[HDiff2 HElim2] HCong2].",
            "VernacExtend",
            "8fa201878f6f8f42b57e8f5102ee25c1c4970a8c"
        ],
        [
            "split; [apply l4_13 with S U1 PX|apply l4_13 with S U2 PY]; Cong; [induction HElim1|induction HElim2]; spliter; treat_equalities; Col.",
            "VernacExtend",
            "9f71a44eb2b9bc0629f95258f98534d1e6d8adb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_projp : forall A B P, A <> B -> exists P', Projp P P' A B.",
            "VernacStartTheoremProof",
            "34d91de6c9c15fe2357ec6b305a44cf413d23fb1"
        ],
        [
            "intros A B P HAB.",
            "VernacExtend",
            "fad2f916655fcd509d322d189ce954a03beb3cbf"
        ],
        [
            "elim (col_dec A B P); intro HNC; [exists P; split; Col; right|].",
            "VernacExtend",
            "82b9a95deb7694f115527796b6b09fc5ae458bfb"
        ],
        [
            "destruct (l8_18_existence A B P HNC) as [P' HP'].",
            "VernacExtend",
            "525611f6bdecaa9f67135308dbd446e75505b928"
        ],
        [
            "exists P'; split; Col.",
            "VernacExtend",
            "4b6c3d8881ef2261524c4cf1f5d9c3763b378995"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_coord : forall O E S U P, S <> U -> Cong O E S U -> exists PX, exists X, Projp P PX S U /\\ Cong_3 O E X S U PX.",
            "VernacStartTheoremProof",
            "477b78fcefb9f284690784e65756e6eb052ba3d3"
        ],
        [
            "intros O E S U P HSU HCong.",
            "VernacExtend",
            "f0f57121ed0241d0627bf3b211c36aa2d7db2dbb"
        ],
        [
            "destruct (exists_projp S U P HSU) as [PX Hprojp].",
            "VernacExtend",
            "74c3a6696d2da8909d738a778baff236f8213e0a"
        ],
        [
            "assert (HCol : Col S U PX) by (destruct Hprojp as [H' H]; induction H; spliter; treat_equalities; Col).",
            "VernacExtend",
            "6a86ea48bb33653d7c7173cdc41854bda5c29818"
        ],
        [
            "destruct (l4_14 S U PX O E) as [X HCong']; Cong.",
            "VernacExtend",
            "c367573b1692466a1b06133736a48e0a89b60666"
        ],
        [
            "exists PX; exists X; auto with cong.",
            "VernacExtend",
            "108e615f8ba95e5d6ad93cfa245fade11126a44d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coordinates_of_point : forall O E S U1 U2 P, Cs O E S U1 U2 -> exists X, exists Y, Cd O E S U1 U2 P X Y.",
            "VernacStartTheoremProof",
            "ddcccada47e37a1761a1c1af78ffedb6960d0d10"
        ],
        [
            "intros O E S U1 U2 P HCs.",
            "VernacExtend",
            "a297fce353e6194edc1d4877833e1a1fbcfd84ca"
        ],
        [
            "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
            "VernacExtend",
            "4198f28b93d66bfb331ab7121b03e937e837287b"
        ],
        [
            "assert (HSU1 : S <> U1) by (assert_diffs; auto).",
            "VernacExtend",
            "2a61dd9030d51729f31413087272f93793d5000e"
        ],
        [
            "assert (HSU2 : S <> U2) by (assert_diffs; auto).",
            "VernacExtend",
            "b4d90bb78d855d7fdf7497bd710dfc53c54d551f"
        ],
        [
            "destruct (exists_coord O E S U1 P HSU1 HCong1) as [PX [X HX]].",
            "VernacExtend",
            "8d857fbe8994ea1efbe05c20b51de0a1872cc907"
        ],
        [
            "destruct (exists_coord O E S U2 P HSU2 HCong2) as [PY [Y HY]].",
            "VernacExtend",
            "c9ea0b539c47c2ffdd7524b408cd51979ad940c4"
        ],
        [
            "exists X; exists Y; split; auto.",
            "VernacExtend",
            "f3b5bd71c1c8a2d560f9107b26a10c37583180f2"
        ],
        [
            "split; try (apply all_coplanar).",
            "VernacExtend",
            "2df7796cf1cad550a1414ae508053bf8da13efc7"
        ],
        [
            "split; [exists PX|exists PY]; auto.",
            "VernacExtend",
            "a916c8e7e7326497da9697fef7f0c15311021835"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma point_of_coordinates_origin : forall O E S U1 U2, Cs O E S U1 U2 -> Cd O E S U1 U2 S O O.",
            "VernacStartTheoremProof",
            "0da6faa360c7717256371d254de2d4d44ffd7797"
        ],
        [
            "intros O E S U1 U2 HCs.",
            "VernacExtend",
            "db93926939e25ed2f7de07e2a384864d10d75819"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "split; try apply all_coplanar.",
            "VernacExtend",
            "2df7796cf1cad550a1414ae508053bf8da13efc7"
        ],
        [
            "destruct HCs as [HDiff [HCong1 [HCong2 H]]]; clear H.",
            "VernacExtend",
            "6314dfb0f5c697c4ea588a879b9cca98e848e4c3"
        ],
        [
            "assert_diffs; split; exists S; repeat (split; Col; Cong).",
            "VernacExtend",
            "1e606980f1851681311d8b67876f45dfd6686caa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma point_of_coordinates_on_an_axis : forall O E S U1 U2 X, Cs O E S U1 U2 -> Col O E X -> O <> X -> exists P, Cd O E S U1 U2 P X O.",
            "VernacStartTheoremProof",
            "96d676a452140d96f8ed57abc0d177e57fa37b29"
        ],
        [
            "intros O E S U1 U2 X HCs HCol HOX.",
            "VernacExtend",
            "c657fcf8317fd21c610298636aaccd01ef851bb9"
        ],
        [
            "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
            "VernacExtend",
            "4198f28b93d66bfb331ab7121b03e937e837287b"
        ],
        [
            "destruct (l4_14 O E X S U1 HCol HCong1) as [P HP].",
            "VernacExtend",
            "f64ebcbcaf7267ea8deb9e9b15570431df129995"
        ],
        [
            "exists P; split; auto.",
            "VernacExtend",
            "9d631b783e8aa2c144e5dba4c73560aac94ccc6b"
        ],
        [
            "destruct HCs as [H [H' [H'' HPer]]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "0bb39c49bcb9e35146ce96e8a49892ab74e58fbd"
        ],
        [
            "split; try apply all_coplanar.",
            "VernacExtend",
            "2df7796cf1cad550a1414ae508053bf8da13efc7"
        ],
        [
            "assert_diffs; split; [exists P|exists S]; repeat (split; Cong); [right; split; try apply l4_13 with O E X; Col|].",
            "VernacExtend",
            "10eb9bd5dc9b3c1bdb33f35dbdc5a1f898f9b95d"
        ],
        [
            "left; split; Col.",
            "VernacExtend",
            "10053895ea045e79a3b020b1f0bc7deaaad93a70"
        ],
        [
            "apply per_perp in HPer; auto.",
            "VernacExtend",
            "fff1e41a00462f0511442ad9c190324c1a521b7d"
        ],
        [
            "apply perp_col0 with S U1; Col; Perp; [unfold Cong_3 in *; spliter; assert_diffs|apply l4_13 with O E X]; Col.",
            "VernacExtend",
            "72a3ab4739a6411138fcd3970d7a4b468bb6aade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma point_of_coordinates : forall O E S U1 U2 X Y, Cs O E S U1 U2 -> Col O E X -> Col O E Y -> exists P, Cd O E S U1 U2 P X Y.",
            "VernacStartTheoremProof",
            "8683dfeaf3da35e184cc960a959613ab0526c8f0"
        ],
        [
            "intros O E S U1 U2 X Y HCs HCol1 HCol2.",
            "VernacExtend",
            "17527f6243d56f87655b0f00b2d63a587c0d7f8e"
        ],
        [
            "elim (eq_dec_points O X); intro HOX; elim (eq_dec_points O Y); intro HOY; treat_equalities; [exists S; apply point_of_coordinates_origin| destruct (point_of_coordinates_on_an_axis O E S U2 U1 Y) as [P HP]; try apply grid_exchange_axes; try (exists P; apply coord_exchange_axes)| apply point_of_coordinates_on_an_axis|]; auto.",
            "VernacExtend",
            "7ef80dc6780b40dc56cff8af2f8727e87b37338c"
        ],
        [
            "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
            "VernacExtend",
            "4198f28b93d66bfb331ab7121b03e937e837287b"
        ],
        [
            "destruct (l4_14 O E X S U1 HCol1 HCong1) as [PX HPX].",
            "VernacExtend",
            "cf37c4f3fc8f106f549e5e641e87b4986bc595b3"
        ],
        [
            "destruct (l4_14 O E Y S U2 HCol2 HCong2) as [PY HPY].",
            "VernacExtend",
            "0195c6f9cc0939c9610df334ef9452c2ad9b73da"
        ],
        [
            "destruct (perp_exists PX S U1) as [PX' HPerp1]; [assert_diffs; auto|].",
            "VernacExtend",
            "7731c9675b8481504de3df29a7d2e187c0764656"
        ],
        [
            "destruct (perp_exists PY S U2) as [PY' HPerp2]; [assert_diffs; auto|].",
            "VernacExtend",
            "30af448d979be322842a167d6e578171b7528e75"
        ],
        [
            "assert (HPerp3 : Perp PX PX' PY PY').",
            "VernacExtend",
            "95acdaad380b1210ea2067623ec13f00dc2fc45e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_perp__perp with S U2; Perp.",
            "VernacExtend",
            "2b540f623815717b79289b013810c7a3bf01b34e"
        ],
        [
            "apply l12_9_2D with S U1; Perp.",
            "VernacExtend",
            "2953acc70c11912d7dabebc2b072cb38d638dd75"
        ],
        [
            "destruct HCs as [H [H' [H'' HPer]]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "0bb39c49bcb9e35146ce96e8a49892ab74e58fbd"
        ],
        [
            "assert_diffs; apply per_perp in HPer; Perp.",
            "VernacExtend",
            "01c4ca04c9043f3808652e49ff30334ce16e159f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (H := HPerp3); destruct H as [P HP]; exists P; split; auto.",
            "VernacExtend",
            "29283263b9171b98bcaabe00993698440d90cb38"
        ],
        [
            "split; try apply all_coplanar.",
            "VernacExtend",
            "2df7796cf1cad550a1414ae508053bf8da13efc7"
        ],
        [
            "split; [exists PX|exists PY]; split; Cong.",
            "VernacExtend",
            "4b46e25f66753a38da311265f0b4cce262041261"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; split; auto.",
            "VernacExtend",
            "b498ec347c216f877f62e4474a61a694ea5ec00f"
        ],
        [
            "left; split; [apply l4_13 with O E X; Col|].",
            "VernacExtend",
            "74e33b29048cdbd153b4f1ae54354c2357fdec1f"
        ],
        [
            "unfold Perp_at in *; spliter; apply perp_col0 with PX PX'; Col.",
            "VernacExtend",
            "0e819c2de012dacc6370a676a15a6ffba6fad6bf"
        ],
        [
            "assert (HPYS : PY <> S) by (unfold Cong_3 in *; spliter; assert_diffs; auto).",
            "VernacExtend",
            "d84e1a275d3dbabd585f678ee7bd15bff7fa5906"
        ],
        [
            "intro; treat_equalities; apply HPYS.",
            "VernacExtend",
            "7f686e8d419c23923312124c530b4bae8c827b63"
        ],
        [
            "apply l6_21 with S U1 U2 S; Col; [destruct HCs as [H' [H'' [H''' HPer]]]; apply perp_not_col; assert_diffs; apply per_perp in HPer; Perp| |apply l4_13 with E O Y; try apply cong_3_swap; Col].",
            "VernacExtend",
            "f90d416b9581de4c1350c938410f7986fa046a78"
        ],
        [
            "assert (HPar : Par S U1 PY PY') by (apply l12_9_2D with P PX'; Perp).",
            "VernacExtend",
            "705c9be3c2134e9a647dd1dc2eea6be9cf567d2a"
        ],
        [
            "elim HPar; clear HPar; intro HParS; [|spliter; ColR].",
            "VernacExtend",
            "32fbbfc216cdf95c33ac86fe21ea7b2ff41a5b44"
        ],
        [
            "exfalso; apply HParS; exists P; split; Col.",
            "VernacExtend",
            "d7d8f5ab56744a70ed7f00559cf4f7a2f168af60"
        ],
        [
            "apply l4_13 with X O E; try (apply cong_3_swap; apply cong_3_swap_2); Col.",
            "VernacExtend",
            "63ceea2ff9c13f8e91325c060312fb38b1dd59d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; split; auto.",
            "VernacExtend",
            "b498ec347c216f877f62e4474a61a694ea5ec00f"
        ],
        [
            "left; split; [apply l4_13 with O E Y; Col|].",
            "VernacExtend",
            "3c391ced99b40d1b288f112c19ba3027e4604fb4"
        ],
        [
            "unfold Perp_at in *; spliter; apply perp_col0 with PY PY'; Col.",
            "VernacExtend",
            "d073783aaffd27b52ad0d66cce04ab938853f8e4"
        ],
        [
            "assert (HPXS : PX <> S) by (unfold Cong_3 in *; spliter; assert_diffs; auto).",
            "VernacExtend",
            "f12a17b186f335041e0e0edcb9edc84909dfd4be"
        ],
        [
            "intro; treat_equalities; apply HPXS.",
            "VernacExtend",
            "d52d6e8d54b9776e74510ddf5c9f05384089d54f"
        ],
        [
            "apply l6_21 with S U2 U1 S; Col; [destruct HCs as [H' [H'' [H''' HPer]]]; apply perp_not_col; assert_diffs; apply per_perp in HPer; Perp| |apply l4_13 with E O X; try apply cong_3_swap; Col].",
            "VernacExtend",
            "faa84e8e6f684376d998161ae0c91243eb906051"
        ],
        [
            "assert (HPar : Par S U2 PX PX') by (apply l12_9_2D with P PY'; Perp).",
            "VernacExtend",
            "e4970c26156f1fffa206b47552e3ae8a35001c99"
        ],
        [
            "elim HPar; clear HPar; intro HParS; [|spliter; ColR].",
            "VernacExtend",
            "32fbbfc216cdf95c33ac86fe21ea7b2ff41a5b44"
        ],
        [
            "exfalso; apply HParS; exists P; split; Col.",
            "VernacExtend",
            "d7d8f5ab56744a70ed7f00559cf4f7a2f168af60"
        ],
        [
            "apply l4_13 with Y O E; try (apply cong_3_swap; apply cong_3_swap_2); Col.",
            "VernacExtend",
            "943deb4086503d3fcdce9601214f4bb62382b842"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_points_coordinates : forall O E S U1 U2 P1 X1 Y1 P2 X2 Y2, Cd O E S U1 U2 P1 X1 Y1 -> Cd O E S U1 U2 P2 X2 Y2 -> (P1 = P2 <-> (X1 = X2 /\\ Y1 = Y2)).",
            "VernacStartTheoremProof",
            "7e196e573c237c88238851e3218ce3f58122f1c3"
        ],
        [
            "intros O E S U1 U2 P1 X1 Y1 P2 X2 Y2 HCd1 HCd2.",
            "VernacExtend",
            "d29ced65037ea1e5dda0b1de0cd093c2e55c92a0"
        ],
        [
            "split; intro; spliter; treat_equalities.",
            "VernacExtend",
            "2d9cdec33d082541f32240ca16d9d819094e23d6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HCd1 as [HCs [H [[PX HPX1] [PY HPY1]]]]; clear H.",
            "VernacExtend",
            "963753c668e830a8706719beaa7681a9072a58a4"
        ],
        [
            "destruct HCd2 as [H [H' [[PX2 HPX2] [PY2 HPY2]]]]; clear H; clear H'.",
            "VernacExtend",
            "f56b2a277fcf8544faeb3cca5476b14b8dac279d"
        ],
        [
            "assert (PX = PX2) by (spliter; apply projp_id with P1 S U1; auto); treat_equalities; assert (PY = PY2) by (spliter; apply projp_id with P1 S U2; auto); treat_equalities.",
            "VernacExtend",
            "17804c7d0f08e64f2ead6ae27170c8f30c39b32a"
        ],
        [
            "destruct HPX1 as [H HCong1]; assert (H' : Col PX S U1) by (destruct H as [H' H]; induction H; spliter; treat_equalities; Col).",
            "VernacExtend",
            "0539e90a388c775e43d69cec2f4a4557735efb15"
        ],
        [
            "clear H; assert (HCol1 : Col O E X1) by (apply l4_13 with S U1 PX; Col; Cong).",
            "VernacExtend",
            "5f2e9c8a8690a081f8f3f2cb510cbee270b7de2b"
        ],
        [
            "clear H'; destruct HPX2 as [H HCong3]; clear H.",
            "VernacExtend",
            "0e8886c66323d621dd18f1176e55bdd3e6c7e59f"
        ],
        [
            "destruct HPY1 as [H HCong2]; assert (H' : Col PY S U2) by (destruct H as [H' H]; induction H; spliter; treat_equalities; Col).",
            "VernacExtend",
            "8f66234b873227f1f51690e1e2d8a3527ef6ccf1"
        ],
        [
            "clear H; assert (HCol2 : Col O E Y1) by (apply l4_13 with S U2 PY; Col; Cong).",
            "VernacExtend",
            "ef6ce0d6243ec500c9f902097d09a4befe1f1c52"
        ],
        [
            "clear H'; destruct HPY2 as [H HCong4]; clear H.",
            "VernacExtend",
            "e313a267635bffbe9ce3fe292033881385dbf3a5"
        ],
        [
            "split; apply l4_18 with O E; Col; try (intro; treat_equalities; unfold Cs in HCs; spliter; intuition); unfold Cong_3 in *; spliter; eapply cong_transitivity; eCong.",
            "VernacExtend",
            "5eec8db1b811d6df21cdae545c05adfcec701395"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HCd1 as [HCs [H [[PX HPX1] [PY HPY1]]]]; clear H.",
            "VernacExtend",
            "963753c668e830a8706719beaa7681a9072a58a4"
        ],
        [
            "destruct HCd2 as [H [H' [[PX2 HPX2] [PY2 HPY2]]]]; clear H; clear H'.",
            "VernacExtend",
            "f56b2a277fcf8544faeb3cca5476b14b8dac279d"
        ],
        [
            "assert (PX = PX2); treat_equalities.",
            "VernacExtend",
            "c05a9bb4bd7b5d81237e30739f7c2bf40d98d21c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HPX1 as [[H HElim] H0]; unfold Cs in HCs; unfold Cong_3 in *; spliter; assert_diffs; apply l4_18 with S U1; auto.",
            "VernacExtend",
            "c0f3ad0607feee781b394f641bdac1cbf919c5fd"
        ],
        [
            "induction HElim; spliter; treat_equalities; Col.",
            "VernacExtend",
            "86c3022701724a98b3f607e9e73244cad7dd15a4"
        ],
        [
            "apply cong_transitivity with O X1; Cong.",
            "VernacExtend",
            "5793ef3a92cc890db3130ba885cea8dc95ba164c"
        ],
        [
            "apply cong_transitivity with E X1; Cong.",
            "VernacExtend",
            "e4bc62f7dc5867ed41c6cf5438e3612e4315d7a3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (PY = PY2); treat_equalities.",
            "VernacExtend",
            "3146e3cf173506ea8f3116a3f14c2f0b6df81e19"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HPY1 as [[H HElim] H0]; unfold Cs in HCs; unfold Cong_3 in *; spliter; assert_diffs; apply l4_18 with S U2; auto.",
            "VernacExtend",
            "7c8499f011b88805bf3b962c8fe9d2d3061d4723"
        ],
        [
            "induction HElim; spliter; treat_equalities; Col.",
            "VernacExtend",
            "86c3022701724a98b3f607e9e73244cad7dd15a4"
        ],
        [
            "apply cong_transitivity with O Y1; Cong.",
            "VernacExtend",
            "bc1d913cd65a7ea2948b9d8babec49a074cacc2f"
        ],
        [
            "apply cong_transitivity with E Y1; Cong.",
            "VernacExtend",
            "b7534fb8c29fb81e4cdbfa7772afec7da3ff873b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HPX1 as [HProjp1 H]; clear H; destruct HPX2 as [HProjp2 H]; clear H; destruct HPY1 as [HProjp3 H]; clear H; destruct HPY2 as [HProjp4 H]; clear H.",
            "VernacExtend",
            "339e42a6611262b960359a1c4ff13c4234044f0c"
        ],
        [
            "assert (HCol1 : Col PX P1 P2) by (apply projp2_col with S U1; auto).",
            "VernacExtend",
            "6f8aae3f8d26257f3ea88f7865026baef85f1c1c"
        ],
        [
            "assert (HCol2 : Col PY P1 P2) by (apply projp2_col with S U2; auto).",
            "VernacExtend",
            "df40631e6428910a95e9c70cd4248e3b632e50b7"
        ],
        [
            "elim (eq_dec_points P1 P2); intro HP1P2; treat_equalities; auto; exfalso.",
            "VernacExtend",
            "2c5874c23f0ec577e1b2078753dca3a07deda446"
        ],
        [
            "assert (HPar : Par S U1 S U2).",
            "VernacExtend",
            "dd3ea51f2dd12c8d65469c396161df63d82e5785"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points P1 PX); intro HP1PX; elim (eq_dec_points P1 PY); intro HP1PY; treat_equalities.",
            "VernacExtend",
            "8eab6fd77ff0c942a39701e5f9d754a9d15a4c46"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HProjp2 as [H H1]; clear H; elim H1; clear H1; intro H1; [destruct H1 as [H1 HPerp1]|spliter; intuition].",
            "VernacExtend",
            "5efa103f3f64c88d0e57b622e0fb5b069d2b3410"
        ],
        [
            "destruct HProjp4 as [H H2]; clear H; elim H2; clear H2; intro H2; [destruct H2 as [H2 HPerp2]|spliter; intuition].",
            "VernacExtend",
            "e3f61c3c2006b53fb457829ce7c99b4264f9a61e"
        ],
        [
            "apply l12_9_2D with P2 P1; Perp.",
            "VernacExtend",
            "d5c2e83cd42663ae0da0eb767d3ce546f7269d94"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HProjp2 as [H H1]; clear H; elim H1; clear H1; intro H1; [destruct H1 as [H1 HPerp1]|spliter; intuition].",
            "VernacExtend",
            "5efa103f3f64c88d0e57b622e0fb5b069d2b3410"
        ],
        [
            "destruct HProjp3 as [H H2]; clear H; elim H2; clear H2; intro H2; [destruct H2 as [H2 HPerp2]|spliter; intuition].",
            "VernacExtend",
            "bb32c3e2e737ab215b8b8f5c39c50e02d439ff51"
        ],
        [
            "apply l12_9_2D with P2 P1; Perp.",
            "VernacExtend",
            "d5c2e83cd42663ae0da0eb767d3ce546f7269d94"
        ],
        [
            "apply perp_col0 with P1 PY; Perp; Col.",
            "VernacExtend",
            "7a521e206f6fe6a56c427e9953d228f547e7db94"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HProjp1 as [H H1]; clear H; elim H1; clear H1; intro H1; [destruct H1 as [H1 HPerp1]|spliter; intuition].",
            "VernacExtend",
            "c95f190c589afd843de01e552b15b7d6aff1c918"
        ],
        [
            "destruct HProjp4 as [H H2]; clear H; elim H2; clear H2; intro H2; [destruct H2 as [H2 HPerp2]|spliter; intuition].",
            "VernacExtend",
            "e3f61c3c2006b53fb457829ce7c99b4264f9a61e"
        ],
        [
            "apply l12_9_2D with P2 P1; Perp.",
            "VernacExtend",
            "d5c2e83cd42663ae0da0eb767d3ce546f7269d94"
        ],
        [
            "apply perp_col0 with P1 PX; Perp; Col.",
            "VernacExtend",
            "8f5a7028a007e1c7ace428c1b88e41fd708d8717"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HProjp1 as [H H1]; clear H; elim H1; clear H1; intro H1; [destruct H1 as [H1 HPerp1]|spliter; intuition].",
            "VernacExtend",
            "c95f190c589afd843de01e552b15b7d6aff1c918"
        ],
        [
            "destruct HProjp3 as [H H2]; clear H; elim H2; clear H2; intro H2; [destruct H2 as [H2 HPerp2]|spliter; intuition].",
            "VernacExtend",
            "bb32c3e2e737ab215b8b8f5c39c50e02d439ff51"
        ],
        [
            "apply l12_9_2D with P2 P1; [apply perp_col0 with P1 PX|apply perp_col0 with P1 PY];Perp; Col.",
            "VernacExtend",
            "a05b15210a043c306160688fb5219444d48dbd68"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HFalse : ~ ~ Col U1 S U2).",
            "VernacExtend",
            "9c9ec0fc3cc7c57c8f3f97cf1087d47cf60d7c76"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HF; apply HF; elim HPar; clear HPar; intro HPar; spliter; Col.",
            "VernacExtend",
            "f3d5c1c79e5bdb471fa59a13809ef0ef7491788d"
        ],
        [
            "exfalso; apply HPar; exists S; Col.",
            "VernacExtend",
            "9cc3e00ab7a401b35b090671b81a80eb4d0079c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold Cs in HCs; spliter; assert_diffs; apply HFalse; apply per_not_col; Col.",
            "VernacExtend",
            "5de771d480e4b7670582ecedbcc7eadd1d943511"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l16_9_1 : forall O E E' X Y XY XMY, Col O E X -> Col O E Y -> Is_length O E E' X Y XY -> LeP O E E' Y X -> Diff O E E' X Y XMY -> XY = XMY.",
            "VernacStartTheoremProof",
            "47bd427c78b663985d155ff27bb2dc5a2c8650d1"
        ],
        [
            "intros O E E' X Y XY XMY HCol1 HCol2 HXY HLe1 HXMY.",
            "VernacExtend",
            "b6d2d81e44b0bef0a9cb5e67fcfb397471fea6b9"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HXMY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "0cdf7a0f857cfb772a1eaf07bdc7e9a92c04b8f0"
        ],
        [
            "assert (HOE : O <> E) by (assert_diffs; auto).",
            "VernacExtend",
            "67c38ec6720c53edeee4eb28aba740e092214e26"
        ],
        [
            "assert (HCol3 : Col O E XMY).",
            "VernacExtend",
            "543dce1f00b3b6d4ad8bae0b099c4bc93d5631ab"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Diff, Opp, Sum, Ar2 in *; destruct HXMY as [MB [H1 [H2 [H3 H4]]]]; spliter; Col.",
            "VernacExtend",
            "cdcd1f927ab0d98d6ac1eda59775402554fcfea1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCong1 := HXMY); apply diff_sum in HCong1; apply l15_3 in HCong1.",
            "VernacExtend",
            "0b9e5d96259abf0341d3d05646d2b9790905cf20"
        ],
        [
            "elim HXY; clear HXY; intro HXY; [|spliter; intuition].",
            "VernacExtend",
            "9954cac9528ed28427fb8a3099ef10da9f212ea7"
        ],
        [
            "destruct HXY as [H [HCol4 [HLe2 HCong2]]].",
            "VernacExtend",
            "2edf1a44e858e10ded922b28dfaad84a681f8856"
        ],
        [
            "elim (l7_20 O XY XMY); [auto|intro HMid; clear H|ColR|apply cong_transitivity with X Y; Cong].",
            "VernacExtend",
            "b798cee134d13a3d7ce9d41fe9effa0ffd420f22"
        ],
        [
            "elim HLe1; clear HLe1; intro HLt1; [clear HCong1|treat_equalities; auto].",
            "VernacExtend",
            "dd01f1b35d2fd53daa6b96cae34108f5a770533e"
        ],
        [
            "elim HLe2; clear HLe2; intro HLt2; [clear HCong2|treat_equalities; auto].",
            "VernacExtend",
            "203c61b5b675011155ab08fb5afb6b5d9663900d"
        ],
        [
            "exfalso; apply not_pos_and_neg with O E XMY; split; [apply lt_diff_ps with E' X Y; auto|].",
            "VernacExtend",
            "b12de5d76d674fd9fde91396ebba5d7aa53f856b"
        ],
        [
            "apply pos_opp_neg with E' XY; [apply ltP_pos with E'; auto|].",
            "VernacExtend",
            "89d1cebce72c43d8da2c3dfe8fec7f1fc738d6d3"
        ],
        [
            "apply midpoint_opp; repeat (Col; split).",
            "VernacExtend",
            "1e6b22ca3b42f5d8633de16e67fecebbc5fbbbbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_eq_or_opp : forall O E E' A B L1 L2, Length O E E' A B L1 -> Diff O E E' A B L2 -> L1 = L2 \\/ Opp O E E' L1 L2.",
            "VernacStartTheoremProof",
            "764d594b35511bf33f0de1ac4385eb325ae8fa83"
        ],
        [
            "intros O E E' A B L1 L2 HL1 HL2.",
            "VernacExtend",
            "b73efb880f2936a3d77828b6c5dae0b170ec4ca8"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "d3914ed427b0f323ab475e8cd35575e5424b1b9e"
        ],
        [
            "assert (HColA : Col O E A) by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "4823d468f223b60e41a39c19e17ddab4fed1f1ab"
        ],
        [
            "assert (HColB : Col O E B) by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "f9777860371a991548aaad1d83922b6e4e95f0fe"
        ],
        [
            "elim (col_2_le_or_ge O E E' A B); auto; intro HLe; [right|left; apply l16_9_1 with O E E' A B; auto; left; auto].",
            "VernacExtend",
            "9c9408f1b70a8ac675ffb600006d0f6100dfb000"
        ],
        [
            "apply diff_opp with B A; auto.",
            "VernacExtend",
            "04fc8ca1752f7541c0034af3df64b9d4bd7b1e9e"
        ],
        [
            "destruct (diff_exists O E E' B A) as [D HD]; Col.",
            "VernacExtend",
            "adf2c17a09a0654ab82bc30d6082c74d4fa08037"
        ],
        [
            "assert (L1 = D) by (apply l16_9_1 with O E E' B A; auto; left; apply length_sym; auto).",
            "VernacExtend",
            "172b8cb0ac614200f7e1b4f243d61cfe6bb911fe"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l16_9_2 : forall O E E' X Y XY XMY XY2 XMY2, Col O E X -> Col O E Y -> Is_length O E E' X Y XY -> Diff O E E' X Y XMY -> Prod O E E' XY XY XY2 -> Prod O E E' XMY XMY XMY2 -> XY2 = XMY2.",
            "VernacStartTheoremProof",
            "a09d9e88cddcea7b18e4a892fbebeaf35624752a"
        ],
        [
            "intros O E E' X Y XY XMY XY2 XMY2 HCol1 HCol2 HXY HXMY HXY2 HXMY2.",
            "VernacExtend",
            "b135a84fe8c2192c6853bf542b6e555997863019"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HXMY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "0cdf7a0f857cfb772a1eaf07bdc7e9a92c04b8f0"
        ],
        [
            "assert (H:= HXY); elim H; clear H; intro HXY'; [|spliter; assert_diffs; intuition].",
            "VernacExtend",
            "c4afba22aa36cacf0065d5911f39570865c76515"
        ],
        [
            "elim (length_eq_or_opp O E E' X Y XY XMY); auto; intro HOpp1; treat_equalities; apply prod_uniqueness with O E E' XY XY; auto.",
            "VernacExtend",
            "68d60ab366451db8ace829791f9aa9dec86ac971"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HOpp2]; Col.",
            "VernacExtend",
            "fda7ea127fdcc552ba10fae2654d2494e2b0157a"
        ],
        [
            "apply prod_assoc1 with XMY ME XMY; auto; [|apply prod_comm]; apply opp_prod;auto; apply opp_comm; Col.",
            "VernacExtend",
            "6c410bf7e471e7d30dcb788b8eb5e0dfc669f4c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_3_2_cong_4 : forall O E I J S U X Y, O <> E -> Col O E I -> Col O E J -> Cong_3 O E I S U X -> Cong_3 O E J S U Y -> Cong_4 O E I J S U X Y.",
            "VernacStartTheoremProof",
            "713da896e0eb71b74e562d48065f676a7b0a540d"
        ],
        [
            "intros O E I J S U X Y HOE HCol1 HCol2 HCong1 HCong4.",
            "VernacExtend",
            "f929be245d0112f35f0ae0362c94a9a09c04f472"
        ],
        [
            "destruct HCong1 as [HCong1 [HCong2 HCong3]].",
            "VernacExtend",
            "ca93894fe37cd72a22d6f334598897a51abe435f"
        ],
        [
            "destruct HCong4 as [HCong4 [HCong5 HCong6]].",
            "VernacExtend",
            "ed7ebdcdfc2d0f90c41e92f87727f4f8a0b7ca88"
        ],
        [
            "repeat (split; Cong).",
            "VernacExtend",
            "f3786e8d7c1155cdcb3a7045a4ce73aa60f1afa6"
        ],
        [
            "apply l4_16 with O E S U; Col.",
            "VernacExtend",
            "2a1c115379a9fbf0fe03cb1c8092262432a767ec"
        ],
        [
            "repeat (split; Cong).",
            "VernacExtend",
            "f3786e8d7c1155cdcb3a7045a4ce73aa60f1afa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_3_3_cong_5: forall O E I J K S U X Y Z, O <> E -> Col O E I -> Col O E J -> Col O E K -> Cong_3 O E I S U X -> Cong_3 O E J S U Y -> Cong_3 O E K S U Z -> Cong_5 O E I J K S U X Y Z.",
            "VernacStartTheoremProof",
            "b86db3db7297f5f69749cde185019f6802ffeb9a"
        ],
        [
            "intros O E I J K S U X Y Z HOE HCol1 HCol2 HCol3 HCong1 HCong4 HCong7.",
            "VernacExtend",
            "e4a42d6f1db931978475d8f687a96840700f63c0"
        ],
        [
            "destruct HCong1 as [HCong1 [HCong2 HCong3]].",
            "VernacExtend",
            "ca93894fe37cd72a22d6f334598897a51abe435f"
        ],
        [
            "destruct HCong4 as [HCong4 [HCong5 HCong6]].",
            "VernacExtend",
            "ed7ebdcdfc2d0f90c41e92f87727f4f8a0b7ca88"
        ],
        [
            "destruct HCong7 as [HCong7 [HCong8 HCong9]].",
            "VernacExtend",
            "c0a37eece6e2140defad554d06d8046725d661e0"
        ],
        [
            "repeat (split; Cong); apply l4_16 with O E S U; Col; repeat (split; Cong).",
            "VernacExtend",
            "d1a597ea66e1888271ad485d01e93527cd99cc75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_distance_formula_aux : forall O E E' S U1 U2 P PX PY Q QX PXQX, Cd O E S U1 U2 P PX PY -> Cd O E S U1 U2 Q QX PY -> P <> Q -> ~ Col O E E' -> Col O E PX -> Col O E QX -> Col O E PY -> Cs O E S U1 U2 -> Length O E E' PX QX PXQX -> Length O E E' Q P PXQX.",
            "VernacStartTheoremProof",
            "23b5ed941c1f807ea3f6bfa5a714d6c28191d37a"
        ],
        [
            "intros O E E' S U1 U2 P PX PY Q QX PXQX.",
            "VernacExtend",
            "627c0ea19447ac41e970753ff98faff4754c05d3"
        ],
        [
            "intros HCd1 HCd2 HDiff HNC HCol1 HCol2 HCol3 HCs HPXQX.",
            "VernacExtend",
            "bbec5da2aea132436de7a0bbadd4e95fe3493bf6"
        ],
        [
            "apply length_eq_cong_2 with PX QX; auto; clear HPXQX.",
            "VernacExtend",
            "b7151c5564b1618cbdae05a00828c950c5ea8a49"
        ],
        [
            "destruct HCd1 as [H [H' [HPX' HPY']]]; clear H; clear H'.",
            "VernacExtend",
            "d0cfe852e4522eb132d2d199ff0c1b3745ffec4a"
        ],
        [
            "destruct HPX' as [PX' [HProjp1 HCong1]]; destruct HPY' as [PY' [HProjp2 HCong2]].",
            "VernacExtend",
            "9bd382b814649341fb91735cf53c7f39083234d8"
        ],
        [
            "destruct HCd2 as [H [H' [HQX' HQY']]]; clear H; clear H'.",
            "VernacExtend",
            "b24f373e70ba988b5aea264b5d867e5658478fa6"
        ],
        [
            "destruct HQX' as [QX' [HProjp3 HCong3]]; destruct HQY' as [QY' [HProjp4 HCong4]].",
            "VernacExtend",
            "e04f8da434b4eaa1478f63ce81b23f6d55bfbf1e"
        ],
        [
            "assert (PY' = QY') by (assert_diffs; apply col_cong_3_cong_3_eq with O E PY S U2; auto).",
            "VernacExtend",
            "a306cac2509b5a2437d7a6f494c949b677abb0a0"
        ],
        [
            "treat_equalities; assert (HPerp1 : Perp P Q S U2) by (apply projp_projp_perp with PY'; auto).",
            "VernacExtend",
            "759c236b0716f1df6cfac76d7fce1519e86de858"
        ],
        [
            "assert (HPerp2 : Perp U1 S S U2) by (unfold Cs in HCs; spliter; assert_diffs; apply per_perp; Perp).",
            "VernacExtend",
            "9a3de21a7b23829121158527333cf5cedf48a456"
        ],
        [
            "destruct HProjp1 as [H H1]; clear H; destruct HProjp3 as [H H2]; clear H.",
            "VernacExtend",
            "457d3be3f2880ab30b8ca25e07aebadb978bfc65"
        ],
        [
            "elim H1; clear H1; intro H1; elim H2; clear H2; intro H2; destruct H1 as [HCol5 HPerp3]; destruct H2 as [HCol6 HPerp4]; treat_equalities.",
            "VernacExtend",
            "ae3e2f1ed4be7070836e1fe478ae0c7839a0e90c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points S PX'); intro HDiff1; elim (eq_dec_points S QX'); intro HDiff2; treat_equalities.",
            "VernacExtend",
            "c4b45a3cadbfe19ddf856a5b4a4b35d0aeaaca89"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; unfold Cong_3 in *; spliter; treat_equalities.",
            "VernacExtend",
            "c4feb0538f516c514d40f6832b0245bb851abb7a"
        ],
        [
            "assert (HPar1 : Par P Q S U1) by (apply l12_9_2D with S U2; Perp).",
            "VernacExtend",
            "72a44fd1e76869adc55ba14c8adc6449c07be023"
        ],
        [
            "assert (HPar2 : Par P S Q S) by (apply l12_9_2D with S U1; Perp).",
            "VernacExtend",
            "64e097f02f64bb2ba27eb886cebdab6e54157d63"
        ],
        [
            "elim HPar2; clear HPar2; intro HCol1; [apply HCol1; exists S; Col|].",
            "VernacExtend",
            "22e660103ee440003a189d340c0b39187e3ff1ae"
        ],
        [
            "elim HPar1; clear HPar1; intro HCol2; [apply HCol2; exists S; spliter; Col|].",
            "VernacExtend",
            "c533dc7953707f2b8fec69f1961d0a973a7ea7b2"
        ],
        [
            "spliter; apply perp_not_col2 in HPerp3; elim HPerp3; intro HNC'; apply HNC'; Col.",
            "VernacExtend",
            "3ab2764a4a2607b70b8cb9eee0900185482f123e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = PX) by (unfold Cong_3 in HCong1; spliter; treat_equalities; auto).",
            "VernacExtend",
            "d2474d47b9a3a2e93bd6ce6a34840deea6660578"
        ],
        [
            "treat_equalities; assert (HCol7 : Col S U2 P).",
            "VernacExtend",
            "add057492a61dd86100136995c421321a7ffaf4a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Par P S S U2) by (apply l12_9_2D with S U1; Perp).",
            "VernacExtend",
            "429b87d47b1266461433a0f95669b6a04cf42b7b"
        ],
        [
            "elim H; clear H; intro H; [exfalso; apply H; exists S|spliter]; Col.",
            "VernacExtend",
            "c0996aaa9695dc5af4a13db21ee6973d057f292e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC' : ~ Col S U1 U2) by (apply perp_not_col; Perp).",
            "VernacExtend",
            "f2d01633a2d042018e598ace3064e51bfa273818"
        ],
        [
            "assert (H : Rectangle P S QX' Q).",
            "VernacExtend",
            "145be3976d0ad8bb0b6cedd1e3602d3d3cd03f1b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp3__rect; try (intro; assert_diffs; apply HNC'; ColR); [apply perp_col0 with S U1|apply perp_sym; apply perp_col0 with S U1|]; Col; Perp.",
            "VernacExtend",
            "cb4fa7ea2bf155368ad7262e1ef4425846171705"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "apply l12_9_2D with S U2; Perp.",
            "VernacExtend",
            "6d782fe36e08c12f6214a00aceea8120883b0573"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Rectangle_Plg in H; apply plg_to_parallelogram in H; apply plg_cong_2 in H.",
            "VernacExtend",
            "0794c207faba68b65513fbbd8014a5179edc1966"
        ],
        [
            "unfold Cong_3 in HCong3; spliter; apply cong_transitivity with S QX'; Cong.",
            "VernacExtend",
            "5e7efdc989ed49c532993544ffc1d90a5d1fa82d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = QX) by (unfold Cong_3 in HCong3; spliter; treat_equalities; auto).",
            "VernacExtend",
            "06214b05c0f06070c01e525b5bf3a8e68364a558"
        ],
        [
            "treat_equalities; assert (HCol7 : Col S U2 Q).",
            "VernacExtend",
            "dbadd8117c7ded3437428d270a874497f106180a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Par Q S S U2) by (apply l12_9_2D with S U1; Perp).",
            "VernacExtend",
            "33a999c08e86f1daac35547813e90f5b4f2c00a5"
        ],
        [
            "elim H; clear H; intro H; [exfalso; apply H; exists S|spliter]; Col.",
            "VernacExtend",
            "c0996aaa9695dc5af4a13db21ee6973d057f292e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC' : ~ Col S U1 U2) by (apply perp_not_col; Perp).",
            "VernacExtend",
            "f2d01633a2d042018e598ace3064e51bfa273818"
        ],
        [
            "assert (H : Rectangle Q S PX' P).",
            "VernacExtend",
            "f543ff5c56a7bc9bfa981f92d4bdd90692ff0560"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp3__rect; try (intro; assert_diffs; apply HNC'; ColR); [apply perp_col0 with S U1|apply perp_sym; apply perp_col0 with S U1|]; Col; Perp.",
            "VernacExtend",
            "cb4fa7ea2bf155368ad7262e1ef4425846171705"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "apply l12_9_2D with S U2; Perp.",
            "VernacExtend",
            "6d782fe36e08c12f6214a00aceea8120883b0573"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Rectangle_Plg in H; apply plg_to_parallelogram in H; apply plg_cong_2 in H.",
            "VernacExtend",
            "0794c207faba68b65513fbbd8014a5179edc1966"
        ],
        [
            "unfold Cong_3 in HCong1; spliter; apply cong_transitivity with S PX'; Cong.",
            "VernacExtend",
            "6db2ca3dcbd9a2a595e248bdd8e067b42bec0f39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points S PY'); intro HDiff3; treat_equalities.",
            "VernacExtend",
            "fd712ab8b4d3c3cc1edd7fa7bf140d0ff9fd658b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HNC' := HPerp3); apply perp_not_col2 in HNC'.",
            "VernacExtend",
            "8533ddc17b5174100ed4238d87003d04aaabb7ac"
        ],
        [
            "elim HNC'; clear HNC'; intro HNC'; [exfalso; apply HNC'|intuition].",
            "VernacExtend",
            "015d70732ae6a0d13e9910270aa85ddd699a706b"
        ],
        [
            "destruct HProjp2 as [H' H]; clear H'.",
            "VernacExtend",
            "b8e52ccc2e1c269bed9d90c78da1aabad1a40128"
        ],
        [
            "elim H; clear H; intro H; [|spliter; subst; Col].",
            "VernacExtend",
            "b6a0ea28e009cea5a7ac1bda073c488ba4893206"
        ],
        [
            "destruct H as [H HPerp5]; clear H.",
            "VernacExtend",
            "5a1ca4a53d13b5f21ce9db944146802e59e7e382"
        ],
        [
            "assert (HPar : Par P S S U1) by (apply l12_9_2D with S U2; Perp).",
            "VernacExtend",
            "785099e165aa409f4cea1d0ce1e3367b4837b405"
        ],
        [
            "elim HPar; clear HPar; intro HPar; [exfalso; apply HPar; exists S|spliter]; Col.",
            "VernacExtend",
            "bd52175a4a5c0346b7fc387a8f9697ee161646e6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HNC' : ~ Col S U1 U2) by (apply perp_not_col; Perp).",
            "VernacExtend",
            "f2d01633a2d042018e598ace3064e51bfa273818"
        ],
        [
            "assert (HCol7 : Col S U1 PX') by (apply l4_13 with O E PX; Col).",
            "VernacExtend",
            "f289f5878b53c0b1866ce5c19f40acfcb29573ae"
        ],
        [
            "assert (HCol8 : Col S U2 PY') by (apply l4_13 with O E PY; Col).",
            "VernacExtend",
            "01ea88db4d565860ae73a0ecc61744c40bb36857"
        ],
        [
            "assert (HCol9 : Col S U1 QX') by (apply l4_13 with O E QX; Col).",
            "VernacExtend",
            "b5ecc55aac9e3ae29dd74108569946e95b9c38cd"
        ],
        [
            "assert (HDiff4 : P <> PY').",
            "VernacExtend",
            "e6200f3b1941b40e1732bd554f11c8791bfee6cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply HDiff1.",
            "VernacExtend",
            "5bc7a4df7278348ee8b32306fca63bc3f530fc99"
        ],
        [
            "assert_diffs; apply l6_21 with S U1 U2 S; Col.",
            "VernacExtend",
            "3323003742dbe8c6185b576793650f055f7c4e37"
        ],
        [
            "assert (HPar : Par P PX' S U2) by (apply l12_9_2D with S U1; Perp).",
            "VernacExtend",
            "8c4af3a80c512f7db05c85916d17a7c23278214c"
        ],
        [
            "elim HPar; clear HPar; intro HPar; [exfalso; apply HPar; exists P|]; spliter; Col.",
            "VernacExtend",
            "e8011b9b760a0a5c3298bdcf1b17f9ba6b9cf73f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HDiff5 : Q <> PY').",
            "VernacExtend",
            "5e4f3a84077cf146557c7126f20e3454351bdc61"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply HDiff2.",
            "VernacExtend",
            "f7094622b31efdc4dad4a2b159d0c0b8cf2c0f1e"
        ],
        [
            "assert_diffs; apply l6_21 with S U1 U2 S; Col.",
            "VernacExtend",
            "3323003742dbe8c6185b576793650f055f7c4e37"
        ],
        [
            "assert (HPar : Par Q QX' S U2) by (apply l12_9_2D with S U1; Perp).",
            "VernacExtend",
            "5c70d78fd5f6f390e5da8577745211b5e3abece6"
        ],
        [
            "elim HPar; clear HPar; intro HPar; [exfalso; apply HPar; exists Q|]; spliter; Col.",
            "VernacExtend",
            "b82596ec2104e718753e01a7c1737562a602ad90"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HRect1 : Rectangle PX' S PY' P).",
            "VernacExtend",
            "ce3e71647ae09f23d0e85996f4481b5001b7de19"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp3__rect; try (intro; assert_diffs; apply HNC'; ColR).",
            "VernacExtend",
            "7d541296c9a0c3cc0056ba2ba3ee7235e06e93aa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_col0 with S U2; Col.",
            "VernacExtend",
            "6acf891c81d8f0f229352799f2c10d43501a3835"
        ],
        [
            "apply perp_col0 with S U1; Col; Perp.",
            "VernacExtend",
            "02c5bcbf4ee27ded2136b4ee9b59d67d441a6658"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_col0 with P Q; try (apply perp_col0 with S U2); Col; Perp.",
            "VernacExtend",
            "9a79a8a704db0ef28ecbe7c5c37915c9782d4b99"
        ],
        [
            "apply col_permutation_1; apply projp2_col with S U2; auto.",
            "VernacExtend",
            "e3d9e3ee08bd95e0d9090077de555b5e66299526"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "9b00f2c133902855aa0a9f7770447456657abfd6"
        ],
        [
            "apply l12_9_2D with S U2; Perp.",
            "VernacExtend",
            "6d782fe36e08c12f6214a00aceea8120883b0573"
        ],
        [
            "apply perp_sym; apply perp_col0 with P Q; Col.",
            "VernacExtend",
            "a84d395f18d9f6aa968afc4a2a2fb8d6e1ef9d83"
        ],
        [
            "apply col_permutation_1; apply projp2_col with S U2; auto.",
            "VernacExtend",
            "e3d9e3ee08bd95e0d9090077de555b5e66299526"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HRect2 : Rectangle QX' S PY' Q).",
            "VernacExtend",
            "53da567913fc31f8b4438d80a5d6887250406d0c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp3__rect; try (intro; assert_diffs; apply HNC'; ColR).",
            "VernacExtend",
            "7d541296c9a0c3cc0056ba2ba3ee7235e06e93aa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_col0 with S U2; Col.",
            "VernacExtend",
            "6acf891c81d8f0f229352799f2c10d43501a3835"
        ],
        [
            "apply perp_col0 with S U1; Col; Perp.",
            "VernacExtend",
            "02c5bcbf4ee27ded2136b4ee9b59d67d441a6658"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_col0 with P Q; try (apply perp_col0 with S U2); Col; Perp.",
            "VernacExtend",
            "9a79a8a704db0ef28ecbe7c5c37915c9782d4b99"
        ],
        [
            "apply col_permutation_1; apply projp2_col with S U2; auto.",
            "VernacExtend",
            "e3d9e3ee08bd95e0d9090077de555b5e66299526"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "9b00f2c133902855aa0a9f7770447456657abfd6"
        ],
        [
            "apply l12_9_2D with S U2; Perp.",
            "VernacExtend",
            "6d782fe36e08c12f6214a00aceea8120883b0573"
        ],
        [
            "apply perp_sym; apply perp_col0 with P Q; Col.",
            "VernacExtend",
            "a84d395f18d9f6aa968afc4a2a2fb8d6e1ef9d83"
        ],
        [
            "apply col_permutation_1; apply projp2_col with S U2; auto.",
            "VernacExtend",
            "e3d9e3ee08bd95e0d9090077de555b5e66299526"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HRect3 : Rectangle P PX' QX' Q) by (apply rect_2_rect with S PY'; try apply rect_permut; auto).",
            "VernacExtend",
            "17cad4b85e58829a8aae7f3f5a9aa36f44c64e85"
        ],
        [
            "apply Rectangle_Parallelogram in HRect3; apply plg_cong_2 in HRect3.",
            "VernacExtend",
            "57c8f50114902659010988772222ad9524932e59"
        ],
        [
            "assert_diffs; apply cong_3_2_cong_4 with O E PX QX S U1 PX' QX' in HCong1; Col.",
            "VernacExtend",
            "a12964bc752c5bad87b5a45d5033d3128c92f721"
        ],
        [
            "unfold Cong_4 in HCong1; spliter; apply cong_transitivity with PX' QX'; Cong.",
            "VernacExtend",
            "1d27323a57386eefb5e9b5783b955059eeb267e2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; elim (perp_not_col2 S U1 P PX'); Perp; intro H; apply H; Col; clear H.",
            "VernacExtend",
            "4682e1204277de8e32b6d74bf358a80a9c35f3ca"
        ],
        [
            "assert (HPar : Par P Q S U1) by (apply l12_9_2D with S U2; Perp).",
            "VernacExtend",
            "218fbae6eadd6805c1da305ba953ff69e9e6a303"
        ],
        [
            "elim HPar; clear HPar; intro HPar; spliter; Col.",
            "VernacExtend",
            "417d815a7578f73d22cd1461218e807e87240100"
        ],
        [
            "exfalso; apply HPar; exists Q; Col.",
            "VernacExtend",
            "639339693f60f893c947031fdf355febfeeae5b2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; elim (perp_not_col2 S U1 Q QX'); Perp; intro H; apply H; Col; clear H.",
            "VernacExtend",
            "8479811dc9e776a898d721cec09e1e7eab5ef193"
        ],
        [
            "assert (HPar : Par P Q S U1) by (apply l12_9_2D with S U2; Perp).",
            "VernacExtend",
            "218fbae6eadd6805c1da305ba953ff69e9e6a303"
        ],
        [
            "elim HPar; clear HPar; intro HPar; spliter; Col.",
            "VernacExtend",
            "417d815a7578f73d22cd1461218e807e87240100"
        ],
        [
            "exfalso; apply HPar; exists P; Col.",
            "VernacExtend",
            "6021df1916b82e1d2a568a83bb0d32dd55ff3614"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Cong_4 O E PX QX S U1 P Q) by (assert_diffs; apply cong_3_2_cong_4; Col).",
            "VernacExtend",
            "4bd597cc73040888aa42ab2898632a35225b604c"
        ],
        [
            "unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "fbe9f9b702f17cda9a3c491ace325fcb50bb962e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_distance_formula : forall O E E' S U1 U2 P Q PX PY QX QY PQ PQ2 PXMQX PYMQY PXMQX2 PYMQY2 F, Cd O E S U1 U2 P PX PY -> Cd O E S U1 U2 Q QX QY -> Is_length O E E' P Q PQ -> Prod O E E' PQ PQ PQ2 -> Diff O E E' PX QX PXMQX -> Prod O E E' PXMQX PXMQX PXMQX2 -> Diff O E E' PY QY PYMQY -> Prod O E E' PYMQY PYMQY PYMQY2 -> Sum O E E' PXMQX2 PYMQY2 F -> PQ2 = F.",
            "VernacStartTheoremProof",
            "52d53699351e9e56405bb191897f154a24322359"
        ],
        [
            "intros O E E' S U1 U2 P Q PX PY QX QY PQ PQ2 PXMQX PYMQY PXMQX2 PYMQY2 F.",
            "VernacExtend",
            "a22c8cf25ac31bbd129cb8ae39f1fa78794d623a"
        ],
        [
            "intros HCd1 HCd2 HPQ HPQ2 HPXMQX HPXMQX2 HPYMQY HPYMQY2 HF.",
            "VernacExtend",
            "a1d5fc2776c27dc43bba318223d4e6904996b04c"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HPXMQX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "fabf2c9dc0e5606b79e9fb00ebcdc9dc37f41548"
        ],
        [
            "assert (HCol1 : Col O E PX) by (apply Cd_Col in HCd1; spliter; Col).",
            "VernacExtend",
            "942a1d0ffe1ba0c0d24d9a7472a3b60300b7fb1d"
        ],
        [
            "assert (HCol2 : Col O E QX) by (apply Cd_Col in HCd2; spliter; Col).",
            "VernacExtend",
            "388580ce6b35cf6fcae81b2ba7ceb45c773219ad"
        ],
        [
            "assert (HCol3 : Col O E PY) by (apply Cd_Col in HCd1; spliter; Col).",
            "VernacExtend",
            "7d824c572a14643b415b6aa5c54a0e8134342799"
        ],
        [
            "assert (HCol4 : Col O E QY) by (apply Cd_Col in HCd2; spliter; Col).",
            "VernacExtend",
            "f8a95e1771f69f7a7d011b60d8aa4a92f47b8256"
        ],
        [
            "destruct (is_length_exists O E E' PX QX) as [PXQX HPXQX]; Col.",
            "VernacExtend",
            "1dc81c08680cda68e8cff3294f984a71c8e90067"
        ],
        [
            "assert (HCol5 : Col O E PXQX).",
            "VernacExtend",
            "3c17287458a5b970bd8f69d7164fe1c5d628575b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Is_length, Length in HPXQX; induction HPXQX; spliter; treat_equalities; Col.",
            "VernacExtend",
            "27b7719bf4f19ac0dcb11f65e125d2cee7befebf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC PXQX PXQX) as [PXQX2 HPXQX2]; Col.",
            "VernacExtend",
            "b44e833a2dd9b146269971dbad8392e3c0dd32a9"
        ],
        [
            "assert (PXQX2 = PXMQX2) by (apply l16_9_2 with O E E' PX QX PXQX PXMQX; Col).",
            "VernacExtend",
            "b90a45245d9b3f8e8041375d60040a729648c09a"
        ],
        [
            "destruct (is_length_exists O E E' PY QY) as [PYQY HPYQY]; Col.",
            "VernacExtend",
            "2c66e5c78174759d4d37dae3f1cd143299e20ef5"
        ],
        [
            "assert (HCol6 : Col O E PYQY).",
            "VernacExtend",
            "9a5c847a6e02a72a2d53d640e0eb61c71233848f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Is_length, Length in HPYQY; induction HPYQY; spliter; treat_equalities; Col.",
            "VernacExtend",
            "3233854721570be8f94c6237422fca9f04f5fa5b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC PYQY PYQY) as [PYQY2 HPYQY2]; Col.",
            "VernacExtend",
            "21479cacabee00550cd60ad9920a4005c591c888"
        ],
        [
            "assert (PYQY2 = PYMQY2) by (apply l16_9_2 with O E E' PY QY PYQY PYMQY; Col).",
            "VernacExtend",
            "a62bdbed1db8e4b0f4eb8325909506398df2e620"
        ],
        [
            "treat_equalities; apply sum_uniqueness with O E E' PXQX2 PYQY2; auto; clear HF; clear F.",
            "VernacExtend",
            "88565969b1cc79ea2401c82c79b8e5edf077b111"
        ],
        [
            "clear HPXMQX2; clear HPXMQX; clear PXMQX; clear HPYMQY2; clear HPYMQY; clear PYMQY.",
            "VernacExtend",
            "13cf7e9b9d8e323603590b76c618e6788aab1f83"
        ],
        [
            "assert (HCs : Cs O E S U1 U2) by (unfold Cd in HCd1; spliter; auto).",
            "VernacExtend",
            "26a983bd0cbf15251a16475280a3d3079c4617c7"
        ],
        [
            "destruct (point_of_coordinates O E S U1 U2 PX QY) as [R HCd3]; Col.",
            "VernacExtend",
            "1bdb198b1a7c199cf4ac0bec46da69de2a4f46d8"
        ],
        [
            "elim HPQ; clear HPQ; intro HPQ; [|spliter; treat_equalities; exfalso; Col].",
            "VernacExtend",
            "d0978878b4cbacad89b751af5e57ae1d34f645b0"
        ],
        [
            "elim HPXQX; clear HPXQX; intro HPXQX; [|spliter; treat_equalities; exfalso; Col].",
            "VernacExtend",
            "897bc2f122805e2ba69f7d9eb3152780162f42dc"
        ],
        [
            "elim HPYQY; clear HPYQY; intro HPYQY; [|spliter; treat_equalities; exfalso; Col].",
            "VernacExtend",
            "8745a8df6476e00e55922af0bfc9799887f8cf80"
        ],
        [
            "elim (eq_dec_points P R); intro HPR; [assert (HPR' := HPR); rewrite eq_points_coordinates in HPR; [|apply HCd1|apply HCd3]|]; elim (eq_dec_points Q R); intro HQR; [assert (HQR' := HQR); rewrite eq_points_coordinates in HQR; [|apply HCd2|apply HCd3]| |assert (HQR' := HQR); rewrite eq_points_coordinates in HQR; [|apply HCd2|apply HCd3]|]; apply sum_comm; Col; apply pythagoras with P Q R PYQY PXQX PQ; auto; try intro; try (destruct HPR as [HPX HPY]); try (destruct HQR as [HQX HQY]); treat_equalities; Col; Perp; clear HPYQY2; clear HPXQX2; clear HPQ2; clear HPQ; try clear HPX; try clear HPY; try clear HQX; try clear HQY.",
            "VernacExtend",
            "0aefc18d7d9a57b5355b9fced8b40662e1569713"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = PYQY); treat_equalities.",
            "VernacExtend",
            "671251dca47711f98433613cefaeceddca9be39f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply length_uniqueness with O E E' PY PY; try apply length_id_2; auto.",
            "VernacExtend",
            "bcdeb683a059155df8de9d4cfa62902d2285e4a0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs; apply length_id_2; auto.",
            "VernacExtend",
            "7b0c76a007aa0cb9860321404e7953e4c976619c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = PXQX); treat_equalities.",
            "VernacExtend",
            "c68398a0d983bebc794d1071365723b787da151c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply length_uniqueness with O E E' QX QX; try apply length_id_2; auto.",
            "VernacExtend",
            "4dd21e1e95a1ce029853f1a4f9c66f59ffb46c57"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs; apply length_id_2; auto.",
            "VernacExtend",
            "7b0c76a007aa0cb9860321404e7953e4c976619c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = PYQY); treat_equalities.",
            "VernacExtend",
            "671251dca47711f98433613cefaeceddca9be39f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply length_uniqueness with O E E' PY PY; try apply length_id_2; auto.",
            "VernacExtend",
            "bcdeb683a059155df8de9d4cfa62902d2285e4a0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs; apply length_id_2; auto.",
            "VernacExtend",
            "7b0c76a007aa0cb9860321404e7953e4c976619c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply square_distance_formula_aux with S U1 U2 PX PY QX; auto.",
            "VernacExtend",
            "1c03ac2d837426f07a77d45d77975fdf682286cb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply square_distance_formula_aux with S U2 U1 QY QX PY; auto; try apply coord_exchange_axes; auto; try apply grid_exchange_axes; auto.",
            "VernacExtend",
            "9de7d94210e61e90f15a731a1424f9b21467279f"
        ],
        [
            "apply length_sym; auto.",
            "VernacExtend",
            "6b382a8c6e5c094d96003032f4f30e08ae5824d0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = PXQX); treat_equalities.",
            "VernacExtend",
            "c68398a0d983bebc794d1071365723b787da151c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply length_uniqueness with O E E' QX QX; try apply length_id_2; auto.",
            "VernacExtend",
            "4dd21e1e95a1ce029853f1a4f9c66f59ffb46c57"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs; apply length_id_2; auto.",
            "VernacExtend",
            "7b0c76a007aa0cb9860321404e7953e4c976619c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HCd3 as [H [H' [HRX HRY]]]; clear H; clear H'; destruct HRX as [RX' [HProjp5 HCong5]]; destruct HRY as [RY' [HProjp6 HCong6]]; destruct HCd1 as [H [H' [HPX HPY]]]; clear H; clear H'; destruct HPX as [PX' [HProjp1 HCong1]]; destruct HPY as [PY' [HProjp2 HCong2]]; assert (RX' = PX') by (assert_diffs; apply col_cong_3_cong_3_eq with O E PX S U1; Col); subst; treat_equalities; destruct HCd2 as [H [H' [HQX HQY]]]; clear H; clear H'; destruct HQX as [QX' [HProjp3 HCong3]]; destruct HQY as [QY' [HProjp4 HCong4]]; assert (RY' = QY') by (assert_diffs; apply col_cong_3_cong_3_eq with O E QY S U2; Col); subst; assert (HPerp1 : Perp P R S U1) by (apply projp_projp_perp with PX'; auto); assert (HPerp2 : Perp Q R S U2) by (apply projp_projp_perp with QY'; auto); assert (HPerp3 : Perp U1 S S U2) by (unfold Cs in HCs; spliter; assert_diffs; apply per_perp; Perp).",
            "VernacExtend",
            "7827490ef6d8b3abcf24490880a116e615f4a0ff"
        ],
        [
            "apply perp_per_2; auto; apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "f43c92a2478bac0d2b6ddcf953b827c45f80749b"
        ],
        [
            "apply l12_9_2D with S U2; Perp.",
            "VernacExtend",
            "6d782fe36e08c12f6214a00aceea8120883b0573"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply square_distance_formula_aux with S U2 U1 QY PX PY; auto; try apply coord_exchange_axes; auto; try apply grid_exchange_axes; auto.",
            "VernacExtend",
            "750b6f71742215f4bd8cee88345484677cd3a6c7"
        ],
        [
            "apply length_sym; auto.",
            "VernacExtend",
            "6b382a8c6e5c094d96003032f4f30e08ae5824d0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_sym.",
            "VernacExtend",
            "1abecc1b08c433c8c9e09d602f1d0c68decaa332"
        ],
        [
            "apply square_distance_formula_aux with S U1 U2 QX QY PX; auto.",
            "VernacExtend",
            "0627d81b0fa354fedd24b8215992c31e274449d9"
        ],
        [
            "apply length_sym; auto.",
            "VernacExtend",
            "6b382a8c6e5c094d96003032f4f30e08ae5824d0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma characterization_of_congruence : forall O E E' S U1 U2 A AX AY B BX BY C CX CY D DX DY AXMBX AXMBX2 AYMBY AYMBY2 AB2 CXMDX CXMDX2 CYMDY CYMDY2 CD2, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> Cd O E S U1 U2 D DX DY -> Diff O E E' AX BX AXMBX -> Prod O E E' AXMBX AXMBX AXMBX2 -> Diff O E E' AY BY AYMBY -> Prod O E E' AYMBY AYMBY AYMBY2 -> Sum O E E' AXMBX2 AYMBY2 AB2 -> Diff O E E' CX DX CXMDX -> Prod O E E' CXMDX CXMDX CXMDX2 -> Diff O E E' CY DY CYMDY -> Prod O E E' CYMDY CYMDY CYMDY2 -> Sum O E E' CXMDX2 CYMDY2 CD2 -> (Cong A B C D <-> AB2 = CD2).",
            "VernacStartTheoremProof",
            "15b359671fc6cb0c6ab03f832c74065f3a14e8d2"
        ],
        [
            "intros O E E' S U1 U2 A AX AY B BX BY C CX CY D DX DY.",
            "VernacExtend",
            "b92094ac924af0fa1f361857b0d1ca0d19b15afe"
        ],
        [
            "intros AXMBX AXMBX2 AYMBY AYMBY2 AB2' CXMDX CXMDX2 CYMDY CYMDY2 CD2'.",
            "VernacExtend",
            "5c88046706c2b0738b8868e93920f228b63201c6"
        ],
        [
            "intros HCdA HCdB HCdC HCdD HAXMBX HAXMBX2 HAYMBY HAYMBY2 HAB2.",
            "VernacExtend",
            "5a5f04e80f500adaabf75cbbf6e41ba680bdc88d"
        ],
        [
            "intros HCXMDX HCXMDX2 HCYMDY HCYMDY2 HCD2.",
            "VernacExtend",
            "a9e0747c488f835d7831df770a3854a7f6da9dab"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HAXMBX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "e84c4e7fdcaf7f8245b7c8b6a3b23b44da8552c3"
        ],
        [
            "destruct (is_length_exists O E E' A B) as [AB HLengthAB]; Col.",
            "VernacExtend",
            "1b066582577d57cc22fa9d43f2799bbe7f66120a"
        ],
        [
            "assert (HColAB : Col O E AB).",
            "VernacExtend",
            "1fc3c4e48b1a2453bfb8c40cb2e88424128404af"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Is_length, Length in *; induction HLengthAB; spliter; treat_equalities; Col.",
            "VernacExtend",
            "1a82a72674f6c6a86d56294833cf44cda695ba21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC AB AB) as [AB2 HLengthAB2]; Col.",
            "VernacExtend",
            "85445003024187789ac3624b2cd37c2ebf414afc"
        ],
        [
            "assert (AB2 = AB2').",
            "VernacExtend",
            "2051262f0563c81b0818bb6b72877a0a0407cb46"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply square_distance_formula with O E E' S U1 U2 A B AX AY BX BY AB AXMBX AYMBY AXMBX2 AYMBY2; auto.",
            "VernacExtend",
            "4f687b132c557a37cd33d34717a5e31d91dd1fbd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; clear HAB2; clear HAYMBY2; clear HAYMBY; clear HAXMBX2; clear HAXMBX; clear HCdA; clear HCdB.",
            "VernacExtend",
            "7d99ac633c596517f8df4b85d22661034b54edc3"
        ],
        [
            "destruct (is_length_exists O E E' C D) as [CD HLengthCD]; Col.",
            "VernacExtend",
            "248506da2275faff9b9b20ef965a434719b4e908"
        ],
        [
            "assert (HColCD : Col O E CD).",
            "VernacExtend",
            "56f50c2ea46c9797d1787fe37eac420f356de784"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Is_length, Length in *; induction HLengthCD; spliter; treat_equalities; Col.",
            "VernacExtend",
            "818f041e730aace88df443d59552c88a7319ebdf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC CD CD) as [CD2 HLengthCD2]; Col.",
            "VernacExtend",
            "160e8c4e7faadec2f8194432398086023aaecbca"
        ],
        [
            "assert (CD2 = CD2').",
            "VernacExtend",
            "90f5729c86e6185b65f3e9d69f9c1b3aa4e332b2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply square_distance_formula with O E E' S U1 U2 C D CX CY DX DY CD CXMDX CYMDY CXMDX2 CYMDY2; auto.",
            "VernacExtend",
            "b0b1ae396f56caa3642749eb1491cb7ccf41a440"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; clear HCD2; clear HCYMDY2; clear HCYMDY; clear HCXMDX2; clear HCXMDX; clear HCdC; clear HCdD.",
            "VernacExtend",
            "ae215a1171fa7810d2e87fb7525bfc61df426e7c"
        ],
        [
            "split; [intro HCong|intro; treat_equalities].",
            "VernacExtend",
            "e36d50731ab3d2e68b3fbe9b8f88b720fa62b53d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Cong O AB O CD).",
            "VernacExtend",
            "11df39bd1c1927c25095b4a5d1cdcea0fd803f67"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Is_length, Length in *; induction HLengthAB; [|spliter; treat_equalities; exfalso; apply HNC; Col]; induction HLengthCD; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
            "VernacExtend",
            "25b26c64c595a8215293c9efc29deb1a5f2b0b2f"
        ],
        [
            "spliter; apply cong_transitivity with A B; trivial.",
            "VernacExtend",
            "77338d40db9fb19dc859318a7327a82050eb30ba"
        ],
        [
            "apply cong_transitivity with C D; Cong.",
            "VernacExtend",
            "bff5b3aa387bb8d59555ad1506791884c2fc4d6c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear HLengthAB; clear HLengthCD; clear HCong; rename H into HCong.",
            "VernacExtend",
            "c107843b3b0fdd688a12c4a6bd9419bec416d004"
        ],
        [
            "assert (H : Col O AB CD) by (assert_diffs; ColR).",
            "VernacExtend",
            "b01d239aa5e09543f0a813d22d3783e43f37103a"
        ],
        [
            "elim (l7_20 O AB CD); Col; clear H; clear HCong; intro HMid; treat_equalities.",
            "VernacExtend",
            "03689977470f989822ad10d5ae00e43fdf563cdf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniqueness with O E E' AB AB; auto.",
            "VernacExtend",
            "a53a959df1ad57345de14a66f8c1f3cb4d72a621"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HOpp1 : Opp O E E' AB CD) by (apply midpoint_opp; unfold Ar2; auto; repeat (split; Col)).",
            "VernacExtend",
            "5b20a4701b65f7d59a0eb6edad816b113b944744"
        ],
        [
            "clear HMid; destruct (opp_exists O E E' HNC E) as [ME HOpp2]; Col.",
            "VernacExtend",
            "f73d858298bd172a645562b017128ce15a617a7a"
        ],
        [
            "assert (Prod O E E' AB ME CD) by (apply opp_prod; auto).",
            "VernacExtend",
            "6b882807ab86e8516e001bd4849aee8b71a4aac5"
        ],
        [
            "assert (HXMY2' : Prod O E E' CD CD AB2).",
            "VernacExtend",
            "35202cc289b9f6ee826e1e55c253339e6047fb75"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with AB ME AB; auto.",
            "VernacExtend",
            "847b6a37e7659d5f083f54ddf9e2f932bc6c4fe1"
        ],
        [
            "apply prod_assoc2 with ME AB E; try apply prod_1_l; Col; apply prod_comm; auto.",
            "VernacExtend",
            "1f7db7744e5cfbc0f376a43f1a0fad2c3d4a5b18"
        ],
        [
            "apply opp_prod; auto; apply opp_comm; auto.",
            "VernacExtend",
            "a660bd8606b03231c15b10493720bf308c852079"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply prod_uniqueness with O E E' CD CD; auto.",
            "VernacExtend",
            "0c72dbb6db174dddffee2567f55eb4e78722e380"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HLengthAB; clear HLengthAB; intro HLengthAB; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
            "VernacExtend",
            "ae55ee46947c6f9d1a5143a37e3cc51ae1a67636"
        ],
        [
            "elim HLengthCD; clear HLengthCD; intro HLengthCD; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
            "VernacExtend",
            "423e41abf8e9e26f80db0cb52704b824ed5bacc1"
        ],
        [
            "elim (eq_squares_eq_or_opp O E E' AB CD AB2); auto; intro HOpp; treat_equalities; [apply length_eq_cong_1 with O E E' AB; auto|].",
            "VernacExtend",
            "62d060162c50af4f8c72dfa39d1dae8aa7cca634"
        ],
        [
            "unfold Length, LeP, LtP in *; spliter; apply opp_midpoint in HOpp.",
            "VernacExtend",
            "d13553bd65b60c22ed026b34a9c07bee94c8ff46"
        ],
        [
            "unfold Midpoint in *; spliter.",
            "VernacExtend",
            "94cfb4754c2f0312d41786041551ef933e840506"
        ],
        [
            "apply cong_transitivity with O CD; trivial.",
            "VernacExtend",
            "e20579b5bcfdc3e5236236f5bf4b6eada8df0be4"
        ],
        [
            "apply cong_transitivity with O AB; Cong.",
            "VernacExtend",
            "577850193313a13639a6b8fe553fd2c6626583cd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_betCood_aux : forall O E S U1 U2 A AX AY B BX BY C CX CY, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> Bet A B C -> Bet AX BX CX.",
            "VernacStartTheoremProof",
            "0f0e86d5761e0eeeed9a44771ee9cefbc7d84414"
        ],
        [
            "intros O E S U1 U2 A AX AY B BX BY C CX CY HCdA HCdB HCdC HBet.",
            "VernacExtend",
            "ed33a090714d7a9b4df424f37ece7aa1a48d49bc"
        ],
        [
            "destruct (parallel_existence S U1 A) as [A1 [A2 [HDiff4 [HPar HCol]]]]; try (intro; unfold Cd, Cs in *; spliter; treat_equalities; intuition).",
            "VernacExtend",
            "cd99a09dd42e45be0dee71cce667d09374f6dbc6"
        ],
        [
            "assert (HAX' := HCdA).",
            "VernacExtend",
            "157ebbb5b3c3d86b16d3168a2311431baa58e50c"
        ],
        [
            "destruct HAX' as [H [H' [HAX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "d033b6baccb3a765b11039ddcc398c270099257f"
        ],
        [
            "destruct HAX' as [AX' [HProjpAX' HCongAX']].",
            "VernacExtend",
            "690fbe39d275d514b6a28b45360e5d08520d8f40"
        ],
        [
            "assert (HA : Projp AX' A A1 A2).",
            "VernacExtend",
            "e5f828d85bcec963ba96f711992aa65eb4233708"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; auto; induction (eq_dec_points A AX'); [treat_equalities; right|left; split]; Col.",
            "VernacExtend",
            "f86802badbbc9ec1060acfd90c7ab902552ccadf"
        ],
        [
            "apply par_perp__perp with S U1; auto.",
            "VernacExtend",
            "8b5944c7b11da9b1329755eb8434eceee34b2562"
        ],
        [
            "destruct HProjpAX' as [Hclear HAX']; clear Hclear.",
            "VernacExtend",
            "fdba092cb841711ff01357917e93a89cd758ae33"
        ],
        [
            "induction HAX'; spliter; Perp; intuition.",
            "VernacExtend",
            "1d8f2df96ecbb927ce24e1f63cc7b85a88814215"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HBX' := HCdB).",
            "VernacExtend",
            "10176f8b4f3306f91bbf2aff6ab1adbce03cc1d9"
        ],
        [
            "destruct HBX' as [H [H' [HBX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "eba933b16951f283e74d32bceddcf4087d0e401a"
        ],
        [
            "destruct HBX' as [BX' [HProjpBX' HCongBX']].",
            "VernacExtend",
            "dfcc373ceba77f4bc46d0cb2c5daa03dd29a606f"
        ],
        [
            "destruct (exists_projp A1 A2 BX') as [BX'' HBX'']; auto.",
            "VernacExtend",
            "f3c37e2e3bce1052a8e9cf8bf4083a9b784f95c4"
        ],
        [
            "assert (HCX' := HCdC).",
            "VernacExtend",
            "b8928d3a4c2353562846c17ac25bf6170613485f"
        ],
        [
            "destruct HCX' as [H [H' [HCX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "5325a347a9f893b5d4254487027b00b458b57c77"
        ],
        [
            "destruct HCX' as [CX' [HProjpCX' HCongCX']].",
            "VernacExtend",
            "0bee77f9be0e6bded8c4c541f8a791df4a194b63"
        ],
        [
            "destruct (exists_projp A1 A2 CX') as [CX'' HCX'']; auto.",
            "VernacExtend",
            "903ed409d6f46ad67662cca10956d45a786bba34"
        ],
        [
            "assert (HDiff : O <> E) by (unfold Cd, Cs in *; spliter; auto).",
            "VernacExtend",
            "9929ae80cebc451eb7687bd0158630c635cc08c9"
        ],
        [
            "assert (HColAX : Col O E AX).",
            "VernacExtend",
            "a4e774e4526f2cb61de56f1d04cc6ec1dba927b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Cd in *; destruct HCdA as [H [H' [[PX [HProjp HCong]] H'']]].",
            "VernacExtend",
            "76c57a587c8873335ef9e80ab367ec9e1f991bec"
        ],
        [
            "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
            "VernacExtend",
            "0eaa52726d05edaf967ed034818653ddf6b84b4e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HColBX : Col O E BX).",
            "VernacExtend",
            "7ff0d1fe1850d793dfb353b1bac9fa5d42091016"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Cd in *; destruct HCdB as [H [H' [[PX [HProjp HCong]] H'']]].",
            "VernacExtend",
            "2c09cd3edc676ea63fa81d44c0124acdd460c2e9"
        ],
        [
            "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
            "VernacExtend",
            "0eaa52726d05edaf967ed034818653ddf6b84b4e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HColCX : Col O E CX).",
            "VernacExtend",
            "83fa4ab43cc852bda2cadbd145bfcc63294e24a2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Cd in *; destruct HCdC as [H [H' [[PX [HProjp HCong]] H'']]].",
            "VernacExtend",
            "bd59e864dae4886108e68089571959734e407e85"
        ],
        [
            "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
            "VernacExtend",
            "0eaa52726d05edaf967ed034818653ddf6b84b4e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l4_6 with AX' BX' CX'.",
            "VernacExtend",
            "b27e93067559666a64e9bcf75921ae9c761f44bf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply projp_preserves_bet with A B C S U1; auto.",
            "VernacExtend",
            "8248d8cc47fc763a15e8301e44e43c83ea9410dc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Cong_5 O E AX BX CX S U1 AX' BX' CX') by (apply cong_3_3_cong_5; assert_diffs; auto).",
            "VernacExtend",
            "c6bf51a0e370321f1f36b73ffa3a50ec24cf61a0"
        ],
        [
            "unfold Cong_5 in *; spliter; repeat (split; Cong).",
            "VernacExtend",
            "6a00520254a76b9199c5133e3757bad13dafa212"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_betCood : forall O E S U1 U2 A AX AY B BX BY C CX CY, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> Bet A B C -> Bet AX BX CX /\\ Bet AY BY CY.",
            "VernacStartTheoremProof",
            "e21cdb97330b1c729ec69d0139e2ca730db71522"
        ],
        [
            "intros O E S U1 U2 A AX AY B BX BY C CX CY HCdA HCdB HCdC HBet.",
            "VernacExtend",
            "ed33a090714d7a9b4df424f37ece7aa1a48d49bc"
        ],
        [
            "split; [apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY|]; auto.",
            "VernacExtend",
            "f3d0979e3bf0b8b9f5a0f1f9822bfb98be6c918e"
        ],
        [
            "apply bet_betCood_aux with O E S U2 U1 A AX B BX C CX; auto; apply coord_exchange_axes; auto.",
            "VernacExtend",
            "466c36ca1e5280f0f47d8233c785e1373af300b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma characterization_of_betweenness_aux : forall O E E' S U1 U2 A AX AY B BX BY C CX CY BXMAX CXMAX AB AC IAC T, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> ~ Col O E E' -> Col O E AX -> Col O E BX -> Col O E CX -> Col O E BXMAX -> Col O E CXMAX -> Col O E T -> Col O E AB -> Col O E AC -> Col O E IAC -> Diff O E E' BX AX BXMAX -> Diff O E E' CX AX CXMAX -> Length O E E' A B AB -> Length O E E' A C AC -> Prod O E E' T AC AB -> Prod O E E' IAC AC E -> Bet A B C -> A <> B -> A <> C -> B <> C -> Prod O E E' T CXMAX BXMAX.",
            "VernacStartTheoremProof",
            "b6a86e7c19fe7cb406ada32cc72835a5a7e37c69"
        ],
        [
            "intros O E E' S U1 U2 A AX AY B BX BY C CX CY BXMAX CXMAX AB AC IAC T.",
            "VernacExtend",
            "177d3bb69bbd295605050e1e187a70645c61847d"
        ],
        [
            "intros HCdA HCdB HCdC HNC HColAX HColBX HColCX HColBXMAX HColCXMAX HColT.",
            "VernacExtend",
            "99d0e5137107a5a9be7e78af841f77371f235920"
        ],
        [
            "intros HColAB HColAC HColIAC HBXMAX HCXMAX HAB HAC HT HIAC HBet HDiff1 HDiff2 HDiff3.",
            "VernacExtend",
            "bd0813a3bf7a35a9889c4cc586c99af557de6dc8"
        ],
        [
            "destruct (parallel_existence S U1 A) as [A1 [A2 [HDiff4 [HPar HCol]]]]; try (intro; unfold Cd, Cs in *; spliter; treat_equalities; intuition).",
            "VernacExtend",
            "cd99a09dd42e45be0dee71cce667d09374f6dbc6"
        ],
        [
            "assert (HAX' := HCdA).",
            "VernacExtend",
            "157ebbb5b3c3d86b16d3168a2311431baa58e50c"
        ],
        [
            "destruct HAX' as [H [H' [HAX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "d033b6baccb3a765b11039ddcc398c270099257f"
        ],
        [
            "destruct HAX' as [AX' [HProjpAX' HCongAX']].",
            "VernacExtend",
            "690fbe39d275d514b6a28b45360e5d08520d8f40"
        ],
        [
            "assert (HA : Projp AX' A A1 A2).",
            "VernacExtend",
            "e5f828d85bcec963ba96f711992aa65eb4233708"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; auto; induction (eq_dec_points A AX'); [treat_equalities; right|left; split]; Col.",
            "VernacExtend",
            "f86802badbbc9ec1060acfd90c7ab902552ccadf"
        ],
        [
            "apply par_perp__perp with S U1; auto.",
            "VernacExtend",
            "8b5944c7b11da9b1329755eb8434eceee34b2562"
        ],
        [
            "destruct HProjpAX' as [Hclear HAX']; clear Hclear.",
            "VernacExtend",
            "fdba092cb841711ff01357917e93a89cd758ae33"
        ],
        [
            "induction HAX'; spliter; Perp; intuition.",
            "VernacExtend",
            "1d8f2df96ecbb927ce24e1f63cc7b85a88814215"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HBX' := HCdB).",
            "VernacExtend",
            "10176f8b4f3306f91bbf2aff6ab1adbce03cc1d9"
        ],
        [
            "destruct HBX' as [H [H' [HBX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "eba933b16951f283e74d32bceddcf4087d0e401a"
        ],
        [
            "destruct HBX' as [BX' [HProjpBX' HCongBX']].",
            "VernacExtend",
            "dfcc373ceba77f4bc46d0cb2c5daa03dd29a606f"
        ],
        [
            "destruct (exists_projp A1 A2 BX') as [BX'' HBX'']; auto.",
            "VernacExtend",
            "f3c37e2e3bce1052a8e9cf8bf4083a9b784f95c4"
        ],
        [
            "assert (HCX' := HCdC).",
            "VernacExtend",
            "b8928d3a4c2353562846c17ac25bf6170613485f"
        ],
        [
            "destruct HCX' as [H [H' [HCX' H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "5325a347a9f893b5d4254487027b00b458b57c77"
        ],
        [
            "destruct HCX' as [CX' [HProjpCX' HCongCX']].",
            "VernacExtend",
            "0bee77f9be0e6bded8c4c541f8a791df4a194b63"
        ],
        [
            "destruct (exists_projp A1 A2 CX') as [CX'' HCX'']; auto.",
            "VernacExtend",
            "903ed409d6f46ad67662cca10956d45a786bba34"
        ],
        [
            "elim (col_dec A B BX''); intro HABBX''.",
            "VernacExtend",
            "65ef2ec6c1d3e9ade4c1e6458ee8945bf5ea2065"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points A BX''); intro HABX''; treat_equalities.",
            "VernacExtend",
            "522abd122bccdb012708f5348fb989269a286326"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (AX' = BX').",
            "VernacExtend",
            "ff925fa13c8a8ca2ea34af4acd4cb3311db7a8d8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (line_dec S U1 A1 A2); intro HLine.",
            "VernacExtend",
            "8d5a05d8428b6b65bfc41e0fab095ba4eda222fc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A = AX') by (apply col_projp_eq with S U1; auto; assert_diffs; spliter; ColR).",
            "VernacExtend",
            "43e58cc56827d3188429c277bbdc32085d204de3"
        ],
        [
            "treat_equalities; apply eq_sym; apply col_projp_eq with A1 A2; auto.",
            "VernacExtend",
            "54462be389444d3869ab8b783511e002c0283f18"
        ],
        [
            "assert (Col S U1 BX') by (apply projp_col with B; auto).",
            "VernacExtend",
            "a24e09c9658cc05eb3e71d4631fecf199d2d8437"
        ],
        [
            "assert_diffs; spliter; ColR.",
            "VernacExtend",
            "b55fe0c46f55e5d55b394d5c0b340ebd2aeed35a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol' : Col A AX' BX') by (apply projp2_col with A1 A2; auto).",
            "VernacExtend",
            "d85e8b6b72d788a81e555e95c2da5096f761ba02"
        ],
        [
            "assert (HParS : Par_strict S U1 A1 A2); [|clear HLine].",
            "VernacExtend",
            "1009961056fe64aa4c877b70a6cda9c2027497db"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (col_dec S U1 A1); intro HCol''; [apply par_not_col_strict with A2|apply par_not_col_strict with A1]; Col ; try (intro; apply HLine); Col.",
            "VernacExtend",
            "05c39456231406127e955867e7f0f2a752e6ac72"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l6_21 with S U1 A AX'; Col; [| |apply l4_13 with O E AX|apply l4_13 with O E BX]; Col; intro; treat_equalities; apply HParS; exists A; split; Col; apply col_permutation_2; apply l4_13 with O E AX; Col.",
            "VernacExtend",
            "a4ecc3fcd8f543c5658501b690370a84ab24d9d3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; assert (HPerp : Perp A C S U1).",
            "VernacExtend",
            "b90308df09204f1288d77f2e8b0cdc26ca5f0682"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol' : Col AX' A B) by (apply projp2_col with S U1; auto).",
            "VernacExtend",
            "64f2c7dd1c79f784688056d022a84d99e94729a9"
        ],
        [
            "assert_cols; apply perp_sym; apply perp_col0 with A B; try apply projp_projp_perp with AX'; Col.",
            "VernacExtend",
            "76059f7071a90b205069e6849884e2cf40341432"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (AX' = CX') by (apply perp_projp2_eq with A C S U1; auto).",
            "VernacExtend",
            "15dd6f0754b9d36ddd6eed72fd41de4e837f2303"
        ],
        [
            "treat_equalities; assert (AX = BX).",
            "VernacExtend",
            "677342ba81f6e252601ff5f98c75ceab81833333"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply col_cong_3_cong_3_eq with S U1 AX' O E; Cong.",
            "VernacExtend",
            "bba9f2bd267a6c49dcae31be3c031622be62baca"
        ],
        [
            "apply l4_13 with O E AX; auto.",
            "VernacExtend",
            "468afb3c87ccfbd3662a4616dd7afb4f03f52d45"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (AX = CX).",
            "VernacExtend",
            "ac4d49ba0c774c0e44aa7b0c56a155fea962e67c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply col_cong_3_cong_3_eq with S U1 AX' O E; Cong.",
            "VernacExtend",
            "bba9f2bd267a6c49dcae31be3c031622be62baca"
        ],
        [
            "apply l4_13 with O E AX; auto.",
            "VernacExtend",
            "468afb3c87ccfbd3662a4616dd7afb4f03f52d45"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; assert (O = BXMAX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col); assert (O = CXMAX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col); treat_equalities; apply prod_0_r; unfold Prod, Ar2 in *; spliter; Col.",
            "VernacExtend",
            "44bcf1946aa63fa56094e57bb5acfa24059282ec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (B = BX'').",
            "VernacExtend",
            "e7829c7aac2e1f1ec6f6bb01a59dfc8b9eb1b48e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_par_projp2_eq with A1 A2 S U1 BX'; Par.",
            "VernacExtend",
            "3ea031f3ebf197212fcfde555bfcdc26e1379a73"
        ],
        [
            "assert (Col A1 A2 BX'') by (apply projp_col with BX'; auto); ColR.",
            "VernacExtend",
            "54c65767a578192338767d9f31c32dca56b972f2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (C = CX'').",
            "VernacExtend",
            "243868aede9e382388f6cec97c36c9edc19eb1fa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_par_projp2_eq with A1 A2 S U1 CX'; Par; assert_cols.",
            "VernacExtend",
            "10b008c0e90782fdc5804383369be2d53bb09999"
        ],
        [
            "assert (Col A1 A2 BX'') by (apply projp_col with BX'; auto); ColR.",
            "VernacExtend",
            "54c65767a578192338767d9f31c32dca56b972f2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (HElim : LeP O E E' AX BX \\/ LeP O E E' BX AX) by (apply col_2_le_or_ge; Col).",
            "VernacExtend",
            "60bea0e3cb259806f4b1ba4632df5a45cf9c35b5"
        ],
        [
            "elim HElim; clear HElim; intro HLe4.",
            "VernacExtend",
            "ec6a8b66791b1bfaa10ce70bbc6a3d12b436e089"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (length_existence O E E' B A) as [LAB HLAB]; Col.",
            "VernacExtend",
            "96e616d2325e1276128aa2003022d36378378187"
        ],
        [
            "assert (LAXBX : Length O E E' BX AX LAB).",
            "VernacExtend",
            "4019d150d26cec8a34622f5b534c25a81e5a9ffe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with B A; auto.",
            "VernacExtend",
            "b88ef90a52aaaa0e04d85e8b062155e3568ea500"
        ],
        [
            "assert (Cong AX BX AX' BX').",
            "VernacExtend",
            "eccb63608f1ace67230d2c623f2ab89b069982fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX BX S U1 AX' BX' in HCongBX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "cf9d07aadc9cc753ed1c2ea21e339c19007b09ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A B AX' BX').",
            "VernacExtend",
            "d801493e717fffdaeaa9a0f5eedac3f971b08f6a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with B]; auto.",
            "VernacExtend",
            "c5634938f69686c6c33c33a256f349b6f7cfd245"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' BX'; Cong.",
            "VernacExtend",
            "e997c327cd453d526c570b10614da72d901cad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (LAB = BXMAX) by (apply l16_9_1 with O E E' BX AX; Col; left; auto).",
            "VernacExtend",
            "506ae547355acabcf6b468bceea1513b37e3a066"
        ],
        [
            "elim HLe4; clear HLe4; intro HLt; treat_equalities; [|assert (AX' = BX') by (apply col_cong_3_cong_3_eq with O E AX S U1; try intro; treat_equalities; Col); treat_equalities; apply projp_id with AX' A B A1 A2 in HBX''; intuition].",
            "VernacExtend",
            "ca60fb78ef11d9a598de1ce85fd25244412b38f0"
        ],
        [
            "apply bet_lt12_le13 with O E E' AX BX CX in HLt; [|apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY; auto].",
            "VernacExtend",
            "ddd4272a71678256fa7745266aaaee79cd872ded"
        ],
        [
            "destruct (length_existence O E E' C A) as [LAC HLAC]; Col.",
            "VernacExtend",
            "f5fb63ad7f1d269dd5b1e268071c56a33bd5b6da"
        ],
        [
            "assert (LAXCX : Length O E E' CX AX LAC).",
            "VernacExtend",
            "84e24fbe71b934d82a787196c69d6939ae874a22"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with C A; auto.",
            "VernacExtend",
            "97b6a83ca22597787d117786346308679bf70709"
        ],
        [
            "assert (Cong AX CX AX' CX').",
            "VernacExtend",
            "58c354187d173f6ac6fad1e1fb2cad8244d58775"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX CX S U1 AX' CX' in HCongCX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "6b55a5866f9ddc8fc5630bd2f82b5184accb978d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A C AX' CX').",
            "VernacExtend",
            "c80879c23f1f6d888e040c146bd7de6638cd0b31"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with C]; auto.",
            "VernacExtend",
            "1a96077ec331ea27d2c521a0edcea792004e7009"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' CX'; Cong.",
            "VernacExtend",
            "2f8e6bf9837323a4013b11f3cfa3c300b2446a5c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (LAC = CXMAX) by (apply l16_9_1 with O E E' CX AX; Col; left; auto).",
            "VernacExtend",
            "28df2aa87c083ffbe8886dc5f5f31058858a7eae"
        ],
        [
            "assert (AB = LAB).",
            "VernacExtend",
            "2c5330a40c5e7abb99a4a2b3ad8be227c1fdd840"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_uniqueness with O E E' A B; auto; apply length_eq_cong_2 with B A; Cong.",
            "VernacExtend",
            "ca10d963f56f7133a7d6781991670306fb230fb1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (AC = LAC); treat_equalities.",
            "VernacExtend",
            "186400001a2ac19b064d0e3ad86255314fca0c9b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_uniqueness with O E E' A C; auto; apply length_eq_cong_2 with C A; Cong.",
            "VernacExtend",
            "8a9a2214b1211e5d1e986341928fff3d11e40ecf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (length_existence O E E' A B) as [LAB HLAB]; Col.",
            "VernacExtend",
            "d6e4b525a7d38bc8eecddf72f563847255f038e8"
        ],
        [
            "assert (LAXBX : Length O E E' AX BX LAB).",
            "VernacExtend",
            "f43c91a889e59cc9317a6b15ef35e2976c11bded"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A B; auto.",
            "VernacExtend",
            "4099a423bb8efbc80fa41afd82de99f434959560"
        ],
        [
            "assert (Cong AX BX AX' BX').",
            "VernacExtend",
            "eccb63608f1ace67230d2c623f2ab89b069982fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX BX S U1 AX' BX' in HCongBX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "cf9d07aadc9cc753ed1c2ea21e339c19007b09ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A B AX' BX').",
            "VernacExtend",
            "d801493e717fffdaeaa9a0f5eedac3f971b08f6a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with B]; auto.",
            "VernacExtend",
            "c5634938f69686c6c33c33a256f349b6f7cfd245"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' BX'; Cong.",
            "VernacExtend",
            "e997c327cd453d526c570b10614da72d901cad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_exists O E E' AX BX) as [AXMBX HAXMBX]; Col.",
            "VernacExtend",
            "a3e9660e4fb653a030a6459bc38dc83d9bb2de27"
        ],
        [
            "assert (LAB = AXMBX) by (apply l16_9_1 with O E E' AX BX; Col; left; auto).",
            "VernacExtend",
            "b92becc098eb6535612fd0ba66f5fb1114d5281d"
        ],
        [
            "elim HLe4; clear HLe4; intro HLt; treat_equalities; [|assert (AX' = BX') by (apply col_cong_3_cong_3_eq with O E BX S U1; try intro; treat_equalities; Col); treat_equalities; apply projp_id with AX' A B A1 A2 in HBX''; intuition].",
            "VernacExtend",
            "77c09639d9a11724a94c87e3a86ce74f68ccc1a5"
        ],
        [
            "apply bet_lt21_le31 with O E E' AX BX CX in HLt; [|apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY; auto].",
            "VernacExtend",
            "fd578c4256b5e9961c75533f1f1541e0975c4334"
        ],
        [
            "destruct (length_existence O E E' A C) as [LAC HLAC]; Col.",
            "VernacExtend",
            "bcc293adce8ce70be55b76f3dd696ae4dff766b2"
        ],
        [
            "assert (LAXCX : Length O E E' AX CX LAC).",
            "VernacExtend",
            "9c96b0a9c6dfbe33d8e32bb0686fe8afa2d978eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A C; auto.",
            "VernacExtend",
            "cc0b8ac73878ea94289ad9fb2492d005c1e3cb0c"
        ],
        [
            "assert (Cong AX CX AX' CX').",
            "VernacExtend",
            "58c354187d173f6ac6fad1e1fb2cad8244d58775"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX CX S U1 AX' CX' in HCongCX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "6b55a5866f9ddc8fc5630bd2f82b5184accb978d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A C AX' CX').",
            "VernacExtend",
            "c80879c23f1f6d888e040c146bd7de6638cd0b31"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with C]; auto.",
            "VernacExtend",
            "1a96077ec331ea27d2c521a0edcea792004e7009"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' CX'; Cong.",
            "VernacExtend",
            "2f8e6bf9837323a4013b11f3cfa3c300b2446a5c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_exists O E E' AX CX) as [AXMCX HAXMCX]; Col.",
            "VernacExtend",
            "a03fd9088dc26454c5b70b2f10bb321fe8cabc95"
        ],
        [
            "assert (LAC = AXMCX) by (apply l16_9_1 with O E E' AX CX; Col; left; auto).",
            "VernacExtend",
            "9b788b766ffb9ea6c54f63970269c0e47e8999a5"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (Opp O E E' BXMAX LAB) by (apply diff_opp with BX AX; auto).",
            "VernacExtend",
            "831357a2e8769e4191bb1963e253c383f21c405b"
        ],
        [
            "assert (Opp O E E' CXMAX LAC) by (apply diff_opp with CX AX; auto).",
            "VernacExtend",
            "54655929ec2962386df4b966f4d953f2375bc9dd"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (AB = LAB) by (apply length_uniqueness with O E E' A B; auto).",
            "VernacExtend",
            "335602c8655ed369fc9ea7de025dd297fef5be10"
        ],
        [
            "assert (AC = LAC) by (apply length_uniqueness with O E E' A C; auto).",
            "VernacExtend",
            "dcacc4e2aacfbeb87eb2304bacac36900d64e744"
        ],
        [
            "treat_equalities; apply prod_assoc2 with AC ME AB; [|apply opp_prod; auto; apply opp_comm| apply opp_prod; auto; apply opp_comm]; auto.",
            "VernacExtend",
            "59539fa9ff69983079f75bc5b1b2791f8f099cd7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (length_existence O E E' A BX'') as [ABX'' HABX'']; Col.",
            "VernacExtend",
            "4407290452c81b62ff26b1844a47bec487b82698"
        ],
        [
            "destruct (length_existence O E E' A CX'') as [ACX'' HACX'']; Col.",
            "VernacExtend",
            "f5aa4e8c6871c440a8d0c595f785dd4576c7667b"
        ],
        [
            "assert (HColABX'' : Col O E ABX'').",
            "VernacExtend",
            "c529b4b45f04da383b4ebeba89639b6eedb7e5ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HABX'' as [H [H' [HElim H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "9664f3da288806f0d41d4d39316cb888abc62b42"
        ],
        [
            "elim HElim; clear HElim; intro HLt; treat_equalities; Col.",
            "VernacExtend",
            "0855ca3b0223a9063f9c5fdbe7ed580ea89334d6"
        ],
        [
            "destruct HLt as [D [HDiff H]]; clear H.",
            "VernacExtend",
            "7ad1f4daa8c4fa1cd209ec6e07bfdcbdaacd6570"
        ],
        [
            "apply diff_ar2 in HDiff; unfold Ar2 in *; spliter; Col.",
            "VernacExtend",
            "4208af6c6f42e9e261c1ac9c43d4a8c814ebaff3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HColACX'' : Col O E ACX'').",
            "VernacExtend",
            "ab8505d31470a44274888848de9c1a9e35c79394"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HACX'' as [H [H' [HElim H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "544ecd4c3eef67be6a67f7b5d4524441aff2371b"
        ],
        [
            "elim HElim; clear HElim; intro HLt; treat_equalities; Col.",
            "VernacExtend",
            "0855ca3b0223a9063f9c5fdbe7ed580ea89334d6"
        ],
        [
            "destruct HLt as [D [HDiff H]]; clear H.",
            "VernacExtend",
            "7ad1f4daa8c4fa1cd209ec6e07bfdcbdaacd6570"
        ],
        [
            "apply diff_ar2 in HDiff; unfold Ar2 in *; spliter; Col.",
            "VernacExtend",
            "4208af6c6f42e9e261c1ac9c43d4a8c814ebaff3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC AB ACX'') as [F HF]; Col.",
            "VernacExtend",
            "c8898283724aa79dd7a61fc11373f503b6b3ea57"
        ],
        [
            "assert (HF' : Prodg O E E' ABX'' AC F).",
            "VernacExtend",
            "3c024d3db2e9bf0ce5519fde2bf7a583a1889d82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply thales with A B C BX'' CX'' AB ACX''; auto.",
            "VernacExtend",
            "7451a890c82b974433ec414696171286fb2f5167"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_cols; auto.",
            "VernacExtend",
            "7c83c7ea1a41fefa2382a0cee9fb8da9f4f6abe8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply projp_col in HBX''; apply projp_col in HCX''; ColR.",
            "VernacExtend",
            "1bf0e79031960d4a2eac1703f5d36d1e6a9e522e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HBX'' as [H HElim1]; clear H; destruct HProjpBX' as [H HElim2]; clear H.",
            "VernacExtend",
            "1d6fb3a3366ef7de9df95e5d01abd9e8759d4ad6"
        ],
        [
            "destruct HCX'' as [H HElim3]; clear H; destruct HProjpCX' as [H HElim4]; clear H.",
            "VernacExtend",
            "3c77b0b98c4e89daa64e8993cd232015f5665e21"
        ],
        [
            "elim HElim1; clear HElim1; intro H; destruct H as [HColBX'' HPerp1]; elim HElim2; clear HElim2; intro H; destruct H as [HColBX' HPerp2]; elim HElim3; clear HElim3; intro H; destruct H as [HColCX'' HPerp3]; elim HElim4; clear HElim4; intro H; destruct H as [HColCX' HPerp4]; treat_equalities.",
            "VernacExtend",
            "541b3a48b1a94783a82a272b61ffb71f2aae688b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol1 : Par B BX' BX' BX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "155f4c50584ae0f2bdae01b01b60484b895c39f1"
        ],
        [
            "elim HCol1; clear HCol1; intro HCol1; [exfalso; apply HCol1; exists BX'; Col|].",
            "VernacExtend",
            "9df9be904bf5e52b69182d1ad73fc27ab598ce22"
        ],
        [
            "assert (HCol2 : Par C CX' CX' CX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "03f0e008e991144b6c841d4b279a9118c1030fcc"
        ],
        [
            "elim HCol2; clear HCol2; intro HCol2; [exfalso; apply HCol2; exists CX'; Col|].",
            "VernacExtend",
            "3e6520dc31b910d388de35e9613bb12d6a397f06"
        ],
        [
            "left; apply l12_9_2D with A1 A2.",
            "VernacExtend",
            "2d65c4da6bcb0425536a4523b73a3352d7a67bf1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_sym; apply perp_col0 with BX' BX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "bca4dccf299ffd40592250dc1f0437a33f11f15d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_sym; apply perp_col0 with CX' CX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "f8f4a84e617b09a537b98468c373e50f98934784"
        ],
        [
            "intro; treat_equalities; assert_cols; apply HABBX''; ColR.",
            "VernacExtend",
            "167daeb06aa035383641dd820c5c4357e105ead4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol1 : Par B BX' BX' BX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "155f4c50584ae0f2bdae01b01b60484b895c39f1"
        ],
        [
            "elim HCol1; clear HCol1; intro HCol1; [exfalso; apply HCol1; exists BX'; Col|].",
            "VernacExtend",
            "9df9be904bf5e52b69182d1ad73fc27ab598ce22"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply perp_col0 with BX' BX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "bca4dccf299ffd40592250dc1f0437a33f11f15d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol1 : Par B BX' BX' BX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "155f4c50584ae0f2bdae01b01b60484b895c39f1"
        ],
        [
            "elim HCol1; clear HCol1; intro HCol1; [exfalso; apply HCol1; exists BX'; Col|].",
            "VernacExtend",
            "9df9be904bf5e52b69182d1ad73fc27ab598ce22"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply perp_col0 with BX' BX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "bca4dccf299ffd40592250dc1f0437a33f11f15d"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol2 : Par C CX' CX' CX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "03f0e008e991144b6c841d4b279a9118c1030fcc"
        ],
        [
            "elim HCol2; clear HCol2; intro HCol2; [exfalso; apply HCol2; exists CX'; Col|].",
            "VernacExtend",
            "3e6520dc31b910d388de35e9613bb12d6a397f06"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply perp_col0 with CX' CX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "f8f4a84e617b09a537b98468c373e50f98934784"
        ],
        [
            "intro; treat_equalities; assert_cols; apply HABBX''; ColR.",
            "VernacExtend",
            "167daeb06aa035383641dd820c5c4357e105ead4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp; Perp.",
            "VernacExtend",
            "ef67e529731ddb51ade0322830e69ba65270d766"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCol2 : Par C CX' CX' CX'') by (apply par_perp2__par with S U1 A1 A2; Perp).",
            "VernacExtend",
            "03f0e008e991144b6c841d4b279a9118c1030fcc"
        ],
        [
            "elim HCol2; clear HCol2; intro HCol2; [exfalso; apply HCol2; exists CX'; Col|].",
            "VernacExtend",
            "3e6520dc31b910d388de35e9613bb12d6a397f06"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_sym; apply perp_col0 with CX' CX''; Perp; assert_diffs; spliter; Col.",
            "VernacExtend",
            "f8f4a84e617b09a537b98468c373e50f98934784"
        ],
        [
            "intro; treat_equalities; assert_cols; apply HABBX''; ColR.",
            "VernacExtend",
            "167daeb06aa035383641dd820c5c4357e105ead4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; apply l12_9_2D with A1 A2; Perp.",
            "VernacExtend",
            "3d2c3ce4b946ffb3397ba9b55bf80c1fa61f899f"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "apply perp_sym; apply par_perp__perp with S U1; Perp.",
            "VernacExtend",
            "29feb62820ab73806ab9d32add3c7901598207a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply HABBX''; Col.",
            "VernacExtend",
            "27ec848f5fd91c46bb8ec8b6b6e7376dfa13a797"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply HABBX''; Col.",
            "VernacExtend",
            "27ec848f5fd91c46bb8ec8b6b6e7376dfa13a797"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply HABBX''; Col.",
            "VernacExtend",
            "27ec848f5fd91c46bb8ec8b6b6e7376dfa13a797"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "right; auto.",
            "VernacExtend",
            "1f0a695ab06b3950e6a7adf329d300b1f859fe9d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim HF'; clear HF'; intro HF'; [|destruct HF' as [HFalse H]; clear H; exfalso; apply HFalse; do 3 (split; Col)].",
            "VernacExtend",
            "87d33541e63cb829a01ef1d26f765adbf96f64d5"
        ],
        [
            "assert (HProd : Prod O E E' T ACX'' ABX'').",
            "VernacExtend",
            "f14a9b84465062458a07b41187e07f0f3316d94d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HColF : Col O E F) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "bd145adee7b30c91e24fcd3a6efc3afb9993d824"
        ],
        [
            "destruct (prod_exists O E E' HNC F IAC) as [G HG]; Col.",
            "VernacExtend",
            "5b31c7661d294a1a8df5a1a0c10f482ce598ad79"
        ],
        [
            "assert (Prod O E E' ABX'' E G) by (apply prod_assoc2 with AC IAC F; auto; apply prod_comm; auto).",
            "VernacExtend",
            "1ac7c0feb09199e2eff55eac950bbedec1e2691a"
        ],
        [
            "assert (Prod O E E' ACX'' T G).",
            "VernacExtend",
            "c79fdfcf772c334e51d16ffbadcf1a3b5670dc5f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc2 with AB IAC F; auto; apply prod_comm; auto.",
            "VernacExtend",
            "a8a8cabaf4c9eaca0db15a0535b2b1122c283b48"
        ],
        [
            "apply prod_assoc2 with AC T E; auto; apply prod_comm; auto.",
            "VernacExtend",
            "9433dc2cd24b7d81a4e5ba4cabeaf98c260ed7ca"
        ],
        [
            "apply prod_1_r; Col.",
            "VernacExtend",
            "f66a52838c32f04392939ea1716e70e7e24caaa7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (G = ABX'') by (apply prod_uniqueness with O E E' ABX'' E; auto; apply prod_1_r; Col).",
            "VernacExtend",
            "b39e21d3340e892f03ce94dd5ba4decf861eed45"
        ],
        [
            "treat_equalities; apply prod_comm; auto.",
            "VernacExtend",
            "c452dbf03059218b54894e43db1ec1838cd98ad3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HElim : LeP O E E' AX BX \\/ LeP O E E' BX AX) by (apply col_2_le_or_ge; Col).",
            "VernacExtend",
            "60bea0e3cb259806f4b1ba4632df5a45cf9c35b5"
        ],
        [
            "elim HElim; clear HElim; intro HLe4.",
            "VernacExtend",
            "ec6a8b66791b1bfaa10ce70bbc6a3d12b436e089"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (LAXBX : Length O E E' BX AX ABX'').",
            "VernacExtend",
            "381df12ca6488a995310a57d23e755242284b965"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A BX''; auto.",
            "VernacExtend",
            "61cd84ecd9bd2c1e86ca139f79b515adf02d89aa"
        ],
        [
            "assert (Cong AX BX AX' BX').",
            "VernacExtend",
            "eccb63608f1ace67230d2c623f2ab89b069982fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX BX S U1 AX' BX' in HCongBX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "cf9d07aadc9cc753ed1c2ea21e339c19007b09ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A BX'' AX' BX').",
            "VernacExtend",
            "a4b75d57158f3d1810e2cc06263c11d2f839cad2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with B]; auto.",
            "VernacExtend",
            "c5634938f69686c6c33c33a256f349b6f7cfd245"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' BX'; Cong.",
            "VernacExtend",
            "e997c327cd453d526c570b10614da72d901cad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (ABX'' = BXMAX) by (apply l16_9_1 with O E E' BX AX; Col; left; auto).",
            "VernacExtend",
            "9fd5167ee765ce704f28aa73bf2607d17f3bfdd4"
        ],
        [
            "elim HLe4; clear HLe4; intro HLt; treat_equalities; [|assert (AX' = BX') by (apply col_cong_3_cong_3_eq with O E AX S U1; try intro; treat_equalities; Col); treat_equalities; apply projp_id with AX' A BX'' A1 A2 in HBX''; auto; treat_equalities; exfalso; Col].",
            "VernacExtend",
            "d31e54ccf151394fbd0bd1d58e6880081ddb78dc"
        ],
        [
            "apply bet_lt12_le13 with O E E' AX BX CX in HLt; [|apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY; auto].",
            "VernacExtend",
            "ddd4272a71678256fa7745266aaaee79cd872ded"
        ],
        [
            "assert (LAXCX : Length O E E' CX AX ACX'').",
            "VernacExtend",
            "6f3d40ed56209f54cd8ff1d27dc2bec0096a4a47"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A CX''; auto.",
            "VernacExtend",
            "3e6c47d7107837893505f63925449fbccb9be75d"
        ],
        [
            "assert (Cong AX CX AX' CX').",
            "VernacExtend",
            "58c354187d173f6ac6fad1e1fb2cad8244d58775"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX CX S U1 AX' CX' in HCongCX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "6b55a5866f9ddc8fc5630bd2f82b5184accb978d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A CX'' AX' CX').",
            "VernacExtend",
            "2b1f374e2007b150d5b031fa7adfca3394ab827a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with C]; auto.",
            "VernacExtend",
            "1a96077ec331ea27d2c521a0edcea792004e7009"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' CX'; Cong.",
            "VernacExtend",
            "2f8e6bf9837323a4013b11f3cfa3c300b2446a5c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (ACX'' = CXMAX) by (apply l16_9_1 with O E E' CX AX; Col; left; auto).",
            "VernacExtend",
            "46d49563d723300b65bc9fffd206569d758ffcde"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (LAXBX : Length O E E' AX BX ABX'').",
            "VernacExtend",
            "0adf66acb3bb32eca3e1d17da2a38412b42057ae"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A BX''; auto.",
            "VernacExtend",
            "61cd84ecd9bd2c1e86ca139f79b515adf02d89aa"
        ],
        [
            "assert (Cong AX BX AX' BX').",
            "VernacExtend",
            "eccb63608f1ace67230d2c623f2ab89b069982fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX BX S U1 AX' BX' in HCongBX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "cf9d07aadc9cc753ed1c2ea21e339c19007b09ab"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A BX'' AX' BX').",
            "VernacExtend",
            "a4b75d57158f3d1810e2cc06263c11d2f839cad2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with B]; auto.",
            "VernacExtend",
            "c5634938f69686c6c33c33a256f349b6f7cfd245"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' BX'; Cong.",
            "VernacExtend",
            "e997c327cd453d526c570b10614da72d901cad87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_exists O E E' AX BX) as [AXMBX HAXMBX]; Col.",
            "VernacExtend",
            "a3e9660e4fb653a030a6459bc38dc83d9bb2de27"
        ],
        [
            "assert (ABX'' = AXMBX) by (apply l16_9_1 with O E E' AX BX; Col; left; auto).",
            "VernacExtend",
            "4dea10e8c73a19a31f06885ca96f9ef85da35b3d"
        ],
        [
            "elim HLe4; clear HLe4; intro HLt; treat_equalities; [|assert (AX' = BX') by (apply col_cong_3_cong_3_eq with O E BX S U1; try intro; treat_equalities; Col); treat_equalities; apply projp_id with AX' A BX'' A1 A2 in HBX''; auto; treat_equalities; exfalso; Col].",
            "VernacExtend",
            "24b5d91477adc2d3fecdc992c41d0b6da6d29a3f"
        ],
        [
            "apply bet_lt21_le31 with O E E' AX BX CX in HLt; [|apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY; auto].",
            "VernacExtend",
            "fd578c4256b5e9961c75533f1f1541e0975c4334"
        ],
        [
            "assert (LAXCX : Length O E E' AX CX ACX'').",
            "VernacExtend",
            "b9b7cc039096f510b2b314750d79436f63baff21"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_eq_cong_2 with A CX''; auto.",
            "VernacExtend",
            "3e6c47d7107837893505f63925449fbccb9be75d"
        ],
        [
            "assert (Cong AX CX AX' CX').",
            "VernacExtend",
            "58c354187d173f6ac6fad1e1fb2cad8244d58775"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_3_2_cong_4 with O E AX CX S U1 AX' CX' in HCongCX'; try intro; treat_equalities; Col; unfold Cong_4 in *; spliter; Cong.",
            "VernacExtend",
            "6b55a5866f9ddc8fc5630bd2f82b5184accb978d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A CX'' AX' CX').",
            "VernacExtend",
            "2b1f374e2007b150d5b031fa7adfca3394ab827a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_2_par_projp2_cong with S U1 A1 A2; auto; [apply projp_col with A|apply projp_col with C]; auto.",
            "VernacExtend",
            "1a96077ec331ea27d2c521a0edcea792004e7009"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong_transitivity with AX' CX'; Cong.",
            "VernacExtend",
            "2f8e6bf9837323a4013b11f3cfa3c300b2446a5c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_exists O E E' AX CX) as [AXMCX HAXMCX]; Col.",
            "VernacExtend",
            "a03fd9088dc26454c5b70b2f10bb321fe8cabc95"
        ],
        [
            "assert (ACX'' = AXMCX) by (apply l16_9_1 with O E E' AX CX; Col; left; auto).",
            "VernacExtend",
            "16873abfdad605084fe5e4cf6d98f6e78a8e1123"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (Opp O E E' BXMAX ABX'') by (apply diff_opp with BX AX; auto).",
            "VernacExtend",
            "dcc121c085a969072a8b044a1cda1e2cab3d726a"
        ],
        [
            "assert (Opp O E E' CXMAX ACX'') by (apply diff_opp with CX AX; auto).",
            "VernacExtend",
            "3ac543cb60449fdf11f36d22ea9862debcb8368a"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "apply prod_assoc2 with ACX'' ME ABX''; [auto|apply opp_prod; auto; apply opp_comm; auto| apply opp_prod; auto; apply opp_comm; auto].",
            "VernacExtend",
            "12949b0a3ca146192689d33bb2ceb5d396e64548"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Unset Regular Subst Tactic.",
            "VernacUnsetOption",
            "44cf9e6ec08d411fdf7c83dfa839af9ae86a8185"
        ],
        [
            "Lemma characterization_of_betweenness : forall O E E' S U1 U2 A AX AY B BX BY C CX CY BXMAX BYMAY CXMAX CYMAY, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> Diff O E E' BX AX BXMAX -> Diff O E E' BY AY BYMAY -> Diff O E E' CX AX CXMAX -> Diff O E E' CY AY CYMAY -> (Bet A B C <-> exists T, O <> E /\\ Col O E T /\\ LeP O E E' O T /\\ LeP O E E' T E /\\ Prod O E E' T CXMAX BXMAX /\\ Prod O E E' T CYMAY BYMAY).",
            "VernacStartTheoremProof",
            "5f756ec7489190ad80fada1861837d60ff5f51c6"
        ],
        [
            "intros O E E' S U1 U2 A AX AY B BX BY C CX CY BXMAX BYMAY CXMAX CYMAY.",
            "VernacExtend",
            "59754a31ddbb38624c035a69aeafb88c553a8b80"
        ],
        [
            "intros HCdA HCdB HCdC HBXMAX HBYMAY HCXMAX HCYMAY.",
            "VernacExtend",
            "43883d8c50a42807385b642858e2d4d97eb41f48"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "7b1f04165736ed2377e73eaf0185bc73386458a7"
        ],
        [
            "assert (HColAX : Col O E AX) by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "1167386f19c9131bd7b48c9391274366d66fe68a"
        ],
        [
            "assert (HColAY : Col O E AY) by (apply diff_ar2 in HBYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "fca2e5708386deed457a805bcc7e3a51c555f12a"
        ],
        [
            "assert (HColBX : Col O E BX) by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "d0b31bc1012393f68b479b0bc5f517b526dfc0ca"
        ],
        [
            "assert (HColBY : Col O E BY) by (apply diff_ar2 in HBYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "bd10824fe068244ded47d1dc0d9af41e27059166"
        ],
        [
            "assert (HColCX : Col O E CX) by (apply diff_ar2 in HCXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "19d1629f65136cac8ef573520230f3031f13c373"
        ],
        [
            "assert (HColCY : Col O E CY) by (apply diff_ar2 in HCYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "1614f765626d43afd3cb96a258a5c461fef3f621"
        ],
        [
            "assert (HColBXMAX : Col O E BXMAX) by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "52488a9dd9d9abe2316fc8b0fcf5f0abfc367e16"
        ],
        [
            "assert (HColBYMAY : Col O E BYMAY) by (apply diff_ar2 in HBYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "419f48c41b3a3652dce94c9179c6f45e7648dea5"
        ],
        [
            "assert (HColCXMAX : Col O E CXMAX) by (apply diff_ar2 in HCXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "6404d143e702cc67f7cad950f58a975062de7e7c"
        ],
        [
            "assert (HColCYMAY : Col O E CYMAY) by (apply diff_ar2 in HCYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "4b502ac9bc24ebc06795eb779ad2bf568593653e"
        ],
        [
            "split; [intro HBet|intro HT].",
            "VernacExtend",
            "3bcc085b1560509745362aec62606743e7825fc3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points A B); intro HDiff1; treat_equalities.",
            "VernacExtend",
            "a6b2057a976e135e8c1a78e25386ea172c704ff4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (AX = BX /\\ AY = BY) by (rewrite <- eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "cb6dc0f8688cdcfc37fb21d4f3078f8db1b5e7ec"
        ],
        [
            "spliter; treat_equalities.",
            "VernacExtend",
            "a0f7bbe0e9a01210364179597741fa630c4d96b6"
        ],
        [
            "assert (O = BXMAX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "ae14261909388e4bed339d735b1975be9b7984a2"
        ],
        [
            "assert (O = BYMAY) by (apply diff_uniqueness with O E E' AY AY; auto; apply diff_null; Col).",
            "VernacExtend",
            "542603148a53febf535538ec268a1ee707d39089"
        ],
        [
            "treat_equalities; exists O; split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "10c9851e696109842b1917627da315bfc47b6ca2"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try apply leP_refl.",
            "VernacExtend",
            "66abff1c5b5a9b470ce524275acc5dec9c8d5c4c"
        ],
        [
            "split; try apply ps_le; Between.",
            "VernacExtend",
            "16c460add041f9c6b73dd9cde36205096980b650"
        ],
        [
            "split; apply prod_0_l; Col.",
            "VernacExtend",
            "70ef2c8f31f5cba0368c4c42a49d9f8ffd8cc5c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points A C); intro HDiff2; treat_equalities; [intuition|].",
            "VernacExtend",
            "a2c292c49b75dbcd8f0cc98711d5c750397a991f"
        ],
        [
            "elim (eq_dec_points B C); intro HDiff3; treat_equalities.",
            "VernacExtend",
            "748583e41acf7c986a9671776bffabeab8955445"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (BX = CX /\\ BY = CY) by (rewrite <- eq_points_coordinates; [|apply HCdB|apply HCdC]; auto).",
            "VernacExtend",
            "df75e9f6cebf4e5748abb80f6e2e813d84fcb61f"
        ],
        [
            "spliter; treat_equalities.",
            "VernacExtend",
            "a0f7bbe0e9a01210364179597741fa630c4d96b6"
        ],
        [
            "assert (BXMAX = CXMAX) by (apply diff_uniqueness with O E E' BX AX; auto).",
            "VernacExtend",
            "1ce6297864b878b67375319c0c67923a2605ad46"
        ],
        [
            "assert (BYMAY = CYMAY) by (apply diff_uniqueness with O E E' BY AY; auto).",
            "VernacExtend",
            "ff5f1942bba85b543a76d822ec89b29f3f897d3e"
        ],
        [
            "treat_equalities; exists E; split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "ef4cf7319f55752e9e2cce2b3560ef2dec3b1ae1"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "split; try apply ps_le; Between.",
            "VernacExtend",
            "16c460add041f9c6b73dd9cde36205096980b650"
        ],
        [
            "split; try apply leP_refl.",
            "VernacExtend",
            "66abff1c5b5a9b470ce524275acc5dec9c8d5c4c"
        ],
        [
            "split; apply prod_1_l; Col.",
            "VernacExtend",
            "d8985dd4c138d8c5ffe4980c4f93a3bad94436b0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (length_existence O E E' A B) as [AB HAB]; Col.",
            "VernacExtend",
            "dc6a63acea26adc1fb57389a885f2b604bf086c8"
        ],
        [
            "destruct (length_existence O E E' A C) as [AC HAC]; Col.",
            "VernacExtend",
            "9f08b6d559ba39fbb3e200f7eae5e107ec338561"
        ],
        [
            "destruct (length_existence O E E' B C) as [BC HBC]; Col.",
            "VernacExtend",
            "d801b78d2c6cae817db446fc45333b1fca5dd387"
        ],
        [
            "assert (HSum : Sum O E E' AB BC AC) by (assert_diffs; apply triangular_equality_bis with A B C; auto).",
            "VernacExtend",
            "713373b7c1e3a68846d30260d73e2c4fff001c96"
        ],
        [
            "assert (HLe1 : LeP O E E' O AB) by (apply length_pos with A B; auto).",
            "VernacExtend",
            "ba9f180cee02a43fc8053930d23383dec3a55728"
        ],
        [
            "assert (HLe2 : LeP O E E' AB AC) by (apply length_leP_le_2 with A B A C; try (apply l5_5_2; exists C); Cong).",
            "VernacExtend",
            "98cfb28fc7f2dceec45f861380ab2f99fec40dcd"
        ],
        [
            "assert (HColAB : Col O E AB) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "8e2121d578e421f0ae2bf1da5753f7d1eedda8f2"
        ],
        [
            "assert (HColAC : Col O E AC) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "669ad29ecca3273c57fa12ed8102a80aa691a81b"
        ],
        [
            "destruct (inv_exists O E E' AC) as [IAC HIAC]; Col; try (intro; unfold Length in *; spliter; treat_equalities; auto).",
            "VernacExtend",
            "e04d62db8ad54cf3503a8f98d1613d503bf85871"
        ],
        [
            "assert (HColIAC : Col O E IAC) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "7a073be95dd77f2ba7561cf0b6171bb2d47470f0"
        ],
        [
            "assert (HLe3 : LeP O E E' O IAC).",
            "VernacExtend",
            "fc79b2da8b65355731f9daa4bcb3fdbcf69a393e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply pos_inv_pos with AC; auto; try (intro; unfold Length in *; spliter; treat_equalities; auto).",
            "VernacExtend",
            "cb7f99c150fe3c71bf04a98ce25bd2f7ec693e8f"
        ],
        [
            "apply length_pos with A C; auto.",
            "VernacExtend",
            "7e58265f6e8986dd03dd77313c7392742d14f812"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC AB IAC) as [T HT]; Col.",
            "VernacExtend",
            "b4b23fa253f4e0b4d6769a2aec6f754b4c0350f1"
        ],
        [
            "exists T; split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "3fbbdd9e8b1416378dbca7f3d598a919250c4550"
        ],
        [
            "split; [unfold Prod, Ar2 in *; spliter; Col|].",
            "VernacExtend",
            "f0397de2fcfca61e7224c7b05325bacc8035c959"
        ],
        [
            "split; [apply compatibility_of_prod_with_order with AB IAC; auto|].",
            "VernacExtend",
            "69ec09f4583fd4e7a3443d990c709c4d3193718e"
        ],
        [
            "split; [apply le_pos_prod_le with AB AC IAC; auto; apply prod_comm; auto|].",
            "VernacExtend",
            "d13bcd162d7c4fdaf5938cf3aa7f974a0c866344"
        ],
        [
            "assert (HColT : Col O E T) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "057731198eb96bfb9a0df55b14c54fea152f16a6"
        ],
        [
            "assert (HT' : Prod O E E' T AC AB) by (apply prod_assoc1 with AB IAC E; auto; apply prod_1_r; Col).",
            "VernacExtend",
            "5433b2268927d629566f18e2a44f31d10489ff36"
        ],
        [
            "split; [apply characterization_of_betweenness_aux with S U1 U2 A AX AY B BX BY C CX CY AB AC IAC| apply characterization_of_betweenness_aux with S U2 U1 A AY AX B BY BX C CY CX AB AC IAC ]; auto; apply coord_exchange_axes; auto.",
            "VernacExtend",
            "7b429aafb71414fbfd950826162dfb80d05df7c0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HT as [T [H [HColT [HOLeT [HTLeE [HX HY]]]]]]; clear H.",
            "VernacExtend",
            "6f6039764a3ce18a1f4a6fc4cc0cb334c2915627"
        ],
        [
            "rename B into B'; rename BX into B'X; rename BY into B'Y; rename HCdB into HCdB'.",
            "VernacExtend",
            "138d8e792d9037d6f0732e43552fa72f88f76dc4"
        ],
        [
            "rename BXMAX into B'XMAX; rename HBXMAX into HB'XMAX.",
            "VernacExtend",
            "6aec02ce53ef6aaedb8f077b2a0c5d5baf4e6ab2"
        ],
        [
            "rename BYMAY into B'YMAY; rename HBYMAY into HB'YMAY.",
            "VernacExtend",
            "f11ea15073cca21152a4e1ba0fe07061a69dac7f"
        ],
        [
            "rename HColBX into HColB'X; rename HColBY into HColB'Y.",
            "VernacExtend",
            "d0974bba9c5a313c4c62d511cf8e81111fdefed3"
        ],
        [
            "rename HColBXMAX into HColB'XMAX; rename HColBYMAY into HColB'YMAY.",
            "VernacExtend",
            "6bb500f639a9e4a0d91b95638cf3face02e70b5d"
        ],
        [
            "destruct (length_existence O E E' A C) as [AC HAC]; Col.",
            "VernacExtend",
            "9f08b6d559ba39fbb3e200f7eae5e107ec338561"
        ],
        [
            "assert (HColAC : Col O E AC) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "669ad29ecca3273c57fa12ed8102a80aa691a81b"
        ],
        [
            "assert (HLe1 : LeP O E E' O AC) by (apply length_pos with A C; auto).",
            "VernacExtend",
            "1bcad484fed75adb03e88974e4e0edfe9f15a902"
        ],
        [
            "destruct (prod_exists O E E' HNC T AC) as [AB HT]; Col.",
            "VernacExtend",
            "72c726d3c3cd5512b78f48502406ccf1e2dd3bf1"
        ],
        [
            "assert (HColAB : Col O E AB) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "dd29ed251e2544adbc2d29509c2c100824d06e47"
        ],
        [
            "assert (HLe2 : LeP O E E' O AB) by (apply compatibility_of_prod_with_order with T AC; auto).",
            "VernacExtend",
            "f7965b43a77543f87c3323a95226596151cc9684"
        ],
        [
            "assert (HB : exists B, Bet A B C /\\ Length O E E' A B AB).",
            "VernacExtend",
            "481ead65446afea1f76613411856bf3838012708"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Le O AB A C).",
            "VernacExtend",
            "807d3f9b42290348b8054bfd048d5fc646c47792"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_leP_le_1 with O E E' AB AC; auto.",
            "VernacExtend",
            "29c67afda2e4edee9d28c255b82a0d15919c2532"
        ],
        [
            "assert_diffs; do 2 (split; Cong).",
            "VernacExtend",
            "95e3b42269f049c9d2c70d34675dee1c7a9db1c5"
        ],
        [
            "apply le_pos_prod_le with T E AC; auto; apply prod_1_l; Col.",
            "VernacExtend",
            "750c5e514a8a10bc1819d24427607f123f8d3427"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (le_bet A C O AB) as [B [HBet HCong]]; auto; exists B; split; auto.",
            "VernacExtend",
            "b6f93579ae4d60a1a89da7f6c637e2928f7707b9"
        ],
        [
            "assert_diffs; do 3 (split; Cong).",
            "VernacExtend",
            "c9e00905e3e6177e2cf27be4c47e6b3646f3e2a3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HB as [B [HBet HAB]].",
            "VernacExtend",
            "c4a8b4003c37eb15db2669fe746c42e54b9a0d24"
        ],
        [
            "elim (eq_dec_points A C); intro HDiff2; treat_equalities.",
            "VernacExtend",
            "eaef1c2ad4be832f0cbc5b394a5f375aca4a6a45"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (AX = CX /\\ AY = CY) by (rewrite <- eq_points_coordinates; [|apply HCdA|apply HCdC]; auto).",
            "VernacExtend",
            "14d91f7646a93b5acb7dec97a9129d93a876a35f"
        ],
        [
            "spliter; treat_equalities.",
            "VernacExtend",
            "a0f7bbe0e9a01210364179597741fa630c4d96b6"
        ],
        [
            "assert (O = CXMAX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "08f45b8de656b1faf7e3405a24306a99d4460f10"
        ],
        [
            "assert (O = CYMAY) by (apply diff_uniqueness with O E E' AY AY; auto; apply diff_null; Col).",
            "VernacExtend",
            "8ace481bcf46baf31ab76b62b2c06d4072a8a6eb"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (O = B'XMAX) by (apply prod_uniqueness with O E E' T O; auto; apply prod_0_r; Col).",
            "VernacExtend",
            "5b30ed2fd72edebc2effd7bfe245659af7e52d44"
        ],
        [
            "assert (O = B'YMAY) by (apply prod_uniqueness with O E E' T O; auto; apply prod_0_r; Col).",
            "VernacExtend",
            "9938ec51164fe97fffa2de189b9f1bfb17e9a102"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (AX = B'X) by (apply diff_uniquenessA with O E E' AX O; auto).",
            "VernacExtend",
            "29d2d463ad3906d4084e5eb4d76ddd9fc52ca503"
        ],
        [
            "assert (AY = B'Y) by (apply diff_uniquenessA with O E E' AY O; auto).",
            "VernacExtend",
            "6a75304ad875f43e7bfb49ccfb7c6dbcbfe98e4f"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (A = B') by (rewrite eq_points_coordinates; [|apply HCdA|apply HCdB']; auto).",
            "VernacExtend",
            "3ae00dd08a44995f45715bbb454d0e8907b81d14"
        ],
        [
            "treat_equalities; Between.",
            "VernacExtend",
            "e0178bf33a032ec8009548908e883fb5dc05794f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HCdB : exists BX, exists BY, Cd O E S U1 U2 B BX BY) by (apply coordinates_of_point; unfold Cd in *; spliter; auto).",
            "VernacExtend",
            "73c819f9295e2fe3436d89bd58e471b9733acb3f"
        ],
        [
            "destruct HCdB as [BX [BY HCdB]].",
            "VernacExtend",
            "d061a8155c6783fc3dfc00ba5a847d02e4565260"
        ],
        [
            "elim (eq_dec_points A B); intro HDiff1; treat_equalities; try (elim (eq_dec_points B C); intro HDiff3; treat_equalities).",
            "VernacExtend",
            "b89dd4687a53764c0d92d868059e2d08df47c628"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (AX = BX /\\ AY = BY) by (rewrite <- eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "cb6dc0f8688cdcfc37fb21d4f3078f8db1b5e7ec"
        ],
        [
            "assert (O = AB); spliter; treat_equalities.",
            "VernacExtend",
            "b4d52297adfc33d660c525ac7daef944dbbd8e68"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_uniqueness with O E E' A A; auto; apply length_id_2; assert_diffs; auto.",
            "VernacExtend",
            "4549083feefb96f85d1f7a12aad10560efe7ff7a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points O T); intro HOT; treat_equalities.",
            "VernacExtend",
            "64138d050bd5fa7d1069951f0a711cce41e3de20"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = B'XMAX) by (apply prod_uniqueness with O E E' O CXMAX; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "5d160f4ba22109299efb2918a8159179c12edb84"
        ],
        [
            "assert (O = B'YMAY) by (apply prod_uniqueness with O E E' O CYMAY; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "0257c25a5ae2deb36cb1fcfe819792fe91519d11"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (AX = B'X) by (apply diff_uniquenessA with O E E' AX O; auto; apply diff_null; Col).",
            "VernacExtend",
            "0c14834ab21d9162c4dc7af4b668f8304e749d19"
        ],
        [
            "assert (AY = B'Y) by (apply diff_uniquenessA with O E E' AY O; auto; apply diff_null; Col).",
            "VernacExtend",
            "c329c6714a8142829633926f51145234adfd9427"
        ],
        [
            "assert (A = B'); treat_equalities; Between.",
            "VernacExtend",
            "5bcba380f4b4510121bf6f8cab6e31b400c172f3"
        ],
        [
            "rewrite eq_points_coordinates; [|apply HCdA|apply HCdB']; auto.",
            "VernacExtend",
            "f37299bc341a63f5be2abf8125405edbe8267d43"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_null in HT; elim HT; clear HT; intro H; [intuition|].",
            "VernacExtend",
            "7af19da87374d07fa80f7687062cea822f75f671"
        ],
        [
            "apply eq_sym in H; treat_equalities; exfalso; apply HDiff2.",
            "VernacExtend",
            "a6217455eb24c4424f5643ed7ada0ff054194f53"
        ],
        [
            "apply length_id in HAC; spliter; auto.",
            "VernacExtend",
            "edb5a4335b5da46c4c1c8c47a5051c324a513ac4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (BX = CX /\\ BY = CY) by (rewrite <- eq_points_coordinates; [|apply HCdB|apply HCdC]; auto).",
            "VernacExtend",
            "df75e9f6cebf4e5748abb80f6e2e813d84fcb61f"
        ],
        [
            "spliter; treat_equalities.",
            "VernacExtend",
            "a0f7bbe0e9a01210364179597741fa630c4d96b6"
        ],
        [
            "assert (AB = AC) by (apply length_uniqueness with O E E' A B; auto).",
            "VernacExtend",
            "f853121deca6b966b71a855a337f717dc1181c8c"
        ],
        [
            "spliter; treat_equalities.",
            "VernacExtend",
            "a0f7bbe0e9a01210364179597741fa630c4d96b6"
        ],
        [
            "assert (E = T); treat_equalities.",
            "VernacExtend",
            "c350b5ed51a62548fb166c7743263b3fd03e48c5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniquenessA with O E E' AB AB; try apply prod_1_l; auto.",
            "VernacExtend",
            "5ca09dffafb8a84c134effd909c6c44c32e8aa10"
        ],
        [
            "intro; treat_equalities; apply length_id in HAB; assert_diffs; induction HAB; auto.",
            "VernacExtend",
            "08422586ea9bdca9c89c5196eb7086a338dac73b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (CXMAX = B'XMAX) by (apply prod_uniqueness with O E E' E CXMAX; auto; apply prod_1_l; Col).",
            "VernacExtend",
            "b5b2aa1f72d8ba3dda87a46ed4df1beba1107d43"
        ],
        [
            "assert (CYMAY = B'YMAY) by (apply prod_uniqueness with O E E' E CYMAY; auto; apply prod_1_l; Col).",
            "VernacExtend",
            "c1a37b3f4905f4bb7cf61f18e55c4fbd9118b702"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (BX = B'X) by (apply diff_uniquenessA with O E E' AX CXMAX; auto).",
            "VernacExtend",
            "49be1e48f5aa9e6953ca2eea056f4d69cb57f6b0"
        ],
        [
            "assert (BY = B'Y) by (apply diff_uniquenessA with O E E' AY CYMAY; auto).",
            "VernacExtend",
            "2dd4e45f9ee4f47207d507962ef5fed0b0457403"
        ],
        [
            "assert (B = B'); treat_equalities; Between.",
            "VernacExtend",
            "19071048aa854d552c49b862303571a38a799c3d"
        ],
        [
            "rewrite eq_points_coordinates; [|apply HCdB|apply HCdB']; auto.",
            "VernacExtend",
            "a6b9bab1de338e6e80e4ad8c2acdb54b6107379f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (inv_exists O E E' AC) as [IAC HIAC]; Col; try (intro; unfold Length in *; spliter; treat_equalities; auto).",
            "VernacExtend",
            "e04d62db8ad54cf3503a8f98d1613d503bf85871"
        ],
        [
            "assert (HColIAC : Col O E IAC) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "7a073be95dd77f2ba7561cf0b6171bb2d47470f0"
        ],
        [
            "assert (HColBX : Col O E BX) by (apply Cd_Col in HCdB; spliter; Col).",
            "VernacExtend",
            "4d1a05fa8fe1109f544a6ae67369408683bb15a0"
        ],
        [
            "destruct (diff_exists O E E' BX AX) as [BXMAX HBXMAX]; Col.",
            "VernacExtend",
            "148926b28b4c368e41bec6432a2228b953bf66b4"
        ],
        [
            "assert (HColBXMAX : Col O E BXMAX) by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "52488a9dd9d9abe2316fc8b0fcf5f0abfc367e16"
        ],
        [
            "assert (HX' : Prod O E E' T CXMAX BXMAX).",
            "VernacExtend",
            "2ce494e144f760882ae065bae9eaeddc540c0ba0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply characterization_of_betweenness_aux with S U1 U2 A AX AY B BX BY C CX CY AB AC IAC; auto.",
            "VernacExtend",
            "003b25b0944cfed1f5128d3fb4427df966ab156c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BXMAX = B'XMAX) by (apply prod_uniqueness with O E E' T CXMAX; auto).",
            "VernacExtend",
            "2c0e590e8d63c6ff8ec6f95f3c2fa51ba531a0e5"
        ],
        [
            "assert (HColBY : Col O E BY) by (apply Cd_Col in HCdB; spliter; Col).",
            "VernacExtend",
            "172a0bcfa1eb105a6649ffb7e7ef6a505cab7027"
        ],
        [
            "destruct (diff_exists O E E' BY AY) as [BYMAY HBYMAY]; Col.",
            "VernacExtend",
            "720cc3fb208fa6f8059de15cbaf6f049668b91ac"
        ],
        [
            "assert (HColBYMAY : Col O E BYMAY) by (apply diff_ar2 in HBYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "419f48c41b3a3652dce94c9179c6f45e7648dea5"
        ],
        [
            "assert (HY' : Prod O E E' T CYMAY BYMAY).",
            "VernacExtend",
            "8e21bbb1320d9212066b5cd9bed8b13be8984ada"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply characterization_of_betweenness_aux with S U2 U1 A AY AX B BY BX C CY CX AB AC IAC; auto; apply coord_exchange_axes; auto.",
            "VernacExtend",
            "0b8139227a7426556a0254a33e746917a250750f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (BYMAY = B'YMAY) by (apply prod_uniqueness with O E E' T CYMAY; auto).",
            "VernacExtend",
            "9bbb552b2cc229a6df8df3c21a4913fa15a4212e"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (BX = B'X) by (apply diff_uniquenessA with O E E' AX BXMAX; auto).",
            "VernacExtend",
            "513cc5bae3f85eb4bb8e295fc3947954ca8293d9"
        ],
        [
            "assert (BY = B'Y) by (apply diff_uniquenessA with O E E' AY BYMAY; auto).",
            "VernacExtend",
            "7b18e2082c1e492dacf1378f4724b6c62b736c31"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (B = B') by (rewrite eq_points_coordinates; [|apply HCdB|apply HCdB']; auto).",
            "VernacExtend",
            "f87952939dae58a2e5a561237d6aca6b04ead731"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_abscissa_col : forall O E S U1 U2 A AX AY B BY C CY, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B AX BY -> Cd O E S U1 U2 C AX CY -> Col A B C.",
            "VernacStartTheoremProof",
            "8c1ea8bbd9d21ae7abec26b9ecc7a8a29bebb1a8"
        ],
        [
            "intros O E S U1 U2 A AX AY B BY C CY HCdA HCdB HCdC.",
            "VernacExtend",
            "71bd64f40562fb2fe9b0c960dc8a98342c2f9a2f"
        ],
        [
            "destruct HCdA as [HCs [H [[PXA [HProjpA HCongA]] H']]]; clear H; clear H'.",
            "VernacExtend",
            "0725559b954b372298bd2d9cce688a18ce702ebd"
        ],
        [
            "destruct HCdB as [H [H' [[PXB [HProjpB HCongB]] H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "4d3c728708314df223307802e18f6b247bbab29d"
        ],
        [
            "destruct HCdC as [H [H' [[PXC [HProjpC HCongC]] H'']]]; clear H; clear H'; clear H''.",
            "VernacExtend",
            "d6fcf5879a0451618cf4c3088905efa5b75bd073"
        ],
        [
            "assert (HDiff1 : O <> E) by (unfold Cs in *; spliter; auto).",
            "VernacExtend",
            "b99671886f84c40fa75b32e9170aa1d5188affea"
        ],
        [
            "assert (HColAX : Col O E AX) by (apply l4_13 with S U1 PXA; Cong; apply projp_col with A; auto).",
            "VernacExtend",
            "031cbace15ebbfc9969e6a0424751359ddbf08d4"
        ],
        [
            "eapply col_cong_3_cong_3_eq in HCongB; [| | |apply HCongA]; treat_equalities; auto.",
            "VernacExtend",
            "175dbf2cc2594a3215080de91199df6ab3510f88"
        ],
        [
            "eapply col_cong_3_cong_3_eq in HCongC; [| | |apply HCongA]; treat_equalities; auto.",
            "VernacExtend",
            "8b9df98362d68e2e5b0aa69528d47a8d52fdea10"
        ],
        [
            "clear HCongA; elim (eq_dec_points A PXA); intro HDiff2; treat_equalities; [apply projp2_col with S U1; auto|].",
            "VernacExtend",
            "1c242ad10686fb5f38f2e7bbc0c5d666559d18f0"
        ],
        [
            "eapply projp2_col in HProjpB; [|apply HProjpA].",
            "VernacExtend",
            "81786f20c2bd788af45a80032fd1e810c55c7193"
        ],
        [
            "eapply projp2_col in HProjpC; [|apply HProjpA].",
            "VernacExtend",
            "0a315b0692b801517f50d0655259c3246c7570ba"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma characterization_of_collinearity : forall O E E' S U1 U2 A AX AY B BX BY C CX CY AXMBX AYMBY BXMCX BYMCY XProd YProd, Cd O E S U1 U2 A AX AY -> Cd O E S U1 U2 B BX BY -> Cd O E S U1 U2 C CX CY -> Diff O E E' AX BX AXMBX -> Diff O E E' AY BY AYMBY -> Diff O E E' BX CX BXMCX -> Diff O E E' BY CY BYMCY -> Prod O E E' AXMBX BYMCY XProd -> Prod O E E' AYMBY BXMCX YProd -> (Col A B C <-> XProd = YProd).",
            "VernacStartTheoremProof",
            "9932eac373ddf18358600825b6ef3e11dafba6aa"
        ],
        [
            "intros O E E' S U1 U2 A AX AY B BX BY C CX CY AXMBX AYMBY BXMCX BYMCY XProd YProd.",
            "VernacExtend",
            "ff9404b424e7b4cc0c2de7e764853654a96967dc"
        ],
        [
            "intros HCdA HCdB HCdC HAXMBX HAYMBY HBXMCX HBYMCY HXProd HYProd.",
            "VernacExtend",
            "632e6a7d0855fb6c0133156ec566370f4bb4af98"
        ],
        [
            "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HAXMBX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "e84c4e7fdcaf7f8245b7c8b6a3b23b44da8552c3"
        ],
        [
            "assert (HColAX : Col O E AX) by (apply diff_ar2 in HAXMBX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "8e281cd3b66ddd5774c326046ab34f3e7bf74c8a"
        ],
        [
            "assert (HColAY : Col O E AY) by (apply diff_ar2 in HAYMBY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "2d664b97292edc6d1feb5bf0be6b4dc2a540cbb6"
        ],
        [
            "assert (HColBX : Col O E BX) by (apply diff_ar2 in HBXMCX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "87f3d9fcc3dbd65dce1da44515422bbe46cc4b6c"
        ],
        [
            "assert (HColBY : Col O E BY) by (apply diff_ar2 in HBYMCY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "804f72f8c8f8c58a790ac0657846be93968d98ed"
        ],
        [
            "assert (HColCX : Col O E CX) by (apply diff_ar2 in HBXMCX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "1adc3f90af55bf7c393bef85189ab718f9ca1f44"
        ],
        [
            "assert (HColCY : Col O E CY) by (apply diff_ar2 in HBYMCY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "be0979632738a4bffffaf7f10b13a08626ba8df6"
        ],
        [
            "assert (HColAXMBX : Col O E AXMBX) by (apply diff_ar2 in HAXMBX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "9a0accf45c6238d1c5612690e4e06e708e1b5a46"
        ],
        [
            "assert (HColAYMBY : Col O E AYMBY) by (apply diff_ar2 in HAYMBY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c0e76fa7d95fe6a1b4b5f87ebfef2a0ec0ed300b"
        ],
        [
            "assert (HColBXMCX : Col O E BXMCX) by (apply diff_ar2 in HBXMCX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "566d45e92fe4b7ac66dd74f2d2e41558bc204d7e"
        ],
        [
            "assert (HColBYMCY : Col O E BYMCY) by (apply diff_ar2 in HBYMCY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "26d1e3e834a52d0014e3a40be1497e3d01e6510d"
        ],
        [
            "destruct (diff_exists O E E' BX AX) as [BXMAX HBXMAX]; Col.",
            "VernacExtend",
            "148926b28b4c368e41bec6432a2228b953bf66b4"
        ],
        [
            "assert (HColBXMAX : Col O E BXMAX) by (apply diff_ar2 in HBXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "52488a9dd9d9abe2316fc8b0fcf5f0abfc367e16"
        ],
        [
            "destruct (diff_exists O E E' BY AY) as [BYMAY HBYMAY]; Col.",
            "VernacExtend",
            "720cc3fb208fa6f8059de15cbaf6f049668b91ac"
        ],
        [
            "assert (HColBYMAY : Col O E BYMAY) by (apply diff_ar2 in HBYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "419f48c41b3a3652dce94c9179c6f45e7648dea5"
        ],
        [
            "destruct (diff_exists O E E' CX AX) as [CXMAX HCXMAX]; Col.",
            "VernacExtend",
            "66db42eff0d20ac36441ef825a1769cba6039753"
        ],
        [
            "assert (HColCXMAX : Col O E CXMAX) by (apply diff_ar2 in HCXMAX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "6404d143e702cc67f7cad950f58a975062de7e7c"
        ],
        [
            "destruct (diff_exists O E E' CY AY) as [CYMAY HCYMAY]; Col.",
            "VernacExtend",
            "ac762511575cba60d9123efb733f3e72864c2756"
        ],
        [
            "assert (HColCYMAY : Col O E CYMAY) by (apply diff_ar2 in HCYMAY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "4b502ac9bc24ebc06795eb779ad2bf568593653e"
        ],
        [
            "destruct (diff_exists O E E' CX BX) as [CXMBX HCXMBX]; Col.",
            "VernacExtend",
            "43a8902bb745b494427648ff703d44b0cd7c4f81"
        ],
        [
            "assert (HColCXMBX : Col O E CXMBX) by (apply diff_ar2 in HCXMBX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "3b06e854b6f2a51a48edf8cd96ae623c5e9293ea"
        ],
        [
            "destruct (diff_exists O E E' CY BY) as [CYMBY HCYMBY]; Col.",
            "VernacExtend",
            "f2e551534b80b655888ff34648633dd8024b09fd"
        ],
        [
            "assert (HColCYMBY : Col O E CYMBY) by (apply diff_ar2 in HCYMBY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "0a6bc18af0369787c17774d5ec0e4b0d8bdc8638"
        ],
        [
            "destruct (diff_exists O E E' AX CX) as [AXMCX HAXMCX]; Col.",
            "VernacExtend",
            "a03fd9088dc26454c5b70b2f10bb321fe8cabc95"
        ],
        [
            "assert (HColAXMCX : Col O E AXMCX) by (apply diff_ar2 in HAXMCX; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "9ea04d7c5263c7a6ed200ce2d49b58637c259432"
        ],
        [
            "destruct (diff_exists O E E' AY CY) as [AYMCY HAYMCY]; Col.",
            "VernacExtend",
            "5173dc8cdf7aaa9f91c783d43a61ca21fe0823c5"
        ],
        [
            "assert (HColAYMCY : Col O E AYMCY) by (apply diff_ar2 in HAYMCY; unfold Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c6214b2df1ff4fc00bf38bfa798bb5fa2d02cf38"
        ],
        [
            "assert (HColXProd : Col O E XProd) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "2be9c54dae33ed895a42cafa5f70e026bacb4d99"
        ],
        [
            "assert (HColYProd : Col O E YProd) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "805aaf89c3478d7cbc6da4cc70371733318e755f"
        ],
        [
            "split; intro HCol; treat_equalities.",
            "VernacExtend",
            "72321958cc87ee31a15cfa8eb57adf0bfcbcb955"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points A B); intro HDiff1; elim (eq_dec_points A C); intro HDiff2; elim (eq_dec_points B C); intro HDiff3; treat_equalities; [|intuition|intuition| |intuition| | |].",
            "VernacExtend",
            "7fd06a89ee7c030f791fdc063cfb38327795d753"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply eq_points_coordinates with O E S U1 U2 B AX AY B BX BY in HCdA; auto.",
            "VernacExtend",
            "853264b21700d325b692e65031905766d43ab2cf"
        ],
        [
            "destruct HCdA as [H H']; clear H'; elim H; clear H; auto; intros; treat_equalities.",
            "VernacExtend",
            "e084ec27b4ac2070fadbeeac4a73cc12be91f0a2"
        ],
        [
            "assert (O = AXMBX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "7c3c113532cd190c9ef93cb4b2dab7e407f70806"
        ],
        [
            "assert (O = AYMBY) by (apply diff_uniqueness with O E E' AY AY; auto; apply diff_null; Col).",
            "VernacExtend",
            "aab474f7ee322d8270cec33c778ffebc092550b6"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (O = XProd) by (apply prod_uniqueness with O E E' O BYMCY; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "61de8587404cbf67a60f7fa1d94a4e9b401c66d6"
        ],
        [
            "assert (O = YProd) by (apply prod_uniqueness with O E E' O BXMCX; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "e29a6eceb23671e2608f830659e0cc86246adc27"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply eq_points_coordinates with O E S U1 U2 A AX AY A BX BY in HCdA; auto.",
            "VernacExtend",
            "eeab4d4b44f869e6c5b5b5105ec3e1438a6246d6"
        ],
        [
            "destruct HCdA as [H H']; clear H'; elim H; clear H; auto; intros; treat_equalities.",
            "VernacExtend",
            "e084ec27b4ac2070fadbeeac4a73cc12be91f0a2"
        ],
        [
            "assert (O = AXMBX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "7c3c113532cd190c9ef93cb4b2dab7e407f70806"
        ],
        [
            "assert (O = AYMBY) by (apply diff_uniqueness with O E E' AY AY; auto; apply diff_null; Col).",
            "VernacExtend",
            "aab474f7ee322d8270cec33c778ffebc092550b6"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (O = XProd) by (apply prod_uniqueness with O E E' O BYMCY; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "61de8587404cbf67a60f7fa1d94a4e9b401c66d6"
        ],
        [
            "assert (O = YProd) by (apply prod_uniqueness with O E E' O BXMCX; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "e29a6eceb23671e2608f830659e0cc86246adc27"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply eq_points_coordinates with O E S U1 U2 A AX AY A CX CY in HCdC; auto.",
            "VernacExtend",
            "09d4a36aea282a95a368904a35c9b9ae0f284940"
        ],
        [
            "destruct HCdC as [H H']; clear H'; elim H; clear H; auto; intros; treat_equalities.",
            "VernacExtend",
            "c2543fa5c45dfd09884c3f8f4fedae82c531f8e5"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "apply prod_uniqueness with O E E' AXMBX BYMCY; auto.",
            "VernacExtend",
            "e3000aaf9bc1a667bdabf0b542c1dcdf30dc098a"
        ],
        [
            "apply prod_assoc1 with BXMCX ME AYMBY; auto; [|apply prod_comm|apply prod_comm; auto]; apply opp_prod; auto; [apply diff_opp with BX AX|apply diff_opp with BY AY]; auto.",
            "VernacExtend",
            "f6d1b88db357e3ff6e0abcfdd27015d73884a280"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply eq_points_coordinates with O E S U1 U2 B BX BY B CX CY in HCdC; auto.",
            "VernacExtend",
            "69b0dd2cc5d0387bd758f2d42bf2d4a4bea83c0a"
        ],
        [
            "destruct HCdC as [H H']; clear H'; elim H; clear H; auto; intros; treat_equalities.",
            "VernacExtend",
            "c2543fa5c45dfd09884c3f8f4fedae82c531f8e5"
        ],
        [
            "assert (O = BXMCX) by (apply diff_uniqueness with O E E' BX BX; auto; apply diff_null; Col).",
            "VernacExtend",
            "d4f8bdc34bd69ccc1f53fd58a128a775c3610ad4"
        ],
        [
            "assert (O = BYMCY) by (apply diff_uniqueness with O E E' BY BY; auto; apply diff_null; Col).",
            "VernacExtend",
            "3af16625fb1acca79b75d696982605e94028b7ba"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (O = XProd) by (apply prod_uniqueness with O E E' AXMBX O; auto; apply prod_0_r; Col).",
            "VernacExtend",
            "ab28019ad588c5e523f4562ebbce32dbf198e770"
        ],
        [
            "assert (O = YProd) by (apply prod_uniqueness with O E E' AYMBY O; auto; apply prod_0_r; Col).",
            "VernacExtend",
            "9eeb29c6bf32e82975560a9228ecbf87b1589ef3"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "do 2 (try (elim HCol; clear HCol; intro HCol)); rename HCol into HBet1.",
            "VernacExtend",
            "cee11cbe5ef197d74ee77df45aa56e6a221735d8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBet2 : Bet AX BX CX /\\ Bet AY BY CY) by (apply bet_betCood with O E S U1 U2 A B C; auto).",
            "VernacExtend",
            "acfe0822ae8ace5e535e9595c8c65b0e968d239f"
        ],
        [
            "destruct HBet2 as [HBet2 HBet3].",
            "VernacExtend",
            "35dc1c90d35333818cd58675d997ecf5137e857b"
        ],
        [
            "assert (HBet':= HBet1).",
            "VernacExtend",
            "798b2e43ba8db3624d976e434266f64ff5772554"
        ],
        [
            "rewrite characterization_of_betweenness in HBet'; [|apply HCdA|apply HCdB|apply HCdC| apply HBXMAX|apply HBYMAY|apply HCXMAX| apply HCYMAY].",
            "VernacExtend",
            "e82150f707ff7d91561f3188ebdd90404a6be0e8"
        ],
        [
            "destruct HBet' as [T [HDiff4 [HColT [HLe1 [HLe2 [HProd1 HProd2]]]]]].",
            "VernacExtend",
            "e873f6dca9ddbc56f312f10011866c3710c032d7"
        ],
        [
            "assert (HSumX : Sum O E E' AXMBX BXMCX AXMCX) by (apply sum_diff_diff with AX BX CX; auto).",
            "VernacExtend",
            "ef49e362c1acccf9659165289fb062232a1cabc6"
        ],
        [
            "assert (HSumY : Sum O E E' AYMBY BYMCY AYMCY) by (apply sum_diff_diff with AY BY CY; auto).",
            "VernacExtend",
            "faffafdb62781a16c1f7f6516ce466213fff17a3"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMBX AYMBY) as [P1 HP1]; Col.",
            "VernacExtend",
            "0ecb7406f7c0b4886261456fc89c8f930f1a6dae"
        ],
        [
            "assert (HColP1 : Col O E P1) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "40e226cb9c80bd0f3486c98c551cde1a845d8fba"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "destruct (prod_exists O E E' HNC ME T) as [P2 HP2]; Col.",
            "VernacExtend",
            "d3d3f53c9e63770f2b106ab2d97d7a627f44f42a"
        ],
        [
            "assert (HColP2 : Col O E P2) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "098eadf6dcdbda01efc4e5f571a0a7f995767323"
        ],
        [
            "destruct (sum_exists O E E' HNC XProd P1) as [XProd' HXProd']; Col.",
            "VernacExtend",
            "bc48e949522e8188c907542c6a0f304ded9c1360"
        ],
        [
            "assert (HColXProd' : Col O E XProd') by (unfold Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "428446cde680fb607ab9ef2543e91c1e7b50885a"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMBX AYMCY) as [D HProdX']; Col.",
            "VernacExtend",
            "d4571cb06429895290797503f75c164aa40dd9ab"
        ],
        [
            "assert (XProd' = D); treat_equalities.",
            "VernacExtend",
            "1f899a46edea1c80d635ed74581c59377bb69178"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply sum_uniqueness with O E E' XProd P1; auto.",
            "VernacExtend",
            "c6e21fbfc1f508b139255d035e18e4bfb069800e"
        ],
        [
            "apply distr_l with AXMBX BYMCY AYMBY AYMCY; auto.",
            "VernacExtend",
            "e823d9263fe25ed917e320715e726bb7d08a2fb6"
        ],
        [
            "apply sum_comm; auto.",
            "VernacExtend",
            "9a563c9dbd85962343e62c2ad6312f7b3ff3b55e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (sum_exists O E E' HNC YProd P1) as [YProd' HYProd']; Col.",
            "VernacExtend",
            "b5b37d8e356c575120eaf9ccafa7221a5fbd7c52"
        ],
        [
            "assert (HColYProd' : Col O E YProd') by (unfold Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "d9e4ca1950187444c295cb9e38ec91c4e9151c72"
        ],
        [
            "destruct (prod_exists O E E' HNC AYMBY AXMCX) as [D HProdY']; Col.",
            "VernacExtend",
            "873acfc7f4b209651f1a682796dd4aa509209196"
        ],
        [
            "assert (YProd' = D); treat_equalities.",
            "VernacExtend",
            "146b400774dcf0cb63457e7e4bf9437c05a2dcb4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply sum_uniqueness with O E E' YProd P1; auto.",
            "VernacExtend",
            "d248c9a88bcb442453514d12b9f627fc06b593d8"
        ],
        [
            "apply distr_l with AYMBY BXMCX AXMBX AXMCX; auto; [apply sum_comm|apply prod_comm]; auto.",
            "VernacExtend",
            "d28659beb6dc0b501b22728acde0337b2098f8ef"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC P2 XProd') as [XProd'' HXProd'']; Col.",
            "VernacExtend",
            "c153595fe16255c32e0e8d8b75dfed12de108e7a"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMBX BYMAY) as [D HProdX'']; Col.",
            "VernacExtend",
            "30ee09f4a1361ff8654bb733eb7f54ac1bd67358"
        ],
        [
            "assert (XProd'' = D); treat_equalities.",
            "VernacExtend",
            "b6f0f6df0675d0e25ac3a110c75b67d0f4557c49"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniqueness with O E E' AXMBX BYMAY; auto.",
            "VernacExtend",
            "2dec4fbfd819db0a00f1b7e14ecd36cc86aba0ac"
        ],
        [
            "apply prod_assoc2 with AYMCY P2 XProd'; auto; apply prod_comm; auto.",
            "VernacExtend",
            "69eb8e3b2cf3f347bbb40e11f5bcd8ba3b5fc032"
        ],
        [
            "apply prod_assoc1 with T ME CYMAY; auto; apply prod_comm; auto.",
            "VernacExtend",
            "a97bb720e384eb96b74231765366567de55394a0"
        ],
        [
            "apply opp_prod; auto; apply diff_opp with AY CY; auto.",
            "VernacExtend",
            "6a7f9775f4e352ad51fdab5c47e929d316299330"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (prod_exists O E E' HNC P2 YProd') as [YProd'' HYProd'']; Col.",
            "VernacExtend",
            "da20ccb97cd65a4042d6be294fb575ef13ee098e"
        ],
        [
            "destruct (prod_exists O E E' HNC AYMBY BXMAX) as [D HProdY'']; Col.",
            "VernacExtend",
            "0f27974eed7f60d0a79ed06535651c34b522c251"
        ],
        [
            "assert (YProd'' = D); treat_equalities.",
            "VernacExtend",
            "5c551b38d863fbd1960d3afdfd5b57c67617a8c3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniqueness with O E E' AYMBY BXMAX; auto.",
            "VernacExtend",
            "b331d663b052aa830f28723e081d6409c2e043b0"
        ],
        [
            "apply prod_assoc2 with AXMCX P2 YProd'; auto; apply prod_comm; auto.",
            "VernacExtend",
            "f990e3bcc3880066d5ad9fe664effe39763dc5c5"
        ],
        [
            "apply prod_assoc1 with T ME CXMAX; auto; apply prod_comm; auto.",
            "VernacExtend",
            "ec658ecbe33834e562e6b1fd909f913ac4004c8b"
        ],
        [
            "apply opp_prod; auto; apply diff_opp with AX CX; auto.",
            "VernacExtend",
            "41b8ad17d03a774ef4151b1183e90bb919af28c6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (XProd'' = YProd''); treat_equalities.",
            "VernacExtend",
            "82a0efa112a4cf0eeb6074335f24552a84801c13"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniqueness with O E E' AXMBX BYMAY; auto; apply prod_comm.",
            "VernacExtend",
            "eaa692d39503cce186f1c20e306b59ae4c62d2cc"
        ],
        [
            "apply prod_assoc1 with AYMBY ME BXMAX; auto; [|apply prod_comm]; apply opp_prod; auto; [apply diff_opp with AY BY|apply diff_opp with AX BX]; auto.",
            "VernacExtend",
            "cd9032d62569a984ab0639876ba53f271b4c3c6e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (XProd' = YProd'); treat_equalities.",
            "VernacExtend",
            "6b46a8473c724f12a772bb36b8432daaac402e61"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniquenessB with O E E' P2 XProd''; auto.",
            "VernacExtend",
            "7c3e0672399d059325913eb3cdec5ef8d81867e3"
        ],
        [
            "intro H; apply eq_sym in H; treat_equalities; apply prod_null in HP2.",
            "VernacExtend",
            "31c923b87b59c546bc19f62fda6034449ea46c0d"
        ],
        [
            "elim HP2; clear HP2; intro HFalse; apply eq_sym in HFalse; treat_equalities; [apply HDiff4; apply opp_uniqueness with O E E' O; try apply opp0; Col; apply opp_comm; auto|].",
            "VernacExtend",
            "8148fda2c01a7087fa2dcee9a97677c6be2de6e6"
        ],
        [
            "assert (O = BXMAX) by (apply prod_uniqueness with O E E' O CXMAX; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "7ff5d9b81e413f2dc200e09e76bc6dda8753ce04"
        ],
        [
            "assert (O = BYMAY) by (apply prod_uniqueness with O E E' O CYMAY; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "05ba1347b2b7086336cc1b2dbef5760c6cdf898d"
        ],
        [
            "treat_equalities; apply diff_null_eq in HBXMAX; apply diff_null_eq in HBYMAY.",
            "VernacExtend",
            "19994fa08298240d7ef956a1d13561baf891f5b6"
        ],
        [
            "treat_equalities; apply HDiff1; rewrite eq_points_coordinates; [|apply HCdA|apply HCdB]; auto.",
            "VernacExtend",
            "1015047734075a350795f5b42e05232f20e408df"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply sum_uniquenessA with O E E' P1 XProd'; auto.",
            "VernacExtend",
            "040566579abfaad1552d91ee77943494ea0aaf5b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBet2 : Bet BX CX AX /\\ Bet BY CY AY) by (apply bet_betCood with O E S U1 U2 B C A; auto).",
            "VernacExtend",
            "39d4c6c97801f6aa25f00621286a26dfdedebb9d"
        ],
        [
            "destruct HBet2 as [HBet2 HBet3].",
            "VernacExtend",
            "35dc1c90d35333818cd58675d997ecf5137e857b"
        ],
        [
            "assert (HBet':= HBet1).",
            "VernacExtend",
            "798b2e43ba8db3624d976e434266f64ff5772554"
        ],
        [
            "rewrite characterization_of_betweenness in HBet'; [|apply HCdB|apply HCdC|apply HCdA| apply HCXMBX|apply HCYMBY|apply HAXMBX| apply HAYMBY].",
            "VernacExtend",
            "033c13ab8f347107971f86a483650d8edb937a80"
        ],
        [
            "destruct HBet' as [T [HDiff4 [HColT [HLe1 [HLe2 [HProd1 HProd2]]]]]].",
            "VernacExtend",
            "e873f6dca9ddbc56f312f10011866c3710c032d7"
        ],
        [
            "apply prod_uniqueness with O E E' AXMBX BYMCY; auto.",
            "VernacExtend",
            "e3000aaf9bc1a667bdabf0b542c1dcdf30dc098a"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "destruct (prod_exists O E E' HNC ME T) as [P HP]; Col.",
            "VernacExtend",
            "ebaa1e8756db9788f1896f51baa2ccd6b5bb4329"
        ],
        [
            "apply prod_assoc2 with P AYMBY BXMCX; apply prod_comm; auto.",
            "VernacExtend",
            "48189bc871dbc999f00f1daf8a197f9c49818488"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with ME T CXMBX; auto.",
            "VernacExtend",
            "4aa650e1243ffee25e6b9251ba9224b548b340fc"
        ],
        [
            "apply prod_comm; apply opp_prod; auto.",
            "VernacExtend",
            "365ff7a53860cf88c09cf2c800f46bff304fdf7e"
        ],
        [
            "apply diff_opp with CX BX; auto.",
            "VernacExtend",
            "d48311a0d1c07b31d13e029515d0eff249029b21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc2 with T ME CYMBY; apply prod_comm; auto.",
            "VernacExtend",
            "a35ac702040f741b3c80c5cbdd210aa69044324d"
        ],
        [
            "apply prod_comm; apply opp_prod; auto.",
            "VernacExtend",
            "365ff7a53860cf88c09cf2c800f46bff304fdf7e"
        ],
        [
            "apply diff_opp with CY BY; auto.",
            "VernacExtend",
            "5253043cad5eb1974d21d46b4d3b958cd43b7bc3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBet2 : Bet CX AX BX /\\ Bet CY AY BY) by (apply bet_betCood with O E S U1 U2 C A B; auto).",
            "VernacExtend",
            "9e8ce489f6aefceefeda2daf9e3cadb7fdf9b25c"
        ],
        [
            "destruct HBet2 as [HBet2 HBet3].",
            "VernacExtend",
            "35dc1c90d35333818cd58675d997ecf5137e857b"
        ],
        [
            "assert (HBet':= HBet1).",
            "VernacExtend",
            "798b2e43ba8db3624d976e434266f64ff5772554"
        ],
        [
            "rewrite characterization_of_betweenness in HBet'; [|apply HCdC|apply HCdA|apply HCdB| apply HAXMCX|apply HAYMCY|apply HBXMCX| apply HBYMCY].",
            "VernacExtend",
            "1b46a06a838a96779ac4d06f16f5a80d485c8e0c"
        ],
        [
            "destruct HBet' as [T [HDiff4 [HColT [HLe1 [HLe2 [HProd1 HProd2]]]]]].",
            "VernacExtend",
            "e873f6dca9ddbc56f312f10011866c3710c032d7"
        ],
        [
            "assert (HSumX : Sum O E E' CXMAX AXMBX CXMBX) by (apply sum_diff_diff with CX AX BX; auto).",
            "VernacExtend",
            "206678cfa1c7788559e32eb16311a99b59d80c2a"
        ],
        [
            "assert (HSumY : Sum O E E' CYMAY AYMBY CYMBY) by (apply sum_diff_diff with CY AY BY; auto).",
            "VernacExtend",
            "a4ee1f30101a1722ce374a716461ac093a50e7ed"
        ],
        [
            "destruct (prod_exists O E E' HNC CXMAX BYMCY) as [P1 HP1]; Col.",
            "VernacExtend",
            "2f3ad7a4b473830c7c7159fa7dc370f27604f523"
        ],
        [
            "destruct (prod_exists O E E' HNC CYMAY BXMCX) as [P2 HP1']; Col.",
            "VernacExtend",
            "f2801533a6b78f61a4d5d6885d2b4023fdb04744"
        ],
        [
            "assert (P1 = P2); treat_equalities.",
            "VernacExtend",
            "0c1e05a3b1bfd07b554a1f5030da54cc55b616ef"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniqueness with O E E' CXMAX BYMCY; auto.",
            "VernacExtend",
            "42d0697b8e7899953ddb59fe035522ad18103580"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "destruct (prod_exists O E E' HNC ME T) as [P HP]; Col.",
            "VernacExtend",
            "ebaa1e8756db9788f1896f51baa2ccd6b5bb4329"
        ],
        [
            "apply prod_assoc1 with BXMCX P CYMAY; apply prod_comm; auto.",
            "VernacExtend",
            "a03d821db6bb0abad622d7af84bdc16a10a4390d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with ME T AXMCX; auto.",
            "VernacExtend",
            "9a2225bc063b3a600c7115ab7d84c3c5b51eb100"
        ],
        [
            "apply prod_comm; apply opp_prod; auto.",
            "VernacExtend",
            "365ff7a53860cf88c09cf2c800f46bff304fdf7e"
        ],
        [
            "apply diff_opp with AX CX; auto.",
            "VernacExtend",
            "de9a63527b0fd2c3838860508294c9f34a6eff83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc2 with T ME AYMCY; apply prod_comm; auto.",
            "VernacExtend",
            "6493e71a74b661b100203a1f67ea9a7276effd3b"
        ],
        [
            "apply prod_comm; apply opp_prod; auto.",
            "VernacExtend",
            "365ff7a53860cf88c09cf2c800f46bff304fdf7e"
        ],
        [
            "apply diff_opp with AY CY; auto.",
            "VernacExtend",
            "7f8b4a796012f67bc02b62d968e8e5a41484c44c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HColP1 : Col O E P1) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "40e226cb9c80bd0f3486c98c551cde1a845d8fba"
        ],
        [
            "destruct (sum_exists O E E' HNC XProd P1) as [XProd' HXProd']; Col.",
            "VernacExtend",
            "bc48e949522e8188c907542c6a0f304ded9c1360"
        ],
        [
            "destruct (prod_exists O E E' HNC CXMBX BYMCY) as [P2 HP2]; Col.",
            "VernacExtend",
            "ffc9165c0377004acd5cee1fc95991ff12fee662"
        ],
        [
            "assert (P2 = XProd'); treat_equalities.",
            "VernacExtend",
            "ac1ef3057bb16836ac658085d02010779d4b7109"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply sum_uniqueness with O E E' XProd P1; auto.",
            "VernacExtend",
            "c6e21fbfc1f508b139255d035e18e4bfb069800e"
        ],
        [
            "apply sum_comm; Col.",
            "VernacExtend",
            "01ff5cd800d616c220193ee53f0541b4920900d5"
        ],
        [
            "apply distr_r with CXMAX AXMBX BYMCY CXMBX; auto.",
            "VernacExtend",
            "26e262d9731a14746f93a319caf9fc8748beceed"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (sum_exists O E E' HNC YProd P1) as [YProd' HYProd']; Col.",
            "VernacExtend",
            "b5b37d8e356c575120eaf9ccafa7221a5fbd7c52"
        ],
        [
            "assert (P2 = YProd'); treat_equalities.",
            "VernacExtend",
            "3740105896f20acdac56e987b6c2683838f9771f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply sum_uniqueness with O E E' YProd P1; auto.",
            "VernacExtend",
            "d248c9a88bcb442453514d12b9f627fc06b593d8"
        ],
        [
            "apply sum_comm; Col.",
            "VernacExtend",
            "01ff5cd800d616c220193ee53f0541b4920900d5"
        ],
        [
            "apply distr_r with CYMAY AYMBY BXMCX CYMBY; auto.",
            "VernacExtend",
            "610249340052aa3c2dc751f2373ec1678ee3f108"
        ],
        [
            "apply prod_comm; auto.",
            "VernacExtend",
            "503764df0ff839a91c78a024694c23679041dbb5"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "apply prod_assoc1 with CXMBX ME BYMCY; auto.",
            "VernacExtend",
            "1b0ce9f556d9c2ce1a22a86cf03d268d8a52aa4e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply opp_prod; auto.",
            "VernacExtend",
            "329a1c018845c558e366404c7a3f4fb8f7e6e6fe"
        ],
        [
            "apply diff_opp with CX BX; auto.",
            "VernacExtend",
            "d48311a0d1c07b31d13e029515d0eff249029b21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_comm; apply opp_prod; auto.",
            "VernacExtend",
            "365ff7a53860cf88c09cf2c800f46bff304fdf7e"
        ],
        [
            "apply diff_opp with CY BY; auto.",
            "VernacExtend",
            "5253043cad5eb1974d21d46b4d3b958cd43b7bc3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply sum_uniquenessA with O E E' P1 P2; auto.",
            "VernacExtend",
            "aa7011b7252cd30a6945f4c559fd87a12756a12b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (eq_dec_points O AXMBX); intro HDiff1; treat_equalities; try apply diff_null_eq in HAXMBX; elim (eq_dec_points O AYMBY); intro HDiff2; treat_equalities; try apply diff_null_eq in HAYMBY; elim (eq_dec_points O BXMCX); intro HDiff3; treat_equalities; try apply diff_null_eq in HBXMCX; elim (eq_dec_points O BYMCY); intro HDiff4; treat_equalities; try apply diff_null_eq in HBYMCY; treat_equalities.",
            "VernacExtend",
            "6b2e56f9f7d665267b09a95630014e2e1c44cf47"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A = B) by (rewrite eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "d1e826bee7e4d45f8162f5399a763a15238cb2bd"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A = B) by (rewrite eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "d1e826bee7e4d45f8162f5399a763a15238cb2bd"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A = B) by (rewrite eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "d1e826bee7e4d45f8162f5399a763a15238cb2bd"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (A = B) by (rewrite eq_points_coordinates; [|apply HCdA|apply HCdB]; auto).",
            "VernacExtend",
            "d1e826bee7e4d45f8162f5399a763a15238cb2bd"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (B = C) by (rewrite eq_points_coordinates; [|apply HCdB|apply HCdC]; auto).",
            "VernacExtend",
            "7895833555cf0aa93f6c20039de68661ad53f6cc"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply same_abscissa_col with O E S U1 U2 AX AY BY CY; auto.",
            "VernacExtend",
            "933830362b560cf8064836fb707117ed64206afe"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_l_eq in HXProd; apply eq_sym in HXProd; treat_equalities.",
            "VernacExtend",
            "3207f69d521343dd84894380756094cc2aeed0b9"
        ],
        [
            "apply prod_null in HYProd; elim HYProd; clear HYProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "0c82bc1999741f83759181f1b56d029fe91bec17"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_l_eq in HXProd; apply eq_sym in HXProd; treat_equalities.",
            "VernacExtend",
            "3207f69d521343dd84894380756094cc2aeed0b9"
        ],
        [
            "apply prod_null in HYProd; elim HYProd; clear HYProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "0c82bc1999741f83759181f1b56d029fe91bec17"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (B = C) by (rewrite eq_points_coordinates; [|apply HCdB|apply HCdC]; auto).",
            "VernacExtend",
            "7895833555cf0aa93f6c20039de68661ad53f6cc"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_l_eq in HYProd; apply eq_sym in HYProd; treat_equalities.",
            "VernacExtend",
            "a999a979275f6423e263139781c0b161f28b301b"
        ],
        [
            "apply prod_null in HXProd; elim HXProd; clear HXProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "1ab6e3d506db9a54a35f094ae20797fb250327b4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply same_abscissa_col with O E S U2 U1 AY AX BX CX; auto; apply coord_exchange_axes; auto.",
            "VernacExtend",
            "1960f843148c19681ebf0e3604d2a7571ebbe19b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_l_eq in HYProd; apply eq_sym in HYProd; treat_equalities.",
            "VernacExtend",
            "a999a979275f6423e263139781c0b161f28b301b"
        ],
        [
            "apply prod_null in HXProd; elim HXProd; clear HXProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "1ab6e3d506db9a54a35f094ae20797fb250327b4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (B = C) by (rewrite eq_points_coordinates; [|apply HCdB|apply HCdC]; auto).",
            "VernacExtend",
            "7895833555cf0aa93f6c20039de68661ad53f6cc"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_r_eq in HYProd; apply eq_sym in HYProd; treat_equalities.",
            "VernacExtend",
            "2f14e95879b384cb382650cd3831383d1eca3685"
        ],
        [
            "apply prod_null in HXProd; elim HXProd; clear HXProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "1ab6e3d506db9a54a35f094ae20797fb250327b4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_O_r_eq in HXProd; apply eq_sym in HXProd; treat_equalities.",
            "VernacExtend",
            "cbbefc78465b1fdb3beb5982cc46962ac4992b26"
        ],
        [
            "apply prod_null in HYProd; elim HYProd; clear HYProd; intro H; apply eq_sym in H; treat_equalities; intuition.",
            "VernacExtend",
            "0c82bc1999741f83759181f1b56d029fe91bec17"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (length_existence O E E' AX BX) as [L1 HL1]; Col.",
            "VernacExtend",
            "d2d3b089ae9a34f238d202623a38eefdabc2abb6"
        ],
        [
            "assert (HColL1 : Col O E L1) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "5125a96afb60c1e5433ecc0c7dd2013564cc25cd"
        ],
        [
            "destruct (length_existence O E E' AX CX) as [L2 HL2]; Col.",
            "VernacExtend",
            "b0e31c0b9851a2bb727951bf995fe0d08ea264ad"
        ],
        [
            "assert (HColL2 : Col O E L2) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "0eb1f37a90381adc25b8348bfb14e6b08a0e93f6"
        ],
        [
            "destruct (length_existence O E E' BX CX) as [L3 HL3]; Col.",
            "VernacExtend",
            "fe438d6871eac38ace02ea97fb9e517ef68137a6"
        ],
        [
            "assert (HColL3 : Col O E L3) by (unfold Length in *; spliter; Col).",
            "VernacExtend",
            "f568b23223306535994902d338ea06df06a8b87b"
        ],
        [
            "assert (HElim : LeP O E E' L1 L3 /\\ LeP O E E' L2 L3 \\/ LeP O E E' L1 L2 /\\ LeP O E E' L3 L2 \\/ LeP O E E' L2 L1 /\\ LeP O E E' L3 L1).",
            "VernacExtend",
            "c995593a5066243884e069142447751e1df7d309"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H1 : LeP O E E' L1 L2 \\/ LeP O E E' L2 L1) by (apply col_2_le_or_ge; Col).",
            "VernacExtend",
            "49fac957927961ee344efa2a8183e6457ce093b0"
        ],
        [
            "assert (H2 : LeP O E E' L1 L3 \\/ LeP O E E' L3 L1) by (apply col_2_le_or_ge; Col).",
            "VernacExtend",
            "b78157e642b4594d568c1e0a487d6e90dc5138b4"
        ],
        [
            "assert (H3 : LeP O E E' L2 L3 \\/ LeP O E E' L3 L2) by (apply col_2_le_or_ge; Col).",
            "VernacExtend",
            "752c5b4ea2264abdf22f321cb0ff80281c60e173"
        ],
        [
            "elim H1; clear H1; intro HLe1; elim H2; clear H2; intro HLe2; elim H3; clear H3; intro HLe3; auto.",
            "VernacExtend",
            "d34c541980ed2c6a3a0b0126cb120c7f28c6840d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply leP_asym in HLe2; treat_equalities; [left; split; auto; right; auto|].",
            "VernacExtend",
            "ac4c207b9159f9e3004aa6b2eec219dfaf4b94db"
        ],
        [
            "apply leP_trans with L2; auto.",
            "VernacExtend",
            "0eaff01a3440d65f06192d76ecaf9d354ecc7e21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply leP_asym in HLe2; treat_equalities; [left; split; auto; right; auto|].",
            "VernacExtend",
            "ac4c207b9159f9e3004aa6b2eec219dfaf4b94db"
        ],
        [
            "apply leP_trans with L2; auto.",
            "VernacExtend",
            "0eaff01a3440d65f06192d76ecaf9d354ecc7e21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "do 2 (try (elim HElim; clear HElim; intro HElim; try destruct HElim as [HLe1 HLe2])); [right; right|left|right; left].",
            "VernacExtend",
            "7a70f20ce0eeb009fa2709e7830f3d03b79aaee3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBetX : Bet CX AX BX).",
            "VernacExtend",
            "422c28230dd153ef3dfc0fc320ad27fdf959378a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l5_12_b; [assert_diffs; ColR| apply length_leP_le_1 with O E E' L2 L3| apply length_leP_le_1 with O E E' L1 L3]; auto; apply length_sym; auto.",
            "VernacExtend",
            "553ed0b41b00e8114350b63559f0eb2ff97446ac"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite characterization_of_betweenness; [|apply HCdC|apply HCdA|apply HCdB| apply HAXMCX|apply HAYMCY|apply HBXMCX|apply HBYMCY].",
            "VernacExtend",
            "64991c76b19a6a3efb292eae267d63500763e2cd"
        ],
        [
            "assert (HDiff5 : O <> L3).",
            "VernacExtend",
            "a67c1ae4d593d064ef5eefd875ef344e5c8956f3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply length_id in HL3; spliter; treat_equalities.",
            "VernacExtend",
            "c7373d3244712b75562c994938e2142aadafe42f"
        ],
        [
            "apply HDiff1; apply diff_uniqueness with O E E' BX BX; auto; apply diff_null; Col.",
            "VernacExtend",
            "780892ffc0b5988ad107b24ed7797cb7c11857e2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe3 : LeP O E E' O L3) by (apply length_pos with BX CX; auto).",
            "VernacExtend",
            "9483b7ef8236b9951d8b5fc6fdf5ae86423d23e2"
        ],
        [
            "destruct (inv_exists O E E' L3) as [IBC HIBC]; Col.",
            "VernacExtend",
            "6d3c835a66c7f3315dff88fefd0fea66079a9966"
        ],
        [
            "assert (HColIBC : Col O E IBC) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "a07ca75876df9cbd2e92c8ca7c9bc1fff73717f4"
        ],
        [
            "assert (HLe4 : LeP O E E' O IBC) by (apply pos_inv_pos with L3; auto).",
            "VernacExtend",
            "73db62a0dfd14ea5070197d739bde58b5e31a97b"
        ],
        [
            "destruct (prod_exists O E E' HNC L2 IBC) as [T HT]; Col; exists T.",
            "VernacExtend",
            "1413ba2d71e67c31e214051ee2b578451813dfa2"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; [unfold Prod, Ar2 in *; spliter; Col|].",
            "VernacExtend",
            "f0397de2fcfca61e7224c7b05325bacc8035c959"
        ],
        [
            "assert (HLe5 : LeP O E E' O L2) by (apply length_pos with AX CX; auto).",
            "VernacExtend",
            "f44b4623cf119bdfac13905c30e7c0916a49adf0"
        ],
        [
            "split; [apply compatibility_of_prod_with_order with L2 IBC; auto|].",
            "VernacExtend",
            "ca2ee7e11d2dd9d9e0609c9d0ee14cd822af4ff1"
        ],
        [
            "split; [apply le_pos_prod_le with L2 L3 IBC; auto; apply prod_comm; auto|].",
            "VernacExtend",
            "3cff65f156f54a7358e009698f9fd9f8321d320e"
        ],
        [
            "assert (HDiff6 : O <> E) by (assert_diffs; auto).",
            "VernacExtend",
            "0d199f5e0a7444eafcedbe260bbe075cf6f74c64"
        ],
        [
            "destruct (prod_exists O E E' HNC BXMCX BYMCY) as [P HP]; Col.",
            "VernacExtend",
            "8ba49fd830556b77b61b5dccb12eed896ad05570"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMCX BYMCY) as [Pr HProd1]; Col.",
            "VernacExtend",
            "394cbb2d3e0566f0901ce1efad3b13f5d3865c06"
        ],
        [
            "assert (HSum : Sum O E E' XProd P Pr).",
            "VernacExtend",
            "06e8effd62c1320b02f07814b22db67d8b45c5c3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply distr_l with BYMCY AXMBX BXMCX AXMCX; auto; try apply prod_comm; auto.",
            "VernacExtend",
            "47c8cc713f7fe4bb5c5f703e6508fd53b4496b17"
        ],
        [
            "apply sum_diff_diff with AX BX CX; auto.",
            "VernacExtend",
            "7ec4fa43e307e9b69220b6790d1685dd9f8c3cea"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HProd2 : Prod O E E' AYMCY BXMCX Pr).",
            "VernacExtend",
            "3370a1b9ae4fb2e9560967a013c75a32ee471560"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (prod_exists O E E' HNC AYMCY BXMCX) as [P' HP']; Col.",
            "VernacExtend",
            "d22f408815fd0c9df49c6302116a7798212ec479"
        ],
        [
            "assert (Pr = P'); treat_equalities; auto.",
            "VernacExtend",
            "ac6e11f29959ebc4df36c14306dba6c2bd4a0de0"
        ],
        [
            "apply sum_uniqueness with O E E' XProd P; auto.",
            "VernacExtend",
            "875e3d412c7f8ad335cf78377ff1f7ee847a0293"
        ],
        [
            "apply distr_l with BXMCX AYMBY BYMCY AYMCY; auto; try apply prod_comm; auto.",
            "VernacExtend",
            "2fc8f0540076365e44dd2c8fa05a2fd3a26d51b3"
        ],
        [
            "apply sum_diff_diff with AY BY CY; auto.",
            "VernacExtend",
            "083c848df6331cb96fc41db9bfd04a1249ea88fa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HProd3 : Prod O E E' T L3 L2).",
            "VernacExtend",
            "e886ecb5d770f1f8ae5219504855fd3369b4fe8d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with L2 IBC E; auto; try apply prod_1_r; Col.",
            "VernacExtend",
            "6fa676c4789a8b46d4b187fc1346f5e977b3bfcf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points O L2); intro HDiff7; treat_equalities.",
            "VernacExtend",
            "3f730ba8dde5eed36ec1a05d9104ce85ea3022f7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (O = T) by (apply prod_uniqueness with O E E' O IBC; auto; apply prod_0_l; Col).",
            "VernacExtend",
            "223cf5b4390b6c36bbf43a33fc9d3d0a53a1ff83"
        ],
        [
            "apply length_id in HL2; spliter; treat_equalities.",
            "VernacExtend",
            "6ba1bd9e6e685e716f24e3f54465b9852e6c56ee"
        ],
        [
            "assert (O = AXMCX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "71977f23a6923e99f91b6aa43e19abe067ed2493"
        ],
        [
            "treat_equalities; split; [apply prod_0_l; Col|].",
            "VernacExtend",
            "27a62726a8652bda0d0da3190d6fc45ea24aa961"
        ],
        [
            "apply diff_null_eq in HAXMCX; treat_equalities.",
            "VernacExtend",
            "30c210098307363b4425a24f16e5569880357c41"
        ],
        [
            "assert (BXMAX = BXMCX) by (apply diff_uniqueness with O E E' BX AX; auto).",
            "VernacExtend",
            "46a874f0022ef31700ad96a6bbbb7a58c2a14099"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (AYMBY = CYMBY).",
            "VernacExtend",
            "6837db293784c0646d26334f133a5ac1025891e0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_uniquenessA with O E E' BXMAX XProd; auto; apply prod_comm.",
            "VernacExtend",
            "41d4ed6a4dd7c552e5badedc7b189d416405b36d"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "apply prod_assoc1 with AXMBX ME BYMCY; auto; [apply diff_2_prod with AX BX| apply prod_comm; apply diff_2_prod with CY BY]; auto.",
            "VernacExtend",
            "cd759f2a8ae88bdf006e04bebacfb043e7db0966"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (AY = CY); treat_equalities.",
            "VernacExtend",
            "1102bcec1da875c1f6f736ac6384247d1a8f11c3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply diff_uniquenessA with O E E' BY AYMBY; auto.",
            "VernacExtend",
            "f1ea619c199e0dcd15bbc48f25a1520e1a88dde2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (O = AYMCY); treat_equalities; [|apply prod_0_l; Col].",
            "VernacExtend",
            "714f7e90746865f5c796e1ba00252fb3ff7f5b1b"
        ],
        [
            "apply diff_uniqueness with O E E' AY AY; auto.",
            "VernacExtend",
            "7f8f22332a23797559c47a823f4b7b48619d1125"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (length_eq_or_opp O E E' AX CX L2 AXMCX); auto; try apply length_sym; auto; intro HOpp; treat_equalities.",
            "VernacExtend",
            "5636ff754793f04ff12ba953f46be5e2e27472d0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HLe6 : LtP O E E' CX AX).",
            "VernacExtend",
            "d4732a10e83a1da2eec869513f4719cfbe442beb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' CX AX).",
            "VernacExtend",
            "518d954a0c485bcb248d3c8b59f88fb5ab3702e5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L2 CX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "71a80a2a53656ea2d793bc5ae305dbde377983dc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' CX CX; auto.",
            "VernacExtend",
            "f20af5c7fd71ac024ee3da2deb288623fdbadf32"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' CX BX) by (apply bet_lt12_le13 with AX; auto).",
            "VernacExtend",
            "3cc688207bfa8ad805f2aef1bcf952f847ac1bae"
        ],
        [
            "assert (L3 = BXMCX) by (apply l16_9_1 with O E E' BX CX; auto; left; auto).",
            "VernacExtend",
            "7e3fd738ecbff54e1ae96368de7ffc79488e1ead"
        ],
        [
            "treat_equalities; split; auto.",
            "VernacExtend",
            "27b654ff5819dfa4a12092fa86ccae06de87af5c"
        ],
        [
            "apply prod_assoc1 with IBC L2 Pr; auto; apply prod_comm; auto.",
            "VernacExtend",
            "59793cd873d800a0bb268f42a34b9cc55c63c0dc"
        ],
        [
            "apply prod_assoc1 with AYMCY L3 E; auto; apply prod_comm; auto.",
            "VernacExtend",
            "2344312394e0ad15c9ff8ef17a21e2a6e06d1b87"
        ],
        [
            "apply prod_1_l; Col.",
            "VernacExtend",
            "f37a81b304e5e7cb63162b211584fcaf5f9444b9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (L2 = CXMAX); treat_equalities.",
            "VernacExtend",
            "d467b6002e9344315b11bab15a12cea28801d46a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply opp_uniqueness with O E E' AXMCX; Col; apply opp_comm; auto.",
            "VernacExtend",
            "9322703a7b4439013bdf252a84461cc7ffd21d3a"
        ],
        [
            "apply diff_opp with CX AX; auto.",
            "VernacExtend",
            "382ad37457aa02f601c3aa0448a1bc0cb2624c22"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe6 : LtP O E E' AX CX).",
            "VernacExtend",
            "7e156bed9b4c56313cb2339bc9d8c6325fd0f00e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' AX CX).",
            "VernacExtend",
            "8c24c440d1152b058cbd8249ff0d27cc68167b26"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L2 AX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "cbf3b59274d4c0cb96917cb45448caecc594a314"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' AX AX; auto.",
            "VernacExtend",
            "9a6bbf4260f914ebc90175a9b168fd9637ea476a"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' BX CX) by (apply bet_lt21_le31 with AX; auto).",
            "VernacExtend",
            "0ce33b7bb94d2a47b410e6ece8ee337e1fa39f8e"
        ],
        [
            "assert (L3 = CXMBX); treat_equalities.",
            "VernacExtend",
            "4dbe4df2323e5fc4a0c988eb4c637e7d28d2000c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l16_9_1 with O E E' CX BX; auto; left; auto; apply length_sym; auto.",
            "VernacExtend",
            "200455275b9e79bea9b277f2ae3c997cdc7fa27e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColT : Col O E T) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "057731198eb96bfb9a0df55b14c54fea152f16a6"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "destruct (prod_exists O E E' HNC ME T) as [OppT HMT]; Col.",
            "VernacExtend",
            "3e638970c985d2ef02ed9d68191104a66a0b0a4d"
        ],
        [
            "assert (Prod O E E' T BXMCX AXMCX); [|split; auto].",
            "VernacExtend",
            "26bb8e22d9eee0150a803355354fddb5fb3ee9be"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc2 with ME L3 OppT; apply prod_comm; auto; [apply opp_prod; auto; apply diff_opp with CX BX; auto| apply prod_assoc2 with T ME L2; apply prod_comm; auto; apply prod_comm; apply opp_prod; auto].",
            "VernacExtend",
            "ea5028b37696ea5a240c21e64080ea309bddb432"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (opp_exists O E E' HNC IBC) as [MIBC HMIBC]; Col.",
            "VernacExtend",
            "13a059ab78f8484685e84c7c8b9cc7040277800b"
        ],
        [
            "apply prod_assoc1 with MIBC AXMCX Pr; auto; apply prod_comm; auto.",
            "VernacExtend",
            "bc8c96eb10c5320aa89c31c78dfb598b126016f4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc2 with ME IBC L2; auto; [|apply prod_comm]; apply opp_prod; auto; apply diff_opp with AX CX; auto.",
            "VernacExtend",
            "53fa2284c77efa79f11694db6039ec81120fa562"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (opp_exists O E E' HNC Pr) as [MProd HMProd]; Col; [unfold Prod, Ar2 in *; spliter; Col|].",
            "VernacExtend",
            "d074392e35e528c4b3a618210edb2890151ba742"
        ],
        [
            "apply prod_assoc2 with ME IBC MProd; auto; [apply opp_prod|apply prod_comm; apply opp_prod|]; auto.",
            "VernacExtend",
            "895feb61c3140c1a55f2773d9958b68c7d501af7"
        ],
        [
            "apply prod_assoc1 with AYMCY L3 E; auto; apply prod_comm; auto; try apply prod_1_l; Col.",
            "VernacExtend",
            "3591b88450b0cd9ca1bd91d541b2e0d46acd5921"
        ],
        [
            "apply prod_assoc1 with ME BXMCX Pr; apply prod_comm; auto; apply opp_prod; auto; apply diff_opp with BX CX; auto.",
            "VernacExtend",
            "50325345a85fbeb9556c3e9ff3a8064c0e0a323a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBetX : Bet AX BX CX).",
            "VernacExtend",
            "ee9c0d53aba937568ab470d72985036763535a35"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l5_12_b; [assert_diffs; ColR| apply length_leP_le_1 with O E E' L1 L2| apply length_leP_le_1 with O E E' L3 L2]; auto; apply length_sym; auto.",
            "VernacExtend",
            "be24ba4a9510fb8f3e87b8fafd611c0de889adad"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite characterization_of_betweenness; [|apply HCdA|apply HCdB|apply HCdC| apply HBXMAX|apply HBYMAY|apply HCXMAX|apply HCYMAY].",
            "VernacExtend",
            "202ce96dfe975e10cd4d09cc8cf58b6ff77501d8"
        ],
        [
            "assert (HDiff5 : O <> L2).",
            "VernacExtend",
            "fb1df28f093a56509d04baaefb3c5fdce21f0ef0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply length_id in HL2; spliter; treat_equalities.",
            "VernacExtend",
            "6d61119fa51850a5e34cefda9a0af0093f2a9164"
        ],
        [
            "apply HDiff1; apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col.",
            "VernacExtend",
            "9e4b5cd44f0c24d6b5b3b26b32555ec735eb48f8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe3 : LeP O E E' O L2) by (apply length_pos with AX CX; auto).",
            "VernacExtend",
            "d9f3a6b45378c3ce21be23be30567e2f50628ede"
        ],
        [
            "destruct (inv_exists O E E' L2) as [IAC HIAC]; Col.",
            "VernacExtend",
            "cb3247c3c69ca85f236bc6fe730a180c245ff235"
        ],
        [
            "assert (HColIAC : Col O E IAC) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "7a073be95dd77f2ba7561cf0b6171bb2d47470f0"
        ],
        [
            "assert (HLe4 : LeP O E E' O IAC) by (apply pos_inv_pos with L2; auto).",
            "VernacExtend",
            "3dd3893dc2633f6332ca330b55f42460dc723ce7"
        ],
        [
            "destruct (prod_exists O E E' HNC L1 IAC) as [T HT]; Col; exists T.",
            "VernacExtend",
            "7b0d9a3ff5b48685580b7292cc9c7f9d2a23457a"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; [unfold Prod, Ar2 in *; spliter; Col|].",
            "VernacExtend",
            "f0397de2fcfca61e7224c7b05325bacc8035c959"
        ],
        [
            "assert (HLe5 : LeP O E E' O L1) by (apply length_pos with AX BX; auto).",
            "VernacExtend",
            "cc403616aa2adc24552da150d305ab61feb20d40"
        ],
        [
            "split; [apply compatibility_of_prod_with_order with L1 IAC; auto|].",
            "VernacExtend",
            "7e1b1f8fe895826d0c571ca39828655177b73bc6"
        ],
        [
            "split; [apply le_pos_prod_le with L1 L2 IAC; auto; apply prod_comm; auto|].",
            "VernacExtend",
            "7a7dc378193d432d331b2f2f5cb58ca3832e88ab"
        ],
        [
            "assert (HDiff6 : O <> E) by (assert_diffs; auto).",
            "VernacExtend",
            "0d199f5e0a7444eafcedbe260bbe075cf6f74c64"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMBX AYMBY) as [P HP]; Col.",
            "VernacExtend",
            "ac5f8ecfd727ad6e129b7c8995d8ba6abfc858a6"
        ],
        [
            "destruct (prod_exists O E E' HNC AXMCX AYMBY) as [Pr HProd1]; Col.",
            "VernacExtend",
            "cd594b57d754cb34041eacc0949259714a2221ce"
        ],
        [
            "assert (HSum : Sum O E E' XProd P Pr).",
            "VernacExtend",
            "06e8effd62c1320b02f07814b22db67d8b45c5c3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply distr_l with AYMBY BXMCX AXMBX AXMCX; auto; try apply prod_comm; auto.",
            "VernacExtend",
            "03689aebc7701119089616d68c63f5a313f7f394"
        ],
        [
            "apply sum_comm; Col; apply sum_diff_diff with AX BX CX; auto.",
            "VernacExtend",
            "9d5a3c609a1029d5d8c5098b661425d3122768f0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HProd2 : Prod O E E' AYMCY AXMBX Pr).",
            "VernacExtend",
            "ab40e22159ff98c708152bb4e2991e57daab6bb0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (prod_exists O E E' HNC AYMCY AXMBX) as [P' HP']; Col.",
            "VernacExtend",
            "1b9e581c64374dfd63dd18e6f71a4ce22a0a9858"
        ],
        [
            "assert (Pr = P'); treat_equalities; auto.",
            "VernacExtend",
            "ac6e11f29959ebc4df36c14306dba6c2bd4a0de0"
        ],
        [
            "apply sum_uniqueness with O E E' XProd P; auto.",
            "VernacExtend",
            "875e3d412c7f8ad335cf78377ff1f7ee847a0293"
        ],
        [
            "apply distr_l with AXMBX BYMCY AYMBY AYMCY; auto; try apply prod_comm; auto.",
            "VernacExtend",
            "87f17147898d465dfc00f81670c038505990a8cf"
        ],
        [
            "apply sum_comm; Col; apply sum_diff_diff with AY BY CY; auto.",
            "VernacExtend",
            "6aa481f5cb24cf87cf3a53297e0d9e0b16508085"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HProd3 : Prod O E E' T L2 L1).",
            "VernacExtend",
            "e18b5e9312255290c3f54476b2ca086e31d1fc5f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with L1 IAC E; auto; try apply prod_1_r; Col.",
            "VernacExtend",
            "a9c4ba176abd04b7bdb1e1b265a6e6ec1e8fd3c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points O L1); intro HDiff7; treat_equalities.",
            "VernacExtend",
            "6111c0fb1db1134aee0845757c0409cdd8be8245"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_id in HL1; spliter; treat_equalities.",
            "VernacExtend",
            "c1dafc9dccdf9843a2f2be425b1b047228d35fce"
        ],
        [
            "assert (O = AXMBX) by (apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col).",
            "VernacExtend",
            "7c3c113532cd190c9ef93cb4b2dab7e407f70806"
        ],
        [
            "treat_equalities; intuition.",
            "VernacExtend",
            "f53281d353df22ef04776a73fed27eaf145b9ab5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (length_eq_or_opp O E E' AX BX L1 AXMBX); auto; try apply length_sym; auto; intro HOpp; treat_equalities.",
            "VernacExtend",
            "9c72df96ae37b3c295221dbb3a28f1797486d3f7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HLe6 : LtP O E E' BX AX).",
            "VernacExtend",
            "83f8a969876594ee87556ecffec2133c6a65ec59"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' BX AX).",
            "VernacExtend",
            "0a5224b8ad609934d9dbe64269d930b7f755570f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L1 BX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "477d75beef3ab7046e05429e3e2f12a8cccdd454"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' BX BX; auto.",
            "VernacExtend",
            "9748a1a8f7c91ad138e0994d40daddc12efbe261"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' CX AX) by (apply bet_lt21_le31 with BX; auto).",
            "VernacExtend",
            "74a8704ffc7b273c8db681fae4c645beb04e6486"
        ],
        [
            "assert (L2 = AXMCX) by (apply l16_9_1 with O E E' AX CX; auto; left; auto).",
            "VernacExtend",
            "3b9ed66712ffea03ad36bd5e6da5d900a95ff30a"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (HProd4 : Prod O E E' T CXMAX BXMAX); [|split; auto].",
            "VernacExtend",
            "835f9d3c0b4f1a1c9803c78cf996e84da3511637"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "apply prod_assoc1 with L1 IAC ME; auto; [|apply opp_prod; auto; apply diff_opp with AX BX; auto].",
            "VernacExtend",
            "b6826293701c3afc9974e937517c8802544f0a44"
        ],
        [
            "apply prod_assoc2 with L2 ME E; auto; apply opp_prod; auto.",
            "VernacExtend",
            "85551d98d0124794611ee50f048f9d4933770710"
        ],
        [
            "apply diff_opp with AX CX; auto.",
            "VernacExtend",
            "de9a63527b0fd2c3838860508294c9f34a6eff83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColProd : Col O E Pr) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "aadc7937af473a4b854171483c2bf28810cb0352"
        ],
        [
            "destruct (opp_exists O E E' HNC Pr) as [MProd HMProd]; Col.",
            "VernacExtend",
            "392a978b76bff35264ca039130fcf93662d79e23"
        ],
        [
            "apply prod_assoc1 with IAC L1 MProd; auto; apply prod_comm; auto; [apply prod_assoc1 with ME AYMCY Pr; auto; apply prod_comm; apply opp_prod; auto; apply diff_opp with AY CY; auto|].",
            "VernacExtend",
            "4f4e5b0265a957056ba80d5205663da62725bbcf"
        ],
        [
            "apply prod_assoc1 with BYMAY L2 E; apply prod_comm; auto; try apply prod_1_l; Col; apply prod_assoc2 with AYMBY ME Pr; auto; apply opp_prod; auto; apply diff_opp with AY BY; auto.",
            "VernacExtend",
            "a5b7b319bf1122e49165101acdc486a448fe63cb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (L1 = BXMAX); treat_equalities.",
            "VernacExtend",
            "517c5ebdf657bf77232f47a20b2ae9543a17f36c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply opp_uniqueness with O E E' AXMBX; Col; apply opp_comm; auto.",
            "VernacExtend",
            "62df06a9a069fa4a36e9f66a5f0d00f396506fad"
        ],
        [
            "apply diff_opp with BX AX; auto.",
            "VernacExtend",
            "85b9f250176abe20503c140e794efbf627c8d1e4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe6 : LtP O E E' AX BX).",
            "VernacExtend",
            "499af956b5288c417cb2e20e80e38c9a06e08f39"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' AX BX).",
            "VernacExtend",
            "d3dc73d02157d6aefa192b6d02ee1a9123472f28"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L1 AX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "b3ceae63c2eaac80139edd27ee6436bf7aaa79eb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' AX AX; auto.",
            "VernacExtend",
            "9a6bbf4260f914ebc90175a9b168fd9637ea476a"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' AX CX) by (apply bet_lt12_le13 with BX; auto).",
            "VernacExtend",
            "1f869750e821c9e34ecc87db7a4a3ad31c4f3e29"
        ],
        [
            "assert (L2 = CXMAX); treat_equalities.",
            "VernacExtend",
            "d467b6002e9344315b11bab15a12cea28801d46a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l16_9_1 with O E E' CX AX; auto; left; apply length_sym; auto.",
            "VernacExtend",
            "9ef3ef733911b55e227a1cfd6c2a29efe20a7f47"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "apply prod_assoc1 with IAC L1 Pr; apply prod_comm; auto; [apply prod_assoc1 with AYMCY ME AXMBX; auto; [|apply prod_comm]; apply opp_prod; auto; apply diff_opp with AY CY; auto|].",
            "VernacExtend",
            "ba759aee5ec8cbfb13395516f7b4ad57e672b42b"
        ],
        [
            "apply prod_assoc1 with BYMAY L2 E; apply prod_comm; auto; try apply prod_1_l; Col.",
            "VernacExtend",
            "d14ee773963e3ec718806dcc5f3be3bfdda20257"
        ],
        [
            "apply prod_assoc1 with AXMCX ME AYMBY; auto; [|apply prod_comm]; apply opp_prod; auto; [apply diff_opp with AX CX|apply diff_opp with BY AY]; auto.",
            "VernacExtend",
            "fad50448dc3333c39b7ef990bbf55d838d355564"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HBetX : Bet BX CX AX).",
            "VernacExtend",
            "206e1859f4bab0b08ae7d555db26176912f6b25b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l5_12_b; [assert_diffs; ColR| apply length_leP_le_1 with O E E' L3 L1| apply length_leP_le_1 with O E E' L2 L1]; auto; apply length_sym; auto.",
            "VernacExtend",
            "01bed26475eadf4c79abc831f0dc985c845c91ae"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite characterization_of_betweenness; [|apply HCdB|apply HCdC|apply HCdA| apply HCXMBX|apply HCYMBY|apply HAXMBX|apply HAYMBY].",
            "VernacExtend",
            "2fe1414eb37f9c30f113163b9302c118ae64a779"
        ],
        [
            "assert (HDiff5 : O <> L1).",
            "VernacExtend",
            "1d85397a25a9fc6b1a29e22969cea4eca1e97a20"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply length_id in HL1; spliter; treat_equalities.",
            "VernacExtend",
            "1cef2c3b8459b29888d55e3e50b8c175f42af1f3"
        ],
        [
            "apply HDiff1; apply diff_uniqueness with O E E' AX AX; auto; apply diff_null; Col.",
            "VernacExtend",
            "9e4b5cd44f0c24d6b5b3b26b32555ec735eb48f8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe3 : LeP O E E' O L1) by (apply length_pos with AX BX; auto).",
            "VernacExtend",
            "be1efdbaf217644cdd6c4734f6d57f73897999f5"
        ],
        [
            "destruct (inv_exists O E E' L1) as [IAB HIAB]; Col.",
            "VernacExtend",
            "c9b969dc571b4b8f2f628915a0aae0030be6b2ec"
        ],
        [
            "assert (HColIAB : Col O E IAB) by (unfold Prod, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "cd836b02c3b028512cabf2caf24ac83f9fd7eb2d"
        ],
        [
            "assert (HLe4 : LeP O E E' O IAB) by (apply pos_inv_pos with L1; auto).",
            "VernacExtend",
            "155fbc15596b85aa68aab0339324c3944b9ec3f7"
        ],
        [
            "destruct (prod_exists O E E' HNC L3 IAB) as [T HT]; Col; exists T.",
            "VernacExtend",
            "2f21718ae38c80f5bd07d13b3bd3bf9aa8a941a0"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; [unfold Prod, Ar2 in *; spliter; Col|].",
            "VernacExtend",
            "f0397de2fcfca61e7224c7b05325bacc8035c959"
        ],
        [
            "assert (HLe5 : LeP O E E' O L3) by (apply length_pos with BX CX; auto).",
            "VernacExtend",
            "4c8951aa97c26ffb9a9a65a223d422b64f2eaa7f"
        ],
        [
            "split; [apply compatibility_of_prod_with_order with L3 IAB; auto|].",
            "VernacExtend",
            "fabf1181b04f6d4b7764490b4a46303bf557e77f"
        ],
        [
            "split; [apply le_pos_prod_le with L3 L1 IAB; auto; apply prod_comm; auto|].",
            "VernacExtend",
            "a8b39ef0fe4b4ec85f4af7ebf9611657954e4e6d"
        ],
        [
            "assert (HDiff6 : O <> E) by (assert_diffs; auto).",
            "VernacExtend",
            "0d199f5e0a7444eafcedbe260bbe075cf6f74c64"
        ],
        [
            "assert (HProd1 : Prod O E E' T L1 L3).",
            "VernacExtend",
            "4731f7db48e92c51d4ae17e3bd6cf38afe9bbec1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply prod_assoc1 with L3 IAB E; auto; try apply prod_1_r; Col.",
            "VernacExtend",
            "95cfc7bff32a67f277b588762ac030a137ebdbf1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points O L3); intro HDiff7; treat_equalities.",
            "VernacExtend",
            "2a7ca41aef648000571cee3eca4c373dea5cbe16"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply length_id in HL3; spliter; treat_equalities.",
            "VernacExtend",
            "e73f7433d072faaecb3ed562fdbe2a0c6dd3d467"
        ],
        [
            "assert (O = BXMCX) by (apply diff_uniqueness with O E E' BX BX; auto; apply diff_null; Col).",
            "VernacExtend",
            "d4f8bdc34bd69ccc1f53fd58a128a775c3610ad4"
        ],
        [
            "treat_equalities; intuition.",
            "VernacExtend",
            "f53281d353df22ef04776a73fed27eaf145b9ab5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (length_eq_or_opp O E E' BX CX L3 BXMCX); auto; try apply length_sym; auto; intro HOpp; treat_equalities.",
            "VernacExtend",
            "15f6767c6b7aa5417202550d1cbd413b05abe451"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HLe6 : LtP O E E' CX BX).",
            "VernacExtend",
            "7782e184678e252b615f327ad0620b5f19a66f7b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' CX BX).",
            "VernacExtend",
            "a906f4a1b8b12f0e7f74f70774260f90c07cd141"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L3 CX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "1bae797836fb6698e2f2582d8f0500d6815e1b79"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' CX CX; auto.",
            "VernacExtend",
            "f20af5c7fd71ac024ee3da2deb288623fdbadf32"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' AX BX) by (apply bet_lt21_le31 with CX; auto).",
            "VernacExtend",
            "9a5f93bc8caf81c691c8dfeba345ed0b5dbe2ad6"
        ],
        [
            "assert (L1 = BXMAX) by (apply l16_9_1 with O E E' BX AX; auto; left; apply length_sym; auto).",
            "VernacExtend",
            "873bf27c2a060abb72162b261a17dde95b7173e0"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (HProd2 : Prod O E E' T AXMBX CXMBX); [|split; auto].",
            "VernacExtend",
            "5e3d1d644dfaf33005b3a5dab64c345475145c7f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "assert (HColME : Col O E ME) by (unfold Opp, Sum, Ar2 in *; spliter; Col).",
            "VernacExtend",
            "c38aa19e4e4becb1043d69da82422a0e4bf6dc00"
        ],
        [
            "apply prod_assoc1 with L3 IAB ME; auto; [|apply opp_prod; auto; apply diff_opp with BX CX; auto].",
            "VernacExtend",
            "703baf0fb5d331eeabd8bfb3e1b255ed3bf17e18"
        ],
        [
            "apply prod_assoc2 with L1 ME E; auto; apply opp_prod; auto.",
            "VernacExtend",
            "701b74a2bd449f550154c135a2a07ebc381531e9"
        ],
        [
            "apply diff_opp with BX AX; auto.",
            "VernacExtend",
            "85b9f250176abe20503c140e794efbf627c8d1e4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "apply prod_assoc1 with IAB L3 XProd; auto; apply prod_comm; auto.",
            "VernacExtend",
            "1f649fe38d49ae2cfdc9e4581b85a392ac8f8177"
        ],
        [
            "apply prod_assoc1 with CYMBY L1 E; apply prod_comm; auto; try apply prod_1_l; Col; apply prod_assoc1 with AXMBX ME BYMCY; auto; [|apply prod_comm]; apply opp_prod; auto; [apply diff_opp with AX BX|apply diff_opp with CY BY]; auto.",
            "VernacExtend",
            "88527dc494a39659abc47c2a36d1a91cf5cac04d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (L3 = CXMBX); treat_equalities.",
            "VernacExtend",
            "4dbe4df2323e5fc4a0c988eb4c637e7d28d2000c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply opp_uniqueness with O E E' BXMCX; Col; apply opp_comm; auto.",
            "VernacExtend",
            "6411367615217232998f38de22031e014a59f5ce"
        ],
        [
            "apply diff_opp with CX BX; auto.",
            "VernacExtend",
            "d48311a0d1c07b31d13e029515d0eff249029b21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe6 : LtP O E E' BX CX).",
            "VernacExtend",
            "31cc7f7e65e2d4b7a44047bb696bce77c26623e7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : LeP O E E' BX CX).",
            "VernacExtend",
            "47e618ef33215ad3ffabf8fc98ba6f74da80f419"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply compatibility_of_sum_with_order with O L3 BX; auto; try apply sum_O_B; Col; apply sum_comm; Col; apply diff_sum; auto.",
            "VernacExtend",
            "9e25da353a2997b15ff6dc1afc23cf883100cf61"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim H; clear H; intro H; auto; treat_equalities.",
            "VernacExtend",
            "897a1e6578420492ddf7f0a8993a8a2a62ca20e8"
        ],
        [
            "exfalso; apply HDiff7; apply diff_uniqueness with O E E' BX BX; auto.",
            "VernacExtend",
            "9748a1a8f7c91ad138e0994d40daddc12efbe261"
        ],
        [
            "apply diff_null; Col.",
            "VernacExtend",
            "d04708e4f0c23160df1ec3663fe305f095277334"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe7 : LeP O E E' BX AX) by(apply bet_lt12_le13 with CX; auto).",
            "VernacExtend",
            "ad2023bdf11601540c866ad186d97776ce251e1c"
        ],
        [
            "assert (L1 = AXMBX) by (apply l16_9_1 with O E E' AX BX; auto; left; auto).",
            "VernacExtend",
            "4606509cd6768d680bf32457ca3a51782bce7e43"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct (opp_exists O E E' HNC E) as [ME HME]; Col.",
            "VernacExtend",
            "c1d49b002f8453fe327f09c95cde701b71ed4fea"
        ],
        [
            "destruct (opp_exists O E E' HNC XProd) as [MProd HMProd]; Col.",
            "VernacExtend",
            "4f654d64ca3da1c76f6b404448abbd73bf5505a3"
        ],
        [
            "apply prod_assoc1 with IAB L3 MProd; apply prod_comm; auto; [apply prod_assoc2 with BXMCX ME XProd; auto; apply opp_prod; auto; apply diff_opp with BX CX; auto|].",
            "VernacExtend",
            "04a2e4423ed6310aee91dedb659729f657c8d9ff"
        ],
        [
            "apply prod_assoc1 with CYMBY L1 E; apply prod_comm; auto; try apply prod_1_l; Col.",
            "VernacExtend",
            "2ec0d2f4b80009d2bac6560129b3606fa898c13e"
        ],
        [
            "apply prod_assoc2 with BYMCY ME XProd; auto; apply opp_prod; auto.",
            "VernacExtend",
            "74d10bfddba180301e45ff8b05103ba3a4eb0499"
        ],
        [
            "apply diff_opp with BY CY; auto.",
            "VernacExtend",
            "f4cc94fda3f5a18121260c2a55f2e076ca191ed0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T16.",
            "VernacEndSegment",
            "a4a9f5e13b698d9b51e41d760d7e9b1dc1c65ce2"
        ]
    ],
    "proofs": [
        {
            "name": "grid_exchange_axes",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 HCs.",
                        "VernacExtend",
                        "db93926939e25ed2f7de07e2a384864d10d75819"
                    ]
                },
                {
                    "command": [
                        "destruct HCs as [HDiff [HCong1 [HCong2 HPer]]].",
                        "VernacExtend",
                        "9397264cdcefab7d79910bf308122b06b7148a5d"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Perp).",
                        "VernacExtend",
                        "3637a5cb316e1227272f0ecd7df366b625db4fbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cs_not_Col",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold Cs; intros O E S U1 U2 HCs.",
                        "VernacExtend",
                        "ba4d787580d0fdeabd28f1d0db6fa5917add14c0"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; apply per_not_col; Perp.",
                        "VernacExtend",
                        "93950e17bdd70cef3a11f7947c2c0acbaf510bce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_grid",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "destruct lower_dim_ex as [O [I [X HNC]]].",
                        "VernacExtend",
                        "5bd54a7fae3e3da92c95c155e3a0eaa2ec80ed99"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ Col O I X) by auto; clear HNC; rename H into HNC.",
                        "VernacExtend",
                        "3c2b4f3627c627b7fb25a9940ab756365e55bd35"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; destruct (ex_per_cong I O O X O I) as [J HJ]; Col; spliter.",
                        "VernacExtend",
                        "7329f65666a122b9bfb8cdb78ee3bfb0b1ebbc3c"
                    ]
                },
                {
                    "command": [
                        "exists O; exists I; exists X; exists O; exists I; exists J.",
                        "VernacExtend",
                        "9b79a69b12e18d160dddd42621827383ff614f31"
                    ]
                },
                {
                    "command": [
                        "repeat (split; finish).",
                        "VernacExtend",
                        "1b4198642c041cc1488873240da2d7d0832f3886"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_grid_spec",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "assert (~ Col PA PB PC) by (apply lower_dim).",
                        "VernacExtend",
                        "e67685d0dd5a1366cbaf4ab9ba672221a8810dba"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_per_cong PB PA PA PC PA PB) as [J HJ]; Col; spliter.",
                        "VernacExtend",
                        "d1daf4e329019aa22592044e2ff4ba2f85afdb06"
                    ]
                },
                {
                    "command": [
                        "exists PA; exists PB; exists J.",
                        "VernacExtend",
                        "0ab2932575c41d0e9783b7db574fce2d173762d3"
                    ]
                },
                {
                    "command": [
                        "repeat (split; finish).",
                        "VernacExtend",
                        "1b4198642c041cc1488873240da2d7d0832f3886"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coord_exchange_axes",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 P X Y HCd.",
                        "VernacExtend",
                        "44ed2b9ecc416285b0b2d1137fcb2baad83fa992"
                    ]
                },
                {
                    "command": [
                        "destruct HCd as [HCs [H [HPX HPY]]]; clear H.",
                        "VernacExtend",
                        "8382e40df76d49fd51e87a752055fe5461114cc0"
                    ]
                },
                {
                    "command": [
                        "split; try (apply grid_exchange_axes; auto).",
                        "VernacExtend",
                        "cc1cbc6fe9461fccb8b57d389a6e3312f693fd9a"
                    ]
                },
                {
                    "command": [
                        "split; try apply all_coplanar.",
                        "VernacExtend",
                        "2df7796cf1cad550a1414ae508053bf8da13efc7"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cd_Col",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold Cd; unfold Projp; intros O E S U1 U2 P X Y HCd.",
                        "VernacExtend",
                        "997275c021f8b2586832df66a6c54b6e16940e20"
                    ]
                },
                {
                    "command": [
                        "destruct HCd as [HCs [HC [[PX HPX] [PY HPY]]]]; clear HC.",
                        "VernacExtend",
                        "d1ecc5c64e53e77185fef3c758f071f2214cd7e1"
                    ]
                },
                {
                    "command": [
                        "destruct HPX as [[HDiff1 HElim1] HCong1]; destruct HPY as [[HDiff2 HElim2] HCong2].",
                        "VernacExtend",
                        "8fa201878f6f8f42b57e8f5102ee25c1c4970a8c"
                    ]
                },
                {
                    "command": [
                        "split; [apply l4_13 with S U1 PX|apply l4_13 with S U2 PY]; Cong; [induction HElim1|induction HElim2]; spliter; treat_equalities; Col.",
                        "VernacExtend",
                        "9f71a44eb2b9bc0629f95258f98534d1e6d8adb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_projp",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros A B P HAB.",
                        "VernacExtend",
                        "fad2f916655fcd509d322d189ce954a03beb3cbf"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec A B P); intro HNC; [exists P; split; Col; right|].",
                        "VernacExtend",
                        "82b9a95deb7694f115527796b6b09fc5ae458bfb"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B P HNC) as [P' HP'].",
                        "VernacExtend",
                        "525611f6bdecaa9f67135308dbd446e75505b928"
                    ]
                },
                {
                    "command": [
                        "exists P'; split; Col.",
                        "VernacExtend",
                        "4b6c3d8881ef2261524c4cf1f5d9c3763b378995"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_coord",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros O E S U P HSU HCong.",
                        "VernacExtend",
                        "f0f57121ed0241d0627bf3b211c36aa2d7db2dbb"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_projp S U P HSU) as [PX Hprojp].",
                        "VernacExtend",
                        "74c3a6696d2da8909d738a778baff236f8213e0a"
                    ]
                },
                {
                    "command": [
                        "assert (HCol : Col S U PX) by (destruct Hprojp as [H' H]; induction H; spliter; treat_equalities; Col).",
                        "VernacExtend",
                        "6a86ea48bb33653d7c7173cdc41854bda5c29818"
                    ]
                },
                {
                    "command": [
                        "destruct (l4_14 S U PX O E) as [X HCong']; Cong.",
                        "VernacExtend",
                        "c367573b1692466a1b06133736a48e0a89b60666"
                    ]
                },
                {
                    "command": [
                        "exists PX; exists X; auto with cong.",
                        "VernacExtend",
                        "108e615f8ba95e5d6ad93cfa245fade11126a44d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coordinates_of_point",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 P HCs.",
                        "VernacExtend",
                        "a297fce353e6194edc1d4877833e1a1fbcfd84ca"
                    ]
                },
                {
                    "command": [
                        "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
                        "VernacExtend",
                        "4198f28b93d66bfb331ab7121b03e937e837287b"
                    ]
                },
                {
                    "command": [
                        "assert (HSU1 : S <> U1) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2a61dd9030d51729f31413087272f93793d5000e"
                    ]
                },
                {
                    "command": [
                        "assert (HSU2 : S <> U2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "b4d90bb78d855d7fdf7497bd710dfc53c54d551f"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_coord O E S U1 P HSU1 HCong1) as [PX [X HX]].",
                        "VernacExtend",
                        "8d857fbe8994ea1efbe05c20b51de0a1872cc907"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_coord O E S U2 P HSU2 HCong2) as [PY [Y HY]].",
                        "VernacExtend",
                        "c9ea0b539c47c2ffdd7524b408cd51979ad940c4"
                    ]
                },
                {
                    "command": [
                        "exists X; exists Y; split; auto.",
                        "VernacExtend",
                        "f3b5bd71c1c8a2d560f9107b26a10c37583180f2"
                    ]
                },
                {
                    "command": [
                        "split; try (apply all_coplanar).",
                        "VernacExtend",
                        "2df7796cf1cad550a1414ae508053bf8da13efc7"
                    ]
                },
                {
                    "command": [
                        "split; [exists PX|exists PY]; auto.",
                        "VernacExtend",
                        "a916c8e7e7326497da9697fef7f0c15311021835"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "point_of_coordinates_origin",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 HCs.",
                        "VernacExtend",
                        "db93926939e25ed2f7de07e2a384864d10d75819"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "split; try apply all_coplanar.",
                        "VernacExtend",
                        "2df7796cf1cad550a1414ae508053bf8da13efc7"
                    ]
                },
                {
                    "command": [
                        "destruct HCs as [HDiff [HCong1 [HCong2 H]]]; clear H.",
                        "VernacExtend",
                        "6314dfb0f5c697c4ea588a879b9cca98e848e4c3"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; split; exists S; repeat (split; Col; Cong).",
                        "VernacExtend",
                        "1e606980f1851681311d8b67876f45dfd6686caa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "point_of_coordinates_on_an_axis",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 X HCs HCol HOX.",
                        "VernacExtend",
                        "c657fcf8317fd21c610298636aaccd01ef851bb9"
                    ]
                },
                {
                    "command": [
                        "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
                        "VernacExtend",
                        "4198f28b93d66bfb331ab7121b03e937e837287b"
                    ]
                },
                {
                    "command": [
                        "destruct (l4_14 O E X S U1 HCol HCong1) as [P HP].",
                        "VernacExtend",
                        "f64ebcbcaf7267ea8deb9e9b15570431df129995"
                    ]
                },
                {
                    "command": [
                        "exists P; split; auto.",
                        "VernacExtend",
                        "9d631b783e8aa2c144e5dba4c73560aac94ccc6b"
                    ]
                },
                {
                    "command": [
                        "destruct HCs as [H [H' [H'' HPer]]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "0bb39c49bcb9e35146ce96e8a49892ab74e58fbd"
                    ]
                },
                {
                    "command": [
                        "split; try apply all_coplanar.",
                        "VernacExtend",
                        "2df7796cf1cad550a1414ae508053bf8da13efc7"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; split; [exists P|exists S]; repeat (split; Cong); [right; split; try apply l4_13 with O E X; Col|].",
                        "VernacExtend",
                        "10eb9bd5dc9b3c1bdb33f35dbdc5a1f898f9b95d"
                    ]
                },
                {
                    "command": [
                        "left; split; Col.",
                        "VernacExtend",
                        "10053895ea045e79a3b020b1f0bc7deaaad93a70"
                    ]
                },
                {
                    "command": [
                        "apply per_perp in HPer; auto.",
                        "VernacExtend",
                        "fff1e41a00462f0511442ad9c190324c1a521b7d"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with S U1; Col; Perp; [unfold Cong_3 in *; spliter; assert_diffs|apply l4_13 with O E X]; Col.",
                        "VernacExtend",
                        "72a3ab4739a6411138fcd3970d7a4b468bb6aade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "point_of_coordinates",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 X Y HCs HCol1 HCol2.",
                        "VernacExtend",
                        "17527f6243d56f87655b0f00b2d63a587c0d7f8e"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points O X); intro HOX; elim (eq_dec_points O Y); intro HOY; treat_equalities; [exists S; apply point_of_coordinates_origin| destruct (point_of_coordinates_on_an_axis O E S U2 U1 Y) as [P HP]; try apply grid_exchange_axes; try (exists P; apply coord_exchange_axes)| apply point_of_coordinates_on_an_axis|]; auto.",
                        "VernacExtend",
                        "7ef80dc6780b40dc56cff8af2f8727e87b37338c"
                    ]
                },
                {
                    "command": [
                        "assert (H := HCs); destruct H as [HDiff [HCong1 [HCong2 H]]]; clear H.",
                        "VernacExtend",
                        "4198f28b93d66bfb331ab7121b03e937e837287b"
                    ]
                },
                {
                    "command": [
                        "destruct (l4_14 O E X S U1 HCol1 HCong1) as [PX HPX].",
                        "VernacExtend",
                        "cf37c4f3fc8f106f549e5e641e87b4986bc595b3"
                    ]
                },
                {
                    "command": [
                        "destruct (l4_14 O E Y S U2 HCol2 HCong2) as [PY HPY].",
                        "VernacExtend",
                        "0195c6f9cc0939c9610df334ef9452c2ad9b73da"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_exists PX S U1) as [PX' HPerp1]; [assert_diffs; auto|].",
                        "VernacExtend",
                        "7731c9675b8481504de3df29a7d2e187c0764656"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_exists PY S U2) as [PY' HPerp2]; [assert_diffs; auto|].",
                        "VernacExtend",
                        "30af448d979be322842a167d6e578171b7528e75"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp3 : Perp PX PX' PY PY').",
                        "VernacExtend",
                        "95acdaad380b1210ea2067623ec13f00dc2fc45e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_perp__perp with S U2; Perp.",
                        "VernacExtend",
                        "2b540f623815717b79289b013810c7a3bf01b34e"
                    ]
                },
                {
                    "command": [
                        "apply l12_9_2D with S U1; Perp.",
                        "VernacExtend",
                        "2953acc70c11912d7dabebc2b072cb38d638dd75"
                    ]
                },
                {
                    "command": [
                        "destruct HCs as [H [H' [H'' HPer]]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "0bb39c49bcb9e35146ce96e8a49892ab74e58fbd"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply per_perp in HPer; Perp.",
                        "VernacExtend",
                        "01c4ca04c9043f3808652e49ff30334ce16e159f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (H := HPerp3); destruct H as [P HP]; exists P; split; auto.",
                        "VernacExtend",
                        "29283263b9171b98bcaabe00993698440d90cb38"
                    ]
                },
                {
                    "command": [
                        "split; try apply all_coplanar.",
                        "VernacExtend",
                        "2df7796cf1cad550a1414ae508053bf8da13efc7"
                    ]
                },
                {
                    "command": [
                        "split; [exists PX|exists PY]; split; Cong.",
                        "VernacExtend",
                        "4b46e25f66753a38da311265f0b4cce262041261"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; split; auto.",
                        "VernacExtend",
                        "b498ec347c216f877f62e4474a61a694ea5ec00f"
                    ]
                },
                {
                    "command": [
                        "left; split; [apply l4_13 with O E X; Col|].",
                        "VernacExtend",
                        "74e33b29048cdbd153b4f1ae54354c2357fdec1f"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *; spliter; apply perp_col0 with PX PX'; Col.",
                        "VernacExtend",
                        "0e819c2de012dacc6370a676a15a6ffba6fad6bf"
                    ]
                },
                {
                    "command": [
                        "assert (HPYS : PY <> S) by (unfold Cong_3 in *; spliter; assert_diffs; auto).",
                        "VernacExtend",
                        "d84e1a275d3dbabd585f678ee7bd15bff7fa5906"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HPYS.",
                        "VernacExtend",
                        "7f686e8d419c23923312124c530b4bae8c827b63"
                    ]
                },
                {
                    "command": [
                        "apply l6_21 with S U1 U2 S; Col; [destruct HCs as [H' [H'' [H''' HPer]]]; apply perp_not_col; assert_diffs; apply per_perp in HPer; Perp| |apply l4_13 with E O Y; try apply cong_3_swap; Col].",
                        "VernacExtend",
                        "f90d416b9581de4c1350c938410f7986fa046a78"
                    ]
                },
                {
                    "command": [
                        "assert (HPar : Par S U1 PY PY') by (apply l12_9_2D with P PX'; Perp).",
                        "VernacExtend",
                        "705c9be3c2134e9a647dd1dc2eea6be9cf567d2a"
                    ]
                },
                {
                    "command": [
                        "elim HPar; clear HPar; intro HParS; [|spliter; ColR].",
                        "VernacExtend",
                        "32fbbfc216cdf95c33ac86fe21ea7b2ff41a5b44"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HParS; exists P; split; Col.",
                        "VernacExtend",
                        "d7d8f5ab56744a70ed7f00559cf4f7a2f168af60"
                    ]
                },
                {
                    "command": [
                        "apply l4_13 with X O E; try (apply cong_3_swap; apply cong_3_swap_2); Col.",
                        "VernacExtend",
                        "63ceea2ff9c13f8e91325c060312fb38b1dd59d1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; split; auto.",
                        "VernacExtend",
                        "b498ec347c216f877f62e4474a61a694ea5ec00f"
                    ]
                },
                {
                    "command": [
                        "left; split; [apply l4_13 with O E Y; Col|].",
                        "VernacExtend",
                        "3c391ced99b40d1b288f112c19ba3027e4604fb4"
                    ]
                },
                {
                    "command": [
                        "unfold Perp_at in *; spliter; apply perp_col0 with PY PY'; Col.",
                        "VernacExtend",
                        "d073783aaffd27b52ad0d66cce04ab938853f8e4"
                    ]
                },
                {
                    "command": [
                        "assert (HPXS : PX <> S) by (unfold Cong_3 in *; spliter; assert_diffs; auto).",
                        "VernacExtend",
                        "f12a17b186f335041e0e0edcb9edc84909dfd4be"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HPXS.",
                        "VernacExtend",
                        "d52d6e8d54b9776e74510ddf5c9f05384089d54f"
                    ]
                },
                {
                    "command": [
                        "apply l6_21 with S U2 U1 S; Col; [destruct HCs as [H' [H'' [H''' HPer]]]; apply perp_not_col; assert_diffs; apply per_perp in HPer; Perp| |apply l4_13 with E O X; try apply cong_3_swap; Col].",
                        "VernacExtend",
                        "faa84e8e6f684376d998161ae0c91243eb906051"
                    ]
                },
                {
                    "command": [
                        "assert (HPar : Par S U2 PX PX') by (apply l12_9_2D with P PY'; Perp).",
                        "VernacExtend",
                        "e4970c26156f1fffa206b47552e3ae8a35001c99"
                    ]
                },
                {
                    "command": [
                        "elim HPar; clear HPar; intro HParS; [|spliter; ColR].",
                        "VernacExtend",
                        "32fbbfc216cdf95c33ac86fe21ea7b2ff41a5b44"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HParS; exists P; split; Col.",
                        "VernacExtend",
                        "d7d8f5ab56744a70ed7f00559cf4f7a2f168af60"
                    ]
                },
                {
                    "command": [
                        "apply l4_13 with Y O E; try (apply cong_3_swap; apply cong_3_swap_2); Col.",
                        "VernacExtend",
                        "943deb4086503d3fcdce9601214f4bb62382b842"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l16_9_1",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros O E E' X Y XY XMY HCol1 HCol2 HXY HLe1 HXMY.",
                        "VernacExtend",
                        "b6d2d81e44b0bef0a9cb5e67fcfb397471fea6b9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HXMY; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "0cdf7a0f857cfb772a1eaf07bdc7e9a92c04b8f0"
                    ]
                },
                {
                    "command": [
                        "assert (HOE : O <> E) by (assert_diffs; auto).",
                        "VernacExtend",
                        "67c38ec6720c53edeee4eb28aba740e092214e26"
                    ]
                },
                {
                    "command": [
                        "assert (HCol3 : Col O E XMY).",
                        "VernacExtend",
                        "543dce1f00b3b6d4ad8bae0b099c4bc93d5631ab"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Diff, Opp, Sum, Ar2 in *; destruct HXMY as [MB [H1 [H2 [H3 H4]]]]; spliter; Col.",
                        "VernacExtend",
                        "cdcd1f927ab0d98d6ac1eda59775402554fcfea1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCong1 := HXMY); apply diff_sum in HCong1; apply l15_3 in HCong1.",
                        "VernacExtend",
                        "0b9e5d96259abf0341d3d05646d2b9790905cf20"
                    ]
                },
                {
                    "command": [
                        "elim HXY; clear HXY; intro HXY; [|spliter; intuition].",
                        "VernacExtend",
                        "9954cac9528ed28427fb8a3099ef10da9f212ea7"
                    ]
                },
                {
                    "command": [
                        "destruct HXY as [H [HCol4 [HLe2 HCong2]]].",
                        "VernacExtend",
                        "2edf1a44e858e10ded922b28dfaad84a681f8856"
                    ]
                },
                {
                    "command": [
                        "elim (l7_20 O XY XMY); [auto|intro HMid; clear H|ColR|apply cong_transitivity with X Y; Cong].",
                        "VernacExtend",
                        "b798cee134d13a3d7ce9d41fe9effa0ffd420f22"
                    ]
                },
                {
                    "command": [
                        "elim HLe1; clear HLe1; intro HLt1; [clear HCong1|treat_equalities; auto].",
                        "VernacExtend",
                        "dd01f1b35d2fd53daa6b96cae34108f5a770533e"
                    ]
                },
                {
                    "command": [
                        "elim HLe2; clear HLe2; intro HLt2; [clear HCong2|treat_equalities; auto].",
                        "VernacExtend",
                        "203c61b5b675011155ab08fb5afb6b5d9663900d"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply not_pos_and_neg with O E XMY; split; [apply lt_diff_ps with E' X Y; auto|].",
                        "VernacExtend",
                        "b12de5d76d674fd9fde91396ebba5d7aa53f856b"
                    ]
                },
                {
                    "command": [
                        "apply pos_opp_neg with E' XY; [apply ltP_pos with E'; auto|].",
                        "VernacExtend",
                        "89d1cebce72c43d8da2c3dfe8fec7f1fc738d6d3"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_opp; repeat (Col; split).",
                        "VernacExtend",
                        "1e6b22ca3b42f5d8633de16e67fecebbc5fbbbbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_eq_or_opp",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros O E E' A B L1 L2 HL1 HL2.",
                        "VernacExtend",
                        "b73efb880f2936a3d77828b6c5dae0b170ec4ca8"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "d3914ed427b0f323ab475e8cd35575e5424b1b9e"
                    ]
                },
                {
                    "command": [
                        "assert (HColA : Col O E A) by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "4823d468f223b60e41a39c19e17ddab4fed1f1ab"
                    ]
                },
                {
                    "command": [
                        "assert (HColB : Col O E B) by (apply diff_ar2 in HL2; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "f9777860371a991548aaad1d83922b6e4e95f0fe"
                    ]
                },
                {
                    "command": [
                        "elim (col_2_le_or_ge O E E' A B); auto; intro HLe; [right|left; apply l16_9_1 with O E E' A B; auto; left; auto].",
                        "VernacExtend",
                        "9c9408f1b70a8ac675ffb600006d0f6100dfb000"
                    ]
                },
                {
                    "command": [
                        "apply diff_opp with B A; auto.",
                        "VernacExtend",
                        "04fc8ca1752f7541c0034af3df64b9d4bd7b1e9e"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_exists O E E' B A) as [D HD]; Col.",
                        "VernacExtend",
                        "adf2c17a09a0654ab82bc30d6082c74d4fa08037"
                    ]
                },
                {
                    "command": [
                        "assert (L1 = D) by (apply l16_9_1 with O E E' B A; auto; left; apply length_sym; auto).",
                        "VernacExtend",
                        "172b8cb0ac614200f7e1b4f243d61cfe6bb911fe"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l16_9_2",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros O E E' X Y XY XMY XY2 XMY2 HCol1 HCol2 HXY HXMY HXY2 HXMY2.",
                        "VernacExtend",
                        "b135a84fe8c2192c6853bf542b6e555997863019"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HXMY; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "0cdf7a0f857cfb772a1eaf07bdc7e9a92c04b8f0"
                    ]
                },
                {
                    "command": [
                        "assert (H:= HXY); elim H; clear H; intro HXY'; [|spliter; assert_diffs; intuition].",
                        "VernacExtend",
                        "c4afba22aa36cacf0065d5911f39570865c76515"
                    ]
                },
                {
                    "command": [
                        "elim (length_eq_or_opp O E E' X Y XY XMY); auto; intro HOpp1; treat_equalities; apply prod_uniqueness with O E E' XY XY; auto.",
                        "VernacExtend",
                        "68d60ab366451db8ace829791f9aa9dec86ac971"
                    ]
                },
                {
                    "command": [
                        "destruct (opp_exists O E E' HNC E) as [ME HOpp2]; Col.",
                        "VernacExtend",
                        "fda7ea127fdcc552ba10fae2654d2494e2b0157a"
                    ]
                },
                {
                    "command": [
                        "apply prod_assoc1 with XMY ME XMY; auto; [|apply prod_comm]; apply opp_prod;auto; apply opp_comm; Col.",
                        "VernacExtend",
                        "6c410bf7e471e7d30dcb788b8eb5e0dfc669f4c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_3_2_cong_4",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros O E I J S U X Y HOE HCol1 HCol2 HCong1 HCong4.",
                        "VernacExtend",
                        "f929be245d0112f35f0ae0362c94a9a09c04f472"
                    ]
                },
                {
                    "command": [
                        "destruct HCong1 as [HCong1 [HCong2 HCong3]].",
                        "VernacExtend",
                        "ca93894fe37cd72a22d6f334598897a51abe435f"
                    ]
                },
                {
                    "command": [
                        "destruct HCong4 as [HCong4 [HCong5 HCong6]].",
                        "VernacExtend",
                        "ed7ebdcdfc2d0f90c41e92f87727f4f8a0b7ca88"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Cong).",
                        "VernacExtend",
                        "f3786e8d7c1155cdcb3a7045a4ce73aa60f1afa6"
                    ]
                },
                {
                    "command": [
                        "apply l4_16 with O E S U; Col.",
                        "VernacExtend",
                        "2a1c115379a9fbf0fe03cb1c8092262432a767ec"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Cong).",
                        "VernacExtend",
                        "f3786e8d7c1155cdcb3a7045a4ce73aa60f1afa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_3_3_cong_5",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros O E I J K S U X Y Z HOE HCol1 HCol2 HCol3 HCong1 HCong4 HCong7.",
                        "VernacExtend",
                        "e4a42d6f1db931978475d8f687a96840700f63c0"
                    ]
                },
                {
                    "command": [
                        "destruct HCong1 as [HCong1 [HCong2 HCong3]].",
                        "VernacExtend",
                        "ca93894fe37cd72a22d6f334598897a51abe435f"
                    ]
                },
                {
                    "command": [
                        "destruct HCong4 as [HCong4 [HCong5 HCong6]].",
                        "VernacExtend",
                        "ed7ebdcdfc2d0f90c41e92f87727f4f8a0b7ca88"
                    ]
                },
                {
                    "command": [
                        "destruct HCong7 as [HCong7 [HCong8 HCong9]].",
                        "VernacExtend",
                        "c0a37eece6e2140defad554d06d8046725d661e0"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Cong); apply l4_16 with O E S U; Col; repeat (split; Cong).",
                        "VernacExtend",
                        "d1a597ea66e1888271ad485d01e93527cd99cc75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "characterization_of_congruence",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "intros O E E' S U1 U2 A AX AY B BX BY C CX CY D DX DY.",
                        "VernacExtend",
                        "b92094ac924af0fa1f361857b0d1ca0d19b15afe"
                    ]
                },
                {
                    "command": [
                        "intros AXMBX AXMBX2 AYMBY AYMBY2 AB2' CXMDX CXMDX2 CYMDY CYMDY2 CD2'.",
                        "VernacExtend",
                        "5c88046706c2b0738b8868e93920f228b63201c6"
                    ]
                },
                {
                    "command": [
                        "intros HCdA HCdB HCdC HCdD HAXMBX HAXMBX2 HAYMBY HAYMBY2 HAB2.",
                        "VernacExtend",
                        "5a5f04e80f500adaabf75cbbf6e41ba680bdc88d"
                    ]
                },
                {
                    "command": [
                        "intros HCXMDX HCXMDX2 HCYMDY HCYMDY2 HCD2.",
                        "VernacExtend",
                        "a9e0747c488f835d7831df770a3854a7f6da9dab"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col O E E') by (apply diff_ar2 in HAXMBX; unfold Ar2 in *; spliter; Col).",
                        "VernacExtend",
                        "e84c4e7fdcaf7f8245b7c8b6a3b23b44da8552c3"
                    ]
                },
                {
                    "command": [
                        "destruct (is_length_exists O E E' A B) as [AB HLengthAB]; Col.",
                        "VernacExtend",
                        "1b066582577d57cc22fa9d43f2799bbe7f66120a"
                    ]
                },
                {
                    "command": [
                        "assert (HColAB : Col O E AB).",
                        "VernacExtend",
                        "1fc3c4e48b1a2453bfb8c40cb2e88424128404af"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Is_length, Length in *; induction HLengthAB; spliter; treat_equalities; Col.",
                        "VernacExtend",
                        "1a82a72674f6c6a86d56294833cf44cda695ba21"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (prod_exists O E E' HNC AB AB) as [AB2 HLengthAB2]; Col.",
                        "VernacExtend",
                        "85445003024187789ac3624b2cd37c2ebf414afc"
                    ]
                },
                {
                    "command": [
                        "assert (AB2 = AB2').",
                        "VernacExtend",
                        "2051262f0563c81b0818bb6b72877a0a0407cb46"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply square_distance_formula with O E E' S U1 U2 A B AX AY BX BY AB AXMBX AYMBY AXMBX2 AYMBY2; auto.",
                        "VernacExtend",
                        "4f687b132c557a37cd33d34717a5e31d91dd1fbd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; clear HAB2; clear HAYMBY2; clear HAYMBY; clear HAXMBX2; clear HAXMBX; clear HCdA; clear HCdB.",
                        "VernacExtend",
                        "7d99ac633c596517f8df4b85d22661034b54edc3"
                    ]
                },
                {
                    "command": [
                        "destruct (is_length_exists O E E' C D) as [CD HLengthCD]; Col.",
                        "VernacExtend",
                        "248506da2275faff9b9b20ef965a434719b4e908"
                    ]
                },
                {
                    "command": [
                        "assert (HColCD : Col O E CD).",
                        "VernacExtend",
                        "56f50c2ea46c9797d1787fe37eac420f356de784"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Is_length, Length in *; induction HLengthCD; spliter; treat_equalities; Col.",
                        "VernacExtend",
                        "818f041e730aace88df443d59552c88a7319ebdf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (prod_exists O E E' HNC CD CD) as [CD2 HLengthCD2]; Col.",
                        "VernacExtend",
                        "160e8c4e7faadec2f8194432398086023aaecbca"
                    ]
                },
                {
                    "command": [
                        "assert (CD2 = CD2').",
                        "VernacExtend",
                        "90f5729c86e6185b65f3e9d69f9c1b3aa4e332b2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply square_distance_formula with O E E' S U1 U2 C D CX CY DX DY CD CXMDX CYMDY CXMDX2 CYMDY2; auto.",
                        "VernacExtend",
                        "b0b1ae396f56caa3642749eb1491cb7ccf41a440"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; clear HCD2; clear HCYMDY2; clear HCYMDY; clear HCXMDX2; clear HCXMDX; clear HCdC; clear HCdD.",
                        "VernacExtend",
                        "ae215a1171fa7810d2e87fb7525bfc61df426e7c"
                    ]
                },
                {
                    "command": [
                        "split; [intro HCong|intro; treat_equalities].",
                        "VernacExtend",
                        "e36d50731ab3d2e68b3fbe9b8f88b720fa62b53d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : Cong O AB O CD).",
                        "VernacExtend",
                        "11df39bd1c1927c25095b4a5d1cdcea0fd803f67"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Is_length, Length in *; induction HLengthAB; [|spliter; treat_equalities; exfalso; apply HNC; Col]; induction HLengthCD; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
                        "VernacExtend",
                        "25b26c64c595a8215293c9efc29deb1a5f2b0b2f"
                    ]
                },
                {
                    "command": [
                        "spliter; apply cong_transitivity with A B; trivial.",
                        "VernacExtend",
                        "77338d40db9fb19dc859318a7327a82050eb30ba"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with C D; Cong.",
                        "VernacExtend",
                        "bff5b3aa387bb8d59555ad1506791884c2fc4d6c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "clear HLengthAB; clear HLengthCD; clear HCong; rename H into HCong.",
                        "VernacExtend",
                        "c107843b3b0fdd688a12c4a6bd9419bec416d004"
                    ]
                },
                {
                    "command": [
                        "assert (H : Col O AB CD) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "b01d239aa5e09543f0a813d22d3783e43f37103a"
                    ]
                },
                {
                    "command": [
                        "elim (l7_20 O AB CD); Col; clear H; clear HCong; intro HMid; treat_equalities.",
                        "VernacExtend",
                        "03689977470f989822ad10d5ae00e43fdf563cdf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply prod_uniqueness with O E E' AB AB; auto.",
                        "VernacExtend",
                        "a53a959df1ad57345de14a66f8c1f3cb4d72a621"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HOpp1 : Opp O E E' AB CD) by (apply midpoint_opp; unfold Ar2; auto; repeat (split; Col)).",
                        "VernacExtend",
                        "5b20a4701b65f7d59a0eb6edad816b113b944744"
                    ]
                },
                {
                    "command": [
                        "clear HMid; destruct (opp_exists O E E' HNC E) as [ME HOpp2]; Col.",
                        "VernacExtend",
                        "f73d858298bd172a645562b017128ce15a617a7a"
                    ]
                },
                {
                    "command": [
                        "assert (Prod O E E' AB ME CD) by (apply opp_prod; auto).",
                        "VernacExtend",
                        "6b882807ab86e8516e001bd4849aee8b71a4aac5"
                    ]
                },
                {
                    "command": [
                        "assert (HXMY2' : Prod O E E' CD CD AB2).",
                        "VernacExtend",
                        "35202cc289b9f6ee826e1e55c253339e6047fb75"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply prod_assoc1 with AB ME AB; auto.",
                        "VernacExtend",
                        "847b6a37e7659d5f083f54ddf9e2f932bc6c4fe1"
                    ]
                },
                {
                    "command": [
                        "apply prod_assoc2 with ME AB E; try apply prod_1_l; Col; apply prod_comm; auto.",
                        "VernacExtend",
                        "1f7db7744e5cfbc0f376a43f1a0fad2c3d4a5b18"
                    ]
                },
                {
                    "command": [
                        "apply opp_prod; auto; apply opp_comm; auto.",
                        "VernacExtend",
                        "a660bd8606b03231c15b10493720bf308c852079"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply prod_uniqueness with O E E' CD CD; auto.",
                        "VernacExtend",
                        "0c72dbb6db174dddffee2567f55eb4e78722e380"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HLengthAB; clear HLengthAB; intro HLengthAB; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
                        "VernacExtend",
                        "ae55ee46947c6f9d1a5143a37e3cc51ae1a67636"
                    ]
                },
                {
                    "command": [
                        "elim HLengthCD; clear HLengthCD; intro HLengthCD; [|spliter; treat_equalities; exfalso; apply HNC; Col].",
                        "VernacExtend",
                        "423e41abf8e9e26f80db0cb52704b824ed5bacc1"
                    ]
                },
                {
                    "command": [
                        "elim (eq_squares_eq_or_opp O E E' AB CD AB2); auto; intro HOpp; treat_equalities; [apply length_eq_cong_1 with O E E' AB; auto|].",
                        "VernacExtend",
                        "62d060162c50af4f8c72dfa39d1dae8aa7cca634"
                    ]
                },
                {
                    "command": [
                        "unfold Length, LeP, LtP in *; spliter; apply opp_midpoint in HOpp.",
                        "VernacExtend",
                        "d13553bd65b60c22ed026b34a9c07bee94c8ff46"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *; spliter.",
                        "VernacExtend",
                        "94cfb4754c2f0312d41786041551ef933e840506"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with O CD; trivial.",
                        "VernacExtend",
                        "e20579b5bcfdc3e5236236f5bf4b6eada8df0be4"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with O AB; Cong.",
                        "VernacExtend",
                        "577850193313a13639a6b8fe553fd2c6626583cd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_betCood_aux",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 A AX AY B BX BY C CX CY HCdA HCdB HCdC HBet.",
                        "VernacExtend",
                        "ed33a090714d7a9b4df424f37ece7aa1a48d49bc"
                    ]
                },
                {
                    "command": [
                        "destruct (parallel_existence S U1 A) as [A1 [A2 [HDiff4 [HPar HCol]]]]; try (intro; unfold Cd, Cs in *; spliter; treat_equalities; intuition).",
                        "VernacExtend",
                        "cd99a09dd42e45be0dee71cce667d09374f6dbc6"
                    ]
                },
                {
                    "command": [
                        "assert (HAX' := HCdA).",
                        "VernacExtend",
                        "157ebbb5b3c3d86b16d3168a2311431baa58e50c"
                    ]
                },
                {
                    "command": [
                        "destruct HAX' as [H [H' [HAX' H'']]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "d033b6baccb3a765b11039ddcc398c270099257f"
                    ]
                },
                {
                    "command": [
                        "destruct HAX' as [AX' [HProjpAX' HCongAX']].",
                        "VernacExtend",
                        "690fbe39d275d514b6a28b45360e5d08520d8f40"
                    ]
                },
                {
                    "command": [
                        "assert (HA : Projp AX' A A1 A2).",
                        "VernacExtend",
                        "e5f828d85bcec963ba96f711992aa65eb4233708"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; auto; induction (eq_dec_points A AX'); [treat_equalities; right|left; split]; Col.",
                        "VernacExtend",
                        "f86802badbbc9ec1060acfd90c7ab902552ccadf"
                    ]
                },
                {
                    "command": [
                        "apply par_perp__perp with S U1; auto.",
                        "VernacExtend",
                        "8b5944c7b11da9b1329755eb8434eceee34b2562"
                    ]
                },
                {
                    "command": [
                        "destruct HProjpAX' as [Hclear HAX']; clear Hclear.",
                        "VernacExtend",
                        "fdba092cb841711ff01357917e93a89cd758ae33"
                    ]
                },
                {
                    "command": [
                        "induction HAX'; spliter; Perp; intuition.",
                        "VernacExtend",
                        "1d8f2df96ecbb927ce24e1f63cc7b85a88814215"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HBX' := HCdB).",
                        "VernacExtend",
                        "10176f8b4f3306f91bbf2aff6ab1adbce03cc1d9"
                    ]
                },
                {
                    "command": [
                        "destruct HBX' as [H [H' [HBX' H'']]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "eba933b16951f283e74d32bceddcf4087d0e401a"
                    ]
                },
                {
                    "command": [
                        "destruct HBX' as [BX' [HProjpBX' HCongBX']].",
                        "VernacExtend",
                        "dfcc373ceba77f4bc46d0cb2c5daa03dd29a606f"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_projp A1 A2 BX') as [BX'' HBX'']; auto.",
                        "VernacExtend",
                        "f3c37e2e3bce1052a8e9cf8bf4083a9b784f95c4"
                    ]
                },
                {
                    "command": [
                        "assert (HCX' := HCdC).",
                        "VernacExtend",
                        "b8928d3a4c2353562846c17ac25bf6170613485f"
                    ]
                },
                {
                    "command": [
                        "destruct HCX' as [H [H' [HCX' H'']]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "5325a347a9f893b5d4254487027b00b458b57c77"
                    ]
                },
                {
                    "command": [
                        "destruct HCX' as [CX' [HProjpCX' HCongCX']].",
                        "VernacExtend",
                        "0bee77f9be0e6bded8c4c541f8a791df4a194b63"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_projp A1 A2 CX') as [CX'' HCX'']; auto.",
                        "VernacExtend",
                        "903ed409d6f46ad67662cca10956d45a786bba34"
                    ]
                },
                {
                    "command": [
                        "assert (HDiff : O <> E) by (unfold Cd, Cs in *; spliter; auto).",
                        "VernacExtend",
                        "9929ae80cebc451eb7687bd0158630c635cc08c9"
                    ]
                },
                {
                    "command": [
                        "assert (HColAX : Col O E AX).",
                        "VernacExtend",
                        "a4e774e4526f2cb61de56f1d04cc6ec1dba927b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Cd in *; destruct HCdA as [H [H' [[PX [HProjp HCong]] H'']]].",
                        "VernacExtend",
                        "76c57a587c8873335ef9e80ab367ec9e1f991bec"
                    ]
                },
                {
                    "command": [
                        "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
                        "VernacExtend",
                        "0eaa52726d05edaf967ed034818653ddf6b84b4e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HColBX : Col O E BX).",
                        "VernacExtend",
                        "7ff0d1fe1850d793dfb353b1bac9fa5d42091016"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Cd in *; destruct HCdB as [H [H' [[PX [HProjp HCong]] H'']]].",
                        "VernacExtend",
                        "2c09cd3edc676ea63fa81d44c0124acdd460c2e9"
                    ]
                },
                {
                    "command": [
                        "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
                        "VernacExtend",
                        "0eaa52726d05edaf967ed034818653ddf6b84b4e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HColCX : Col O E CX).",
                        "VernacExtend",
                        "83fa4ab43cc852bda2cadbd145bfcc63294e24a2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Cd in *; destruct HCdC as [H [H' [[PX [HProjp HCong]] H'']]].",
                        "VernacExtend",
                        "bd59e864dae4886108e68089571959734e407e85"
                    ]
                },
                {
                    "command": [
                        "apply projp_col in HProjp; apply l4_13 with S U1 PX; Cong.",
                        "VernacExtend",
                        "0eaa52726d05edaf967ed034818653ddf6b84b4e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l4_6 with AX' BX' CX'.",
                        "VernacExtend",
                        "b27e93067559666a64e9bcf75921ae9c761f44bf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply projp_preserves_bet with A B C S U1; auto.",
                        "VernacExtend",
                        "8248d8cc47fc763a15e8301e44e43c83ea9410dc"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_5 O E AX BX CX S U1 AX' BX' CX') by (apply cong_3_3_cong_5; assert_diffs; auto).",
                        "VernacExtend",
                        "c6bf51a0e370321f1f36b73ffa3a50ec24cf61a0"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_5 in *; spliter; repeat (split; Cong).",
                        "VernacExtend",
                        "6a00520254a76b9199c5133e3757bad13dafa212"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_betCood",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 A AX AY B BX BY C CX CY HCdA HCdB HCdC HBet.",
                        "VernacExtend",
                        "ed33a090714d7a9b4df424f37ece7aa1a48d49bc"
                    ]
                },
                {
                    "command": [
                        "split; [apply bet_betCood_aux with O E S U1 U2 A AY B BY C CY|]; auto.",
                        "VernacExtend",
                        "f3d0979e3bf0b8b9f5a0f1f9822bfb98be6c918e"
                    ]
                },
                {
                    "command": [
                        "apply bet_betCood_aux with O E S U2 U1 A AX B BX C CX; auto; apply coord_exchange_axes; auto.",
                        "VernacExtend",
                        "466c36ca1e5280f0f47d8233c785e1373af300b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_abscissa_col",
            "line_nb": 1153,
            "steps": [
                {
                    "command": [
                        "intros O E S U1 U2 A AX AY B BY C CY HCdA HCdB HCdC.",
                        "VernacExtend",
                        "71bd64f40562fb2fe9b0c960dc8a98342c2f9a2f"
                    ]
                },
                {
                    "command": [
                        "destruct HCdA as [HCs [H [[PXA [HProjpA HCongA]] H']]]; clear H; clear H'.",
                        "VernacExtend",
                        "0725559b954b372298bd2d9cce688a18ce702ebd"
                    ]
                },
                {
                    "command": [
                        "destruct HCdB as [H [H' [[PXB [HProjpB HCongB]] H'']]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "4d3c728708314df223307802e18f6b247bbab29d"
                    ]
                },
                {
                    "command": [
                        "destruct HCdC as [H [H' [[PXC [HProjpC HCongC]] H'']]]; clear H; clear H'; clear H''.",
                        "VernacExtend",
                        "d6fcf5879a0451618cf4c3088905efa5b75bd073"
                    ]
                },
                {
                    "command": [
                        "assert (HDiff1 : O <> E) by (unfold Cs in *; spliter; auto).",
                        "VernacExtend",
                        "b99671886f84c40fa75b32e9170aa1d5188affea"
                    ]
                },
                {
                    "command": [
                        "assert (HColAX : Col O E AX) by (apply l4_13 with S U1 PXA; Cong; apply projp_col with A; auto).",
                        "VernacExtend",
                        "031cbace15ebbfc9969e6a0424751359ddbf08d4"
                    ]
                },
                {
                    "command": [
                        "eapply col_cong_3_cong_3_eq in HCongB; [| | |apply HCongA]; treat_equalities; auto.",
                        "VernacExtend",
                        "175dbf2cc2594a3215080de91199df6ab3510f88"
                    ]
                },
                {
                    "command": [
                        "eapply col_cong_3_cong_3_eq in HCongC; [| | |apply HCongA]; treat_equalities; auto.",
                        "VernacExtend",
                        "8b9df98362d68e2e5b0aa69528d47a8d52fdea10"
                    ]
                },
                {
                    "command": [
                        "clear HCongA; elim (eq_dec_points A PXA); intro HDiff2; treat_equalities; [apply projp2_col with S U1; auto|].",
                        "VernacExtend",
                        "1c242ad10686fb5f38f2e7bbc0c5d666559d18f0"
                    ]
                },
                {
                    "command": [
                        "eapply projp2_col in HProjpB; [|apply HProjpA].",
                        "VernacExtend",
                        "81786f20c2bd788af45a80032fd1e810c55c7193"
                    ]
                },
                {
                    "command": [
                        "eapply projp2_col in HProjpC; [|apply HProjpA].",
                        "VernacExtend",
                        "0a315b0692b801517f50d0655259c3246c7570ba"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}