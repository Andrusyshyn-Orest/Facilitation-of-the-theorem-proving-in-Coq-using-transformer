{
    "filename": "Tarski_dev/Ch10_line_reflexivity_2.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch10_line_reflexivity.",
            "VernacRequire",
            "db0e93c9ed4ced127356dfcd9bcc12c1d0f0a7a1"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Dimension_axioms.upper_dim_2.",
            "VernacRequire",
            "011f0b7db4168beb56fae1e6e32c76ec4882e7dc"
        ],
        [
            "Section T10_1.",
            "VernacBeginSection",
            "b68801cbcbb25462bb45f9c9250acae9355cfdad"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma cop__cong_on_bissect : forall A B M P X, Coplanar A B X P -> Midpoint M A B -> Perp_at M A B P M -> Cong X A X B -> Col M P X.",
            "VernacStartTheoremProof",
            "5f8c578a8ead6947f294fe20ae38d60e271ef2db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(X = M \\/ ~ Col A B X /\\ Perp_at M X M A B).",
            "VernacExtend",
            "cb3ee79474da451869de167880427b06705c0325"
        ],
        [
            "assert_diffs; apply(cong_perp_or_mid A B M X); Cong.",
            "VernacExtend",
            "578057bea06f49bb0c1f00f5229f1b4b3afdd86d"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply perp_in_perp in H1.",
            "VernacExtend",
            "ff806c83b168e604dc2a5779abe3baf80b4c0621"
        ],
        [
            "apply perp_in_perp in H4.",
            "VernacExtend",
            "9921209e203db525bbe6814b47d92ffd5fac7093"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "apply(cop_perp2__col _ _ _ A B); Perp; Cop.",
            "VernacExtend",
            "23e001604964d0a4f9798682362e192a4e640d5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cop_mid_perp__col : forall A B M P X, Coplanar A B X P -> Cong A X B X -> Midpoint M A B -> Perp A B P M -> Col M P X.",
            "VernacStartTheoremProof",
            "54a4f595c5b69d1a78149ebd1b115c06f3f5895d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (cop__cong_on_bissect A B); Cong.",
            "VernacExtend",
            "0d446789655be0268e779a4eb9a4495000d9f5e2"
        ],
        [
            "apply l8_15_1; Col.",
            "VernacExtend",
            "a79cf9b8a5a6c4add0bc4925badde571ec9e0317"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop__image_in_col : forall A B P P' Q Q' M, Coplanar A B P Q -> ReflectL_at M P P' A B -> ReflectL_at M Q Q' A B -> Col M P Q.",
            "VernacStartTheoremProof",
            "847a666f15aca19e03a13dc1c19b8b6a02ded3db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(ReflectL P P' A B).",
            "VernacExtend",
            "cb7288f809b7101225e2f01a2b30392243c7866a"
        ],
        [
            "eapply (image_in_is_image_spec M).",
            "VernacExtend",
            "e457431d0e9e2f3a3eac86cba56533056c0ca85e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(ReflectL Q Q' A B).",
            "VernacExtend",
            "f9754de7e6c340c91b2b1c1be0600da9535ab756"
        ],
        [
            "eapply (image_in_is_image_spec M).",
            "VernacExtend",
            "e457431d0e9e2f3a3eac86cba56533056c0ca85e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold ReflectL_at in *.",
            "VernacExtend",
            "7b8a6a61f609066d8f75c376d782b953ccbcc0a7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "induction (eq_dec_points A M).",
            "VernacExtend",
            "3d2b82822af20e6d94a020de684291fc26d2ab2b"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "assert (Per B A P).",
            "VernacExtend",
            "76ec91e51330f66a11182e9578afe5d3c8f2f2bf"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply is_image_spec_col_cong with A B;Col.",
            "VernacExtend",
            "53b41c8e120e620f650423281dd0391e96af159e"
        ],
        [
            "assert (Per B A Q).",
            "VernacExtend",
            "49b74c8843007b5d037a27d730072d11a29047de"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply is_image_spec_col_cong with A B;Col.",
            "VernacExtend",
            "53b41c8e120e620f650423281dd0391e96af159e"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply cop_per2__col with B.",
            "VernacExtend",
            "bbc9efffd2f4c4b3ecdbff0e656ca46dbd9523eb"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per A M P).",
            "VernacExtend",
            "7dcc39eae2b0abbcd8538e05fa503da1885bb54a"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply is_image_spec_col_cong.",
            "VernacExtend",
            "fef91eec306c7e7acbe896b006c7852799fe4179"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (Per A M Q).",
            "VernacExtend",
            "9cec3812b61accb5cf20c2c6d251d7d2378ff12a"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply is_image_spec_col_cong.",
            "VernacExtend",
            "fef91eec306c7e7acbe896b006c7852799fe4179"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply cop_per2__col with A.",
            "VernacExtend",
            "f9d1bf45987cca4f6ba057b45a318c550e596fac"
        ],
        [
            "assert_diffs; apply coplanar_perm_12, col_cop__cop with B; Cop.",
            "VernacExtend",
            "7c78533e9fa38eee4e28580a08efb9be558c5c50"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply l7_3 in H0.",
            "VernacExtend",
            "cfd6329be2e71582fd2bfbdfde2aecc857c29a10"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "apply l7_3 in H1.",
            "VernacExtend",
            "a44cc5d138f8d35e68c7c625fb04a310aac62c0d"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l10_10_spec : forall A B P Q P' Q', ReflectL P' P A B -> ReflectL Q' Q A B -> Cong P Q P' Q'.",
            "VernacStartTheoremProof",
            "064fe76ae855f11ba9c1648e531c031a6f40cca8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "assert (P' = P) by (apply (image_spec__eq A); assumption).",
            "VernacExtend",
            "1e7221c448ca3216f143551488b9ae9947dd8759"
        ],
        [
            "assert (Q' = Q) by (apply (image_spec__eq A); assumption).",
            "VernacExtend",
            "a93a5a73ddd36bebd228226c4c04a9f745ea7ab4"
        ],
        [
            "subst; Cong.",
            "VernacExtend",
            "0ea00a8a6d2f87ad3e1f743baa48ec903c55189a"
        ],
        [
            "assert(HH0 := H).",
            "VernacExtend",
            "4a8a137d2875bccdbd225f23d126bc70fe7f4c89"
        ],
        [
            "assert(HH1 := H0).",
            "VernacExtend",
            "a6c94b27110b38c5caf95c37c6bfc6a9f4ae2911"
        ],
        [
            "unfold ReflectL in H.",
            "VernacExtend",
            "8f0142f7d955ed696298199ec9a87091360bf543"
        ],
        [
            "unfold ReflectL in H0.",
            "VernacExtend",
            "d07dba653bc7b5c64d89dff654780589939dc087"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H X.",
            "VernacExtend",
            "0988fedcb8aafccffb0810e1ad91f04c5c8e37c7"
        ],
        [
            "ex_and H0 Y.",
            "VernacExtend",
            "b2373bf6ec5d75c5c9ee42f491e3c29b16bf4274"
        ],
        [
            "assert (exists M, Midpoint M X Y).",
            "VernacExtend",
            "f911ff75ddb14200f712493afe55895a0462a6ec"
        ],
        [
            "apply midpoint_existence.",
            "VernacExtend",
            "b6244e10bea79faf80652e3cfd7e41e28aa63090"
        ],
        [
            "ex_elim H6 Z.",
            "VernacExtend",
            "6c65013fde2d3b957f04bdd6a3fb1dcc407e088e"
        ],
        [
            "assert (Col A B Z).",
            "VernacExtend",
            "522f1384290dfa4c1037b28b8d27c0965320bc7c"
        ],
        [
            "induction (eq_dec_points X Y).",
            "VernacExtend",
            "d0ed5bbfc7babea4e0defd462e65eeb56dae9694"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply l7_3 in H7.",
            "VernacExtend",
            "31ca3d641cd2f7965bbc4ae295b9d4bbd708aeb5"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "double P Z R.",
            "VernacExtend",
            "e32dc8ada3057c3da2387c223a68fd4fe4e9bc2e"
        ],
        [
            "double P' Z R'.",
            "VernacExtend",
            "a91e472fe0f347bd10d607522bc368fefa6f6505"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "assert (ReflectL R R' A B).",
            "VernacExtend",
            "0fa2b9e41caa899d1bfcb5c8b1ba40262ef34d5c"
        ],
        [
            "apply is_image_is_image_spec .",
            "VernacExtend",
            "f0638f273cdfb621ebeba6c5af7d73a8b369fe3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (midpoint_preserves_image ) with P P' Z.",
            "VernacExtend",
            "d6b350b2b99ee97515d059ccd8d2095eb27b03b4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l10_4.",
            "VernacExtend",
            "ce8c4887979372750e6bf62604f82076f062b672"
        ],
        [
            "apply is_image_is_image_spec;auto.",
            "VernacExtend",
            "a59e4cb77dd92e7f564f9994c311a4d32f7e042f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(R <> R').",
            "VernacExtend",
            "d71cba70cbfd2f37ba673999d5df8ea774de40a5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "assert( P' = P).",
            "VernacExtend",
            "46140750389afbb85d2fa8c91a0562cd8f0ef13f"
        ],
        [
            "eapply l7_9.",
            "VernacExtend",
            "2d1b9759b531f4ceebb32416848b0daeaf205b9a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply perp_distinct in H3.",
            "VernacExtend",
            "6b851ecf39e4ec3eceffa467a22d76f4bdf56d8e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Midpoint Y R R') by (eauto using symmetry_preserves_midpoint).",
            "VernacExtend",
            "be18b607176079ad15af99b46862d50dabb99b03"
        ],
        [
            "assert (Cong Q' R' Q R) by (apply (l7_13 Y); assumption).",
            "VernacExtend",
            "959a01e22a84b37ff9b471330658f45fb6ea14a2"
        ],
        [
            "assert (Cong P' Z P Z) by (apply (is_image_spec_col_cong A B); assumption).",
            "VernacExtend",
            "d2bae068b0655665a6012e962ef131c6ede4ae31"
        ],
        [
            "assert (Cong Q' Z Q Z) by (apply (is_image_spec_col_cong A B); assumption).",
            "VernacExtend",
            "89bab8c7fe0a1787bcb770347b90cb10766012a8"
        ],
        [
            "apply cong_commutativity, (five_segment R R' Z Z); Cong; Between.",
            "VernacExtend",
            "e4a25f95221843e85fb5517447ff24c6241713c0"
        ],
        [
            "apply cong_transitivity with P Z; [|apply cong_transitivity with P' Z]; Cong.",
            "VernacExtend",
            "65b97c04ce086e684639f117019d7314bf089c9d"
        ],
        [
            "intro; treat_equalities; contradiction.",
            "VernacExtend",
            "4e19b9245385bebb51de893ea5f05fe4a14f8d44"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "apply l7_3 in H0.",
            "VernacExtend",
            "cfd6329be2e71582fd2bfbdfde2aecc857c29a10"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply is_image_spec_col_cong.",
            "VernacExtend",
            "fef91eec306c7e7acbe896b006c7852799fe4179"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply HH0.",
            "VernacExtend",
            "42790388fe3297e7ff79dac2840f02988da91110"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply l7_3 in H.",
            "VernacExtend",
            "4e135ae4b2df6432f3593ee48c8bece5e37db368"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "eapply is_image_spec_col_cong.",
            "VernacExtend",
            "fef91eec306c7e7acbe896b006c7852799fe4179"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply HH1.",
            "VernacExtend",
            "c600c47380c483b1ee04b28adfc19940527da17a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l10_10 : forall A B P Q P' Q', Reflect P' P A B -> Reflect Q' Q A B -> Cong P Q P' Q'.",
            "VernacStartTheoremProof",
            "4b00ee8c13ac06e458b9ad8cf618e13deb7a7e79"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold Reflect in *.",
            "VernacExtend",
            "05dee4afbc185c04f344c7e8b964d45888da0061"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l7_13 with B; apply l7_2;auto.",
            "VernacExtend",
            "94d8cbde8487ed73ce782161af0eb0d9211b7f4d"
        ],
        [
            "apply l10_10_spec with A B;try apply is_image_is_image_spec;assumption.",
            "VernacExtend",
            "852b96cd8d1d84a9c95b21f24b81ae5cc77b2fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_preserves_bet : forall A B C A' B' C' X Y, ReflectL A A' X Y -> ReflectL B B' X Y -> ReflectL C C' X Y -> Bet A B C -> Bet A' B' C'.",
            "VernacStartTheoremProof",
            "49206b8cd2cb7ad3ed8173d010959a125c25f35a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points X Y).",
            "VernacExtend",
            "a5617724bd672b8e1946f681ad9e8e3455352ebf"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply image_spec__eq in H.",
            "VernacExtend",
            "7cf35d2dfd1f7c223251cef176861e8885769a06"
        ],
        [
            "apply image_spec__eq in H0.",
            "VernacExtend",
            "ff9250ff23d3f9d62303fe0350595f16fd27658b"
        ],
        [
            "apply image_spec__eq in H1.",
            "VernacExtend",
            "bfe19c1fa10eaff30fafe9ec84960cfd3fac3850"
        ],
        [
            "subst; assumption.",
            "VernacExtend",
            "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split; apply l10_10_spec with X Y.",
            "VernacExtend",
            "d4eb6c9eeb9ff41eebb81b90d05c0a66478b063c"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l10_4_spec; assumption.",
            "VernacExtend",
            "6a17dafe4b5a6a077a324286a3df53f5cd129d85"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_gen_preserves_bet : forall A B C A' B' C' X Y, Reflect A A' X Y -> Reflect B B' X Y -> Reflect C C' X Y -> Bet A B C -> Bet A' B' C'.",
            "VernacStartTheoremProof",
            "9301d66ff6ff96f8808d5f4696e34266b220c2b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points X Y).",
            "VernacExtend",
            "a5617724bd672b8e1946f681ad9e8e3455352ebf"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply image__midpoint in H.",
            "VernacExtend",
            "37ff1c117dd7903fb39ad850dfd6213219617afc"
        ],
        [
            "apply image__midpoint in H0.",
            "VernacExtend",
            "4eefd2608a931d34db89f8dd87fa58552331724c"
        ],
        [
            "apply image__midpoint in H1.",
            "VernacExtend",
            "125465de199ff3c05d13f803d5b08fd2fb901ea8"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply l7_15 with A B C X; Midpoint.",
            "VernacExtend",
            "41c4a93d31202e0ac31a18ea888fd8c02dda5943"
        ],
        [
            "eapply image_preserves_bet;try apply is_image_is_image_spec; eauto.",
            "VernacExtend",
            "4b1d8f5bcb1fa50923951433736e1a11acc4aea2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_preserves_col : forall A B C A' B' C' X Y, ReflectL A A' X Y -> ReflectL B B' X Y -> ReflectL C C' X Y -> Col A B C -> Col A' B' C'.",
            "VernacStartTheoremProof",
            "54e57b12c51d972659f8f8a4989278db0da053a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H2 as [HBet|[HBet|HBet]]; [|apply col_permutation_2|apply col_permutation_1]; apply bet_col; eapply image_preserves_bet; eauto.",
            "VernacExtend",
            "3ba5ff6faef0fbb97b51acad944cc2df4fe99528"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_gen_preserves_col : forall A B C A' B' C' X Y, Reflect A A' X Y -> Reflect B B' X Y -> Reflect C C' X Y -> Col A B C -> Col A' B' C'.",
            "VernacStartTheoremProof",
            "2fc0bcb15e0fe2d55a83f771875c797f5e1fb0f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H2 as [HBet|[HBet|HBet]]; [|apply col_permutation_2|apply col_permutation_1]; apply bet_col; eapply image_gen_preserves_bet; eauto.",
            "VernacExtend",
            "5b9570acad9725ca4b1c72c0ecbbaf925c1cd73d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_gen_preserves_ncol : forall A B C A' B' C' X Y, Reflect A A' X Y -> Reflect B B' X Y -> Reflect C C' X Y -> ~ Col A B C -> ~ Col A' B' C'.",
            "VernacStartTheoremProof",
            "d7007393955011af0b79b175872cdfcf3eb514da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2, image_gen_preserves_col with A' B' C' X Y; try (apply l10_4); assumption.",
            "VernacExtend",
            "1b16095fcb7986deb6dc4f3937d00926046954ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_gen_preserves_inter : forall A B C D I A' B' C' D' I' X Y, Reflect A A' X Y -> Reflect B B' X Y -> Reflect C C' X Y -> Reflect D D' X Y -> ~ Col A B C -> C <> D -> Col A B I -> Col C D I -> Col A' B' I' -> Col C' D' I' -> Reflect I I' X Y.",
            "VernacStartTheoremProof",
            "852a262ab8466bc98085558e0d5e96d7993dc5dc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (l10_6_existence X Y I) as [I0 HI0]; trivial.",
            "VernacExtend",
            "2addbce7b751272a470cbed8bc8518018743489d"
        ],
        [
            "assert (I' = I0); [|subst; assumption].",
            "VernacExtend",
            "bd053e307489716eb9a507f0d7f499f684e242a9"
        ],
        [
            "apply (l6_21 A' B' C' D'); trivial.",
            "VernacExtend",
            "20154a704e1240dcd36af8ac520dda41f25adce5"
        ],
        [
            "apply image_gen_preserves_ncol with A B C X Y; assumption.",
            "VernacExtend",
            "daa07a2f3bed3f8df6efb298890cb0241696e505"
        ],
        [
            "intro; subst D'; apply H4, l10_2_uniqueness with X Y C'; assumption.",
            "VernacExtend",
            "a2f8bec1a7054d3ea3887faf9f9402ba559af67c"
        ],
        [
            "apply image_gen_preserves_col with A B I X Y; assumption.",
            "VernacExtend",
            "7415dc3e06f80806e32a38d916f77ccf91e65c92"
        ],
        [
            "apply image_gen_preserves_col with C D I X Y; assumption.",
            "VernacExtend",
            "5d85bb3ede006c5ec3a0823335cab390d09ca83c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma intersection_with_image_gen : forall A B C A' B' X Y, Reflect A A' X Y -> Reflect B B' X Y -> ~ Col A B A' -> Col A B C -> Col A' B' C -> Col C X Y.",
            "VernacStartTheoremProof",
            "34dc927d5e63a928c78a1eb516bdb16f556c0f3e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l10_8.",
            "VernacExtend",
            "5c20080ecd5411847b1d5e7907d872da76748dce"
        ],
        [
            "assert (Reflect A' A X Y) by (apply l10_4; assumption).",
            "VernacExtend",
            "4067ab6a89633f5726b334e74b624c4c376c7a3e"
        ],
        [
            "assert (~ Col A' B' A) by (apply image_gen_preserves_ncol with A B A' X Y; trivial).",
            "VernacExtend",
            "b07bc5378cdc0fc1dc4f29765a68e276f1b6ec12"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply image_gen_preserves_inter with A B A' B' A' B' A B; trivial.",
            "VernacExtend",
            "f0e733e4208f521694d11026b7ad76e8a85b91ed"
        ],
        [
            "apply l10_4; assumption.",
            "VernacExtend",
            "e091039009a57f9da101462a479d9849fe94041a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_preserves_midpoint : forall A B C A' B' C' X Y, ReflectL A A' X Y -> ReflectL B B' X Y -> ReflectL C C' X Y -> Midpoint A B C -> Midpoint A' B' C'.",
            "VernacStartTheoremProof",
            "1f3b552492b78c51ad9ec3ace4c04bd4189fb0d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply image_preserves_bet.",
            "VernacExtend",
            "f076b45f47a43131061fb2cf7d1b73569d0b08d1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "eapply l10_10_spec.",
            "VernacExtend",
            "b653914647215c389c09e34177387ffd77ab92f8"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "eapply l10_10_spec.",
            "VernacExtend",
            "b653914647215c389c09e34177387ffd77ab92f8"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_spec_preserves_per : forall A B C A' B' C' X Y, ReflectL A A' X Y -> ReflectL B B' X Y -> ReflectL C C' X Y -> Per A B C -> Per A' B' C'.",
            "VernacStartTheoremProof",
            "07538be5f89af12fb93c393c025f75437d0a3d17"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points X Y).",
            "VernacExtend",
            "d0ed5bbfc7babea4e0defd462e65eeb56dae9694"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply image_spec__eq in H.",
            "VernacExtend",
            "7cf35d2dfd1f7c223251cef176861e8885769a06"
        ],
        [
            "apply image_spec__eq in H0.",
            "VernacExtend",
            "ff9250ff23d3f9d62303fe0350595f16fd27658b"
        ],
        [
            "apply image_spec__eq in H1.",
            "VernacExtend",
            "bfe19c1fa10eaff30fafe9ec84960cfd3fac3850"
        ],
        [
            "subst; assumption.",
            "VernacExtend",
            "7e743ec2514456ab315be0cfedd9ae3caf020d0d"
        ],
        [
            "double C B C1.",
            "VernacExtend",
            "b2ca12c6f13023687742474aa6179421a298a402"
        ],
        [
            "assert (exists C1', ReflectL C1 C1' X Y).",
            "VernacExtend",
            "feaa31c6297f5c076aa00875ad39a227b353c1bf"
        ],
        [
            "apply l10_6_existence_spec.",
            "VernacExtend",
            "bffc6d0df8c459056521f6365e90f4d4b5c7631d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 C1'.",
            "VernacExtend",
            "bb5431391b37bfb345db04dcc41710feb408df35"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C1'.",
            "VernacExtend",
            "2dd64f23429e8b918d47ce521af03866f228a1c0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply image_preserves_midpoint.",
            "VernacExtend",
            "a1db81c9887704e4faa7f8114378eddfc4be1024"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "eapply l10_10_spec.",
            "VernacExtend",
            "b653914647215c389c09e34177387ffd77ab92f8"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "unfold Per in H2.",
            "VernacExtend",
            "9e96b4d5be7b4b5de6eea5267f50d467e127af12"
        ],
        [
            "ex_and H2 C2.",
            "VernacExtend",
            "5010893e9a972557e4ea1a321552b00a14331624"
        ],
        [
            "assert (C2=C1).",
            "VernacExtend",
            "b3cc790e9f9aa6a99f94db2c8c06adf7b3c44ea8"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst C2.",
            "VernacExtend",
            "8e83408c87120bd8ef8e0f60c07c47ce2f74816c"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply l10_10_spec.",
            "VernacExtend",
            "b653914647215c389c09e34177387ffd77ab92f8"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l10_4_spec.",
            "VernacExtend",
            "be891b87abbe56cf09e0a5eb740e4911e5e33e3d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_preserves_per : forall A B C A' B' C' X Y, Reflect A A' X Y -> Reflect B B' X Y -> Reflect C C' X Y -> Per A B C -> Per A' B' C'.",
            "VernacStartTheoremProof",
            "f43d66821c602ff487036690a905c101a33e9e16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points X Y).",
            "VernacExtend",
            "d0ed5bbfc7babea4e0defd462e65eeb56dae9694"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction H; induction H0; induction H1; spliter; [contradiction..|].",
            "VernacExtend",
            "c715406d6e814624be827d1c6b805b7e4ed4fc79"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply midpoint_preserves_per with A B C X; [|apply l7_2..]; assumption.",
            "VernacExtend",
            "f59ba3e2c994a464cbc8d099ce8ef16523535b64"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induction H; induction H0; induction H1; spliter; [|contradiction..].",
            "VernacExtend",
            "73260936fecb61dd750056f1182fcd14ede3feb9"
        ],
        [
            "apply image_spec_preserves_per with A B C X Y; assumption.",
            "VernacExtend",
            "6ec666c9f451ac6caa38bd2dfd4f2c637bede4f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l10_12 : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Cong A B A' B' -> Cong B C B' C' -> Cong A C A' C'.",
            "VernacStartTheoremProof",
            "d09468da22e13a6f9bd038edd095dee42c3221eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "treat_equalities;auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "treat_equalities;auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "assert (exists X, Midpoint X B B').",
            "VernacExtend",
            "3d588a2066101a013f8f785b4d77d3d570ca9c4b"
        ],
        [
            "apply midpoint_existence.",
            "VernacExtend",
            "b6244e10bea79faf80652e3cfd7e41e28aa63090"
        ],
        [
            "ex_and H5 X.",
            "VernacExtend",
            "ca2ea52a9ad948e2b54c82d2f2e94e2f61de9ad6"
        ],
        [
            "double A' X A1.",
            "VernacExtend",
            "59c7a61fc7499e72a48f1302cbb34679adc7255e"
        ],
        [
            "double C' X C1.",
            "VernacExtend",
            "e1bb1200f871d3e468d43aae2b4c490c51dafe65"
        ],
        [
            "assert(Cong_3 A' B' C' A1 B C1) by (repeat split;eauto using l7_13, l7_2).",
            "VernacExtend",
            "d185bf709b58b54fa1c20934302bfba8c05ce27d"
        ],
        [
            "assert (Per A1 B C1) by (eauto using l8_10).",
            "VernacExtend",
            "21808a98c6972f5801da8d12a7ffdf841507779a"
        ],
        [
            "unfold Cong_3 in H8.",
            "VernacExtend",
            "d27b17afc91cfcb01cf4452c66d72567ef0a7de3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A B A1 B) by (apply cong_transitivity with A' B'; trivial).",
            "VernacExtend",
            "674d09158549d3226e7fa6886148ed93200e0d6a"
        ],
        [
            "assert(Cong B C B C1) by (apply cong_transitivity with B' C'; trivial).",
            "VernacExtend",
            "c45bd5c19b07f4ab6bdbfb217c7c7394cb9cd58a"
        ],
        [
            "apply cong_transitivity with A1 C1; Cong.",
            "VernacExtend",
            "1b37accb41dcacc0226cd5eca5ba8ecf6eff94cb"
        ],
        [
            "clear dependent A'; clear dependent B'; clear dependent C'; clear X.",
            "VernacExtend",
            "b26bdaa5f33d9beb12f1f14bbfdd70f3d51edc9a"
        ],
        [
            "assert(exists Y, Midpoint Y C C1) by (apply midpoint_existence).",
            "VernacExtend",
            "bab3dc2f24cb516d891bf4536c87201aeb0b010e"
        ],
        [
            "ex_and H0 Y.",
            "VernacExtend",
            "b2373bf6ec5d75c5c9ee42f491e3c29b16bf4274"
        ],
        [
            "assert(Reflect C1 C B Y) by (apply cong_midpoint__image; assumption).",
            "VernacExtend",
            "f8cfcc0c449b49da42a677d6f09d6f982bb6b1be"
        ],
        [
            "assert(exists A2, Reflect A1 A2 B Y).",
            "VernacExtend",
            "b100d93d5260218947e826d388e66c1947ae9192"
        ],
        [
            "apply l10_6_existence.",
            "VernacExtend",
            "55d16856b23c3ab1ee48ab5924da2b3916c7af03"
        ],
        [
            "ex_elim H2 A2.",
            "VernacExtend",
            "3156fe011110b0e5109de3ee5c1b8ddc009bc924"
        ],
        [
            "assert (Cong C A2 C1 A1).",
            "VernacExtend",
            "5f9910de134bfc49c22ade947c3030e2dac2142e"
        ],
        [
            "eapply l10_10.",
            "VernacExtend",
            "1f9e6e9496f0b71b1a2f5e5b0aa76357908a78cf"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_transitivity with A2 C; Cong.",
            "VernacExtend",
            "81f25713113ad1c960e35dfdb30b0bc6a9c9336a"
        ],
        [
            "assert (Reflect B B B Y) by apply image_triv.",
            "VernacExtend",
            "c6d4901ea028a575166335ca7fab4ab19acdb4e0"
        ],
        [
            "assert (Per A2 B C).",
            "VernacExtend",
            "c6dd2f36287bb733b7f393ef9397eeac78a4c501"
        ],
        [
            "eapply (image_preserves_per A1 B C1 A2 B C).",
            "VernacExtend",
            "7d99df0de689f4bdfed5ed1383f0fb050ec613dc"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong A B A2 B).",
            "VernacExtend",
            "fe1e833170980b77ced96d6d8b735f90f096db1d"
        ],
        [
            "apply cong_transitivity with A1 B; trivial.",
            "VernacExtend",
            "079568aad08d7480285ef7079018360870c31dab"
        ],
        [
            "apply cong_symmetry, l10_10 with B Y; assumption.",
            "VernacExtend",
            "7d48a483058fca4fcfc1096c5cb8af6c39d75419"
        ],
        [
            "clear dependent A1; clear dependent C1; clear dependent Y.",
            "VernacExtend",
            "da7972aee26affe8726bab212c2860c6d5d63dc6"
        ],
        [
            "assert (exists Z, Midpoint Z A A2).",
            "VernacExtend",
            "21b896a092b379b0fa38776051ac655ba1ddf6c1"
        ],
        [
            "apply midpoint_existence.",
            "VernacExtend",
            "b6244e10bea79faf80652e3cfd7e41e28aa63090"
        ],
        [
            "ex_and H0 Z.",
            "VernacExtend",
            "f89400e287b39d555cde07f37c5c5bbaab9e1a11"
        ],
        [
            "assert (Reflect A2 A B Z) by (apply cong_midpoint__image; Cong).",
            "VernacExtend",
            "2656a275d90a5c19af6d034907d98dd6257c358b"
        ],
        [
            "destruct (symmetric_point_construction C B) as [C0].",
            "VernacExtend",
            "a9802c3fec60e83a91ae034202a9e56a3e00bdd8"
        ],
        [
            "assert (Cong A C A C0) by (apply per_double_cong with B; assumption).",
            "VernacExtend",
            "d80567c8b1d5febcc195cabeca2de4757ad71299"
        ],
        [
            "assert (Cong A2 C A2 C0) by (apply per_double_cong with B; assumption).",
            "VernacExtend",
            "c089a11e24adc82c4e02ae732158c59aae119e3a"
        ],
        [
            "assert (Reflect C0 C B Z).",
            "VernacExtend",
            "e188d2e4da1adb0ebac1b9078a80711bf377bd42"
        ],
        [
            "apply is_image_rev, cong_midpoint__image; trivial.",
            "VernacExtend",
            "f64c6937110a5be3d08c2ff31b237b62f8a88130"
        ],
        [
            "induction (eq_dec_points A A2).",
            "VernacExtend",
            "d696aba70e395af9aa40ec378d99c9fc285029f7"
        ],
        [
            "treat_equalities; assumption.",
            "VernacExtend",
            "1de2a51775ad72f97b3cb8e5d10010adcfc011d7"
        ],
        [
            "apply (l4_17 A A2); Col.",
            "VernacExtend",
            "2eeed9738024b078e308328d3bcad28e9c6ddf47"
        ],
        [
            "assert (Cong A C A2 C0).",
            "VernacExtend",
            "36f8be1bbc4589b04aa1bce15a58076c4649a952"
        ],
        [
            "apply l10_10 with B Z; assumption.",
            "VernacExtend",
            "a7b19296247d2d406f333c2efc5d2e0f70c96ad2"
        ],
        [
            "apply cong_transitivity with A2 C0; Cong.",
            "VernacExtend",
            "c86a60bdc5f07a28c6592aa87e34dfb434a98ba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong4_cop2__eq : forall A B C P Q, ~ Col A B C -> Cong A P B P -> Cong A P C P -> Coplanar A B C P -> Cong A Q B Q -> Cong A Q C Q -> Coplanar A B C Q -> P = Q.",
            "VernacStartTheoremProof",
            "89df9f1016ca6955998903ae35ece0eb4513ffa6"
        ],
        [
            "intros A B C P Q HNCol; intros.",
            "VernacExtend",
            "de151fec1dfc40dad0fefd40ad675c0eb93578d8"
        ],
        [
            "destruct (eq_dec_points P Q); [assumption|].",
            "VernacExtend",
            "16a579d23cace256abd05d9c731273eaebcd9822"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply HNCol.",
            "VernacExtend",
            "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
        ],
        [
            "assert (Haux : forall R, Col P Q R -> Cong A R B R /\\ Cong A R C R).",
            "VernacExtend",
            "e6c21c27812bb43c95a287c14821eb5dff4c393a"
        ],
        [
            "intros R HR; split; apply cong_commutativity, (l4_17 P Q); Cong.",
            "VernacExtend",
            "9d2b56d6c0a5dc75e7311126f3e1520ef95d180e"
        ],
        [
            "destruct (midpoint_existence A B) as [D].",
            "VernacExtend",
            "a238f0fbb1b9d223357e0444538418de4afa2f34"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HCol1 : Col P Q D).",
            "VernacExtend",
            "ff7e503567b4d6a675d2d506302d66589e1f42c2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Coplanar A B C D) by Cop.",
            "VernacExtend",
            "5db248e30825322435b967b5e1bf3ae6ec76a128"
        ],
        [
            "apply cong3_cop2__col with A B; Cong; apply coplanar_pseudo_trans with A B C; Cop.",
            "VernacExtend",
            "0200f1596f9185f07e855fca71c5d5d8d639754d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_col_ex3 P Q D HCol1) as [R1]; spliter.",
            "VernacExtend",
            "fe920b72db84663f53f8b3422511e125e733025b"
        ],
        [
            "destruct (segment_construction R1 D R1 D) as [R2 []].",
            "VernacExtend",
            "7d9e8c8d91a82f08735f7ccb8423d4776760ea2a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Col P Q R2) by ColR.",
            "VernacExtend",
            "1e9b54518fbd4c66ba4571259e14bfa06b931675"
        ],
        [
            "destruct (Haux R1); trivial.",
            "VernacExtend",
            "fc43cd7086ae11d12ef45c0ffb5bc449c496a786"
        ],
        [
            "destruct (Haux R2); trivial.",
            "VernacExtend",
            "d869dcece88764f4f38a8052e9c09fe9cd6fc7a1"
        ],
        [
            "assert (Cong A R1 A R2).",
            "VernacExtend",
            "0bb2d370762afdd0414889ce7a65921a893db2ed"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Per A D R1) by (apply l8_2; exists B; split; Cong).",
            "VernacExtend",
            "d4ffc33a36820c1c67ff4a9d3c51f1658fb19672"
        ],
        [
            "apply l10_12 with D D; Cong.",
            "VernacExtend",
            "d9ee705ec9e6f276eb1490ac119b81dfad8f62e9"
        ],
        [
            "apply per_col with R1; ColR.",
            "VernacExtend",
            "63eab9061d877642f0be6b6bcb7230e9879353b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply cong3_cop2__col with R1 R2; auto; [apply col_cop2__cop with P Q; auto..| |].",
            "VernacExtend",
            "799c0a04ff0613eb7c58e5b493d7b468a2391ca7"
        ],
        [
            "apply cong_transitivity with A R1; [|apply cong_transitivity with A R2]; Cong.",
            "VernacExtend",
            "01048bad4b9be5383f32cc1deca19e04f15d4a83"
        ],
        [
            "apply cong_transitivity with A R1; [|apply cong_transitivity with A R2]; Cong.",
            "VernacExtend",
            "01048bad4b9be5383f32cc1deca19e04f15d4a83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l10_16 : forall A B C A' B' P, ~ Col A B C -> ~ Col A' B' P -> Cong A B A' B' -> exists C', Cong_3 A B C A' B' C' /\\ OS A' B' P C' .",
            "VernacStartTheoremProof",
            "1e25cfbf1d7f5efa566239ea56cf02fd6e98de10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert(exists X, Col A B X /\\ Perp A B C X).",
            "VernacExtend",
            "bb5558d56b6edc39cebb9dcbd2becb1443121de3"
        ],
        [
            "apply l8_18_existence.",
            "VernacExtend",
            "4204152741909aba3c7f21e84df61d971d196b16"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H3 X.",
            "VernacExtend",
            "3f84d0c05097934f19bdbfda9e36e870ac39f323"
        ],
        [
            "assert (exists X', Cong_3 A B X A' B' X').",
            "VernacExtend",
            "b8c9be6c90ef95d5914712b00e38fdec9a80dbd8"
        ],
        [
            "eapply l4_14.",
            "VernacExtend",
            "2e64bbe24e459931cc8d7fc2f79c92c3988d36d9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_elim H5 X'.",
            "VernacExtend",
            "60ad7b72c230889958a080b78013c85240a58c67"
        ],
        [
            "assert (exists Q, Perp A' B' Q X' /\\ OS A' B' P Q).",
            "VernacExtend",
            "9b8341ae3d27e8774d7bd3c3edae0831c224faca"
        ],
        [
            "apply l10_15.",
            "VernacExtend",
            "d7c55a807cbbc5f443c5718fa80a24312a612b90"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 Q.",
            "VernacExtend",
            "01cea72de7ba3882c6e680e479baa0ec88ecb5c3"
        ],
        [
            "assert (exists C', Out X' C' Q /\\ Cong X' C' X C).",
            "VernacExtend",
            "c4fe86245ccacc9ac68713450b5da39e14df8795"
        ],
        [
            "eapply l6_11_existence.",
            "VernacExtend",
            "bc4a38ec5a3431099dfba0c55c5a6226fed4f3f5"
        ],
        [
            "apply perp_distinct in H5.",
            "VernacExtend",
            "b7c18cb951a5f82e9c6a303f5e1ad61ca572035b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "ex_and H8 C'.",
            "VernacExtend",
            "af893d74f4bffd8834413cfa97870fb9d7354f82"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "unfold Cong_3 in *.",
            "VernacExtend",
            "81846649e3ee6af32dc9d86caa3a4bf892f50899"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Cong A C A' C').",
            "VernacExtend",
            "7f7937af4c58896ae0d60bcc76d667aade32b5ed"
        ],
        [
            "induction(eq_dec_points A X).",
            "VernacExtend",
            "f0dfcb2e07469b66b3c4a70125bac07472563157"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply cong_symmetry in H10.",
            "VernacExtend",
            "b92728aad7dd298b29289a2df129891798ae148b"
        ],
        [
            "apply cong_identity in H10.",
            "VernacExtend",
            "26e436ffa41255d8588fffd0464174a82ff83ab0"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l10_12.",
            "VernacExtend",
            "c8717eef8a8470b5ef8b7e7697b1da174aff0b17"
        ],
        [
            "3: apply H10.",
            "VernacExtend",
            "56efcbd38c1bf24962e8afcebb547bb1dc4a99b3"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "eapply l8_14_2_1b_bis.",
            "VernacExtend",
            "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "eapply l8_14_2_1b_bis.",
            "VernacExtend",
            "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro assumption.",
            "VernacExtend",
            "f81edc42751ff1910c103dc464f8a82810c11d91"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_identity in H10.",
            "VernacExtend",
            "26e436ffa41255d8588fffd0464174a82ff83ab0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_symmetry in H9.",
            "VernacExtend",
            "941dc4baeffa3118085e5edb55043d8678b27792"
        ],
        [
            "apply cong_identity in H9.",
            "VernacExtend",
            "4c9efb2bec6f621beba9fc2193f7d44b970b31fb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "eapply out_col.",
            "VernacExtend",
            "0a23ba7e4b51d438b16a502d412f752ae97c0d09"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split;assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong B C B' C').",
            "VernacExtend",
            "5b489bfcd3d3cf8630ee50d112339bddd0a8e35f"
        ],
        [
            "induction(eq_dec_points B X).",
            "VernacExtend",
            "dde3c2e52170bc58ab920b368b852c427b717d8d"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply cong_symmetry in H11.",
            "VernacExtend",
            "b33031bc9c1cfeb15e7fe07ba7cb60adc41f4e01"
        ],
        [
            "apply cong_identity in H11.",
            "VernacExtend",
            "37a4c174e081764ed8fbd03de45502bad74ba7e8"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l10_12.",
            "VernacExtend",
            "c8717eef8a8470b5ef8b7e7697b1da174aff0b17"
        ],
        [
            "3: apply H11.",
            "VernacExtend",
            "a719567dd8fcaafb5708f034d567dc2d9ca8392f"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "eapply l8_14_2_1b_bis.",
            "VernacExtend",
            "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "eapply l8_14_2_1b_bis.",
            "VernacExtend",
            "778e6a91f04e6857948354c1b1ccdb0040cfddaf"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro assumption.",
            "VernacExtend",
            "f81edc42751ff1910c103dc464f8a82810c11d91"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_identity in H11.",
            "VernacExtend",
            "37a4c174e081764ed8fbd03de45502bad74ba7e8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "apply cong_symmetry in H9.",
            "VernacExtend",
            "941dc4baeffa3118085e5edb55043d8678b27792"
        ],
        [
            "apply cong_identity in H9.",
            "VernacExtend",
            "4c9efb2bec6f621beba9fc2193f7d44b970b31fb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "eapply out_col.",
            "VernacExtend",
            "0a23ba7e4b51d438b16a502d412f752ae97c0d09"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (T19 := (l9_19 A' B' C' Q X')).",
            "VernacExtend",
            "7e26c36766ddf149f61777dafa3205919a8ad927"
        ],
        [
            "assert (OS A' B' C' Q <-> Out X' C' Q /\\ ~ Col A' B' C').",
            "VernacExtend",
            "2543b8805b18ba1a70e99bc231c1d4eeac460416"
        ],
        [
            "apply T19.",
            "VernacExtend",
            "57721897c512906cf9c173f50c4acea46f7702b6"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "destruct H14.",
            "VernacExtend",
            "9345df2e4b88d9e4f308942c392756c17c4f8a03"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (OS A' B' C' Q).",
            "VernacExtend",
            "21c49c684f471e7e48d5c5c5567c433b61c15abd"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cop_image__col : forall A B P P' X, P <> P' -> Reflect P P' A B -> Cong P X P' X -> Coplanar A B P X -> Col A B X.",
            "VernacStartTheoremProof",
            "2024bf01574f1caf3c7b326ab4dfad512b1313e8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Reflect in *.",
            "VernacExtend",
            "05dee4afbc185c04f344c7e8b964d45888da0061"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold ReflectL in H3.",
            "VernacExtend",
            "52c71a98e4fecd3bdb2f63d64bd0409054576f74"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 M.",
            "VernacExtend",
            "400204db91ec44d27fcc0106ee2781053fb22697"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "induction(eq_dec_points A M).",
            "VernacExtend",
            "3d2b82822af20e6d94a020de684291fc26d2ab2b"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "assert (Perp P A A B).",
            "VernacExtend",
            "1474109890d9661b255c2ece6b5b19450ef12721"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "apply perp_distinct in H4.",
            "VernacExtend",
            "2da3b49673b0fce2c75ae07d64a8c35c9874ab19"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_2 in H3.",
            "VernacExtend",
            "c41dbc8f89fcce23aa2184550f3771ec72184fde"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_comm in H6.",
            "VernacExtend",
            "18d93eb5df7174d4a9fa36cd5bcd8dfa8f0c3748"
        ],
        [
            "apply perp_perp_in in H6.",
            "VernacExtend",
            "ad6ed089c4d0e2e0cd10ebc888abeffbf8acd899"
        ],
        [
            "apply perp_in_comm in H6.",
            "VernacExtend",
            "af7a16c7c1f250a6aac4f957e88cb05dad2ff451"
        ],
        [
            "apply perp_in_per in H6.",
            "VernacExtend",
            "16d2a8345109de7adb632a0732d331d3f470736d"
        ],
        [
            "assert (Per X A P).",
            "VernacExtend",
            "32e6e1b49afbba3ac6666ce2cb1d79d241bcfa60"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply l8_2 in H6.",
            "VernacExtend",
            "7b7f1a7f2751803e5a5aa047f670281748ffd260"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply (cop_per2__col P).",
            "VernacExtend",
            "2f6d7d6d6ac3f8331711d27e8666755d8da9008e"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_2 in H3.",
            "VernacExtend",
            "c41dbc8f89fcce23aa2184550f3771ec72184fde"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Perp P M M A).",
            "VernacExtend",
            "f4238acada6003dfdbab7dfeb6ad4ef7e0ebce13"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_2 in H3.",
            "VernacExtend",
            "c41dbc8f89fcce23aa2184550f3771ec72184fde"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_comm in H7.",
            "VernacExtend",
            "36d8e20f3dbf8eb1f1681b38aeb50a43d0f6ec82"
        ],
        [
            "apply perp_perp_in in H7.",
            "VernacExtend",
            "8b8764a38713ef7ad4eab04eeeef3d2377473476"
        ],
        [
            "apply perp_in_comm in H7.",
            "VernacExtend",
            "65ff3f45eacdcc1cbc5c12f8d9b3a6b3b37e6391"
        ],
        [
            "apply perp_in_per in H7.",
            "VernacExtend",
            "3aa5eadbebb4320508d295b47aacd61259b5d51a"
        ],
        [
            "assert (Per X M P).",
            "VernacExtend",
            "80ea503811a16d0d71eb1c8c15a347692c7e262a"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists P'.",
            "VernacExtend",
            "ce86f7cea0f712922d42bc3042708971484aee4f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2 in H7.",
            "VernacExtend",
            "7db734f33415cd58f0590c3b0fe0e86ccf5ed2ca"
        ],
        [
            "assert (Col A X M).",
            "VernacExtend",
            "bd214936afc2ef065e4d4558fa3ef8811cea9d66"
        ],
        [
            "assert (P <> M).",
            "VernacExtend",
            "98efe0fdddae01219d00e0e5e8687cb52aedde5d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_2 in H3.",
            "VernacExtend",
            "c41dbc8f89fcce23aa2184550f3771ec72184fde"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply (cop_per2__col P).",
            "VernacExtend",
            "2f6d7d6d6ac3f8331711d27e8666755d8da9008e"
        ],
        [
            "apply coplanar_perm_2, col_cop__cop with B; Cop.",
            "VernacExtend",
            "62d8087134c4b17569a7d10cf5889650418518bd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "spliter;subst;Col.",
            "VernacExtend",
            "019865958c12bb0a0bf0c415edaeae3d3ca78114"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cop_per2_1 : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> Coplanar A B X Y -> X = Y \\/ Midpoint B X Y.",
            "VernacStartTheoremProof",
            "094b6e2c0d757cdb58495825434b5faca2d1480c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply (cop_per2__col A).",
            "VernacExtend",
            "60ea9edc5f6ebcca0f7e69fa8739af2d6d3b194a"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cop_per2 : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> Coplanar A B X Y -> X = Y \\/ ReflectL X Y A B.",
            "VernacStartTheoremProof",
            "4530e64714846788c1c8886463a5fc8cf04da973"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (cong_cop_per2_1 A B X Y H H0 H1 H2 H3).",
            "VernacExtend",
            "f5c0ebd9ee88e576bc25ac170992bbf3a7448edd"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply is_image_is_image_spec; auto.",
            "VernacExtend",
            "a59e4cb77dd92e7f564f9994c311a4d32f7e042f"
        ],
        [
            "apply l10_4, cong_midpoint__image; trivial.",
            "VernacExtend",
            "3c44ed1d77b1db45d3a9a121a1bf2c157b897bed"
        ],
        [
            "apply per_double_cong with B; assumption.",
            "VernacExtend",
            "888f9ca055354eb6654e7c23990471af25413a63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cop_per2_gen : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> Coplanar A B X Y -> X = Y \\/ Reflect X Y A B.",
            "VernacStartTheoremProof",
            "ea44659f405117d9d465cefe35f619f3c39380c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (cong_cop_per2 A B X Y H H0 H1 H2 H3).",
            "VernacExtend",
            "b7fb2e8ae7ac403e8708e6f35ea17e942aa0e4f0"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply is_image_is_image_spec; assumption.",
            "VernacExtend",
            "a0597f7bb06d72d3c4a1ff7f6cf82250b856c192"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_perp_cop : forall A B C P, A <> B -> exists Q, Perp A B Q C /\\ Coplanar A B P Q.",
            "VernacStartTheoremProof",
            "926408f957298d909dfe0c187e38261023480137"
        ],
        [
            "intros A B C P HAB.",
            "VernacExtend",
            "51e8e0a4c65e93e301823b3002a89d312fd8e005"
        ],
        [
            "destruct (col_dec A B C) as [HCol|HNCol]; [destruct (col_dec A B P) as [|HNCol]|].",
            "VernacExtend",
            "e5ee5e986f2884186e0683421b07d7a602d12b44"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (not_col_exists A B HAB) as [P' HNCol].",
            "VernacExtend",
            "5f876b5da785bfb587b25ec48280795514cb33c5"
        ],
        [
            "destruct (l10_15 A B C P' HCol HNCol) as [Q []].",
            "VernacExtend",
            "530a75de1c902f53d3815535d45d3e7cb8a1b9fd"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "exists P; left; Col.",
            "VernacExtend",
            "560925840fd71b2502bff1345c5298109f33b7da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (l10_15 A B C P HCol HNCol) as [Q []].",
            "VernacExtend",
            "028467d38e15a77bb28bdd9477322f1e91df1252"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split; [|apply os__coplanar]; assumption.",
            "VernacExtend",
            "98dc18536ba1235bc7fe614122694a0effb17310"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (l8_18_existence A B C HNCol) as [Q []].",
            "VernacExtend",
            "42672504b8c343bfd03ef65d1a7b9dcebc97e63a"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "exists Q; left; split; Col.",
            "VernacExtend",
            "296d4b046c21f21c6f40f43fcb68d7b54acace01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hilbert_s_version_of_pasch_aux : forall A B C I P, Coplanar A B C P -> ~ Col A I P -> ~ Col B C P -> Bet B I C -> B <> I -> I <> C -> B <> C -> exists X, Col I P X /\\ ((Bet A X B /\\ A <> X /\\ X <> B /\\ A <> B) \\/ (Bet A X C /\\ A <> X /\\ X <> C /\\ A <> C)).",
            "VernacStartTheoremProof",
            "093ddba69e795aae89036dd84444896714c605e8"
        ],
        [
            "intros A B C I P HCop HNC HNC' HBet HBI HIC HBC.",
            "VernacExtend",
            "cc93bcc15f4a3af73dfd70238e78ca7528b0027a"
        ],
        [
            "assert (HTS : TS I P B C).",
            "VernacExtend",
            "19a21f5f8baf676af83af47b7be7b22daa40faf0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_cols; split; try (intro; apply HNC'; ColR).",
            "VernacExtend",
            "44bb9af5267e1b360b14b3a4ef63dd0e97a51145"
        ],
        [
            "split; try (intro; apply HNC'; ColR).",
            "VernacExtend",
            "786d4c1da6c8a3335bf60133b10833132533e0a5"
        ],
        [
            "exists I; Col.",
            "VernacExtend",
            "c602a971691e654c741df88c566348aba22a4c56"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HCop1 : Coplanar A P B I) by (assert_diffs; apply col_cop__cop with C; Cop; Col).",
            "VernacExtend",
            "9e8fe1a668f4013f2e2963c588e58baa8287a657"
        ],
        [
            "elim (two_sides_dec I P A B); intro HTS'.",
            "VernacExtend",
            "d862518c2c6060432c2ab770e085ea05e434fbc5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HTS' as [Hc1 [Hc2 [T [HCol HBet']]]].",
            "VernacExtend",
            "99bff71c84a7c93c59c8ef56e9d7860b493aa125"
        ],
        [
            "exists T; split; Col.",
            "VernacExtend",
            "fcf2ab497ebf197606ecae507fd3bec038cf9890"
        ],
        [
            "left; split; Col.",
            "VernacExtend",
            "10053895ea045e79a3b020b1f0bc7deaaad93a70"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; intro; treat_equalities; Col.",
            "VernacExtend",
            "a956e72c028f361f575103f1cecf74ebde3065aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rename HTS' into HOS.",
            "VernacExtend",
            "927d87b289bf0cf3e51b65207c828e3d11fa2d2f"
        ],
        [
            "assert (HTS' : TS I P A C).",
            "VernacExtend",
            "aac65f54669e838da1a83a84483b158cbe51badc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_8_2 with B; Col.",
            "VernacExtend",
            "6f28dca0aec1342a12994430c2ab8b7208ae240e"
        ],
        [
            "unfold TS in HTS; spliter.",
            "VernacExtend",
            "17aaf359a839485ea8f0c1bcd07f855b19595622"
        ],
        [
            "apply cop__not_two_sides_one_side; Cop.",
            "VernacExtend",
            "ff9b2de8ca045ffc6edd15ba291e37d8c58c462e"
        ],
        [
            "intro; apply HOS; apply l9_2; Col.",
            "VernacExtend",
            "635033f25d8e5132329e28007e1adfc0dea3225c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HTS' as [Hc1 [Hc2 [T [HCol HBet']]]].",
            "VernacExtend",
            "99bff71c84a7c93c59c8ef56e9d7860b493aa125"
        ],
        [
            "exists T; split; Col.",
            "VernacExtend",
            "fcf2ab497ebf197606ecae507fd3bec038cf9890"
        ],
        [
            "right; split; Col.",
            "VernacExtend",
            "a27a959f6c2771f51f47edfa8a21ad270293f635"
        ],
        [
            "split; try (intro; treat_equalities; Col).",
            "VernacExtend",
            "01b3cd8501768c8f448dff8ba87cd76831c074fa"
        ],
        [
            "split; intro; treat_equalities; Col.",
            "VernacExtend",
            "a956e72c028f361f575103f1cecf74ebde3065aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hilbert_s_version_of_pasch : forall A B C P Q, Coplanar A B C P -> ~ Col C Q P -> ~ Col A B P -> BetS A Q B -> exists X, Col P Q X /\\ (BetS A X C \\/ BetS B X C).",
            "VernacStartTheoremProof",
            "a4b1b4c184a8fb9335c63f8c62a8a06b2985dc42"
        ],
        [
            "intros A B C P Q HCop HNC1 HNC2 HAQB.",
            "VernacExtend",
            "652c653f2d2d5c784c644f20fd0e8a8646ed3ded"
        ],
        [
            "rewrite BetSEq in HAQB; spliter.",
            "VernacExtend",
            "1e4c2bdbe1b1740304e9f081d032a460056ba5ac"
        ],
        [
            "destruct (hilbert_s_version_of_pasch_aux C A B Q P) as [X [HPQX HBetS]]; Cop; try exists X; try split; Col; do 2 rewrite BetSEq; induction HBetS; spliter; repeat split; Between.",
            "VernacExtend",
            "809196b26cadc9476e3ea616d3caf1f3017d8512"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_sides_cases : forall O P A B, ~ Col O A B -> OS O P A B -> TS O A P B \\/ TS O B P A.",
            "VernacStartTheoremProof",
            "c2b2fb76281b8cbc876cb25df97933e304a7ac14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := os__coplanar O P A B H0).",
            "VernacExtend",
            "3d60499395d1c73a1141b050e2a88d5ffd743a4d"
        ],
        [
            "assert(TS O A P B \\/ OS O A P B).",
            "VernacExtend",
            "14329a7118a0f9e385c6d87dbed8696388d7ebbc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(cop__one_or_two_sides O A P B); Col.",
            "VernacExtend",
            "bfddcb0232e87d536335dd4bbffc71fb600a7821"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "unfold OS in H0.",
            "VernacExtend",
            "ce018cb2d959d9569f9294982122f962357efe7b"
        ],
        [
            "ex_and H0 R.",
            "VernacExtend",
            "ef4869d5d44af1baa03df2578354a2496e1e1613"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(TS O B P A \\/ OS O B P A).",
            "VernacExtend",
            "5d395a2205bd70f8188b3d5f333cf0304d7f9243"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(cop__one_or_two_sides O B P A); Col.",
            "VernacExtend",
            "d5f19bb1a7e63077b7acb081ec9da0fc69e148a2"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "unfold OS in H0.",
            "VernacExtend",
            "ce018cb2d959d9569f9294982122f962357efe7b"
        ],
        [
            "ex_and H0 R.",
            "VernacExtend",
            "ef4869d5d44af1baa03df2578354a2496e1e1613"
        ],
        [
            "unfold TS in H2.",
            "VernacExtend",
            "3e410e2a7590ff46a2f4cbc4c111bc47ada7eff1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS O P A B).",
            "VernacExtend",
            "11c424d9fb5a66c9041727c75b680c628ac67583"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(l9_31 O A P B); auto.",
            "VernacExtend",
            "0f07b01f5bce86144d82aeea0a91d73789db8536"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l9_9 in H3.",
            "VernacExtend",
            "8a5698751510980d398cb69041f23bc673bb3a68"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_par_two_sides : forall A B C D I, C <> D -> Col A B I -> Col C D I -> ~ Col A B C -> exists X, exists Y, Col C D X /\\ Col C D Y /\\ TS A B X Y.",
            "VernacStartTheoremProof",
            "0fa824e46e319b985a2e3287954b689f8ebbec07"
        ],
        [
            "intros A B C D I HCD HCol1 HCol2 HNC.",
            "VernacExtend",
            "a137996fc933df57aa16ee898216fe7104fa7da2"
        ],
        [
            "assert (HX : exists X, Col C D X /\\ I <> X) by (exists C; split; try intro; treat_equalities; Col).",
            "VernacExtend",
            "bc0533792a148681c649d3c8b63548b06e9ab939"
        ],
        [
            "destruct HX as [X [HCol3 HIX]].",
            "VernacExtend",
            "882fe9a8d6ccc83a16e49a596f221de74e6d310b"
        ],
        [
            "destruct (symmetric_point_construction X I) as [Y HMid].",
            "VernacExtend",
            "5349257ceb67e890dd496ac315be394dc8d8c30a"
        ],
        [
            "exists X; exists Y; assert_diffs; assert_cols; do 2 (split; try ColR).",
            "VernacExtend",
            "f6783b963f315b9395ea8a78ce61c2116131f2cd"
        ],
        [
            "split; try (intro; assert (I = X) by (assert_diffs; assert_cols; apply l6_21 with A B C D; Col); Col).",
            "VernacExtend",
            "d963da5ddddad30b4e547c44eeea05f775a2a748"
        ],
        [
            "split; try (intro; assert (I = Y) by (assert_diffs; assert_cols; apply l6_21 with A B C D; Col; ColR); Col).",
            "VernacExtend",
            "0f45974456511e83626c8ac4e2340fe5ef60c60f"
        ],
        [
            "exists I; unfold Midpoint in HMid; spliter; split; Col; Between.",
            "VernacExtend",
            "5c7cb8984ddbf596d00697968ccb9829a3e8aca8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_not_par_other_side : forall A B C D I P, C <> D -> Col A B I -> Col C D I -> ~ Col A B C -> ~ Col A B P -> Coplanar A B C P -> exists Q, Col C D Q /\\ TS A B P Q.",
            "VernacStartTheoremProof",
            "649892402fd31402aa3ade30f9fc44305190ad8f"
        ],
        [
            "intros A B C D I P HCD HCol1 HCol2 HNC1 HNC2 HCop.",
            "VernacExtend",
            "d4d56d9a0d11513eb5d2c65ac21a83edf448bc58"
        ],
        [
            "destruct (not_par_two_sides A B C D I HCD HCol1 HCol2 HNC1) as [X [Y [HCol3 [HCol4 HTS]]]].",
            "VernacExtend",
            "50c679061f228e97b8aff4630665802cb40894ae"
        ],
        [
            "assert (Coplanar A B P X).",
            "VernacExtend",
            "b5d54c5242cdb278b47fabdf60b266ed6e58fc6e"
        ],
        [
            "apply coplanar_trans_1 with C; [Col|Cop|].",
            "VernacExtend",
            "32b0e5a7002a9e536a41ba05048f113d20ef8eb1"
        ],
        [
            "exists I; right; right; split; ColR.",
            "VernacExtend",
            "5c01fee218b11bcbca4daa33259e7749206678b7"
        ],
        [
            "elim (two_sides_dec A B P X); intro HOS; [exists X; Col|].",
            "VernacExtend",
            "cc028dfed99d78c1ba69c7539ba8679cf78bde98"
        ],
        [
            "assert_diffs; apply cop__not_two_sides_one_side in HOS; Col; [|intro; unfold TS in HTS; intuition].",
            "VernacExtend",
            "6b5ef4b9c134e11c13cdffd20972328fd4619b8f"
        ],
        [
            "exists Y; split; Col.",
            "VernacExtend",
            "12b33ac546aac67f43bb9b66b58ef799aef7a60c"
        ],
        [
            "apply l9_8_2 with X; [|apply one_side_symmetry]; Col.",
            "VernacExtend",
            "68ebd97aa97f30fcd16e1347396342a30795a046"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_not_par_same_side : forall A B C D I P, C <> D -> Col A B I -> Col C D I -> ~ Col A B C -> ~ Col A B P -> Coplanar A B C P -> exists Q, Col C D Q /\\ OS A B P Q.",
            "VernacStartTheoremProof",
            "ba1894fbf1c6fe140dcf877e04c2f3c0f56e6cca"
        ],
        [
            "intros A B C D I P HCD HCol1 HCol2 HNC1 HNC2 HCop.",
            "VernacExtend",
            "d4d56d9a0d11513eb5d2c65ac21a83edf448bc58"
        ],
        [
            "destruct (not_par_two_sides A B C D I HCD HCol1 HCol2 HNC1) as [X [Y [HCol3 [HCol4 HTS]]]].",
            "VernacExtend",
            "50c679061f228e97b8aff4630665802cb40894ae"
        ],
        [
            "assert (Coplanar A B P X).",
            "VernacExtend",
            "b5d54c5242cdb278b47fabdf60b266ed6e58fc6e"
        ],
        [
            "apply coplanar_trans_1 with C; [Col|Cop|].",
            "VernacExtend",
            "32b0e5a7002a9e536a41ba05048f113d20ef8eb1"
        ],
        [
            "exists I; right; right; split; ColR.",
            "VernacExtend",
            "5c01fee218b11bcbca4daa33259e7749206678b7"
        ],
        [
            "elim (one_side_dec A B P X); intro HTS2; [exists X; Col|].",
            "VernacExtend",
            "cf35dc90c116b4eeb80fe7de3d0a05f71d7157c3"
        ],
        [
            "assert_diffs; apply cop__not_one_side_two_sides in HTS2; Col; [|intro; unfold TS in HTS; intuition].",
            "VernacExtend",
            "19e80057ba8c1a4944185647a2b8b3afba7d2e4c"
        ],
        [
            "exists Y; split; Col.",
            "VernacExtend",
            "12b33ac546aac67f43bb9b66b58ef799aef7a60c"
        ],
        [
            "exists X; split; Side.",
            "VernacExtend",
            "61c30cd637fb9b48a43d1ebffaba9dc55557e63f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T10_1.",
            "VernacEndSegment",
            "562ac75ff8438829044384a5c5d1b1c72dcd250b"
        ],
        [
            "Section T10_2D.",
            "VernacBeginSection",
            "05d9aa6af3f638605957fb6254c29cc5a7087ad4"
        ],
        [
            "Context `{T2D:Tarski_2D}.",
            "VernacContext",
            "14f267f1df37e6960d41f261868f4676668c9138"
        ],
        [
            "Lemma all_coplanar : forall A B C D, Coplanar A B C D.",
            "VernacStartTheoremProof",
            "f6a0b8ff6096531d3edf5e680ec719a8b303c082"
        ],
        [
            "apply upper_dim_implies_all_coplanar; unfold upper_dim_axiom; apply upper_dim.",
            "VernacExtend",
            "1caa7e01cde20ae7a83d15472342739cd8d9ce1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per2__col : forall A B C X, Per A X C -> X <> C -> Per B X C -> Col A B X.",
            "VernacStartTheoremProof",
            "5229ac2d150affa726504466e00813191683c1b0"
        ],
        [
            "apply upper_dim_implies_per2__col; unfold upper_dim_axiom; apply upper_dim.",
            "VernacExtend",
            "120607590a2bbcdeae95b6814acc061991f0c07b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma perp2__col : forall X Y Z A B, Perp X Y A B -> Perp X Z A B -> Col X Y Z.",
            "VernacStartTheoremProof",
            "ca317f2b47ea91e13fb1473940997747d1f00ab2"
        ],
        [
            "intros X Y Z A B.",
            "VernacExtend",
            "c79603292e2c7128ee1f688a46ed1664d1227f39"
        ],
        [
            "apply cop_perp2__col, all_coplanar.",
            "VernacExtend",
            "2ac31abd886db9541f905d47f942390879e1c65d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_on_bissect : forall A B M P X, Midpoint M A B -> Perp_at M A B P M -> Cong X A X B -> Col M P X.",
            "VernacStartTheoremProof",
            "efa4b974a7eea1a8a6ba3133392ad22d2b67c642"
        ],
        [
            "intros A B M P X.",
            "VernacExtend",
            "8c7c05667f6053c2fe2339542fd0a03d288b5258"
        ],
        [
            "apply cop__cong_on_bissect, all_coplanar.",
            "VernacExtend",
            "2af654267d07b57ee6461182f75a5a916dd0c66a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_mid_perp__col : forall A B M P X, Cong A X B X -> Midpoint M A B -> Perp A B P M -> Col M P X.",
            "VernacStartTheoremProof",
            "d3d00c82419010d3be9723814163fb590a126625"
        ],
        [
            "intros A B M P X.",
            "VernacExtend",
            "8c7c05667f6053c2fe2339542fd0a03d288b5258"
        ],
        [
            "apply cong_cop_mid_perp__col, all_coplanar.",
            "VernacExtend",
            "67f816d4b40a318615614956643b3820b1998cbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_in_col : forall A B P P' Q Q' M, ReflectL_at M P P' A B -> ReflectL_at M Q Q' A B -> Col M P Q.",
            "VernacStartTheoremProof",
            "407ddac2909f562ed1cf6e02bf51ba47e303bc82"
        ],
        [
            "intros A B P P' Q Q' M.",
            "VernacExtend",
            "9f15ac7a32f5c7b3c2300c4d5c2032c26cb23ab1"
        ],
        [
            "apply cop__image_in_col, all_coplanar.",
            "VernacExtend",
            "8f7fa2a4fdeda4b0a396cfe83793e9c2e7955563"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_image__col : forall A B P P' X, P <> P' -> Reflect P P' A B -> Cong P X P' X -> Col A B X.",
            "VernacStartTheoremProof",
            "fd280d9a5da02f7a922f18b65af3261069746da1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B P X).",
            "VernacExtend",
            "633c16fcd59f9d3fbcf7dcadfb290a720684a98a"
        ],
        [
            "apply cong_cop_image__col with P P'; assumption.",
            "VernacExtend",
            "7516818e81038a803a93f52bd57a970cc07bf4f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_per2_1 : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> X = Y \\/ Midpoint B X Y.",
            "VernacStartTheoremProof",
            "2d83a62ee0c149ace4e6e60ecaf6b377349dc914"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B X Y).",
            "VernacExtend",
            "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
        ],
        [
            "apply (cong_cop_per2_1 A); assumption.",
            "VernacExtend",
            "7a1151b3af2695bd8da1d469f6e872091301dc1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_per2 : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> X = Y \\/ ReflectL X Y A B.",
            "VernacStartTheoremProof",
            "af9a3b11cad52bb9f3181968c1ed5543c05212fa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B X Y).",
            "VernacExtend",
            "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
        ],
        [
            "apply cong_cop_per2; assumption.",
            "VernacExtend",
            "7866c0ae7ede05716769b57f3048d18b53293498"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_per2_gen : forall A B X Y, A <> B -> Per A B X -> Per A B Y -> Cong B X B Y -> X = Y \\/ Reflect X Y A B.",
            "VernacStartTheoremProof",
            "5b175cb130bd8b3995f851e5f5c5ad96cbb5e2c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B X Y).",
            "VernacExtend",
            "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
        ],
        [
            "apply cong_cop_per2_gen; assumption.",
            "VernacExtend",
            "d05575e6fcf0c948b682eaf4679606b0264019a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_two_sides_one_side : forall A B X Y, ~ Col X A B -> ~ Col Y A B -> ~ TS A B X Y -> OS A B X Y.",
            "VernacStartTheoremProof",
            "4c2b83482b3edc7663739039aceafa96a23a5978"
        ],
        [
            "intros A B X Y.",
            "VernacExtend",
            "4b36bb06db466db083b7732cba10e8efebece9c2"
        ],
        [
            "apply cop__not_two_sides_one_side, all_coplanar.",
            "VernacExtend",
            "ede026986c2a632baf576b844ffaf69e39604a1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_perp2__col : forall A B X Y P, Col A B P -> Perp A B X P -> Perp P A Y P -> Col Y X P.",
            "VernacStartTheoremProof",
            "474936dc3c41d8d8a347381c09f3e8c93cd014ce"
        ],
        [
            "apply upper_dim_implies_col_perp2__col; unfold upper_dim_axiom; apply upper_dim.",
            "VernacExtend",
            "29799eaec032d9780edb9ee462b1dd1eeaec41c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hilbert_s_version_of_pasch_2D : forall A B C P Q, ~ Col C Q P -> ~ Col A B P -> BetS A Q B -> exists X, Col P Q X /\\ (BetS A X C \\/ BetS B X C).",
            "VernacStartTheoremProof",
            "7b7f07b0ac3434bef4515e3bcf86edf61144d9a8"
        ],
        [
            "intros A B C P Q.",
            "VernacExtend",
            "97902d2de32ae58a6fdaac32ff1663a7959a7137"
        ],
        [
            "apply hilbert_s_version_of_pasch, all_coplanar.",
            "VernacExtend",
            "5670421b944a967456833ddf8f3385f53e96b43f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_one_side_two_sides : forall A B X Y, ~ Col X A B -> ~ Col Y A B -> ~ OS A B X Y -> TS A B X Y.",
            "VernacStartTheoremProof",
            "a45e345b7cc9ea8f92bb6a961f52a1a0d4444a32"
        ],
        [
            "apply upper_dim_implies_not_one_side_two_sides.",
            "VernacExtend",
            "822c95aa38d3c407bf2a20c076388717b138d8c3"
        ],
        [
            "unfold upper_dim_axiom; apply upper_dim.",
            "VernacExtend",
            "c45b985b152d01fe3c8ff4eb0dde7290f52fa4cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma one_or_two_sides : forall A B X Y, ~ Col X A B -> ~ Col Y A B -> TS A B X Y \\/ OS A B X Y.",
            "VernacStartTheoremProof",
            "a2d22c6fb358014cd82ee3fbc5bd3380d45dc1e8"
        ],
        [
            "apply upper_dim_implies_one_or_two_sides.",
            "VernacExtend",
            "873b3119781dc7139a3ef1d6c6698a66723f60a5"
        ],
        [
            "unfold upper_dim_axiom; apply upper_dim.",
            "VernacExtend",
            "c45b985b152d01fe3c8ff4eb0dde7290f52fa4cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_par_other_side : forall A B C D I P, C <> D -> Col A B I -> Col C D I -> ~ Col A B C -> ~ Col A B P -> exists Q, Col C D Q /\\ TS A B P Q.",
            "VernacStartTheoremProof",
            "c38c1ba11cf79f59281feb202a72291a0c50bb83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B C P).",
            "VernacExtend",
            "025202e19fee127c0ce0b3a276e4d7a96e7eb60f"
        ],
        [
            "apply cop_not_par_other_side with I; assumption.",
            "VernacExtend",
            "90383bb8ab8c14f6d481a3344eb5cdd601d69ed8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_par_same_side : forall A B C D I P, C <> D -> Col A B I -> Col C D I -> ~ Col A B C -> ~ Col A B P -> exists Q, Col C D Q /\\ OS A B P Q.",
            "VernacStartTheoremProof",
            "f306b56b1966796add32cf70f7acd0be74e5d7e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HCop := all_coplanar A B C P).",
            "VernacExtend",
            "025202e19fee127c0ce0b3a276e4d7a96e7eb60f"
        ],
        [
            "apply cop_not_par_same_side with I; assumption.",
            "VernacExtend",
            "5ededcabe7f8babbcfb10e7481d7b2fe23a77a33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T10_2D.",
            "VernacEndSegment",
            "6151c7ea4c51c8767a87012ff16e9e1928bbb66e"
        ],
        [
            "Hint Resolve all_coplanar : cop.",
            "VernacHints",
            "91f02d09cdac5982127236e354f2c51f6f632e79"
        ]
    ],
    "proofs": [
        {
            "name": "cop__cong_on_bissect",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(X = M \\/ ~ Col A B X /\\ Perp_at M X M A B).",
                        "VernacExtend",
                        "cb3ee79474da451869de167880427b06705c0325"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply(cong_perp_or_mid A B M X); Cong.",
                        "VernacExtend",
                        "578057bea06f49bb0c1f00f5229f1b4b3afdd86d"
                    ]
                },
                {
                    "command": [
                        "induction H3.",
                        "VernacExtend",
                        "3139d12347d024ef0d73e7a4ac9234d4e721869a"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; Col.",
                        "VernacExtend",
                        "e2a88752c5d3e641f3d6578fca426d15d650e77c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_perp in H1.",
                        "VernacExtend",
                        "ff806c83b168e604dc2a5779abe3baf80b4c0621"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_perp in H4.",
                        "VernacExtend",
                        "9921209e203db525bbe6814b47d92ffd5fac7093"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "apply(cop_perp2__col _ _ _ A B); Perp; Cop.",
                        "VernacExtend",
                        "23e001604964d0a4f9798682362e192a4e640d5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_cop_mid_perp__col",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (cop__cong_on_bissect A B); Cong.",
                        "VernacExtend",
                        "0d446789655be0268e779a4eb9a4495000d9f5e2"
                    ]
                },
                {
                    "command": [
                        "apply l8_15_1; Col.",
                        "VernacExtend",
                        "a79cf9b8a5a6c4add0bc4925badde571ec9e0317"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l10_10",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold Reflect in *.",
                        "VernacExtend",
                        "05dee4afbc185c04f344c7e8b964d45888da0061"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l7_13 with B; apply l7_2;auto.",
                        "VernacExtend",
                        "94d8cbde8487ed73ce782161af0eb0d9211b7f4d"
                    ]
                },
                {
                    "command": [
                        "apply l10_10_spec with A B;try apply is_image_is_image_spec;assumption.",
                        "VernacExtend",
                        "852b96cd8d1d84a9c95b21f24b81ae5cc77b2fb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_gen_preserves_bet",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points X Y).",
                        "VernacExtend",
                        "a5617724bd672b8e1946f681ad9e8e3455352ebf"
                    ]
                },
                {
                    "command": [
                        "subst Y.",
                        "VernacExtend",
                        "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
                    ]
                },
                {
                    "command": [
                        "apply image__midpoint in H.",
                        "VernacExtend",
                        "37ff1c117dd7903fb39ad850dfd6213219617afc"
                    ]
                },
                {
                    "command": [
                        "apply image__midpoint in H0.",
                        "VernacExtend",
                        "4eefd2608a931d34db89f8dd87fa58552331724c"
                    ]
                },
                {
                    "command": [
                        "apply image__midpoint in H1.",
                        "VernacExtend",
                        "125465de199ff3c05d13f803d5b08fd2fb901ea8"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply l7_15 with A B C X; Midpoint.",
                        "VernacExtend",
                        "41c4a93d31202e0ac31a18ea888fd8c02dda5943"
                    ]
                },
                {
                    "command": [
                        "eapply image_preserves_bet;try apply is_image_is_image_spec; eauto.",
                        "VernacExtend",
                        "4b1d8f5bcb1fa50923951433736e1a11acc4aea2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_preserves_col",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [HBet|[HBet|HBet]]; [|apply col_permutation_2|apply col_permutation_1]; apply bet_col; eapply image_preserves_bet; eauto.",
                        "VernacExtend",
                        "3ba5ff6faef0fbb97b51acad944cc2df4fe99528"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_gen_preserves_col",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [HBet|[HBet|HBet]]; [|apply col_permutation_2|apply col_permutation_1]; apply bet_col; eapply image_gen_preserves_bet; eauto.",
                        "VernacExtend",
                        "5b9570acad9725ca4b1c72c0ecbbaf925c1cd73d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_gen_preserves_ncol",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H2, image_gen_preserves_col with A' B' C' X Y; try (apply l10_4); assumption.",
                        "VernacExtend",
                        "1b16095fcb7986deb6dc4f3937d00926046954ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_gen_preserves_inter",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_6_existence X Y I) as [I0 HI0]; trivial.",
                        "VernacExtend",
                        "2addbce7b751272a470cbed8bc8518018743489d"
                    ]
                },
                {
                    "command": [
                        "assert (I' = I0); [|subst; assumption].",
                        "VernacExtend",
                        "bd053e307489716eb9a507f0d7f499f684e242a9"
                    ]
                },
                {
                    "command": [
                        "apply (l6_21 A' B' C' D'); trivial.",
                        "VernacExtend",
                        "20154a704e1240dcd36af8ac520dda41f25adce5"
                    ]
                },
                {
                    "command": [
                        "apply image_gen_preserves_ncol with A B C X Y; assumption.",
                        "VernacExtend",
                        "daa07a2f3bed3f8df6efb298890cb0241696e505"
                    ]
                },
                {
                    "command": [
                        "intro; subst D'; apply H4, l10_2_uniqueness with X Y C'; assumption.",
                        "VernacExtend",
                        "a2f8bec1a7054d3ea3887faf9f9402ba559af67c"
                    ]
                },
                {
                    "command": [
                        "apply image_gen_preserves_col with A B I X Y; assumption.",
                        "VernacExtend",
                        "7415dc3e06f80806e32a38d916f77ccf91e65c92"
                    ]
                },
                {
                    "command": [
                        "apply image_gen_preserves_col with C D I X Y; assumption.",
                        "VernacExtend",
                        "5d85bb3ede006c5ec3a0823335cab390d09ca83c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intersection_with_image_gen",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l10_8.",
                        "VernacExtend",
                        "5c20080ecd5411847b1d5e7907d872da76748dce"
                    ]
                },
                {
                    "command": [
                        "assert (Reflect A' A X Y) by (apply l10_4; assumption).",
                        "VernacExtend",
                        "4067ab6a89633f5726b334e74b624c4c376c7a3e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A' B' A) by (apply image_gen_preserves_ncol with A B A' X Y; trivial).",
                        "VernacExtend",
                        "b07bc5378cdc0fc1dc4f29765a68e276f1b6ec12"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply image_gen_preserves_inter with A B A' B' A' B' A B; trivial.",
                        "VernacExtend",
                        "f0e733e4208f521694d11026b7ad76e8a85b91ed"
                    ]
                },
                {
                    "command": [
                        "apply l10_4; assumption.",
                        "VernacExtend",
                        "e091039009a57f9da101462a479d9849fe94041a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_preserves_per",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points X Y).",
                        "VernacExtend",
                        "d0ed5bbfc7babea4e0defd462e65eeb56dae9694"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction H; induction H0; induction H1; spliter; [contradiction..|].",
                        "VernacExtend",
                        "c715406d6e814624be827d1c6b805b7e4ed4fc79"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_preserves_per with A B C X; [|apply l7_2..]; assumption.",
                        "VernacExtend",
                        "f59ba3e2c994a464cbc8d099ce8ef16523535b64"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induction H; induction H0; induction H1; spliter; [|contradiction..].",
                        "VernacExtend",
                        "73260936fecb61dd750056f1182fcd14ede3feb9"
                    ]
                },
                {
                    "command": [
                        "apply image_spec_preserves_per with A B C X Y; assumption.",
                        "VernacExtend",
                        "6ec666c9f451ac6caa38bd2dfd4f2c637bede4f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong4_cop2__eq",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HNCol; intros.",
                        "VernacExtend",
                        "de151fec1dfc40dad0fefd40ad675c0eb93578d8"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points P Q); [assumption|].",
                        "VernacExtend",
                        "16a579d23cace256abd05d9c731273eaebcd9822"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply HNCol.",
                        "VernacExtend",
                        "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall R, Col P Q R -> Cong A R B R /\\ Cong A R C R).",
                        "VernacExtend",
                        "e6c21c27812bb43c95a287c14821eb5dff4c393a"
                    ]
                },
                {
                    "command": [
                        "intros R HR; split; apply cong_commutativity, (l4_17 P Q); Cong.",
                        "VernacExtend",
                        "9d2b56d6c0a5dc75e7311126f3e1520ef95d180e"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A B) as [D].",
                        "VernacExtend",
                        "a238f0fbb1b9d223357e0444538418de4afa2f34"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HCol1 : Col P Q D).",
                        "VernacExtend",
                        "ff7e503567b4d6a675d2d506302d66589e1f42c2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B C D) by Cop.",
                        "VernacExtend",
                        "5db248e30825322435b967b5e1bf3ae6ec76a128"
                    ]
                },
                {
                    "command": [
                        "apply cong3_cop2__col with A B; Cong; apply coplanar_pseudo_trans with A B C; Cop.",
                        "VernacExtend",
                        "0200f1596f9185f07e855fca71c5d5d8d639754d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 P Q D HCol1) as [R1]; spliter.",
                        "VernacExtend",
                        "fe920b72db84663f53f8b3422511e125e733025b"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction R1 D R1 D) as [R2 []].",
                        "VernacExtend",
                        "7d9e8c8d91a82f08735f7ccb8423d4776760ea2a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q R2) by ColR.",
                        "VernacExtend",
                        "1e9b54518fbd4c66ba4571259e14bfa06b931675"
                    ]
                },
                {
                    "command": [
                        "destruct (Haux R1); trivial.",
                        "VernacExtend",
                        "fc43cd7086ae11d12ef45c0ffb5bc449c496a786"
                    ]
                },
                {
                    "command": [
                        "destruct (Haux R2); trivial.",
                        "VernacExtend",
                        "d869dcece88764f4f38a8052e9c09fe9cd6fc7a1"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A R1 A R2).",
                        "VernacExtend",
                        "0bb2d370762afdd0414889ce7a65921a893db2ed"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Per A D R1) by (apply l8_2; exists B; split; Cong).",
                        "VernacExtend",
                        "d4ffc33a36820c1c67ff4a9d3c51f1658fb19672"
                    ]
                },
                {
                    "command": [
                        "apply l10_12 with D D; Cong.",
                        "VernacExtend",
                        "d9ee705ec9e6f276eb1490ac119b81dfad8f62e9"
                    ]
                },
                {
                    "command": [
                        "apply per_col with R1; ColR.",
                        "VernacExtend",
                        "63eab9061d877642f0be6b6bcb7230e9879353b6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply cong3_cop2__col with R1 R2; auto; [apply col_cop2__cop with P Q; auto..| |].",
                        "VernacExtend",
                        "799c0a04ff0613eb7c58e5b493d7b468a2391ca7"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with A R1; [|apply cong_transitivity with A R2]; Cong.",
                        "VernacExtend",
                        "01048bad4b9be5383f32cc1deca19e04f15d4a83"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with A R1; [|apply cong_transitivity with A R2]; Cong.",
                        "VernacExtend",
                        "01048bad4b9be5383f32cc1deca19e04f15d4a83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_cop_per2_1",
            "line_nb": 694,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply l7_20.",
                        "VernacExtend",
                        "70911807aab4eb241715fb7911ea258aa583b4e2"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_5.",
                        "VernacExtend",
                        "0aa84653c2c3b2916414cec99dc2dff91560645c"
                    ]
                },
                {
                    "command": [
                        "apply (cop_per2__col A).",
                        "VernacExtend",
                        "60ea9edc5f6ebcca0f7e69fa8739af2d6d3b194a"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_cop_per2",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (cong_cop_per2_1 A B X Y H H0 H1 H2 H3).",
                        "VernacExtend",
                        "f5c0ebd9ee88e576bc25ac170992bbf3a7448edd"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply is_image_is_image_spec; auto.",
                        "VernacExtend",
                        "a59e4cb77dd92e7f564f9994c311a4d32f7e042f"
                    ]
                },
                {
                    "command": [
                        "apply l10_4, cong_midpoint__image; trivial.",
                        "VernacExtend",
                        "3c44ed1d77b1db45d3a9a121a1bf2c157b897bed"
                    ]
                },
                {
                    "command": [
                        "apply per_double_cong with B; assumption.",
                        "VernacExtend",
                        "888f9ca055354eb6654e7c23990471af25413a63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_cop_per2_gen",
            "line_nb": 716,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (cong_cop_per2 A B X Y H H0 H1 H2 H3).",
                        "VernacExtend",
                        "b7fb2e8ae7ac403e8708e6f35ea17e942aa0e4f0"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply is_image_is_image_spec; assumption.",
                        "VernacExtend",
                        "a0597f7bb06d72d3c4a1ff7f6cf82250b856c192"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_perp_cop",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "intros A B C P HAB.",
                        "VernacExtend",
                        "51e8e0a4c65e93e301823b3002a89d312fd8e005"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [HCol|HNCol]; [destruct (col_dec A B P) as [|HNCol]|].",
                        "VernacExtend",
                        "e5ee5e986f2884186e0683421b07d7a602d12b44"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (not_col_exists A B HAB) as [P' HNCol].",
                        "VernacExtend",
                        "5f876b5da785bfb587b25ec48280795514cb33c5"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A B C P' HCol HNCol) as [Q []].",
                        "VernacExtend",
                        "530a75de1c902f53d3815535d45d3e7cb8a1b9fd"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "exists P; left; Col.",
                        "VernacExtend",
                        "560925840fd71b2502bff1345c5298109f33b7da"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A B C P HCol HNCol) as [Q []].",
                        "VernacExtend",
                        "028467d38e15a77bb28bdd9477322f1e91df1252"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "split; [|apply os__coplanar]; assumption.",
                        "VernacExtend",
                        "98dc18536ba1235bc7fe614122694a0effb17310"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B C HNCol) as [Q []].",
                        "VernacExtend",
                        "42672504b8c343bfd03ef65d1a7b9dcebc97e63a"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "exists Q; left; split; Col.",
                        "VernacExtend",
                        "296d4b046c21f21c6f40f43fcb68d7b54acace01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hilbert_s_version_of_pasch_aux",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "intros A B C I P HCop HNC HNC' HBet HBI HIC HBC.",
                        "VernacExtend",
                        "cc93bcc15f4a3af73dfd70238e78ca7528b0027a"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS I P B C).",
                        "VernacExtend",
                        "19a21f5f8baf676af83af47b7be7b22daa40faf0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_cols; split; try (intro; apply HNC'; ColR).",
                        "VernacExtend",
                        "44bb9af5267e1b360b14b3a4ef63dd0e97a51145"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HNC'; ColR).",
                        "VernacExtend",
                        "786d4c1da6c8a3335bf60133b10833132533e0a5"
                    ]
                },
                {
                    "command": [
                        "exists I; Col.",
                        "VernacExtend",
                        "c602a971691e654c741df88c566348aba22a4c56"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HCop1 : Coplanar A P B I) by (assert_diffs; apply col_cop__cop with C; Cop; Col).",
                        "VernacExtend",
                        "9e8fe1a668f4013f2e2963c588e58baa8287a657"
                    ]
                },
                {
                    "command": [
                        "elim (two_sides_dec I P A B); intro HTS'.",
                        "VernacExtend",
                        "d862518c2c6060432c2ab770e085ea05e434fbc5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HTS' as [Hc1 [Hc2 [T [HCol HBet']]]].",
                        "VernacExtend",
                        "99bff71c84a7c93c59c8ef56e9d7860b493aa125"
                    ]
                },
                {
                    "command": [
                        "exists T; split; Col.",
                        "VernacExtend",
                        "fcf2ab497ebf197606ecae507fd3bec038cf9890"
                    ]
                },
                {
                    "command": [
                        "left; split; Col.",
                        "VernacExtend",
                        "10053895ea045e79a3b020b1f0bc7deaaad93a70"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "split; intro; treat_equalities; Col.",
                        "VernacExtend",
                        "a956e72c028f361f575103f1cecf74ebde3065aa"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rename HTS' into HOS.",
                        "VernacExtend",
                        "927d87b289bf0cf3e51b65207c828e3d11fa2d2f"
                    ]
                },
                {
                    "command": [
                        "assert (HTS' : TS I P A C).",
                        "VernacExtend",
                        "aac65f54669e838da1a83a84483b158cbe51badc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with B; Col.",
                        "VernacExtend",
                        "6f28dca0aec1342a12994430c2ab8b7208ae240e"
                    ]
                },
                {
                    "command": [
                        "unfold TS in HTS; spliter.",
                        "VernacExtend",
                        "17aaf359a839485ea8f0c1bcd07f855b19595622"
                    ]
                },
                {
                    "command": [
                        "apply cop__not_two_sides_one_side; Cop.",
                        "VernacExtend",
                        "ff9b2de8ca045ffc6edd15ba291e37d8c58c462e"
                    ]
                },
                {
                    "command": [
                        "intro; apply HOS; apply l9_2; Col.",
                        "VernacExtend",
                        "635033f25d8e5132329e28007e1adfc0dea3225c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HTS' as [Hc1 [Hc2 [T [HCol HBet']]]].",
                        "VernacExtend",
                        "99bff71c84a7c93c59c8ef56e9d7860b493aa125"
                    ]
                },
                {
                    "command": [
                        "exists T; split; Col.",
                        "VernacExtend",
                        "fcf2ab497ebf197606ecae507fd3bec038cf9890"
                    ]
                },
                {
                    "command": [
                        "right; split; Col.",
                        "VernacExtend",
                        "a27a959f6c2771f51f47edfa8a21ad270293f635"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "01b3cd8501768c8f448dff8ba87cd76831c074fa"
                    ]
                },
                {
                    "command": [
                        "split; intro; treat_equalities; Col.",
                        "VernacExtend",
                        "a956e72c028f361f575103f1cecf74ebde3065aa"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hilbert_s_version_of_pasch",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HCop HNC1 HNC2 HAQB.",
                        "VernacExtend",
                        "652c653f2d2d5c784c644f20fd0e8a8646ed3ded"
                    ]
                },
                {
                    "command": [
                        "rewrite BetSEq in HAQB; spliter.",
                        "VernacExtend",
                        "1e4c2bdbe1b1740304e9f081d032a460056ba5ac"
                    ]
                },
                {
                    "command": [
                        "destruct (hilbert_s_version_of_pasch_aux C A B Q P) as [X [HPQX HBetS]]; Cop; try exists X; try split; Col; do 2 rewrite BetSEq; induction HBetS; spliter; repeat split; Between.",
                        "VernacExtend",
                        "809196b26cadc9476e3ea616d3caf1f3017d8512"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_sides_cases",
            "line_nb": 781,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := os__coplanar O P A B H0).",
                        "VernacExtend",
                        "3d60499395d1c73a1141b050e2a88d5ffd743a4d"
                    ]
                },
                {
                    "command": [
                        "assert(TS O A P B \\/ OS O A P B).",
                        "VernacExtend",
                        "14329a7118a0f9e385c6d87dbed8696388d7ebbc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply(cop__one_or_two_sides O A P B); Col.",
                        "VernacExtend",
                        "bfddcb0232e87d536335dd4bbffc71fb600a7821"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "unfold OS in H0.",
                        "VernacExtend",
                        "ce018cb2d959d9569f9294982122f962357efe7b"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 R.",
                        "VernacExtend",
                        "ef4869d5d44af1baa03df2578354a2496e1e1613"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H0.",
                        "VernacExtend",
                        "16ab0ab16b317c3711db29b59d8a9efd3730be93"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assert(TS O B P A \\/ OS O B P A).",
                        "VernacExtend",
                        "5d395a2205bd70f8188b3d5f333cf0304d7f9243"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply(cop__one_or_two_sides O B P A); Col.",
                        "VernacExtend",
                        "d5f19bb1a7e63077b7acb081ec9da0fc69e148a2"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "unfold OS in H0.",
                        "VernacExtend",
                        "ce018cb2d959d9569f9294982122f962357efe7b"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 R.",
                        "VernacExtend",
                        "ef4869d5d44af1baa03df2578354a2496e1e1613"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H2.",
                        "VernacExtend",
                        "3e410e2a7590ff46a2f4cbc4c111bc47ada7eff1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(TS O P A B).",
                        "VernacExtend",
                        "11c424d9fb5a66c9041727c75b680c628ac67583"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply(l9_31 O A P B); auto.",
                        "VernacExtend",
                        "0f07b01f5bce86144d82aeea0a91d73789db8536"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H3.",
                        "VernacExtend",
                        "8a5698751510980d398cb69041f23bc673bb3a68"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_par_two_sides",
            "line_nb": 816,
            "steps": [
                {
                    "command": [
                        "intros A B C D I HCD HCol1 HCol2 HNC.",
                        "VernacExtend",
                        "a137996fc933df57aa16ee898216fe7104fa7da2"
                    ]
                },
                {
                    "command": [
                        "assert (HX : exists X, Col C D X /\\ I <> X) by (exists C; split; try intro; treat_equalities; Col).",
                        "VernacExtend",
                        "bc0533792a148681c649d3c8b63548b06e9ab939"
                    ]
                },
                {
                    "command": [
                        "destruct HX as [X [HCol3 HIX]].",
                        "VernacExtend",
                        "882fe9a8d6ccc83a16e49a596f221de74e6d310b"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction X I) as [Y HMid].",
                        "VernacExtend",
                        "5349257ceb67e890dd496ac315be394dc8d8c30a"
                    ]
                },
                {
                    "command": [
                        "exists X; exists Y; assert_diffs; assert_cols; do 2 (split; try ColR).",
                        "VernacExtend",
                        "f6783b963f315b9395ea8a78ce61c2116131f2cd"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; assert (I = X) by (assert_diffs; assert_cols; apply l6_21 with A B C D; Col); Col).",
                        "VernacExtend",
                        "d963da5ddddad30b4e547c44eeea05f775a2a748"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; assert (I = Y) by (assert_diffs; assert_cols; apply l6_21 with A B C D; Col; ColR); Col).",
                        "VernacExtend",
                        "0f45974456511e83626c8ac4e2340fe5ef60c60f"
                    ]
                },
                {
                    "command": [
                        "exists I; unfold Midpoint in HMid; spliter; split; Col; Between.",
                        "VernacExtend",
                        "5c7cb8984ddbf596d00697968ccb9829a3e8aca8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_not_par_other_side",
            "line_nb": 826,
            "steps": [
                {
                    "command": [
                        "intros A B C D I P HCD HCol1 HCol2 HNC1 HNC2 HCop.",
                        "VernacExtend",
                        "d4d56d9a0d11513eb5d2c65ac21a83edf448bc58"
                    ]
                },
                {
                    "command": [
                        "destruct (not_par_two_sides A B C D I HCD HCol1 HCol2 HNC1) as [X [Y [HCol3 [HCol4 HTS]]]].",
                        "VernacExtend",
                        "50c679061f228e97b8aff4630665802cb40894ae"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B P X).",
                        "VernacExtend",
                        "b5d54c5242cdb278b47fabdf60b266ed6e58fc6e"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with C; [Col|Cop|].",
                        "VernacExtend",
                        "32b0e5a7002a9e536a41ba05048f113d20ef8eb1"
                    ]
                },
                {
                    "command": [
                        "exists I; right; right; split; ColR.",
                        "VernacExtend",
                        "5c01fee218b11bcbca4daa33259e7749206678b7"
                    ]
                },
                {
                    "command": [
                        "elim (two_sides_dec A B P X); intro HOS; [exists X; Col|].",
                        "VernacExtend",
                        "cc028dfed99d78c1ba69c7539ba8679cf78bde98"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply cop__not_two_sides_one_side in HOS; Col; [|intro; unfold TS in HTS; intuition].",
                        "VernacExtend",
                        "6b5ef4b9c134e11c13cdffd20972328fd4619b8f"
                    ]
                },
                {
                    "command": [
                        "exists Y; split; Col.",
                        "VernacExtend",
                        "12b33ac546aac67f43bb9b66b58ef799aef7a60c"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with X; [|apply one_side_symmetry]; Col.",
                        "VernacExtend",
                        "68ebd97aa97f30fcd16e1347396342a30795a046"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_not_par_same_side",
            "line_nb": 837,
            "steps": [
                {
                    "command": [
                        "intros A B C D I P HCD HCol1 HCol2 HNC1 HNC2 HCop.",
                        "VernacExtend",
                        "d4d56d9a0d11513eb5d2c65ac21a83edf448bc58"
                    ]
                },
                {
                    "command": [
                        "destruct (not_par_two_sides A B C D I HCD HCol1 HCol2 HNC1) as [X [Y [HCol3 [HCol4 HTS]]]].",
                        "VernacExtend",
                        "50c679061f228e97b8aff4630665802cb40894ae"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B P X).",
                        "VernacExtend",
                        "b5d54c5242cdb278b47fabdf60b266ed6e58fc6e"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with C; [Col|Cop|].",
                        "VernacExtend",
                        "32b0e5a7002a9e536a41ba05048f113d20ef8eb1"
                    ]
                },
                {
                    "command": [
                        "exists I; right; right; split; ColR.",
                        "VernacExtend",
                        "5c01fee218b11bcbca4daa33259e7749206678b7"
                    ]
                },
                {
                    "command": [
                        "elim (one_side_dec A B P X); intro HTS2; [exists X; Col|].",
                        "VernacExtend",
                        "cf35dc90c116b4eeb80fe7de3d0a05f71d7157c3"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply cop__not_one_side_two_sides in HTS2; Col; [|intro; unfold TS in HTS; intuition].",
                        "VernacExtend",
                        "19e80057ba8c1a4944185647a2b8b3afba7d2e4c"
                    ]
                },
                {
                    "command": [
                        "exists Y; split; Col.",
                        "VernacExtend",
                        "12b33ac546aac67f43bb9b66b58ef799aef7a60c"
                    ]
                },
                {
                    "command": [
                        "exists X; split; Side.",
                        "VernacExtend",
                        "61c30cd637fb9b48a43d1ebffaba9dc55557e63f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_coplanar",
            "line_nb": 851,
            "steps": [
                {
                    "command": [
                        "apply upper_dim_implies_all_coplanar; unfold upper_dim_axiom; apply upper_dim.",
                        "VernacExtend",
                        "1caa7e01cde20ae7a83d15472342739cd8d9ce1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per2__col",
            "line_nb": 854,
            "steps": [
                {
                    "command": [
                        "apply upper_dim_implies_per2__col; unfold upper_dim_axiom; apply upper_dim.",
                        "VernacExtend",
                        "120607590a2bbcdeae95b6814acc061991f0c07b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "perp2__col",
            "line_nb": 857,
            "steps": [
                {
                    "command": [
                        "intros X Y Z A B.",
                        "VernacExtend",
                        "c79603292e2c7128ee1f688a46ed1664d1227f39"
                    ]
                },
                {
                    "command": [
                        "apply cop_perp2__col, all_coplanar.",
                        "VernacExtend",
                        "2ac31abd886db9541f905d47f942390879e1c65d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_on_bissect",
            "line_nb": 861,
            "steps": [
                {
                    "command": [
                        "intros A B M P X.",
                        "VernacExtend",
                        "8c7c05667f6053c2fe2339542fd0a03d288b5258"
                    ]
                },
                {
                    "command": [
                        "apply cop__cong_on_bissect, all_coplanar.",
                        "VernacExtend",
                        "2af654267d07b57ee6461182f75a5a916dd0c66a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_mid_perp__col",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros A B M P X.",
                        "VernacExtend",
                        "8c7c05667f6053c2fe2339542fd0a03d288b5258"
                    ]
                },
                {
                    "command": [
                        "apply cong_cop_mid_perp__col, all_coplanar.",
                        "VernacExtend",
                        "67f816d4b40a318615614956643b3820b1998cbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_in_col",
            "line_nb": 869,
            "steps": [
                {
                    "command": [
                        "intros A B P P' Q Q' M.",
                        "VernacExtend",
                        "9f15ac7a32f5c7b3c2300c4d5c2032c26cb23ab1"
                    ]
                },
                {
                    "command": [
                        "apply cop__image_in_col, all_coplanar.",
                        "VernacExtend",
                        "8f7fa2a4fdeda4b0a396cfe83793e9c2e7955563"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_image__col",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B P X).",
                        "VernacExtend",
                        "633c16fcd59f9d3fbcf7dcadfb290a720684a98a"
                    ]
                },
                {
                    "command": [
                        "apply cong_cop_image__col with P P'; assumption.",
                        "VernacExtend",
                        "7516818e81038a803a93f52bd57a970cc07bf4f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_per2_1",
            "line_nb": 878,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B X Y).",
                        "VernacExtend",
                        "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
                    ]
                },
                {
                    "command": [
                        "apply (cong_cop_per2_1 A); assumption.",
                        "VernacExtend",
                        "7a1151b3af2695bd8da1d469f6e872091301dc1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_per2",
            "line_nb": 883,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B X Y).",
                        "VernacExtend",
                        "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
                    ]
                },
                {
                    "command": [
                        "apply cong_cop_per2; assumption.",
                        "VernacExtend",
                        "7866c0ae7ede05716769b57f3048d18b53293498"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_per2_gen",
            "line_nb": 888,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B X Y).",
                        "VernacExtend",
                        "eef17e8cb85c06523f9a08d65c73f715c13ab3c6"
                    ]
                },
                {
                    "command": [
                        "apply cong_cop_per2_gen; assumption.",
                        "VernacExtend",
                        "d05575e6fcf0c948b682eaf4679606b0264019a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_two_sides_one_side",
            "line_nb": 893,
            "steps": [
                {
                    "command": [
                        "intros A B X Y.",
                        "VernacExtend",
                        "4b36bb06db466db083b7732cba10e8efebece9c2"
                    ]
                },
                {
                    "command": [
                        "apply cop__not_two_sides_one_side, all_coplanar.",
                        "VernacExtend",
                        "ede026986c2a632baf576b844ffaf69e39604a1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_perp2__col",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "apply upper_dim_implies_col_perp2__col; unfold upper_dim_axiom; apply upper_dim.",
                        "VernacExtend",
                        "29799eaec032d9780edb9ee462b1dd1eeaec41c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hilbert_s_version_of_pasch_2D",
            "line_nb": 900,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q.",
                        "VernacExtend",
                        "97902d2de32ae58a6fdaac32ff1663a7959a7137"
                    ]
                },
                {
                    "command": [
                        "apply hilbert_s_version_of_pasch, all_coplanar.",
                        "VernacExtend",
                        "5670421b944a967456833ddf8f3385f53e96b43f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_one_side_two_sides",
            "line_nb": 904,
            "steps": [
                {
                    "command": [
                        "apply upper_dim_implies_not_one_side_two_sides.",
                        "VernacExtend",
                        "822c95aa38d3c407bf2a20c076388717b138d8c3"
                    ]
                },
                {
                    "command": [
                        "unfold upper_dim_axiom; apply upper_dim.",
                        "VernacExtend",
                        "c45b985b152d01fe3c8ff4eb0dde7290f52fa4cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_or_two_sides",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "apply upper_dim_implies_one_or_two_sides.",
                        "VernacExtend",
                        "873b3119781dc7139a3ef1d6c6698a66723f60a5"
                    ]
                },
                {
                    "command": [
                        "unfold upper_dim_axiom; apply upper_dim.",
                        "VernacExtend",
                        "c45b985b152d01fe3c8ff4eb0dde7290f52fa4cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_par_other_side",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B C P).",
                        "VernacExtend",
                        "025202e19fee127c0ce0b3a276e4d7a96e7eb60f"
                    ]
                },
                {
                    "command": [
                        "apply cop_not_par_other_side with I; assumption.",
                        "VernacExtend",
                        "90383bb8ab8c14f6d481a3344eb5cdd601d69ed8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_par_same_side",
            "line_nb": 917,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HCop := all_coplanar A B C P).",
                        "VernacExtend",
                        "025202e19fee127c0ce0b3a276e4d7a96e7eb60f"
                    ]
                },
                {
                    "command": [
                        "apply cop_not_par_same_side with I; assumption.",
                        "VernacExtend",
                        "5ededcabe7f8babbcfb10e7481d7b2fe23a77a33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}