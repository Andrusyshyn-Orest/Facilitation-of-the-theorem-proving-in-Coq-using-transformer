{
    "filename": "Tarski_dev/Ch06_out_lines.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch05_bet_le.",
            "VernacRequire",
            "db08fcb9b97be3b343c74cd8e3600ec91de649bb"
        ],
        [
            "Ltac eCol := eauto with col.",
            "VernacExtend",
            "daaf7aee854c2ccdfb81187e3fcee75ec5214aec"
        ],
        [
            "Section T6_1.",
            "VernacBeginSection",
            "25e38cb923a1fc4b189b637d000cbe03d41c5a74"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma bet_out : forall A B C, B <> A -> Bet A B C -> Out A B C.",
            "VernacStartTheoremProof",
            "d48b95c17ee869e8a6dcb8edd7b5192fbf5c3882"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_dec : forall P A B, Out P A B \\/ ~ Out P A B.",
            "VernacStartTheoremProof",
            "ca02845d9f03993be70952bce7fe4e9b94d16110"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "elim (bet_dec P A B);intro; elim (bet_dec P B A);intro; elim (eq_dec_points A P);intro; elim (eq_dec_points B P);intro; tauto.",
            "VernacExtend",
            "5fd07f0a5492076f838af48cafe2f434b8530c2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_diff1 : forall A B C, Out A B C -> B <> A.",
            "VernacStartTheoremProof",
            "5a7167f04f58da534c0db2045ae06f1d5fe9369b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_diff2 : forall A B C, Out A B C -> C <> A.",
            "VernacStartTheoremProof",
            "5aea372cb95eafc5a4019e2bce01039317092e17"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_distinct : forall A B C, Out A B C -> B <> A /\\ C <> A.",
            "VernacStartTheoremProof",
            "04726c4119606357546e31a2aeed390e6d7dcde7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply out_diff1;eauto.",
            "VernacExtend",
            "96c148a455c1e5e75816f7179375fd0e71ca03f3"
        ],
        [
            "eapply out_diff2;eauto.",
            "VernacExtend",
            "5e5e19943fffde3f48c8106aa34746d8e88306c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_col : forall A B C, Out A B C -> Col A B C.",
            "VernacStartTheoremProof",
            "464901e14426eb0b14137422ec7f81d1b8c1ca4f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H1;Between.",
            "VernacExtend",
            "760431561c9946951f7d649a631467cc2ea83e35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_2 : forall A B C P, A<>P -> B<>P -> C<>P -> Bet A P C -> (Bet B P C <-> Out P A B).",
            "VernacStartTheoremProof",
            "7695194068bdbc6a53292f035fd057b53012dd11"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split; try assumption; eapply l5_2;eBetween.",
            "VernacExtend",
            "426c0e6b9472bdc46e44a9b4e30e4dedd243efa9"
        ],
        [
            "intro; spliter; induction H5; eBetween.",
            "VernacExtend",
            "25f0b8e8c35a41faa85c10d0a61a9b1c5f84bfe6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_out__bet : forall A B C P, Bet A P C -> Out P A B -> Bet B P C.",
            "VernacStartTheoremProof",
            "3ea602bce9c47e6056c9b871d64cffa8e9f3edfd"
        ],
        [
            "intros A B C P HBet HOut.",
            "VernacExtend",
            "baab70df5c10a9ab994cb7268e2947a922bf774e"
        ],
        [
            "destruct (eq_dec_points C P).",
            "VernacExtend",
            "3843cccfa4451391e4031f479064c72429037c2a"
        ],
        [
            "subst; Between.",
            "VernacExtend",
            "3784d4faf96ec26050052ba23e6caab368a76349"
        ],
        [
            "apply (l6_2 A); trivial; destruct HOut as [HPA [HPB]]; auto.",
            "VernacExtend",
            "7a7e9df7da12b0ae8c6870ca6bfc45d2f9484663"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_3_1 : forall A B P, Out P A B -> (A<>P /\\ B<>P /\\ exists C, C<>P /\\ Bet A P C /\\ Bet B P C).",
            "VernacStartTheoremProof",
            "1919fc6d2650dfe82d0b64143ef30682ff40c4e6"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "assert(exists C, Bet A P C /\\ P <> C) by (apply point_construction_different).",
            "VernacExtend",
            "ec0fe18c804ed71759ecfaba8f720bc464d594c3"
        ],
        [
            "ex_and H2 C.",
            "VernacExtend",
            "a5e33fe720d56488feb6169f45267ec83f5e5f06"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split; eBetween.",
            "VernacExtend",
            "251d773d796d5638e7da8743458668ab1122ea15"
        ],
        [
            "assert(exists C, Bet B P C /\\ P <> C) by (apply point_construction_different).",
            "VernacExtend",
            "2ab94adacd4b44feb7ae75987d93dfcc1b531d43"
        ],
        [
            "ex_and H2 C.",
            "VernacExtend",
            "a5e33fe720d56488feb6169f45267ec83f5e5f06"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split;eBetween.",
            "VernacExtend",
            "251d773d796d5638e7da8743458668ab1122ea15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_3_2 : forall A B P, (A<>P /\\ B<>P /\\ exists C, C<>P /\\ Bet A P C /\\ Bet B P C) -> Out P A B.",
            "VernacStartTheoremProof",
            "e3f1eb7b32520c29224d7482b03cfc77bedf1d50"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H1 C.",
            "VernacExtend",
            "02d15f3e0054c2f5f568324b446e267aa563d2b9"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption; eapply l5_2; eBetween.",
            "VernacExtend",
            "426c0e6b9472bdc46e44a9b4e30e4dedd243efa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_4_1 : forall A B P, Out P A B -> Col A P B /\\ ~ Bet A P B.",
            "VernacStartTheoremProof",
            "1517de07984c6747431422ce62bfb96151483ecf"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H1; split.",
            "VernacExtend",
            "72efa9bbc88570df2f95c7200e127f9943fead5d"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "intro; apply H; eapply between_equality;eauto.",
            "VernacExtend",
            "1e30f7853f5db6fac32941e8fff7a18a1798f3c6"
        ],
        [
            "right; left; assumption.",
            "VernacExtend",
            "9b218babeec3d27c28f2f8b4ca8c9c7cef0c4ac1"
        ],
        [
            "intro; apply H0; eapply between_equality; eBetween.",
            "VernacExtend",
            "8e955e6953c33c7a1763005a3408597525cacab0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_4_2 : forall A B P, Col A P B /\\ ~ Bet A P B -> Out P A B.",
            "VernacStartTheoremProof",
            "98339c0ea86e31cbcb6e22bd05da102eb26b016b"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction (eq_dec_points A P).",
            "VernacExtend",
            "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
        ],
        [
            "subst P; intuition.",
            "VernacExtend",
            "c1cd5ecc69b01cb74549a04c64c5923b99950056"
        ],
        [
            "induction (eq_dec_points B P).",
            "VernacExtend",
            "0f351c0f15ecd75b6c881fba0ed4e367583869b1"
        ],
        [
            "subst P; intuition.",
            "VernacExtend",
            "c1cd5ecc69b01cb74549a04c64c5923b99950056"
        ],
        [
            "induction H; repeat split; Between.",
            "VernacExtend",
            "aebb060aaef63bff4b3d6c6ae08ee7c61bf9fbf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_trivial : forall P A, A<>P -> Out P A A.",
            "VernacStartTheoremProof",
            "8129d0e202636b55068bfe7ef164fa1a739fabc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; Between.",
            "VernacExtend",
            "a5522eac2768700235e29bd7dcd33e025ecc25d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_6 : forall P A B, Out P A B -> Out P B A.",
            "VernacStartTheoremProof",
            "40ed4bc80d387e5bce6171a0a30b60e43b7bf50c"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_7 : forall P A B C, Out P A B -> Out P B C -> Out P A C.",
            "VernacStartTheoremProof",
            "73439b41499a79ac5c891aa7a1366626c95f95c8"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "induction H4; induction H2.",
            "VernacExtend",
            "c471bcbd368393d9e72eb9763a2e21d40203038e"
        ],
        [
            "left; eapply between_exchange4; eauto.",
            "VernacExtend",
            "71b63089f346090b59986bdb9882dea0defe5c61"
        ],
        [
            "eapply l5_3; eauto.",
            "VernacExtend",
            "0798728beadbccfc41c85a58cdcd3196019901b0"
        ],
        [
            "eapply (l5_1 P B); auto.",
            "VernacExtend",
            "40e3a325621dc7705dd48ebeec299894544534e5"
        ],
        [
            "right; eBetween.",
            "VernacExtend",
            "7c915af97a2fa72fbd1e415171c071fcc7331656"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_out_out_bet : forall A B C A' C', Bet A B C -> Out B A A' -> Out B C C' -> Bet A' B C'.",
            "VernacStartTheoremProof",
            "1cf66a9879b22147f96216f42a183dd911c80b24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H5; induction H3.",
            "VernacExtend",
            "d7f6ca136c336fe99e04c914619d4dcab43b7810"
        ],
        [
            "assert(Bet A' B C) by (apply outer_transitivity_between2 with A; Between).",
            "VernacExtend",
            "afeb279e291fc835d25e57f5b54d72548131bb09"
        ],
        [
            "apply outer_transitivity_between with C; auto.",
            "VernacExtend",
            "2e5622417e9f4fb102b4c4087b3f4056d9d0407e"
        ],
        [
            "assert(Bet A' B C) by (apply outer_transitivity_between2 with A; Between).",
            "VernacExtend",
            "afeb279e291fc835d25e57f5b54d72548131bb09"
        ],
        [
            "apply between_inner_transitivity with C; assumption.",
            "VernacExtend",
            "2e20ad447446602ed5fd779ef10c8890d5495a3c"
        ],
        [
            "assert(Bet A' B C) by (apply between_exchange3 with A; Between).",
            "VernacExtend",
            "adeacb63c63452602b3adae83e8f3b1f3f709e3e"
        ],
        [
            "apply outer_transitivity_between with C; auto.",
            "VernacExtend",
            "2e5622417e9f4fb102b4c4087b3f4056d9d0407e"
        ],
        [
            "assert(Bet A' B C) by (apply between_exchange3 with A; Between).",
            "VernacExtend",
            "adeacb63c63452602b3adae83e8f3b1f3f709e3e"
        ],
        [
            "eapply between_inner_transitivity with C; assumption.",
            "VernacExtend",
            "84b06ac1737b6ace4780c2a359846b8ac3350422"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out2_bet_out : forall A B C X P, Out B A C -> Out B X P -> Bet A X C -> Out B A P /\\ Out B C P.",
            "VernacStartTheoremProof",
            "37544742c6dd2db7c88fbce1526bdf1b31648a6a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H5; induction H3.",
            "VernacExtend",
            "d7f6ca136c336fe99e04c914619d4dcab43b7810"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "left; eapply between_exchange4 with X; try assumption.",
            "VernacExtend",
            "fbd9f1b009691f4667f2224e597135471f77a6e9"
        ],
        [
            "apply between_inner_transitivity with C; assumption.",
            "VernacExtend",
            "2e20ad447446602ed5fd779ef10c8890d5495a3c"
        ],
        [
            "apply l5_1 with X; try auto.",
            "VernacExtend",
            "cb1bc427925deaa735add29126d58f8503bcd381"
        ],
        [
            "apply between_exchange2 with A; assumption.",
            "VernacExtend",
            "a0c71509e343f7f866b064b101ac4a0729c5c737"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply l5_3 with X; try assumption.",
            "VernacExtend",
            "848389e36512d159789b0028e006aa6dfe901d3e"
        ],
        [
            "apply between_inner_transitivity with C; assumption.",
            "VernacExtend",
            "2e20ad447446602ed5fd779ef10c8890d5495a3c"
        ],
        [
            "right; apply between_exchange4 with X; try assumption.",
            "VernacExtend",
            "9a0ae0dbe4540891052a8edf5d7bf0fd0f011c55"
        ],
        [
            "apply between_exchange2 with A; assumption.",
            "VernacExtend",
            "a0c71509e343f7f866b064b101ac4a0729c5c737"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply l5_1 with X; try auto.",
            "VernacExtend",
            "cb1bc427925deaa735add29126d58f8503bcd381"
        ],
        [
            "apply between_exchange2 with C; Between.",
            "VernacExtend",
            "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
        ],
        [
            "left; apply between_exchange4 with X; try assumption.",
            "VernacExtend",
            "2e0b6978a455adad2fba42b4db71470f65beb048"
        ],
        [
            "apply between_inner_transitivity with A; Between.",
            "VernacExtend",
            "3ee4cfbde76214f59355a5253fd0bb5f05725236"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "right; apply between_exchange4 with X; try assumption.",
            "VernacExtend",
            "9a0ae0dbe4540891052a8edf5d7bf0fd0f011c55"
        ],
        [
            "apply between_exchange2 with C; Between.",
            "VernacExtend",
            "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
        ],
        [
            "apply l5_3 with X; try assumption.",
            "VernacExtend",
            "848389e36512d159789b0028e006aa6dfe901d3e"
        ],
        [
            "apply between_inner_transitivity with A; Between.",
            "VernacExtend",
            "3ee4cfbde76214f59355a5253fd0bb5f05725236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_11_uniqueness : forall A B C R X Y, R<>A -> B<>C -> Out A X R -> Cong A X B C -> Out A Y R -> Cong A Y B C -> X=Y.",
            "VernacStartTheoremProof",
            "4a27419c7383134fadb5db1816a10c6e83f62f47"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Cong A X A Y) by eCong.",
            "VernacExtend",
            "cfdaef5f4753e36c71a9622f3891c74abb8ba7f6"
        ],
        [
            "induction H8; induction H6.",
            "VernacExtend",
            "2feef669a9bea713e683208a7e40cf4e41fbdad7"
        ],
        [
            "apply l4_19 with A R; try assumption.",
            "VernacExtend",
            "1545681f3e22944d67781d91477c0c76ee0fd8e8"
        ],
        [
            "apply l4_3 with A A; Between; Cong.",
            "VernacExtend",
            "074b5be8f271619e932a53862030fcc1272f596f"
        ],
        [
            "assert (Bet A X Y) by eBetween.",
            "VernacExtend",
            "4dc51019a3295b4ad2b8e14cec09a48cdc19b066"
        ],
        [
            "eapply between_cong; eauto.",
            "VernacExtend",
            "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
        ],
        [
            "assert (Bet A Y X) by eBetween.",
            "VernacExtend",
            "f93f47160d587a37e2d1f9a2fbfb5870002452f5"
        ],
        [
            "apply sym_equal; apply between_cong with A; Cong.",
            "VernacExtend",
            "7112bf250c4033ab8045d13bc7b8605e44302153"
        ],
        [
            "assert (Bet A X Y \\/ Bet A Y X) by (eapply l5_1; eauto).",
            "VernacExtend",
            "7f90346068fcabbc4ab066f3a975d8551b1cf77b"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "apply between_cong with A; assumption.",
            "VernacExtend",
            "a93a31ff0833acc9c3c52a376b46c6e600b0a969"
        ],
        [
            "apply sym_equal; apply between_cong with A; Cong.",
            "VernacExtend",
            "7112bf250c4033ab8045d13bc7b8605e44302153"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_11_existence : forall A B C R, R<>A -> B<>C -> exists X, Out A X R /\\ Cong A X B C.",
            "VernacStartTheoremProof",
            "937487597fafef647fc0a9ba4888c297ec7f191f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists X : Tpoint, (Bet A R X \\/ Bet A X R) /\\ Cong A X B C) by (apply (segment_construction_2);assumption).",
            "VernacExtend",
            "ede2cdaea2632a6924da57f90d326574818fd53a"
        ],
        [
            "ex_and H1 X.",
            "VernacExtend",
            "26cf0a1b421ac14bb208422fa8c8c96a15d0092e"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Out;repeat split; try intro;treat_equalities;intuition.",
            "VernacExtend",
            "bb6603d322c79e62435b4f8f21de9e6905bb5e8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma segment_construction_3 : forall A B X Y, A <> B -> X <> Y -> exists C, Out A B C /\\ Cong A C X Y.",
            "VernacStartTheoremProof",
            "c2df84e56bb60ee03c0e41acc9d714be174deb42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (l6_11_existence A X Y B) as [C [HC1 HC2]]; auto.",
            "VernacExtend",
            "216f890f152cc59b1db1755e022bb87cb2071e1e"
        ],
        [
            "apply l6_6 in HC1.",
            "VernacExtend",
            "380671ade9dbdaa9466b184287372a1431752bbf"
        ],
        [
            "exists C; auto.",
            "VernacExtend",
            "48126f0aefc4ac65206bf65376d13661cd3fb009"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_13_1 : forall P A B, Out P A B -> Le P A P B -> Bet P A B.",
            "VernacStartTheoremProof",
            "97d4e23d805aa3384df71cd2718eaa64bc6ca1a5"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H2; try assumption.",
            "VernacExtend",
            "0c7ad4f61be2dae224beea46933a73bdfb5736e5"
        ],
        [
            "unfold Le in H0.",
            "VernacExtend",
            "1d6e1eadf40bf654009532d9a776b50be2da5b93"
        ],
        [
            "ex_and H0 Y.",
            "VernacExtend",
            "b2373bf6ec5d75c5c9ee42f491e3c29b16bf4274"
        ],
        [
            "assert(Y = A).",
            "VernacExtend",
            "9cfbc7c74b0ae3ac2cde44eab738c3b436ae1cd0"
        ],
        [
            "apply (l6_11_uniqueness P P A B); Between; Cong.",
            "VernacExtend",
            "3bc3028073cd25f5aaf3a75081bff6a1446c067a"
        ],
        [
            "unfold Out; repeat split; auto.",
            "VernacExtend",
            "36896da2c37c25053b58cac1cb0904d47cce4112"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "unfold Out; repeat split; auto.",
            "VernacExtend",
            "36896da2c37c25053b58cac1cb0904d47cce4112"
        ],
        [
            "subst Y; assumption.",
            "VernacExtend",
            "1959cf312a4e960e1ae87c21e32b3b7f53e91dd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_13_2 : forall P A B, Out P A B -> Bet P A B -> Le P A P B.",
            "VernacStartTheoremProof",
            "5a6c0dd822649b8198227f3af0206b002a97c4ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Le.",
            "VernacExtend",
            "b0e93c3e8b5b9e2c0757a2374735748dd578e05c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Cong.",
            "VernacExtend",
            "85071cd05891ec2f57d45949ae6b4f5f4266f27e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_16_1 : forall P Q S X, P<>Q -> Col S P Q -> Col X P Q -> Col X P S.",
            "VernacStartTheoremProof",
            "2bc46662d8336a3171c0da1754e532007b88de68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points S P).",
            "VernacExtend",
            "aabc3a3486515112e00b88d728b06e2938d3463c"
        ],
        [
            "subst; Col.",
            "VernacExtend",
            "ebcceb06b522e50c76934f9b4ac1ae1106b66af8"
        ],
        [
            "assert((Bet P S X \\/ Bet P X S) -> (Bet P S X \\/ Bet S X P)) by (intro; induction H3; Between).",
            "VernacExtend",
            "922337c16817bd921967f3bb5758f63168450164"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H0;induction H1.",
            "VernacExtend",
            "de03c9ed8e5ec3d506330c9c4cf6fb1925a87b61"
        ],
        [
            "right; apply H3; eapply (l5_2 Q P); Between.",
            "VernacExtend",
            "1eedd061b990cc1b5c51d70ee8e1429197d0f83a"
        ],
        [
            "induction H1; left; eBetween.",
            "VernacExtend",
            "4e78db5562a28cadf1122c9bbd93cd6b0cfb17f4"
        ],
        [
            "induction H0; left; eBetween.",
            "VernacExtend",
            "11d7788a2eeb921fdb3c5b025e97482c15033f85"
        ],
        [
            "induction H0; induction H1.",
            "VernacExtend",
            "de03c9ed8e5ec3d506330c9c4cf6fb1925a87b61"
        ],
        [
            "right; apply H3; eapply l5_1; eauto.",
            "VernacExtend",
            "ea524becdd39b367ea119251f2602e5f074ed2bc"
        ],
        [
            "right; right; eBetween.",
            "VernacExtend",
            "c95fed5ad369a0ceedc992c0d9bcff32c8bfc774"
        ],
        [
            "right; left; eBetween.",
            "VernacExtend",
            "f0342e1ac7b5238ae3fc775f5393ffa9b06f61c1"
        ],
        [
            "right; apply H3; eapply l5_3; eBetween.",
            "VernacExtend",
            "1509ea6e368f8e739e2f1ac4a231a62cc38755c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_transitivity_1 : forall P Q A B, P<>Q -> Col P Q A -> Col P Q B -> Col P A B.",
            "VernacStartTheoremProof",
            "f9166a350d83f59871518009a136a9e5be265080"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A P).",
            "VernacExtend",
            "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
        ],
        [
            "subst; unfold Col; Between.",
            "VernacExtend",
            "6e67cd18a1af3fa826db8fa3837c857bf6681a9f"
        ],
        [
            "assert (T:=l6_16_1 P Q A B).",
            "VernacExtend",
            "8075191039ccd32325839e19dfa96479e2a53a73"
        ],
        [
            "apply col_permutation_1; apply T; Col.",
            "VernacExtend",
            "433f442aba650d57aac228f004a6a7ae796c5573"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_transitivity_2 : forall P Q A B, P<>Q -> Col P Q A -> Col P Q B -> Col Q A B.",
            "VernacStartTheoremProof",
            "6f6a716813b621ff7bd8d19fb41b1081719bc6e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (col_transitivity_1 Q P A B);Col.",
            "VernacExtend",
            "77cb92e0e0fe09ce25c5c5f5ea93eaef11743924"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l6_21 : forall A B C D P Q, ~ Col A B C -> C<>D -> Col A B P -> Col A B Q -> Col C D P -> Col C D Q -> P=Q.",
            "VernacStartTheoremProof",
            "ad436db839dc41bbe6e51b67c679eabc4f79a21f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (eq_dec_points P Q); intro; try assumption.",
            "VernacExtend",
            "00a562d97e585656a337c969c19dabc4fe61f04a"
        ],
        [
            "cut False.",
            "VernacExtend",
            "47c505db0225f16433cd9eb64cf2f88d33131a5b"
        ],
        [
            "intro; intuition.",
            "VernacExtend",
            "769b1db961c2f04837fb6b20d4c465c73f699098"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Col C P Q) by (apply col_transitivity_1 with D; Col).",
            "VernacExtend",
            "97a4570ccf0bf61e8112c6c672e2747e7a495556"
        ],
        [
            "assert (Col Q B C).",
            "VernacExtend",
            "b9dc73a81629a11e34746dd240313375443ba58c"
        ],
        [
            "induction (eq_dec_points Q A).",
            "VernacExtend",
            "b286fadf26ed068f3cf7c32f464db08f1b04c306"
        ],
        [
            "subst; apply col_transitivity_1 with P; Col.",
            "VernacExtend",
            "c3959f260b9e0097624452625451296fc7a1ada8"
        ],
        [
            "apply col_transitivity_1 with P; try Col; apply col_permutation_1; apply col_transitivity_1 with A; Col.",
            "VernacExtend",
            "eea0dd0d3a882d23eff559c13d086a150ba995f6"
        ],
        [
            "assert (Col A B C).",
            "VernacExtend",
            "82d0449f5d77661ea5f55e45336758296906e1ab"
        ],
        [
            "induction (eq_dec_points Q A).",
            "VernacExtend",
            "b286fadf26ed068f3cf7c32f464db08f1b04c306"
        ],
        [
            "subst Q; assumption.",
            "VernacExtend",
            "df262bc64080f0af15907ad05ecd130901ad0449"
        ],
        [
            "induction (eq_dec_points Q B).",
            "VernacExtend",
            "f202209057c899e330782304dcafca9b7833cf19"
        ],
        [
            "subst; apply col_permutation_2; apply col_transitivity_1 with P; try Col.",
            "VernacExtend",
            "2041c3e4c6cd466333d0d8da8c282c13a5239d5c"
        ],
        [
            "apply col_permutation_2; apply col_transitivity_1 with Q; try Col.",
            "VernacExtend",
            "07628afef101d00138f36e9b61a9f59d5eec71d4"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T6_1.",
            "VernacEndSegment",
            "1aa0370c4d018066112de59601c8e7bad11789e3"
        ],
        [
            "Hint Resolve col_transitivity_1 col_transitivity_2 out_col : col.",
            "VernacHints",
            "7725d2edafc55d25103f5868ee5e499e9afd9b9e"
        ],
        [
            "Section T6_2.",
            "VernacBeginSection",
            "e4c88162f8ab6bb65301768abbe3cc50dc3683e4"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma not_col_exists : forall A B, A<>B -> exists C, ~ Col A B C.",
            "VernacStartTheoremProof",
            "6a5d711b9ee69c41746e94f7165b7f78f160d38f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=lower_dim_ex).",
            "VernacExtend",
            "ad1e752f4c95581f2d8f3efe2bd98b2e8e7caceb"
        ],
        [
            "induction T.",
            "VernacExtend",
            "467ca0bb9e64d23ac2140a512be27dc923d3e3ee"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "induction (col_dec A B x).",
            "VernacExtend",
            "e62b2f0f71d3f32f3f12057a8288096c1d6ff26b"
        ],
        [
            "induction(col_dec A B x0).",
            "VernacExtend",
            "87dcfd8d1dd858ae5cb5803bfe8bd075f3efba0f"
        ],
        [
            "induction(col_dec A B x1).",
            "VernacExtend",
            "ae63af497bdab73ef57bfdbe27872923ad38df7e"
        ],
        [
            "induction (eq_dec_points A x).",
            "VernacExtend",
            "980271a3d96f61c42b7bac8c9405e053ddb54dcc"
        ],
        [
            "assert (~(Col x x0 x1)) by (unfold Col; auto).",
            "VernacExtend",
            "cb3d5f430114f35e725c1f4238bfbef6b19ba29b"
        ],
        [
            "treat_equalities; eCol.",
            "VernacExtend",
            "ac0150b15f1b242be4c3358a2d4fe4d7cfa39a95"
        ],
        [
            "assert (Col A x x0) by eCol.",
            "VernacExtend",
            "f1cfb6bae87bf01eae4626b0bb6ae8a2598cf709"
        ],
        [
            "assert (Col A x x1) by eCol.",
            "VernacExtend",
            "155d0d7a968e4ce9a38767f01b308f7844236738"
        ],
        [
            "assert (Col A x0 x1) by eCol.",
            "VernacExtend",
            "b62d6e6f62fac612e05e800197e0409e69a75f4e"
        ],
        [
            "assert (Col x x0 x1) by eCol.",
            "VernacExtend",
            "990b4d03c2ce06d35ba9a63009bfb41f992c045b"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "exists x1; assumption.",
            "VernacExtend",
            "1f057a85a6c91a6bd85e1f7746229dfba71dce40"
        ],
        [
            "exists x0; assumption.",
            "VernacExtend",
            "62028f950f3ab64c9c0f232ea0d83466daf5aedb"
        ],
        [
            "exists x; assumption.",
            "VernacExtend",
            "8b8aee3ba47410261627c41217a70af6584fb9ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col3 : forall X Y A B C, X <> Y -> Col X Y A -> Col X Y B -> Col X Y C -> Col A B C.",
            "VernacStartTheoremProof",
            "8c5e74eaa0ab4a8c9b30693ec1cbf85a9ed3b379"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Col X A B) by (apply col_transitivity_1 with Y; assumption).",
            "VernacExtend",
            "d9e7d0f79c0755aa76d68084b91238b2194de131"
        ],
        [
            "induction(eq_dec_points C X).",
            "VernacExtend",
            "bdfe3ac12015e807bcfa5878a3828e31d4351ac6"
        ],
        [
            "subst X; apply col_permutation_1; assumption.",
            "VernacExtend",
            "7128e503967dd7839cfa0bdc68479d727bc85949"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply col_transitivity_1 with X; try assumption.",
            "VernacExtend",
            "47c3937da94807bef1157cc1ca2711aac3f5fe79"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply col_transitivity_1 with Y; assumption.",
            "VernacExtend",
            "df315dde83a8573ce187eca211500e45152a61b5"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply col_transitivity_1 with Y; assumption.",
            "VernacExtend",
            "df315dde83a8573ce187eca211500e45152a61b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma colx : forall A B C X Y, A <> B -> Col X Y A -> Col X Y B -> Col A B C -> Col X Y C.",
            "VernacStartTheoremProof",
            "3a86c193ba024467b6566e574eab8d482007f745"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points X Y).",
            "VernacExtend",
            "a5617724bd672b8e1946f681ad9e8e3455352ebf"
        ],
        [
            "subst; Col.",
            "VernacExtend",
            "ebcceb06b522e50c76934f9b4ac1ae1106b66af8"
        ],
        [
            "apply (col3 A B); auto; apply col_permutation_1.",
            "VernacExtend",
            "d195921605bf0bb3adb1d5a5fb9328d9b1e64861"
        ],
        [
            "apply col_transitivity_1 with Y; Col.",
            "VernacExtend",
            "974fd9b73b4893629416a4ea8f5f74c44730d08b"
        ],
        [
            "apply (col_transitivity_2 X); Col.",
            "VernacExtend",
            "ce6f6a914b147af87e0da078610a449dbaad26e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out2__bet : forall A B C, Out A B C -> Out C A B -> Bet A B C.",
            "VernacStartTheoremProof",
            "4fcf2f4fc6bb33d3671db6dd8213e730aca95125"
        ],
        [
            "intros A B C Hout1 Hout2.",
            "VernacExtend",
            "aed6e53ff1fbdf1f8b682f8d36e480afcdc03273"
        ],
        [
            "apply l6_4_1 in Hout2.",
            "VernacExtend",
            "963aebcc6ff7ad0e3b5ce65e5e1df4c593b1a3e6"
        ],
        [
            "destruct Hout2 as [_ Hout2].",
            "VernacExtend",
            "c6b03b176099205efa679a6ed0a10262caec7afb"
        ],
        [
            "destruct Hout1 as [_ [_ [|]]].",
            "VernacExtend",
            "140d054fd856e98c9cddcebb6b0d5d5c40f945b8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply Hout2.",
            "VernacExtend",
            "58dbe46786fe8da554b6fe8ff0d4148cdf0d1ec4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_le2__le1346 : forall A B C A' B' C', Bet A B C -> Bet A' B' C' -> Le A B A' B' -> Le B C B' C' -> Le A C A' C'.",
            "VernacStartTheoremProof",
            "e3f62825292a3ce8fb193d8400aa10f03d09232a"
        ],
        [
            "intros A B C A' B' C' HBet HBet' HleAB HleBC.",
            "VernacExtend",
            "3f8a5e811bd4fa9fae9dd5c4128d3f6a46d1a17a"
        ],
        [
            "elim(eq_dec_points A B).",
            "VernacExtend",
            "831fb4dd1e7a608ba80f1702de75d193eeaea711"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply (le_transitivity _ _ B' C'); auto.",
            "VernacExtend",
            "ed4bdba3e8916b836e38e3bfe3b23900c71c0b89"
        ],
        [
            "apply le_comm.",
            "VernacExtend",
            "565eb924e7c49364f2a3b92062cf25214cca339e"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split; Between; Cong.",
            "VernacExtend",
            "84b13e7bfb7c22f942f13ff4c2e58c3fba58eb9e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points B C).",
            "VernacExtend",
            "5aa63a265e70f9d0103084098fb9bad3a73caf66"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply (le_transitivity _ _ A' B'); auto.",
            "VernacExtend",
            "147ee9610e5063de7f20eeee9efffdb188bde160"
        ],
        [
            "exists B'; Cong.",
            "VernacExtend",
            "83a1e269593ddd07ae468621c9dfb849183d12c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(A' <> B') by (intro; subst B'; assert(A = B); auto; apply (le_zero _ _ A'); auto).",
            "VernacExtend",
            "f89162305321b1a97f27722d592cc518a0d05b6b"
        ],
        [
            "assert(B' <> C') by (intro; subst C'; assert(B = C); auto; apply (le_zero _ _ B'); auto).",
            "VernacExtend",
            "a25a7919fcf2f50c9b99339f76ec2097219ddd14"
        ],
        [
            "destruct HleAB as [B0 []].",
            "VernacExtend",
            "5a1395b73592eacba189a18ac50dd803661495d1"
        ],
        [
            "assert(A' <> B0) by (intro; subst B0; assert(A = B); auto; apply (cong_reverse_identity A'); Cong).",
            "VernacExtend",
            "e4cc71955b8484263706096360f4dd7dbe653c9f"
        ],
        [
            "assert(HC0 := segment_construction A' B0 B C).",
            "VernacExtend",
            "faf6cf5a98ca8230570b827da2b61f937a766d12"
        ],
        [
            "destruct HC0 as [C0 []].",
            "VernacExtend",
            "d0c13d86c2ae9de5d5282568c2a8fdcb5df58508"
        ],
        [
            "assert(B0 <> C0) by (intro; subst C0; assert(B = C); auto; apply (cong_reverse_identity B0); auto).",
            "VernacExtend",
            "c8a8345d61b924b6cea00e5e723e2f6dadf2b538"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "2: apply (l2_11 _ B _ _ B0); Cong.",
            "VernacExtend",
            "7c517b49fad0ca4263f2041cc2824526d5f23faf"
        ],
        [
            "apply (outer_transitivity_between2 _ B0); auto.",
            "VernacExtend",
            "893ccb8d3741f879d2145b195dde735cd70286b7"
        ],
        [
            "assert(Bet B0 B' C') by (apply between_symmetry; apply (between_inner_transitivity _ _ _ A'); Between).",
            "VernacExtend",
            "e03f56b62f2b89786e2224f44db6385dc7d131f4"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim(eq_dec_points B0 B').",
            "VernacExtend",
            "65c525d559659d818a4ce652042ed1ff849706c8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply (l6_2 _ _ A'); Between.",
            "VernacExtend",
            "d4b898f6b24b344490a934c125d6ef26777fc083"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (l6_7 _ _ B').",
            "VernacExtend",
            "2dec5dc648ecf7cfa9ff6d4053e4732cebf01e45"
        ],
        [
            "apply (l6_2 _ _ A'); Between.",
            "VernacExtend",
            "d4b898f6b24b344490a934c125d6ef26777fc083"
        ],
        [
            "apply bet_out; auto.",
            "VernacExtend",
            "76a9f58df0a142584f28da339552287cd33d82a2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (le_transitivity _ _ B' C').",
            "VernacExtend",
            "c95dbb5b92df03065e8fb9782db86a6a7bea7214"
        ],
        [
            "apply (l5_6 B C B' C'); Cong.",
            "VernacExtend",
            "26a536c7a49f68a3f34388f5f8b39da525eab9b8"
        ],
        [
            "apply le_comm.",
            "VernacExtend",
            "565eb924e7c49364f2a3b92062cf25214cca339e"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split; Between; Cong.",
            "VernacExtend",
            "84b13e7bfb7c22f942f13ff4c2e58c3fba58eb9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_le2__le2356 : forall A B C A' B' C', Bet A B C -> Bet A' B' C' -> Le A B A' B' -> Le A' C' A C -> Le B' C' B C.",
            "VernacStartTheoremProof",
            "520cc3d10fe128d74656fe41c61b43e115b4df42"
        ],
        [
            "intros A B C A' B' C' HBet HBet' HLe1 HLe2.",
            "VernacExtend",
            "c5136fb377e6f5aa113304d24d957ef8f0cafa23"
        ],
        [
            "elim(eq_dec_points A B).",
            "VernacExtend",
            "831fb4dd1e7a608ba80f1702de75d193eeaea711"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "apply (le_transitivity _ _ A' C'); auto.",
            "VernacExtend",
            "5b4ccbcddb9112e0743e037c88321feb73c0ae9c"
        ],
        [
            "destruct (l5_12_a A' B' C'); auto.",
            "VernacExtend",
            "d95dfc50aba054ab33e1a10d17690fed6edea5b0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (A<>C) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "79ea47fe9f7e8e4a1406acd32ae28b60aee157d0"
        ],
        [
            "destruct (l5_5_1 A B A' B' HLe1) as [B0 [HBet1 HCong1]].",
            "VernacExtend",
            "0b7b00f1976965a716906cfb6dab045324c18d34"
        ],
        [
            "assert (A<>B0) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "2f01d33a46712e15d1218d6d2fb16fe6b7711056"
        ],
        [
            "destruct HLe2 as [C0 [HBet2 HCong2]].",
            "VernacExtend",
            "ba80012d3d50b1a1b4d41f5fc30b58fcad953487"
        ],
        [
            "assert (A<>C0) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "09fb54efe6b87c69a4f405ebae90e9019f75a723"
        ],
        [
            "assert (Bet A B0 C0).",
            "VernacExtend",
            "30268016ca4647a6a8526af2af52481e11a65028"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "apply (l6_7 _ _ B); [|apply (l6_7 _ _ C)]; [apply l6_6| |apply l6_6]; apply bet_out; auto.",
            "VernacExtend",
            "bbafa8b4866cb9fffd0bd4ac075a30a85bfb74a7"
        ],
        [
            "apply (l5_6 A' B' A' C'); Cong.",
            "VernacExtend",
            "a39484af171bc72e6201032e719f173dbaf4656e"
        ],
        [
            "destruct (l5_12_a A' B' C'); auto.",
            "VernacExtend",
            "d95dfc50aba054ab33e1a10d17690fed6edea5b0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (l5_6 B0 C0 B C); Cong; [apply (le_transitivity _ _ B C0)|].",
            "VernacExtend",
            "e0f3908602e7f80f3d0e943d04c3c2fba2ce2a9e"
        ],
        [
            "destruct (l5_12_a B B0 C0); eBetween.",
            "VernacExtend",
            "c14114e66242bba4011cfef9b89c1995e4a66a21"
        ],
        [
            "destruct (l5_12_a B C0 C); eBetween.",
            "VernacExtend",
            "9c9e9473d30307b6affea168bc661984ae61406b"
        ],
        [
            "apply cong_commutativity; apply (l4_3 _ _ A _ _ A'); Between; Cong.",
            "VernacExtend",
            "63a62254fc911c113926b422ee93eed2fd6e2326"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_le2__le1245 : forall A B C A' B' C', Bet A B C -> Bet A' B' C' -> Le B C B' C' -> Le A' C' A C -> Le A' B' A B.",
            "VernacStartTheoremProof",
            "99760bac92c2f119f5c219e067d75a41055805d5"
        ],
        [
            "intros A B C A' B' C'; intros.",
            "VernacExtend",
            "51d8bb6037463527defe7bef1b049bb4e216b150"
        ],
        [
            "apply le_comm.",
            "VernacExtend",
            "565eb924e7c49364f2a3b92062cf25214cca339e"
        ],
        [
            "apply (bet2_le2__le2356 C _ _ C'); Le; Between.",
            "VernacExtend",
            "9224625fe3bb4853fefe8948f06bcab6064823c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_preserves_bet : forall B A' A0 E D' D0, Bet B A' A0 -> Cong B A' E D' -> Cong B A0 E D0 -> Out E D' D0 -> Bet E D' D0.",
            "VernacStartTheoremProof",
            "dbbab496c6a938b0743ff5f2b5e20d4c01690798"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H2.",
            "VernacExtend",
            "35c4f0050aa47624c81da3f00ae589138adf5c40"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Le E D0 E D').",
            "VernacExtend",
            "d2b2b28f6daecdc9a6f8c949de9032ce7126e43c"
        ],
        [
            "eapply l5_5_2.",
            "VernacExtend",
            "19673faba38de2fe2a956ff0381b653d65231dd8"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Le E D' E D0).",
            "VernacExtend",
            "81ac11b2a67c525295f3a27110234cb3968f310c"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "2:apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "2:apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "eapply l5_5_2.",
            "VernacExtend",
            "19673faba38de2fe2a956ff0381b653d65231dd8"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Cong E D' E D0).",
            "VernacExtend",
            "60f8ccebd6439f04cdf46a23059a055858080824"
        ],
        [
            "apply le_anti_symmetry.",
            "VernacExtend",
            "5ac3c734023a202dbb1b95ab1cfbbb59c43b5610"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(D0 = D').",
            "VernacExtend",
            "f8df1d6aa23bb26b9d7089aa2b7a047bb182ff73"
        ],
        [
            "eapply between_cong.",
            "VernacExtend",
            "466a959df8ae6c40fb89d6d29d85db8ff18e5c31"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_cong_cong : forall B A A0 E D D0, Out B A A0 -> Out E D D0 -> Cong B A E D -> Cong B A0 E D0 -> Cong A A0 D D0.",
            "VernacStartTheoremProof",
            "616c13539d9db5f8723832946ccebf2f41b5a578"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "assert (Bet E D D0).",
            "VernacExtend",
            "ebf1493bce79bce41a73417652b0e300c3afb683"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2:apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "2:apply H2.",
            "VernacExtend",
            "9588a0701c01ca043af7c1806458664f85491ded"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert (Bet E D0 D).",
            "VernacExtend",
            "557077a6b82caa53144a09ebfbe27a570ee61815"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2:apply H2.",
            "VernacExtend",
            "9588a0701c01ca043af7c1806458664f85491ded"
        ],
        [
            "2:apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_3;eBetween;Cong.",
            "VernacExtend",
            "400db3a536bde46d726cd4b2678cb47e4f1f34cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_out_bet : forall A B C, Col A B C -> ~ Out B A C -> Bet A B C.",
            "VernacStartTheoremProof",
            "a09c7f7f485705cef42391d895944021fc818df8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "unfold Col in *.",
            "VernacExtend",
            "b8dcb059e766a010119f4520b6c91219bda87c65"
        ],
        [
            "decompose [or] H;clear H.",
            "VernacExtend",
            "f7fbbca16028654502a72ab32e09258e584d5a2c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_bet_out : forall A B C, Bet A B C \\/ Out B A C \\/ ~Col A B C.",
            "VernacStartTheoremProof",
            "1c2bd0c052b46f9a15b71078ab050d1d2274aa60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (col_dec A B C); auto.",
            "VernacExtend",
            "de4edecd4be8c27adbc310e99c45d8bde627399c"
        ],
        [
            "destruct (out_dec B A C); auto.",
            "VernacExtend",
            "7dc6f8dd43eca36732421fa5c25cb14c2ca57574"
        ],
        [
            "left; apply not_out_bet; trivial.",
            "VernacExtend",
            "9cc72f45b67bd158259d06ff60cba65a26b6c783"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_bet_out : forall A B C, Col A B C -> ~Bet A B C -> Out B A C.",
            "VernacStartTheoremProof",
            "9773e4bee472419b8c0c1bdefe2a648d69acd04c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (or_bet_out A B C) as [HBet|[HOut|HNCol]]; trivial; contradiction.",
            "VernacExtend",
            "f10e981abcce8ad8d844c76260749b45c4fc422f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_bet_and_out : forall A B C, ~ (Bet A B C /\\ Out B A C).",
            "VernacStartTheoremProof",
            "802bc43b0625727e86bc2dad42a27a7544a78e0a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "assert ( A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_to_bet : forall A B C A' B' C', Col A' B' C' -> (Out B A C <-> Out B' A' C') -> Bet A B C -> Bet A' B' C'.",
            "VernacStartTheoremProof",
            "1cd34797d7373302213c08add010798cba14d63f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(out_dec B A C).",
            "VernacExtend",
            "35a4f8aed37b990f3c420e70fa75bb6c7232c441"
        ],
        [
            "unfold Out in H2.",
            "VernacExtend",
            "35c4f0050aa47624c81da3f00ae589138adf5c40"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "assert( A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "apply(between_symmetry) in H4.",
            "VernacExtend",
            "4dfe8c8c0a81ade9bbcbb28c93111c8298489bf9"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "assert (~Out B' A' C').",
            "VernacExtend",
            "ce481b9eb4281e5768cd8a127a04ee11607b24d7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_out_bet.",
            "VernacExtend",
            "4d81867de2ff7dda5537b3e192c5c1f4976503a8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_out2_col : forall A B C AA CC, Col A B C -> Out B A AA -> Out B C CC -> Col AA B CC.",
            "VernacStartTheoremProof",
            "0c88beab660cf33e09652562f2ee8ff1e61f94b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Bet AA B CC).",
            "VernacExtend",
            "4db94e108146b6dde3502df5ecf4ee655b674555"
        ],
        [
            "eapply bet_out_out_bet.",
            "VernacExtend",
            "70b433d509e04191b74a782e9c5b401cdb2c8119"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert(Out B AA CC).",
            "VernacExtend",
            "b08cb6261e48d13362688e1a52a066238aaa2457"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B AA CC).",
            "VernacExtend",
            "b08cb6261e48d13362688e1a52a066238aaa2457"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_out_out : forall A B C B' C', B <> A -> B' <> A -> Out A C C' -> Bet A B C -> Bet A B' C' -> Out A B B'.",
            "VernacStartTheoremProof",
            "36a90a44c2850259ddb4b9088c4d2fbfff77446f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points B' C').",
            "VernacExtend",
            "467618a9dad99e59caacb803cf89a24af6f34900"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "assert(Bet A B C').",
            "VernacExtend",
            "77d24e8e6e250ef992ad1ced3977612edf03e710"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B' C' C).",
            "VernacExtend",
            "cedc82434caf2c4deaa495d621b4fee53fb14aa7"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B' C).",
            "VernacExtend",
            "12c756e6b9faeb7a6ee6f9eae718d1ae15bffee0"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2__out : forall A B C B', A <> B -> A <> B' -> Bet A B C -> Bet A B' C -> Out A B B'.",
            "VernacStartTheoremProof",
            "8dd5533375420e6551e3ea2cf6eb514f24708338"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bet2_out_out with C C; auto.",
            "VernacExtend",
            "cdcc65931ac21b5cfe02fff0c83c6af0019678dc"
        ],
        [
            "apply bet_neq12__neq in H1; auto.",
            "VernacExtend",
            "949f0180ee5f7dceed54ff1ba913ff44ed986763"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out2_out_1 : forall B C D X, Out B X C -> Out B X D -> Out B C D.",
            "VernacStartTheoremProof",
            "940be8c89b895dd8b5edcea51c77ef57c2ffbe3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H2; induction H4.",
            "VernacExtend",
            "7ea86dffb1826095b1d18b16d2eefb31a767cc70"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out2_out_2 : forall B C D X, Out B C X -> Out B D X -> Out B C D.",
            "VernacStartTheoremProof",
            "069906ccc8e86b4dfe5b3b7fe00a98b6a8e92c6c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply out2_out_1.",
            "VernacExtend",
            "d8655ac901461309cc17e1cdc056b8cb48bb28cc"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_bet_out_1 : forall A B C P, Out P A C -> Bet A B C -> Out P A B.",
            "VernacStartTheoremProof",
            "69d2c351085c5cd60b9a2898d3a90f2b0eaf5343"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points B P).",
            "VernacExtend",
            "0f351c0f15ecd75b6c881fba0ed4e367583869b1"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply (not_bet_and_out A B C).",
            "VernacExtend",
            "d7de017568d8468f1f68bb982527a26f642a726c"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_bet_out_2 : forall A B C P, Out P A C -> Bet A B C -> Out P B C.",
            "VernacStartTheoremProof",
            "162f74e0c5e66be6808a687ba30cd462d6d11639"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "eapply out_bet_out_1.",
            "VernacExtend",
            "3545285b056f9846c0ebf8b68569b3176b80b12c"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_bet__out : forall A B P Q, Bet P Q A -> Out Q A B -> Out P A B.",
            "VernacStartTheoremProof",
            "dc08a716e6f263fbc6c0dc53bdda8749d7495742"
        ],
        [
            "intros A B P Q HBet Hout.",
            "VernacExtend",
            "02c3b44dee83acb33ae13496886947497080ad27"
        ],
        [
            "destruct Hout as [HAQ [HBQ [HQAB|HQBA]]]; [|apply l6_6]; apply bet_out; eBetween; intro; treat_equalities; auto.",
            "VernacExtend",
            "bf9a1b0ed0f017feca80991c7d522f143fdfd7af"
        ],
        [
            "apply HBQ; apply (between_equality _ _ A); Between.",
            "VernacExtend",
            "b8fb98c2057a3115fb5dcaf924efd226a91f87d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma segment_reverse : forall A B C, Bet A B C -> exists B', Bet A B' C /\\ Cong C B' A B.",
            "VernacStartTheoremProof",
            "0c25b36b1045687fbe85bca09b1549011cdfea21"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "subst B; exists C; finish.",
            "VernacExtend",
            "0183afd0d02c1a366db19f58d5be7ad442e14b9e"
        ],
        [
            "destruct (segment_construction_3 C A A B) as [B' []]; auto.",
            "VernacExtend",
            "14ed461ded60cd8ac0b337110e01585d1bb5285d"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "exists B'; split; trivial.",
            "VernacExtend",
            "8c91830a66dc0c8b7b2c9b319094e8407a517674"
        ],
        [
            "apply between_symmetry, (cong_preserves_bet A B C); Cong.",
            "VernacExtend",
            "599102d2552c8ca40db331239430845919fad201"
        ],
        [
            "apply l6_6; assumption.",
            "VernacExtend",
            "0a186f9809d34f05cdf72ba5a654787b5207fa09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_col_ex : forall A B, exists C, A <> C /\\ B <> C /\\ Col A B C.",
            "VernacStartTheoremProof",
            "9305a6d54f962621aa29f4aa4f85b0693ee63363"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists C, Bet A B C /\\ B <> C).",
            "VernacExtend",
            "79b59abac24a79c5e0343d5fb6c9ed51cc45d732"
        ],
        [
            "apply point_construction_different.",
            "VernacExtend",
            "de967b1eea8e153d0cc2188f5304bd3338d458d8"
        ],
        [
            "ex_and H C.",
            "VernacExtend",
            "65cb0c649677e580014a6be0e1757c4b0670bdd8"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_bet_ex3 : forall A B C, Bet A B C -> exists D, A <> D /\\ B <> D /\\ C <> D /\\ Col A B D.",
            "VernacStartTheoremProof",
            "c76fefa222dc0f43073174797451d2cac8baa381"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "assert (exists D, Bet B C D /\\ C <> D).",
            "VernacExtend",
            "98bc58d426bbaf30d92c279879b25173897d61bd"
        ],
        [
            "apply point_construction_different.",
            "VernacExtend",
            "de967b1eea8e153d0cc2188f5304bd3338d458d8"
        ],
        [
            "ex_and H2 D.",
            "VernacExtend",
            "96f95a8a02d343d21e85433c0dd1b126c29ec2c4"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (exists D, Bet B C D /\\ C <> D).",
            "VernacExtend",
            "98bc58d426bbaf30d92c279879b25173897d61bd"
        ],
        [
            "apply point_construction_different.",
            "VernacExtend",
            "de967b1eea8e153d0cc2188f5304bd3338d458d8"
        ],
        [
            "ex_and H2 D.",
            "VernacExtend",
            "96f95a8a02d343d21e85433c0dd1b126c29ec2c4"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_symmetry in H.",
            "VernacExtend",
            "821a722cedc227274fcd5fd78190bd17d086d4a4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply between_identity in H2.",
            "VernacExtend",
            "7d110d1d338105b9976ea0d396d4a498f037f767"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "cut(exists D : Tpoint, A <> D /\\ B <> D /\\ Col A B D).",
            "VernacExtend",
            "dfbfcd02c029a70b6ccea7d9cdbb1a831b911a9f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "ex_and H1 D.",
            "VernacExtend",
            "ca2f0a188a884eba1bb139ad4a136dc4dd7f2bb7"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply diff_col_ex.",
            "VernacExtend",
            "af460cbcb48a4f42eee4949ebfd0a1f4c9d01d0b"
        ],
        [
            "assert (exists D, Bet B C D /\\ C <> D).",
            "VernacExtend",
            "98bc58d426bbaf30d92c279879b25173897d61bd"
        ],
        [
            "apply point_construction_different.",
            "VernacExtend",
            "de967b1eea8e153d0cc2188f5304bd3338d458d8"
        ],
        [
            "ex_and H2 D.",
            "VernacExtend",
            "96f95a8a02d343d21e85433c0dd1b126c29ec2c4"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert (B = C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_identity in H2.",
            "VernacExtend",
            "7d110d1d338105b9976ea0d396d4a498f037f767"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_col_ex3 : forall A B C, Col A B C -> exists D, A <> D /\\ B <> D /\\ C <> D /\\ Col A B D.",
            "VernacStartTheoremProof",
            "26666f7809a928aea3d38a65c8607f2d404900d4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(cas1 := diff_bet_ex3 A B C).",
            "VernacExtend",
            "3c8388c148fd0837e32f137968d99a4bb2509ab7"
        ],
        [
            "assert(cas2 := diff_bet_ex3 B C A).",
            "VernacExtend",
            "e004ee0b686582fa969797445d906c04a9920732"
        ],
        [
            "assert(cas3 := diff_bet_ex3 C A B).",
            "VernacExtend",
            "adc8ab8b6725c272561bae379a9f787426bb6a11"
        ],
        [
            "unfold Col in H.",
            "VernacExtend",
            "4ff59ad823bef04ef5effb01a66f0264e5dd36d6"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply (diff_bet_ex3 A B C).",
            "VernacExtend",
            "a7ed072e5e9e86f7cb32bf07b4cd3e9e13a6cc14"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert (exists C, A <> C /\\ B <> C /\\ Col A B C).",
            "VernacExtend",
            "3b9f8d0a66d83d06d0e6fbf3133155094cab4640"
        ],
        [
            "apply (diff_col_ex).",
            "VernacExtend",
            "af460cbcb48a4f42eee4949ebfd0a1f4c9d01d0b"
        ],
        [
            "ex_and H0 D.",
            "VernacExtend",
            "4e92077db15da6b417f209e093ee5f7cf2543672"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "apply cas2 in HH.",
            "VernacExtend",
            "3c01b46bde015853f37583ac643e340209fb71b5"
        ],
        [
            "ex_and HH D.",
            "VernacExtend",
            "86a69b5bfd755a71283d6abf9c58acfddd50434e"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction (eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert (exists C, A <> C /\\ B <> C /\\ Col A B C).",
            "VernacExtend",
            "3b9f8d0a66d83d06d0e6fbf3133155094cab4640"
        ],
        [
            "apply (diff_col_ex).",
            "VernacExtend",
            "af460cbcb48a4f42eee4949ebfd0a1f4c9d01d0b"
        ],
        [
            "ex_and H0 D.",
            "VernacExtend",
            "4e92077db15da6b417f209e093ee5f7cf2543672"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "assert (HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply cas3 in HH.",
            "VernacExtend",
            "c765ea0f1175d2214f7971fb038b2b34839e85b7"
        ],
        [
            "ex_and HH D.",
            "VernacExtend",
            "86a69b5bfd755a71283d6abf9c58acfddd50434e"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T6_2.",
            "VernacEndSegment",
            "c12a995a7e7bb7c08f8b2c97fbe1d10fbd5ffd2d"
        ],
        [
            "Hint Resolve bet_out out_trivial l6_6 : out.",
            "VernacHints",
            "3123632b1fdf47dcabcb748ef6d097ac442bc733"
        ]
    ],
    "proofs": [
        {
            "name": "bet_out",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_dec",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "elim (bet_dec P A B);intro; elim (bet_dec P B A);intro; elim (eq_dec_points A P);intro; elim (eq_dec_points B P);intro; tauto.",
                        "VernacExtend",
                        "5fd07f0a5492076f838af48cafe2f434b8530c2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_diff1",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H.",
                        "VernacExtend",
                        "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_diff2",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H.",
                        "VernacExtend",
                        "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_distinct",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply out_diff1;eauto.",
                        "VernacExtend",
                        "96c148a455c1e5e75816f7179375fd0e71ca03f3"
                    ]
                },
                {
                    "command": [
                        "eapply out_diff2;eauto.",
                        "VernacExtend",
                        "5e5e19943fffde3f48c8106aa34746d8e88306c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_col",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H.",
                        "VernacExtend",
                        "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H1;Between.",
                        "VernacExtend",
                        "760431561c9946951f7d649a631467cc2ea83e35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_2",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption; eapply l5_2;eBetween.",
                        "VernacExtend",
                        "426c0e6b9472bdc46e44a9b4e30e4dedd243efa9"
                    ]
                },
                {
                    "command": [
                        "intro; spliter; induction H5; eBetween.",
                        "VernacExtend",
                        "25f0b8e8c35a41faa85c10d0a61a9b1c5f84bfe6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_out__bet",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros A B C P HBet HOut.",
                        "VernacExtend",
                        "baab70df5c10a9ab994cb7268e2947a922bf774e"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points C P).",
                        "VernacExtend",
                        "3843cccfa4451391e4031f479064c72429037c2a"
                    ]
                },
                {
                    "command": [
                        "subst; Between.",
                        "VernacExtend",
                        "3784d4faf96ec26050052ba23e6caab368a76349"
                    ]
                },
                {
                    "command": [
                        "apply (l6_2 A); trivial; destruct HOut as [HPA [HPB]]; auto.",
                        "VernacExtend",
                        "7a7e9df7da12b0ae8c6870ca6bfc45d2f9484663"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_3_1",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "assert(exists C, Bet A P C /\\ P <> C) by (apply point_construction_different).",
                        "VernacExtend",
                        "ec0fe18c804ed71759ecfaba8f720bc464d594c3"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 C.",
                        "VernacExtend",
                        "a5e33fe720d56488feb6169f45267ec83f5e5f06"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "repeat split; eBetween.",
                        "VernacExtend",
                        "251d773d796d5638e7da8743458668ab1122ea15"
                    ]
                },
                {
                    "command": [
                        "assert(exists C, Bet B P C /\\ P <> C) by (apply point_construction_different).",
                        "VernacExtend",
                        "2ab94adacd4b44feb7ae75987d93dfcc1b531d43"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 C.",
                        "VernacExtend",
                        "a5e33fe720d56488feb6169f45267ec83f5e5f06"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "repeat split;eBetween.",
                        "VernacExtend",
                        "251d773d796d5638e7da8743458668ab1122ea15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_3_2",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 C.",
                        "VernacExtend",
                        "02d15f3e0054c2f5f568324b446e267aa563d2b9"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption; eapply l5_2; eBetween.",
                        "VernacExtend",
                        "426c0e6b9472bdc46e44a9b4e30e4dedd243efa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_4_1",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "induction H1; split.",
                        "VernacExtend",
                        "72efa9bbc88570df2f95c7200e127f9943fead5d"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "intro; apply H; eapply between_equality;eauto.",
                        "VernacExtend",
                        "1e30f7853f5db6fac32941e8fff7a18a1798f3c6"
                    ]
                },
                {
                    "command": [
                        "right; left; assumption.",
                        "VernacExtend",
                        "9b218babeec3d27c28f2f8b4ca8c9c7cef0c4ac1"
                    ]
                },
                {
                    "command": [
                        "intro; apply H0; eapply between_equality; eBetween.",
                        "VernacExtend",
                        "8e955e6953c33c7a1763005a3408597525cacab0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_4_2",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A P).",
                        "VernacExtend",
                        "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
                    ]
                },
                {
                    "command": [
                        "subst P; intuition.",
                        "VernacExtend",
                        "c1cd5ecc69b01cb74549a04c64c5923b99950056"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points B P).",
                        "VernacExtend",
                        "0f351c0f15ecd75b6c881fba0ed4e367583869b1"
                    ]
                },
                {
                    "command": [
                        "subst P; intuition.",
                        "VernacExtend",
                        "c1cd5ecc69b01cb74549a04c64c5923b99950056"
                    ]
                },
                {
                    "command": [
                        "induction H; repeat split; Between.",
                        "VernacExtend",
                        "aebb060aaef63bff4b3d6c6ae08ee7c61bf9fbf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_trivial",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "repeat split; Between.",
                        "VernacExtend",
                        "a5522eac2768700235e29bd7dcd33e025ecc25d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_6",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_7",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "induction H4; induction H2.",
                        "VernacExtend",
                        "c471bcbd368393d9e72eb9763a2e21d40203038e"
                    ]
                },
                {
                    "command": [
                        "left; eapply between_exchange4; eauto.",
                        "VernacExtend",
                        "71b63089f346090b59986bdb9882dea0defe5c61"
                    ]
                },
                {
                    "command": [
                        "eapply l5_3; eauto.",
                        "VernacExtend",
                        "0798728beadbccfc41c85a58cdcd3196019901b0"
                    ]
                },
                {
                    "command": [
                        "eapply (l5_1 P B); auto.",
                        "VernacExtend",
                        "40e3a325621dc7705dd48ebeec299894544534e5"
                    ]
                },
                {
                    "command": [
                        "right; eBetween.",
                        "VernacExtend",
                        "7c915af97a2fa72fbd1e415171c071fcc7331656"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_out_out_bet",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in *.",
                        "VernacExtend",
                        "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H5; induction H3.",
                        "VernacExtend",
                        "d7f6ca136c336fe99e04c914619d4dcab43b7810"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A' B C) by (apply outer_transitivity_between2 with A; Between).",
                        "VernacExtend",
                        "afeb279e291fc835d25e57f5b54d72548131bb09"
                    ]
                },
                {
                    "command": [
                        "apply outer_transitivity_between with C; auto.",
                        "VernacExtend",
                        "2e5622417e9f4fb102b4c4087b3f4056d9d0407e"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A' B C) by (apply outer_transitivity_between2 with A; Between).",
                        "VernacExtend",
                        "afeb279e291fc835d25e57f5b54d72548131bb09"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with C; assumption.",
                        "VernacExtend",
                        "2e20ad447446602ed5fd779ef10c8890d5495a3c"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A' B C) by (apply between_exchange3 with A; Between).",
                        "VernacExtend",
                        "adeacb63c63452602b3adae83e8f3b1f3f709e3e"
                    ]
                },
                {
                    "command": [
                        "apply outer_transitivity_between with C; auto.",
                        "VernacExtend",
                        "2e5622417e9f4fb102b4c4087b3f4056d9d0407e"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A' B C) by (apply between_exchange3 with A; Between).",
                        "VernacExtend",
                        "adeacb63c63452602b3adae83e8f3b1f3f709e3e"
                    ]
                },
                {
                    "command": [
                        "eapply between_inner_transitivity with C; assumption.",
                        "VernacExtend",
                        "84b06ac1737b6ace4780c2a359846b8ac3350422"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out2_bet_out",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in *.",
                        "VernacExtend",
                        "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H5; induction H3.",
                        "VernacExtend",
                        "d7f6ca136c336fe99e04c914619d4dcab43b7810"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "left; eapply between_exchange4 with X; try assumption.",
                        "VernacExtend",
                        "fbd9f1b009691f4667f2224e597135471f77a6e9"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with C; assumption.",
                        "VernacExtend",
                        "2e20ad447446602ed5fd779ef10c8890d5495a3c"
                    ]
                },
                {
                    "command": [
                        "apply l5_1 with X; try auto.",
                        "VernacExtend",
                        "cb1bc427925deaa735add29126d58f8503bcd381"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange2 with A; assumption.",
                        "VernacExtend",
                        "a0c71509e343f7f866b064b101ac4a0729c5c737"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "apply l5_3 with X; try assumption.",
                        "VernacExtend",
                        "848389e36512d159789b0028e006aa6dfe901d3e"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with C; assumption.",
                        "VernacExtend",
                        "2e20ad447446602ed5fd779ef10c8890d5495a3c"
                    ]
                },
                {
                    "command": [
                        "right; apply between_exchange4 with X; try assumption.",
                        "VernacExtend",
                        "9a0ae0dbe4540891052a8edf5d7bf0fd0f011c55"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange2 with A; assumption.",
                        "VernacExtend",
                        "a0c71509e343f7f866b064b101ac4a0729c5c737"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "apply l5_1 with X; try auto.",
                        "VernacExtend",
                        "cb1bc427925deaa735add29126d58f8503bcd381"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange2 with C; Between.",
                        "VernacExtend",
                        "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
                    ]
                },
                {
                    "command": [
                        "left; apply between_exchange4 with X; try assumption.",
                        "VernacExtend",
                        "2e0b6978a455adad2fba42b4db71470f65beb048"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with A; Between.",
                        "VernacExtend",
                        "3ee4cfbde76214f59355a5253fd0bb5f05725236"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "right; apply between_exchange4 with X; try assumption.",
                        "VernacExtend",
                        "9a0ae0dbe4540891052a8edf5d7bf0fd0f011c55"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange2 with C; Between.",
                        "VernacExtend",
                        "e93d9f24f7ec93db7f6cafe597cfa59d14c379b2"
                    ]
                },
                {
                    "command": [
                        "apply l5_3 with X; try assumption.",
                        "VernacExtend",
                        "848389e36512d159789b0028e006aa6dfe901d3e"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with A; Between.",
                        "VernacExtend",
                        "3ee4cfbde76214f59355a5253fd0bb5f05725236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_11_uniqueness",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A X A Y) by eCong.",
                        "VernacExtend",
                        "cfdaef5f4753e36c71a9622f3891c74abb8ba7f6"
                    ]
                },
                {
                    "command": [
                        "induction H8; induction H6.",
                        "VernacExtend",
                        "2feef669a9bea713e683208a7e40cf4e41fbdad7"
                    ]
                },
                {
                    "command": [
                        "apply l4_19 with A R; try assumption.",
                        "VernacExtend",
                        "1545681f3e22944d67781d91477c0c76ee0fd8e8"
                    ]
                },
                {
                    "command": [
                        "apply l4_3 with A A; Between; Cong.",
                        "VernacExtend",
                        "074b5be8f271619e932a53862030fcc1272f596f"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A X Y) by eBetween.",
                        "VernacExtend",
                        "4dc51019a3295b4ad2b8e14cec09a48cdc19b066"
                    ]
                },
                {
                    "command": [
                        "eapply between_cong; eauto.",
                        "VernacExtend",
                        "33c62dab589a9159b4a87dce16fffedab3e1fdc2"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A Y X) by eBetween.",
                        "VernacExtend",
                        "f93f47160d587a37e2d1f9a2fbfb5870002452f5"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply between_cong with A; Cong.",
                        "VernacExtend",
                        "7112bf250c4033ab8045d13bc7b8605e44302153"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A X Y \\/ Bet A Y X) by (eapply l5_1; eauto).",
                        "VernacExtend",
                        "7f90346068fcabbc4ab066f3a975d8551b1cf77b"
                    ]
                },
                {
                    "command": [
                        "induction H10.",
                        "VernacExtend",
                        "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
                    ]
                },
                {
                    "command": [
                        "apply between_cong with A; assumption.",
                        "VernacExtend",
                        "a93a31ff0833acc9c3c52a376b46c6e600b0a969"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply between_cong with A; Cong.",
                        "VernacExtend",
                        "7112bf250c4033ab8045d13bc7b8605e44302153"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_11_existence",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists X : Tpoint, (Bet A R X \\/ Bet A X R) /\\ Cong A X B C) by (apply (segment_construction_2);assumption).",
                        "VernacExtend",
                        "ede2cdaea2632a6924da57f90d326574818fd53a"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 X.",
                        "VernacExtend",
                        "26cf0a1b421ac14bb208422fa8c8c96a15d0092e"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "unfold Out;repeat split; try intro;treat_equalities;intuition.",
                        "VernacExtend",
                        "bb6603d322c79e62435b4f8f21de9e6905bb5e8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "segment_construction_3",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence A X Y B) as [C [HC1 HC2]]; auto.",
                        "VernacExtend",
                        "216f890f152cc59b1db1755e022bb87cb2071e1e"
                    ]
                },
                {
                    "command": [
                        "apply l6_6 in HC1.",
                        "VernacExtend",
                        "380671ade9dbdaa9466b184287372a1431752bbf"
                    ]
                },
                {
                    "command": [
                        "exists C; auto.",
                        "VernacExtend",
                        "48126f0aefc4ac65206bf65376d13661cd3fb009"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_13_1",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H2; try assumption.",
                        "VernacExtend",
                        "0c7ad4f61be2dae224beea46933a73bdfb5736e5"
                    ]
                },
                {
                    "command": [
                        "unfold Le in H0.",
                        "VernacExtend",
                        "1d6e1eadf40bf654009532d9a776b50be2da5b93"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 Y.",
                        "VernacExtend",
                        "b2373bf6ec5d75c5c9ee42f491e3c29b16bf4274"
                    ]
                },
                {
                    "command": [
                        "assert(Y = A).",
                        "VernacExtend",
                        "9cfbc7c74b0ae3ac2cde44eab738c3b436ae1cd0"
                    ]
                },
                {
                    "command": [
                        "apply (l6_11_uniqueness P P A B); Between; Cong.",
                        "VernacExtend",
                        "3bc3028073cd25f5aaf3a75081bff6a1446c067a"
                    ]
                },
                {
                    "command": [
                        "unfold Out; repeat split; auto.",
                        "VernacExtend",
                        "36896da2c37c25053b58cac1cb0904d47cce4112"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "unfold Out; repeat split; auto.",
                        "VernacExtend",
                        "36896da2c37c25053b58cac1cb0904d47cce4112"
                    ]
                },
                {
                    "command": [
                        "subst Y; assumption.",
                        "VernacExtend",
                        "1959cf312a4e960e1ae87c21e32b3b7f53e91dd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_13_2",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Le.",
                        "VernacExtend",
                        "b0e93c3e8b5b9e2c0757a2374735748dd578e05c"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split; Cong.",
                        "VernacExtend",
                        "85071cd05891ec2f57d45949ae6b4f5f4266f27e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_16_1",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points S P).",
                        "VernacExtend",
                        "aabc3a3486515112e00b88d728b06e2938d3463c"
                    ]
                },
                {
                    "command": [
                        "subst; Col.",
                        "VernacExtend",
                        "ebcceb06b522e50c76934f9b4ac1ae1106b66af8"
                    ]
                },
                {
                    "command": [
                        "assert((Bet P S X \\/ Bet P X S) -> (Bet P S X \\/ Bet S X P)) by (intro; induction H3; Between).",
                        "VernacExtend",
                        "922337c16817bd921967f3bb5758f63168450164"
                    ]
                },
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "induction H0;induction H1.",
                        "VernacExtend",
                        "de03c9ed8e5ec3d506330c9c4cf6fb1925a87b61"
                    ]
                },
                {
                    "command": [
                        "right; apply H3; eapply (l5_2 Q P); Between.",
                        "VernacExtend",
                        "1eedd061b990cc1b5c51d70ee8e1429197d0f83a"
                    ]
                },
                {
                    "command": [
                        "induction H1; left; eBetween.",
                        "VernacExtend",
                        "4e78db5562a28cadf1122c9bbd93cd6b0cfb17f4"
                    ]
                },
                {
                    "command": [
                        "induction H0; left; eBetween.",
                        "VernacExtend",
                        "11d7788a2eeb921fdb3c5b025e97482c15033f85"
                    ]
                },
                {
                    "command": [
                        "induction H0; induction H1.",
                        "VernacExtend",
                        "de03c9ed8e5ec3d506330c9c4cf6fb1925a87b61"
                    ]
                },
                {
                    "command": [
                        "right; apply H3; eapply l5_1; eauto.",
                        "VernacExtend",
                        "ea524becdd39b367ea119251f2602e5f074ed2bc"
                    ]
                },
                {
                    "command": [
                        "right; right; eBetween.",
                        "VernacExtend",
                        "c95fed5ad369a0ceedc992c0d9bcff32c8bfc774"
                    ]
                },
                {
                    "command": [
                        "right; left; eBetween.",
                        "VernacExtend",
                        "f0342e1ac7b5238ae3fc775f5393ffa9b06f61c1"
                    ]
                },
                {
                    "command": [
                        "right; apply H3; eapply l5_3; eBetween.",
                        "VernacExtend",
                        "1509ea6e368f8e739e2f1ac4a231a62cc38755c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_transitivity_1",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A P).",
                        "VernacExtend",
                        "96fcc79d7b1142f15cba43cf1dd3d55c0b1321bb"
                    ]
                },
                {
                    "command": [
                        "subst; unfold Col; Between.",
                        "VernacExtend",
                        "6e67cd18a1af3fa826db8fa3837c857bf6681a9f"
                    ]
                },
                {
                    "command": [
                        "assert (T:=l6_16_1 P Q A B).",
                        "VernacExtend",
                        "8075191039ccd32325839e19dfa96479e2a53a73"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1; apply T; Col.",
                        "VernacExtend",
                        "433f442aba650d57aac228f004a6a7ae796c5573"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_transitivity_2",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (col_transitivity_1 Q P A B);Col.",
                        "VernacExtend",
                        "77cb92e0e0fe09ce25c5c5f5ea93eaef11743924"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l6_21",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points P Q); intro; try assumption.",
                        "VernacExtend",
                        "00a562d97e585656a337c969c19dabc4fe61f04a"
                    ]
                },
                {
                    "command": [
                        "cut False.",
                        "VernacExtend",
                        "47c505db0225f16433cd9eb64cf2f88d33131a5b"
                    ]
                },
                {
                    "command": [
                        "intro; intuition.",
                        "VernacExtend",
                        "769b1db961c2f04837fb6b20d4c465c73f699098"
                    ]
                },
                {
                    "command": [
                        "apply not_col_distincts in H.",
                        "VernacExtend",
                        "96597e4344645954050953e1c3c06af05f730923"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Col C P Q) by (apply col_transitivity_1 with D; Col).",
                        "VernacExtend",
                        "97a4570ccf0bf61e8112c6c672e2747e7a495556"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q B C).",
                        "VernacExtend",
                        "b9dc73a81629a11e34746dd240313375443ba58c"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points Q A).",
                        "VernacExtend",
                        "b286fadf26ed068f3cf7c32f464db08f1b04c306"
                    ]
                },
                {
                    "command": [
                        "subst; apply col_transitivity_1 with P; Col.",
                        "VernacExtend",
                        "c3959f260b9e0097624452625451296fc7a1ada8"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with P; try Col; apply col_permutation_1; apply col_transitivity_1 with A; Col.",
                        "VernacExtend",
                        "eea0dd0d3a882d23eff559c13d086a150ba995f6"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B C).",
                        "VernacExtend",
                        "82d0449f5d77661ea5f55e45336758296906e1ab"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points Q A).",
                        "VernacExtend",
                        "b286fadf26ed068f3cf7c32f464db08f1b04c306"
                    ]
                },
                {
                    "command": [
                        "subst Q; assumption.",
                        "VernacExtend",
                        "df262bc64080f0af15907ad05ecd130901ad0449"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points Q B).",
                        "VernacExtend",
                        "f202209057c899e330782304dcafca9b7833cf19"
                    ]
                },
                {
                    "command": [
                        "subst; apply col_permutation_2; apply col_transitivity_1 with P; try Col.",
                        "VernacExtend",
                        "2041c3e4c6cd466333d0d8da8c282c13a5239d5c"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2; apply col_transitivity_1 with Q; try Col.",
                        "VernacExtend",
                        "07628afef101d00138f36e9b61a9f59d5eec71d4"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_col_exists",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T:=lower_dim_ex).",
                        "VernacExtend",
                        "ad1e752f4c95581f2d8f3efe2bd98b2e8e7caceb"
                    ]
                },
                {
                    "command": [
                        "induction T.",
                        "VernacExtend",
                        "467ca0bb9e64d23ac2140a512be27dc923d3e3ee"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A B x).",
                        "VernacExtend",
                        "e62b2f0f71d3f32f3f12057a8288096c1d6ff26b"
                    ]
                },
                {
                    "command": [
                        "induction(col_dec A B x0).",
                        "VernacExtend",
                        "87dcfd8d1dd858ae5cb5803bfe8bd075f3efba0f"
                    ]
                },
                {
                    "command": [
                        "induction(col_dec A B x1).",
                        "VernacExtend",
                        "ae63af497bdab73ef57bfdbe27872923ad38df7e"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A x).",
                        "VernacExtend",
                        "980271a3d96f61c42b7bac8c9405e053ddb54dcc"
                    ]
                },
                {
                    "command": [
                        "assert (~(Col x x0 x1)) by (unfold Col; auto).",
                        "VernacExtend",
                        "cb3d5f430114f35e725c1f4238bfbef6b19ba29b"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; eCol.",
                        "VernacExtend",
                        "ac0150b15f1b242be4c3358a2d4fe4d7cfa39a95"
                    ]
                },
                {
                    "command": [
                        "assert (Col A x x0) by eCol.",
                        "VernacExtend",
                        "f1cfb6bae87bf01eae4626b0bb6ae8a2598cf709"
                    ]
                },
                {
                    "command": [
                        "assert (Col A x x1) by eCol.",
                        "VernacExtend",
                        "155d0d7a968e4ce9a38767f01b308f7844236738"
                    ]
                },
                {
                    "command": [
                        "assert (Col A x0 x1) by eCol.",
                        "VernacExtend",
                        "b62d6e6f62fac612e05e800197e0409e69a75f4e"
                    ]
                },
                {
                    "command": [
                        "assert (Col x x0 x1) by eCol.",
                        "VernacExtend",
                        "990b4d03c2ce06d35ba9a63009bfb41f992c045b"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "exists x1; assumption.",
                        "VernacExtend",
                        "1f057a85a6c91a6bd85e1f7746229dfba71dce40"
                    ]
                },
                {
                    "command": [
                        "exists x0; assumption.",
                        "VernacExtend",
                        "62028f950f3ab64c9c0f232ea0d83466daf5aedb"
                    ]
                },
                {
                    "command": [
                        "exists x; assumption.",
                        "VernacExtend",
                        "8b8aee3ba47410261627c41217a70af6584fb9ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col3",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Col X A B) by (apply col_transitivity_1 with Y; assumption).",
                        "VernacExtend",
                        "d9e7d0f79c0755aa76d68084b91238b2194de131"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points C X).",
                        "VernacExtend",
                        "bdfe3ac12015e807bcfa5878a3828e31d4351ac6"
                    ]
                },
                {
                    "command": [
                        "subst X; apply col_permutation_1; assumption.",
                        "VernacExtend",
                        "7128e503967dd7839cfa0bdc68479d727bc85949"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1.",
                        "VernacExtend",
                        "14e18c0fd9f924050c674020d62e1f21b605c996"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with X; try assumption.",
                        "VernacExtend",
                        "47c3937da94807bef1157cc1ca2711aac3f5fe79"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with Y; assumption.",
                        "VernacExtend",
                        "df315dde83a8573ce187eca211500e45152a61b5"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with Y; assumption.",
                        "VernacExtend",
                        "df315dde83a8573ce187eca211500e45152a61b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colx",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points X Y).",
                        "VernacExtend",
                        "a5617724bd672b8e1946f681ad9e8e3455352ebf"
                    ]
                },
                {
                    "command": [
                        "subst; Col.",
                        "VernacExtend",
                        "ebcceb06b522e50c76934f9b4ac1ae1106b66af8"
                    ]
                },
                {
                    "command": [
                        "apply (col3 A B); auto; apply col_permutation_1.",
                        "VernacExtend",
                        "d195921605bf0bb3adb1d5a5fb9328d9b1e64861"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with Y; Col.",
                        "VernacExtend",
                        "974fd9b73b4893629416a4ea8f5f74c44730d08b"
                    ]
                },
                {
                    "command": [
                        "apply (col_transitivity_2 X); Col.",
                        "VernacExtend",
                        "ce6f6a914b147af87e0da078610a449dbaad26e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out2__bet",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros A B C Hout1 Hout2.",
                        "VernacExtend",
                        "aed6e53ff1fbdf1f8b682f8d36e480afcdc03273"
                    ]
                },
                {
                    "command": [
                        "apply l6_4_1 in Hout2.",
                        "VernacExtend",
                        "963aebcc6ff7ad0e3b5ce65e5e1df4c593b1a3e6"
                    ]
                },
                {
                    "command": [
                        "destruct Hout2 as [_ Hout2].",
                        "VernacExtend",
                        "c6b03b176099205efa679a6ed0a10262caec7afb"
                    ]
                },
                {
                    "command": [
                        "destruct Hout1 as [_ [_ [|]]].",
                        "VernacExtend",
                        "140d054fd856e98c9cddcebb6b0d5d5c40f945b8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply Hout2.",
                        "VernacExtend",
                        "58dbe46786fe8da554b6fe8ff0d4148cdf0d1ec4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet2_le2__le2356",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' HBet HBet' HLe1 HLe2.",
                        "VernacExtend",
                        "c5136fb377e6f5aa113304d24d957ef8f0cafa23"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A B).",
                        "VernacExtend",
                        "831fb4dd1e7a608ba80f1702de75d193eeaea711"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "apply (le_transitivity _ _ A' C'); auto.",
                        "VernacExtend",
                        "5b4ccbcddb9112e0743e037c88321feb73c0ae9c"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a A' B' C'); auto.",
                        "VernacExtend",
                        "d95dfc50aba054ab33e1a10d17690fed6edea5b0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (A<>C) by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "79ea47fe9f7e8e4a1406acd32ae28b60aee157d0"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_5_1 A B A' B' HLe1) as [B0 [HBet1 HCong1]].",
                        "VernacExtend",
                        "0b7b00f1976965a716906cfb6dab045324c18d34"
                    ]
                },
                {
                    "command": [
                        "assert (A<>B0) by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "2f01d33a46712e15d1218d6d2fb16fe6b7711056"
                    ]
                },
                {
                    "command": [
                        "destruct HLe2 as [C0 [HBet2 HCong2]].",
                        "VernacExtend",
                        "ba80012d3d50b1a1b4d41f5fc30b58fcad953487"
                    ]
                },
                {
                    "command": [
                        "assert (A<>C0) by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "09fb54efe6b87c69a4f405ebae90e9019f75a723"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A B0 C0).",
                        "VernacExtend",
                        "30268016ca4647a6a8526af2af52481e11a65028"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1.",
                        "VernacExtend",
                        "f187cdac6d235e831042e03fa45429cf965f0b0d"
                    ]
                },
                {
                    "command": [
                        "apply (l6_7 _ _ B); [|apply (l6_7 _ _ C)]; [apply l6_6| |apply l6_6]; apply bet_out; auto.",
                        "VernacExtend",
                        "bbafa8b4866cb9fffd0bd4ac075a30a85bfb74a7"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 A' B' A' C'); Cong.",
                        "VernacExtend",
                        "a39484af171bc72e6201032e719f173dbaf4656e"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a A' B' C'); auto.",
                        "VernacExtend",
                        "d95dfc50aba054ab33e1a10d17690fed6edea5b0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 B0 C0 B C); Cong; [apply (le_transitivity _ _ B C0)|].",
                        "VernacExtend",
                        "e0f3908602e7f80f3d0e943d04c3c2fba2ce2a9e"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a B B0 C0); eBetween.",
                        "VernacExtend",
                        "c14114e66242bba4011cfef9b89c1995e4a66a21"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a B C0 C); eBetween.",
                        "VernacExtend",
                        "9c9e9473d30307b6affea168bc661984ae61406b"
                    ]
                },
                {
                    "command": [
                        "apply cong_commutativity; apply (l4_3 _ _ A _ _ A'); Between; Cong.",
                        "VernacExtend",
                        "63a62254fc911c113926b422ee93eed2fd6e2326"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet2_le2__le1245",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C'; intros.",
                        "VernacExtend",
                        "51d8bb6037463527defe7bef1b049bb4e216b150"
                    ]
                },
                {
                    "command": [
                        "apply le_comm.",
                        "VernacExtend",
                        "565eb924e7c49364f2a3b92062cf25214cca339e"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le2356 C _ _ C'); Le; Between.",
                        "VernacExtend",
                        "9224625fe3bb4853fefe8948f06bcab6064823c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_out_bet",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H0.",
                        "VernacExtend",
                        "7082b3e136a063dbe84dc2c4fe8234d250a53969"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points B C).",
                        "VernacExtend",
                        "5a5afdeceafc19c18a920ee30f3166fbe576500d"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "unfold Col in *.",
                        "VernacExtend",
                        "b8dcb059e766a010119f4520b6c91219bda87c65"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H;clear H.",
                        "VernacExtend",
                        "f7fbbca16028654502a72ab32e09258e584d5a2c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_bet_out",
            "line_nb": 474,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C); auto.",
                        "VernacExtend",
                        "de4edecd4be8c27adbc310e99c45d8bde627399c"
                    ]
                },
                {
                    "command": [
                        "destruct (out_dec B A C); auto.",
                        "VernacExtend",
                        "7dc6f8dd43eca36732421fa5c25cb14c2ca57574"
                    ]
                },
                {
                    "command": [
                        "left; apply not_out_bet; trivial.",
                        "VernacExtend",
                        "9cc72f45b67bd158259d06ff60cba65a26b6c783"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_bet_out",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (or_bet_out A B C) as [HBet|[HOut|HNCol]]; trivial; contradiction.",
                        "VernacExtend",
                        "f10e981abcce8ad8d844c76260749b45c4fc422f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet2__out",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bet2_out_out with C C; auto.",
                        "VernacExtend",
                        "cdcc65931ac21b5cfe02fff0c83c6af0019678dc"
                    ]
                },
                {
                    "command": [
                        "apply bet_neq12__neq in H1; auto.",
                        "VernacExtend",
                        "949f0180ee5f7dceed54ff1ba913ff44ed986763"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_bet__out",
            "line_nb": 694,
            "steps": [
                {
                    "command": [
                        "intros A B P Q HBet Hout.",
                        "VernacExtend",
                        "02c3b44dee83acb33ae13496886947497080ad27"
                    ]
                },
                {
                    "command": [
                        "destruct Hout as [HAQ [HBQ [HQAB|HQBA]]]; [|apply l6_6]; apply bet_out; eBetween; intro; treat_equalities; auto.",
                        "VernacExtend",
                        "bf9a1b0ed0f017feca80991c7d522f143fdfd7af"
                    ]
                },
                {
                    "command": [
                        "apply HBQ; apply (between_equality _ _ A); Between.",
                        "VernacExtend",
                        "b8fb98c2057a3115fb5dcaf924efd226a91f87d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "segment_reverse",
            "line_nb": 699,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "subst B; exists C; finish.",
                        "VernacExtend",
                        "0183afd0d02c1a366db19f58d5be7ad442e14b9e"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction_3 C A A B) as [B' []]; auto.",
                        "VernacExtend",
                        "14ed461ded60cd8ac0b337110e01585d1bb5285d"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "exists B'; split; trivial.",
                        "VernacExtend",
                        "8c91830a66dc0c8b7b2c9b319094e8407a517674"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, (cong_preserves_bet A B C); Cong.",
                        "VernacExtend",
                        "599102d2552c8ca40db331239430845919fad201"
                    ]
                },
                {
                    "command": [
                        "apply l6_6; assumption.",
                        "VernacExtend",
                        "0a186f9809d34f05cdf72ba5a654787b5207fa09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_col_ex",
            "line_nb": 709,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists C, Bet A B C /\\ B <> C).",
                        "VernacExtend",
                        "79b59abac24a79c5e0343d5fb6c9ed51cc45d732"
                    ]
                },
                {
                    "command": [
                        "apply point_construction_different.",
                        "VernacExtend",
                        "de967b1eea8e153d0cc2188f5304bd3338d458d8"
                    ]
                },
                {
                    "command": [
                        "ex_and H C.",
                        "VernacExtend",
                        "65cb0c649677e580014a6be0e1757c4b0670bdd8"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "assert_cols.",
                        "VernacExtend",
                        "031d7df0508efc81572acb10c507042760b719fa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}