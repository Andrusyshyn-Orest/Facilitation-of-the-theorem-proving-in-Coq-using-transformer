{
    "filename": "Tarski_dev/Ch11_angles.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch10_line_reflexivity_2.",
            "VernacRequire",
            "d54a06b0003363c63505edc21dd4facccfd9460c"
        ],
        [
            "Ltac permut := match goal with |H : (Col ?X ?Y ?Z) |- Col ?X ?Y ?Z => assumption |H : (Col ?X ?Y ?Z) |- Col ?Y ?Z ?X => apply col_permutation_1; assumption |H : (Col ?X ?Y ?Z) |- Col ?Z ?X ?Y => apply col_permutation_2; assumption |H : (Col ?X ?Y ?Z) |- Col ?X ?Z ?Y => apply col_permutation_5; assumption |H : (Col ?X ?Y ?Z) |- Col ?Y ?X ?Z => apply col_permutation_4; assumption |H : (Col ?X ?Y ?Z) |- Col ?Z ?Y ?X => apply col_permutation_3; assumption |_ : _ |- _ => idtac end.",
            "VernacExtend",
            "dd419a5926f68d98c122d9dedc7c2efcc746b7d3"
        ],
        [
            "Ltac bet := match goal with |H0 : Bet ?A ?B ?C |- Bet ?A ?B ?C => assumption |H0 : Bet ?A ?B ?C, H1 : Bet ?B ?C ?D , H : ?B <> ?C |- Bet ?A ?B ?D => apply (outer_transitivity_between _ _ _ _ H0 H1 H) |H0 : Bet ?A ?B ?C, H1 : Bet ?B ?C ?D , H : ?B <> ?C |- Bet ?A ?C ?D => apply (outer_transitivity_between2 _ _ _ _ H0 H1 H) |H0 : Bet ?A ?B ?D, H1 : Bet ?B ?C ?D |- Bet ?A ?B ?C => apply (between_inner_transitivity _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C, H1 : Bet ?A ?C ?D |- Bet ?B ?C ?D => apply (between_exchange3 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?D, H1 : Bet ?B ?C ?D |- Bet ?A ?C ?D => apply (between_exchange2 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C, H1 : Bet ?A ?C ?D |- Bet ?A ?B ?D => apply (between_exchange4 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C |- Bet ?A ?B ?C => assumption |H0 : Bet ?A ?B ?C, H1 : Bet ?B ?C ?D , H : ?B <> ?C |- Bet ?D ?B ?A => apply between_symmetry; apply (outer_transitivity_between _ _ _ _ H0 H1 H) |H0 : Bet ?A ?B ?C, H1 : Bet ?B ?C ?D , H : ?B <> ?C |- Bet ?D ?C ?A => apply (outer_transitivity_between2 _ _ _ _ H0 H1 H) |H0 : Bet ?A ?B ?D, H1 : Bet ?B ?C ?D |- Bet ?C ?B ?A => apply between_symmetry; apply (between_inner_transitivity _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C, H1 : Bet ?A ?C ?D |- Bet ?D ?C ?B => apply between_symmetry; apply (between_exchange3 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?D, H1 : Bet ?B ?C ?D |- Bet ?D ?C ?A => apply between_symmetry; apply (between_exchange2 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C, H1 : Bet ?A ?C ?D |- Bet ?D ?B ?A => apply between_symmetry; apply (between_exchange4 _ _ _ _ H0 H1) |H0 : Bet ?A ?B ?C |- Bet ?C ?B ?A => apply (between_symmetry _ _ _ H0) |H0 : Bet ?A ?B ?C |- Bet ?C ?B ?A => apply (between_symmetry _ _ _ H0) |_ : _ |- Bet ?A ?B ?B => apply between_trivial |_ : _ |- Bet ?A ?A ?B => apply between_trivial2 |_ : _ |- _ => idtac end.",
            "VernacExtend",
            "ec320603c6bcf0355a14c89309c05eb9a03600c3"
        ],
        [
            "Ltac cong := match goal with |_ : Cong ?A ?B ?C ?BD |- Cong ?A ?B ?C ?D => assumption |_ : _ |- Cong ?A ?B ?A ?B => apply cong_reflexivity |_ : _ |- Cong ?A ?A ?B ?B => apply cong_trivial_identity |H0 : Cong ?A ?B ?C ?D |- Cong ?A ?B ?C ?C => assumption |H0 : Cong ?A ?B ?C ?D |- Cong ?A ?B ?D ?C => apply (cong_right_commutativity _ _ _ _ H0) |H0 : Cong ?A ?B ?C ?D |- Cong ?B ?A ?D ?C => apply (cong_commutativity _ _ _ _ H0) |H0 : Cong ?A ?B ?C ?D |- Cong ?B ?A ?C ?D => apply (cong_left_commutativity _ _ _ _ H0) |H0 : Cong ?A ?B ?C ?D |- Cong ?C ?D ?A ?B => apply (cong_symmetry _ _ _ _ H0) |H0 : Cong ?A ?B ?C ?D |- Cong ?C ?D ?B ?A => apply (cong_symmetry _ _ _ _ (cong_left_commutativity _ _ _ _ H0)) |H0 : Cong ?A ?B ?C ?D |- Cong ?D ?C ?B ?B => apply (cong_symmetry _ _ _ _ (cong_commutativity _ _ _ _ H0)) |H0 : Cong ?A ?B ?C ?D |- Cong ?D ?C ?A ?B => apply (cong_symmetry _ _ _ _ (cong_right_commutativity _ _ _ _ H0)) |_ : _ |- _ => idtac end.",
            "VernacExtend",
            "35a251efb5426f0fae0dc533ddd2b99ec2a2e917"
        ],
        [
            "Section T11_1.",
            "VernacBeginSection",
            "ee64dd48aee4cb2bd8b752c67bcc508ee6d7e8e6"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma l11_3 : forall A B C D E F, CongA A B C D E F -> exists A', exists C', exists D', exists F', Out B A' A /\\ Out B C C' /\\ Out E D' D /\\ Out E F F' /\\ Cong_3 A' B C' D' E F'.",
            "VernacStartTheoremProof",
            "a4cd6e634892a16e17f0363547cba229514bd26a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 A'.",
            "VernacExtend",
            "227b4a120e097053aeca0d347ab53672b9405e56"
        ],
        [
            "ex_and H4 C'.",
            "VernacExtend",
            "5e457575cd7bdd1128982abab35b55ad94ca418c"
        ],
        [
            "ex_and H3 D'.",
            "VernacExtend",
            "5f0e3993c44ba64d3d9e836fe32624a9328d6f8a"
        ],
        [
            "ex_and H4 F'.",
            "VernacExtend",
            "993fe541996125c11156a4aff649d6f08f36c84a"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "exists F'.",
            "VernacExtend",
            "031415fa97f3e96a2ede466c6b87bce353e062cf"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split;finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "eapply l2_11 with A D;finish.",
            "VernacExtend",
            "bb3e35b95e17cb88e4aded2d1beec2944b916666"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "eapply l2_11; eBetween; Cong.",
            "VernacExtend",
            "a45a9195a9235cdd880c40e09e9dbcfd33f12a82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_aux : forall B A A' A0 E D D' D0, Out B A A' -> Out E D D' -> Cong B A' E D' -> Bet B A A0 -> Bet E D D0 -> Cong A A0 E D -> Cong D D0 B A -> Cong B A0 E D0 /\\ Cong A' A0 D' D0.",
            "VernacStartTheoremProof",
            "26a93023db80ac02549a08aa53b4af0ebfaa10d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong B A0 E D0).",
            "VernacExtend",
            "689ca2e64a51521bb00a728b2a2af4d69704460c"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply l2_11 with A D;finish.",
            "VernacExtend",
            "b0f08e945f2587fe37921b33d3127dcaa39e4230"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9; induction H11.",
            "VernacExtend",
            "bfa479f99e270bdd02a186044de31acdc7402d61"
        ],
        [
            "assert(Bet B A' A0 \\/ Bet B A0 A').",
            "VernacExtend",
            "d262aafc83f19c2dff83f23ad2518f757d50b978"
        ],
        [
            "eauto using l5_1.",
            "VernacExtend",
            "6d2dbb3e992053a8685d3f504d07d47262e13217"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "assert(Bet E D' D0).",
            "VernacExtend",
            "572908a50594ed4c5964d5d4e1a010ec19860463"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2: apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H9.",
            "VernacExtend",
            "ee5acc5f29b6c7e0d5221b934f857f0e76b81748"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3 with B E;finish.",
            "VernacExtend",
            "e53a5ba3ed1024452055042d3e758f4d8628e82f"
        ],
        [
            "assert(Bet E D0 D').",
            "VernacExtend",
            "ba99ae3d7df107d66ef9709e524d1b856fbd0377"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2: apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H3.",
            "VernacExtend",
            "a32f4a13e73a956d577a55a99b30492beae75bce"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_3 with B E;finish.",
            "VernacExtend",
            "e53a5ba3ed1024452055042d3e758f4d8628e82f"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "3:apply cong_commutativity.",
            "VernacExtend",
            "d37a21df7d1e91510cf30a3953ef770fddba12a7"
        ],
        [
            "3:apply H7.",
            "VernacExtend",
            "88b609d34b87312a79d9d2755f80f03cc15acb07"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2: apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "2: apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H9.",
            "VernacExtend",
            "ee5acc5f29b6c7e0d5221b934f857f0e76b81748"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "3:apply cong_commutativity.",
            "VernacExtend",
            "d37a21df7d1e91510cf30a3953ef770fddba12a7"
        ],
        [
            "3:apply H7.",
            "VernacExtend",
            "88b609d34b87312a79d9d2755f80f03cc15acb07"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply cong_preserves_bet.",
            "VernacExtend",
            "84bd31b89331166e9f477c3d79f18efcaa847d6a"
        ],
        [
            "2:apply cong_symmetry.",
            "VernacExtend",
            "3f8d6ff9e0433fcefe94f98dd3572757cdfeb47f"
        ],
        [
            "2:apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "2:apply cong_symmetry.",
            "VernacExtend",
            "3f8d6ff9e0433fcefe94f98dd3572757cdfeb47f"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "eauto using l5_1.",
            "VernacExtend",
            "6d2dbb3e992053a8685d3f504d07d47262e13217"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "3:apply cong_commutativity.",
            "VernacExtend",
            "d37a21df7d1e91510cf30a3953ef770fddba12a7"
        ],
        [
            "3:apply H7.",
            "VernacExtend",
            "88b609d34b87312a79d9d2755f80f03cc15acb07"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_3_bis : forall A B C D E F, (exists A', exists C', exists D', exists F', Out B A' A /\\ Out B C' C /\\ Out E D' D /\\ Out E F' F /\\ Cong_3 A' B C' D' E F') -> CongA A B C D E F.",
            "VernacStartTheoremProof",
            "27d6829f203e33b308eb8fe3e4fbdc471297227d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H0 C'.",
            "VernacExtend",
            "1f2021fe4adb3d11368c967beff0696570a2eb75"
        ],
        [
            "ex_and H D'.",
            "VernacExtend",
            "a924c51055d65b2f8c4bb496a46f08674cec766a"
        ],
        [
            "ex_and H0 F'.",
            "VernacExtend",
            "3ca680ba6d64d16f55a9b2e57977e2e9e7b29045"
        ],
        [
            "prolong B A A0 E D.",
            "VernacExtend",
            "ff4c74bde22af68fa251dd43cebcc3bbbfc5aaeb"
        ],
        [
            "prolong B C C0 E F.",
            "VernacExtend",
            "c7be7a31ff14024f9cb3a652017ed14f96fab275"
        ],
        [
            "prolong E D D0 B A.",
            "VernacExtend",
            "62c95138f2dbf9ba275803a334ed27b61708d51e"
        ],
        [
            "prolong E F F0 B C.",
            "VernacExtend",
            "534ed843b0ddd71be068979c470ca45b582bf8b8"
        ],
        [
            "assert(HH0:=H0).",
            "VernacExtend",
            "f7d33f7919f61d212620b53de1133fb9d8e4f6cc"
        ],
        [
            "assert(HH1:=H1).",
            "VernacExtend",
            "6c3c0a9879269335c53941cd8c3746911de37368"
        ],
        [
            "assert(HH2:=H2).",
            "VernacExtend",
            "6ecf4d582187bc5911e8ff3b185d84a1023ef143"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold Out in HH.",
            "VernacExtend",
            "08ca3775e31ed0561f3114ba8ad9f6a77821af5a"
        ],
        [
            "unfold Out in HH0.",
            "VernacExtend",
            "237da86782c6278d136d41dcab8b7f38d2a8f7c2"
        ],
        [
            "unfold Out in HH1.",
            "VernacExtend",
            "32da31cabda7cd1b84bc1be21a3a6286a66ed38b"
        ],
        [
            "unfold Out in HH2.",
            "VernacExtend",
            "a2880a4868fa2a90d32debb710660904783e6603"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "exists F0.",
            "VernacExtend",
            "6a5495edcaceeb7d2de63d96dc2e4579e05d77c3"
        ],
        [
            "repeat split; try (assumption).",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "unfold Cong_3 in H3.",
            "VernacExtend",
            "461caf48339a3135d1ac0be9b57c2d147234ff6f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong B A0 E D0 /\\ Cong A' A0 D' D0).",
            "VernacExtend",
            "a4eb6b7e61636510a142ca2262dd91916ed9dbd7"
        ],
        [
            "eapply l11_aux with A D;finish.",
            "VernacExtend",
            "401cd82e1be5a68e7357b1936bd734dc5da92866"
        ],
        [
            "assert(Cong B C0 E F0 /\\ Cong C' C0 F' F0).",
            "VernacExtend",
            "480d6ed5fa8a632f6c4c3c8745a76ba56c733ffe"
        ],
        [
            "eapply l11_aux with C F;finish.",
            "VernacExtend",
            "1f3af27d207704a4ab5bc9250c6d0b7bd0822c06"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Cong_3 B A' A0 E D' D0) by (repeat split;finish).",
            "VernacExtend",
            "95b473d5334299ee56711be7d0ff1209796855bf"
        ],
        [
            "assert (Cong_3 B C' C0 E F' F0) by (repeat split;finish).",
            "VernacExtend",
            "77c6bd05411a8882f3edbf83d6dfc0249a0aa312"
        ],
        [
            "assert (Cong C0 A' F0 D').",
            "VernacExtend",
            "6243f40cb9f0c2a71d9a0f49a3e6f77d0143d2e7"
        ],
        [
            "apply l4_16 with B C' E F'; unfold FSC;repeat split;finish;ColR.",
            "VernacExtend",
            "cbb47d931fca3463b37438806d58b64a910bc880"
        ],
        [
            "apply l4_16 with B A' E D'; unfold FSC;repeat split;finish;ColR.",
            "VernacExtend",
            "382c6f86acd8c13d042b6f69c7eff20f41ad6af5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_4_1 : forall A B C D E F, CongA A B C D E F -> A<>B /\\ C<>B /\\ D<>E /\\ F<>E /\\ (forall A' C' D' F', Out B A' A /\\ Out B C' C /\\ Out E D' D /\\ Out E F' F /\\ Cong B A' E D' /\\ Cong B C' E F' -> Cong A' C' D' F').",
            "VernacStartTheoremProof",
            "109d53fba86fd7eb970e1e4e229b254aa8b7081c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply l11_3 in HH.",
            "VernacExtend",
            "fc2a34ced0f55a8cc720bb62ab5b13be8b1ac873"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and HH A0.",
            "VernacExtend",
            "18326d44259552d26cd0b3fbc37fac740d936b1a"
        ],
        [
            "ex_and H4 C0.",
            "VernacExtend",
            "5e3728f6bc260e79e62a276f4a81c5035abaa9da"
        ],
        [
            "ex_and H10 D0.",
            "VernacExtend",
            "85915f24448000ac95cce925e2d14f96dfb32a72"
        ],
        [
            "ex_and H4 F0.",
            "VernacExtend",
            "9fb2afc4663d811b39758cbeefd8e3d7499b24f3"
        ],
        [
            "unfold Cong_3 in H13.",
            "VernacExtend",
            "8fccc382bd925b7598cba5438e355b51514f03ea"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Out B A' A0).",
            "VernacExtend",
            "2a0af96326e186509aa5b24ce0ea4fa7fa92ac29"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out E D' D0).",
            "VernacExtend",
            "fbf8e0c614a5320e85c51f211ec4fb3c66ca4f9e"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A' A0 D' D0).",
            "VernacExtend",
            "601362984f63ad8c312e85ad1e3b2062cfa320b5"
        ],
        [
            "eapply out_cong_cong.",
            "VernacExtend",
            "f5c5c10b50abce29404cea7e3457fcff58b7da44"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert (Cong A' C0 D' F0).",
            "VernacExtend",
            "2ec3664038f913ac71b3f0322090015f9a35ec09"
        ],
        [
            "eapply (l4_16 B A0 A' C0 E D0 D' F0).",
            "VernacExtend",
            "6b2ce586f68d42b482a7da064f64c7eac33172cb"
        ],
        [
            "unfold FSC.",
            "VernacExtend",
            "d005f9205539e89bf245b71bab47bc97d7daa39f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assert_cols;Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A0.",
            "VernacExtend",
            "9350ad24ef9a137c87a04c94cf40961e615e4648"
        ],
        [
            "unfold Out in H4.",
            "VernacExtend",
            "248c9b8ea847e173d8f9c1c5a67980124665a550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Out B C' C0).",
            "VernacExtend",
            "46fc4041d0a5c2adf3ae2f01d3d6e029936fff08"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out E F' F0).",
            "VernacExtend",
            "2e86564248528fa6dc20589954b577368fca1502"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong C' C0 F' F0).",
            "VernacExtend",
            "e037a4fc6dadd3c235408059c48cf035c2436ced"
        ],
        [
            "eapply out_cong_cong.",
            "VernacExtend",
            "f5c5c10b50abce29404cea7e3457fcff58b7da44"
        ],
        [
            "3:apply H9.",
            "VernacExtend",
            "21a30a5376434ee6934aa112ffab5de7953a864e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (l4_16 B C0 C' A' E F0 F' D').",
            "VernacExtend",
            "44cd1e94748df97c3fb52a9d51a2e4667d493151"
        ],
        [
            "unfold FSC.",
            "VernacExtend",
            "d005f9205539e89bf245b71bab47bc97d7daa39f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "unfold Out in H10.",
            "VernacExtend",
            "772185f7fb7ba3bd0f7b9c8fa28b22e07e3e517e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_4_2 : forall A B C D E F, (A<>B /\\ C<>B /\\ D<>E /\\ F<>E /\\ (forall A' C' D' F', Out B A' A /\\ Out B C' C /\\ Out E D' D /\\ Out E F' F /\\ Cong B A' E D' /\\ Cong B C' E F' -> Cong A' C' D' F')) -> CongA A B C D E F.",
            "VernacStartTheoremProof",
            "5213b4dad9f83831779323d1b61886e2cc01016a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_3_bis.",
            "VernacExtend",
            "ff9ab530acc51ffd53857904554f59aadad107bf"
        ],
        [
            "prolong B A A' E D.",
            "VernacExtend",
            "0164c15749c58b009daa691d218c8ac31f2bdf9c"
        ],
        [
            "prolong B C C' E F.",
            "VernacExtend",
            "b17cb2a6a428a5bb12ba270f886c4c67cb5a122d"
        ],
        [
            "prolong E D D' B A.",
            "VernacExtend",
            "c38c684ad98edfc16c6d2873da95d1e27284ee94"
        ],
        [
            "prolong E F F' B C.",
            "VernacExtend",
            "d3b9c6dfb63f2e07223c5f3aabf92021dd69a2d6"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "exists F'.",
            "VernacExtend",
            "031415fa97f3e96a2ede466c6b87bce353e062cf"
        ],
        [
            "assert(Cong A' B D' E).",
            "VernacExtend",
            "6cb64bae4d81756497a650879b3fac94c7bdf35f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11 with A D;finish.",
            "VernacExtend",
            "bb3e35b95e17cb88e4aded2d1beec2944b916666"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong B C' E F').",
            "VernacExtend",
            "f283c6c9cf68c1ba8c202d8d66fe06cd24bfe8ba"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11 with C F;finish.",
            "VernacExtend",
            "afbf349cbb3e464bb187cfcc6c394f8f0f49ee85"
        ],
        [
            "assert_diffs;repeat split;finish.",
            "VernacExtend",
            "2ccc52fe6485c33ab01a7aa8acb1f18aefe3bb29"
        ],
        [
            "apply H3;repeat split;finish.",
            "VernacExtend",
            "28ed2b168aa0168a90b70336800dab63d5d72365"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_refl : forall A B C, A <> B -> C <> B -> CongA A B C A B C.",
            "VernacStartTheoremProof",
            "2b1f6c651ca91fea359f73c08f69656b03541013"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l11_3_bis.",
            "VernacExtend",
            "ff9ab530acc51ffd53857904554f59aadad107bf"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "repeat split; finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_sym : forall A B C A' B' C', CongA A B C A' B' C' -> CongA A' B' C' A B C.",
            "VernacStartTheoremProof",
            "b82bc0a76a391c8f8ba195e82569c490e04f98a9"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 A0.",
            "VernacExtend",
            "12454b2d2269dd43ac16d85d7cebae9334a337bf"
        ],
        [
            "ex_and H4 C0.",
            "VernacExtend",
            "5e3728f6bc260e79e62a276f4a81c5035abaa9da"
        ],
        [
            "ex_and H3 D0.",
            "VernacExtend",
            "018b581b421193d39ab5582113065bdaac1bac7b"
        ],
        [
            "ex_and H4 F0.",
            "VernacExtend",
            "9fb2afc4663d811b39758cbeefd8e3d7499b24f3"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "exists F0.",
            "VernacExtend",
            "6a5495edcaceeb7d2de63d96dc2e4579e05d77c3"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "repeat split; finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_conga : forall A B C A' B' C' A0 C0 A1 C1, CongA A B C A' B' C' -> Out B A A0 -> Out B C C0 -> Out B' A' A1 -> Out B' C' C1 -> CongA A0 B C0 A1 B' C1.",
            "VernacStartTheoremProof",
            "87973397bac05327913eea51ebc8ffd297817142"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l11_4_1 in H.",
            "VernacExtend",
            "25d9fd5003bdf229f685ebcb3cef61052e7310a7"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_4_2.",
            "VernacExtend",
            "282267891160ee4ca163edce7f53f5a88efe26f3"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split;finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "eapply l6_7 with A0;finish.",
            "VernacExtend",
            "f65d0eedeb0bfb24c019c8c1516963f3855c466f"
        ],
        [
            "eapply l6_7 with C0;finish.",
            "VernacExtend",
            "007fc08a009add9410429087d71c7a55fd8008be"
        ],
        [
            "eapply l6_7 with A1;finish.",
            "VernacExtend",
            "fe55e8702dccab0c5b57fa6f5437eec3f9615673"
        ],
        [
            "eapply l6_7 with C1;finish.",
            "VernacExtend",
            "5600e1a152a08e56bb606e56a6243fcc9aed5923"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_diff : forall A B C A' B' C', A<>B -> Cong_3 A B C A' B' C' -> A' <> B'.",
            "VernacStartTheoremProof",
            "44455b6fe670f4c9faf980a4240cab8c994239f9"
        ],
        [
            "unfold Cong_3 in *.",
            "VernacExtend",
            "81846649e3ee6af32dc9d86caa3a4bf892f50899"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_diff2: forall A B C A' B' C', B<>C -> Cong_3 A B C A' B' C' -> B' <> C'.",
            "VernacStartTheoremProof",
            "9a0013cd2894e4b55cc543224841b0d17ca0ea49"
        ],
        [
            "unfold Cong_3 in *.",
            "VernacExtend",
            "81846649e3ee6af32dc9d86caa3a4bf892f50899"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_conga : forall A B C A' B' C', A <> B -> C <> B -> Cong_3 A B C A' B' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "e76eb825440a62364b06e6c73490ba48e7079932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A' <> B') by (eauto using cong3_diff).",
            "VernacExtend",
            "89de3a8fe815db9a22712208768bba191aff5774"
        ],
        [
            "assert (B' <> C') by (eauto using cong3_diff2).",
            "VernacExtend",
            "4300979db11d19b19f65c9ed639a23205434e4cd"
        ],
        [
            "apply (l11_3_bis A B C A' B' C').",
            "VernacExtend",
            "671ba807ffb8a159ae5e04acd165434a6b2bc593"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "intuition finish.",
            "VernacExtend",
            "d5eedf3438b6ef30d3225e4eb41f48e52dc9d6f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_conga2 : forall A B C A' B' C' A'' B'' C'', Cong_3 A B C A' B' C' -> CongA A B C A'' B'' C'' -> CongA A' B' C' A'' B'' C''.",
            "VernacStartTheoremProof",
            "7be0bc874bc0e9e415cdbb6a113e0abd75f6716e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A2.",
            "VernacExtend",
            "d4c062c05c5505dd33be70597bc7c4c444e0e812"
        ],
        [
            "ex_and H5 C2.",
            "VernacExtend",
            "787dc05f5e81df00dcf69119df92f143005e359c"
        ],
        [
            "unfold Cong_3 in H.",
            "VernacExtend",
            "20dd0202edd04c922189321a655c051034a59a81"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split;try solve [auto].",
            "VernacExtend",
            "5770b30d049d9ecaa3012a24f2894aa826bc4a55"
        ],
        [
            "prolong B' A' A1 B'' A''.",
            "VernacExtend",
            "123e42732328552adfea50c858bfcf6e21ad8ee8"
        ],
        [
            "prolong B' C' C1 B'' C''.",
            "VernacExtend",
            "17180898661151830d60bfce10ca625c4e591543"
        ],
        [
            "exists A1.",
            "VernacExtend",
            "860e23291647008053c30621a32bfd6912a8a298"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "exists A2.",
            "VernacExtend",
            "f3908652f37161bba2ccfd166f76d88f5a02cbfd"
        ],
        [
            "exists C2.",
            "VernacExtend",
            "0773330ae05dff589dcb26d0590f29af206680f3"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply cong_transitivity with B A;finish.",
            "VernacExtend",
            "1124588c43b83cce7f68a5b676e01185994f0c49"
        ],
        [
            "eapply cong_transitivity with B C;finish.",
            "VernacExtend",
            "b3de86f18d966a6b31819f0992ce34baf06d41dc"
        ],
        [
            "assert (Cong A A0 A' A1).",
            "VernacExtend",
            "17263a8f370eff312ca2c80a2e34e0c7c69b66ef"
        ],
        [
            "eapply cong_transitivity with B'' A'';finish.",
            "VernacExtend",
            "da44dd93d22a64edd53c3a3efb3a30dac200b5d6"
        ],
        [
            "assert(Cong B A0 B' A1).",
            "VernacExtend",
            "4226f88f1ffd7a28087db069f53e501420b9b805"
        ],
        [
            "eapply l2_11 with A A';finish.",
            "VernacExtend",
            "ebb00f3d2107e00389d6ddda76eee02931126151"
        ],
        [
            "assert (Cong C C0 C' C1).",
            "VernacExtend",
            "047094830712f2e806901c479c6dacdf9347d1e9"
        ],
        [
            "eapply cong_transitivity with B'' C'';finish.",
            "VernacExtend",
            "0da10dedbd6366eb5041fb0f192d99de3becfcb4"
        ],
        [
            "assert(Cong B C0 B' C1).",
            "VernacExtend",
            "f1b28c247e75d625c17ca62e6879800f70a77107"
        ],
        [
            "eapply l2_11 with C C';finish.",
            "VernacExtend",
            "c6410bcbece6a257a86ac5212597ed3e352f1a7d"
        ],
        [
            "assert(FSC B A A0 C B' A' A1 C').",
            "VernacExtend",
            "90a3c11125a9ea3be2a5f0140672e1c0945046e9"
        ],
        [
            "unfold FSC;assert_cols;repeat split;finish.",
            "VernacExtend",
            "da1f8cdb20484086cc024269bfa680238c4f5a14"
        ],
        [
            "assert(Cong A0 C A1 C').",
            "VernacExtend",
            "665ad521c4591d0c92659aa2ad8936c2ae9ad1fe"
        ],
        [
            "eauto using l4_16.",
            "VernacExtend",
            "9a2e1c6d2a9e3d94094683b0c2beb042054bfdc3"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assert(Cong C0 A0 C1 A1).",
            "VernacExtend",
            "799bace9a599aaa0ecddcd9d72c368577a0b6db0"
        ],
        [
            "eapply (l4_16 B C C0 A0 B' C' C1 A1).",
            "VernacExtend",
            "7a8a05bd7b04fc7e8dc8895e3859ef498b0e14dc"
        ],
        [
            "unfold FSC;assert_cols;repeat split;finish.",
            "VernacExtend",
            "da1f8cdb20484086cc024269bfa680238c4f5a14"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply cong_transitivity with A0 C0; Cong.",
            "VernacExtend",
            "99b3102330d819a3a73a30a7b164af2c7af55fdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_diff1 : forall A B C A' B' C', CongA A B C A' B' C' -> A <> B.",
            "VernacStartTheoremProof",
            "98128186b84ce2843e932054b67a93f75a8960cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_diff2 : forall A B C A' B' C', CongA A B C A' B' C' -> C <> B.",
            "VernacStartTheoremProof",
            "3e80e502ef8f2ccfef960d5f61dfe87c68249585"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_diff45 : forall A B C A' B' C', CongA A B C A' B' C' -> A' <> B'.",
            "VernacStartTheoremProof",
            "6c2a273e0839e51cb436522aaa02e1829eaeb9b3"
        ],
        [
            "intros A B C A' B' C' H.",
            "VernacExtend",
            "20e879c51dafd8c6fe938da38da3589cb8da118b"
        ],
        [
            "apply (conga_diff1 A' B' C' A B C); apply conga_sym; auto.",
            "VernacExtend",
            "01cd9b6852773c359f3ca24977eef0db1006e208"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_diff56 : forall A B C A' B' C', CongA A B C A' B' C' -> C' <> B'.",
            "VernacStartTheoremProof",
            "89fff04abc7fec4fe5f129f90d32371e3cb5ee89"
        ],
        [
            "intros A B C A' B' C' H.",
            "VernacExtend",
            "20e879c51dafd8c6fe938da38da3589cb8da118b"
        ],
        [
            "apply (conga_diff2 A' B' C' A B C); apply conga_sym; auto.",
            "VernacExtend",
            "71f41050d84dd955f5c2a1e1e54fe8e60e867391"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_trans : forall A B C A' B' C' A'' B'' C'', CongA A B C A' B' C' -> CongA A' B' C' A'' B'' C'' -> CongA A B C A'' B'' C''.",
            "VernacStartTheoremProof",
            "330544d179c980178fef9058e6e016c33203b716"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 C1.",
            "VernacExtend",
            "e9691cd9730c56848501aa124c64ae972eb7f6d1"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(A'' <> B'' /\\ C'' <> B'').",
            "VernacExtend",
            "0eaaee6145761abc9029593125a24ca330e5f607"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA A1 B' C1 A'' B'' C'') by (apply out_conga with A' C' A'' C'';finish).",
            "VernacExtend",
            "0d29238ae5a6b9544094508713c0a98cd0ee8633"
        ],
        [
            "assert (CongA A0 B C0 A' B' C') by (apply out_conga with A C A' C';finish).",
            "VernacExtend",
            "372fb82650f94b9845552e6402d428725c94c42d"
        ],
        [
            "assert (Cong B A0 B' A1).",
            "VernacExtend",
            "4226f88f1ffd7a28087db069f53e501420b9b805"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply l2_11 with A A';finish.",
            "VernacExtend",
            "ebc936ade26f4f983bc675e5bc5de7480806e0b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong B C0 B' C1).",
            "VernacExtend",
            "f1b28c247e75d625c17ca62e6879800f70a77107"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11 with C C';finish.",
            "VernacExtend",
            "c6410bcbece6a257a86ac5212597ed3e352f1a7d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong A0 C0 A1 C1).",
            "VernacExtend",
            "09fcbbd1cdc28420953cb515a14603cff24bb9c8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (l11_4_1) in H24.",
            "VernacExtend",
            "a60052db399fecc3c0ad6f419a5159e19d1f1ad3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "repeat split;finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Cong_3 A0 B C0 A1 B' C1) by (repeat split;finish).",
            "VernacExtend",
            "3e5bf1d57eb312431bf435e98e6efdb05c96d8c3"
        ],
        [
            "apply cong3_symmetry in H28.",
            "VernacExtend",
            "88af51b087830faf4ebfd9d8749dea6566a89abf"
        ],
        [
            "assert( CongA A0 B C0 A'' B'' C'') by (eauto using cong3_conga2).",
            "VernacExtend",
            "75444671f228938bce88db1bca2e18e27e0ac424"
        ],
        [
            "eapply out_conga with A0 C0 A'' C'';finish.",
            "VernacExtend",
            "0bba6e3e561bcf68c3653f1d35b8e414b1875551"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_pseudo_refl : forall A B C, A <> B -> C <> B -> CongA A B C C B A.",
            "VernacStartTheoremProof",
            "83c805f55eb724827a662f98751a5d0f8196d9a1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "prolong B A A' B C.",
            "VernacExtend",
            "57cee99a90469875952367f12a8fce68a878500f"
        ],
        [
            "prolong B C C' B A.",
            "VernacExtend",
            "ed3c6fae6d2483d0216e27e0e80b7efd6881fa2b"
        ],
        [
            "prolong B A A'' B C.",
            "VernacExtend",
            "1fdd7a68e544e8db921991a29c936a31fcbba966"
        ],
        [
            "prolong B C C'' B A.",
            "VernacExtend",
            "67747d61cf30fc38130b92091230095beaf342c5"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "exists C''.",
            "VernacExtend",
            "edc38b8d7fa02aad35e67a5b3b120d25fe938d4b"
        ],
        [
            "exists A''.",
            "VernacExtend",
            "2c62bea276434352308dfb4eac61b0cfd4e93b7e"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "assert (A' = A'') by (eauto using (construction_uniqueness B A)).",
            "VernacExtend",
            "983bf96ea4204e8293c6dc4f1d82b3d62b090a9a"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "assert (C' = C'') by (eauto using (construction_uniqueness B C)).",
            "VernacExtend",
            "8a087accbe1a9e12584265f0aa48722e466eb92f"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_trivial_1 : forall A B C D, A<>B -> C<>D -> CongA A B A C D C.",
            "VernacStartTheoremProof",
            "7fdcd16bd4d3ab7d51d175437ccd14ee98dc3d9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "prolong B A A' D C.",
            "VernacExtend",
            "cdc85f8919fe86d4ab6a340a06f014fe32c76585"
        ],
        [
            "prolong D C C' B A.",
            "VernacExtend",
            "fa10173f8d521892058e7f1ee8483b9220237237"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "repeat split;finish.",
            "VernacExtend",
            "266c72449c644693452ceb961ccb5e75e6b1f622"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_10 : forall A B C D E F A' C' D' F', CongA A B C D E F -> Out B A' A -> Out B C' C -> Out E D' D -> Out E F' F -> CongA A' B C' D' E F'.",
            "VernacStartTheoremProof",
            "81170ead0ceb12e54e12edc294198463ac697247"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (out_conga A B C D E F); auto using l6_6.",
            "VernacExtend",
            "2ccd05abc625f1fe12ced885f30e1d7a90171df1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out2__conga : forall A B C A' C', Out B A' A -> Out B C' C -> CongA A B C A' B C'.",
            "VernacStartTheoremProof",
            "db076ae12aaac02a489ddd7379da35932dda5590"
        ],
        [
            "intros A B C A' C' HAOut HCOut.",
            "VernacExtend",
            "6c1c45bd9bc8b517055eb0696211da31999a3acd"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_10 with A C A C;finish.",
            "VernacExtend",
            "a7fdacaf587b462af3a46067534b32f0b35e2a07"
        ],
        [
            "apply conga_refl;auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_13 : forall A B C D E F A' D', CongA A B C D E F -> Bet A B A' -> A'<> B -> Bet D E D' -> D'<> E -> CongA A' B C D' E F.",
            "VernacStartTheoremProof",
            "85de0732642cd656b5d4cc913ad527cda98e9ccf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H7 A''.",
            "VernacExtend",
            "00ffd7a322807f07123331a4ca030e44a154a25e"
        ],
        [
            "ex_and H8 C''.",
            "VernacExtend",
            "587c8a31f3eb759edcda91649b6be439287c168a"
        ],
        [
            "ex_and H7 D''.",
            "VernacExtend",
            "ec2d44a9fdd873c04c1e9094718e8930fd427e83"
        ],
        [
            "ex_and H8 F''.",
            "VernacExtend",
            "c69d542c793eacc4b4483927066d5dfa95605f1d"
        ],
        [
            "prolong B A' A0 E D'.",
            "VernacExtend",
            "fa7f2db0712017c19718fc47ca5f2967cf97a963"
        ],
        [
            "prolong E D' D0 B A'.",
            "VernacExtend",
            "a557dca834bd0a9d9464e0fe572755f1e5ebffc2"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "exists C''.",
            "VernacExtend",
            "edc38b8d7fa02aad35e67a5b3b120d25fe938d4b"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "exists F''.",
            "VernacExtend",
            "677694571fdc9393e831991e2e181398caeb97ae"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply (five_segment_with_def A'' B A0 C'' D'' E D0 F'').",
            "VernacExtend",
            "524666bc8bf4824bdb04b03363648abe42bea609"
        ],
        [
            "unfold OFSC.",
            "VernacExtend",
            "492752124a3e0e575422433695b3cbf9807f06bc"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11 with C F;finish.",
            "VernacExtend",
            "afbf349cbb3e464bb187cfcc6c394f8f0f49ee85"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_right_comm : forall A B C D E F, CongA A B C D E F -> CongA A B C F E D.",
            "VernacStartTheoremProof",
            "d7706b14cbdc07e9481da19bf872d9c8df59ccb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply conga_trans with D E F.",
            "VernacExtend",
            "d45fc748188cee58ed87ee7f483c9ed44dafdb0e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_pseudo_refl;auto.",
            "VernacExtend",
            "df9b6043ebd1492b46b4fc504cdbe598621cd514"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_left_comm : forall A B C D E F, CongA A B C D E F -> CongA C B A D E F.",
            "VernacStartTheoremProof",
            "f05e47134238a17a007727e5fbe46a0159787a3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_trans with A B C.",
            "VernacExtend",
            "c5b0efd8fc452d258882f35f16a716762933763c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_pseudo_refl.",
            "VernacExtend",
            "3829de4e396b8da851f142420c7dafe9d554c3fb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_comm : forall A B C D E F, CongA A B C D E F -> CongA C B A F E D.",
            "VernacStartTheoremProof",
            "ef0b47a1ea189899d44f518d7f1cba48162dbce6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_line : forall A B C A' B' C', A <> B -> B <> C -> A' <> B' -> B' <> C' -> Bet A B C -> Bet A' B' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "314c8be5892c9c1dae8c3432080bcb3f3dc1264d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "prolong B C C0 B' C'.",
            "VernacExtend",
            "179687b7e8625b0032aac92021c65a85570fdd47"
        ],
        [
            "prolong B' C' C1 B C.",
            "VernacExtend",
            "2a03b7a4d88edc9502d9d46b880f3db516b7d2a7"
        ],
        [
            "prolong B A A0 B' A'.",
            "VernacExtend",
            "f9c97532f1704efc53780c619fe0cc287aa76867"
        ],
        [
            "prolong B' A' A1 B A.",
            "VernacExtend",
            "b0a9167bc7c751a5c073796f7cadcc022e478221"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "exists A1.",
            "VernacExtend",
            "860e23291647008053c30621a32bfd6912a8a298"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply (l2_11 A0 B C0 A1 B' C1).",
            "VernacExtend",
            "ef855f1cb49b8c1c0b3382b50d179677ad00adb1"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_14 : forall A B C A' C', Bet A B A' -> A <> B -> A' <> B -> Bet C B C' -> B <> C -> B <> C' -> CongA A B C A' B C'.",
            "VernacStartTheoremProof",
            "79e788e450afb7bb8d4b2306c7ee19de8e4f0604"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (CongA A' B C C' B A).",
            "VernacExtend",
            "67141403fd5eb42b2f0c462dca4e59c55e37fc3b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l11_13 with A C;finish.",
            "VernacExtend",
            "bdeae44ff008d43029b1e0b054a0229d42e704bd"
        ],
        [
            "apply conga_pseudo_refl;finish.",
            "VernacExtend",
            "263a259b5d2fefeb08bbb9d0414f51ef42f81b2a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l11_13 with A' A;finish.",
            "VernacExtend",
            "e3d40125fe2351468c37e71b37dcd6f78c7ebaf3"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T11_1.",
            "VernacEndSegment",
            "1c1e97f8657d1dc20646339e592a1aa2c2724440"
        ],
        [
            "Section T11_2.",
            "VernacBeginSection",
            "cdc99d5f8c84806e3f8c53a9bedeacf9382deba9"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma l11_16 : forall A B C A' B' C', Per A B C -> A <> B -> C <> B -> Per A' B' C' -> A'<> B' -> C'<> B'-> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "6f98d032fd097eaee2a4ea75ddd26d3ba993dfb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong B C C0 B' C'.",
            "VernacExtend",
            "179687b7e8625b0032aac92021c65a85570fdd47"
        ],
        [
            "prolong B' C' C1 B C.",
            "VernacExtend",
            "2a03b7a4d88edc9502d9d46b880f3db516b7d2a7"
        ],
        [
            "prolong B A A0 B' A'.",
            "VernacExtend",
            "f9c97532f1704efc53780c619fe0cc287aa76867"
        ],
        [
            "prolong B' A' A1 B A.",
            "VernacExtend",
            "b0a9167bc7c751a5c073796f7cadcc022e478221"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "exists A1.",
            "VernacExtend",
            "860e23291647008053c30621a32bfd6912a8a298"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply (l10_12 A0 B C0 A1 B' C1).",
            "VernacExtend",
            "4e79c6a272da4e000dae6568c22a8c821dc89ef4"
        ],
        [
            "eapply (per_col _ _ C).",
            "VernacExtend",
            "1f96f495b95e0f9e66618f522c2f3f5ca47a54cc"
        ],
        [
            "intro;subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ A).",
            "VernacExtend",
            "88b931f21bcd82eef6008644d5c5f2bd11c54c27"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (per_col _ _ C').",
            "VernacExtend",
            "7bbb1f4e1738029ee8ca93244e4e45ce826edd2c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ A').",
            "VernacExtend",
            "7f66534e62dd2a9a842c2e04e22d96932ebbbb44"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_17 : forall A B C A' B' C', Per A B C -> CongA A B C A' B' C' -> Per A' B' C'.",
            "VernacStartTheoremProof",
            "9aabe2d0ab20a5dbbc6df4a681ac2089223cb382"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 C1.",
            "VernacExtend",
            "e9691cd9730c56848501aa124c64ae972eb7f6d1"
        ],
        [
            "assert (Per A0 B C0).",
            "VernacExtend",
            "08071d420f29535e5821a9d08f597ae624694612"
        ],
        [
            "eapply (per_col _ _ C).",
            "VernacExtend",
            "1f96f495b95e0f9e66618f522c2f3f5ca47a54cc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ A).",
            "VernacExtend",
            "88b931f21bcd82eef6008644d5c5f2bd11c54c27"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per A1 B' C1).",
            "VernacExtend",
            "9add8713055f44327bda494d2ea1308dc17e75b6"
        ],
        [
            "eapply l8_10.",
            "VernacExtend",
            "1ee3d8217c9ac2206eea0fb7c7068e5e356cf7a6"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (per_col _ _ C1).",
            "VernacExtend",
            "99c385b08f4e3778f187cb47be25cc5e9ded58a8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply between_identity in H10.",
            "VernacExtend",
            "6c861648d5cb88172f8a5301b3e3dcfb684c9142"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ A1).",
            "VernacExtend",
            "e66160d106b8c2bce555a2998667dcf0504723d5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "apply between_identity in H8.",
            "VernacExtend",
            "db1d1e8d67766dc35c1f8da88446c7d67412218e"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_18_1 : forall A B C D, Bet C B D -> B <> C -> B <> D -> A <> B -> Per A B C -> CongA A B C A B D.",
            "VernacStartTheoremProof",
            "0ab6bc1ae49e7479160f8caa4582046fa1e6dbf2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Per A B D).",
            "VernacExtend",
            "68c4a213963b7feb1aedaae1a2bf7d6e413136b6"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_16; try assumption.",
            "VernacExtend",
            "8364a2009c00797317b71eac03e016002b91007c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_18_2 : forall A B C D, Bet C B D -> CongA A B C A B D -> Per A B C.",
            "VernacStartTheoremProof",
            "7ddb5bb4b3515151225d0cddbb7739317918ee17"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 D0.",
            "VernacExtend",
            "770b82981881b038e5ef72e83c79c419d9d35206"
        ],
        [
            "assert( A0 = A1).",
            "VernacExtend",
            "98d169605de59a4682cafb099c1abfbe53ce76da"
        ],
        [
            "eapply construction_uniqueness.",
            "VernacExtend",
            "928b48d22b7aedfb9e2c53039ddcc1800f8bfaf9"
        ],
        [
            "2: apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "assert(Per A0 B C0).",
            "VernacExtend",
            "08071d420f29535e5821a9d08f597ae624694612"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (per_col _ _ C0).",
            "VernacExtend",
            "25d9af6d3293fb96edc8d980553964be9d5790cd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply between_identity in H6.",
            "VernacExtend",
            "b5e0f582671432b96e53e2e25a1a24edfc555d64"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ A0).",
            "VernacExtend",
            "6839382129eda80fc04b932c59687fb8c68b04ff"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A0.",
            "VernacExtend",
            "9350ad24ef9a137c87a04c94cf40961e615e4648"
        ],
        [
            "apply between_identity in H8.",
            "VernacExtend",
            "db1d1e8d67766dc35c1f8da88446c7d67412218e"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong3_preserves_out : forall A B C A' B' C', Out A B C -> Cong_3 A B C A' B' C' -> Out A' B' C'.",
            "VernacStartTheoremProof",
            "aadf0f9a374577db191fe59f9f10b414af181983"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=H0).",
            "VernacExtend",
            "bf875902a496ade0bcfcb6336d4c6dc942dce0f8"
        ],
        [
            "unfold Cong_3 in H0.",
            "VernacExtend",
            "93037a2a6cbf7edf8fc7bf2aa3021971ee40b0d8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_identity in H0.",
            "VernacExtend",
            "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply cong_identity in H3.",
            "VernacExtend",
            "66e848f8fbf6e4694366f8121b8567650ff35782"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "2:apply HH.",
            "VernacExtend",
            "5768f3df6e7a11c0d12b9422536569bbb6e97301"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_21_a : forall A B C A' B' C', Out B A C -> CongA A B C A' B' C' -> Out B' A' C'.",
            "VernacStartTheoremProof",
            "6ca6876b556a13bcbacadc30c2e998a4f295337e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 C1.",
            "VernacExtend",
            "e9691cd9730c56848501aa124c64ae972eb7f6d1"
        ],
        [
            "assert (Out B A0 C0).",
            "VernacExtend",
            "65c8eb3523cb44d9066e6355e0407ea3da4581f7"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A0.",
            "VernacExtend",
            "9350ad24ef9a137c87a04c94cf40961e615e4648"
        ],
        [
            "apply between_identity in H4.",
            "VernacExtend",
            "249aea586316f58b5b3302348fed8b1b83c3ab51"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply between_identity in H6.",
            "VernacExtend",
            "b5e0f582671432b96e53e2e25a1a24edfc555d64"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H14.",
            "VernacExtend",
            "f5a05fe2485bcd9a092ccb06894396aa5209d505"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "3: apply H6.",
            "VernacExtend",
            "2ab832506d1717849b918f657f1472944b62a760"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out B' A1 C1).",
            "VernacExtend",
            "707f76b8f57df9662a1e86c8adf403fdb75f1fb3"
        ],
        [
            "eapply cong3_preserves_out.",
            "VernacExtend",
            "578851a91f978e13212ac8da0c0e4a9bc9b129fc"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption; apply H8.",
            "VernacExtend",
            "b051b98d4bb13ba1b3f845e482f0c1c8a32bee33"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "unfold Out in H14.",
            "VernacExtend",
            "a9f0c3299dd9ca759896cff608320476550b88e1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "unfold Out in H14.",
            "VernacExtend",
            "a9f0c3299dd9ca759896cff608320476550b88e1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_21_b : forall A B C A' B' C', Out B A C -> Out B' A' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "bb4d3a2767be02d5f3d55594f64a194b3ccaf8b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong A B A0 A B.",
            "VernacExtend",
            "4d384413c585700bd0e49f48428e9be5e1a88360"
        ],
        [
            "prolong C B C0 B C.",
            "VernacExtend",
            "eb656a0090ee515601457248151290a8d180cf7f"
        ],
        [
            "prolong A' B' A1 A' B'.",
            "VernacExtend",
            "fdd9c134b9ca6d09180a623ea972164f367a4fb7"
        ],
        [
            "prolong C' B' C1 B' C'.",
            "VernacExtend",
            "bb166df0706a4293e2f07d8b2e4c340861f4f3db"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "eapply conga_line.",
            "VernacExtend",
            "f13f23caa3ece51bd9870090193c6b3d1a907aa2"
        ],
        [
            "5: apply between_symmetry.",
            "VernacExtend",
            "361b41f9f04d71bd5c608bf2599003fe22c1d4f5"
        ],
        [
            "5: apply H3.",
            "VernacExtend",
            "421414d696f47255553ab5e19ab16f25d963b2d4"
        ],
        [
            "5: apply between_symmetry.",
            "VernacExtend",
            "361b41f9f04d71bd5c608bf2599003fe22c1d4f5"
        ],
        [
            "5: apply H7.",
            "VernacExtend",
            "592c36087af1455710054bdc402cf4153ff20253"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply cong_symmetry in H8.",
            "VernacExtend",
            "a792bcd9aa6ae6e7244a55f9916d6ebcac537409"
        ],
        [
            "apply cong_identity in H8.",
            "VernacExtend",
            "14746d36fd8f9e68a633fac546ebc5ec1a3fa001"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_cop__or_out_ts : forall A B C C', Coplanar A B C C' -> CongA A B C A B C' -> Out B C C' \\/ TS A B C C'.",
            "VernacStartTheoremProof",
            "188906a00ff035ab801b5af13961550df92fb4ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 C1.",
            "VernacExtend",
            "e9691cd9730c56848501aa124c64ae972eb7f6d1"
        ],
        [
            "assert (A0=A1).",
            "VernacExtend",
            "98d169605de59a4682cafb099c1abfbe53ce76da"
        ],
        [
            "eapply construction_uniqueness.",
            "VernacExtend",
            "928b48d22b7aedfb9e2c53039ddcc1800f8bfaf9"
        ],
        [
            "3:apply H5.",
            "VernacExtend",
            "198568640e699767461c7e7562003b20a5e2a674"
        ],
        [
            "2:apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "induction (eq_dec_points C0 C1).",
            "VernacExtend",
            "6fdb8b3273d2b7c95067b509e18e865d4c611173"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(exists M, Midpoint M C0 C1).",
            "VernacExtend",
            "b1cddd6b95f51ae81744319da15a0328326f0c23"
        ],
        [
            "apply midpoint_existence.",
            "VernacExtend",
            "b6244e10bea79faf80652e3cfd7e41e28aa63090"
        ],
        [
            "ex_and H14 M.",
            "VernacExtend",
            "8efed51f93ad138744f063b5516aa7162592f276"
        ],
        [
            "assert(Cong B C0 B C1).",
            "VernacExtend",
            "36e09b430128559ff7f9d4a25c52ff5fc7c34baf"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per A0 M C0).",
            "VernacExtend",
            "d56bb021e477cb0f555a37fb8ef5e8681c5a19c8"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per B M C0).",
            "VernacExtend",
            "08309fd09c352205aa223429859d72a5ee5f4d43"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per A0 M C1).",
            "VernacExtend",
            "98e7bb9a421fc1ef73d11625fda0d1cafdb19d96"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per B M C1).",
            "VernacExtend",
            "02159d4f077c1d64f55dfdf33bcf60e63ed1c11c"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B <> A0).",
            "VernacExtend",
            "3251ecbba56a2c8f0a39834a96c7a458c3d5bd02"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A0.",
            "VernacExtend",
            "9350ad24ef9a137c87a04c94cf40961e615e4648"
        ],
        [
            "apply between_identity in H8.",
            "VernacExtend",
            "db1d1e8d67766dc35c1f8da88446c7d67412218e"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (Cong A C0 A C1).",
            "VernacExtend",
            "a08febcecf7de3f2f77a7c54c5d8e16f482edfad"
        ],
        [
            "eapply (l4_2 B A A0 C0 B A A0 C1).",
            "VernacExtend",
            "6c20bf51f26bbdf5a251b7f4905ddbc5cb0c8f1c"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "assert (Per A M C0).",
            "VernacExtend",
            "2fcb6ca09941b3b8150e668e9b332621fa0fbc0e"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Per A M C1).",
            "VernacExtend",
            "66e8e225cdd39c21db4e7daa3c9856d77ef23732"
        ],
        [
            "unfold Per.",
            "VernacExtend",
            "37c5e182af51240a790620af38dd30226754701e"
        ],
        [
            "exists C0.",
            "VernacExtend",
            "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col B A M).",
            "VernacExtend",
            "f4a012fd1b531ca5376782ccf942688f89b42510"
        ],
        [
            "apply cop_per2__col with C0.",
            "VernacExtend",
            "ce07a9406db6f9e74f43fc8afebae219c01b76c3"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with C1; Col.",
            "VernacExtend",
            "471be8dff71491813a64e99d4a83436c6c8c0085"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with C'; Col.",
            "VernacExtend",
            "15fecf0877bd3689f9c4aa68c1e171cee713b69a"
        ],
        [
            "apply coplanar_perm_5, col_cop__cop with C; Col; Cop.",
            "VernacExtend",
            "9195facb4c1403a6bad276dba9dd4b0e6b21d13b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H15.",
            "VernacExtend",
            "08ecf17fc40f19035130177696d718c0b19d9c9c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction(eq_dec_points B M).",
            "VernacExtend",
            "df99125de5ef2842672087e3d5f848b711d7cfbf"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "assert(~Col A B C).",
            "VernacExtend",
            "a75f346a3102b55e5f88c48f3e148b73c2675143"
        ],
        [
            "eapply per_not_col.",
            "VernacExtend",
            "b9b137b045f9958c97d3338071723a4e5e83bad3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "2:apply H23.",
            "VernacExtend",
            "fcebc5e71db3d5c69cef4ceea82c9bd114d2fee2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply l7_2 in H15.",
            "VernacExtend",
            "a72a265dc555d31361a23f0b7f952a5ffbda77ba"
        ],
        [
            "apply is_midpoint_id in H15.",
            "VernacExtend",
            "08ecf17fc40f19035130177696d718c0b19d9c9c"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(Bet C B C1).",
            "VernacExtend",
            "9420dc0dc30b9fadd1c538674f04f029111f639e"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A B C').",
            "VernacExtend",
            "b3f4dd5cd72725fa863127b5ea31bd4c5599e089"
        ],
        [
            "eapply per_not_col.",
            "VernacExtend",
            "b9b137b045f9958c97d3338071723a4e5e83bad3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "2:apply H23.",
            "VernacExtend",
            "fcebc5e71db3d5c69cef4ceea82c9bd114d2fee2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply l7_2 in H15.",
            "VernacExtend",
            "a72a265dc555d31361a23f0b7f952a5ffbda77ba"
        ],
        [
            "apply is_midpoint_id in H15.",
            "VernacExtend",
            "08ecf17fc40f19035130177696d718c0b19d9c9c"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(Bet C' B C0).",
            "VernacExtend",
            "e0c8e7e59aadc6c1507797caa329aa14443e0b8a"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS B M C0 C1).",
            "VernacExtend",
            "4999ed9985ffd77cc8ec339bfba804baf120def9"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply per_not_col in H17.",
            "VernacExtend",
            "b6d73dd759f59f13901a9ea8c6d0c202ea0c34d3"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply is_midpoint_id in H15.",
            "VernacExtend",
            "08ecf17fc40f19035130177696d718c0b19d9c9c"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply per_not_col in H19.",
            "VernacExtend",
            "4e14ffe53b4b298673632d7cbbc6a3763d6bdb2e"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply l7_2 in H15.",
            "VernacExtend",
            "a72a265dc555d31361a23f0b7f952a5ffbda77ba"
        ],
        [
            "apply is_midpoint_id in H15.",
            "VernacExtend",
            "08ecf17fc40f19035130177696d718c0b19d9c9c"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (col_two_sides _ _ A) in H26.",
            "VernacExtend",
            "8ba551c0ba0b67ef9330535aca01004258d0d951"
        ],
        [
            "apply invert_two_sides in H26.",
            "VernacExtend",
            "1ea4df176f80aa9aa045220757356161238e8a68"
        ],
        [
            "assert(TS A B C C1).",
            "VernacExtend",
            "ef9a91a994f991dfa13bd675060d9308453dc4f4"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply cong_symmetry in H14.",
            "VernacExtend",
            "8d073c91e01d81d936a7495f273984324f93e46c"
        ],
        [
            "apply cong_identity in H14.",
            "VernacExtend",
            "4fb614ce25d585e180b433d5b8882a8cceab3bf2"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C1.",
            "VernacExtend",
            "c80d581339ae7115459193b96b38ee79d63aa25d"
        ],
        [
            "apply cong_identity in H14.",
            "VernacExtend",
            "4fb614ce25d585e180b433d5b8882a8cceab3bf2"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_identity in H7.",
            "VernacExtend",
            "877c844bddd3f96125296719231865acd56e696c"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong2_conga_cong : forall A B C A' B' C', CongA A B C A' B' C' -> Cong A B A' B' -> Cong B C B' C' -> Cong A C A' C'.",
            "VernacStartTheoremProof",
            "dc77ddb90e7cea507ca7aecf9edc9b747e1b3f47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H5 A0.",
            "VernacExtend",
            "c195cf9c1eb1e84c31400c267b3dfd75224585e7"
        ],
        [
            "ex_and H6 C0.",
            "VernacExtend",
            "d74f9f3733124d4082f1638c8ab6761979ceb001"
        ],
        [
            "ex_and H5 A1.",
            "VernacExtend",
            "5657acae94f8469f547f30b9178bc090a0e314b4"
        ],
        [
            "ex_and H6 C1.",
            "VernacExtend",
            "a4428df8fbb39684fe44e61298e4cc28e24bbe16"
        ],
        [
            "assert(Cong A C0 A' C1).",
            "VernacExtend",
            "0f222fe1d2c4b037cf1f98bf0948c258c70a1685"
        ],
        [
            "eapply (l4_2 B A A0 C0 B' A' A1 C1).",
            "VernacExtend",
            "d3cde3267f1c5d70d31a63db73cf09830952f1b0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (l4_2 B C C0 A B' C' C1 A').",
            "VernacExtend",
            "477f2b48ab91ef9f6f98c12e56c9525d4ad92c78"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_construction_1 : forall A B C A' B' P, ~ Col A B C -> ~ Col A' B' P -> exists C', CongA A B C A' B' C' /\\ OS A' B' C' P.",
            "VernacStartTheoremProof",
            "67db3e3fe1e6ef9deabe357c5ba26a2d7dd2f1c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists C0, Col B A C0 /\\ Perp B A C C0).",
            "VernacExtend",
            "9d7af4bf484c53f9f858dc723e40c85b5f31ead4"
        ],
        [
            "eapply l8_18_existence.",
            "VernacExtend",
            "df75c2ab8ca9dd8ec29aa6aa5c029ed1fd38e82c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H1 C0.",
            "VernacExtend",
            "c806b2e0e0eaa4559c1d7e3b3ea349bf8128ea3c"
        ],
        [
            "induction(eq_dec_points B C0).",
            "VernacExtend",
            "42f63bafa810e67dd2bc8f77c6f822f88fc660db"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "assert (exists C', Per C' B' A' /\\ Cong C' B' C B /\\ OS A' B' C' P).",
            "VernacExtend",
            "85ce1b43f6065802780e66863360077594198e42"
        ],
        [
            "apply ex_per_cong.",
            "VernacExtend",
            "9f898bde89839616f5efe3144b688ed502be63bc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H3 C'.",
            "VernacExtend",
            "ff7aa28884c5cddf3e7b7dddf6bc8a3390ac22c5"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l11_16.",
            "VernacExtend",
            "46ed62d6f376e5dd887fc8175703556da3f25773"
        ],
        [
            "apply perp_perp_in in H2.",
            "VernacExtend",
            "e64bdb8f8bc417ba26c1fb3c48597c7117ce4842"
        ],
        [
            "apply perp_in_comm in H2.",
            "VernacExtend",
            "5a5732b1b007b9010bcefdde4321d2a0a03f2615"
        ],
        [
            "apply perp_in_per in H2.",
            "VernacExtend",
            "2445a892930ab9ef7507780b26d38cb8b3d4d25e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction (out_dec B A C0).",
            "VernacExtend",
            "cc97418af149256dc656c2a87733e1dec7a71134"
        ],
        [
            "assert (exists C0', Out B' A' C0' /\\ Cong B' C0' B C0).",
            "VernacExtend",
            "b790b9ca0579a68c276522e5e1f587fc950c318d"
        ],
        [
            "eapply segment_construction_3.",
            "VernacExtend",
            "ae1c22a0f4dec1e2cd8d9951bd338ef72a59b894"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert (Perp_at C0 C0 C B C0).",
            "VernacExtend",
            "60f31cbfd2d76b9afe655808a8fde43d10f6b826"
        ],
        [
            "eapply perp_perp_in.",
            "VernacExtend",
            "e8b0ad3190316a69836324ee6008c579dbbb2ddf"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_right_comm.",
            "VernacExtend",
            "6a9553d7478fff4e59a0eab006fbf6be02b3c425"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 C0'.",
            "VernacExtend",
            "d4bb712944acabf1305f2ea20002ce3d3d782aa6"
        ],
        [
            "assert (exists C' , Per C' C0' B' /\\ Cong C' C0' C C0 /\\ OS B' C0' C' P).",
            "VernacExtend",
            "cd18ff801788f42edbfa1a72c0bd0cf5026755cf"
        ],
        [
            "apply ex_per_cong.",
            "VernacExtend",
            "9f898bde89839616f5efe3144b688ed502be63bc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0'.",
            "VernacExtend",
            "3fe7d26c9e6d71de0ca9e3079f69f2809efa9260"
        ],
        [
            "unfold Out in H5.",
            "VernacExtend",
            "6f23c1eb503a2b86d00cebd1e7431c65d23ed46f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "unfold Perp in H2.",
            "VernacExtend",
            "69c1867abb2ae502c2a069b8886038551c1f0a9d"
        ],
        [
            "ex_and H2 X.",
            "VernacExtend",
            "584765fac00dcf6564004db17c6cd360a32e45ea"
        ],
        [
            "unfold Perp_at in H7.",
            "VernacExtend",
            "ac0a6c0316aed80f88b0a42599b0f9bb30c96afe"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ C0').",
            "VernacExtend",
            "e4afc8729070b2a0c29f3bb07815df25c54c86b0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0'.",
            "VernacExtend",
            "3fe7d26c9e6d71de0ca9e3079f69f2809efa9260"
        ],
        [
            "unfold Out in H5.",
            "VernacExtend",
            "6f23c1eb503a2b86d00cebd1e7431c65d23ed46f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H7 C'.",
            "VernacExtend",
            "bad7a136eacad3adc89dcbbc2ec8753367cfce42"
        ],
        [
            "assert (Cong_3 C0 B C C0' B' C').",
            "VernacExtend",
            "985d9eb3a0c76a9f1b7ff079a1f0459671450723"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (l10_12 _ C0).",
            "VernacExtend",
            "447b86a7bc42528fe39e814bf18c72f370f32bed"
        ],
        [
            "assert(Perp B C0 C C0 ).",
            "VernacExtend",
            "acc43b56690d4fbf9e919467675ff1040bd65561"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply perp_distinct in H2.",
            "VernacExtend",
            "8674c9f581def4adc1103779ff6fd8c50eddf0f4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_left_comm in H10.",
            "VernacExtend",
            "ccea309b6426b879bfd665731cb243c04622ff4e"
        ],
        [
            "apply perp_perp_in in H10.",
            "VernacExtend",
            "d8f60ce6d7119a38fdefc5bea0fe634e303aff2d"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "apply perp_in_comm.",
            "VernacExtend",
            "6033e0de5f3b46f2b2c7d2696e65f1e583bb90de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (l11_10 C0 _ _ C0').",
            "VernacExtend",
            "89b4b62d927a7c57019a897f110b8587b9df969c"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "3: apply H10.",
            "VernacExtend",
            "56efcbd38c1bf24962e8afcebb547bb1dc4a99b3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply l8_8 in H7.",
            "VernacExtend",
            "a610aaad45a19965a91d798a39db05eee539b2ff"
        ],
        [
            "subst C0'.",
            "VernacExtend",
            "3fe7d26c9e6d71de0ca9e3079f69f2809efa9260"
        ],
        [
            "unfold Out in H5.",
            "VernacExtend",
            "6f23c1eb503a2b86d00cebd1e7431c65d23ed46f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "eapply col_one_side.",
            "VernacExtend",
            "43fc3e7e66b404b27bea05901cca44841277c900"
        ],
        [
            "3: apply H9.",
            "VernacExtend",
            "21a30a5376434ee6934aa112ffab5de7953a864e"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply not_out_bet in H4.",
            "VernacExtend",
            "1f99b0bec2752a5cf79d6727c9eafdf8f9971d81"
        ],
        [
            "prolong A' B' C0' B C0.",
            "VernacExtend",
            "041469990e3ad184cdae0c876abbc952fe61cf4a"
        ],
        [
            "assert (exists C' , Per C' C0' B' /\\ Cong C' C0' C C0 /\\ OS B' C0' C' P).",
            "VernacExtend",
            "cd18ff801788f42edbfa1a72c0bd0cf5026755cf"
        ],
        [
            "apply ex_per_cong.",
            "VernacExtend",
            "9f898bde89839616f5efe3144b688ed502be63bc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0'.",
            "VernacExtend",
            "3fe7d26c9e6d71de0ca9e3079f69f2809efa9260"
        ],
        [
            "apply cong_symmetry in H6.",
            "VernacExtend",
            "f2e475504f72b29a1d8c93928252eeed5364eb72"
        ],
        [
            "apply cong_identity in H6.",
            "VernacExtend",
            "b38e5ad442835711351877bc021361c9f62c8afc"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply perp_distinct in H2.",
            "VernacExtend",
            "8674c9f581def4adc1103779ff6fd8c50eddf0f4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0'.",
            "VernacExtend",
            "3fe7d26c9e6d71de0ca9e3079f69f2809efa9260"
        ],
        [
            "apply cong_symmetry in H6.",
            "VernacExtend",
            "f2e475504f72b29a1d8c93928252eeed5364eb72"
        ],
        [
            "apply cong_identity in H6.",
            "VernacExtend",
            "b38e5ad442835711351877bc021361c9f62c8afc"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H7 C'.",
            "VernacExtend",
            "bad7a136eacad3adc89dcbbc2ec8753367cfce42"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (Cong_3 C0 B C C0' B' C').",
            "VernacExtend",
            "985d9eb3a0c76a9f1b7ff079a1f0459671450723"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (l10_12 _ C0 _ _ C0').",
            "VernacExtend",
            "1e471b8d84244870d92e0cc398043949e1df5a30"
        ],
        [
            "assert(Perp B C0 C C0 ).",
            "VernacExtend",
            "acc43b56690d4fbf9e919467675ff1040bd65561"
        ],
        [
            "eapply perp_col.",
            "VernacExtend",
            "5228c761bbb57429ffac8f73c41ad55a554557a6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C0.",
            "VernacExtend",
            "1c28dec596a8079c5433a81a39469f4215dcca12"
        ],
        [
            "apply perp_distinct in H2.",
            "VernacExtend",
            "8674c9f581def4adc1103779ff6fd8c50eddf0f4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply perp_left_comm in H10.",
            "VernacExtend",
            "ccea309b6426b879bfd665731cb243c04622ff4e"
        ],
        [
            "apply perp_perp_in in H10.",
            "VernacExtend",
            "d8f60ce6d7119a38fdefc5bea0fe634e303aff2d"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "apply perp_in_sym.",
            "VernacExtend",
            "24d80e91aafb00ee02dfda8e42383eea93b0e272"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "3: apply H10.",
            "VernacExtend",
            "56efcbd38c1bf24962e8afcebb547bb1dc4a99b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "eapply col_one_side.",
            "VernacExtend",
            "43fc3e7e66b404b27bea05901cca44841277c900"
        ],
        [
            "3: apply H9.",
            "VernacExtend",
            "21a30a5376434ee6934aa112ffab5de7953a864e"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_construction_2 : forall A B C A' B' P, A <> B -> A <> C -> B <> C -> A' <> B' -> ~ Col A' B' P -> exists C', CongA A B C A' B' C' /\\ (OS A' B' C' P \\/ Col A' B' C').",
            "VernacStartTheoremProof",
            "ba9652967a8bcad65325f1b54945fac8c8bdc12a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "induction (out_dec B A C).",
            "VernacExtend",
            "35a4f8aed37b990f3c420e70fa75bb6c7232c441"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(CongA A B A A B C).",
            "VernacExtend",
            "3107075212d292bf46f4a8ebdbba290fcc13336f"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "3: apply H5.",
            "VernacExtend",
            "198568640e699767461c7e7562003b20a5e2a674"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "2: apply H5.",
            "VernacExtend",
            "42fd69307b59659a584caffc20da7549c0e12154"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (CongA A B A A' B' A').",
            "VernacExtend",
            "8d718b6a1f1806205111bb88a10e68e92665d2e3"
        ],
        [
            "apply conga_trivial_1.",
            "VernacExtend",
            "8669d96b4f5304c16a55a2bb3a48a41bcfb1ca01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply not_out_bet in H5.",
            "VernacExtend",
            "26edfe47aacb0e3d9e28dcb06bb6637bcace1814"
        ],
        [
            "prolong A' B' C' A' B'.",
            "VernacExtend",
            "5d2498b383626748ceaef4ee5d2b8cd3facf5a0e"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply conga_line; try assumption.",
            "VernacExtend",
            "1141ae6b4b97c04376d812140040c52189b925a8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_symmetry in H7.",
            "VernacExtend",
            "2b5d0997ad66ff395cc4249320a9b8823ada01de"
        ],
        [
            "apply cong_identity in H7.",
            "VernacExtend",
            "877c844bddd3f96125296719231865acd56e696c"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists C' , CongA A B C A' B' C' /\\ OS A' B' C' P).",
            "VernacExtend",
            "9c394a270799c770b5e8a584d86c94059fd411e8"
        ],
        [
            "apply angle_construction_1.",
            "VernacExtend",
            "74d8fb9dd523eeb51ad6414d7d07a6c1c1bfc83f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 C'.",
            "VernacExtend",
            "bfb79a4fe42cb9056c9e3cce9e41f5a5d7ecfc35"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_conga_ts : forall A B C A' B' P, ~ Col A B C -> ~ Col A' B' P -> exists C' : Tpoint, CongA A B C A' B' C' /\\ TS A' B' C' P.",
            "VernacStartTheoremProof",
            "b2edcb97d8aeb3b20e666f45afb8d7e792adc119"
        ],
        [
            "intros A B C A' B' P HNCol HNCol'.",
            "VernacExtend",
            "2f83a168419de46d355a697df5966a1b97284602"
        ],
        [
            "assert (HP' : exists P', Midpoint A' P P') by (apply symmetric_point_construction).",
            "VernacExtend",
            "ef59e3b68faa2437abc65c5b764571f76aea6c65"
        ],
        [
            "destruct HP' as [P' HMid].",
            "VernacExtend",
            "fce25c8409942059a6a02e7a313ce7d830ef7a5d"
        ],
        [
            "assert (~ Col A' B' P').",
            "VernacExtend",
            "390d1cb69aaaf5f26cb807c9072e51b3632ce561"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HCol.",
            "VernacExtend",
            "7339a24608f9044c1539af209f14a20bfa73ed6f"
        ],
        [
            "apply HNCol'.",
            "VernacExtend",
            "fb819ec4f8becfebe1096d561a1bebf98865804c"
        ],
        [
            "assert (Col A' P P') by (apply midpoint_col; auto).",
            "VernacExtend",
            "f77d88f974d8fe0418559d0817a73c60f7bf0644"
        ],
        [
            "apply (col3 A' P'); Col.",
            "VernacExtend",
            "72a6d4e3f05707b2db07a1b31f54be3779bad285"
        ],
        [
            "intro; treat_equalities; Col.",
            "VernacExtend",
            "4802ddf4d57a9004d828701fbcf4b13350447146"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HC' : exists C', CongA A B C A' B' C' /\\ OS A' B' C' P').",
            "VernacExtend",
            "b23f65a3dad0125c0a78cfebd6892258f51b6ad5"
        ],
        [
            "apply (angle_construction_1 A B C A' B' P'); auto.",
            "VernacExtend",
            "fd1a96273dc32707e9aa9d73093b2f9822d28710"
        ],
        [
            "destruct HC' as [C' [HConga HOne]].",
            "VernacExtend",
            "c989ba7f855e0c31b557c9480955d75eabe57cb5"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (l9_8_2 A' B' P'); Side.",
            "VernacExtend",
            "e11204e8f729306d3a3545ba71d7c488b2d05240"
        ],
        [
            "split; Col; split; Col.",
            "VernacExtend",
            "dfbb5da03e4a7eeaf33516d2b5cb2c9143118b51"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "destruct HMid; Between.",
            "VernacExtend",
            "c659d5e33d9a936d5eea838076d3f86c8dce5281"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_15 : forall A B C D E P, ~ Col A B C -> ~ Col D E P -> exists F, CongA A B C D E F /\\ OS E D F P /\\ (forall F1 F2, ((CongA A B C D E F1 /\\ OS E D F1 P) /\\ (CongA A B C D E F2 /\\ OS E D F2 P)) -> Out E F1 F2).",
            "VernacStartTheoremProof",
            "0b73fe10240aa6bdcd017c6ff409002afd2e594e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(exists F, CongA A B C D E F /\\ OS D E F P) by (apply angle_construction_1; assumption).",
            "VernacExtend",
            "fd5c1b5bfa689adaedf53fe7f39dbf10dfb3980c"
        ],
        [
            "ex_and H1 F.",
            "VernacExtend",
            "d306baa7d527b0b331f690ef9a98aec43bcede69"
        ],
        [
            "exists F.",
            "VernacExtend",
            "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Out E F1 F2 \\/ TS D E F1 F2).",
            "VernacExtend",
            "9d0d7d11731e92259cd2c1601bbd91e1f23b10ed"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "apply coplanar_trans_1 with P; Cop; Col.",
            "VernacExtend",
            "dd0c92f6864fce10afaa3367334259142a6e10b3"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS E D F1 F2).",
            "VernacExtend",
            "b359bb6dd1ec5d8a5369dc58815fc1b0a91c4063"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9_bis in H8.",
            "VernacExtend",
            "7edf3d90d3db0f77a0477f6689ead0f9e991bc27"
        ],
        [
            "apply invert_two_sides in H7.",
            "VernacExtend",
            "4a8e1786d8685479c83d5ee5749b71254bfa18b5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_19 : forall A B P1 P2, Per A B P1 -> Per A B P2 -> OS A B P1 P2 -> Out B P1 P2.",
            "VernacStartTheoremProof",
            "39d218cb16bdfca638a13e5e21e060befc0286e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B P1).",
            "VernacExtend",
            "cca8c65a51b9c78dd1884e5aed0496236c4e5c0c"
        ],
        [
            "induction (l8_9 A B P1 H H2).",
            "VernacExtend",
            "0bd195dbbaafae802f430ca5fe9697a2cb26b77d"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold OS in *.",
            "VernacExtend",
            "cd76f8c4e11f26cab9d20dfba51500620a412323"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold OS in *.",
            "VernacExtend",
            "cd76f8c4e11f26cab9d20dfba51500620a412323"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Col B A B) by Col.",
            "VernacExtend",
            "50ad34647c9b84020cbd9d5e75cd9e6d32b20ccc"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "induction (col_dec A B P2).",
            "VernacExtend",
            "528bfabfec5c1735c2f2eaeb204f6a6c93076bca"
        ],
        [
            "induction (l8_9 A B P2 H0 ).",
            "VernacExtend",
            "31fc75f28d205ff239791dbd259f97ed6b27de52"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold OS in *.",
            "VernacExtend",
            "cd76f8c4e11f26cab9d20dfba51500620a412323"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold OS in *.",
            "VernacExtend",
            "cd76f8c4e11f26cab9d20dfba51500620a412323"
        ],
        [
            "decompose [ex and] H1.",
            "VernacExtend",
            "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (Col B A B) by Col.",
            "VernacExtend",
            "50ad34647c9b84020cbd9d5e75cd9e6d32b20ccc"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (T:=l11_15 A B P1 A B P2 H2 H3).",
            "VernacExtend",
            "03872e67191b7aa69aafddd74cc0478cf53451a7"
        ],
        [
            "decompose [ex and] T.",
            "VernacExtend",
            "845e0c75fa3b8c08205b14839897fbb96a918988"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "apply invert_one_side;auto.",
            "VernacExtend",
            "e6e952a98f9bc558ae73d1b9614cafb01ea3be55"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_16;try assumption.",
            "VernacExtend",
            "b728f16146c3525bf98427c76cbe4e765281b5e7"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "intro;subst;Col.",
            "VernacExtend",
            "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
        ],
        [
            "apply one_side_reflexivity.",
            "VernacExtend",
            "c84eac66c6c443db72592068bf2d3592bf46556c"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_22_bet : forall A B C P A' B' C' P', Bet A B C -> TS P' B' A' C' -> CongA A B P A' B' P' /\\ CongA P B C P' B' C' -> Bet A' B' C'.",
            "VernacStartTheoremProof",
            "0760aa7c4744c3cd46de11be7ec40092a104e08e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong A' B' C'' B C.",
            "VernacExtend",
            "72c83f476257b3084ac5c656389a3c70ae4058ef"
        ],
        [
            "assert(CongA C B P C'' B' P').",
            "VernacExtend",
            "868317f92ec8d4e067fc8472f924f6ce870e67fc"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "2:apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold CongA in H2.",
            "VernacExtend",
            "5a583af2a0e6f0922843a8b77426ccdd825c8e6e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold CongA in H2.",
            "VernacExtend",
            "5a583af2a0e6f0922843a8b77426ccdd825c8e6e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (CongA C'' B' P' C' B' P').",
            "VernacExtend",
            "24f1455d73d93eede217e4e4ea4dc67837530c65"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B' C' C'' \\/ TS P' B' C' C'').",
            "VernacExtend",
            "c5f653cd3fc52bff3cecb42e86f0c8cd3bfff18a"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "apply coplanar_perm_2, col_cop__cop with A'; Col; Cop.",
            "VernacExtend",
            "fde338ea2dd56c4abdc40a179b7ddb8a24829217"
        ],
        [
            "apply ts_distincts in H0.",
            "VernacExtend",
            "658d625dfb0fd1b362542b6571c315d23468b0ba"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (col_dec C' B' P').",
            "VernacExtend",
            "16961b3e7d3870c0db24917172ac17d1c61ebb4e"
        ],
        [
            "unfold TS in H7.",
            "VernacExtend",
            "b75221911ade4858c208f61d6a8d248586e176c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B' <> P').",
            "VernacExtend",
            "43c5d51aecaecdeeb0abd278b1f22a0ece8b90ee"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert (TS B' P' A' C'').",
            "VernacExtend",
            "9c5ec511899afd9984cc1d0bdedf0ccd010d56f5"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in H7.",
            "VernacExtend",
            "b75221911ade4858c208f61d6a8d248586e176c8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (OS B' P' C' C'').",
            "VernacExtend",
            "1b4cf06437e0c5c90739f0c5529895653df316a1"
        ],
        [
            "eapply l9_8_1.",
            "VernacExtend",
            "953c2bdb009f55a5d83b63a40340993dbf0d385a"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9_bis in H11.",
            "VernacExtend",
            "8e7207e3533504e193f91812016ac1dc730aa828"
        ],
        [
            "apply invert_two_sides in H7.",
            "VernacExtend",
            "4a8e1786d8685479c83d5ee5749b71254bfa18b5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_22a : forall A B C P A' B' C' P', TS B P A C /\\ TS B' P' A' C' /\\ CongA A B P A' B' P' /\\ CongA P B C P' B' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "738721e59ed18b05913a5b0f8b497dbf82543d13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (A <> B /\\ A' <> B' /\\ P <> B /\\ P' <> B' /\\ C <> B /\\ C' <> B').",
            "VernacExtend",
            "d9d3e588914c145811875e38201f666bc84f50a3"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "assert(A <> C /\\ A' <> C').",
            "VernacExtend",
            "b63d9301fa883a15c8018e2f0773823c71f0ebca"
        ],
        [
            "unfold TS in *.",
            "VernacExtend",
            "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H12 T.",
            "VernacExtend",
            "c80a783c786975fef6032eea7928ef33ba0d36c9"
        ],
        [
            "ex_and H10 T'.",
            "VernacExtend",
            "636e7efe68a76a797ef00d99a259baa87b3e2238"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply between_identity in H13.",
            "VernacExtend",
            "bae2d01c6686e5329b814c14e18fbe027b8cc4b7"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply between_identity in H14.",
            "VernacExtend",
            "dd40eb6ccf09ca19ddea163c0fb0f12e6ce4aa92"
        ],
        [
            "subst T'.",
            "VernacExtend",
            "566a30e15290d458b2c8f816289702675941bfb9"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(exists A'', Out B' A' A'' /\\ Cong B' A'' B A).",
            "VernacExtend",
            "228c0e84e628b45383533a9699e4983e5831ef8f"
        ],
        [
            "eapply segment_construction_3; auto.",
            "VernacExtend",
            "87ba654da4efd3e71a3980be28762b15dd6fed3e"
        ],
        [
            "ex_and H11 A''.",
            "VernacExtend",
            "45cbe4b1122ed3751da671f2aab2fd394d2efefa"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "assert (~ Col A B P).",
            "VernacExtend",
            "de0c070b36fb16d3168a4b57230c02997d2f3f98"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H15 T.",
            "VernacExtend",
            "7002d92cf2beae01394b8bca2049e0c4e04744ce"
        ],
        [
            "induction (eq_dec_points B T).",
            "VernacExtend",
            "360a9cc9d7507340b21412f8345a7276861efb80"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "assert(Bet A' B' C').",
            "VernacExtend",
            "366b0410634258f4be5168e9436d49c04bb8064d"
        ],
        [
            "eapply l11_22_bet.",
            "VernacExtend",
            "95cb72ff656c574c6b0c4f79154cd047e81d7aef"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_line.",
            "VernacExtend",
            "f441d8cce97ea60aafe1d6602853e364f2162e08"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction(bet_dec P B T).",
            "VernacExtend",
            "120e1a3a7bbe1118f0f6e15d17e25a0421610b9b"
        ],
        [
            "assert(exists T'', Col B' P' T'' /\\ (Out B' P' T'' <-> Out B P T) /\\ Cong B' T'' B T).",
            "VernacExtend",
            "88b6de18ef578385094e2d7e129f1af6886e3867"
        ],
        [
            "prolong P' B' T'' B T.",
            "VernacExtend",
            "ecdd009bd04c11431099b22f7fd2f6c09cdd06b5"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Bet P' B' T'' /\\ Out B' P' T'').",
            "VernacExtend",
            "847358eb493f316bf77b29fc11bed92b70307344"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply (not_bet_and_out _ _ _)in H22.",
            "VernacExtend",
            "b6d7c855a1dacfe936345a2b35162fd30491ef0c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Bet P B T /\\ Out B P T).",
            "VernacExtend",
            "165e68776946eaba21be93b22b0f50fd86bb5c1d"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply (not_bet_and_out _ _ _)in H22.",
            "VernacExtend",
            "b6d7c855a1dacfe936345a2b35162fd30491ef0c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H19 T''.",
            "VernacExtend",
            "6120b21257e09771167f4b68102383161f3faa27"
        ],
        [
            "destruct H20.",
            "VernacExtend",
            "5ccb2db246ba9a3a83d9296346907923cdae41f4"
        ],
        [
            "assert (B' <> T'').",
            "VernacExtend",
            "d92c38490481cd67f668f0cb12a54e2e44b9975d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T''.",
            "VernacExtend",
            "7416ac217d3f41e8cd2b6fcd0e7232eafe6f4bff"
        ],
        [
            "apply cong_symmetry in H21.",
            "VernacExtend",
            "b5db870d692ef5f71136add7c2ab13f6117b5b40"
        ],
        [
            "apply cong_identity in H21.",
            "VernacExtend",
            "e5b1b7416b6de6dc4c8895f510a9b60e15b79c6c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(exists C'', Bet A'' T'' C'' /\\ Cong T'' C'' T C).",
            "VernacExtend",
            "ef0d6ed0f450aad1a58f49334375af29d33030e6"
        ],
        [
            "prolong A'' T'' C'' T C.",
            "VernacExtend",
            "60eb4800d56efac3a7074c8c2e76c80b80dae8f4"
        ],
        [
            "exists C''.",
            "VernacExtend",
            "edc38b8d7fa02aad35e67a5b3b120d25fe938d4b"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "ex_and H24 C''.",
            "VernacExtend",
            "48a2e63f77a43d287c8dfb960b0a84b2d458b939"
        ],
        [
            "assert(CongA A B T A' B' T'').",
            "VernacExtend",
            "246026ffb0435d3182279ee45bf5d57494971afa"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply out_to_bet.",
            "VernacExtend",
            "a16ddcce4d52c0caf0eb393d71d586f07e17ffe5"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(CongA A B T A'' B' T'').",
            "VernacExtend",
            "0fb17fa1f2962a210807f721295963e9b9a83bb4"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong A T A'' T'').",
            "VernacExtend",
            "a525772c303ea6c0ab0fd4e1b65a9b023197a1af"
        ],
        [
            "assert(HH:= l11_4_1 A B T A'' B' T'' H27).",
            "VernacExtend",
            "6364e358a8f618472d9a80c761749c0410fbad76"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A C A'' C'').",
            "VernacExtend",
            "c9a86dff7069454110024ab718b882544b8e49b1"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong C B C'' B').",
            "VernacExtend",
            "69a7c8e561a1d19f2300d6ddb7b3f93aed4c9693"
        ],
        [
            "eapply (five_segment).",
            "VernacExtend",
            "39b7d2efbbd428556c90ee0c50ac8c322501433c"
        ],
        [
            "5:apply H16.",
            "VernacExtend",
            "6e0b8b0522e58c5016b2c61d209163e882f94273"
        ],
        [
            "5: apply H24.",
            "VernacExtend",
            "4edb2487db60f9119bcdff0aa1487b577c3df8a1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B C A'' B' C'').",
            "VernacExtend",
            "40e096d40f1b5a0a3d7a27aa3c4ba3a15c613d93"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA C B T C'' B' T'').",
            "VernacExtend",
            "d0f31426947c106327ffb306ef9aded2a3592f21"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (CongA P B C P' B' C'').",
            "VernacExtend",
            "6ddf261d2a907b7d6c80bcc42e883eb95c823d08"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply out_to_bet.",
            "VernacExtend",
            "a16ddcce4d52c0caf0eb393d71d586f07e17ffe5"
        ],
        [
            "eapply col_permutation_4.",
            "VernacExtend",
            "6448c0c8e46631f6b1f28533f911e46c9b00ea3a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA P' B' C' P' B' C'').",
            "VernacExtend",
            "0fcda185fadf5f42c0262bda66b24059396e9a96"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B' C' C'' \\/ TS P' B' C' C'').",
            "VernacExtend",
            "c5f653cd3fc52bff3cecb42e86f0c8cd3bfff18a"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "assert (HH := H0); destruct HH as [HNCol].",
            "VernacExtend",
            "dd0ef4b275977866e6082ce062c299c62eeb435f"
        ],
        [
            "apply coplanar_trans_1 with A'; Col.",
            "VernacExtend",
            "8ee8a93e92bc295c8e9c0c919ad87c3f150ea8aa"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "assert_diffs; apply coplanar_perm_19, col_cop__cop with A''; Col.",
            "VernacExtend",
            "294005be5686f021c17e80e9f2f6f674b4663e25"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H35.",
            "VernacExtend",
            "1751da0e1b2bc33a5760e1cf9219d52d578e3a04"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS B' P' A'' C').",
            "VernacExtend",
            "4d8b510df620522b8c94f79c5b23b3adbe6e5685"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "eapply l9_2.",
            "VernacExtend",
            "fe70237bb3d06b84fbeeb187d327ceec9760f0e4"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply invert_two_sides in H35.",
            "VernacExtend",
            "91601dd1f4b0d0d7d45beb4cd9d1692aa1fdca7a"
        ],
        [
            "apply l9_2 in H35.",
            "VernacExtend",
            "18d9c7964077e20e11d6edaf5060d6684beb60b5"
        ],
        [
            "assert(OS B' P' A'' C'').",
            "VernacExtend",
            "10a45e65f5f4d7af0d777ccde831f40e2a7bb52e"
        ],
        [
            "unfold OS.",
            "VernacExtend",
            "d85022c924d39e7ed2613a927522f51546c456c6"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "assert (TS B' P' A'' C'').",
            "VernacExtend",
            "c91ec2edfd57b298a55b9a2c7d7c234b841ff93b"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "assert (~ Col A' B' P').",
            "VernacExtend",
            "390d1cb69aaaf5f26cb807c9072e51b3632ce561"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H39.",
            "VernacExtend",
            "fbc71591654f498cde5d521250c0183ea3a4035a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ A'').",
            "VernacExtend",
            "581941c774f568b82e00b58a1bc0b324b60de236"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "unfold Out in H11.",
            "VernacExtend",
            "8262d933ecf064ae701cf0b308784cbf90d0f76b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col in H11.",
            "VernacExtend",
            "bbf836a1acbecb0ab25c784d568bbb07a973f538"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in H35.",
            "VernacExtend",
            "efa72bb8b932dc378dbf705fbcabf995de3d4b09"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H35.",
            "VernacExtend",
            "446ff734ea5fe0387fc2960aa2d2bb1776982900"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H38.",
            "VernacExtend",
            "10c031d0201480ece39b8274832e9631731b27d8"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply not_bet_out in H18.",
            "VernacExtend",
            "3610c759e0b83959dd1f7445735f1816f6ab5184"
        ],
        [
            "assert(exists T'', Col B' P' T'' /\\ (Out B' P' T'' <-> Out B P T) /\\ Cong B' T'' B T).",
            "VernacExtend",
            "88b6de18ef578385094e2d7e129f1af6886e3867"
        ],
        [
            "assert (exists T'', Out B' P' T'' /\\ Cong B' T'' B T).",
            "VernacExtend",
            "80cc7721de23f186ca0798792f6e347c52b93c38"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H19 T''.",
            "VernacExtend",
            "6120b21257e09771167f4b68102383161f3faa27"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_col in H19.",
            "VernacExtend",
            "fedf720c6cb69f5127824c8d3c6fb62715f6fafd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H19 T''.",
            "VernacExtend",
            "6120b21257e09771167f4b68102383161f3faa27"
        ],
        [
            "destruct H20.",
            "VernacExtend",
            "5ccb2db246ba9a3a83d9296346907923cdae41f4"
        ],
        [
            "assert (B' <> T'').",
            "VernacExtend",
            "d92c38490481cd67f668f0cb12a54e2e44b9975d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T''.",
            "VernacExtend",
            "7416ac217d3f41e8cd2b6fcd0e7232eafe6f4bff"
        ],
        [
            "apply cong_symmetry in H21.",
            "VernacExtend",
            "b5db870d692ef5f71136add7c2ab13f6117b5b40"
        ],
        [
            "apply cong_identity in H21.",
            "VernacExtend",
            "e5b1b7416b6de6dc4c8895f510a9b60e15b79c6c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(exists C'', Bet A'' T'' C'' /\\ Cong T'' C'' T C).",
            "VernacExtend",
            "ef0d6ed0f450aad1a58f49334375af29d33030e6"
        ],
        [
            "prolong A'' T'' C'' T C.",
            "VernacExtend",
            "60eb4800d56efac3a7074c8c2e76c80b80dae8f4"
        ],
        [
            "exists C''.",
            "VernacExtend",
            "edc38b8d7fa02aad35e67a5b3b120d25fe938d4b"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "ex_and H24 C''.",
            "VernacExtend",
            "48a2e63f77a43d287c8dfb960b0a84b2d458b939"
        ],
        [
            "assert(CongA A B T A' B' T'').",
            "VernacExtend",
            "246026ffb0435d3182279ee45bf5d57494971afa"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B T A'' B' T'').",
            "VernacExtend",
            "0fb17fa1f2962a210807f721295963e9b9a83bb4"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong A T A'' T'').",
            "VernacExtend",
            "a525772c303ea6c0ab0fd4e1b65a9b023197a1af"
        ],
        [
            "assert(HH:= l11_4_1 A B T A'' B' T'' H27).",
            "VernacExtend",
            "6364e358a8f618472d9a80c761749c0410fbad76"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A C A'' C'').",
            "VernacExtend",
            "c9a86dff7069454110024ab718b882544b8e49b1"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong C B C'' B').",
            "VernacExtend",
            "69a7c8e561a1d19f2300d6ddb7b3f93aed4c9693"
        ],
        [
            "eapply (five_segment).",
            "VernacExtend",
            "39b7d2efbbd428556c90ee0c50ac8c322501433c"
        ],
        [
            "5:apply H16.",
            "VernacExtend",
            "6e0b8b0522e58c5016b2c61d209163e882f94273"
        ],
        [
            "5: apply H24.",
            "VernacExtend",
            "4edb2487db60f9119bcdff0aa1487b577c3df8a1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B C A'' B' C'').",
            "VernacExtend",
            "40e096d40f1b5a0a3d7a27aa3c4ba3a15c613d93"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA C B T C'' B' T'').",
            "VernacExtend",
            "d0f31426947c106327ffb306ef9aded2a3592f21"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B' C' C'' \\/ TS P' B' C' C'').",
            "VernacExtend",
            "c5f653cd3fc52bff3cecb42e86f0c8cd3bfff18a"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "assert (HH := H0); destruct HH as [HNCol].",
            "VernacExtend",
            "dd0ef4b275977866e6082ce062c299c62eeb435f"
        ],
        [
            "apply coplanar_trans_1 with A'; Col.",
            "VernacExtend",
            "8ee8a93e92bc295c8e9c0c919ad87c3f150ea8aa"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "assert_diffs; apply coplanar_perm_19, col_cop__cop with A''; Col.",
            "VernacExtend",
            "294005be5686f021c17e80e9f2f6f674b4663e25"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "apply cong_identity in H30.",
            "VernacExtend",
            "2c416ab1116b7db1503eb42eaa511c23e57ba5ac"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H33.",
            "VernacExtend",
            "d18daa923b19d30d5d1a20da69db946692085bd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS B' P' A'' C').",
            "VernacExtend",
            "4d8b510df620522b8c94f79c5b23b3adbe6e5685"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "eapply l9_2.",
            "VernacExtend",
            "fe70237bb3d06b84fbeeb187d327ceec9760f0e4"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(OS B' P' A'' C'').",
            "VernacExtend",
            "10a45e65f5f4d7af0d777ccde831f40e2a7bb52e"
        ],
        [
            "unfold OS.",
            "VernacExtend",
            "d85022c924d39e7ed2613a927522f51546c456c6"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_two_sides in H33.",
            "VernacExtend",
            "2b5a1ea43142eb35bb798569ef6cec52ab6121e8"
        ],
        [
            "apply l9_2 in H33.",
            "VernacExtend",
            "71eed1fa046fbeaafdfe7ab7fa0cf90ff008a61d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (TS B' P' A'' C'').",
            "VernacExtend",
            "c91ec2edfd57b298a55b9a2c7d7c234b841ff93b"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in H34.",
            "VernacExtend",
            "1949c93ff24ca5ca7b25bbe6b008fac3621312a3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H34.",
            "VernacExtend",
            "62ec2e16a7d426f9dc6512daf474854ddf5a0c13"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold TS in H33.",
            "VernacExtend",
            "c7145391680cf8a397b483219598963f3193b3b2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H37.",
            "VernacExtend",
            "a27e03502368c6421a89533a01e0c89981b355e4"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists T''.",
            "VernacExtend",
            "b5139817f47d6e700cd15a6804575763e4a3f050"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H36.",
            "VernacExtend",
            "88bc0d42fafb45f8dbd2a13554b591c1fdebb148"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_22b : forall A B C P A' B' C' P', OS B P A C /\\ OS B' P' A' C' /\\ CongA A B P A' B' P' /\\ CongA P B C P' B' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "7d8eeddcf7de6817bbdece9795a5e1b3ec62c250"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "prolong A B D A B.",
            "VernacExtend",
            "69f98b6fdf4c363f9e8533bb5f4e10c3f93885c5"
        ],
        [
            "prolong A' B' D' A' B'.",
            "VernacExtend",
            "388b8fdf5f0376263fbececa1215e894ece2060b"
        ],
        [
            "assert(CongA D B P D' B' P').",
            "VernacExtend",
            "50689d45201e2a79871999967cdd58ea9ebccad8"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "unfold CongA in H1.",
            "VernacExtend",
            "9af324924100d7f008a39ebfc0ac0eb793bbfe25"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "apply cong_symmetry in H6.",
            "VernacExtend",
            "f2e475504f72b29a1d8c93928252eeed5364eb72"
        ],
        [
            "apply cong_identity in H6.",
            "VernacExtend",
            "b38e5ad442835711351877bc021361c9f62c8afc"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "unfold CongA in H1.",
            "VernacExtend",
            "9af324924100d7f008a39ebfc0ac0eb793bbfe25"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert (CongA D B C D' B' C').",
            "VernacExtend",
            "e3fc592fa6a2ee230b8b453fd63114c13bbb43d5"
        ],
        [
            "eapply (l11_22a _ _ _ P _ _ _ P').",
            "VernacExtend",
            "810a352675ba1e484c1be5280a96c626387fdf2e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l9_2.",
            "VernacExtend",
            "fe70237bb3d06b84fbeeb187d327ceec9760f0e4"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "2: apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "unfold OS in H.",
            "VernacExtend",
            "0ceff66c081ad02350f4a7c193cf5e7c07251364"
        ],
        [
            "ex_and H T.",
            "VernacExtend",
            "baca6f2ffd978caa6322cc3280b1eeae0389e36e"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "unfold TS in H8.",
            "VernacExtend",
            "75a71d14673b58a1d11e1d6c6d843623779f71ee"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "unfold CongA in H7.",
            "VernacExtend",
            "7b4eab89c8bd2b565ff0638d85bab854c46f71ff"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l9_2.",
            "VernacExtend",
            "fe70237bb3d06b84fbeeb187d327ceec9760f0e4"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "unfold OS in H0.",
            "VernacExtend",
            "ce018cb2d959d9569f9294982122f962357efe7b"
        ],
        [
            "ex_and H0 T'.",
            "VernacExtend",
            "cddba9daadb8e88f0909e5d310ffd9ad23f6d414"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "unfold TS in H8.",
            "VernacExtend",
            "75a71d14673b58a1d11e1d6c6d843623779f71ee"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ D').",
            "VernacExtend",
            "30db6c21549d9ac205d2131e7bd601fcaa5ee68e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D'.",
            "VernacExtend",
            "90883c1e3b4b5d1a6ec16a3d79af1cd8365f4ffa"
        ],
        [
            "unfold CongA in H7.",
            "VernacExtend",
            "7b4eab89c8bd2b565ff0638d85bab854c46f71ff"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "unfold CongA in H1.",
            "VernacExtend",
            "9af324924100d7f008a39ebfc0ac0eb793bbfe25"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "unfold CongA in H1.",
            "VernacExtend",
            "9af324924100d7f008a39ebfc0ac0eb793bbfe25"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_22 : forall A B C P A' B' C' P', ((TS B P A C /\\ TS B' P' A' C')\\/ (OS B P A C /\\ OS B' P' A' C')) /\\ CongA A B P A' B' P' /\\ CongA P B C P' B' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "993130b1a31f7238a4928d16fe68630f1be2cbdc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "eapply (l11_22a _ _ _ P _ _ _ P');tauto.",
            "VernacExtend",
            "db0434ea98233bc67070b2fa59ef3bdf17100f04"
        ],
        [
            "eapply (l11_22b _ _ _ P _ _ _ P');tauto.",
            "VernacExtend",
            "27aab7e6bc4ce0f49f2db535df48806f01e5a91b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_24 : forall P A B C, InAngle P A B C -> InAngle P C B A.",
            "VernacStartTheoremProof",
            "0bb48d913ac5532558b04236c16264971f9437ba"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H2 X.",
            "VernacExtend",
            "584765fac00dcf6564004db17c6cd360a32e45ea"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_in_angle : forall A B C P, Out B A C -> Out B P A -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "70ed39f484fdfe80425f47285e2bc65ca0888ac5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H4; induction H2.",
            "VernacExtend",
            "c471bcbd368393d9e72eb9763a2e21d40203038e"
        ],
        [
            "assert(exists X, Midpoint X A C).",
            "VernacExtend",
            "e94ef3cbece3c79ea1b0ded1c28e734bd37a94fb"
        ],
        [
            "eapply midpoint_existence.",
            "VernacExtend",
            "2bc8fbb43b6c95256493fa99773f53a020593542"
        ],
        [
            "ex_and H5 X.",
            "VernacExtend",
            "ca2ea52a9ad948e2b54c82d2f2e94e2f61de9ad6"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply midpoint_bet in H6.",
            "VernacExtend",
            "eea9460360ce23a9b37a6d2233ec6cbc8d255622"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "induction (eq_dec_points P A).",
            "VernacExtend",
            "50be2f8fa7b00849bb696c0b635a4c5ef3faa7ec"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet P A C).",
            "VernacExtend",
            "19e1793de3d4b2357e8789e1d67619c16a7208e8"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet P A X).",
            "VernacExtend",
            "bb9b94f0df63d522d5aa5b5da8570419d68d2f64"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists X, Midpoint X A C).",
            "VernacExtend",
            "e94ef3cbece3c79ea1b0ded1c28e734bd37a94fb"
        ],
        [
            "eapply midpoint_existence.",
            "VernacExtend",
            "2bc8fbb43b6c95256493fa99773f53a020593542"
        ],
        [
            "ex_and H5 X.",
            "VernacExtend",
            "ca2ea52a9ad948e2b54c82d2f2e94e2f61de9ad6"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply midpoint_bet in H6.",
            "VernacExtend",
            "eea9460360ce23a9b37a6d2233ec6cbc8d255622"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B C P \\/ Bet B P C).",
            "VernacExtend",
            "23a531f0a21d6fd736d93a02e4e8ce5d2ae3f663"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(Bet B X C).",
            "VernacExtend",
            "978c17f15e8ee6291ddd26b93b06ed2cfecdc9df"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B A X).",
            "VernacExtend",
            "9d550657acf60cd620e7845c7bb42611af2cc915"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B P C \\/ Bet B C P).",
            "VernacExtend",
            "6a12ea50ee20305dcfa8754d35880c75bbbd06ab"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "assert(exists X, Midpoint X A C).",
            "VernacExtend",
            "e94ef3cbece3c79ea1b0ded1c28e734bd37a94fb"
        ],
        [
            "eapply midpoint_existence.",
            "VernacExtend",
            "2bc8fbb43b6c95256493fa99773f53a020593542"
        ],
        [
            "ex_and H6 X.",
            "VernacExtend",
            "25fcabcd0369758b80fd495d8727c671ece6986c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply midpoint_bet in H7.",
            "VernacExtend",
            "8cdd130637af7f23bb2dfb2e501e50ba2098e552"
        ],
        [
            "apply between_symmetry in H7.",
            "VernacExtend",
            "6a73f9f2ecfe1696c142579e1e7346f65147ff9b"
        ],
        [
            "assert (C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(Bet B C X).",
            "VernacExtend",
            "63d5d55d4c8d1ff8aa91d0488cf8bec50953333b"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists X, Midpoint X A C).",
            "VernacExtend",
            "e94ef3cbece3c79ea1b0ded1c28e734bd37a94fb"
        ],
        [
            "eapply midpoint_existence.",
            "VernacExtend",
            "2bc8fbb43b6c95256493fa99773f53a020593542"
        ],
        [
            "ex_and H6 X.",
            "VernacExtend",
            "25fcabcd0369758b80fd495d8727c671ece6986c"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply midpoint_bet in H7.",
            "VernacExtend",
            "8cdd130637af7f23bb2dfb2e501e50ba2098e552"
        ],
        [
            "apply between_symmetry in H7.",
            "VernacExtend",
            "6a73f9f2ecfe1696c142579e1e7346f65147ff9b"
        ],
        [
            "assert (C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet B C X).",
            "VernacExtend",
            "63d5d55d4c8d1ff8aa91d0488cf8bec50953333b"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "eapply l7_2.",
            "VernacExtend",
            "26f6438992aee2c1c749148ef57b8a0bdda90f82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists X, Midpoint X A C).",
            "VernacExtend",
            "e94ef3cbece3c79ea1b0ded1c28e734bd37a94fb"
        ],
        [
            "eapply midpoint_existence.",
            "VernacExtend",
            "2bc8fbb43b6c95256493fa99773f53a020593542"
        ],
        [
            "ex_and H5 X.",
            "VernacExtend",
            "ca2ea52a9ad948e2b54c82d2f2e94e2f61de9ad6"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply midpoint_bet in H6.",
            "VernacExtend",
            "eea9460360ce23a9b37a6d2233ec6cbc8d255622"
        ],
        [
            "apply between_symmetry in H6.",
            "VernacExtend",
            "40084f2e1a01a796d7865e8404c34abe8fe230dd"
        ],
        [
            "assert (C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(Bet B X A).",
            "VernacExtend",
            "b77d71114d907964498131cc96a09198f5cb4078"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_in_angle : forall A B C P, A <> B -> C <> B -> P <> B -> Out B A P \\/ Out B C P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "6441945d941893d47459f43147ed7b28b2ba6f4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out321__inangle : forall A B C P, C <> B -> Out B A P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "2f023af651faa6200a7de175b5dad37d7811952c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply col_in_angle; auto.",
            "VernacExtend",
            "e6c49c70d81752aaf2588ba5840d71ec4e4e9a70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle1123 : forall A B C, A <> B -> C <> B -> InAngle A A B C.",
            "VernacStartTheoremProof",
            "d87c58f58948de0a0eebbbd7f38acdc3bdf20649"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply out321__inangle; auto.",
            "VernacExtend",
            "e64362360b6cae184105f7a3dac144d66e532ec3"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out341__inangle : forall A B C P, A <> B -> Out B C P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "56929e4c017a324ed1c8b2ff9ee3925f7e138ccd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply col_in_angle; auto.",
            "VernacExtend",
            "e6c49c70d81752aaf2588ba5840d71ec4e4e9a70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle3123 : forall A B C, A <> B -> C <> B -> InAngle C A B C.",
            "VernacStartTheoremProof",
            "5559b28fd66dd7424bb7ab4e9b7b932559656eb1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply out341__inangle; auto.",
            "VernacExtend",
            "7a1f8bb76e4bf990058085de564b70c402cd1749"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_two_sides : forall A B C P, ~ Col B A P -> ~ Col B C P -> InAngle P A B C -> TS P B A C.",
            "VernacStartTheoremProof",
            "fac232a53d83128d3a69c305d5f928aa91cede17"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H1.",
            "VernacExtend",
            "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_col in H5.",
            "VernacExtend",
            "8d96b99f08f331d95066ed72b39fdd1ebb0b5331"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_out : forall A B C P, Out B A C -> InAngle P A B C -> Out B A P.",
            "VernacStartTheoremProof",
            "f0483be77da51bd5c176b2c63a81db362b533db7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 X.",
            "VernacExtend",
            "3f84d0c05097934f19bdbfda9e36e870ac39f323"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert( Bet A B C /\\ Out B A C).",
            "VernacExtend",
            "cc2b45385a962853fba7ff265a0ee13aa0e19348"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply not_bet_and_out in H4.",
            "VernacExtend",
            "9007da93fa633797792053a47db2d8156e075987"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H8; induction H6.",
            "VernacExtend",
            "2feef669a9bea713e683208a7e40cf4e41fbdad7"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(Bet B A X).",
            "VernacExtend",
            "9d550657acf60cd620e7845c7bb42611af2cc915"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "assert(Bet B A X).",
            "VernacExtend",
            "9d550657acf60cd620e7845c7bb42611af2cc915"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "assert(Bet B X A).",
            "VernacExtend",
            "b77d71114d907964498131cc96a09198f5cb4078"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H9.",
            "VernacExtend",
            "ee5acc5f29b6c7e0d5221b934f857f0e76b81748"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(Bet B X A).",
            "VernacExtend",
            "b77d71114d907964498131cc96a09198f5cb4078"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_in_angle_out : forall A B C P, Col B A P -> ~ Bet A B C -> InAngle P A B C -> Out B A P.",
            "VernacStartTheoremProof",
            "c9d401cb0e39f03111c0629fac3e6f225441a1ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H1.",
            "VernacExtend",
            "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction (eq_dec_points A X).",
            "VernacExtend",
            "f0dfcb2e07469b66b3c4a70125bac07472563157"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_bet_out in H0.",
            "VernacExtend",
            "f9632b709aff39a0562bf8fca58daf148ebc1f11"
        ],
        [
            "assert(Out B A P /\\ Out B C P).",
            "VernacExtend",
            "a75818adbcbeebd261a6c93d61833871258d50b7"
        ],
        [
            "eapply out2_bet_out.",
            "VernacExtend",
            "658ba504d2f873692b870050bc9fbd430f7baa41"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Col B A X).",
            "VernacExtend",
            "6dd4052d4999c62a8c6af9dc99c87e8ad1bd5b92"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "2: apply col_permutation_5.",
            "VernacExtend",
            "577ef7919f2a00768b64e4aeb4ea7745cd6f972d"
        ],
        [
            "2: apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_col in H5.",
            "VernacExtend",
            "8d96b99f08f331d95066ed72b39fdd1ebb0b5331"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col_transitivity_2.",
            "VernacExtend",
            "34deee177766d8e8210e4b1ea50e01e28e4f6d6d"
        ],
        [
            "2: apply col_permutation_3.",
            "VernacExtend",
            "1dbcc90903673c575a2565933169c8c0aef410f7"
        ],
        [
            "2:apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_25_aux : forall P A B C A', InAngle P A B C -> ~ Bet A B C -> Out B A' A -> InAngle P A' B C.",
            "VernacStartTheoremProof",
            "611888130be95be9052eaf451bc92f7237b67978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H1.",
            "VernacExtend",
            "c665fabf94f45c35d4b04a205937ae5f459bc73d"
        ],
        [
            "unfold InAngle in H.",
            "VernacExtend",
            "d83ef6d4d8863ce6e5be9e75eca8e18b636bb9c3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split ; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "ex_and H6 X.",
            "VernacExtend",
            "25fcabcd0369758b80fd495d8727c671ece6986c"
        ],
        [
            "assert(exists T, Bet A' T C /\\ Bet X T B).",
            "VernacExtend",
            "41c7cdaba060341c3ef99e11092a43ccc88e542f"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H8 T.",
            "VernacExtend",
            "ce202b0d1833389afdf54c6cc925ed6e95e3bf05"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H6 X.",
            "VernacExtend",
            "25fcabcd0369758b80fd495d8727c671ece6986c"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(exists T, Bet A' T C /\\ Bet B X T).",
            "VernacExtend",
            "c1b26df4c8aa0e10fafcc788ff698d7fab299bd8"
        ],
        [
            "eapply outer_pasch.",
            "VernacExtend",
            "ae241f192231904565bf8e61f6d218fbefd61282"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H8 T.",
            "VernacExtend",
            "ce202b0d1833389afdf54c6cc925ed6e95e3bf05"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply between_identity in H9.",
            "VernacExtend",
            "3521b06f7ec8243a4f63e69c67d6fbaaf2e229e6"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H9.",
            "VernacExtend",
            "ee5acc5f29b6c7e0d5221b934f857f0e76b81748"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_25 : forall P A B C A' C' P', InAngle P A B C -> Out B A' A -> Out B C' C -> Out B P' P -> InAngle P' A' B C'.",
            "VernacStartTheoremProof",
            "530f1587ae5571b6ec9791c7e5be12218cd72ffe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (bet_dec A B C).",
            "VernacExtend",
            "313e5fab8d1dc475be87f4804cd1fb34337126d9"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold Out in H0.",
            "VernacExtend",
            "7082b3e136a063dbe84dc2c4fe8234d250a53969"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H1.",
            "VernacExtend",
            "c665fabf94f45c35d4b04a205937ae5f459bc73d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H2.",
            "VernacExtend",
            "35c4f0050aa47624c81da3f00ae589138adf5c40"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply bet_out_out_bet.",
            "VernacExtend",
            "70b433d509e04191b74a782e9c5b401cdb2c8119"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert(InAngle P A' B C).",
            "VernacExtend",
            "01aadfe5a776f59208818bd44f90d66f35c7efa1"
        ],
        [
            "eapply l11_25_aux.",
            "VernacExtend",
            "3a8f9c8de391d04b9334eea95944292c0356388c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(InAngle P A' B C').",
            "VernacExtend",
            "bd822a4142585687bf02aa9eaf9ac6db885c0467"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "eapply l11_25_aux.",
            "VernacExtend",
            "3a8f9c8de391d04b9334eea95944292c0356388c"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply bet_out_out_bet.",
            "VernacExtend",
            "70b433d509e04191b74a782e9c5b401cdb2c8119"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold InAngle in H.",
            "VernacExtend",
            "d83ef6d4d8863ce6e5be9e75eca8e18b636bb9c3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold InAngle in H5.",
            "VernacExtend",
            "75a6aeacdb5b3577e25c5161dc459bff7f945bce"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H8 X.",
            "VernacExtend",
            "91d35866cc1c6eabcf6ecc5ac1cbc11d1d6c0f4a"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "eapply bet_out_out_bet.",
            "VernacExtend",
            "70b433d509e04191b74a782e9c5b401cdb2c8119"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "unfold Out in H2.",
            "VernacExtend",
            "35c4f0050aa47624c81da3f00ae589138adf5c40"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply l6_7.",
            "VernacExtend",
            "2065b1dcd5557442cb1a2e03c18a6c24e1ecd7a7"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle_distincts : forall A B C P, InAngle P A B C -> A <> B /\\ C <> B /\\ P <> B.",
            "VernacStartTheoremProof",
            "8ef93f4fa8c0c9ec4132f803dd85d0806fac7cd5"
        ],
        [
            "intros; unfold InAngle in *; spliter; repeat split; assumption.",
            "VernacExtend",
            "a72207f5fae51f34a44f6827f08a8883ca08987a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma segment_construction_0 : forall A B A', exists B', Cong A' B' A B.",
            "VernacStartTheoremProof",
            "a756f2d3e80033b0804b0dbc475bd5e2beeda3f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "assert(exists X : Tpoint, A' <> X).",
            "VernacExtend",
            "622eaacd16843e9fae875d6db3e3f254a6fccd43"
        ],
        [
            "apply another_point.",
            "VernacExtend",
            "418f5b6b3961e07d621813447836f6005770a9f2"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "assert(HH:=segment_construction_3 A' X A B H1 H).",
            "VernacExtend",
            "923cf74fae637ef62fa4ddf265b54aba4d781103"
        ],
        [
            "ex_and HH B'.",
            "VernacExtend",
            "441d953bb0d4a6ba21f02c507f3f380f35654182"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_construction_3 : forall A B C A' B', A <> B -> C <> B -> A' <> B' -> exists C', CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "7c3761239d89653fb48cd9db5037fcb0ed274977"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(exists P, ~Col A' B' P).",
            "VernacExtend",
            "aab79f91694a4063d0d6061f7b2ff8010463acc7"
        ],
        [
            "eapply not_col_exists.",
            "VernacExtend",
            "dcbeb3acfb9da102987cf84bcf2f68731f6823ec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H2 P.",
            "VernacExtend",
            "def0c78f64ec58e2d9899580dcf7798b91ef5b2d"
        ],
        [
            "induction (eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "apply conga_trivial_1; assumption.",
            "VernacExtend",
            "d45836a361ff4b7496543373ddc2815cf2e928f7"
        ],
        [
            "assert(exists C', CongA A B C A' B' C' /\\ (OS A' B' C' P \\/ Col A' B' C')).",
            "VernacExtend",
            "662acd20820098e7713ad0e7018a2745125df33b"
        ],
        [
            "apply angle_construction_2.",
            "VernacExtend",
            "e3f510e7b5507d07de5de23aa0a914037d76729c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H4 C'.",
            "VernacExtend",
            "5e457575cd7bdd1128982abab35b55ad94ca418c"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_28 : forall A B C D A' B' C', Cong_3 A B C A' B' C' -> Col A C D -> exists D', Cong A D A' D' /\\ Cong B D B' D' /\\ Cong C D C' D'.",
            "VernacStartTheoremProof",
            "dd68583c869246abb50eba1e4b2dc3949c4b2dbf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold Cong_3 in H.",
            "VernacExtend",
            "20dd0202edd04c922189321a655c051034a59a81"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H2.",
            "VernacExtend",
            "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "assert(exists D', Cong A' D' A D).",
            "VernacExtend",
            "56ed7762a816a7243e2e82a1d96710633c2c32de"
        ],
        [
            "apply segment_construction_0.",
            "VernacExtend",
            "1571d30c1bbce5b3be0edff0e779b383a0b88917"
        ],
        [
            "ex_and H1 D'.",
            "VernacExtend",
            "d4c23c433d63d8a092adc2d3b4015d9dd3a5c98f"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "apply cong_symmetry in H2.",
            "VernacExtend",
            "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "induction (eq_dec_points A D).",
            "VernacExtend",
            "98dbf88bf9f091bd7259185370ee3d42c5c34ac1"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "induction (eq_dec_points B D).",
            "VernacExtend",
            "68cda50c5da6aaf6378fe56f939c3124947242d2"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists D'', CongA B A D B' A' D'').",
            "VernacExtend",
            "536318014639dba96d2a9c33c4c6024c899f82ca"
        ],
        [
            "eapply angle_construction_3.",
            "VernacExtend",
            "9126eac1382749fb8ab01d8ee4a93406ea642ff2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply cong_identity in H.",
            "VernacExtend",
            "8a1a6494e8ae2db6d3a6dceb97c3c840b777d92d"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "ex_and H5 D''.",
            "VernacExtend",
            "b3270eb854bc50fe2a7b342887f1e486fc678c87"
        ],
        [
            "assert(exists D', Out A' D'' D' /\\ Cong A' D' A D).",
            "VernacExtend",
            "107f8ea59746e363c66f980923b2c73c929e374c"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "unfold CongA in H6.",
            "VernacExtend",
            "a92e93ea6fb9c9f1e4fea2eecdf47aa14bbd124c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 D'.",
            "VernacExtend",
            "73faa58560221a80eff84a5e53a10115a5f86bb7"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B A D B' A' D').",
            "VernacExtend",
            "a7d08e44bce1df6a51e7260dd8d7b9e8d0ef1067"
        ],
        [
            "eapply (l11_10 B A D B' A' D''); try apply out_trivial; try solve [auto].",
            "VernacExtend",
            "65a12d07fcb1724df6822b634a3c1e79d02ba036"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "unfold CongA in H6.",
            "VernacExtend",
            "a92e93ea6fb9c9f1e4fea2eecdf47aa14bbd124c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (cong2_conga_cong _ A _ _ A' _).",
            "VernacExtend",
            "a7a30590d8c59bbab83e2c6069ab01e5efd26b98"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "unfold Cong_3 in H.",
            "VernacExtend",
            "20dd0202edd04c922189321a655c051034a59a81"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction(eq_dec_points A D).",
            "VernacExtend",
            "98dbf88bf9f091bd7259185370ee3d42c5c34ac1"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col in H0.",
            "VernacExtend",
            "05e20572842b5f6fa671fda6d87d6784bb278582"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "prolong A' C' D' C D.",
            "VernacExtend",
            "81cad8a271933ce6d5c318bca4f0644e4ad890e0"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply (l2_11 A C D A' C' D'); try assumption.",
            "VernacExtend",
            "26125d6ace447b1653bc588381c1ac4124602b14"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (five_segment_with_def A C D B A' C' D' B').",
            "VernacExtend",
            "0fc7106dfdf2f23444ab718a65ff014d613c4789"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "assert(exists D', Bet A' D' C' /\\ Cong_3 A D C A' D' C').",
            "VernacExtend",
            "09e1599ee1aee62b08d98aa6cd9aaa1a35075a7e"
        ],
        [
            "eapply l4_5.",
            "VernacExtend",
            "196fce7d79d663a9d2d592b184f440682c9cfb90"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 D'.",
            "VernacExtend",
            "73faa58560221a80eff84a5e53a10115a5f86bb7"
        ],
        [
            "unfold Cong_3 in H6.",
            "VernacExtend",
            "b9b1648eaaa54be1d2f2282217b3205478272675"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (l4_2 A D C B A' D' C' B').",
            "VernacExtend",
            "a87f3eb914c9c067c412da4b9269bd04025e3815"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "prolong C' A' D' A D.",
            "VernacExtend",
            "cea546990c213f9dc225d404adcbee181696ab27"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply (five_segment_with_def C A D B C' A' D' B').",
            "VernacExtend",
            "255b8dc64c020f00372fbe0727ad5b40f488ba91"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_conga__bet : forall A B C A' B' C', Bet A B C -> CongA A B C A' B' C' -> Bet A' B' C'.",
            "VernacStartTheoremProof",
            "db594b2b4d6788edead85f0ed0f2f4d30e202ea7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 A0.",
            "VernacExtend",
            "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
        ],
        [
            "ex_and H5 C0.",
            "VernacExtend",
            "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
        ],
        [
            "ex_and H4 A1.",
            "VernacExtend",
            "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
        ],
        [
            "ex_and H5 C1.",
            "VernacExtend",
            "e9691cd9730c56848501aa124c64ae972eb7f6d1"
        ],
        [
            "assert(Bet A0 B C0).",
            "VernacExtend",
            "9d7712c03b6f9ab7c9f7ca2a2cefee28ddc0b09b"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "2:apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "2:apply H4.",
            "VernacExtend",
            "032941176412b9de5326a08637e06d21d9cb9679"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong_3 A0 B C0 A1 B' C1).",
            "VernacExtend",
            "c7571f0071ed521c47176c9c21c599a481fb7846"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A1 B' C1).",
            "VernacExtend",
            "f3c1403b6382d6d2aa6da8d667c52ac3b96ce0bb"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "2:apply H10.",
            "VernacExtend",
            "d50710bbda3cee3c25062bcc19e73e52353678e9"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_in_angle_out : forall A B C P, Out B A C -> InAngle P A B C -> Out B A P.",
            "VernacStartTheoremProof",
            "63f364ef5ed36a3845472124e18f847ff9e1c120"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 X.",
            "VernacExtend",
            "3f84d0c05097934f19bdbfda9e36e870ac39f323"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert (C = B).",
            "VernacExtend",
            "901eb7347df1e313110817e17569a6e56cba2b94"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "assert(Bet B A X).",
            "VernacExtend",
            "9d550657acf60cd620e7845c7bb42611af2cc915"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H4.",
            "VernacExtend",
            "248c9b8ea847e173d8f9c1c5a67980124665a550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert(Bet B A P).",
            "VernacExtend",
            "5723432b6fc59f743c707d35ee06096c972f59d0"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_out; assumption.",
            "VernacExtend",
            "e1c8f850bdad2bc85501693d7dc7ddf349ef2d12"
        ],
        [
            "assert(Bet B A P \\/ Bet B P A).",
            "VernacExtend",
            "685143317a518b2389c7e795274882ef80fd792b"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "assert (Bet B X A).",
            "VernacExtend",
            "b77d71114d907964498131cc96a09198f5cb4078"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H4.",
            "VernacExtend",
            "248c9b8ea847e173d8f9c1c5a67980124665a550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert(Bet B A P \\/ Bet B P A).",
            "VernacExtend",
            "685143317a518b2389c7e795274882ef80fd792b"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2: apply H7.",
            "VernacExtend",
            "978affccce3ddc5f50694e66ea2f1535f8c726be"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "assert(Bet B P A).",
            "VernacExtend",
            "7d0cd3bb72ac9e50e279a7fc345be6e30f290030"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "apply bet_out; assumption.",
            "VernacExtend",
            "e1c8f850bdad2bc85501693d7dc7ddf349ef2d12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_one_side : forall A B C P, ~ Col A B C -> ~ Col B A P -> InAngle P A B C -> OS A B P C.",
            "VernacStartTheoremProof",
            "080b47a380a7c96af8b0faf6888d655a9bd8d604"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H1.",
            "VernacExtend",
            "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold OS.",
            "VernacExtend",
            "d85022c924d39e7ed2613a927522f51546c456c6"
        ],
        [
            "prolong C A C' C A.",
            "VernacExtend",
            "b379c3dc695bb87fb8cfed84654493d89a072a0a"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "assert(TS A B X C').",
            "VernacExtend",
            "71237e4b34e84f32a7bff8b7bec9d130d21df4fd"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply (col_transitivity_1 _ X).",
            "VernacExtend",
            "dfdc7644edaeb98bee8b5997cf13831b5b1b0c06"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (col_transitivity_1 _ A).",
            "VernacExtend",
            "7ee5bc575b87f92dfd69ee2ab7a6ccb224faa9fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply (col_transitivity_1 _ C').",
            "VernacExtend",
            "823a0af0848c07193a02953e8288e8eded1e85d1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_symmetry in H7.",
            "VernacExtend",
            "2b5d0997ad66ff395cc4249320a9b8823ada01de"
        ],
        [
            "apply cong_identity in H7.",
            "VernacExtend",
            "877c844bddd3f96125296719231865acd56e696c"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "2: apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l9_5.",
            "VernacExtend",
            "97511115d1ddb27033fe746e342c6862170bf014"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "2: apply H5.",
            "VernacExtend",
            "42fd69307b59659a584caffc20da7549c0e12154"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply (col_transitivity_1 _ C').",
            "VernacExtend",
            "823a0af0848c07193a02953e8288e8eded1e85d1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "unfold TS in H8.",
            "VernacExtend",
            "75a71d14673b58a1d11e1d6c6d843623779f71ee"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle_one_side : forall A B C P Q , ~ Col A B C -> ~ Col A B P -> ~ Col A B Q -> InAngle P A B C -> InAngle Q A B C -> OS A B P Q.",
            "VernacStartTheoremProof",
            "5ab8e6bd05f1f68cd6a26bd75dcef993d5466e7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in *.",
            "VernacExtend",
            "610395d1b01656200e0634f5317657d86675c7e8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H9 P'.",
            "VernacExtend",
            "331c5f56b90fd2064729942373b15175ab09e85d"
        ],
        [
            "ex_and H6 Q'.",
            "VernacExtend",
            "9d22adc5fc39b91cf5b964b21fe5bc5c941bc146"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "apply bet_col in H6.",
            "VernacExtend",
            "ec38eb8f555edb53d8b92fc8e71f5b45f38f4fc9"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(OS A B P' Q').",
            "VernacExtend",
            "0439123f1b1866756233d0bd4bc97ce3ffcf3468"
        ],
        [
            "prolong P' A T A C.",
            "VernacExtend",
            "a0e1bc0cd687e880558e1c78a3651d12db9d4fe4"
        ],
        [
            "unfold OS.",
            "VernacExtend",
            "d85022c924d39e7ed2613a927522f51546c456c6"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "assert(A <> P').",
            "VernacExtend",
            "ba29268e299e56418c0de0b229846e1904c64421"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "apply out_col in H10.",
            "VernacExtend",
            "1d9fda5d086c3b96bce3c39090a5a89f34589b0d"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert(P' <> B).",
            "VernacExtend",
            "2963ac5eccdc778a51f436d577094689565671f1"
        ],
        [
            "unfold Out in H10.",
            "VernacExtend",
            "772185f7fb7ba3bd0f7b9c8fa28b22e07e3e517e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col in H10.",
            "VernacExtend",
            "1d9fda5d086c3b96bce3c39090a5a89f34589b0d"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction(eq_dec_points A T).",
            "VernacExtend",
            "03ada38df28bc38ee6eb735ccd44de5865d9986c"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply cong_symmetry in H13.",
            "VernacExtend",
            "67bea62f9af511a6baf228507a77f2a7c5075593"
        ],
        [
            "apply cong_identity in H13.",
            "VernacExtend",
            "bf5ca393f820ba2ebb1fb36d5a8c644b8322275a"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "apply bet_col in H12.",
            "VernacExtend",
            "71ee6ec19ebe97a810e321c205f9541e087cefb2"
        ],
        [
            "assert(Col T A C).",
            "VernacExtend",
            "48d0cf9894019172a6d821f03e6024c59ad21046"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "eapply (col_transitivity_1 _ T); Col.",
            "VernacExtend",
            "c1a89f438acaaf442f47121b5336132c5d5d003c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assert(Q' <> B).",
            "VernacExtend",
            "fe7e07305c6a1b3c5b7ba29d1d203e2049313d2b"
        ],
        [
            "unfold Out in H11.",
            "VernacExtend",
            "8262d933ecf064ae701cf0b308784cbf90d0f76b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col in H11.",
            "VernacExtend",
            "bbf836a1acbecb0ab25c784d568bbb07a973f538"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction(eq_dec_points A T).",
            "VernacExtend",
            "03ada38df28bc38ee6eb735ccd44de5865d9986c"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "apply cong_symmetry in H13.",
            "VernacExtend",
            "67bea62f9af511a6baf228507a77f2a7c5075593"
        ],
        [
            "apply cong_identity in H13.",
            "VernacExtend",
            "bf5ca393f820ba2ebb1fb36d5a8c644b8322275a"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply bet_col in H9.",
            "VernacExtend",
            "eb2b535b1eb108a75ec487984ced7876dad5ff25"
        ],
        [
            "apply bet_col in H12.",
            "VernacExtend",
            "71ee6ec19ebe97a810e321c205f9541e087cefb2"
        ],
        [
            "assert(Col T A C).",
            "VernacExtend",
            "48d0cf9894019172a6d821f03e6024c59ad21046"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "eapply (col_transitivity_1 _ T); Col.",
            "VernacExtend",
            "c1a89f438acaaf442f47121b5336132c5d5d003c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "assert(Bet A P' Q' \\/ Bet A Q' P').",
            "VernacExtend",
            "8399ddcc596eeea4a130f6467d1e2205d4fd5666"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H15.",
            "VernacExtend",
            "114aeada8ab88f84aa32299603d5ad2269900189"
        ],
        [
            "eapply (outer_transitivity_between2 _ P'); Between.",
            "VernacExtend",
            "363340ef42da94d57a2334c84bb45f113f6f4334"
        ],
        [
            "eapply (between_exchange3 P'); Between.",
            "VernacExtend",
            "3e2ce1194d02001115261b8b309ecf52d5b4351d"
        ],
        [
            "assert(OS A B P P').",
            "VernacExtend",
            "ae51b10100d2cf01f3d382f4251e3738d0b4bbc3"
        ],
        [
            "eapply (out_one_side_1 _ _ _ _ B); Col.",
            "VernacExtend",
            "9a027ca44b97c9c1edea68835dd493a2bcfa8309"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(OS A B Q Q').",
            "VernacExtend",
            "815e39bff21eeac475cb24f2493930e48590e5da"
        ],
        [
            "eapply (out_one_side_1 _ _ _ _ B); Col.",
            "VernacExtend",
            "9a027ca44b97c9c1edea68835dd493a2bcfa8309"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle_one_side2 : forall A B C P Q , ~ Col A B C -> ~ Col A B P -> ~ Col A B Q -> ~ Col C B P -> ~ Col C B Q -> InAngle P A B C -> InAngle Q A B C -> OS A B P Q /\\ OS C B P Q.",
            "VernacStartTheoremProof",
            "3a21a725508dbf6d59853a5bc51a373dee186724"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (inangle_one_side _ _ C); Col.",
            "VernacExtend",
            "17b95f989af89a9e94ebce79f99ce4e6896ed5ad"
        ],
        [
            "apply (inangle_one_side _ _ A); Col.",
            "VernacExtend",
            "23b73613866185f7d2a4ea1c4b4b3bf7aa01a41b"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_conga_col : forall A B C D E F, Col A B C -> CongA A B C D E F -> Col D E F.",
            "VernacStartTheoremProof",
            "f5b534d13261ac38d31199f586ba52929fdd85ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Out E D F).",
            "VernacExtend",
            "29a88430a9c1fd02b5d26e12eb1f94e133ea5e5b"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "apply bet_out in H.",
            "VernacExtend",
            "60939a2089c1eaa8a87d0625895e411724c96efe"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H1.",
            "VernacExtend",
            "c665fabf94f45c35d4b04a205937ae5f459bc73d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out E D F).",
            "VernacExtend",
            "29a88430a9c1fd02b5d26e12eb1f94e133ea5e5b"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "apply between_symmetry in H.",
            "VernacExtend",
            "821a722cedc227274fcd5fd78190bd17d086d4a4"
        ],
        [
            "apply bet_out in H.",
            "VernacExtend",
            "60939a2089c1eaa8a87d0625895e411724c96efe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H1.",
            "VernacExtend",
            "c665fabf94f45c35d4b04a205937ae5f459bc73d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H3.",
            "VernacExtend",
            "3139d12347d024ef0d73e7a4ac9234d4e721869a"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncol_conga_ncol : forall A B C D E F, ~ Col A B C -> CongA A B C D E F -> ~ Col D E F.",
            "VernacStartTheoremProof",
            "276673a7d87ab5c439d0d92341507edd7f0e08a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply col_conga_col.",
            "VernacExtend",
            "25aced9c49c86c562dd0ce33a237f993fe5ff333"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_construction_4 : forall A B C A' B' P, A <> B -> C <> B -> A' <> B' -> exists C', CongA A B C A' B' C' /\\ Coplanar A' B' C' P.",
            "VernacStartTheoremProof",
            "9c2071cfb7a7a7cf3dcb968f773a0eee8c2d1358"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (col_dec A' B' P).",
            "VernacExtend",
            "60a9582e2cea9069aca83ef41a4216b1e248b441"
        ],
        [
            "destruct (angle_construction_3 A B C A' B') as [C']; auto.",
            "VernacExtend",
            "3736902283bfd2d060885be96d284e46918ed013"
        ],
        [
            "exists C'; split; Cop.",
            "VernacExtend",
            "8b8275571d8355186382a2c47892687e2ed34f75"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "destruct (angle_construction_3 A B C A' B') as [C']; auto.",
            "VernacExtend",
            "3736902283bfd2d060885be96d284e46918ed013"
        ],
        [
            "exists C'; split; auto.",
            "VernacExtend",
            "5a885337254a53077362d794352352c26516420a"
        ],
        [
            "exists C'; left; split; Col.",
            "VernacExtend",
            "cca550b7736a43b87741b7f3dd8626dd0ccd9f2e"
        ],
        [
            "apply (col_conga_col A B C); assumption.",
            "VernacExtend",
            "68e03738526a1969b1bdf4a7555288acf99c88ed"
        ],
        [
            "destruct (angle_construction_1 A B C A' B' P) as [C' []]; auto.",
            "VernacExtend",
            "3ad2fc472edef6bd845bf4567f1ff972890aeb00"
        ],
        [
            "exists C'; split; Cop.",
            "VernacExtend",
            "8b8275571d8355186382a2c47892687e2ed34f75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_distincts : forall A B C D E F, LeA A B C D E F -> A<>B /\\ C<>B /\\ D<>E /\\ F<>E.",
            "VernacStartTheoremProof",
            "6f8a74b24f42be7e05e06707db95eed834c8e798"
        ],
        [
            "intros A B C D E F Hlea.",
            "VernacExtend",
            "0a74263ca87988e2788eb42158507db122b0887a"
        ],
        [
            "destruct Hlea as [X [HInAngle HConga]].",
            "VernacExtend",
            "7248243d1bf1439a264d7f8df4de8283a7a99e05"
        ],
        [
            "destruct HInAngle as [HDE [HEF _]].",
            "VernacExtend",
            "09d0cfd8556a59b90cb69afbffa9bc1695bdfacd"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply (conga_diff1 A B C D E X); auto.",
            "VernacExtend",
            "8c85608456e8187754b5c41fb3295d8badfcafa8"
        ],
        [
            "apply (conga_diff2 A B C D E X); auto.",
            "VernacExtend",
            "a30b0ac767a5a5738a7e7d2880c1854b47fb2956"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gea_distincts : forall A B C D E F, GeA A B C D E F -> A<>B /\\ C<>B /\\ D<>E /\\ F<>E.",
            "VernacStartTheoremProof",
            "74c926cc17a3c8d693e8d0b11c8c0835bda563d6"
        ],
        [
            "intros A B C D E F Hgea.",
            "VernacExtend",
            "3b409101e39fb192a963c012f30982afc134487a"
        ],
        [
            "apply lea_distincts in Hgea.",
            "VernacExtend",
            "4ec51a9a53575815575459598176e1092051b100"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_29_a : forall A B C D E F, LeA A B C D E F -> exists Q, InAngle C A B Q /\\ CongA A B Q D E F.",
            "VernacStartTheoremProof",
            "7329d8253642fb8d0b45938cf919b2f04c47fd40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA in H.",
            "VernacExtend",
            "f6755c4cc833482770be14e943273f174e05e04f"
        ],
        [
            "ex_and H P.",
            "VernacExtend",
            "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
        ],
        [
            "assert(E <> D /\\ B <> A /\\ E <> F /\\ E <> P /\\ B <> C).",
            "VernacExtend",
            "c4fc67a103c3cc80e3838e56e3691ae68429a43e"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "unfold InAngle in H.",
            "VernacExtend",
            "d83ef6d4d8863ce6e5be9e75eca8e18b636bb9c3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> B /\\ C <> B).",
            "VernacExtend",
            "3e0bcdff7ad04e3c6d41d43170d350e9a0d184a5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=or_bet_out A B C).",
            "VernacExtend",
            "568d47a05e94d51853f31ad6f110a5b18fe51397"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(Bet D E P).",
            "VernacExtend",
            "9670bc24c237718fb747385d42215fe4c030be88"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle3123; assumption.",
            "VernacExtend",
            "11e01e253f128227ad4c20f1239756b94d2f0519"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold InAngle in HH.",
            "VernacExtend",
            "de146ed2227664c810636caf6deb78ec21c28ce9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H13 X.",
            "VernacExtend",
            "40d6fbdc9b77dfe99246b5bcbecd33ac98dd495c"
        ],
        [
            "induction H14.",
            "VernacExtend",
            "f5a05fe2485bcd9a092ccb06894396aa5209d505"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert(Bet E F P \\/ Bet E P F).",
            "VernacExtend",
            "f7d1a32ce8eebf61fe841cb2b3af07fb7945443a"
        ],
        [
            "eapply (l5_2 D).",
            "VernacExtend",
            "7031d9d634ce005f7a17ca7447d90f7978016dda"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out E P F).",
            "VernacExtend",
            "368e288c8197803eab860276eba18b0e19bd18d4"
        ],
        [
            "unfold Out in H14.",
            "VernacExtend",
            "a9f0c3299dd9ca759896cff608320476550b88e1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H16.",
            "VernacExtend",
            "7d2027103dc61604e91bdc47951aab7c003ce827"
        ],
        [
            "assert( Bet D X P).",
            "VernacExtend",
            "73c9f5570871cd05f4e8877afbb457fe800edc65"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D E X).",
            "VernacExtend",
            "4525bb72d82bf439d3f110290580fc9f4f7d2d5e"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "2:apply H9.",
            "VernacExtend",
            "ee5acc5f29b6c7e0d5221b934f857f0e76b81748"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D P X).",
            "VernacExtend",
            "0336c7ab89370cd4abfc07acfae6beb103a20342"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D P F).",
            "VernacExtend",
            "33236e90160f93523cfc413abe94f383252f795b"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet E P F).",
            "VernacExtend",
            "24a90ed4734e81772be0f325de6a5694784c78e1"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l6_6.",
            "VernacExtend",
            "6fd0f9e314ce9ff2d470b8d56cb2315321c3a2fb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "assert(exists Q, CongA D E F A B Q).",
            "VernacExtend",
            "b7c91115d2b5ac0c6bca1596729057a596c428aa"
        ],
        [
            "apply angle_construction_3.",
            "VernacExtend",
            "04fc6fcc6efd5078d6e8e851cfbc2cb51195ac98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H9 Q.",
            "VernacExtend",
            "8155fac2a807fe4ef2fa5d1cf83a4266d79c448b"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "unfold CongA in H10.",
            "VernacExtend",
            "c2f2c82bc38f9c90a4c8d590e295e19ce0b55eb8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(D <> E /\\ F <> E).",
            "VernacExtend",
            "272f74781f13e5a649defe2ce6fe3f06593e617e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:=or_bet_out D E F).",
            "VernacExtend",
            "f57631583780795df331a0d23fe63d750eee776f"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "prolong A B Q E F.",
            "VernacExtend",
            "bb4aae1693e7f561db0f4ef0c0b83e6bc61fd2a6"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "eapply conga_line; try assumption.",
            "VernacExtend",
            "1141ae6b4b97c04376d812140040c52189b925a8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "assert(Out E D P).",
            "VernacExtend",
            "b85fa46953914cb6b1ee433ec7e7afc9697f5398"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply out_col in H13.",
            "VernacExtend",
            "55d9f95361d1de1d676669069dc39fd00e104fa8"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(exists Q, CongA D E F A B Q /\\ OS A B Q C).",
            "VernacExtend",
            "41a85095dcbc3abde7fcf13391985675bb592afc"
        ],
        [
            "apply angle_construction_1; assumption.",
            "VernacExtend",
            "fa137d2fccbe358939ca0d7d45943543eedf21b6"
        ],
        [
            "ex_and H12 Q.",
            "VernacExtend",
            "700b203b0203148666ad1fc9440e671b664e8f32"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "assert(exists DD, Out E D DD /\\ Cong E DD B A).",
            "VernacExtend",
            "b6965dd7093239c51a556505c826edbcf27db4a5"
        ],
        [
            "eapply segment_construction_3; auto.",
            "VernacExtend",
            "87ba654da4efd3e71a3980be28762b15dd6fed3e"
        ],
        [
            "ex_and H14 DD.",
            "VernacExtend",
            "3c3b228a6307cd6c7705a201555fdc3e0350cbfa"
        ],
        [
            "assert(exists FF, Out E F FF /\\ Cong E FF B Q).",
            "VernacExtend",
            "90acf55dd3ba44394235ca9644fb9c08ec9c0320"
        ],
        [
            "eapply segment_construction_3.",
            "VernacExtend",
            "ae1c22a0f4dec1e2cd8d9951bd338ef72a59b894"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold CongA in H12.",
            "VernacExtend",
            "f6f8259d56d511bb4aa1794da6fb999a4a96b045"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H16 FF.",
            "VernacExtend",
            "413e052e237c48d1bbb80667e8eb1117df8aaa1a"
        ],
        [
            "assert(InAngle P DD E FF).",
            "VernacExtend",
            "31e2cc6947ffad0bfd437d2f8180e6eae821c68b"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(HH18:=H18).",
            "VernacExtend",
            "126440f3ec3ad31d5e3a4ffcc84b26636f373c81"
        ],
        [
            "unfold InAngle in H18.",
            "VernacExtend",
            "d5571c70d0a7420269ca6a26b7969083763af0a6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H21 X.",
            "VernacExtend",
            "333f0288741e970459a10f557d8145371b3617aa"
        ],
        [
            "induction H22.",
            "VernacExtend",
            "753c7b4c832a73d4edb9f4d2183e93a5d7500688"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert (Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_out_out_bet.",
            "VernacExtend",
            "70b433d509e04191b74a782e9c5b401cdb2c8119"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists CC, Out B C CC /\\ Cong B CC E X).",
            "VernacExtend",
            "7ba29b53aa22918853ec039633156431166e7e22"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H22.",
            "VernacExtend",
            "6be239c9f59132064f53eea848a92580a2150483"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H23 CC.",
            "VernacExtend",
            "cf92482a0c898e15014081cc116e574535f3421c"
        ],
        [
            "assert (CongA A B CC DD E X).",
            "VernacExtend",
            "c0e781494bc3b2a08dceac26a12669c2239dfaa7"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A CC DD X).",
            "VernacExtend",
            "a9335d3515eda021add05cdc286c58c4547f5952"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply H25.",
            "VernacExtend",
            "2755b6a759a34bfd56e81ff54470c4f32130cef4"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B Q DD E FF).",
            "VernacExtend",
            "170f843566fb8b43950c0ce5b24f9df596bf4a44"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_identity in H17.",
            "VernacExtend",
            "03d8d65cd396c0fd4e1b9e6e2548a38ea6dc0e48"
        ],
        [
            "subst FF.",
            "VernacExtend",
            "2f145a3510e098da1feaf3f1dbefdf3dcb7e8233"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A Q DD FF).",
            "VernacExtend",
            "188e1c1c7b5367ae11a90cb28fb838d4769e7b6d"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA CC B Q X E FF).",
            "VernacExtend",
            "5d31831a9cbb14f9ac4360a31bbb0d20f1cc09ad"
        ],
        [
            "eapply (l11_22b _ _ _ A).",
            "VernacExtend",
            "3374a70da76e45ded403ce5d4993ab95706179d1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "eapply out_out_one_side.",
            "VernacExtend",
            "f6180b2edc902780d1ca4ea055b12a9b6a8dae19"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(InAngle X DD E FF).",
            "VernacExtend",
            "74df209b65d4ca2829f164482a0c0ee7a2dde2cb"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply HH18.",
            "VernacExtend",
            "6a090b0d56babb0361bf37a10aacd03986871de3"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_one_side in H29.",
            "VernacExtend",
            "2f9b3ef352a47e5e0c226d005bb1ba1507bc0c07"
        ],
        [
            "apply invert_one_side in H29.",
            "VernacExtend",
            "687fc219bbb851054a00dd9f9da210e7d38cc085"
        ],
        [
            "apply H29.",
            "VernacExtend",
            "629e762bacb1cca90c65ecec78e62b6e90cc10da"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "eapply col_out2_col.",
            "VernacExtend",
            "2539014e5de086c3d5e9d7b99f59876b8344de74"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "eapply col_conga_col.",
            "VernacExtend",
            "25aced9c49c86c562dd0ce33a237f993fe5ff333"
        ],
        [
            "2:apply conga_sym.",
            "VernacExtend",
            "a7968ac5d63ce5f16bff83c6174f4c706db52254"
        ],
        [
            "2: apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "eapply col_out2_col.",
            "VernacExtend",
            "2539014e5de086c3d5e9d7b99f59876b8344de74"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong CC Q X FF).",
            "VernacExtend",
            "1f773c6c7a0e79df8c8deabcb8b68432fcbf7074"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply H29.",
            "VernacExtend",
            "629e762bacb1cca90c65ecec78e62b6e90cc10da"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(InAngle CC A B Q).",
            "VernacExtend",
            "ec15bf4bef2b03e2ea558ceb62d6fe09d5735232"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "unfold CongA in H12.",
            "VernacExtend",
            "f6f8259d56d511bb4aa1794da6fb999a4a96b045"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst CC.",
            "VernacExtend",
            "f5a795217e973fcd12ec8ab043ca49dbd4598964"
        ],
        [
            "unfold CongA in H25.",
            "VernacExtend",
            "b899f33f01f6d48e0ef54c0a9aabd02090e4c6d4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists CC.",
            "VernacExtend",
            "940fd06927e33f53ada733eb8152b46c3439b8ea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold Out in H23.",
            "VernacExtend",
            "752a79b57c50d0b193923eda1788cf5fd347cc27"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold CongA in H27.",
            "VernacExtend",
            "b272e80092b5ac56071830b578af7436c8c23ce5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_line : forall A B C P, P <> B -> A <> B -> C <> B -> Bet A B C -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "678e928f5d0a328e669da42c7b4b07bbc4b82d90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_29_b : forall A B C D E F, (exists Q, InAngle C A B Q /\\ CongA A B Q D E F) -> LeA A B C D E F.",
            "VernacStartTheoremProof",
            "922544aa71061dab754caf9688d7d78e87b3c606"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H Q.",
            "VernacExtend",
            "ffb7f0ed3dfce1a69f5e80fa06320eb04681ba00"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold InAngle in HH.",
            "VernacExtend",
            "de146ed2227664c810636caf6deb78ec21c28ce9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert(exists P, CongA A B C D E P).",
            "VernacExtend",
            "220d30eb5614630c79db8e111a1c3e99d84bfeb4"
        ],
        [
            "apply angle_construction_3.",
            "VernacExtend",
            "04fc6fcc6efd5078d6e8e851cfbc2cb51195ac98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 P.",
            "VernacExtend",
            "fb7410c037b56a90324e4b72e914bf2f4559e2b7"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_line.",
            "VernacExtend",
            "225d15708c83aa2e080a17b58a81ef208c7dfd41"
        ],
        [
            "unfold CongA in H6.",
            "VernacExtend",
            "a92e93ea6fb9c9f1e4fea2eecdf47aa14bbd124c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H6.",
            "VernacExtend",
            "a92e93ea6fb9c9f1e4fea2eecdf47aa14bbd124c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists DD, Out E D DD /\\ Cong E DD B A).",
            "VernacExtend",
            "b6965dd7093239c51a556505c826edbcf27db4a5"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H6 DD.",
            "VernacExtend",
            "7389a07067fff33cffaa3f9dc6540c93651f4e99"
        ],
        [
            "assert(exists FF, Out E F FF /\\ Cong E FF B Q).",
            "VernacExtend",
            "90acf55dd3ba44394235ca9644fb9c08ec9c0320"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "unfold CongA in H0.",
            "VernacExtend",
            "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H8 FF.",
            "VernacExtend",
            "8ea24847aa5568b875e06cca2f616c79a46b83d0"
        ],
        [
            "assert(D <> E /\\ DD <> E /\\ F <> E /\\ FF <> E).",
            "VernacExtend",
            "232cb0b894ecba16ff331de322dbc1a7bc405c5f"
        ],
        [
            "unfold Out in *.",
            "VernacExtend",
            "3cd7422d6d8740e6a3d6d5611d53c09083b4cf0b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HI:=or_bet_out A B C).",
            "VernacExtend",
            "6b71cbc382a248d0d7763ace6e98987b6e2fd443"
        ],
        [
            "induction HI.",
            "VernacExtend",
            "818f2c00a98298d751b82097faa88bcdf6784376"
        ],
        [
            "exists F.",
            "VernacExtend",
            "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle3123.",
            "VernacExtend",
            "e127b891539fe1c477172f8ede9879d0aad53b59"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B C A B Q).",
            "VernacExtend",
            "9b96841a9a8828463a3278d9cfeafc886dfffac4"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H5.",
            "VernacExtend",
            "6f23c1eb503a2b86d00cebd1e7431c65d23ed46f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H16.",
            "VernacExtend",
            "7d2027103dc61604e91bdc47951aab7c003ce827"
        ],
        [
            "assert(Bet A B X).",
            "VernacExtend",
            "d80bc537c3265b09659079d93ca2c9bdf3f5c9a5"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B X Q).",
            "VernacExtend",
            "cddcd96333f3eb6eed7951e3a48fc01ce80753b6"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B Q C \\/ Bet B C Q).",
            "VernacExtend",
            "72e786fb12ab5861951f249396e3ccc04294e28f"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H18.",
            "VernacExtend",
            "265560a9c02d6dea1d7e8fc012934e35c2f2e208"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B X).",
            "VernacExtend",
            "d80bc537c3265b09659079d93ca2c9bdf3f5c9a5"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Bet B X Q).",
            "VernacExtend",
            "cddcd96333f3eb6eed7951e3a48fc01ce80753b6"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet B C Q).",
            "VernacExtend",
            "e5740f7440aeefdd2c81e3de965604b3fac0c030"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H14.",
            "VernacExtend",
            "f5a05fe2485bcd9a092ccb06894396aa5209d505"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle1123.",
            "VernacExtend",
            "add047074ce4227ce00c4f8d0100d515b627acf6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B C A B A).",
            "VernacExtend",
            "26f096c05f6e4c5af82241029e3169db4d9ad880"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply conga_trivial_1.",
            "VernacExtend",
            "8669d96b4f5304c16a55a2bb3a48a41bcfb1ca01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HJ:=or_bet_out A B Q).",
            "VernacExtend",
            "80943b46b5769a9212b9454ccc4495489fcd8f69"
        ],
        [
            "induction HJ.",
            "VernacExtend",
            "21a4646d0ca81953853c49ecba5335b119a2bb22"
        ],
        [
            "assert(exists P, CongA A B C D E P).",
            "VernacExtend",
            "220d30eb5614630c79db8e111a1c3e99d84bfeb4"
        ],
        [
            "apply angle_construction_3.",
            "VernacExtend",
            "04fc6fcc6efd5078d6e8e851cfbc2cb51195ac98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H6.",
            "VernacExtend",
            "0c4fa35cf20d16671c854e69c37bf73ff4093ba5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H16 P.",
            "VernacExtend",
            "16a7525ea0b24bf4b55ba3762278da584b7f0b1d"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_angle_line.",
            "VernacExtend",
            "225d15708c83aa2e080a17b58a81ef208c7dfd41"
        ],
        [
            "unfold CongA in H17.",
            "VernacExtend",
            "122c07078661baa43387583adc2ebde6b4c16ec0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H15.",
            "VernacExtend",
            "114aeada8ab88f84aa32299603d5ad2269900189"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply out_in_angle_out.",
            "VernacExtend",
            "9403604353c58da7352c3cf027eaa2a0882dfce4"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "unfold Out in H16.",
            "VernacExtend",
            "4144db45e6cb7fde9492aa959f6afec978766b96"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists P, CongA A B C D E P /\\ OS D E P F).",
            "VernacExtend",
            "2061cd3c5e3b934a3ea7441c85e009023971ff84"
        ],
        [
            "eapply angle_construction_1.",
            "VernacExtend",
            "cc89db8212e92af5d67972d23f9b5f6b0e35a4f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply ncol_conga_ncol.",
            "VernacExtend",
            "84d79f45a2e1c2a831a617a65829f01f6dda2a24"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "ex_and H16 P.",
            "VernacExtend",
            "16a7525ea0b24bf4b55ba3762278da584b7f0b1d"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(exists PP, Out E P PP /\\ Cong E PP B X).",
            "VernacExtend",
            "cc48a9ccf4f57363a9e66f8bad7cadf87655b8d4"
        ],
        [
            "eapply segment_construction_3.",
            "VernacExtend",
            "ae1c22a0f4dec1e2cd8d9951bd338ef72a59b894"
        ],
        [
            "unfold CongA in H16.",
            "VernacExtend",
            "55eec75dcf7daf8bba2ba359283e24f53ef7f57d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H5.",
            "VernacExtend",
            "6f23c1eb503a2b86d00cebd1e7431c65d23ed46f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H18 PP.",
            "VernacExtend",
            "9ae4dd0c953ac0c3b62a0c9f99d31bfce0981915"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "2:apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "2:apply H8.",
            "VernacExtend",
            "ca030b5500fdb1c4d2fdacbdad2dbf1f87e066bf"
        ],
        [
            "2:apply H18.",
            "VernacExtend",
            "265560a9c02d6dea1d7e8fc012934e35c2f2e208"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H18.",
            "VernacExtend",
            "04cb78add398270ab1df819d4940d1ce7388a824"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists PP.",
            "VernacExtend",
            "f0759b5d8bdc2b3a0284ab20f0f52059f14e9c07"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(CongA C B Q P E F).",
            "VernacExtend",
            "2e926d67f18443eed3b5829fbfb044c1b7f18bd1"
        ],
        [
            "eapply (l11_22b _ _ _ A).",
            "VernacExtend",
            "3374a70da76e45ded403ce5d4993ab95706179d1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "eapply in_angle_one_side.",
            "VernacExtend",
            "3850d0cb569165b6a3c178a1e49d38c01a7fbe3c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Cong DD FF A Q).",
            "VernacExtend",
            "2af8f00d43eeab641cff7fb00e7e10a3512987f0"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A X DD PP).",
            "VernacExtend",
            "aaef699e4e43b12086a0366281820535d05d9ff9"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong X Q PP FF).",
            "VernacExtend",
            "9f015ffc838674e25592e772880de78509c1b667"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold Out in H15.",
            "VernacExtend",
            "d9b07eba165411c9655826b3d24dea5e99f2a1d3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Out in H18.",
            "VernacExtend",
            "04cb78add398270ab1df819d4940d1ce7388a824"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_in_angle_bet : forall A B C P, Bet A B P -> InAngle P A B C -> Bet A B C.",
            "VernacStartTheoremProof",
            "e8dc54e90e331dbcaee89ccbedab0ee9627470a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 X.",
            "VernacExtend",
            "3f84d0c05097934f19bdbfda9e36e870ac39f323"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H4.",
            "VernacExtend",
            "248c9b8ea847e173d8f9c1c5a67980124665a550"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "assert(Bet A X P).",
            "VernacExtend",
            "b2dc0a9caef32c91c96bbf12056a515d16415a73"
        ],
        [
            "eapply between_exchange2.",
            "VernacExtend",
            "b550fa054c0f0cbb244951af63064ef20b0309a5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A P C \\/ Bet A C P).",
            "VernacExtend",
            "d8fcf17c1d8aa05df3be6f869fa5dfce7c15e860"
        ],
        [
            "eapply (l5_1 _ X).",
            "VernacExtend",
            "98f44c1025b4d3635acbeaba07542ffc03b705db"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert(A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B X).",
            "VernacExtend",
            "d80bc537c3265b09659079d93ca2c9bdf3f5c9a5"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B X).",
            "VernacExtend",
            "d80bc537c3265b09659079d93ca2c9bdf3f5c9a5"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_line : forall A B C P, Bet A B P -> LeA A B P A B C -> Bet A B C.",
            "VernacStartTheoremProof",
            "cb920a9df77f36aa77c8459d57ce7b8d2dfc9fc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 PP.",
            "VernacExtend",
            "5bc3e5fc8d44bc4985f106c5a325b0c8c8073003"
        ],
        [
            "assert (HH:=H0).",
            "VernacExtend",
            "bf875902a496ade0bcfcb6336d4c6dc942dce0f8"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H4 X.",
            "VernacExtend",
            "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet A B PP).",
            "VernacExtend",
            "dad381b9905296c21d3a0ae1467382acb5aa7b65"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_conga_out : forall A B D E F, CongA A B A D E F -> Out E D F.",
            "VernacStartTheoremProof",
            "2f517197d9530aa657e99e51d2318c2f943b40b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 A'.",
            "VernacExtend",
            "227b4a120e097053aeca0d347ab53672b9405e56"
        ],
        [
            "ex_and H4 C'.",
            "VernacExtend",
            "5e457575cd7bdd1128982abab35b55ad94ca418c"
        ],
        [
            "ex_and H3 D'.",
            "VernacExtend",
            "5f0e3993c44ba64d3d9e836fe32624a9328d6f8a"
        ],
        [
            "ex_and H4 F'.",
            "VernacExtend",
            "993fe541996125c11156a4aff649d6f08f36c84a"
        ],
        [
            "assert(Cong_3 B A' C' E D' F').",
            "VernacExtend",
            "fe5db177109254d8743f6115209303b203e841a5"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out E D' F').",
            "VernacExtend",
            "ae0f3b4b0ad4fe61fe4a9bb1b6474c3acb6bea96"
        ],
        [
            "eapply cong3_preserves_out.",
            "VernacExtend",
            "578851a91f978e13212ac8da0c0e4a9bc9b129fc"
        ],
        [
            "2:apply H12.",
            "VernacExtend",
            "7249cbe97b61cf2d5cf47f685eafc49d0e55a7dd"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "apply between_identity in H3.",
            "VernacExtend",
            "d2d3d7cc87e2bfbfea2369dbd01a46ed0da1812b"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply between_identity in H5.",
            "VernacExtend",
            "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "eapply l5_1.",
            "VernacExtend",
            "d79d605ea41bff9037e9266f36ce0208fc0aacf2"
        ],
        [
            "2:apply H3.",
            "VernacExtend",
            "a32f4a13e73a956d577a55a99b30492beae75bce"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply bet2_out_out.",
            "VernacExtend",
            "2d86a726c82a348340ea54d2cedaecac6261ccc7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_ex_cong3 : forall A B C A' B' C', CongA A B C A' B' C' -> exists AA, exists CC, Out B A AA -> Out B C CC -> Cong_3 AA B CC A' B' C'.",
            "VernacStartTheoremProof",
            "4064b25ff260d4445fd86d149e671ffef2147ab7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(B <> A /\\ B <> C /\\ B' <> A' /\\ B' <> C').",
            "VernacExtend",
            "bfa46693589634d76a1df0d031f6e667781621fe"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(exists AA, Out B A AA /\\ Cong B AA B' A').",
            "VernacExtend",
            "f7dc6f7d3ebe66f52eb4a40aa34a0e647b954174"
        ],
        [
            "apply segment_construction_3; assumption.",
            "VernacExtend",
            "d92da5178d208418ba8b4fb45251ac6ad8317313"
        ],
        [
            "assert(exists CC, Out B C CC /\\ Cong B CC B' C').",
            "VernacExtend",
            "debdba702535760accfe4eb29a495cf38c6338c8"
        ],
        [
            "apply segment_construction_3; assumption.",
            "VernacExtend",
            "d92da5178d208418ba8b4fb45251ac6ad8317313"
        ],
        [
            "ex_and H4 AA.",
            "VernacExtend",
            "da59f2c02a17d44f6ce1efb08f256ca0c6a4c917"
        ],
        [
            "ex_and H5 CC.",
            "VernacExtend",
            "34a312524ac3a911b992c61edbb6e15f087c1f4c"
        ],
        [
            "exists AA.",
            "VernacExtend",
            "f1c0f8e26ff3b83bc618cd12f69ba786224a7b64"
        ],
        [
            "exists CC.",
            "VernacExtend",
            "940fd06927e33f53ada733eb8152b46c3439b8ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_preserves_in_angle : forall A B C I A' B' C' I', CongA A B C A' B' C' -> CongA A B I A' B' I' -> InAngle I A B C -> OS A' B' I' C' -> InAngle I' A' B' C'.",
            "VernacStartTheoremProof",
            "a276beec89d7e75c5ec6f0da7e9ae7df97c8d5fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B' /\\ I <> B /\\ I' <> B').",
            "VernacExtend",
            "a8cc27b3e6649ef14e6f7afed77c3b3b9c5b74b9"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH1:= or_bet_out A B C).",
            "VernacExtend",
            "2f73eca8ca080efe7d618a69826ead6a0b63baf3"
        ],
        [
            "induction HH1.",
            "VernacExtend",
            "3c2ab5f496983a42d98910d6c28f14dce7aa06b4"
        ],
        [
            "assert(Bet A' B' C').",
            "VernacExtend",
            "366b0410634258f4be5168e9436d49c04bb8064d"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_line; assumption.",
            "VernacExtend",
            "e1d284a730a437275259581359bc2e7a03c8e5c7"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert(Out B A I).",
            "VernacExtend",
            "9ec02120936cbcc41f086d198f2056392cbb90d0"
        ],
        [
            "eapply out_in_angle_out.",
            "VernacExtend",
            "9403604353c58da7352c3cf027eaa2a0882dfce4"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B' A' I').",
            "VernacExtend",
            "7ed66666a8c70eed45c02e500788a6036ffb4d6e"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_in_angle.",
            "VernacExtend",
            "05d4daec8f1ac4ba01aa8a59e4c27083870da51a"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH2:= or_bet_out A B I).",
            "VernacExtend",
            "5d19b6ec0fb44f2a69681e39a4c1578e57f0d94d"
        ],
        [
            "induction HH2.",
            "VernacExtend",
            "53d7ad049aabb458d67aa92c73aee2d1859e075f"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "assert(Out B' A' I').",
            "VernacExtend",
            "7ed66666a8c70eed45c02e500788a6036ffb4d6e"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col_in_angle; try assumption.",
            "VernacExtend",
            "6e79f6f3b040f3545d2b463ffc067bb0372a5b5f"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists AA', Out B' A' AA' /\\ Cong B' AA' B A).",
            "VernacExtend",
            "bf0cb9c5d065c950302d15d9a5cf9de609aa1956"
        ],
        [
            "apply segment_construction_3; auto.",
            "VernacExtend",
            "0138e59183cee9af98e577af09aac7f479691472"
        ],
        [
            "assert(exists CC', Out B' C' CC' /\\ Cong B' CC' B C).",
            "VernacExtend",
            "882d4fb334f9bd78c1ed9e0eb16a9c702d799111"
        ],
        [
            "apply segment_construction_3; auto.",
            "VernacExtend",
            "0138e59183cee9af98e577af09aac7f479691472"
        ],
        [
            "ex_and H11 AA'.",
            "VernacExtend",
            "d8c7a8991c5408dc423908858303a5ccd81d5361"
        ],
        [
            "ex_and H12 CC'.",
            "VernacExtend",
            "b4bab76cc2f3b1bb5066a1bebfe1f017a50d777e"
        ],
        [
            "assert(HH:=H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "unfold InAngle in H1.",
            "VernacExtend",
            "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H17 J.",
            "VernacExtend",
            "5936eddce85d899a676f7b13a157a8dc0822b687"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "subst J.",
            "VernacExtend",
            "c422c701199e2ad4b32ede1a42f1f4ea434a6132"
        ],
        [
            "eapply in_angle_line; try assumption.",
            "VernacExtend",
            "070b509fad7878bc4bf123c4f307911910d1401c"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B <> J).",
            "VernacExtend",
            "b0f51fed57cacdcac4bbc89f3926ca5f3a72111f"
        ],
        [
            "unfold Out in H18.",
            "VernacExtend",
            "04cb78add398270ab1df819d4940d1ce7388a824"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(~Col A B J).",
            "VernacExtend",
            "fe01e3603b0f4741bff3abea29170a70402a51b5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ J).",
            "VernacExtend",
            "f997c0df5fce1525b88476bb5b7663201fbea29f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists J', CongA A B J A' B' J' /\\ OS A' B' J' I').",
            "VernacExtend",
            "05656638b249d989d01e3f754313bba9e875cf9f"
        ],
        [
            "apply angle_construction_1.",
            "VernacExtend",
            "74d8fb9dd523eeb51ad6414d7d07a6c1c1bfc83f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ J).",
            "VernacExtend",
            "f997c0df5fce1525b88476bb5b7663201fbea29f"
        ],
        [
            "unfold Out in H18.",
            "VernacExtend",
            "04cb78add398270ab1df819d4940d1ce7388a824"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply ncol_conga_ncol.",
            "VernacExtend",
            "84d79f45a2e1c2a831a617a65829f01f6dda2a24"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H21 J'.",
            "VernacExtend",
            "8e6bd67047b47355d70f5f81c02f51ee4168635e"
        ],
        [
            "assert(B' <> J').",
            "VernacExtend",
            "14ba013ae72212be70dcc09bfbb5849a0d691b97"
        ],
        [
            "unfold CongA in H21.",
            "VernacExtend",
            "a7123d13002cad2f5e62f0da2e268f6074f0b15e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(exists JJ', Out B' J' JJ' /\\ Cong B' JJ' B J).",
            "VernacExtend",
            "edd4bd52c910b028eead0291c634438858c2d20d"
        ],
        [
            "apply segment_construction_3.",
            "VernacExtend",
            "67bcb4ab7498e4c90bef1d0eb98536d717aaa28c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H24 JJ'.",
            "VernacExtend",
            "94997b7c131108a7548161dcce1c2e62f7da33ab"
        ],
        [
            "assert(~Col A' B' J').",
            "VernacExtend",
            "2994e2c523158730b2b6ff553b69c3d2e4f755b3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "eapply col_conga_col.",
            "VernacExtend",
            "25aced9c49c86c562dd0ce33a237f993fe5ff333"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(A' <> JJ').",
            "VernacExtend",
            "5271bf6cc0dc44e65788f03879d27d0bf7060763"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst JJ'.",
            "VernacExtend",
            "02c287e8470f43d0752d63eae8a52541a1d08e31"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "eapply col_conga_col.",
            "VernacExtend",
            "25aced9c49c86c562dd0ce33a237f993fe5ff333"
        ],
        [
            "apply out_col in H24.",
            "VernacExtend",
            "5f983c08862e8a68d3fb78c03492741d504551b7"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply H24.",
            "VernacExtend",
            "0f05a80f2fdba131e53a65e60cde3e6a6f95de1a"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B' <> JJ').",
            "VernacExtend",
            "c7e61cc34dd3c724852e779f4ad1858d3f317a78"
        ],
        [
            "unfold Out in H24.",
            "VernacExtend",
            "37dca4ccc58f6caf1235e3e0b9cb7918572330e2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(~Col A' B' JJ').",
            "VernacExtend",
            "6aa634899c9d39f95cf2f6e4428f7a6666a69956"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ JJ').",
            "VernacExtend",
            "69339a2a46a7da910b95cefed22cce77ac8c25e2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B C AA' B' CC').",
            "VernacExtend",
            "28e273ee2dede21f8b4fb04d72431fdd36bacf96"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A' B' J' A' B' JJ').",
            "VernacExtend",
            "b5cf3df3025fef749513446dc25b69a82cd355aa"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "3: apply H24.",
            "VernacExtend",
            "f2aa559c8acf3d0bc3f13646e2a0f72f0479e448"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Out B' I' JJ' \\/ TS A' B' I' JJ').",
            "VernacExtend",
            "29cf8faac921b366e08149188ad3a5a06b96876b"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "apply coplanar_perm_2, col_cop__cop with J'; Col; Cop.",
            "VernacExtend",
            "f7e1cf01d3e0852f31516a71d8932d5da365def4"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply (conga_refl A B I).",
            "VernacExtend",
            "ad027bbaf02fcbb09d741b80f9910566470b2e14"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "assert(CongA J B C J' B' C').",
            "VernacExtend",
            "b23129e9b096d161694db1964fdbd4d760905a2e"
        ],
        [
            "eapply (l11_22b _ _ _ A _ _ _ A').",
            "VernacExtend",
            "fe0357a8b6162df5e1fe34647bd38d5cd311c799"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply in_angle_one_side.",
            "VernacExtend",
            "aa64b779382e76b46944419a10508e58b6dac094"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ J).",
            "VernacExtend",
            "f997c0df5fce1525b88476bb5b7663201fbea29f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "2:apply invert_one_side.",
            "VernacExtend",
            "e86152a35825c42cfe1b6f17a1b20096d7a147ac"
        ],
        [
            "2:apply H2.",
            "VernacExtend",
            "9588a0701c01ca043af7c1806458664f85491ded"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A C AA' CC').",
            "VernacExtend",
            "fc007f1c8449070842ce05c3e5dcffad7eab1d4b"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong A J AA' JJ').",
            "VernacExtend",
            "f6494901af22504e862a76469fa58ad4c78f1291"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA J' B' C' JJ' B' CC').",
            "VernacExtend",
            "9e9513da848db762b8fd020324f63f2d72a4c120"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "4:apply H12.",
            "VernacExtend",
            "6b3f9fd953388feb04dab8d3633cbddafa678cb8"
        ],
        [
            "3:apply H24.",
            "VernacExtend",
            "f2aa559c8acf3d0bc3f13646e2a0f72f0479e448"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold CongA in H30.",
            "VernacExtend",
            "951f5d842ab521156f05b9a8d24c50d9d865dacd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold CongA in H30.",
            "VernacExtend",
            "951f5d842ab521156f05b9a8d24c50d9d865dacd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong J C JJ' CC').",
            "VernacExtend",
            "703300ecff3af17d6fdf64b029b094c8eb97b03f"
        ],
        [
            "eapply (cong2_conga_cong).",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "apply H36.",
            "VernacExtend",
            "99e8398df9d2e06bec93ba035bb12c3c58d858c0"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet AA' JJ' CC').",
            "VernacExtend",
            "70af3e8c9b274d432add839909ed830e0e0f4ba8"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "2: apply H11.",
            "VernacExtend",
            "e8f8742757d1eab1b069653ed258dfdec49ce6ed"
        ],
        [
            "2: apply H12.",
            "VernacExtend",
            "7249cbe97b61cf2d5cf47f685eafc49d0e55a7dd"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "unfold Out in H11.",
            "VernacExtend",
            "8262d933ecf064ae701cf0b308784cbf90d0f76b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H12.",
            "VernacExtend",
            "ebc71768ee807aa7a68d65f18febffad0e1240bb"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "3:apply H32.",
            "VernacExtend",
            "92035d242098853b0c58f60d1c909e3bf78a807f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists JJ'.",
            "VernacExtend",
            "74e3980cb915e3f71ce93d4dbcafb788ead690fc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(OS B' A' I' JJ').",
            "VernacExtend",
            "b79a6377f7b61b5ad1d4eaa296f106964dd80590"
        ],
        [
            "eapply out_out_one_side.",
            "VernacExtend",
            "f6180b2edc902780d1ca4ea055b12a9b6a8dae19"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_two_sides in H32.",
            "VernacExtend",
            "84f3e9065ca0940154274a83c6fad2afcee748e1"
        ],
        [
            "apply l9_9 in H32.",
            "VernacExtend",
            "6754cc097c21c8e74b5fc966af6268a2dcd4273a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_30 : forall A B C D E F A' B' C' D' E' F', LeA A B C D E F -> CongA A B C A' B' C' -> CongA D E F D' E' F' -> LeA A' B' C' D' E' F'.",
            "VernacStartTheoremProof",
            "22867c9a37f4dd83667f5a004f318c41c2448e69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=H).",
            "VernacExtend",
            "9c1f72f849691ff8c788d02cccca65e704a65a92"
        ],
        [
            "apply l11_29_a in H.",
            "VernacExtend",
            "93fb5ef7b1405a83347db1934827a27f34601213"
        ],
        [
            "ex_and H Q.",
            "VernacExtend",
            "ffb7f0ed3dfce1a69f5e80fa06320eb04681ba00"
        ],
        [
            "apply l11_29_b.",
            "VernacExtend",
            "f3aeaf9043d3867159df2b5e99c3f42f0283059f"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B' /\\ D <> E /\\ F <> E /\\ D' <> E' /\\ F' <> E').",
            "VernacExtend",
            "bd1f47fbb7e6ec3afa4a7049c8a1999a3cbd36b9"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Hi:=or_bet_out A' B' C').",
            "VernacExtend",
            "0a19b8dcbea587867440009222fb57655e7622c4"
        ],
        [
            "induction Hi.",
            "VernacExtend",
            "0c6bc376ff1615946a36b25cdb5007dddaafbadf"
        ],
        [
            "prolong A' B' Q' A' B'.",
            "VernacExtend",
            "cd88aef47817d5d1893d985fa98418d99295d681"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert(B' <> Q').",
            "VernacExtend",
            "640174354e7de30fe65b79971d1a078fcfad5ae5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "apply cong_symmetry in H13.",
            "VernacExtend",
            "67bea62f9af511a6baf228507a77f2a7c5075593"
        ],
        [
            "apply cong_identity in H13.",
            "VernacExtend",
            "bf5ca393f820ba2ebb1fb36d5a8c644b8322275a"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(A' <> Q').",
            "VernacExtend",
            "854e09537ac7f29eb0d136a28d313607048d13c3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q'.",
            "VernacExtend",
            "cff6afd7e7f2346cff696b2d104294bf6930456d"
        ],
        [
            "apply between_identity in H12.",
            "VernacExtend",
            "4690851212ff01627f844054cfa7ba9fb9e6df15"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(CongA A' B' Q' A' B' C').",
            "VernacExtend",
            "ea06312a6fee3c11f10eb5f28f88b1a9e3813e7f"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_angle_line; try assumption.",
            "VernacExtend",
            "678b2233d6757f896203fd743374878b56c42a99"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B Q).",
            "VernacExtend",
            "ef92982723acafb167cafe5773ed8e9e05f0c913"
        ],
        [
            "eapply lea_line.",
            "VernacExtend",
            "30103c517aa28407e3d7b96da5e975117431ff89"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "apply l11_29_b.",
            "VernacExtend",
            "f3aeaf9043d3867159df2b5e99c3f42f0283059f"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H2.",
            "VernacExtend",
            "5a583af2a0e6f0922843a8b77426ccdd825c8e6e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet D' E' F').",
            "VernacExtend",
            "24b2b6a4f15bffa81ee5a8f3d57159e51294d152"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply conga_line; try assumption.",
            "VernacExtend",
            "1141ae6b4b97c04376d812140040c52189b925a8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "assert(exists Q', CongA D' E' F' A' B' Q').",
            "VernacExtend",
            "a5d44f45c6440ed7b3b796b0361928ef0174691c"
        ],
        [
            "eapply angle_construction_3; assumption.",
            "VernacExtend",
            "696e6d56c933153d2a626b4f317d3a800a849caa"
        ],
        [
            "ex_and H12 Q'.",
            "VernacExtend",
            "153c3639cfc9aed25c0cfa3ae1e5233541fab95e"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_in_angle; try assumption.",
            "VernacExtend",
            "a7c68ced4891a451675485900a9acfb48c23b335"
        ],
        [
            "unfold CongA in H13.",
            "VernacExtend",
            "d9f1e30fe8e287f9ff7680556d2562886b25cbb2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Hi:=or_bet_out D' E' F').",
            "VernacExtend",
            "32e3b41f7f169814bff5f332ceb991ed21bc0e60"
        ],
        [
            "induction Hi.",
            "VernacExtend",
            "0c6bc376ff1615946a36b25cdb5007dddaafbadf"
        ],
        [
            "assert(exists Q', CongA D' E' F' A' B' Q').",
            "VernacExtend",
            "a5d44f45c6440ed7b3b796b0361928ef0174691c"
        ],
        [
            "eapply angle_construction_3; try assumption.",
            "VernacExtend",
            "e239bf60099d7b6c61a295d85568b30717dbce85"
        ],
        [
            "ex_and H13 Q'.",
            "VernacExtend",
            "bdef29c8e68a1088e7a21f2ca3e7f27203d65a2c"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert(Bet A' B' Q').",
            "VernacExtend",
            "93126feab77c6e31d464faf3697bc7656ed2fce2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply in_angle_line; try assumption.",
            "VernacExtend",
            "678b2233d6757f896203fd743374878b56c42a99"
        ],
        [
            "unfold CongA in H14.",
            "VernacExtend",
            "71adebc9dcd4e543c1468fd0464b8b134b29c95c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "assert(exists Q', CongA D' E' F' A' B' Q').",
            "VernacExtend",
            "a5d44f45c6440ed7b3b796b0361928ef0174691c"
        ],
        [
            "eapply angle_construction_3; try assumption.",
            "VernacExtend",
            "e239bf60099d7b6c61a295d85568b30717dbce85"
        ],
        [
            "ex_and H13 Q'.",
            "VernacExtend",
            "bdef29c8e68a1088e7a21f2ca3e7f27203d65a2c"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert(Out B' A' Q').",
            "VernacExtend",
            "ab15bfa37a8521d4ddbf4b42114d687c16c0703b"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA A B Q D' E' F').",
            "VernacExtend",
            "540b0e4ab118013e1a0e397ee49c8f588367684b"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A Q).",
            "VernacExtend",
            "da69facd97a35f86985a70ccb160a1b57f1334ff"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply out_in_angle_out.",
            "VernacExtend",
            "9403604353c58da7352c3cf027eaa2a0882dfce4"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B' A' C').",
            "VernacExtend",
            "e0ff83fff08cee919051bc22c17ec317db756b5e"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply out_in_angle.",
            "VernacExtend",
            "d5014586252033b3ae0c13b8335d1fed028084c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(exists QQ, CongA D' E' F' A' B' QQ /\\ OS A' B' QQ C').",
            "VernacExtend",
            "57e9974bfcd06c413dc5d76181ecee2545c5d279"
        ],
        [
            "eapply angle_construction_1.",
            "VernacExtend",
            "cc89db8212e92af5d67972d23f9b5f6b0e35a4f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H13 Q'.",
            "VernacExtend",
            "bdef29c8e68a1088e7a21f2ca3e7f27203d65a2c"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply conga_preserves_in_angle.",
            "VernacExtend",
            "2f81faa73a44d215de9a684177549a6d87276b0c"
        ],
        [
            "3: apply H.",
            "VernacExtend",
            "af9b3cdf5f3a1f87c8cdc1914e68b5f3bb3edca5"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "try assumption.",
            "VernacExtend",
            "5bad5dde94a2c379a0c6d081e922fa066bc42f26"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_31_1 : forall A B C D E F, Out B A C -> D <> E -> F <> E -> LeA A B C D E F.",
            "VernacStartTheoremProof",
            "08fb659bb6121cd9ecc5f261e4518e4b940726ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle1123; assumption.",
            "VernacExtend",
            "b2de51e7e9a21b5acb2998c224f0109f8945593d"
        ],
        [
            "apply l11_21_b.",
            "VernacExtend",
            "1da580424192b6645444b07bef8443a7727be11c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_31_2 : forall A B C D E F, A <> B -> C <> B -> D <> E -> F <> E -> Bet D E F -> LeA A B C D E F.",
            "VernacStartTheoremProof",
            "f46213d0125c0be0aacf99eb1b14c46d339a3670"
        ],
        [
            "intros; destruct (angle_construction_3 A B C D E) as [P HCongA]; auto.",
            "VernacExtend",
            "c1d4098e05e9b017ae70bdd91c10ca7da084cabf"
        ],
        [
            "exists P; split; try apply in_angle_line; unfold CongA in *; spliter; auto.",
            "VernacExtend",
            "30899cba538e7d20d0ea60d4e044423a2676016d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_refl : forall A B C, A <> B -> C <> B -> LeA A B C A B C.",
            "VernacStartTheoremProof",
            "cc24e1d68b5ab7682cac04e2c0250797bb98f2e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists C .",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle3123; assumption.",
            "VernacExtend",
            "11e01e253f128227ad4c20f1239756b94d2f0519"
        ],
        [
            "apply conga_refl; assumption.",
            "VernacExtend",
            "af9b062c8cbd24307d195fe8577271ed342bc710"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga__lea : forall A B C D E F, CongA A B C D E F -> LeA A B C D E F.",
            "VernacStartTheoremProof",
            "1e448ea90c7bffe8d9c2085849e7a66f1b72d9f9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists F.",
            "VernacExtend",
            "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle3123.",
            "VernacExtend",
            "e127b891539fe1c477172f8ede9879d0aad53b59"
        ],
        [
            "apply (conga_diff45 A B C D E F); assumption.",
            "VernacExtend",
            "8a70765e51205a1d5aecb3cbee3d83be24d22480"
        ],
        [
            "apply (conga_diff56 A B C D); assumption.",
            "VernacExtend",
            "7cd041a3487d6216281b9e9375ed55aa37b8c81b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga__lea456123 : forall A B C D E F, CongA A B C D E F -> LeA D E F A B C.",
            "VernacStartTheoremProof",
            "fc4a99615781e35148eb43e7f3e3b0fb62bee971"
        ],
        [
            "intros; apply conga__lea, conga_sym; trivial.",
            "VernacExtend",
            "81decd4f87e0f84f38b5efc6d7f8024c9c60f92a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_out4__lea : forall A B C D E F A' C' D' F', LeA A B C D E F -> Out B A A' -> Out B C C' -> Out E D D' -> Out E F F' -> LeA A' B C' D' E F'.",
            "VernacStartTheoremProof",
            "55c07ae1a74197425c94d047c42b695d5f0ec2ed"
        ],
        [
            "intros A B C D E F A' C' D' F' Hl HA HC HD HF.",
            "VernacExtend",
            "8438cc087f1acc2d6f9f36c154053b1fc6afebdc"
        ],
        [
            "apply (l11_30 A B C D E F); trivial; apply out2__conga; apply l6_6; assumption.",
            "VernacExtend",
            "0f3ba766bdbd2b61db49798397833a73a1093a90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea121345 : forall A B C D E, A<>B -> C<>D -> D<>E -> LeA A B A C D E.",
            "VernacStartTheoremProof",
            "2a139a6ab7545a1113c5126748faaa5e52d004e5"
        ],
        [
            "intros A B C D E HAB HCD HDE.",
            "VernacExtend",
            "2c45de7ace13185bfd9be1e864956ec477f6993c"
        ],
        [
            "apply l11_31_1; try (apply out_trivial); auto.",
            "VernacExtend",
            "396caa2bfb35ec342ddeb325075b6bc72bbd9ee3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle__lea : forall A B C P, InAngle P A B C -> LeA A B P A B C.",
            "VernacStartTheoremProof",
            "7da220000207ab7ed99be944f10ea15d8d10feec"
        ],
        [
            "intros A B C P HIn.",
            "VernacExtend",
            "bda2d46918c0d8fa6dccb7de1ed2021aa53bd8ae"
        ],
        [
            "exists P; split; trivial.",
            "VernacExtend",
            "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
        ],
        [
            "unfold InAngle in HIn; spliter.",
            "VernacExtend",
            "41dc6afb79bf6a5cc2fca36d89f9bb478354e8ca"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_trans : forall A B C D E, InAngle C A B D -> InAngle D A B E -> InAngle C A B E.",
            "VernacStartTheoremProof",
            "86e148f16cb6455f75cba754f9e67ba5e2552e15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HA1 :=H).",
            "VernacExtend",
            "b2a4901f58438c7db1a111aa7e359948ad77927f"
        ],
        [
            "assert(HA2:= H0).",
            "VernacExtend",
            "42bc91e6910e1eaff4d9314bee8abffadd8bde2b"
        ],
        [
            "unfold InAngle in H.",
            "VernacExtend",
            "d83ef6d4d8863ce6e5be9e75eca8e18b636bb9c3"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 DD.",
            "VernacExtend",
            "75b846c545e071cf56bcd4c54b5e74677d0d0027"
        ],
        [
            "ex_and H6 CC.",
            "VernacExtend",
            "ebccd01dcad4db55a17cae90a0b6e32e0a302380"
        ],
        [
            "induction H8; induction H7.",
            "VernacExtend",
            "25b5c92d6a2351db3af7f52dcbf42f8c00833567"
        ],
        [
            "subst CC.",
            "VernacExtend",
            "f5a795217e973fcd12ec8ab043ca49dbd4598964"
        ],
        [
            "subst DD.",
            "VernacExtend",
            "a370c20c6629617c143a8c0a70e2033810142af6"
        ],
        [
            "apply in_angle_line; assumption.",
            "VernacExtend",
            "e1d284a730a437275259581359bc2e7a03c8e5c7"
        ],
        [
            "subst CC.",
            "VernacExtend",
            "f5a795217e973fcd12ec8ab043ca49dbd4598964"
        ],
        [
            "assert(Bet A B E).",
            "VernacExtend",
            "3c5f8be0d0fd3f3704abd831661d981a0e181115"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_line; assumption.",
            "VernacExtend",
            "e1d284a730a437275259581359bc2e7a03c8e5c7"
        ],
        [
            "subst DD.",
            "VernacExtend",
            "a370c20c6629617c143a8c0a70e2033810142af6"
        ],
        [
            "apply in_angle_line; assumption.",
            "VernacExtend",
            "e1d284a730a437275259581359bc2e7a03c8e5c7"
        ],
        [
            "assert(InAngle C A B DD).",
            "VernacExtend",
            "5bd27b50f646d75f43c855879a1a60284bdfc4ba"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply HA1.",
            "VernacExtend",
            "2c86f0c19324c0798eec6cd633c2739540851701"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold InAngle in H9.",
            "VernacExtend",
            "019e185f65b487ec0193eab5791420314db58283"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H12 CC'.",
            "VernacExtend",
            "b4bab76cc2f3b1bb5066a1bebfe1f017a50d777e"
        ],
        [
            "induction H13.",
            "VernacExtend",
            "276e1b0c68de8fd543ac18b72aff6bef1940800a"
        ],
        [
            "subst CC'.",
            "VernacExtend",
            "f69495ada4565c100471669fa2bcd189fdec62a8"
        ],
        [
            "assert(Bet A B E).",
            "VernacExtend",
            "3c5f8be0d0fd3f3704abd831661d981a0e181115"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_line; assumption.",
            "VernacExtend",
            "e1d284a730a437275259581359bc2e7a03c8e5c7"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "4: apply l6_6.",
            "VernacExtend",
            "e666a2c46b4a1e7deff6fdc8e29604986163c698"
        ],
        [
            "4:apply H13.",
            "VernacExtend",
            "0180bd6e24ce3cb74b761ff108628d6689d9c5da"
        ],
        [
            "2: apply out_trivial.",
            "VernacExtend",
            "743c871ca2dbfd7ab339a49e9ccb17299ad5ea98"
        ],
        [
            "3: apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "unfold Out in H13.",
            "VernacExtend",
            "f13a07f2723f731e45294dfcc3bfc6a719c54ea4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists CC'.",
            "VernacExtend",
            "de4379921960dc5bf26871bfa40aa0ddc7d247cb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold Out in H13.",
            "VernacExtend",
            "f13a07f2723f731e45294dfcc3bfc6a719c54ea4"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_trans : forall A B C A1 B1 C1 A2 B2 C2, LeA A B C A1 B1 C1 -> LeA A1 B1 C1 A2 B2 C2 -> LeA A B C A2 B2 C2.",
            "VernacStartTheoremProof",
            "27645cba314bd65f1d49a5c8c0d96f76c59c52f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Hlea1 := H).",
            "VernacExtend",
            "05ad51598a45e09fad609322153f11696bfb254c"
        ],
        [
            "assert (Hlea2 := H0).",
            "VernacExtend",
            "89697b0ec3eb43c420184ca1baa873eaa0eaaa47"
        ],
        [
            "unfold LeA in H.",
            "VernacExtend",
            "f6755c4cc833482770be14e943273f174e05e04f"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H P1.",
            "VernacExtend",
            "b856ac328a02d654ee0fa2e0a2aa3745bea740b7"
        ],
        [
            "ex_and H0 P2.",
            "VernacExtend",
            "f63abe24c8386b3718bf8a36d36c148d699cc069"
        ],
        [
            "assert( A <> B /\\ C <> B /\\ A1 <> B1 /\\ C1 <> B1 /\\ A2 <> B2 /\\ C2 <> B2).",
            "VernacExtend",
            "eab144bdfb1e440cc49af4731e4bd18748bce5ae"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH1 := or_bet_out A B C).",
            "VernacExtend",
            "2f73eca8ca080efe7d618a69826ead6a0b63baf3"
        ],
        [
            "induction HH1.",
            "VernacExtend",
            "3c2ab5f496983a42d98910d6c28f14dce7aa06b4"
        ],
        [
            "assert(Bet A1 B1 P1).",
            "VernacExtend",
            "69c4fba5f5731d28fef7512a0fa50a7608f489eb"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A1 B1 C1).",
            "VernacExtend",
            "5220047453bf7322901f8f8d7b85ff7c37496585"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A2 B2 P2).",
            "VernacExtend",
            "874d9ffac02e099a6cf53aa168401dd1da89c05b"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A2 B2 C2).",
            "VernacExtend",
            "27c343e039ac9dc2596f983bbbc0869f94a90851"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_31_2; assumption.",
            "VernacExtend",
            "ee2ecf2775ad638322ce058cc20c7100d95d4294"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "apply l11_31_1; assumption.",
            "VernacExtend",
            "9cff4f910d0832d4ee2258dc82a1a226a91cde78"
        ],
        [
            "assert(HH2 := or_bet_out A2 B2 C2).",
            "VernacExtend",
            "f6b868fdb93099e3e306292f02a805467f026645"
        ],
        [
            "induction HH2.",
            "VernacExtend",
            "53d7ad049aabb458d67aa92c73aee2d1859e075f"
        ],
        [
            "apply l11_31_2; assumption.",
            "VernacExtend",
            "ee2ecf2775ad638322ce058cc20c7100d95d4294"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "assert(Out B2 A2 P2).",
            "VernacExtend",
            "dc368a6f6ac4d0377aeef26ca017ede6ac732ef2"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B1 A1 C1).",
            "VernacExtend",
            "671ed87e43a0732cb7a139296a42def59c139dfc"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B1 A1 P1).",
            "VernacExtend",
            "45b70a0f8fda7b3d4ffa5e31eb992fb2a0d65087"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_31_1; assumption.",
            "VernacExtend",
            "9cff4f910d0832d4ee2258dc82a1a226a91cde78"
        ],
        [
            "assert(exists P, CongA A B C A2 B2 P /\\ OS A2 B2 P C2).",
            "VernacExtend",
            "c7b744aeb5247d43666607701e7e4cda45db0ee1"
        ],
        [
            "apply angle_construction_1; assumption.",
            "VernacExtend",
            "fa137d2fccbe358939ca0d7d45943543eedf21b6"
        ],
        [
            "ex_and H11 P.",
            "VernacExtend",
            "dc175a755b1aadc817790f8c36f09c8619668499"
        ],
        [
            "assert (OS A2 B2 P2 C2).",
            "VernacExtend",
            "65ef301e5c7b43910ece4ad1ebe801e5bdef6433"
        ],
        [
            "apply in_angle_one_side.",
            "VernacExtend",
            "aa64b779382e76b46944419a10508e58b6dac094"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B2 <> A2).",
            "VernacExtend",
            "67c7081b746f30edf0442aa139c24e4c5a74def8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(P2 <> A2).",
            "VernacExtend",
            "e78ac4a374be4ecf435a21726e8099fe9c8e8a6b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P2.",
            "VernacExtend",
            "734a47a761ac92207c97818a157a40f3f1ca06d6"
        ],
        [
            "assert(Out B1 A1 C1).",
            "VernacExtend",
            "671ed87e43a0732cb7a139296a42def59c139dfc"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "2: apply conga_sym.",
            "VernacExtend",
            "a7968ac5d63ce5f16bff83c6174f4c706db52254"
        ],
        [
            "2:apply H2.",
            "VernacExtend",
            "9588a0701c01ca043af7c1806458664f85491ded"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B1 A1 P1).",
            "VernacExtend",
            "45b70a0f8fda7b3d4ffa5e31eb992fb2a0d65087"
        ],
        [
            "eapply out_in_angle_out.",
            "VernacExtend",
            "9403604353c58da7352c3cf027eaa2a0882dfce4"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply out_col in H16.",
            "VernacExtend",
            "a769a47880119ce7c435858fbfaa81fd94f7da55"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=or_bet_out A2 B2 P2 ).",
            "VernacExtend",
            "a2e7e7aba8c7b6d7c32cdfa5078c30f850d38437"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert (Bet A2 B2 C2).",
            "VernacExtend",
            "27c343e039ac9dc2596f983bbbc0869f94a90851"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H15.",
            "VernacExtend",
            "114aeada8ab88f84aa32299603d5ad2269900189"
        ],
        [
            "assert(Out B1 A1 C1).",
            "VernacExtend",
            "671ed87e43a0732cb7a139296a42def59c139dfc"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert( Out B1 A1 P1).",
            "VernacExtend",
            "45b70a0f8fda7b3d4ffa5e31eb992fb2a0d65087"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply out_col in H18.",
            "VernacExtend",
            "a9981ac819a64f87f1782ff001033781ecc08963"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H2.",
            "VernacExtend",
            "5a583af2a0e6f0922843a8b77426ccdd825c8e6e"
        ],
        [
            "assert(OS A2 B2 P P2).",
            "VernacExtend",
            "d07dc54894174fa6530d78511108b24c8154ec48"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H12; eapply l11_21_a.",
            "VernacExtend",
            "128111e605454c7ac3f91cdd1c9aa8d7e70eeef3"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (in_angle_trans _ _ _ P2).",
            "VernacExtend",
            "60905e7e804a16acecddcd5bd4811710d13eca6a"
        ],
        [
            "eapply conga_preserves_in_angle.",
            "VernacExtend",
            "2f81faa73a44d215de9a684177549a6d87276b0c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "2: apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_asym : forall A B C D, InAngle D A B C -> InAngle C A B D -> CongA A B C A B D.",
            "VernacStartTheoremProof",
            "2c584e998f2b027afe822ceeaf4572f20697e551"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold InAngle in *.",
            "VernacExtend",
            "610395d1b01656200e0634f5317657d86675c7e8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 CC.",
            "VernacExtend",
            "3ccd6585c9fb9dbba0f2f5e6ef38319601617896"
        ],
        [
            "ex_and H6 DD.",
            "VernacExtend",
            "7389a07067fff33cffaa3f9dc6540c93651f4e99"
        ],
        [
            "induction H7; induction H8.",
            "VernacExtend",
            "5cd6180dafbef93a1b69777efbb5c534d7517015"
        ],
        [
            "subst DD.",
            "VernacExtend",
            "a370c20c6629617c143a8c0a70e2033810142af6"
        ],
        [
            "subst CC.",
            "VernacExtend",
            "f5a795217e973fcd12ec8ab043ca49dbd4598964"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst CC.",
            "VernacExtend",
            "f5a795217e973fcd12ec8ab043ca49dbd4598964"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "2: apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst DD.",
            "VernacExtend",
            "a370c20c6629617c143a8c0a70e2033810142af6"
        ],
        [
            "assert(Bet A B D).",
            "VernacExtend",
            "3a88baada64674ea3a216cb507f32349c352eb21"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(exists B', Bet CC B' C /\\ Bet DD B' D).",
            "VernacExtend",
            "545bbe7d2795db3180169006bdf4f5617ef15e65"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H9 X.",
            "VernacExtend",
            "a1939a8a44e883e7c53e5d3f273e85f0c8f8b1d0"
        ],
        [
            "assert (Out B X C).",
            "VernacExtend",
            "a6bb4ee40baa0e7ad05feb9975b25f88847c0741"
        ],
        [
            "eapply out_bet_out_2.",
            "VernacExtend",
            "0e077e7f1fc712c320ac64f64176b56cb25501a0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B X D).",
            "VernacExtend",
            "8e73302a91c38c0302175d90aa37d3c068f842fa"
        ],
        [
            "eapply out_bet_out_2.",
            "VernacExtend",
            "0e077e7f1fc712c320ac64f64176b56cb25501a0"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out B C D).",
            "VernacExtend",
            "8421e95324665498425b3fc06d6096c7874d188c"
        ],
        [
            "eapply out2_out_1.",
            "VernacExtend",
            "d8655ac901461309cc17e1cdc056b8cb48bb28cc"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "4:apply H13.",
            "VernacExtend",
            "0180bd6e24ce3cb74b761ff108628d6689d9c5da"
        ],
        [
            "3: apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption; apply H7.",
            "VernacExtend",
            "44dcbba692eb03e19e26fa22ff2df6961372c8a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_asym : forall A B C D E F, LeA A B C D E F -> LeA D E F A B C -> CongA A B C D E F.",
            "VernacStartTheoremProof",
            "7faf0786bceeb038bdd488d8dc47024406291421"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "induction (bet_dec A B C).",
            "VernacExtend",
            "313e5fab8d1dc475be87f4804cd1fb34337126d9"
        ],
        [
            "apply lea_distincts in H0; spliter.",
            "VernacExtend",
            "577425c40f3f4ccb16048f3dae5e514515d7c9e0"
        ],
        [
            "apply conga_line; auto.",
            "VernacExtend",
            "d617a3a309cc0fda9fae3764d926c53f8491aa08"
        ],
        [
            "ex_and H P.",
            "VernacExtend",
            "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
        ],
        [
            "apply bet_in_angle_bet with P; trivial.",
            "VernacExtend",
            "2bf164a06ce3cb15d2abc827914d3a9fd03561da"
        ],
        [
            "apply (bet_conga__bet A B C); assumption.",
            "VernacExtend",
            "cee5931c2f8a542dd17fdb254e573098bab54d73"
        ],
        [
            "apply not_bet_out in H2; trivial.",
            "VernacExtend",
            "1310544a30f056d30ef8cf162b9f66bb5156e6f7"
        ],
        [
            "apply l11_21_b; trivial.",
            "VernacExtend",
            "fb6c9859c865472773ee6f2741b1969e90d8f99f"
        ],
        [
            "ex_and H0 P.",
            "VernacExtend",
            "d2c2ec0968737c29a68f242b092b227d7bad8d3a"
        ],
        [
            "apply (l11_21_a A B P).",
            "VernacExtend",
            "0f89274d662bbe84ecbf679dd4de3dc58dfa2aa3"
        ],
        [
            "apply out_in_angle_out with C; assumption.",
            "VernacExtend",
            "5a2a188e9e3c874d9d7ee50a448c599e2250ad85"
        ],
        [
            "apply conga_sym; assumption.",
            "VernacExtend",
            "2b25f222f2bd1654890783ce24b11c9ff220586f"
        ],
        [
            "apply l11_29_a in H.",
            "VernacExtend",
            "93fb5ef7b1405a83347db1934827a27f34601213"
        ],
        [
            "unfold LeA in *.",
            "VernacExtend",
            "8e6fc1f965ce7ec5df3fa3fdef94fa190195654c"
        ],
        [
            "ex_and H Q.",
            "VernacExtend",
            "ffb7f0ed3dfce1a69f5e80fa06320eb04681ba00"
        ],
        [
            "ex_and H0 P.",
            "VernacExtend",
            "d2c2ec0968737c29a68f242b092b227d7bad8d3a"
        ],
        [
            "assert(A <> B /\\ Q <> B /\\ P <> B /\\ D <> E /\\ F <> E).",
            "VernacExtend",
            "5fc6a2baba7ab36786614c1314c40c04faa7104e"
        ],
        [
            "unfold CongA in *.",
            "VernacExtend",
            "c8f46bcdc44c4b53842307cc8ed8c962804c88d5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA A B Q A B P).",
            "VernacExtend",
            "158ceaf83cdc0fe73dc3e28814419afec6c17c57"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH1:= or_bet_out A B Q).",
            "VernacExtend",
            "04b31d602d484605855305135f403747793be697"
        ],
        [
            "induction HH1.",
            "VernacExtend",
            "3c2ab5f496983a42d98910d6c28f14dce7aa06b4"
        ],
        [
            "assert(Bet A B P).",
            "VernacExtend",
            "308a89ddabe19d05e8fd94f0d13fc34f5d3f0f9e"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply conga_line; try assumption.",
            "VernacExtend",
            "1141ae6b4b97c04376d812140040c52189b925a8"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "assert(Out E D F).",
            "VernacExtend",
            "29a88430a9c1fd02b5d26e12eb1f94e133ea5e5b"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A P).",
            "VernacExtend",
            "d7919589b20ca545a64b32f1d0103a1ae3e63dcd"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_21_b.",
            "VernacExtend",
            "696326d325378fe4aff11921e900a90658126dc1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH2:= or_bet_out A B P).",
            "VernacExtend",
            "68d722744211f5e80474aeb101addef9e975a81f"
        ],
        [
            "induction HH2.",
            "VernacExtend",
            "53d7ad049aabb458d67aa92c73aee2d1859e075f"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet D E F).",
            "VernacExtend",
            "b7a8227ae1c36f1eed7322dd18fd08b3ff9418a2"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_line; try assumption.",
            "VernacExtend",
            "72608f0ffdd05881b1410424560518bd76b0d298"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H11.",
            "VernacExtend",
            "7559a9688240e9cbd9e56430c8ba163a9a120564"
        ],
        [
            "assert(Out B A Q).",
            "VernacExtend",
            "da69facd97a35f86985a70ccb160a1b57f1334ff"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out E D F).",
            "VernacExtend",
            "29a88430a9c1fd02b5d26e12eb1f94e133ea5e5b"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_21_b.",
            "VernacExtend",
            "1da580424192b6645444b07bef8443a7727be11c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B P Q \\/ TS A B P Q).",
            "VernacExtend",
            "dd214f0ac4258e0e58131869efacca208c678478"
        ],
        [
            "apply conga_cop__or_out_ts.",
            "VernacExtend",
            "54809a7d1530f6e58a3e1f7b37245b110dd903b1"
        ],
        [
            "apply coplanar_trans_1 with C; Cop; Col.",
            "VernacExtend",
            "9e67c61cbf4b789e56814412f64f707fc124fbc9"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "assert(InAngle C A B P).",
            "VernacExtend",
            "4311f46a089a504f9f67bbdca4a7c35a767359c6"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "3: apply H12.",
            "VernacExtend",
            "4edbbf369b952d822586366e0364d3c06c8c05ac"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(CongA A B C A B P).",
            "VernacExtend",
            "c3282e91579041da8af6b1e4b5db62cd53743e1b"
        ],
        [
            "apply in_angle_asym; assumption.",
            "VernacExtend",
            "f4bc519d566d6f01b1937c82bf4ad91b0ac07b39"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(C <> B).",
            "VernacExtend",
            "bab4b43ab58c0f811c6b1bce7f134194c8c7a7f3"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=or_bet_out A B C).",
            "VernacExtend",
            "568d47a05e94d51853f31ad6f110a5b18fe51397"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(Bet A B Q).",
            "VernacExtend",
            "ef92982723acafb167cafe5773ed8e9e05f0c913"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H14.",
            "VernacExtend",
            "f5a05fe2485bcd9a092ccb06894396aa5209d505"
        ],
        [
            "assert(Out B A P).",
            "VernacExtend",
            "d7919589b20ca545a64b32f1d0103a1ae3e63dcd"
        ],
        [
            "eapply in_angle_out.",
            "VernacExtend",
            "1dc8d3d3db736cb7643d1d331a68ec5be2fd0de7"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply out_col in H15.",
            "VernacExtend",
            "8c0b0dd66c01e60219367a91b73b8b06fa011a94"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply in_angle_one_side in H.",
            "VernacExtend",
            "19c9b865a15a74b9ee5a41467ce9cc4822c47710"
        ],
        [
            "apply in_angle_one_side in H0.",
            "VernacExtend",
            "977fc73b1397c2ad643d93c4a63c44d3076b41ec"
        ],
        [
            "assert(OS A B P Q).",
            "VernacExtend",
            "365ba063980e35bcd9d886949e48d52fa8993b1f"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H15.",
            "VernacExtend",
            "59430d510672dfa0d7151a49b539ac8df5df4bae"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_lta__bet : forall A B C X Y Z, Col X Y Z -> LtA A B C X Y Z -> Bet X Y Z.",
            "VernacStartTheoremProof",
            "42ec619ee9add1df2f517af8bd35827f79feac91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "assert (Hd := H0).",
            "VernacExtend",
            "c69a123d85c581178d0b425115b3140d85d1b81f"
        ],
        [
            "apply not_out_bet.",
            "VernacExtend",
            "4d81867de2ff7dda5537b3e192c5c1f4976503a8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lea_distincts in H0.",
            "VernacExtend",
            "dff0b6cb7328a1df5877966b420d3938aff8c287"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_31_1; auto.",
            "VernacExtend",
            "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_lta__out : forall A B C X Y Z, Col A B C -> LtA A B C X Y Z -> Out B A C.",
            "VernacStartTheoremProof",
            "35a2c0b91b2aa7e3da74823d83692c5c9517950a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply not_bet_out.",
            "VernacExtend",
            "a440058293db7cae4cfd0786f15d17e97c111976"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lea_distincts in H0.",
            "VernacExtend",
            "dff0b6cb7328a1df5877966b420d3938aff8c287"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_distincts : forall A B C D E F, LtA A B C D E F -> A<>B /\\ C<>B /\\ D<>E /\\ F<>E /\\ D <> F.",
            "VernacStartTheoremProof",
            "b10f566ba271af380ae20400f0be48c46fbbdebb"
        ],
        [
            "intros A B C D E F Hlta.",
            "VernacExtend",
            "c92b94871630be1ebb0ded9cd8b664c65340c525"
        ],
        [
            "assert (Hlea : LeA A B C D E F) by (destruct Hlta; assumption).",
            "VernacExtend",
            "71b898f61903cbec495eae6680c3699daec766e2"
        ],
        [
            "apply lea_distincts in Hlea.",
            "VernacExtend",
            "aeeca3a649881755aa318e2d6c433132f71ff662"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst F.",
            "VernacExtend",
            "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
        ],
        [
            "assert (Bet D E D) by (apply (col_lta__bet A B C); Col).",
            "VernacExtend",
            "c6a244cbfb9a02fd6d1ec0552d7c113e3dd23766"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gta_distincts : forall A B C D E F, GtA A B C D E F -> A<>B /\\ C<>B /\\ D<>E /\\ F<>E /\\ A <> C.",
            "VernacStartTheoremProof",
            "5d58551fd634156e116662d1dc12f79b9c490b5d"
        ],
        [
            "intros A B C D E F Hgta.",
            "VernacExtend",
            "1329d19371e21dd08064d2d5bec23c3e9067866e"
        ],
        [
            "apply lta_distincts in Hgta.",
            "VernacExtend",
            "f399b96494802b73918dd9a569fc69e3105ea043"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_distincts : forall A B C, Acute A B C -> A<>B /\\ C<>B.",
            "VernacStartTheoremProof",
            "c7e51d01aaf5acdd1f41d00d0015c21e4e2b5c1a"
        ],
        [
            "intros A B C Hacute.",
            "VernacExtend",
            "e700eb67321827e612d86c29e4b1f3abccb7ed24"
        ],
        [
            "destruct Hacute as [x [y [z [HPer Hlta]]]].",
            "VernacExtend",
            "eb5817cfd6598b2eb13d6d10f2dc4a2db2b29a0a"
        ],
        [
            "apply lta_distincts in Hlta.",
            "VernacExtend",
            "19d08099f2c1a9f157a8d5c41439bc861c596e1d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_distincts : forall A B C, Obtuse A B C -> A<>B /\\ C<>B /\\ A <> C.",
            "VernacStartTheoremProof",
            "7a28752951095539ed09864d0b7b7ae0ec1b2fa3"
        ],
        [
            "intros A B C Hobtuse.",
            "VernacExtend",
            "c087783834cf007d9eba074b5589c6d3a1e70822"
        ],
        [
            "destruct Hobtuse as [x [y [z [HPer Hgta]]]].",
            "VernacExtend",
            "4c2142134e0002a95b60834068dd759e74600545"
        ],
        [
            "apply gta_distincts in Hgta.",
            "VernacExtend",
            "f766cee3f8b3999b7104def96185f67adf3ee797"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_sides_in_angle : forall A B C P P', B <> P' -> TS B P A C -> Bet P B P' -> InAngle P A B C \\/ InAngle P' A B C.",
            "VernacStartTheoremProof",
            "e7e6316de9a8b61200d02bd47fe50645a13f5eed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H3 T.",
            "VernacExtend",
            "e9b4960cf56ec74f3403e01176077468cd739a52"
        ],
        [
            "assert(A <> B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert(C <> B).",
            "VernacExtend",
            "bab4b43ab58c0f811c6b1bce7f134194c8c7a7f3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "induction (eq_dec_points B T).",
            "VernacExtend",
            "360a9cc9d7507340b21412f8345a7276861efb80"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert(P <> B /\\ T <> B).",
            "VernacExtend",
            "33388fa97f184a43d52cb6b6d5c00ce82d8f4864"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= or_bet_out P B T).",
            "VernacExtend",
            "2339ef33dc268644c9186a04f43f52bccc89dc01"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "unfold Out in H1.",
            "VernacExtend",
            "c665fabf94f45c35d4b04a205937ae5f459bc73d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "2:apply H10.",
            "VernacExtend",
            "d50710bbda3cee3c25062bcc19e73e52353678e9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_3 in H3.",
            "VernacExtend",
            "4120073df39a0b9c365cab73fa1e6a06fab4f5c2"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_reverse : forall A B A' C D, A' <> B -> Bet A B A' -> InAngle C A B D -> InAngle D A' B C.",
            "VernacStartTheoremProof",
            "222af67c7f052a9f3809508df62e1a4e45b8dc23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hd := H1).",
            "VernacExtend",
            "89a44ccafa2c6611800c527dc4bf852ed46dade9"
        ],
        [
            "apply inangle_distincts in Hd.",
            "VernacExtend",
            "ad93c23f327ccddf94c7513d05655b1be3fd72a2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (col_dec B A C).",
            "VernacExtend",
            "72c4b20bc492fd1c407f6fc992e5605f1c50ae5a"
        ],
        [
            "assert(HH:=or_bet_out C B A).",
            "VernacExtend",
            "c3eff418f4d0ee6d7cbceb4028db95d010b8ea17"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(Bet A B D).",
            "VernacExtend",
            "3a88baada64674ea3a216cb507f32349c352eb21"
        ],
        [
            "eapply bet_in_angle_bet.",
            "VernacExtend",
            "a8d0698be60de7c2cd0f832c3a3a443a3f8d4e61"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Out B A' C).",
            "VernacExtend",
            "ba8f7558f303f0ef86f4c117aa6ce011db6754d5"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert( Out B D A').",
            "VernacExtend",
            "2cb7d952958fd139b6ab83e1b3e38f5886be1249"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_in_angle.",
            "VernacExtend",
            "05d4daec8f1ac4ba01aa8a59e4c27083870da51a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Out in H6.",
            "VernacExtend",
            "0c4fa35cf20d16671c854e69c37bf73ff4093ba5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "eapply between_inner_transitivity.",
            "VernacExtend",
            "19dcf315e262e5b6c891bb290c723670da024856"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction (col_dec B D C).",
            "VernacExtend",
            "74901fe90d4e04bd5db5e8a0e975d2ac80a76fa7"
        ],
        [
            "assert(HH:=or_bet_out C B D).",
            "VernacExtend",
            "2105e13b82903e0acc951d6a858d378d6dfe6a64"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(OS A B C D).",
            "VernacExtend",
            "7cc6ce29770af3ced00ad548a749e7953a382eb6"
        ],
        [
            "apply in_angle_one_side.",
            "VernacExtend",
            "aa64b779382e76b46944419a10508e58b6dac094"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A B C D).",
            "VernacExtend",
            "2d3a38d9e3ff1216403478278f0f678c63087f0b"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H9.",
            "VernacExtend",
            "d2e117471f31dccab0971da3b6b1ae1379a46a53"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "assert(InAngle C A' B C).",
            "VernacExtend",
            "0047a7e9374bfe183fc52f309ffbb0ae7801febf"
        ],
        [
            "apply inangle3123; assumption.",
            "VernacExtend",
            "11e01e253f128227ad4c20f1239756b94d2f0519"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert( HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "apply in_angle_two_sides in HH.",
            "VernacExtend",
            "b5a066cee00d0579de6a8113b49bf9a98a597ca9"
        ],
        [
            "assert(HH1:=H1).",
            "VernacExtend",
            "6c3c0a9879269335c53941cd8c3746911de37368"
        ],
        [
            "unfold InAngle in H1.",
            "VernacExtend",
            "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H9 X.",
            "VernacExtend",
            "a1939a8a44e883e7c53e5d3f273e85f0c8f8b1d0"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply col_in_angle; try assumption.",
            "VernacExtend",
            "a7c68ced4891a451675485900a9acfb48c23b335"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH0:= HH).",
            "VernacExtend",
            "ac4abbdb1ef4ee09a65f67a755897944344300c0"
        ],
        [
            "unfold TS in HH.",
            "VernacExtend",
            "5d730ec8ab2a61acc4d8f44228faa3c07fe10794"
        ],
        [
            "assert (C <> B).",
            "VernacExtend",
            "bab4b43ab58c0f811c6b1bce7f134194c8c7a7f3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(OS D B C A).",
            "VernacExtend",
            "e554f08d0e2bd4c0ede348db43b1ed0abad3f710"
        ],
        [
            "apply in_angle_one_side.",
            "VernacExtend",
            "aa64b779382e76b46944419a10508e58b6dac094"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ X).",
            "VernacExtend",
            "dfdc7644edaeb98bee8b5997cf13831b5b1b0c06"
        ],
        [
            "unfold Out in H10.",
            "VernacExtend",
            "772185f7fb7ba3bd0f7b9c8fa28b22e07e3e517e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_identity in H9.",
            "VernacExtend",
            "3521b06f7ec8243a4f63e69c67d6fbaaf2e229e6"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "ex_and H14 T.",
            "VernacExtend",
            "fc40d02eb5ad5c1f9c6d54506bc7439c33ef57db"
        ],
        [
            "apply between_identity in H14.",
            "VernacExtend",
            "dd40eb6ccf09ca19ddea163c0fb0f12e6ce4aa92"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A D B).",
            "VernacExtend",
            "b39a9df8eacb7b3663edbf6a7e384ac724058083"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ X).",
            "VernacExtend",
            "dfdc7644edaeb98bee8b5997cf13831b5b1b0c06"
        ],
        [
            "unfold Out in H10.",
            "VernacExtend",
            "772185f7fb7ba3bd0f7b9c8fa28b22e07e3e517e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply between_identity in H9.",
            "VernacExtend",
            "3521b06f7ec8243a4f63e69c67d6fbaaf2e229e6"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A' D B).",
            "VernacExtend",
            "f3533eebbae9d49165c23aafc90eec6697b9e11f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ A').",
            "VernacExtend",
            "957d83969d2658d877f35cfea346a36f4ac54c2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS D B A A').",
            "VernacExtend",
            "dde28ab1fc96d85dbef0c960fed4fc85eeeb750a"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS D B C A' ).",
            "VernacExtend",
            "b00bb84a00a7f67921d13f7dac04785fb99017f4"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold TS in H19.",
            "VernacExtend",
            "83bb42c9494113df458614aa4c3587cb7c2ac9a9"
        ],
        [
            "assert (~ Col C D B).",
            "VernacExtend",
            "cf62dc220ee82cf2e59493c0495b69a88acf922d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H22 Y.",
            "VernacExtend",
            "ec9274a763d4e2533a6ce39e2d525cd9ff57288e"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply col_permutation_1 in H22.",
            "VernacExtend",
            "829a1fbe04ffbb9999b8a3033d4b00d35e3bbb50"
        ],
        [
            "unfold Col in H22.",
            "VernacExtend",
            "1533089640838805e298ca04cd49c49bbaabdbbc"
        ],
        [
            "induction H22.",
            "VernacExtend",
            "753c7b4c832a73d4edb9f4d2183e93a5d7500688"
        ],
        [
            "assert(OS C B A' Y).",
            "VernacExtend",
            "5e6d9f126b340ccafc59fb1193a31e026a73b198"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ A').",
            "VernacExtend",
            "957d83969d2658d877f35cfea346a36f4ac54c2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS C B Y D).",
            "VernacExtend",
            "690bdf6cd97b3defcc81a10821ba383223d84c69"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ Y).",
            "VernacExtend",
            "402f74dd17e8d0421e02096cbcf277f863287286"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "unfold OS in H24.",
            "VernacExtend",
            "da66a65f2c6e09e3ebf67b7c51ff8228ea2d69b1"
        ],
        [
            "ex_and H24 C0.",
            "VernacExtend",
            "db90e716287959aee622b871134405f6f81128b5"
        ],
        [
            "unfold TS in H26.",
            "VernacExtend",
            "f3c022a3b7956a4170621ed0819d29e2b5e96836"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS C B A A').",
            "VernacExtend",
            "6867ef2c1b73968084bf86690b8c1b0b5a6e4952"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ A').",
            "VernacExtend",
            "957d83969d2658d877f35cfea346a36f4ac54c2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS C B Y A).",
            "VernacExtend",
            "0134dd03dfdd4480b4103a241eac296ab0cd0d63"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H26.",
            "VernacExtend",
            "9ddb8074ff52ed30c09b50dbf0aaacf50c6e6c5b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS C B A D).",
            "VernacExtend",
            "9b282908f3c8b2924304f9634712987e9d27394c"
        ],
        [
            "eapply l9_8_1.",
            "VernacExtend",
            "953c2bdb009f55a5d83b63a40340993dbf0d385a"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in HH0.",
            "VernacExtend",
            "61d7797ac1d5cc2b6eb21f50449f7d3220fcd63e"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ A').",
            "VernacExtend",
            "957d83969d2658d877f35cfea346a36f4ac54c2d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H22.",
            "VernacExtend",
            "753c7b4c832a73d4edb9f4d2183e93a5d7500688"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_angle_trans2 : forall A B C D E, InAngle C A B D -> InAngle D A B E -> InAngle D C B E.",
            "VernacStartTheoremProof",
            "ce2b84084afbad80ceb5396a9acfed3ef1195205"
        ],
        [
            "intros A B C D E HC HD.",
            "VernacExtend",
            "716dd32ddd3baf1393161793e96a02ddc052faf8"
        ],
        [
            "destruct (segment_construction E B E B) as [E' [HE1 HE2]].",
            "VernacExtend",
            "cb5365687f843e9c09b7f8b6bdb698d9153b6e35"
        ],
        [
            "assert (Hd := HD).",
            "VernacExtend",
            "275c8198ccec517e10176f0739ff2151d8e1e4ca"
        ],
        [
            "apply inangle_distincts in Hd.",
            "VernacExtend",
            "ad93c23f327ccddf94c7513d05655b1be3fd72a2"
        ],
        [
            "spliter; assert_diffs.",
            "VernacExtend",
            "1f1984354b3478db2c03d988970055ed3734b17e"
        ],
        [
            "apply l11_24, in_angle_reverse with E'; Between.",
            "VernacExtend",
            "f9330813d96aed9820d69343d3442e188c5e9713"
        ],
        [
            "apply l11_24, in_angle_trans with A; apply l11_24; trivial.",
            "VernacExtend",
            "72b48477f3303356484d5b00d74d7f55e23e73cc"
        ],
        [
            "apply in_angle_reverse with E; auto.",
            "VernacExtend",
            "3ded18236dee0c83824d2f1d7fb682b6af1d3e6a"
        ],
        [
            "apply l11_24; trivial.",
            "VernacExtend",
            "5c6eb57dd1617a369edb813c6f96e54d1894ad73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_36 : forall A B C D E F A' D', A <> B -> A' <> B -> D <> E -> D' <> E -> Bet A B A' -> Bet D E D' -> (LeA A B C D E F <-> LeA D' E F A' B C).",
            "VernacStartTheoremProof",
            "8cb75a8b70b517b0bb8a6e5fbc95d01190703e0a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HH:=H5).",
            "VernacExtend",
            "a6b0a13f53bd6cec88aa4ec7576099cc73ffe8c0"
        ],
        [
            "apply l11_29_a in H5.",
            "VernacExtend",
            "cbcce6eead1ff02dd2ffef0fbe60b96ab738ff14"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "ex_and H5 P.",
            "VernacExtend",
            "fb7410c037b56a90324e4b72e914bf2f4559e2b7"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (in_angle_reverse A); try assumption.",
            "VernacExtend",
            "36fa1704988a9605eaecc5a50d62ef025a724eb3"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HH:=H5).",
            "VernacExtend",
            "a6b0a13f53bd6cec88aa4ec7576099cc73ffe8c0"
        ],
        [
            "unfold LeA in H5.",
            "VernacExtend",
            "e04bbe1e8213267419ecdeaa058297f7322e353c"
        ],
        [
            "apply l11_29_b.",
            "VernacExtend",
            "f3aeaf9043d3867159df2b5e99c3f42f0283059f"
        ],
        [
            "ex_and H5 P.",
            "VernacExtend",
            "fb7410c037b56a90324e4b72e914bf2f4559e2b7"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (in_angle_reverse A'); try assumption.",
            "VernacExtend",
            "0b318ccbba32b7048dc67b48368603ff9874c69d"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_13.",
            "VernacExtend",
            "7aa7c1aa6b8f5d0a100bf0e8473d65a717a8d1c4"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_41_aux : forall A B C D, ~ Col A B C -> Bet B A D -> A <> D -> LtA A C B C A D.",
            "VernacStartTheoremProof",
            "ea052aeb8dcbca05781129bdfa935207de7ad651"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(exists M , Midpoint M A C).",
            "VernacExtend",
            "24b23383c0610499d87652552cc073810be1eba7"
        ],
        [
            "apply midpoint_existence.",
            "VernacExtend",
            "b6244e10bea79faf80652e3cfd7e41e28aa63090"
        ],
        [
            "ex_and H2 M.",
            "VernacExtend",
            "90156c7baf2447c52786f87821dbd2fd3b103968"
        ],
        [
            "double B M P.",
            "VernacExtend",
            "ba46601191df93e3cff936bdf18dd33bdb2924d2"
        ],
        [
            "assert(Cong_3 A C B C A P).",
            "VernacExtend",
            "18848a6c79abaf54b5695902f2c1e39d8a471e9f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(A <> C).",
            "VernacExtend",
            "6902c8d1b94940b2a9482cacf40e7731b9c07806"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assert(B <> C).",
            "VernacExtend",
            "3c0d58a5ad11e3961488c9de6848e428d6d2e44b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert(C <> D).",
            "VernacExtend",
            "cd208883812af04678e3be804bef961f988a0eb2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(A <> M).",
            "VernacExtend",
            "95085acf61932d93d6f41199fc9a319262d8222c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(CongA A C B C A P).",
            "VernacExtend",
            "9bbe8549117ec14bb01cd3a907aea62825c05507"
        ],
        [
            "apply cong3_conga; assumption.",
            "VernacExtend",
            "9da61f915e2c60461ffde397bcd49428e0cdc027"
        ],
        [
            "assert(exists X, Bet A X P /\\ Bet M X D).",
            "VernacExtend",
            "73d764e439f44eedb559fcdb38013105a2e73839"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H10 X.",
            "VernacExtend",
            "cc078d8082f8f609996a67f0a230093c513f7497"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert(InAngle P M A D).",
            "VernacExtend",
            "c8ab80907eea34c5b2b2c322912c34ca4fb095d5"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold CongA in H9.",
            "VernacExtend",
            "1fe8431a991f573ea306acc5bb2d337eeefe848a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply (col_transitivity_1 _ M).",
            "VernacExtend",
            "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l11_25.",
            "VernacExtend",
            "a72c7020a532c36e8fe603fc7a1d4d19ca65bc6d"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold CongA in H9.",
            "VernacExtend",
            "1fe8431a991f573ea306acc5bb2d337eeefe848a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(CongA C A D C A P).",
            "VernacExtend",
            "60c1d6630c38d373f10df0b7161f27d1b0b1ceb8"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Coplanar C A D P).",
            "VernacExtend",
            "a920d8d2c9491a3cef5321f368e89faac04d07ce"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply coplanar_perm_3, col_cop__cop with B; Col.",
            "VernacExtend",
            "d5a77a8282c7957b1537d8363540b446bd2535ff"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "apply conga_cop__or_out_ts in H13; trivial.",
            "VernacExtend",
            "7e1811a6d669d764d86e95ebfb9326f3cac420ca"
        ],
        [
            "induction H13.",
            "VernacExtend",
            "276e1b0c68de8fd543ac18b72aff6bef1940800a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assert(Col B A P).",
            "VernacExtend",
            "f1d0d8be9baf20d3777162d2bbd06936adaefcb1"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B <> P).",
            "VernacExtend",
            "071de7574839baf9590f111c5e6834c84589113e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply l7_3 in H2.",
            "VernacExtend",
            "5998e335ae59257ea11c1dfef15eeb9ee3393fc5"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col M B A).",
            "VernacExtend",
            "43c5997fd5e5487887a3f61b4ef432f4f1c5069e"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ P).",
            "VernacExtend",
            "baeeb49140e49baa53554b3c9b8085f9923c020f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A C B P).",
            "VernacExtend",
            "e49fdba1462c44452c868ddf29918d5951170fb7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assert(Col M C P).",
            "VernacExtend",
            "7ce005a34c8b9fbbd0007d427a52fd5323370c22"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ A).",
            "VernacExtend",
            "7ee5bc575b87f92dfd69ee2ab7a6ccb224faa9fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Col M B C).",
            "VernacExtend",
            "a9f0ce9972827a8e03952394334b6876a1b88ace"
        ],
        [
            "eapply (col_transitivity_1 _ P).",
            "VernacExtend",
            "baeeb49140e49baa53554b3c9b8085f9923c020f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply l7_2 in H2.",
            "VernacExtend",
            "18170cfa781766f76d8a57d9a8cb881b604c9a72"
        ],
        [
            "apply is_midpoint_id in H2.",
            "VernacExtend",
            "e589542b88a6529dd38ae498a11bb541001f2754"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ M).",
            "VernacExtend",
            "751b4bb9a1e91c9a818b610a7fa6014999e2f0e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst M.",
            "VernacExtend",
            "e4d2fb93a675347b92c821702de2fa6e4ba88a87"
        ],
        [
            "apply l7_2 in H3.",
            "VernacExtend",
            "c41dbc8f89fcce23aa2184550f3771ec72184fde"
        ],
        [
            "apply is_midpoint_id in H3.",
            "VernacExtend",
            "acc097f7e8f9ff4b17afd7f037c6952ea9f76e7e"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(TS A C B D).",
            "VernacExtend",
            "ab6cdd27e5910cc1f9a906d6099cc8f0cb3668ef"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply (col_transitivity_1 _ D).",
            "VernacExtend",
            "28cbdd15e76917ce6b7f2399be648c9f83410364"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(OS A C D P).",
            "VernacExtend",
            "b69e570c9ffd7813831e3f93b3539a492920eb7d"
        ],
        [
            "unfold OS.",
            "VernacExtend",
            "d85022c924d39e7ed2613a927522f51546c456c6"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_two_sides in H13.",
            "VernacExtend",
            "3ea05308a94de2d4490fe87c0bba1c19bb170ea4"
        ],
        [
            "apply l9_9 in H13.",
            "VernacExtend",
            "1bc7fa61fc30d574060d5f32857990db1f2ecab4"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_41 : forall A B C D, ~ Col A B C -> Bet B A D -> A <> D -> LtA A C B C A D /\\ LtA A B C C A D.",
            "VernacStartTheoremProof",
            "6f01a1d5035d4929c1038fc095fba9bba7813739"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_41_aux.",
            "VernacExtend",
            "766eb49d5683747a5aba3538b49410b90ee9f88f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "prolong C A E C A.",
            "VernacExtend",
            "7751a8b7c6e6b5b06416f219fa50052ed0d35524"
        ],
        [
            "assert(LtA A B C B A E).",
            "VernacExtend",
            "093978dc0ffbf05106c3d18e0c1ba11ce76e619c"
        ],
        [
            "eapply l11_41_aux.",
            "VernacExtend",
            "41f71df9c9dc2a1854241dec63d83d8aa592dc30"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_5.",
            "VernacExtend",
            "0aa84653c2c3b2916414cec99dc2dff91560645c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert_diffs;auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert(CongA B A C C A B).",
            "VernacExtend",
            "baf708a02bca6b042ed5d6a9dcec67ad47709261"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "apply conga_refl; assert_diffs;auto.",
            "VernacExtend",
            "888d45074a18d5553ed90b11db81e8196627e4c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(CongA D A C E A B) by (eapply l11_13 with B C;assert_diffs;auto).",
            "VernacExtend",
            "8fb417da745d9ceae0fbecf6225b93db4aea8c77"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply l11_30 with A B C B A E;finish.",
            "VernacExtend",
            "e79a9240d282b5b80e1e7c54460451d2ad59c764"
        ],
        [
            "apply conga_refl;assert_diffs;auto.",
            "VernacExtend",
            "888d45074a18d5553ed90b11db81e8196627e4c1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_conga : forall A B C A' B' C' D E F , CongA A B C A' B' C' -> ~ CongA A B C D E F -> ~ CongA A' B' C' D E F.",
            "VernacStartTheoremProof",
            "14ef476d6882e0c14543503c7a5064f72a088faf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_conga_sym : forall A B C D E F, ~ CongA A B C D E F -> ~ CongA D E F A B C.",
            "VernacStartTheoremProof",
            "4c43a1eba87efedd132bfe772bc933388550bc92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_and_lta : forall A B C D E F, ~ (LtA A B C D E F /\\ LtA D E F A B C).",
            "VernacStartTheoremProof",
            "7131bf7bbab251ec250cb296c2d787b417591622"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA A B C D E F).",
            "VernacExtend",
            "aa3927b609c9ff78d7b6f960b86aa82e88461a02"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_preserves_lta : forall A B C D E F A' B' C' D' E' F', CongA A B C A' B' C' -> CongA D E F D' E' F' -> LtA A B C D E F -> LtA A' B' C' D' E' F'.",
            "VernacStartTheoremProof",
            "2be85449941dc64827a97f7e0f2f340291652d2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l11_30.",
            "VernacExtend",
            "72dbd610b12c8099855a82691a06e57b17614796"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_preserves_gta : forall A B C D E F A' B' C' D' E' F', CongA A B C A' B' C' -> CongA D E F D' E' F' -> GtA A B C D E F -> GtA A' B' C' D' E' F'.",
            "VernacStartTheoremProof",
            "5fc573433df8104040f083a14aaffb396303f9f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold GtA in *.",
            "VernacExtend",
            "10c238e45282e6180118b26f3853c9654b51d6ed"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_trans : forall A B C A1 B1 C1 A2 B2 C2, LtA A B C A1 B1 C1 -> LtA A1 B1 C1 A2 B2 C2 -> LtA A B C A2 B2 C2.",
            "VernacStartTheoremProof",
            "d342256e4fa6bd86ebf949aa878061cd41914e27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH1:= H).",
            "VernacExtend",
            "893fabfd675b6f15eff01c6b943d2dc75d56c8f4"
        ],
        [
            "assert(HH2:= H0).",
            "VernacExtend",
            "3cceda9fb2d7a040db9cefe675da50fbba09cf0c"
        ],
        [
            "unfold LtA in H.",
            "VernacExtend",
            "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
        ],
        [
            "unfold LtA in H0.",
            "VernacExtend",
            "5c7d9f8549f9d9d10bc65459cb5889b00c2c23f3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(LeA A B C A2 B2 C2).",
            "VernacExtend",
            "53b49cfdfdf0ca5e37fe28709820a98c5f1c47eb"
        ],
        [
            "eapply lea_trans.",
            "VernacExtend",
            "b8355e36f6b72b2b175143042a874ac10e214802"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(LtA A2 B2 C2 A1 B1 C1).",
            "VernacExtend",
            "905b71418e9a5e8af18c719fe851f426d0759406"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H5.",
            "VernacExtend",
            "7f4c7b368e805933130aec93ecf2dacfebc2e803"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H5.",
            "VernacExtend",
            "7f4c7b368e805933130aec93ecf2dacfebc2e803"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (not_and_lta A1 B1 C1 A2 B2 C2).",
            "VernacExtend",
            "e88d5c07998423f11ed245f90b67161ccbd8163c"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gta_trans : forall A B C A1 B1 C1 A2 B2 C2, GtA A B C A1 B1 C1 -> GtA A1 B1 C1 A2 B2 C2 -> GtA A B C A2 B2 C2.",
            "VernacStartTheoremProof",
            "954b01debf6dd5d7714782b7f8758d085718c01d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold GtA in *.",
            "VernacExtend",
            "10c238e45282e6180118b26f3853c9654b51d6ed"
        ],
        [
            "eapply lta_trans.",
            "VernacExtend",
            "bab8b7c773eb5afa6dfc6f6149c0539d0f5317cf"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_left_comm : forall A B C D E F, LeA A B C D E F -> LeA C B A D E F.",
            "VernacStartTheoremProof",
            "1dc1b11f5ede45558180e82ea170a007330fef59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LeA in *.",
            "VernacExtend",
            "8e6fc1f965ce7ec5df3fa3fdef94fa190195654c"
        ],
        [
            "ex_and H P.",
            "VernacExtend",
            "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_right_comm : forall A B C D E F, LeA A B C D E F -> LeA A B C F E D.",
            "VernacStartTheoremProof",
            "8827609c13da6f3f080ae04d07d739b57359f481"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l11_29_b.",
            "VernacExtend",
            "f3aeaf9043d3867159df2b5e99c3f42f0283059f"
        ],
        [
            "apply l11_29_a in H.",
            "VernacExtend",
            "93fb5ef7b1405a83347db1934827a27f34601213"
        ],
        [
            "ex_and H P.",
            "VernacExtend",
            "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_comm : forall A B C D E F, LeA A B C D E F -> LeA C B A F E D.",
            "VernacStartTheoremProof",
            "a58becd2afbfd9d41e559e6a293a27cb609f18d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lea_left_comm.",
            "VernacExtend",
            "ec98640628879e019e32000f9c43f96769a60abf"
        ],
        [
            "apply lea_right_comm.",
            "VernacExtend",
            "e0d7607e49a0d5880afb60733de3de3a5dafb459"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_left_comm : forall A B C D E F, LtA A B C D E F -> LtA C B A D E F.",
            "VernacStartTheoremProof",
            "32c42391c88253db972720a2879ca4ca32999df3"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply lea_left_comm.",
            "VernacExtend",
            "ec98640628879e019e32000f9c43f96769a60abf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_right_comm : forall A B C D E F, LtA A B C D E F -> LtA A B C F E D.",
            "VernacStartTheoremProof",
            "3a29791ecde4190fd0bdd535cd3b67e0f7c691c6"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply lea_right_comm.",
            "VernacExtend",
            "e0d7607e49a0d5880afb60733de3de3a5dafb459"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_comm : forall A B C D E F, LtA A B C D E F -> LtA C B A F E D.",
            "VernacStartTheoremProof",
            "6e080002eeef1fc75db138417a5b280782800ef8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lta_left_comm.",
            "VernacExtend",
            "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
        ],
        [
            "apply lta_right_comm.",
            "VernacExtend",
            "e4a866f3519121c0dc90cda2171fa974fada2d0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_sym : forall A B C, Obtuse A B C -> Obtuse C B A.",
            "VernacStartTheoremProof",
            "c7af5da2a39419a23070124b274b43f3fbd78444"
        ],
        [
            "unfold Obtuse.",
            "VernacExtend",
            "6d4b3458f1c4c03c771160f4a3834da9b5a7569b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H0 B'.",
            "VernacExtend",
            "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold GtA in *.",
            "VernacExtend",
            "10c238e45282e6180118b26f3853c9654b51d6ed"
        ],
        [
            "apply lta_right_comm.",
            "VernacExtend",
            "e4a866f3519121c0dc90cda2171fa974fada2d0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_sym : forall A B C, Acute A B C -> Acute C B A.",
            "VernacStartTheoremProof",
            "543747ea4f1cf66cb32f25a5fc314e0ced3130bd"
        ],
        [
            "unfold Acute.",
            "VernacExtend",
            "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H0 B'.",
            "VernacExtend",
            "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split;auto using lta_left_comm.",
            "VernacExtend",
            "93db2a0ef9a16cf56398d8d96d596abe7c862058"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_col__out : forall A B C, Col A B C -> Acute A B C -> Out B A C.",
            "VernacStartTheoremProof",
            "e918954c83c6646917bfd8371fad557ac7005ea7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [X [Y [Z []]]].",
            "VernacExtend",
            "af91f434a5f3e4f2d5093d78fdd72a2a7ce14f90"
        ],
        [
            "apply col_lta__out with X Y Z; assumption.",
            "VernacExtend",
            "565d1b002bae052574ac876b55b9adea0d7fae5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_obtuse__bet : forall A B C, Col A B C -> Obtuse A B C -> Bet A B C.",
            "VernacStartTheoremProof",
            "ffc9abea610a4d938c9973c803b03efeaf3150da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [X [Y [Z []]]].",
            "VernacExtend",
            "af91f434a5f3e4f2d5093d78fdd72a2a7ce14f90"
        ],
        [
            "apply (col_lta__bet X Y Z); assumption.",
            "VernacExtend",
            "a37aa8424c878c925e8d5ddf321e1b802ebe1ccb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out__acute : forall A B C, Out B A C -> Acute A B C.",
            "VernacStartTheoremProof",
            "873e898797f06e7b9745b4c040f277cfa1d4ac9c"
        ],
        [
            "intros A B C Hout.",
            "VernacExtend",
            "d1ecec09a139fa2a7e7a614ddec8c6030da39115"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HD := perp_exists B A B).",
            "VernacExtend",
            "d507cc75a323cd3735542b63601b5cf77d78806b"
        ],
        [
            "destruct HD as [D]; auto.",
            "VernacExtend",
            "5479f575404868e4d17d76b0fde7d91a8980b38f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split; Perp.",
            "VernacExtend",
            "bc5953d6f0d76d444d426576ad647efe219ea91b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_31_1; auto.",
            "VernacExtend",
            "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HNCol : ~ Col A B D) by (apply per_not_col; Perp).",
            "VernacExtend",
            "e77243b05da1fa48376db77718f6bbf0bad25b89"
        ],
        [
            "apply HNCol.",
            "VernacExtend",
            "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply (l11_21_a A B C); auto.",
            "VernacExtend",
            "7040e9a60487f19af261155584a8b73af1024534"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet__obtuse : forall A B C, Bet A B C -> A <> B -> B <> C -> Obtuse A B C.",
            "VernacStartTheoremProof",
            "2c8e1fd641a8f34ae5ed02646eb644c30cb27914"
        ],
        [
            "intros A B C HBet HAB HBC.",
            "VernacExtend",
            "7e5b3b7dd944f98292a4a5fcc34551b4a3c602ed"
        ],
        [
            "assert(HD := perp_exists B A B).",
            "VernacExtend",
            "d507cc75a323cd3735542b63601b5cf77d78806b"
        ],
        [
            "destruct HD as [D]; auto.",
            "VernacExtend",
            "5479f575404868e4d17d76b0fde7d91a8980b38f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split; Perp.",
            "VernacExtend",
            "bc5953d6f0d76d444d426576ad647efe219ea91b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HNCol : ~ Col A B D) by (apply per_not_col; Perp).",
            "VernacExtend",
            "e77243b05da1fa48376db77718f6bbf0bad25b89"
        ],
        [
            "apply HNCol.",
            "VernacExtend",
            "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "apply (bet_conga__bet A B C); try (apply conga_sym); auto.",
            "VernacExtend",
            "8d3f5d57bb15e8c241331f75ce48f621612f3c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_43_aux : forall A B C, A <> B -> A <> C -> (Per B A C \\/ Obtuse B A C) -> Acute A B C.",
            "VernacStartTheoremProof",
            "746f1628c01f38fcb00a609c223626350212cd7c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply (per_not_col B A C); Col.",
            "VernacExtend",
            "902171c8ca8f5696ac2c761d3912557353e9c9aa"
        ],
        [
            "apply out__acute, bet_out; auto.",
            "VernacExtend",
            "355be84c546ee0c345057534f49daad9a66e0459"
        ],
        [
            "apply col_obtuse__bet; Col.",
            "VernacExtend",
            "65c1680d1e6ce5519e758259de78c487f64b5f2c"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "prolong B A B' B A.",
            "VernacExtend",
            "891b7a8fafd93494fe2532688776a397adb8ae6b"
        ],
        [
            "assert(~ Col B' A C).",
            "VernacExtend",
            "fdc5930b4729956f61b2d26916f057ea167791b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply (col_transitivity_1 _ B').",
            "VernacExtend",
            "009d1b87333af8764238587e675695dcec3ec1d5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_col_distincts in H6.",
            "VernacExtend",
            "5dbe7921133a08cb8b80296feef974c8089851d0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(LtA A C B C A B'/\\ LtA A B C C A B').",
            "VernacExtend",
            "056fa40dc2b38c61c93b65eee340aec629296511"
        ],
        [
            "apply l11_41.",
            "VernacExtend",
            "bcab47dc654204aa09c32948cd50da9af9e62c9c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "unfold Acute.",
            "VernacExtend",
            "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "unfold LtA in H11.",
            "VernacExtend",
            "ace076e668281d8fc45e14f8f4cf1708b4ca0fb0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Per B' A C).",
            "VernacExtend",
            "260ce9f4f623a4f99ead6dbebae230e7e41fd2ea"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "eapply (per_col _ _ B).",
            "VernacExtend",
            "911a5fade6e488d2f995e38b2a7196bed18b0346"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B A C B' A C).",
            "VernacExtend",
            "94918e5a5734dca38b4003b09ec1cf24f077c3e9"
        ],
        [
            "apply l11_16.",
            "VernacExtend",
            "c818ddcf166407189e9a2c696307083d3d799975"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l11_30.",
            "VernacExtend",
            "72dbd610b12c8099855a82691a06e57b17614796"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Acute.",
            "VernacExtend",
            "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
        ],
        [
            "unfold Obtuse in H1.",
            "VernacExtend",
            "37eeb3652ca4f998debbc4680e07c47b8f6e9978"
        ],
        [
            "ex_and H1 a.",
            "VernacExtend",
            "605dbad362f4ab56bce50b9131be896704407c1d"
        ],
        [
            "ex_and H12 b.",
            "VernacExtend",
            "eccc4db838ef9ccc1f56bdc01f0d668bdbd82fe3"
        ],
        [
            "ex_and H1 c.",
            "VernacExtend",
            "cd13ac82645d382c74190bcb6c5f979ed1b52da4"
        ],
        [
            "unfold GtA in H12.",
            "VernacExtend",
            "4017cb5c6630c37c666d9b5107217813977a3ed8"
        ],
        [
            "assert(HH1:= H12).",
            "VernacExtend",
            "00b9cc1f65362597ec486737e8a3b6ccbd052fb1"
        ],
        [
            "unfold LtA in H12.",
            "VernacExtend",
            "776bda11697168b3ab90ae617c26f27d16b3b86a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold LeA in H12.",
            "VernacExtend",
            "eb93c39fb113a95e12075dcf17d3c0d8a1d950c2"
        ],
        [
            "ex_and H12 P.",
            "VernacExtend",
            "8ce328f476b8793ca0facd8b330ffbe660b304a1"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "assert(Per B A P).",
            "VernacExtend",
            "76ec91e51330f66a11182e9578afe5d3c8f2f2bf"
        ],
        [
            "eapply l11_17.",
            "VernacExtend",
            "20866be879e963a8826e56a384433e2bcf5eaf58"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per P A B').",
            "VernacExtend",
            "d05f97acb70f8a61fc03b238c7569a8317ceb167"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B A P B' A P).",
            "VernacExtend",
            "e899a793333e6dd5e0beefa3fb507988ee22dfd8"
        ],
        [
            "eapply l11_16.",
            "VernacExtend",
            "46ed62d6f376e5dd887fc8175703556da3f25773"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold CongA in H14.",
            "VernacExtend",
            "71adebc9dcd4e543c1468fd0464b8b134b29c95c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold CongA in H14.",
            "VernacExtend",
            "71adebc9dcd4e543c1468fd0464b8b134b29c95c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(LtA C A B' P A B).",
            "VernacExtend",
            "d0ede78103cfa436024279e487a3d7cce2ba6556"
        ],
        [
            "assert(B <> A).",
            "VernacExtend",
            "e99c7093f093642f9d67aa4e4e72d9d44ddd3b7d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(HH := l11_36 B A P B A C B' B' H18 H7 H18 H7 H3 H3).",
            "VernacExtend",
            "e913dbbe378b7033a5422376d6e56edad48ac30a"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l11_30.",
            "VernacExtend",
            "72dbd610b12c8099855a82691a06e57b17614796"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "unfold LtA in HH1.",
            "VernacExtend",
            "88fcf9ad8b634fa2db8990d717b191d213f77643"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l11_30.",
            "VernacExtend",
            "72dbd610b12c8099855a82691a06e57b17614796"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assert(Per B' A C).",
            "VernacExtend",
            "260ce9f4f623a4f99ead6dbebae230e7e41fd2ea"
        ],
        [
            "eapply l11_17.",
            "VernacExtend",
            "20866be879e963a8826e56a384433e2bcf5eaf58"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per C A B).",
            "VernacExtend",
            "7c33240726cef5d2f16889e8c70e12798e6f2864"
        ],
        [
            "eapply (per_col _ _ B').",
            "VernacExtend",
            "dfe7d551b85f7e46fc4d9dda7ae69027b23b58d0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_16.",
            "VernacExtend",
            "c818ddcf166407189e9a2c696307083d3d799975"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H14.",
            "VernacExtend",
            "71adebc9dcd4e543c1468fd0464b8b134b29c95c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H14.",
            "VernacExtend",
            "71adebc9dcd4e543c1468fd0464b8b134b29c95c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply lta_trans.",
            "VernacExtend",
            "bab8b7c773eb5afa6dfc6f6149c0539d0f5317cf"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "apply lta_right_comm.",
            "VernacExtend",
            "e4a866f3519121c0dc90cda2171fa974fada2d0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_43 : forall A B C, A <> B -> A <> C -> (Per B A C \\/ Obtuse B A C) -> Acute A B C /\\ Acute A C B.",
            "VernacStartTheoremProof",
            "03552424a1c6051504b1f06866e491c45213d878"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_43_aux;auto.",
            "VernacExtend",
            "ac023cb603365204532b92d34849eef56d013bb8"
        ],
        [
            "apply l11_43_aux;auto.",
            "VernacExtend",
            "ac023cb603365204532b92d34849eef56d013bb8"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "left;finish.",
            "VernacExtend",
            "ec1211e431598310722db092af331441480a52da"
        ],
        [
            "right;apply obtuse_sym;assumption.",
            "VernacExtend",
            "d804a38caac3019694d84c2c9844c1ba959fa8fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_lea_acute : forall A B C D E F, Acute D E F -> LeA A B C D E F -> Acute A B C.",
            "VernacStartTheoremProof",
            "b7d307d565ad5b5270b4cc95f2f259252c1cf08c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Acute in *.",
            "VernacExtend",
            "5612b575da4261fe6b7c7d228f5e4baa8363254a"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H1 B'.",
            "VernacExtend",
            "e9234e7bbfd757c3101969808560b69dcb93d98a"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH1:=H1).",
            "VernacExtend",
            "6c3c0a9879269335c53941cd8c3746911de37368"
        ],
        [
            "unfold LtA in H1.",
            "VernacExtend",
            "e17c4c5d72c47413723ae971eb7000a9d07698ff"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply lea_trans.",
            "VernacExtend",
            "b8355e36f6b72b2b175143042a874ac10e214802"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(LtA A' B' C' D E F).",
            "VernacExtend",
            "f5068d17b67d40f9405e3066271c4139effe0a84"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H4.",
            "VernacExtend",
            "1f6402022878383f05868294897d6d5f9e751cd0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lea_comm in H0.",
            "VernacExtend",
            "1c6a385717ea8a5269df718a88e6b91625339343"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H4.",
            "VernacExtend",
            "1f6402022878383f05868294897d6d5f9e751cd0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (not_and_lta A' B' C' D E F).",
            "VernacExtend",
            "80495cd48f5c9ab008ea2f8b3a75dfbb6f27dbbf"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_gea_obtuse : forall A B C D E F, Obtuse D E F -> GeA A B C D E F -> Obtuse A B C.",
            "VernacStartTheoremProof",
            "768b28b8e5c4e74c9f0f19ebb6cf3c76b71ba4c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H1 B'.",
            "VernacExtend",
            "e9234e7bbfd757c3101969808560b69dcb93d98a"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH1:=H1).",
            "VernacExtend",
            "6c3c0a9879269335c53941cd8c3746911de37368"
        ],
        [
            "unfold GtA in H1.",
            "VernacExtend",
            "cb66204d19d19f3fe3e69305093ff38917cdd6bf"
        ],
        [
            "unfold LtA in H1.",
            "VernacExtend",
            "e17c4c5d72c47413723ae971eb7000a9d07698ff"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold GtA.",
            "VernacExtend",
            "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply lea_trans.",
            "VernacExtend",
            "b8355e36f6b72b2b175143042a874ac10e214802"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(GtA A' B' C' D E F).",
            "VernacExtend",
            "9869b55f2339065de1a9fb510fe69c0f6c1aeeaf"
        ],
        [
            "eapply conga_preserves_gta.",
            "VernacExtend",
            "7a8e65fcdfabd364bc58af99ffaec2c170d412ad"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H3; apply H3.",
            "VernacExtend",
            "4f249c74341dedff75111dced898add914c8fe32"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H4.",
            "VernacExtend",
            "1f6402022878383f05868294897d6d5f9e751cd0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lea_comm in H0.",
            "VernacExtend",
            "1c6a385717ea8a5269df718a88e6b91625339343"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "unfold CongA in H4.",
            "VernacExtend",
            "1f6402022878383f05868294897d6d5f9e751cd0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold GtA.",
            "VernacExtend",
            "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold GtA in *.",
            "VernacExtend",
            "10c238e45282e6180118b26f3853c9654b51d6ed"
        ],
        [
            "apply (not_and_lta A' B' C' D E F).",
            "VernacExtend",
            "80495cd48f5c9ab008ea2f8b3a75dfbb6f27dbbf"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_1_a : forall A B C, A <> B -> A <> C -> Cong B A B C -> CongA B A C B C A.",
            "VernacStartTheoremProof",
            "7351fe16812fa35f0175f60c575664e8a89aab74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (midpoint_existence A C) as [P HP].",
            "VernacExtend",
            "fe1a5259f797bdce000f37d3e30adbae1d0b75ac"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Cong_3 B C P B A P) by (repeat split;finish).",
            "VernacExtend",
            "358e5cb49c24429d6920f0b00ccb56a8bde65a7f"
        ],
        [
            "assert(CongA B C P B A P) by (auto using cong3_conga).",
            "VernacExtend",
            "be24f70334bde119c5768a288c2df19b3ab4d0ff"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "eapply l11_10 with B P B P;finish.",
            "VernacExtend",
            "99aa18806e2b77f3675cd931a741f8de837fbd3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_2_a : forall A B C, ~ Col A B C -> Lt B A B C -> LtA B C A B A C.",
            "VernacStartTheoremProof",
            "d64bfcdd84c5a6d345a7b951ef7e12cc04970621"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Lt in H0.",
            "VernacExtend",
            "786690a4204e1151ffceb05768f321cccbae26a9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Le in H0.",
            "VernacExtend",
            "1d6e1eadf40bf654009532d9a776b50be2da5b93"
        ],
        [
            "ex_and H0 C'.",
            "VernacExtend",
            "1f2021fe4adb3d11368c967beff0696570a2eb75"
        ],
        [
            "assert(C <> C').",
            "VernacExtend",
            "173b5c84016e360893231fa387ff71eb35f411db"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(C' <> A).",
            "VernacExtend",
            "22409d64642ff876d5efcf5444340ca8776d5c84"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(C' <> B).",
            "VernacExtend",
            "926b6ae3f7594aff5c1e65f8ba9788f1ea5e22d0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_identity in H5.",
            "VernacExtend",
            "4126609ebcf06a9437eb33a42c940321ed455ff3"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(InAngle C' B A C).",
            "VernacExtend",
            "4cf8b08e9c410282f854c02791e4773e914debc8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(HH:=l11_41 C' C A B).",
            "VernacExtend",
            "c05575d39a743d4afcc5f50ef925cbb799e1a151"
        ],
        [
            "assert(LtA C' A C A C' B /\\ LtA C' C A A C' B).",
            "VernacExtend",
            "8add49471e337594cc24c37d1fb8828b0a1bae13"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "clear HH.",
            "VernacExtend",
            "d71da5fb5e9671ddf2bdf192337d54d2c76c8a0f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(LtA B A C' B A C).",
            "VernacExtend",
            "fe40cfef698fc61d6aa766fc14966bc072dbcf60"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply conga_cop__or_out_ts in H12; Cop.",
            "VernacExtend",
            "68f44dd3c521f987062a267797e45e3f55a84b63"
        ],
        [
            "induction H12.",
            "VernacExtend",
            "57e0b9c891e8ef4875be99532538f9c6a2d13941"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply out_col in H12.",
            "VernacExtend",
            "1238f754cb73c1ce03ec1522fbc0106c462d6fe0"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(OS B A C' C).",
            "VernacExtend",
            "599edea5cc7f22cfce5192ca0c984f273cfc8cd1"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "apply bet_out;auto.",
            "VernacExtend",
            "76a9f58df0a142584f28da339552287cd33d82a2"
        ],
        [
            "apply l9_9 in H12.",
            "VernacExtend",
            "8182e13f21fced3ced3a47be4a5a5248400dbae0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(LtA B C A A C' B).",
            "VernacExtend",
            "18f6121c3940c8927dcda3429a9e3a8a6a1f9231"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "3: apply H11.",
            "VernacExtend",
            "a719567dd8fcaafb5708f034d567dc2d9ca8392f"
        ],
        [
            "eapply out_conga.",
            "VernacExtend",
            "de6f6decf0cf5ed798ad84891816412113d30fec"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(CongA B A C' B C' A).",
            "VernacExtend",
            "f81db8ffb7cc346584fa1be4efbe7e376a1d9945"
        ],
        [
            "apply (l11_44_1_a A B C'); auto.",
            "VernacExtend",
            "eec04b4f35423673ae77fdf103a2e75b7bb61cfd"
        ],
        [
            "apply conga_right_comm in H14.",
            "VernacExtend",
            "fbe2399a0bc2b0e685421c14b9e53dab4855cced"
        ],
        [
            "assert(LtA B C A B A C').",
            "VernacExtend",
            "8f8aefaddf9560638f99921a8fdffdf671e44680"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "2: apply conga_sym.",
            "VernacExtend",
            "a7968ac5d63ce5f16bff83c6174f4c706db52254"
        ],
        [
            "2: apply H14.",
            "VernacExtend",
            "0b344bf4139ea8790644004e0fbc14e7e8c3dae0"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply lta_trans.",
            "VernacExtend",
            "bab8b7c773eb5afa6dfc6f6149c0539d0f5317cf"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_lta_and_conga : forall A B C D E F, ~ (LtA A B C D E F /\\ CongA A B C D E F).",
            "VernacStartTheoremProof",
            "6ddecf97127d104be97587626d95d6de19990feb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold LtA in H.",
            "VernacExtend",
            "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_gta_and_conga : forall A B C D E F, ~ (GtA A B C D E F /\\ CongA A B C D E F).",
            "VernacStartTheoremProof",
            "d412ccaf9396adbf6eabc483a1c67544bf9ca4a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold GtA in H.",
            "VernacExtend",
            "6ab2408000eb70740c634986276e266ea7360d60"
        ],
        [
            "unfold LtA in H.",
            "VernacExtend",
            "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_sym in H0.",
            "VernacExtend",
            "f9ca3d0893280b53cf9038b91ff898bc0a7cebb1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_lta_and_gta : forall A B C D E F, ~ (LtA A B C D E F /\\ GtA A B C D E F).",
            "VernacStartTheoremProof",
            "a04011fd84cfd2741c79bdfb410c1656fc0f9929"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold GtA in H0.",
            "VernacExtend",
            "a27e3421efffe9ca162ecd9f6b238efb2fe68d19"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_sym_equiv : forall A B C A' B' C', CongA A B C A' B' C' <-> CongA A' B' C' A B C.",
            "VernacStartTheoremProof",
            "874f9a28c9224e80ca07da56c244035ad2efc73b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; apply conga_sym.",
            "VernacExtend",
            "68e02da342440cc946917a704e8ebab23cbda20b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_dec : forall A B C D E F, CongA A B C D E F \\/ ~ CongA A B C D E F.",
            "VernacStartTheoremProof",
            "950644e36a3c3404602265e1bac8028fa8a2a9ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst;right;intro;unfold CongA in *;intuition.",
            "VernacExtend",
            "336182a4ecbabdcb9523354237640cb6bc2bc595"
        ],
        [
            "induction (eq_dec_points C B).",
            "VernacExtend",
            "021929c41b94e147e1b7d8f513756db473e881b6"
        ],
        [
            "subst;right;intro;unfold CongA in *;intuition.",
            "VernacExtend",
            "336182a4ecbabdcb9523354237640cb6bc2bc595"
        ],
        [
            "induction (eq_dec_points D E).",
            "VernacExtend",
            "d960a8a8aa7c54282602c6757935d12ce23093c2"
        ],
        [
            "subst;right;intro;unfold CongA in *;intuition.",
            "VernacExtend",
            "336182a4ecbabdcb9523354237640cb6bc2bc595"
        ],
        [
            "induction (eq_dec_points F E).",
            "VernacExtend",
            "35811538f9c5c9507c2220731fa7c9577cea2b22"
        ],
        [
            "subst;right;intro;unfold CongA in *;intuition.",
            "VernacExtend",
            "336182a4ecbabdcb9523354237640cb6bc2bc595"
        ],
        [
            "assert (exists A' : Tpoint, Bet B A A' /\\ Cong A A' E D) by (apply segment_construction).",
            "VernacExtend",
            "7c17ea00411dcbafc9fd87cab6d4fdb8bb287365"
        ],
        [
            "decompose [ex and] H3; clear H3.",
            "VernacExtend",
            "0ac7506df679c08bcab5c22ab91bf031db591a37"
        ],
        [
            "assert (exists C' : Tpoint, Bet B C C' /\\ Cong C C' E F) by (apply segment_construction).",
            "VernacExtend",
            "ae420278d2e62b7522032823a13630ea21cbe15f"
        ],
        [
            "decompose [ex and] H3; clear H3.",
            "VernacExtend",
            "0ac7506df679c08bcab5c22ab91bf031db591a37"
        ],
        [
            "assert (exists D' : Tpoint, Bet E D D' /\\ Cong D D' B A) by (apply segment_construction).",
            "VernacExtend",
            "95dec9c4646968eb91c7a3bbdab97b3f5811ecba"
        ],
        [
            "decompose [ex and] H3; clear H3.",
            "VernacExtend",
            "0ac7506df679c08bcab5c22ab91bf031db591a37"
        ],
        [
            "assert (exists F' : Tpoint, Bet E F F' /\\ Cong F F' B C) by (apply segment_construction).",
            "VernacExtend",
            "c3d5b880bb43212f2983bb75c07a1cb402be16de"
        ],
        [
            "decompose [ex and] H3; clear H3.",
            "VernacExtend",
            "0ac7506df679c08bcab5c22ab91bf031db591a37"
        ],
        [
            "induction (cong_dec x x0 x1 x2).",
            "VernacExtend",
            "62168fde2021ee7b48a0702f9639224cefcf568b"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists x; exists x0; exists x1; exists x2.",
            "VernacExtend",
            "1bf1c0b5d55361bc90b22cff49c8552770bf53e5"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold CongA.",
            "VernacExtend",
            "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "decompose [and ex] H4; clear H4.",
            "VernacExtend",
            "2bcee3a5f3e4cc95049a9dcf2e20c2ae28911a3d"
        ],
        [
            "assert (x3 = x) by (apply construction_uniqueness with B A E D; intuition).",
            "VernacExtend",
            "fe6df96cd88e43c3b2c583af44bd6ec382f1b261"
        ],
        [
            "assert (x4 = x0) by (apply construction_uniqueness with B C E F; intuition).",
            "VernacExtend",
            "20714de328a0632ba79728ceea80fa8ba4024815"
        ],
        [
            "assert (x5 = x1) by (apply construction_uniqueness with E D B A; intuition).",
            "VernacExtend",
            "46fc9ba79b4ddae707a7731a1deb09fb9504ace0"
        ],
        [
            "assert (x6 = x2) by (apply construction_uniqueness with E F B C; intuition).",
            "VernacExtend",
            "339ef53c96aed0f777c991baa8d634189b7ff288"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_not_conga : forall A B C D E F, LtA A B C D E F -> ~ CongA A B C D E F.",
            "VernacStartTheoremProof",
            "0999c8f9da3a0885714f57174fe636cd3306509c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold LtA in H.",
            "VernacExtend",
            "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_1_b : forall A B C, ~ Col A B C -> CongA B A C B C A -> Cong B A B C.",
            "VernacStartTheoremProof",
            "3fb0521070334977455681842f0e552426ad69cc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= or_lt_cong_gt B A B C).",
            "VernacExtend",
            "e2def10f9c80f5632708e5c5092d66142b0a0707"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "apply l11_44_2_a in H4.",
            "VernacExtend",
            "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
        ],
        [
            "apply lta_not_conga in H4.",
            "VernacExtend",
            "b0da6bbd2561e1d673d81a281015e259a740e781"
        ],
        [
            "apply conga_sym in H0.",
            "VernacExtend",
            "f9ca3d0893280b53cf9038b91ff898bc0a7cebb1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "unfold Gt in H4.",
            "VernacExtend",
            "871e6fb773c542d6b88167181ee58a7a7fc87fa2"
        ],
        [
            "apply l11_44_2_a in H4.",
            "VernacExtend",
            "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
        ],
        [
            "apply lta_not_conga in H4.",
            "VernacExtend",
            "b0da6bbd2561e1d673d81a281015e259a740e781"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_2_b : forall A B C, LtA B A C B C A -> Lt B C B A.",
            "VernacStartTheoremProof",
            "f5c3c99b5e3ac88f67b5a8f28656d2b4f523ec83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "assert (Hd := H).",
            "VernacExtend",
            "58244ee871e08ccceed71966f00af5881f498b1e"
        ],
        [
            "apply lta_distincts in Hd; spliter; clean_reap_hyps.",
            "VernacExtend",
            "88de06b2d31329c3f1ae668af4f9c32908bd1f96"
        ],
        [
            "apply col_lta__bet in H; Col; Le.",
            "VernacExtend",
            "9e4e128452275d11dd0f6ae4e62a4dacc0693821"
        ],
        [
            "apply not_col_distincts in H0.",
            "VernacExtend",
            "cbef6970efca517cd8f8139c21aedf1219095d6b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= or_lt_cong_gt B A B C).",
            "VernacExtend",
            "e2def10f9c80f5632708e5c5092d66142b0a0707"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "apply l11_44_2_a in H4.",
            "VernacExtend",
            "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
        ],
        [
            "assert(HH:= not_lta_and_gta B A C B C A).",
            "VernacExtend",
            "1e461606ef6afdd0b717586c2f6f2878e4026e65"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "unfold Gt in H4.",
            "VernacExtend",
            "871e6fb773c542d6b88167181ee58a7a7fc87fa2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l11_44_1_a in H4; auto.",
            "VernacExtend",
            "e8b5b5e20cf48fd4c1ead941ea9c51525bd1cb5a"
        ],
        [
            "apply lta_not_conga in H; auto.",
            "VernacExtend",
            "dcb30b9023cde8f1fd93f70db167d769f1e6d2f4"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_1 : forall A B C, ~ Col A B C -> (CongA B A C B C A <-> Cong B A B C).",
            "VernacStartTheoremProof",
            "c57c7c50428bdcab9649f64d67d7858f555cd655"
        ],
        [
            "intros;assert_diffs;split;intro; auto using l11_44_1_b, l11_44_1_a.",
            "VernacExtend",
            "b8bdd957e3f10904e38efdc3aff8f7299da6c415"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_44_2 : forall A B C, ~ Col A B C -> (LtA B A C B C A <-> Lt B C B A).",
            "VernacStartTheoremProof",
            "1cfdf635765da6ebe7a696ad5644b30f34275903"
        ],
        [
            "intros;split;intro; auto using l11_44_2_b, l11_44_2_a with col.",
            "VernacExtend",
            "f7aff295fd4058f5af3cbdf87652f4322efe43c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_46 : forall A B C, A <> B -> B <> C -> (Per A B C \\/ Obtuse A B C) -> Lt B A A C /\\ Lt B C A C.",
            "VernacStartTheoremProof",
            "ca9e12feae452b3845ebae76f7f394610bb9072a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply (per_not_col A B C); auto.",
            "VernacExtend",
            "3abd01481e68e6cc12a47be426dae792abbe537e"
        ],
        [
            "apply col_obtuse__bet in H1; auto.",
            "VernacExtend",
            "cc614b91371ae2cbe6318e6a309dd35fa024f969"
        ],
        [
            "repeat split; Le.",
            "VernacExtend",
            "41941a1d74c0bc5bdb277c03273ee94ad3b582c3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0, between_cong with A; Cong.",
            "VernacExtend",
            "2886b6ba5d6512ec75986cf288bcc34a6de1409f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H, eq_sym, between_cong with C; finish.",
            "VernacExtend",
            "6dcdc24da2bfaded79e8a0c2587d26c7aaf8e4e2"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HH:= H1).",
            "VernacExtend",
            "ae8e35421543d37630c79875cbe48bca885fec77"
        ],
        [
            "apply l11_43 in H1; auto.",
            "VernacExtend",
            "0edd73ace462477fb7b7f3dd9a927a7c06b0ad59"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply lt_left_comm.",
            "VernacExtend",
            "8191bd8fbd0e2bda125ca34b912f4d12d0d4fa0a"
        ],
        [
            "apply l11_44_2_b.",
            "VernacExtend",
            "23d52fe427fbf88f18327e93ee680aa4d674b448"
        ],
        [
            "unfold Acute in H3.",
            "VernacExtend",
            "df32f0892cce4d6c3216c9331867ccf4ce63d7ef"
        ],
        [
            "ex_and H3 A'.",
            "VernacExtend",
            "227b4a120e097053aeca0d347ab53672b9405e56"
        ],
        [
            "ex_and H4 B'.",
            "VernacExtend",
            "5a1eb5c7e4b63e713b22ed5b7b83fe6f45e13609"
        ],
        [
            "ex_and H3 C'.",
            "VernacExtend",
            "ff7aa28884c5cddf3e7b7dddf6bc8a3390ac22c5"
        ],
        [
            "assert (Hd := H4).",
            "VernacExtend",
            "9be75a14c51fbc2f23f96b2e861f87d5f7c46e5e"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply conga_preserves_lta with A C B A' B' C'.",
            "VernacExtend",
            "bf6392e828b83413564958bcc9a49f4f82054a15"
        ],
        [
            "apply conga_refl;auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "apply l11_16;auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "apply lta_left_comm.",
            "VernacExtend",
            "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold Obtuse in H11.",
            "VernacExtend",
            "79693822458f7b143e83bcd30f099e7ff38305fd"
        ],
        [
            "ex_and H11 A''.",
            "VernacExtend",
            "45cbe4b1122ed3751da671f2aab2fd394d2efefa"
        ],
        [
            "ex_and H12 B''.",
            "VernacExtend",
            "316ddcc6c99ce2b1b57ae97132308477c4ce3c6d"
        ],
        [
            "ex_and H11 C''.",
            "VernacExtend",
            "3e52515a6bd693cddd93d0b6d28d3a5c4311b8f9"
        ],
        [
            "unfold GtA in H12.",
            "VernacExtend",
            "4017cb5c6630c37c666d9b5107217813977a3ed8"
        ],
        [
            "eapply lta_trans.",
            "VernacExtend",
            "bab8b7c773eb5afa6dfc6f6149c0539d0f5317cf"
        ],
        [
            "apply lta_left_comm.",
            "VernacExtend",
            "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "eapply conga_preserves_lta with A'' B'' C'' A B C.",
            "VernacExtend",
            "29405b93cf5e31247f16a2077cd0ca9ec65055bc"
        ],
        [
            "assert (Hd := H12).",
            "VernacExtend",
            "90f5b3c1336d08c7233daf610f5231eafeb91a3d"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_16.",
            "VernacExtend",
            "c818ddcf166407189e9a2c696307083d3d799975"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_left_comm.",
            "VernacExtend",
            "8191bd8fbd0e2bda125ca34b912f4d12d0d4fa0a"
        ],
        [
            "apply lt_right_comm.",
            "VernacExtend",
            "44b068d62f9d386783f25cf676fc8193e0c7a296"
        ],
        [
            "eapply l11_44_2_b.",
            "VernacExtend",
            "e1d23ec71dc374334543e6cbaca0100f189d3e33"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "unfold Acute in H1.",
            "VernacExtend",
            "7560612f90d1f00355aa1bae77331a40cbbadfb0"
        ],
        [
            "ex_and H1 A'.",
            "VernacExtend",
            "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
        ],
        [
            "ex_and H4 B'.",
            "VernacExtend",
            "5a1eb5c7e4b63e713b22ed5b7b83fe6f45e13609"
        ],
        [
            "ex_and H1 C'.",
            "VernacExtend",
            "248e9ea85399d664e369da129ccc15bf10a91d3e"
        ],
        [
            "assert (Hd := H4).",
            "VernacExtend",
            "9be75a14c51fbc2f23f96b2e861f87d5f7c46e5e"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l11_16.",
            "VernacExtend",
            "c818ddcf166407189e9a2c696307083d3d799975"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lta_left_comm.",
            "VernacExtend",
            "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Obtuse in H11.",
            "VernacExtend",
            "79693822458f7b143e83bcd30f099e7ff38305fd"
        ],
        [
            "ex_and H11 A''.",
            "VernacExtend",
            "45cbe4b1122ed3751da671f2aab2fd394d2efefa"
        ],
        [
            "ex_and H12 B''.",
            "VernacExtend",
            "316ddcc6c99ce2b1b57ae97132308477c4ce3c6d"
        ],
        [
            "ex_and H11 C''.",
            "VernacExtend",
            "3e52515a6bd693cddd93d0b6d28d3a5c4311b8f9"
        ],
        [
            "unfold GtA in H12.",
            "VernacExtend",
            "4017cb5c6630c37c666d9b5107217813977a3ed8"
        ],
        [
            "eapply lta_trans.",
            "VernacExtend",
            "bab8b7c773eb5afa6dfc6f6149c0539d0f5317cf"
        ],
        [
            "apply lta_left_comm.",
            "VernacExtend",
            "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply lta_distincts in H12.",
            "VernacExtend",
            "b3c92911c506c16e1dc47c85f743d6023b32ff35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_16.",
            "VernacExtend",
            "c818ddcf166407189e9a2c696307083d3d799975"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lta_right_comm.",
            "VernacExtend",
            "e4a866f3519121c0dc90cda2171fa974fada2d0f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_47 : forall A B C H , Per A C B -> Perp_at H C H A B -> Bet A H B /\\ A <> H /\\ B <> H.",
            "VernacStartTheoremProof",
            "c1bfe80f3b1b4c89ebd20c1a02df0ec7be1245cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH1:= H1).",
            "VernacExtend",
            "6c3c0a9879269335c53941cd8c3746911de37368"
        ],
        [
            "unfold Perp_at in H1.",
            "VernacExtend",
            "5702c0c19084a73004cfdd0a4782b48c177c339c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Per C H A).",
            "VernacExtend",
            "63c9447cb1f6ecbc25508097b0a09bb2cec8d437"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assert(Perp C H A B).",
            "VernacExtend",
            "5041c4ca6d1ae698ed6e585cff6ecb8a54c2472a"
        ],
        [
            "eapply l8_14_2_1a.",
            "VernacExtend",
            "11ac97c86c041438ed445d2c885bf89fc8155b5a"
        ],
        [
            "apply HH1.",
            "VernacExtend",
            "c600c47380c483b1ee04b28adfc19940527da17a"
        ],
        [
            "induction (col_dec A C B).",
            "VernacExtend",
            "63158a154258e12d48e22f0837ba71a6295bc810"
        ],
        [
            "assert(A <> H).",
            "VernacExtend",
            "7eb09eb92af7eaf534cd7dbfeeaeecc488a95d01"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst H.",
            "VernacExtend",
            "f1a356c60f00949319e5be2b6a9169472987b785"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "eapply per_col_eq.",
            "VernacExtend",
            "ff90f9fdfca6e3c9a77784cf7560b320711eb49f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "assert(Perp_at C C A A C).",
            "VernacExtend",
            "956ce6b46acec28abeab2b30a302f4a24d82baef"
        ],
        [
            "apply perp_perp_in.",
            "VernacExtend",
            "0c9febbe454aee0f549f39d335d2c9638c929291"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "eapply l8_14_3.",
            "VernacExtend",
            "80c3c2283642340068b387536ebfd168be7c495b"
        ],
        [
            "apply HH1.",
            "VernacExtend",
            "c600c47380c483b1ee04b28adfc19940527da17a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "eapply per_col_eq.",
            "VernacExtend",
            "ff90f9fdfca6e3c9a77784cf7560b320711eb49f"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply not_col_distincts in H8.",
            "VernacExtend",
            "8d943784158297c9f80d9f6f9609c1e7836f22ac"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A <> H).",
            "VernacExtend",
            "7eb09eb92af7eaf534cd7dbfeeaeecc488a95d01"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "assert(Per C H B).",
            "VernacExtend",
            "5b19c86bbea93402ee0eca595f752685704a4dc0"
        ],
        [
            "apply perp_in_per.",
            "VernacExtend",
            "9dc28f89ec731c366164133fc3e9cdc4b5108e4d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Per C H B).",
            "VernacExtend",
            "5b19c86bbea93402ee0eca595f752685704a4dc0"
        ],
        [
            "eapply per_col.",
            "VernacExtend",
            "eea1131b694f3888df6a9264c3553c915e9afd5f"
        ],
        [
            "2: apply H6.",
            "VernacExtend",
            "8ad9a6f0715ac66333afd68623d361ca20838285"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(H <> B).",
            "VernacExtend",
            "75ba1c13ae120378b9d98f57020a408ef256b33e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "eapply l8_7.",
            "VernacExtend",
            "74f0918be6d1b43cff79210030d171700acd124a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Lt H A A C /\\ Lt H C A C).",
            "VernacExtend",
            "de0d0f7dcc990d61fd9e9c1cca6ed0958b11e5d5"
        ],
        [
            "apply l11_46; auto.",
            "VernacExtend",
            "bc342f5357f87651c017c0e6faef0c4b72e0efc5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Lt C A A B /\\ Lt C B A B).",
            "VernacExtend",
            "1f55633812354e31437ff17d014c7aa2eb57b68c"
        ],
        [
            "apply l11_46; auto.",
            "VernacExtend",
            "bc342f5357f87651c017c0e6faef0c4b72e0efc5"
        ],
        [
            "assert(Lt H B B C /\\ Lt H C B C).",
            "VernacExtend",
            "2831d6c02a6e2bd24fca9cf66a1ec2d1fa68500c"
        ],
        [
            "apply l11_46; auto.",
            "VernacExtend",
            "bc342f5357f87651c017c0e6faef0c4b72e0efc5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Lt in *.",
            "VernacExtend",
            "b03fc162fe9749f680ef59b515b09543fa81f42f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l5_12_b.",
            "VernacExtend",
            "330fb519e1b0ff5e12e70b909bdeae1780db3688"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "eapply le_transitivity.",
            "VernacExtend",
            "e2a4f69a5a51f4ad7461a831f8290dcc5fecc787"
        ],
        [
            "apply le_left_comm.",
            "VernacExtend",
            "65fa92ba4537a235d5d9b8a12febfdb70bf335f8"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply le_left_comm.",
            "VernacExtend",
            "65fa92ba4537a235d5d9b8a12febfdb70bf335f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply le_transitivity.",
            "VernacExtend",
            "e2a4f69a5a51f4ad7461a831f8290dcc5fecc787"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "apply le_left_comm.",
            "VernacExtend",
            "65fa92ba4537a235d5d9b8a12febfdb70bf335f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_49 : forall A B C A' B' C', CongA A B C A' B' C' -> Cong B A B' A' -> Cong B C B' C' -> Cong A C A' C' /\\ (A <> C -> CongA B A C B' A' C' /\\ CongA B C A B' C' A').",
            "VernacStartTheoremProof",
            "641391b063ec20f207565102eb7897fc4852e1ef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Cong A C A' C').",
            "VernacExtend",
            "7f7937af4c58896ae0d60bcc76d667aade32b5ed"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B').",
            "VernacExtend",
            "8e250fd4ab623239662b3d46e43b93af1d92e6c8"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l11_3_bis.",
            "VernacExtend",
            "ff9ab530acc51ffd53857904554f59aadad107bf"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "apply l11_3_bis.",
            "VernacExtend",
            "ff9ab530acc51ffd53857904554f59aadad107bf"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_50_1 : forall A B C A' B' C', ~ Col A B C -> CongA B A C B' A' C' -> CongA A B C A' B' C' -> Cong A B A' B' -> Cong A C A' C' /\\ Cong B C B' C' /\\ CongA A C B A' C' B'.",
            "VernacStartTheoremProof",
            "f83e80451286b8b6703d0779ef003619fe2715f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B') by (unfold CongA in *;intuition).",
            "VernacExtend",
            "0ac2b712c323c0c1f8fbad6623bf4f76e4422e8e"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(exists C'', Out B' C'' C' /\\ Cong B' C'' B C).",
            "VernacExtend",
            "044a39f89aab9a79243f582370dc21475d3ad6c2"
        ],
        [
            "apply l6_11_existence;auto.",
            "VernacExtend",
            "5cc5f723f52ad4094e39643007c9f4d3f6b7ac76"
        ],
        [
            "ex_and H7 C''.",
            "VernacExtend",
            "2f363260921c08920022520445451db511edf7c4"
        ],
        [
            "assert(B' <> C'') by (unfold Out in *;intuition).",
            "VernacExtend",
            "2068c61d0af640e945dcf92876f52f6b8207f6dc"
        ],
        [
            "assert(~ Col A' B' C') by (eapply ncol_conga_ncol;eauto).",
            "VernacExtend",
            "c76d99a519768405e5b352b57c66320d88648389"
        ],
        [
            "assert(~ Col A' B' C'').",
            "VernacExtend",
            "8200db80a194fbe53e749b17e86581de7b5497b5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply out_col in H7.",
            "VernacExtend",
            "5ca1ac740c228713352dfb0b48d3cdc47bdc3e59"
        ],
        [
            "eapply col_permutation_2.",
            "VernacExtend",
            "05cfd06720d325169140bfe412797081b6aa793d"
        ],
        [
            "eapply (col_transitivity_1 _ C'').",
            "VernacExtend",
            "5f9b73b2e9fa9640e0f13c62c568e8760ec8a0d1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=l11_4_1 A B C A' B' C' H1).",
            "VernacExtend",
            "205f94373568fc18a2dee15dbadaeb644c1f8ed9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A C A' C'').",
            "VernacExtend",
            "c021a00302a31b01e80b123f6e9419fa537eb9a3"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "assert (C''<> B') by auto.",
            "VernacExtend",
            "b749cee715bc50a722a30e092ec427b31b293289"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong_3 B A C B' A' C'').",
            "VernacExtend",
            "000475df1791240ccbd8afbb2928da27898f2d7b"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B A C B' A' C'').",
            "VernacExtend",
            "f9f8b2ccda402287e4a096b5240ddbf31ae980cb"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B' A' C' B' A' C'').",
            "VernacExtend",
            "d1b26643e3bb49b916dde43efab662650d945c2d"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(C' = C'').",
            "VernacExtend",
            "abda04dea222a65794dde7d4d32363023cd58a5d"
        ],
        [
            "assert(HCop : Coplanar B' A' C' C'') by Cop.",
            "VernacExtend",
            "f792bed9e1146b5207d386be045c0c63a7801402"
        ],
        [
            "assert(HH:= conga_cop__or_out_ts B' A' C' C'' HCop H20).",
            "VernacExtend",
            "ea756a81bbe5c2df660d2d82aec948b6dafa5864"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "eapply l6_21.",
            "VernacExtend",
            "5818bd47a5336c5d564cf15d97d62b69a29bff28"
        ],
        [
            "apply not_col_permutation_5.",
            "VernacExtend",
            "61c6fd9f0dd359d82ca6a53f2b2c7d6a368427c2"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_col in H7.",
            "VernacExtend",
            "5ca1ac740c228713352dfb0b48d3cdc47bdc3e59"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert(OS B' A' C' C'').",
            "VernacExtend",
            "893a9d0c50e3cc0c770987b387cceff8cc699717"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l9_9 in H21.",
            "VernacExtend",
            "edc0e66717cfaf86ffff1452b27e3018010f0dbc"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "clear H20.",
            "VernacExtend",
            "c9a596f725c2beeff4f1a39b1f95fab7502a6875"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_50_2 : forall A B C A' B' C', ~ Col A B C -> CongA B C A B' C' A' -> CongA A B C A' B' C' -> Cong A B A' B' -> Cong A C A' C' /\\ Cong B C B' C' /\\ CongA C A B C' A' B'.",
            "VernacStartTheoremProof",
            "e074f45316fe5834726f11e72a271e4ec27afb3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B').",
            "VernacExtend",
            "8e250fd4ab623239662b3d46e43b93af1d92e6c8"
        ],
        [
            "unfold CongA in H1.",
            "VernacExtend",
            "9af324924100d7f008a39ebfc0ac0eb793bbfe25"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(exists C'', Out B' C'' C' /\\ Cong B' C'' B C).",
            "VernacExtend",
            "044a39f89aab9a79243f582370dc21475d3ad6c2"
        ],
        [
            "apply l6_11_existence.",
            "VernacExtend",
            "887d6fe36e0a7fbee51aa3c5530e9337bd70d9f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H7 C''.",
            "VernacExtend",
            "2f363260921c08920022520445451db511edf7c4"
        ],
        [
            "assert(B' <> C'').",
            "VernacExtend",
            "c7756de84db5d8f90f8d3d16cd5855c61b580293"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(~Col A' B' C').",
            "VernacExtend",
            "f36965ed7cea67d36c6d963b84aaa26e7b178241"
        ],
        [
            "eapply ncol_conga_ncol.",
            "VernacExtend",
            "84d79f45a2e1c2a831a617a65829f01f6dda2a24"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A' B' C'').",
            "VernacExtend",
            "8200db80a194fbe53e749b17e86581de7b5497b5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply out_col in H7.",
            "VernacExtend",
            "5ca1ac740c228713352dfb0b48d3cdc47bdc3e59"
        ],
        [
            "eapply col_permutation_2.",
            "VernacExtend",
            "05cfd06720d325169140bfe412797081b6aa793d"
        ],
        [
            "eapply (col_transitivity_1 _ C'').",
            "VernacExtend",
            "5f9b73b2e9fa9640e0f13c62c568e8760ec8a0d1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=l11_4_1 A B C A' B' C' H1).",
            "VernacExtend",
            "205f94373568fc18a2dee15dbadaeb644c1f8ed9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A C A' C'').",
            "VernacExtend",
            "c021a00302a31b01e80b123f6e9419fa537eb9a3"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong_3 B C A B' C'' A').",
            "VernacExtend",
            "4eb91418bc76ef7e2e44bd18cf5012da9e8d7ea2"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B C A B' C'' A').",
            "VernacExtend",
            "3f9a481e21f5a4f4eff3747758089813808613e4"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(CongA B' C' A' B' C'' A').",
            "VernacExtend",
            "b6a694ea305b07524b58018d62116ff6d196003d"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_col_distincts in H.",
            "VernacExtend",
            "96597e4344645954050953e1c3c06af05f730923"
        ],
        [
            "apply not_col_distincts in H10.",
            "VernacExtend",
            "a2ff9773ae004da96e0af8bad83121a1c1460ea5"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "clear H16.",
            "VernacExtend",
            "e44f3037ce3e501f642e3f64ed4dbb9b8736b6f2"
        ],
        [
            "induction(eq_dec_points C' C'').",
            "VernacExtend",
            "679bbbb69f309eecd7e9421eeba502489fe00c8d"
        ],
        [
            "induction (eq_dec_points C' C'').",
            "VernacExtend",
            "679bbbb69f309eecd7e9421eeba502489fe00c8d"
        ],
        [
            "subst C''.",
            "VernacExtend",
            "baf9e25f24f7f72e069af1c7b2831385b5536daa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong_3 C A B C' A' B').",
            "VernacExtend",
            "c42c96e397c9a3b102c9464da9ff72d53a66f9c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col C'' C' A').",
            "VernacExtend",
            "9c58adbec0deaf814a1563bbc92bc835c6152b99"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply col_transitivity_1.",
            "VernacExtend",
            "aebddcc547fe7819149578abbdc687923664358b"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply col_permutation_3.",
            "VernacExtend",
            "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_col_distincts in H27.",
            "VernacExtend",
            "e95237d7d56ba5b86d300487c26d3e0ef4b36c5c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Out in H7.",
            "VernacExtend",
            "61b715e472c0c16ab3c4432a19c7d128c6c9e8b6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H32.",
            "VernacExtend",
            "4ccd587a25ce23f31525b891e5a9e9a9b55612b0"
        ],
        [
            "assert(HH:=l11_41 ).",
            "VernacExtend",
            "45d96a233e98977950c5d66f5a73335fbbd17531"
        ],
        [
            "assert(HH1:=l11_41 C'' C' A' B' H27 (between_symmetry _ _ _ H32) H7).",
            "VernacExtend",
            "bc2fc6c2043260a2f99df76e7651e77554baef12"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA B' C' A' C'' C' A').",
            "VernacExtend",
            "3c0813b8a1f8e8e64e8d512b308666de3f7f3443"
        ],
        [
            "eapply (l11_10 B' C' A' B' C' A').",
            "VernacExtend",
            "e81f028145e04b101ac4da6ed0edb1c4aa025e50"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(LtA B' C' A' A' C'' B').",
            "VernacExtend",
            "02a0a2815e9da75ca24db6eea71731db9c5c9046"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H35.",
            "VernacExtend",
            "446ff734ea5fe0387fc2960aa2d2bb1776982900"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold LtA in H36.",
            "VernacExtend",
            "0daa55fbd64845ac9e6a9a86754dba024fac38f0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_right_comm in H20.",
            "VernacExtend",
            "b49fbf1615ce8d06892cd7e6bcd034cad43bc491"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(~Col C' C'' A').",
            "VernacExtend",
            "3485a5a8c112c5fa0ad2b2f47f88f79483d93aef"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H27.",
            "VernacExtend",
            "891c76d1dbaea012c76097423eaea99cfbfbc91b"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH1:=l11_41 C' C'' A' B' H33 (between_symmetry _ _ _ H32) H15).",
            "VernacExtend",
            "4914938b6b0560686db5de0820499d4ce8981c5c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA B' C'' A' C' C'' A').",
            "VernacExtend",
            "09dd2ba23b8d0a35637f81e9366e6425ecdb2140"
        ],
        [
            "eapply (l11_10 B' C'' A' B' C'' A').",
            "VernacExtend",
            "7e47de5e39ecbc23a921ad8be376d79a1a212b74"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(LtA B' C'' A' A' C' B').",
            "VernacExtend",
            "2f7d54eebb3ffead8e2f09ca5ac55200a545cdc5"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H36.",
            "VernacExtend",
            "99e8398df9d2e06bec93ba035bb12c3c58d858c0"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold LtA in H37.",
            "VernacExtend",
            "1b614a2871eec8872347b75563c47d2a56fc5453"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_sym in H20.",
            "VernacExtend",
            "f2e8dfc573e7921cb7fa499b436aae0bdfdb7edf"
        ],
        [
            "apply conga_right_comm in H20.",
            "VernacExtend",
            "b49fbf1615ce8d06892cd7e6bcd034cad43bc491"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_51 : forall A B C A' B' C', A <> B -> A <> C -> B <> C -> Cong A B A' B' -> Cong A C A' C' -> Cong B C B' C' -> CongA B A C B' A' C' /\\ CongA A B C A' B' C' /\\ CongA B C A B' C' A'.",
            "VernacStartTheoremProof",
            "85464d8d6fd87e44883dff70696d1d2c2ba8619d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Cong_3 B A C B' A' C' /\\ Cong_3 A B C A' B' C' /\\ Cong_3 B C A B' C' A').",
            "VernacExtend",
            "94b2388a7ba98bccb6b0b74e6c7307f549954ade"
        ],
        [
            "repeat split; cong.",
            "VernacExtend",
            "94ebe978cb673990d7eef0578ed2a6a61fe93e88"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_distinct : forall A B C D E F, CongA A B C D E F -> CongA A B C D E F /\\ A <> B /\\ C <> B /\\ D <> E /\\ F <> E.",
            "VernacStartTheoremProof",
            "16d22a97822317a5bf0df21707c22341af18f583"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold CongA in H.",
            "VernacExtend",
            "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; assumption.",
            "VernacExtend",
            "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_52 : forall A B C A' B' C', CongA A B C A' B' C' -> Cong A C A' C' -> Cong B C B' C' -> Le B C A C -> Cong B A B' A' /\\ CongA B A C B' A' C' /\\ CongA B C A B' C' A'.",
            "VernacStartTheoremProof",
            "27fa78842e6d2f58f67f744dbdb9a80aab414af5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply conga_distinct in H.",
            "VernacExtend",
            "e0b6a73cbaf47deddc59d1743d903c2084226d67"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong B A B' A').",
            "VernacExtend",
            "bf2652fd975c7b45746de55defa798e369998642"
        ],
        [
            "induction(col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "unfold Col in H7.",
            "VernacExtend",
            "8051767791b454c03dc1f2122d2a56e324a02d60"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "assert(Bet A' B' C').",
            "VernacExtend",
            "366b0410634258f4be5168e9436d49c04bb8064d"
        ],
        [
            "eapply bet_conga__bet.",
            "VernacExtend",
            "dce0b096bf03f93481fa2aeea8b15b960167585c"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "eapply l4_3.",
            "VernacExtend",
            "529c1a0ee4ae119fc46aa25dd50c7659533de04d"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "assert(Out B' A' C').",
            "VernacExtend",
            "e0ff83fff08cee919051bc22c17ec317db756b5e"
        ],
        [
            "eapply l11_21_a.",
            "VernacExtend",
            "ab599b714ff5ed4c630cb42ba37b741d343db720"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply conga_left_comm.",
            "VernacExtend",
            "6e225b064a1334fb13c881e177096174661b35b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H10.",
            "VernacExtend",
            "cc2d430db6cd11e1f70a7ce1abe9a55a831be582"
        ],
        [
            "assert(Le B' C' A' C').",
            "VernacExtend",
            "79cdee6446e691f03fa2fac5f2ba5aa4cd6c19be"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B'=A').",
            "VernacExtend",
            "d3d1e8a916408f621bb3b35caaecf282739d43ae"
        ],
        [
            "eapply bet_le_eq.",
            "VernacExtend",
            "307e6a1b11f4110abc4c77754466a940e3b3a596"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "eapply l2_11.",
            "VernacExtend",
            "813278951f55b5c711068339ba88ede9f31450ab"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(B = A).",
            "VernacExtend",
            "7f0d85df2c1739f72ccceffc00688e4ab11d52e3"
        ],
        [
            "eapply bet_le_eq.",
            "VernacExtend",
            "307e6a1b11f4110abc4c77754466a940e3b3a596"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "assert(exists A'', Out B' A'' A' /\\ Cong B' A'' B A).",
            "VernacExtend",
            "8d3b506ce268fe5bd068d219fe15ac20b8c9fd5f"
        ],
        [
            "apply l6_11_existence.",
            "VernacExtend",
            "887d6fe36e0a7fbee51aa3c5530e9337bd70d9f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "ex_and H8 A''.",
            "VernacExtend",
            "c5c6d1cb28438dad0b7f3261b25d9dc9aa159c00"
        ],
        [
            "assert(CongA A' B' C' A'' B' C').",
            "VernacExtend",
            "530e64b6a34f977bec408e292b17a1dce7d69277"
        ],
        [
            "eapply (l11_10 A'' _ C' A'' _ C' ).",
            "VernacExtend",
            "b18785b525e945d8378ff996a989deca3ac03270"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l6_6.",
            "VernacExtend",
            "e44fb1fff38be637982ccbf00a6c988675276133"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(CongA A B C A'' B' C').",
            "VernacExtend",
            "3c58537307ba9cad7999d687827691fa528c06a1"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Cong A'' C' A C).",
            "VernacExtend",
            "2357d05d2b012a7e271163ee4ffcc299aa05f44a"
        ],
        [
            "eapply cong2_conga_cong.",
            "VernacExtend",
            "dd7bcbc5ff2a6ff9d599dc259adc889f62f897d0"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(Cong_3 A'' B' C' A B C).",
            "VernacExtend",
            "13dac1865f40701acd7870dc8f87e8dd8c8a85f1"
        ],
        [
            "repeat split; cong.",
            "VernacExtend",
            "94ebe978cb673990d7eef0578ed2a6a61fe93e88"
        ],
        [
            "assert(Cong A'' C' A' C').",
            "VernacExtend",
            "4476cbd90de84eaa6c490311325f1b47ca0fd198"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A' B' C').",
            "VernacExtend",
            "f36965ed7cea67d36c6d963b84aaa26e7b178241"
        ],
        [
            "eapply ncol_conga_ncol.",
            "VernacExtend",
            "84d79f45a2e1c2a831a617a65829f01f6dda2a24"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(~Col A'' B' C').",
            "VernacExtend",
            "fd8f5346ff8ce5b5db02ab0afba6dfdacccdb893"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply col_permutation_2.",
            "VernacExtend",
            "b9ba84f277b668afffbef982ee534ea3668391cb"
        ],
        [
            "eapply (col_transitivity_1 _ A'').",
            "VernacExtend",
            "581941c774f568b82e00b58a1bc0b324b60de236"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "apply out_col in H8.",
            "VernacExtend",
            "d91a5ec0f5b5fcce138399a929e06e582c9bfbb2"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "induction(eq_dec_points A'' A').",
            "VernacExtend",
            "e75127d6459da6a8826ce5b5b28b8f3142e8db18"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "unfold Cong_3 in H13.",
            "VernacExtend",
            "8fccc382bd925b7598cba5438e355b51514f03ea"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "unfold Out in H8.",
            "VernacExtend",
            "406add6f0814befadeb462fb8179ec6d5b63fd6a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H19.",
            "VernacExtend",
            "93fd82bd5e909da66ee8f523c283cc9c4358bd72"
        ],
        [
            "assert(HH:= l11_41 A'' B' C' A' H16 H19 H17).",
            "VernacExtend",
            "8aab66c474ab7acb48eb21c71cc8ab39b078782c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A' C' A'' C').",
            "VernacExtend",
            "ef4ea1af7fcf446fd6c002c40fbeabec7fe55501"
        ],
        [
            "eapply (cong_transitivity _ _ A C).",
            "VernacExtend",
            "d42977496cd6ec83cb2d53ce189f95f6c834a858"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "unfold Cong_3 in H13.",
            "VernacExtend",
            "8fccc382bd925b7598cba5438e355b51514f03ea"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(~Col A'' C' A').",
            "VernacExtend",
            "a40645bcb4febd891c3b3eae33bf91e745ac16fa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "eapply (col_transitivity_1 _ A'' ).",
            "VernacExtend",
            "581941c774f568b82e00b58a1bc0b324b60de236"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_col in H19.",
            "VernacExtend",
            "96f078ac987c55146ffdc1500a76b6af6a759a14"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert (HH:= l11_44_1 A'' C' A' H23 ).",
            "VernacExtend",
            "6bb6fd1a98989f1dfe2023b4047b736c2bc46d08"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "apply cong_commutativity in H22.",
            "VernacExtend",
            "de62a8fe15b9de6bab25ac7d4e39c3d2617a79db"
        ],
        [
            "apply cong_symmetry in H22.",
            "VernacExtend",
            "21fad49adb5b2b93957de43849c4ae9bbfa1ea70"
        ],
        [
            "apply H25 in H22.",
            "VernacExtend",
            "6810734284868e871be97d72efd4b55671de2b37"
        ],
        [
            "assert(~Col B' C' A'').",
            "VernacExtend",
            "d0302aa74244a14c27c6552d6145aed8fcf7364c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(CongA B' A' C' A'' A' C').",
            "VernacExtend",
            "2144e6da65ffb497229ab1dfb47e241c8116e80c"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "3:apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "3:apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply between_symmetry in H19.",
            "VernacExtend",
            "31c22572bbcd2ed5cf6f109ab744066108676478"
        ],
        [
            "apply bet_out in H19.",
            "VernacExtend",
            "a0d426d91598ec2b576239144c5649d2835dd877"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assert(~Col B' C' A').",
            "VernacExtend",
            "23a2e260759c87d060520897901a7ded8a767481"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(HH:=l11_44_2 B' C' A' H28).",
            "VernacExtend",
            "34e207a12d5362d9f58c199d4fdf1a0810051db4"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "assert(Lt C' A' C' B').",
            "VernacExtend",
            "5b722da32d7a4cf2435b03bf691a878bb208bdb9"
        ],
        [
            "apply H29.",
            "VernacExtend",
            "629e762bacb1cca90c65ecec78e62b6e90cc10da"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "2:apply H21.",
            "VernacExtend",
            "c1ce329856f99fcc8bb3f06c4bc2c6365adeb4d4"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply H22.",
            "VernacExtend",
            "2abe0d9d1b642a780a9ebe28decc294818a083ed"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Lt C' A'' C' B').",
            "VernacExtend",
            "23679dfc11fbe8b548875ca2692d4afa9f72834f"
        ],
        [
            "unfold Lt in H31.",
            "VernacExtend",
            "585ae7c9ec4d3a524af462dbf7a20653509cb881"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Lt.",
            "VernacExtend",
            "e062c7d5bbdfa989efba9384984df0b938075397"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "apply H31.",
            "VernacExtend",
            "61714f080187b1aaa6be640d5c2d18138f2deeb0"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Lt in H32.",
            "VernacExtend",
            "c790d297ea3d6260c8fa2433844841e06b254078"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Le C A C B).",
            "VernacExtend",
            "8597b83ea4cf1b4c261d7256f4f5ba6228eba9b0"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(Cong C A C B).",
            "VernacExtend",
            "a5783ec047cd88da21b9deab879ae91bbfd61e0e"
        ],
        [
            "apply le_anti_symmetry.",
            "VernacExtend",
            "5ac3c734023a202dbb1b95ab1cfbbb59c43b5610"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_comm.",
            "VernacExtend",
            "565eb924e7c49364f2a3b92062cf25214cca339e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H35.",
            "VernacExtend",
            "446ff734ea5fe0387fc2960aa2d2bb1776982900"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(A' <> A'').",
            "VernacExtend",
            "29cd3931a05831b4feafb79f409ee892add3e9e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(HH:= l11_41 A' B' C' A'' H15 H19 H20).",
            "VernacExtend",
            "472ca49d3749ec47b917cb739c324555c6512130"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Cong A' C' A'' C').",
            "VernacExtend",
            "ef4ea1af7fcf446fd6c002c40fbeabec7fe55501"
        ],
        [
            "eapply (cong_transitivity _ _ A C).",
            "VernacExtend",
            "d42977496cd6ec83cb2d53ce189f95f6c834a858"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "unfold Cong_3 in H13.",
            "VernacExtend",
            "8fccc382bd925b7598cba5438e355b51514f03ea"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(~Col A'' C' A').",
            "VernacExtend",
            "a40645bcb4febd891c3b3eae33bf91e745ac16fa"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "eapply (col_transitivity_1 _ A'' ).",
            "VernacExtend",
            "581941c774f568b82e00b58a1bc0b324b60de236"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_col in H19.",
            "VernacExtend",
            "96f078ac987c55146ffdc1500a76b6af6a759a14"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert (HH:= l11_44_1 A'' C' A' H24 ).",
            "VernacExtend",
            "45576a6586969b5e9be3e1d0fcb83314207bfcc2"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "apply cong_commutativity in H23.",
            "VernacExtend",
            "0e6a2598d022a409740808bbf5f650642f028d30"
        ],
        [
            "apply cong_symmetry in H23.",
            "VernacExtend",
            "dbeaec067df7082f93a0cd61b3781ebf0d2aa54d"
        ],
        [
            "apply H26 in H23.",
            "VernacExtend",
            "ccc698010fbce842b5b240999af76f3a90be2843"
        ],
        [
            "assert(~Col B' C' A'').",
            "VernacExtend",
            "d0302aa74244a14c27c6552d6145aed8fcf7364c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(CongA B' A'' C' A' A'' C').",
            "VernacExtend",
            "3e425c34e18b72d8389d3809124b8d91f8d4fea8"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "3:apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "3:apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "apply between_symmetry in H19.",
            "VernacExtend",
            "31c22572bbcd2ed5cf6f109ab744066108676478"
        ],
        [
            "apply bet_out in H19.",
            "VernacExtend",
            "a0d426d91598ec2b576239144c5649d2835dd877"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "assert(~Col B' C' A'').",
            "VernacExtend",
            "d0302aa74244a14c27c6552d6145aed8fcf7364c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(HH:=l11_44_2 B' C' A'' H29).",
            "VernacExtend",
            "9dc8c3d361ef691a8edd3a9b97e8f54881aeef93"
        ],
        [
            "destruct HH.",
            "VernacExtend",
            "2031b05f8edccf0626b2db5748c34d216d5f04cf"
        ],
        [
            "assert(Lt C' A'' C' B').",
            "VernacExtend",
            "23679dfc11fbe8b548875ca2692d4afa9f72834f"
        ],
        [
            "apply H30.",
            "VernacExtend",
            "ee7d936337168bc5180993de9f345fc5e560fa0e"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "2:apply H22.",
            "VernacExtend",
            "2068e0964bb495a120cd798d47f1c4734f37c16e"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H23.",
            "VernacExtend",
            "d34df99b2b5b447f79550e9588c123c430c9557d"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Lt C' A' C' B').",
            "VernacExtend",
            "5b722da32d7a4cf2435b03bf691a878bb208bdb9"
        ],
        [
            "unfold Lt in H32.",
            "VernacExtend",
            "c790d297ea3d6260c8fa2433844841e06b254078"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Lt.",
            "VernacExtend",
            "e062c7d5bbdfa989efba9384984df0b938075397"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H33.",
            "VernacExtend",
            "6386d9775de9aeb848361511299770f2029fa22e"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Lt in H33.",
            "VernacExtend",
            "78f5ffd5030dc9784e80c2da9272fd64615e7e16"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Le C A C B).",
            "VernacExtend",
            "8597b83ea4cf1b4c261d7256f4f5ba6228eba9b0"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply H32.",
            "VernacExtend",
            "6d9c9effc117bd61e257dc77b3f1d9d149c9c1fe"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(Cong C A C B).",
            "VernacExtend",
            "a5783ec047cd88da21b9deab879ae91bbfd61e0e"
        ],
        [
            "apply le_anti_symmetry.",
            "VernacExtend",
            "5ac3c734023a202dbb1b95ab1cfbbb59c43b5610"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_comm.",
            "VernacExtend",
            "565eb924e7c49364f2a3b92062cf25214cca339e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H34.",
            "VernacExtend",
            "62ec2e16a7d426f9dc6512daf474854ddf5a0c13"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H36.",
            "VernacExtend",
            "99e8398df9d2e06bec93ba035bb12c3c58d858c0"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "assert(Cong_3 A B C A' B' C').",
            "VernacExtend",
            "33c8ef42199a6c502d0799d81abeacbb877fc17a"
        ],
        [
            "repeat split; cong.",
            "VernacExtend",
            "94ebe978cb673990d7eef0578ed2a6a61fe93e88"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply le_zero in H2.",
            "VernacExtend",
            "576ee08d4f21c1c73ed30316625fdd0a3a66ee70"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "auto with cong3.",
            "VernacExtend",
            "d4ada80cca751566bfb8fce212bf5b8c1224eec6"
        ],
        [
            "apply cong3_conga.",
            "VernacExtend",
            "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply le_zero in H2.",
            "VernacExtend",
            "576ee08d4f21c1c73ed30316625fdd0a3a66ee70"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "absurde.",
            "VernacExtend",
            "9c75d1eb6f29cca56b1c0e3559fe56a0be383999"
        ],
        [
            "auto with cong3.",
            "VernacExtend",
            "d4ada80cca751566bfb8fce212bf5b8c1224eec6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_53 : forall A B C D, Per D C B -> C <> D -> A <> B -> B <> C -> Bet A B C -> LtA C A D C B D /\\ Lt B D A D.",
            "VernacStartTheoremProof",
            "7becf17bd9813360cffc83cb7782f45f60d0e57a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(A<>C) by (intro; Between).",
            "VernacExtend",
            "33753cb95bf013562a8c2205705c701ef9baf58f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(~Col B A D).",
            "VernacExtend",
            "59b5629b9ee2ae215820105dae6bfbcbcff3f1ca"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Col B C D).",
            "VernacExtend",
            "374c22df6a7b0816ea3f80b0a8232cc249a48e6b"
        ],
        [
            "eapply (col_transitivity_1 _ A).",
            "VernacExtend",
            "7ee5bc575b87f92dfd69ee2ab7a6ccb224faa9fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_col in H3.",
            "VernacExtend",
            "490bbc00138d6e155c2aabce09df24693029a72a"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(~Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "apply per_not_col.",
            "VernacExtend",
            "5048534e861bed3c0c140b89a47a72b850eee207"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert(A <> D).",
            "VernacExtend",
            "764a701b09eaaf81a343fdf7891291840a2be14e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "assert( LtA C A D C B D).",
            "VernacExtend",
            "b3428e9658c55e3856330f617cd666251de0607d"
        ],
        [
            "assert(HH:=l11_41 B A D C H5 H3 H2).",
            "VernacExtend",
            "bb9c7151198f2342f91b3efd826a00187823c91f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(CongA C A D B A D).",
            "VernacExtend",
            "c74b2328fb4aa9cc5465a3b307773691a3a0eb32"
        ],
        [
            "eapply (l11_10 C A D C _ D).",
            "VernacExtend",
            "b4916e9a9f9add506bbe898a535644d84bf776d9"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply conga_right_comm.",
            "VernacExtend",
            "0b9b70f91492a911a5ff4749c016ba065a960f63"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply col_trivial_3.",
            "VernacExtend",
            "05e2ee812e1e2a11d4a529ba00c9b99017678361"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Per in H.",
            "VernacExtend",
            "28f532ca57b353dff79f1e55a5a3edf8778e4d8d"
        ],
        [
            "ex_and H B'.",
            "VernacExtend",
            "a962e6b9fc39dc63b4599d58ccc49e354dabc4cb"
        ],
        [
            "unfold Midpoint in H.",
            "VernacExtend",
            "c36b2a6dac3a427ab99d151105242184ce83b07f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HH:= H8).",
            "VernacExtend",
            "b683cc2c70fff46a6f1fe6bd5cfad833e1200a7c"
        ],
        [
            "assert(~Col B D B').",
            "VernacExtend",
            "af3fed127f17cc11ecb7e1805641ed38d91eb858"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply (col_transitivity_1 _ B').",
            "VernacExtend",
            "0932292ad3a6711e150dcba4556f9b29ab17a625"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply between_identity in H.",
            "VernacExtend",
            "61d2666b552c454ff4a8166d4f36771f6487c1f0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply (col_transitivity_1 _ C).",
            "VernacExtend",
            "1c9e3242f19b3e4ddfc8a33af2d021710876da42"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col in H3.",
            "VernacExtend",
            "490bbc00138d6e155c2aabce09df24693029a72a"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "destruct(l11_44_1 B D B').",
            "VernacExtend",
            "c691c8435f2900b1cae9730d4e7e2fe759c9bb6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H12 in H8.",
            "VernacExtend",
            "a4c8cc7b865a3c169034584728b00f97f85b1a83"
        ],
        [
            "destruct(l11_44_2 A D B').",
            "VernacExtend",
            "511dc3a5878272535de6bd59bea83307952a7865"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ A).",
            "VernacExtend",
            "7ee5bc575b87f92dfd69ee2ab7a6ccb224faa9fd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply between_symmetry in H3.",
            "VernacExtend",
            "4352193e73f8ad6c7b5ce1fb0642ce387c447b06"
        ],
        [
            "assert(B = C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "eapply (between_equality _ _ A); assumption.",
            "VernacExtend",
            "e743c8c11dfa6baf29423de19f8ab09c0ce14984"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply col_permutation_1.",
            "VernacExtend",
            "14e18c0fd9f924050c674020d62e1f21b605c996"
        ],
        [
            "eapply (col_transitivity_1 _ C).",
            "VernacExtend",
            "4e75cd7053b3cc02e9bdd70bf4ecee779d1d69eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col.",
            "VernacExtend",
            "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply bet_col in H3.",
            "VernacExtend",
            "490bbc00138d6e155c2aabce09df24693029a72a"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "permut.",
            "VernacExtend",
            "003d0c581b21e9c6ffbee477dc13580529ac414f"
        ],
        [
            "assert(LtA C A D C B' D).",
            "VernacExtend",
            "7301835fc21e5c033e1486f2b431e19637127ee6"
        ],
        [
            "eapply conga_preserves_lta.",
            "VernacExtend",
            "ea14dd0029a35516e1b413a8eca9293a4849485e"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "eapply l11_10.",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "3: apply out_trivial.",
            "VernacExtend",
            "856210f8819fb675be9c7aec40e9e3c42135a763"
        ],
        [
            "apply conga_sym in H8.",
            "VernacExtend",
            "bf2f3a5a8b6960950be466fd41775be04cfef0f6"
        ],
        [
            "apply conga_comm in H8.",
            "VernacExtend",
            "9cf5dfb78a3831f5e1d8a3db3bebd2e08f6c3c8a"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply cong_identity in H9.",
            "VernacExtend",
            "4c9efb2bec6f621beba9fc2193f7d44b970b31fb"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "2: apply H.",
            "VernacExtend",
            "d68ca3163bed92fea701ea0e7330cbb605c3b245"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_1.",
            "VernacExtend",
            "ab18d734811738f1bd67c8a206c77e593bafaaaa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(B' <> A).",
            "VernacExtend",
            "963b55622d7bc66d30126f933020f74ebd078136"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply between_symmetry in H3.",
            "VernacExtend",
            "4352193e73f8ad6c7b5ce1fb0642ce387c447b06"
        ],
        [
            "assert(B=C).",
            "VernacExtend",
            "515af9424534101738ca1cf1624c56084d9112ac"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assert (Lt D B' D A).",
            "VernacExtend",
            "16b312b6c69ff24df5fcde0aa4da21d219960a24"
        ],
        [
            "apply l11_44_2_b.",
            "VernacExtend",
            "23d52fe427fbf88f18327e93ee680aa4d674b448"
        ],
        [
            "apply (conga_preserves_lta D A C D B' C).",
            "VernacExtend",
            "14a9d58668619a3bc49713d93d1d1d68980400d1"
        ],
        [
            "eapply (l11_10).",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "2: apply out_trivial.",
            "VernacExtend",
            "743c871ca2dbfd7ab339a49e9ccb17299ad5ea98"
        ],
        [
            "4: apply out_trivial.",
            "VernacExtend",
            "2aff6a1bc93842cc8fd3d9e6c514110e7bf2b206"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "5:apply out_trivial.",
            "VernacExtend",
            "1fb0e42591b7d525356ef2cb12ff3600fdda66fd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply (l11_10).",
            "VernacExtend",
            "9092662a8b1ad327d526ab4b4cdc5d7ec14ad053"
        ],
        [
            "2: apply out_trivial.",
            "VernacExtend",
            "743c871ca2dbfd7ab339a49e9ccb17299ad5ea98"
        ],
        [
            "4: apply out_trivial.",
            "VernacExtend",
            "2aff6a1bc93842cc8fd3d9e6c514110e7bf2b206"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "5:apply out_trivial.",
            "VernacExtend",
            "1fb0e42591b7d525356ef2cb12ff3600fdda66fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "apply bet_out.",
            "VernacExtend",
            "9feab5eed2f0370273f4478b1a40e6b1b6b4934b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply cong_identity in H9.",
            "VernacExtend",
            "4c9efb2bec6f621beba9fc2193f7d44b970b31fb"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply outer_transitivity_between.",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply col_trivial_2.",
            "VernacExtend",
            "38715dbba7711388e419e135c6a527d3ceb95c3e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply lta_comm.",
            "VernacExtend",
            "e25453c857a295186433f9f605bde819e46a017e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Lt in H17.",
            "VernacExtend",
            "99da8ee3ad5154ea65e1e8fe4a529870fba16abe"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Lt.",
            "VernacExtend",
            "e062c7d5bbdfa989efba9384984df0b938075397"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "cong.",
            "VernacExtend",
            "b40c91651b510c29ce349c2854fd8dcb2a9952f7"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply HH.",
            "VernacExtend",
            "cee39940038212d757baee03cd54f334d2d6adad"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong2_conga_obtuse__cong_conga2 : forall A B C A' B' C', Obtuse A B C -> CongA A B C A' B' C' -> Cong A C A' C' -> Cong B C B' C' -> Cong B A B' A' /\\ CongA B A C B' A' C' /\\ CongA B C A B' C' A'.",
            "VernacStartTheoremProof",
            "c81aed83917b4e47a8239efe470b9e32782ec755"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (l11_52 A B C A' B' C'); auto.",
            "VernacExtend",
            "46f003eec3c2daf520c75010c446c58ff4f42a38"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "apply bet__le2313, col_obtuse__bet; assumption.",
            "VernacExtend",
            "5bdca67d4f3a1fc87e49bcede609781b01e5de2c"
        ],
        [
            "assert_diffs; apply l11_46; auto.",
            "VernacExtend",
            "ee4cc4d8bce8f9d18a10b879d9374098d5cd8237"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong2_per2__cong_conga2 : forall A B C A' B' C', A<>B -> B<>C -> Per A B C -> Per A' B' C' -> Cong A C A' C' -> Cong B C B' C' -> Cong B A B' A' /\\ CongA B A C B' A' C' /\\ CongA B C A B' C' A'.",
            "VernacStartTheoremProof",
            "94de032d43b88c6ed43926025c57b1344b8049fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (l11_46 A B C) as [_ []]; auto using per_not_col.",
            "VernacExtend",
            "3d76ed5eae44b0c40f7fb6ca9a82f5e44a5dbdf0"
        ],
        [
            "apply (l11_52 A B C A' B' C');auto.",
            "VernacExtend",
            "46f003eec3c2daf520c75010c446c58ff4f42a38"
        ],
        [
            "apply l11_16;auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "apply H9, cong_transitivity with A' C'; Cong.",
            "VernacExtend",
            "37d531a5b2189ec94f870a3f4d6e66dfd8aa0dbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong2_per2__cong : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Cong A C A' C' -> Cong B C B' C' -> Cong B A B' A'.",
            "VernacStartTheoremProof",
            "fdf2104260eb83974acde9424f5e841ebeee0741"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points B C).",
            "VernacExtend",
            "78a4dc59cf41c1536399261576755a0c2955a4e0"
        ],
        [
            "treat_equalities; Cong.",
            "VernacExtend",
            "3008ea797afa9551cbe2f0c6fa3d7ef0d856cdc4"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "destruct (eq_dec_points A' B'); subst; [Cong|].",
            "VernacExtend",
            "f5aee5c5e111e967bfd1fc796b680c9a70118460"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (cong2_per2__cong_conga2 A' B' C' B B C); Cong; Perp.",
            "VernacExtend",
            "36756098a6f5bd536ddf6b4c936ed28b72f32abb"
        ],
        [
            "apply cong2_per2__cong_conga2 with C C'; auto.",
            "VernacExtend",
            "3344a74a72b377b7e4b0eee2c54856b030221282"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong2_per2__cong_3 : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Cong A C A' C' -> Cong B C B' C' -> Cong_3 A B C A' B' C'.",
            "VernacStartTheoremProof",
            "1deef9d43deb0e6ce0ff47b4dbff6bc9501955f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "assert (Cong B A B' A') by (apply (cong2_per2__cong A B C A' B' C');auto).",
            "VernacExtend",
            "e9a3a07163c3902bd9eee4a03ee21daa1e1a9296"
        ],
        [
            "repeat split;Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_lt_per2__lt : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Cong A B A' B' -> Lt B C B' C' -> Lt A C A' C'.",
            "VernacStartTheoremProof",
            "56ba539172d970e2e7a5ce7c1c668b870e3528e1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "treat_equalities; auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "destruct (eq_dec_points B C).",
            "VernacExtend",
            "78a4dc59cf41c1536399261576755a0c2955a4e0"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply (cong2_lt__lt B' A' C' A'); Cong.",
            "VernacExtend",
            "dcfcff031ce2e358a71a1209fa024537c09a5547"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_46; Perp.",
            "VernacExtend",
            "80778e64f12796dd86491eaad514388ea536b4c4"
        ],
        [
            "destruct H2 as [[C0 []] HNCong].",
            "VernacExtend",
            "d327a9f713b6137cd153c2e1d2748ce788cc836b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Per A' B' C0) by (apply per_col with C'; Col).",
            "VernacExtend",
            "f4be780c32daac5116fd1ce6e53f1e46d8a7bf1d"
        ],
        [
            "apply (cong2_lt__lt A' C0 A' C'); [|apply l10_12 with B' B|]; Cong.",
            "VernacExtend",
            "243e272c4bba40f68acce5ff85b1a7a5abe69129"
        ],
        [
            "apply lt_comm.",
            "VernacExtend",
            "05636d126ed795799e01d08cb495b7db182d6198"
        ],
        [
            "destruct (l11_53 C' C0 B' A'); Between.",
            "VernacExtend",
            "b2283f4a611848c4e9ac516c1b6064d604ebc2e8"
        ],
        [
            "intro; subst; auto.",
            "VernacExtend",
            "14c52ba75193a5cf953b4666ab65f547781225b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_le_per2__le : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Cong A B A' B' -> Le B C B' C' -> Le A C A' C'.",
            "VernacStartTheoremProof",
            "17aa03093da6a80e913d068b84eacf18bed140dd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (cong_dec B C B' C').",
            "VernacExtend",
            "7cee255fce36b26f6e9c7a77ea70a6c3f306ece5"
        ],
        [
            "apply cong__le, l10_12 with B B'; assumption.",
            "VernacExtend",
            "eb4423ec34893465c6ef67a49c0074f3a4528021"
        ],
        [
            "assert (Lt B C B' C') by (split; assumption).",
            "VernacExtend",
            "477dd6a54e3745b42c1b62f1deca67ce564c2119"
        ],
        [
            "apply lt__le, cong_lt_per2__lt with B B'; assumption.",
            "VernacExtend",
            "ee39b910cc8c6b78362800b2895df284e192c364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt2_per2__lt : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Lt A B A' B' -> Lt B C B' C' -> Lt A C A' C'.",
            "VernacStartTheoremProof",
            "e8c9ca4f3c4e340803adb38ab94ed439359627e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_dec_points B C).",
            "VernacExtend",
            "78a4dc59cf41c1536399261576755a0c2955a4e0"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply lt_transitivity with A' B'; auto.",
            "VernacExtend",
            "0abf6affdf4dab26cd072dcb8138d30fabadae86"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply lt_comm, l11_46; Perp.",
            "VernacExtend",
            "5ced2f48c5fad805d4a5f6c9192f42a88244af9f"
        ],
        [
            "apply lt_comm in H1.",
            "VernacExtend",
            "16e32a7b02e515069e5a1192902d45d9542dbb0a"
        ],
        [
            "assert (HC0 := H2).",
            "VernacExtend",
            "806c1026a14d03fde31b9d78399d0da75c19085c"
        ],
        [
            "destruct HC0 as [[C0 []] HNCong].",
            "VernacExtend",
            "8123d97c1abbefbf9c0a11ae478b832c53c69a8c"
        ],
        [
            "assert (Per A' B' C0).",
            "VernacExtend",
            "6ea15fdb9f2b98c571d156f4ee05f93bf13f31cf"
        ],
        [
            "assert_diffs; apply per_col with C'; Col.",
            "VernacExtend",
            "ea2b225f91f1a513faded2c50d2a13023993514f"
        ],
        [
            "apply lt_transitivity with A' C0.",
            "VernacExtend",
            "d683ee0a4afff6a24da7bf32c55edbc4acb39beb"
        ],
        [
            "apply lt_comm, cong_lt_per2__lt with B B'; Cong; Perp.",
            "VernacExtend",
            "a213717d2f9b19f3bd40b7eb30cef899a0eb26f2"
        ],
        [
            "apply cong_lt_per2__lt with B' B'; Cong.",
            "VernacExtend",
            "c08a1ce2d8681be42b3d0ad8551be04b8fa9c2b8"
        ],
        [
            "apply (cong2_lt__lt B C B' C'); Cong.",
            "VernacExtend",
            "70159b665be78ebb784248563f996938127b1446"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_lt_per2__lt : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Le A B A' B' -> Lt B C B' C' -> Lt A C A' C'.",
            "VernacStartTheoremProof",
            "a72d443e7b45cb006df243c028df220df658c9e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (cong_dec A B A' B').",
            "VernacExtend",
            "df311debb7467d1ab57a9c901c99bdaa9ad48807"
        ],
        [
            "apply cong_lt_per2__lt with B B'; assumption.",
            "VernacExtend",
            "cd8738c6906fbf7904fe8e30fe1153f1356fc1dd"
        ],
        [
            "assert (Lt A B A' B') by (split; assumption).",
            "VernacExtend",
            "683e8427cd75e51b7222500c154baf6d24248586"
        ],
        [
            "apply lt2_per2__lt with B B'; assumption.",
            "VernacExtend",
            "a463a96033bb3486ac275f1b67559c2023aa49c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le2_per2__le : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Le A B A' B' -> Le B C B' C' -> Le A C A' C'.",
            "VernacStartTheoremProof",
            "8fa87405cf8deab072928c52dead8500c42befed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (cong_dec B C B' C').",
            "VernacExtend",
            "7cee255fce36b26f6e9c7a77ea70a6c3f306ece5"
        ],
        [
            "apply le_comm, cong_le_per2__le with B B'; finish.",
            "VernacExtend",
            "d396dceb9c207544830882ed17cdc17b4d0f3ed6"
        ],
        [
            "assert (Lt B C B' C') by (split; assumption).",
            "VernacExtend",
            "477dd6a54e3745b42c1b62f1deca67ce564c2119"
        ],
        [
            "apply le_lt_per2__lt with B B'; assumption.",
            "VernacExtend",
            "adb81c08c9f7dc2233b8b0c3cfb7b1ec05228cfc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_lt_per2__lt_1 : forall A B C A' B' C', Per A B C -> Per A' B' C' -> Lt A B A' B' -> Cong A C A' C' -> Lt B' C' B C.",
            "VernacStartTheoremProof",
            "41010d246d0c8d7145e5e9fded10189356868fab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply nle__lt.",
            "VernacExtend",
            "63889d70b034028594d50020b89e18c6a0c3abbd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (le_lt_per2__lt C B A C' B' A'); finish.",
            "VernacExtend",
            "435c3f2a895a31226ae357d2def7b3234caa1f1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma symmetry_preserves_conga : forall A B C A' B' C' M, A <> B -> C <> B -> Midpoint M A A' -> Midpoint M B B' -> Midpoint M C C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "c85b14c7e45eadb0defd103e0fed54accc240584"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Cong A B A' B').",
            "VernacExtend",
            "cb2fe00feef9320bbaef28a799d4f1c5f11694ab"
        ],
        [
            "apply (l7_13 M); Midpoint.",
            "VernacExtend",
            "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
        ],
        [
            "assert(Cong B C B' C').",
            "VernacExtend",
            "5b489bfcd3d3cf8630ee50d112339bddd0a8e35f"
        ],
        [
            "apply (l7_13 M); Midpoint.",
            "VernacExtend",
            "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
        ],
        [
            "assert(Cong A C A' C').",
            "VernacExtend",
            "7f7937af4c58896ae0d60bcc76d667aade32b5ed"
        ],
        [
            "apply (l7_13 M); Midpoint.",
            "VernacExtend",
            "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
        ],
        [
            "apply cong3_conga; auto.",
            "VernacExtend",
            "397f25e3ba2fbd3549af8b80954c72862060259c"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_57 : forall A B C A' B' C', OS A A' B B' -> Per B A A' -> Per B' A' A -> OS A A' C C' -> Per C A A' -> Per C' A' A -> CongA B A C B' A' C'.",
            "VernacStartTheoremProof",
            "9ec0478e8fe232a8b5ff432200cafad3558ba5ac"
        ],
        [
            "intros A B C A' B' C' HOSB HPer1 HPer2 HOSC HPer3 HPer4.",
            "VernacExtend",
            "024b464b8ece5d0e020967724d45caa15a0f7d53"
        ],
        [
            "destruct (midpoint_existence A A') as [M HM].",
            "VernacExtend",
            "d2ee776021d8e2e58be9a30e9a9b3118fb7d1977"
        ],
        [
            "destruct (symmetric_point_construction B M) as [B'' HB''].",
            "VernacExtend",
            "512bad485cf7c33e318bc3fd009d385c786f51d0"
        ],
        [
            "destruct (symmetric_point_construction C M) as [C'' HC''].",
            "VernacExtend",
            "a5c1bf03ab0306da4637d78adb2c630179d7de85"
        ],
        [
            "assert (HNColB := one_side_not_col123 A A' B B' HOSB).",
            "VernacExtend",
            "ad06c5a6d5cf32c23f6795e0bd2ee6773330199f"
        ],
        [
            "assert (HNColC := one_side_not_col123 A A' C C' HOSC).",
            "VernacExtend",
            "d12635cb1de35b8ee8c7f385912426b5ea16234a"
        ],
        [
            "apply conga_trans with B'' A' C''.",
            "VernacExtend",
            "19ca0eae5daeaee1720536ec794b5025b3c4c83e"
        ],
        [
            "assert_diffs; apply symmetry_preserves_conga with M; auto.",
            "VernacExtend",
            "a0d82f19ad027e917f271679e33471e40728f21f"
        ],
        [
            "assert (~ Col B'' A A').",
            "VernacExtend",
            "0d768f646b050eef8b2d1503e62c3ec297182052"
        ],
        [
            "assert (B <> M) by (intro; subst; apply HNColB; Col); intro; apply HNColB; ColR.",
            "VernacExtend",
            "14882236c1a3f1d9621d5056e39e504e5e1874b4"
        ],
        [
            "assert (Bet B'' A' B').",
            "VernacExtend",
            "169a3b94af9f6f54a63f8fc69a91b7051ae02c7c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Col B' B'' A').",
            "VernacExtend",
            "3b6167788984ae045ab5006f1e669766a83174c4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply (cop_per2__col A); auto.",
            "VernacExtend",
            "6a4c29d1093eebf7ec917559312ff2bcc755404c"
        ],
        [
            "apply coplanar_perm_3, coplanar_trans_1 with B; [Col|Cop|].",
            "VernacExtend",
            "082ff535c0de736912de3add46bfd8fe85c607f7"
        ],
        [
            "exists M; right; right; split; Col.",
            "VernacExtend",
            "15d018d609dea9fe185f967dad34958e2153aa5d"
        ],
        [
            "apply midpoint_preserves_per with B A A' M; Midpoint.",
            "VernacExtend",
            "aa21b42fddfbd5bdef29735acb744eec258cb1cf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply col_two_sides_bet with A; Col.",
            "VernacExtend",
            "c2d4c937e61c74d6a0f36aaf4643804a1ca61d14"
        ],
        [
            "apply invert_two_sides, l9_2, l9_8_2 with B; trivial.",
            "VernacExtend",
            "6be294f90679de31a8ee3b02fb189d6ec14c3bfe"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists M; split; [Col|Between].",
            "VernacExtend",
            "5a01c140df02d236f43adc6188f17846a3259b50"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C'' A A').",
            "VernacExtend",
            "2e75ea870b616f0eea58403ba4270ba0bfe800ba"
        ],
        [
            "assert (C <> M) by (intro; subst; apply HNColC; Col); intro; apply HNColC; ColR.",
            "VernacExtend",
            "0b8d45c893d866947ea232f4efcfdc3ae9b8a666"
        ],
        [
            "assert (Bet C'' A' C').",
            "VernacExtend",
            "08b1a78801b851e8feb1517217a80602c57d27cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Col C' C'' A').",
            "VernacExtend",
            "ac510accb29825c5bf342977d2485d920913878e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; apply (cop_per2__col A); auto.",
            "VernacExtend",
            "6a4c29d1093eebf7ec917559312ff2bcc755404c"
        ],
        [
            "apply coplanar_perm_3, coplanar_trans_1 with C; [Col|Cop|].",
            "VernacExtend",
            "c8ca94eafefa9d73de04fce5c6d08423fcfb7767"
        ],
        [
            "exists M; right; right; split; Col.",
            "VernacExtend",
            "15d018d609dea9fe185f967dad34958e2153aa5d"
        ],
        [
            "apply midpoint_preserves_per with C A A' M; Midpoint.",
            "VernacExtend",
            "b5f418123e3594ca0470a4bcd9a1a6cd8bf639be"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply col_two_sides_bet with A; Col.",
            "VernacExtend",
            "c2d4c937e61c74d6a0f36aaf4643804a1ca61d14"
        ],
        [
            "apply invert_two_sides, l9_2, l9_8_2 with C; trivial.",
            "VernacExtend",
            "19c18dae142e968a893c01c6c23cb2239ef950be"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists M; split; [Col|Between].",
            "VernacExtend",
            "5a01c140df02d236f43adc6188f17846a3259b50"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply one_side_not_col124 in HOSB.",
            "VernacExtend",
            "e9ed73324c802be7686e58f63e9cb432687cff5c"
        ],
        [
            "apply one_side_not_col124 in HOSC.",
            "VernacExtend",
            "e9670a2308b756ee0f87b4d1614485b0c900160d"
        ],
        [
            "assert_diffs; apply l11_14; auto.",
            "VernacExtend",
            "d2748102621534654ffc0a3096350c0cdf7734fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop3_orth_at__orth_at : forall A B C D E F U V X, ~ Col D E F -> Coplanar A B C D -> Coplanar A B C E -> Coplanar A B C F -> Orth_at X A B C U V -> Orth_at X D E F U V.",
            "VernacStartTheoremProof",
            "8dbcafd27d31a0de4e40d2d6ae3b6a148de510e7"
        ],
        [
            "intros A B C D E F U V X HNCol HD HE HF [HNCol1 [HUV [HX1 [HX2 HX3]]]].",
            "VernacExtend",
            "9791e33354e07a14e22e687a5d4eef13c339cac9"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; assumption.",
            "VernacExtend",
            "fef3ab684f73480b725a09c11925662b9e401c32"
        ],
        [
            "assert (forall M, Coplanar A B C M -> Coplanar D E F M).",
            "VernacExtend",
            "e91cd31390b49c57f7dbf6780ae99d292909b28c"
        ],
        [
            "intro; apply coplanar_pseudo_trans; Cop.",
            "VernacExtend",
            "a8aacd2b92b47c8f578a41ce2e63008aa561bbb4"
        ],
        [
            "assert (forall M, Coplanar D E F M -> Coplanar A B C M).",
            "VernacExtend",
            "2be7780f68082fcb0a04ef489c3fa18899667d67"
        ],
        [
            "intro; apply coplanar_pseudo_trans; Cop.",
            "VernacExtend",
            "a8aacd2b92b47c8f578a41ce2e63008aa561bbb4"
        ],
        [
            "intros; apply HX3; auto.",
            "VernacExtend",
            "915ce39663ecb0fe790e2cc3329460c5a87d4a57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col2_orth_at__orth_at : forall A B C P Q U V X, U <> V -> Col P Q U -> Col P Q V -> Orth_at X A B C P Q -> Orth_at X A B C U V.",
            "VernacStartTheoremProof",
            "54a4d11cf3d797d1fbd62fb8fa69f5c7142d13d2"
        ],
        [
            "intros A B C P Q U V X HUV HU HV [HNCol [HPQ [HX1 [HX2 HX3]]]].",
            "VernacExtend",
            "f77cc55e6b96d556c2e8b02889dfd8468d3d77dd"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "apply (col3 P Q); auto.",
            "VernacExtend",
            "d9cb6082c7f412811b0d48a8145fef8f77eb0b78"
        ],
        [
            "intros D W HD HW.",
            "VernacExtend",
            "f1270181541d95725a7fce650e5c16ece6517b9b"
        ],
        [
            "apply HX3; [|apply (colx U V)]; assumption.",
            "VernacExtend",
            "52f673c7dee5a55467c23d762085da8d4bdf4f21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_orth_at__orth_at : forall A B C U V W X, U <> W -> Col U V W -> Orth_at X A B C U V -> Orth_at X A B C U W.",
            "VernacStartTheoremProof",
            "55e573506cc086710b9c6fbeecef8bfacbb50dac"
        ],
        [
            "intros A B C U V W X HUW HCol HX.",
            "VernacExtend",
            "75edf38a85538df541db1b5151da4f6152f07d5d"
        ],
        [
            "apply col2_orth_at__orth_at with U V; Col.",
            "VernacExtend",
            "c497df46c67c9d833d660dbe08a3349d28774c05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at_symmetry : forall A B C U V X, Orth_at X A B C U V -> Orth_at X A B C V U.",
            "VernacStartTheoremProof",
            "878c9b9f9dfa67db1438cf170b9de0bac31dca6e"
        ],
        [
            "unfold Orth_at.",
            "VernacExtend",
            "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
        ],
        [
            "intros A B C U V X HX; spliter.",
            "VernacExtend",
            "93fe4114244c30059385fb971e61ebc6e10997e5"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at_distincts : forall A B C U V X, Orth_at X A B C U V -> A <> B /\\ B <> C /\\ A <> C /\\ U <> V.",
            "VernacStartTheoremProof",
            "522db921d8ab073554499d6be7ac7e0b04d373fd"
        ],
        [
            "unfold Orth_at; intros; spliter; assert_diffs.",
            "VernacExtend",
            "4ccea4eb0917e4e0551716c2f457e7acf779df61"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at_chara : forall A B C P X, Orth_at X A B C X P <-> ~ Col A B C /\\ X <> P /\\ Coplanar A B C X /\\ (forall D, Coplanar A B C D -> Per D X P).",
            "VernacStartTheoremProof",
            "b2a85e96a25a993705170761edae9992775d099e"
        ],
        [
            "intros A B C P X; split.",
            "VernacExtend",
            "2f7d7a14c338607895b23fb0a12f277de5e9dbe7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold Orth_at; intro; spliter.",
            "VernacExtend",
            "85653aa96b340e820ac5273281fd783c56ee9873"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; spliter.",
            "VernacExtend",
            "8c12bb0f80b77e560a7d26b76aac4b3a29986a28"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intros; apply per_col with P; auto.",
            "VernacExtend",
            "b4d37855197d9b323787f0bceb1ec632c6ae5a59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop3_orth__orth : forall A B C D E F U V, ~ Col D E F -> Coplanar A B C D -> Coplanar A B C E -> Coplanar A B C F -> Orth A B C U V -> Orth D E F U V.",
            "VernacStartTheoremProof",
            "7e8a6f3dc694adae40d4a31646712af499670e31"
        ],
        [
            "intros A B C D E F U V HNCol HD HE HF [X HX].",
            "VernacExtend",
            "a7d6a819ace99ffbfbdff0760c59be26e2c9afd5"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "apply (cop3_orth_at__orth_at A B C); assumption.",
            "VernacExtend",
            "cbeb692ffd7ecff3f12fabe65269b1bedcb52778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col2_orth__orth : forall A B C P Q U V, U <> V -> Col P Q U -> Col P Q V -> Orth A B C P Q -> Orth A B C U V.",
            "VernacStartTheoremProof",
            "ec6a17d3edf820516ba193536be7748eca358865"
        ],
        [
            "intros A B C P Q U V HUV HU HV [X HX].",
            "VernacExtend",
            "f72ff7d8ac8ea69465ba34b1d359973eb988eb02"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "apply col2_orth_at__orth_at with P Q; assumption.",
            "VernacExtend",
            "5b8ef75c8935fe6a0fc8e0026fb874bac7b571c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_orth__orth : forall A B C U V W, U <> W -> Col U V W -> Orth A B C U V -> Orth A B C U W.",
            "VernacStartTheoremProof",
            "2373ef77bba6de383e7d6892a54420b79736a6ce"
        ],
        [
            "intros A B C U V W HUW HCol HOrth.",
            "VernacExtend",
            "c29c5040c81dbd324eafd30551b49aa95258eb97"
        ],
        [
            "apply col2_orth__orth with U V; Col.",
            "VernacExtend",
            "292bcb8a55a55fd95759c8a1527a561ffc88aac7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_symmetry : forall A B C U V, Orth A B C U V -> Orth A B C V U.",
            "VernacStartTheoremProof",
            "d1fe7d9c9e07a15f35407ec6027779ceaf2fb802"
        ],
        [
            "intros A B C U V [X HX].",
            "VernacExtend",
            "8e36a80777315672688aac084de95e0cd7703cda"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "apply orth_at_symmetry, HX.",
            "VernacExtend",
            "119816b70404fda335ab3979177b93c48df0bb49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_distincts : forall A B C U V, Orth A B C U V -> A <> B /\\ B <> C /\\ A <> C /\\ U <> V.",
            "VernacStartTheoremProof",
            "229bb94f88e3af7277efd01eefb85b4fbfb69a26"
        ],
        [
            "intros A B C U V [X HX].",
            "VernacExtend",
            "8e36a80777315672688aac084de95e0cd7703cda"
        ],
        [
            "apply orth_at_distincts with X, HX.",
            "VernacExtend",
            "aa5908b3b6f9ec8435f8c656d570df24fe9084de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cop_orth__orth_at : forall A B C U V X, Orth A B C U V -> Coplanar A B C X -> Col U V X -> Orth_at X A B C U V.",
            "VernacStartTheoremProof",
            "23283484a0fe76960ee6cf27890771893e97db37"
        ],
        [
            "intros A B C U V X [Y [HNCol [HUV [HY1 [HY2 HY3]]]]] HX1 HX2.",
            "VernacExtend",
            "2b9c7c3e064bfa445b033f8117035c4ec206642d"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "replace X with Y; [assumption|].",
            "VernacExtend",
            "dd69640d41995d43bec71c27c06d88eacc1035d6"
        ],
        [
            "apply eq_sym, l8_8; auto.",
            "VernacExtend",
            "87e48222c1f827586c820bf9661b61a59bdd6f02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_60_aux : forall A B C D P Q, ~ Col A B C -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> Coplanar A B C D -> Cong D P D Q.",
            "VernacStartTheoremProof",
            "aca310ce685f1903f17f719fbb9c214f13f80d3b"
        ],
        [
            "intros A B C D P Q HNCol HA HB HC HCop.",
            "VernacExtend",
            "7adae3566b74b93643134405aa268b81be48edc4"
        ],
        [
            "destruct (midpoint_existence P Q) as [M []].",
            "VernacExtend",
            "6e3bde2201daa1983eb61c8028c08a6885b663a4"
        ],
        [
            "assert_diffs; destruct HCop as [X [|[|]]]; spliter.",
            "VernacExtend",
            "fbd3d0591d0c202f033480e0136cd303eb258c7b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l4_17 with C X; Col.",
            "VernacExtend",
            "78cd21059483e6576d324c10511a5c1320ccdf05"
        ],
        [
            "intro; subst; apply HNCol; assumption.",
            "VernacExtend",
            "e262790366918a64d8bac15316d738f26a1f349e"
        ],
        [
            "apply l4_17 with A B; auto.",
            "VernacExtend",
            "635a1391bd8de880e5d868946badfa91ba4f95b3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l4_17 with B X; Col.",
            "VernacExtend",
            "35ff21f222de60047700d0fff38bcafb18c78550"
        ],
        [
            "intro; subst; apply HNCol; Col.",
            "VernacExtend",
            "209688d772b0ec1f61196134dfb7fc4fc476e825"
        ],
        [
            "apply l4_17 with A C; auto.",
            "VernacExtend",
            "839c25b892ab4f7766bc9c8317a51c90adf16b20"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l4_17 with A X; Col.",
            "VernacExtend",
            "d0b71cd7bdd0b33a573b8066cd3e124e68004da5"
        ],
        [
            "intro; subst; apply HNCol; Col.",
            "VernacExtend",
            "209688d772b0ec1f61196134dfb7fc4fc476e825"
        ],
        [
            "apply l4_17 with B C; auto.",
            "VernacExtend",
            "936e9279ee5f4695dd9a5ca69e0797cc89ed5b4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_60 : forall A B C D E P, ~ Col A B C -> Per A D P -> Per B D P -> Per C D P -> Coplanar A B C E -> Per E D P.",
            "VernacStartTheoremProof",
            "ffa7d82bbe951e917bc79b17061e665198944c7c"
        ],
        [
            "intros A B C D E P HNCol HPerA HPerB HPerC HCop.",
            "VernacExtend",
            "cc30c95eb2671e53386f66bbf62d499b9fa45fdf"
        ],
        [
            "destruct (eq_dec_points D P).",
            "VernacExtend",
            "6ecc04f37482474092d71ded4df890c67cd85ff9"
        ],
        [
            "subst; apply l8_5.",
            "VernacExtend",
            "2d7f88fef5bf02a34ea7136be0b974c5a89db168"
        ],
        [
            "destruct (symmetric_point_construction P D) as [P'].",
            "VernacExtend",
            "56ab4ef0349400cea4a9c1553097f803d2226acd"
        ],
        [
            "exists P'; split; auto.",
            "VernacExtend",
            "2e7a60ed3d440c06e7fae8499e04fdff4136c3ab"
        ],
        [
            "apply (l11_60_aux A B C); [|apply per_double_cong with D..|]; assumption.",
            "VernacExtend",
            "e5d4325eb44e48576d57ae5aaa693ff089e5159b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_60_bis : forall A B C D P, ~ Col A B C -> D <> P -> Coplanar A B C D -> Per A D P -> Per B D P -> Per C D P -> Orth_at D A B C D P.",
            "VernacStartTheoremProof",
            "e64b92bcaa8c4405839752a8c25f840cc7b6898e"
        ],
        [
            "intros A B C D P HNCol HDP HD HA HB HC.",
            "VernacExtend",
            "4ed7b41dda1cda6c7e927eca2b54a11401ccd39c"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intros E Q HE HQ.",
            "VernacExtend",
            "a5a14965059b54f40003e137f9fac28eea04a647"
        ],
        [
            "apply per_col with P; auto.",
            "VernacExtend",
            "9fe286992f37af5eceba833042b9d1007449c2b8"
        ],
        [
            "apply (l11_60 A B C); assumption.",
            "VernacExtend",
            "8095ed8d622ffce87b47b34d1eaf2430a4fd257e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_61 : forall A B C A' B' C', A <> A' -> A <> B -> A <> C -> Coplanar A A' B B' -> Per B A A' -> Per B' A' A -> Coplanar A A' C C' -> Per C A A' -> Per B A C -> Per B' A' C'.",
            "VernacStartTheoremProof",
            "32f963b1274122e180730b7ab4e9a2da6ccf3d7f"
        ],
        [
            "intros A B C A' B' C'; intros.",
            "VernacExtend",
            "51d8bb6037463527defe7bef1b049bb4e216b150"
        ],
        [
            "assert (~ Col C A A') by (assert_diffs; apply per_not_col; auto).",
            "VernacExtend",
            "1fe7dd676bdd5f83cefd9dcec70ec49a1ebd3e3f"
        ],
        [
            "destruct (l10_15 A A' A' C) as [C'' []]; Col.",
            "VernacExtend",
            "4ed06e7f1b47727682512debda24ed69486cdc8c"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l8_2, (l11_60 A' A C''); [apply one_side_not_col124 with C; Side|Perp..| |apply coplanar_trans_1 with C; Col; Cop].",
            "VernacExtend",
            "d36bdf8386131a6908f00f13c1a7bf1dd3da62f2"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "revert dependent B'.",
            "VernacExtend",
            "053af2127c68274e6fabf554a0777f9cbfc9c733"
        ],
        [
            "assert (Haux : forall B', OS A A' B B' -> Per B' A' A -> Per B' A' C'').",
            "VernacExtend",
            "ef22ec20278a8f44dc2902e347b5153ce87a58ec"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros B' HOS HPer.",
            "VernacExtend",
            "0cdbe99d68199676d9ced9e4e471277f0dfd8a64"
        ],
        [
            "apply (l11_17 B A C); trivial.",
            "VernacExtend",
            "c0a5f148e7b9632370def1e1aa50d80f423207d0"
        ],
        [
            "apply l11_57; Perp.",
            "VernacExtend",
            "04cddfb14fc55744a03557625d634aabd2ef53a0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro B'; intros.",
            "VernacExtend",
            "005f14bdee5f86142835f96f8529252b142a2691"
        ],
        [
            "destruct (eq_dec_points B' A'); [subst; Perp|].",
            "VernacExtend",
            "9f0954632c0b1563234ea3657e41fc3b959075a8"
        ],
        [
            "assert (HNCol : ~ Col B' A' A) by (apply per_not_col; auto).",
            "VernacExtend",
            "41b7ac604de9efe1df4a95d89cec6fb84ebbd541"
        ],
        [
            "destruct (cop__one_or_two_sides A A' B B'); Col.",
            "VernacExtend",
            "d19eaaed17752fb81259d8903871a1caff63f7e2"
        ],
        [
            "apply per_not_col; auto.",
            "VernacExtend",
            "d63d5952cf2436a9063723d705acf1d4b8e7f322"
        ],
        [
            "destruct (segment_construction B' A' A' B') as [B'' []].",
            "VernacExtend",
            "217b0470270fe8b4e8d4ff3d279743cd301b6932"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l8_2, per_col with B''; Col.",
            "VernacExtend",
            "a956926b76cc3e2c624fd90d41cbfe15194a7755"
        ],
        [
            "apply l8_2, Haux; [|apply l8_2, per_col with B'; Perp; Col].",
            "VernacExtend",
            "5f6f5b5a3bef45e686961053ce474dfe2a0b7386"
        ],
        [
            "exists B'; split; trivial.",
            "VernacExtend",
            "8c91830a66dc0c8b7b2c9b319094e8407a517674"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro; apply HNCol; ColR.",
            "VernacExtend",
            "80b045be857eff3fb5b48d773ec57291fa069e50"
        ],
        [
            "exists A'; split; Col; Between.",
            "VernacExtend",
            "3daf405d96ac770108cfdf93f6141c2a07843988"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_61_bis : forall A B C D E P Q, Orth_at D A B C D P -> Perp D E E Q -> Coplanar A B C E -> Coplanar D E P Q -> Orth_at E A B C E Q.",
            "VernacStartTheoremProof",
            "e314ef45a3c52640259f4e716ea9d983bd2194f7"
        ],
        [
            "intros A B C D E P Q [HNCol [HDP [HD [_ HOrth]]]] HPerp HE HCop.",
            "VernacExtend",
            "0f17041fc782e335674469d1207ec0179a036a14"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "assert (Haux : forall M, Coplanar A B C M -> Per M E Q).",
            "VernacExtend",
            "c050b07b70bf67f89e493cfc6432cbb922562fc5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros M HM.",
            "VernacExtend",
            "ceb50bc8e9153612adb5fe7d6c120e4fb8f01344"
        ],
        [
            "assert (HD' : exists D', Perp D E D' D /\\ Coplanar A B C D').",
            "VernacExtend",
            "a35933edb282aac19d081366216b562a4791cafc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (ex_ncol_cop A B C D E) as [F []]; auto.",
            "VernacExtend",
            "f2eb0a2f0ce49f2a9ac4165e5b37068b2c271b52"
        ],
        [
            "destruct (ex_perp_cop D E D F) as [D' []]; auto.",
            "VernacExtend",
            "082905fc2b4d04caffb237b4bcec1c9c417050b6"
        ],
        [
            "exists D'; split; auto.",
            "VernacExtend",
            "651a71a3326cef96e0507e459086ad07f9773c1f"
        ],
        [
            "apply coplanar_pseudo_trans with D E F; trivial; apply coplanar_pseudo_trans with A B C; Cop.",
            "VernacExtend",
            "12131fe9037b0b80b7f994b5887f621fc52eea71"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HD' as [D' []].",
            "VernacExtend",
            "59fc638dcaecc584682405f4d987fcb8c312da56"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l8_2, (l11_61 D P D'); auto.",
            "VernacExtend",
            "8b3e8485ee13172429748b889254f1fe20e699cc"
        ],
        [
            "apply l8_2; Col.",
            "VernacExtend",
            "3cbf08cadc4f7dfaff2dabf697bdccc7f1657941"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; assumption.",
            "VernacExtend",
            "fef3ab684f73480b725a09c11925662b9e401c32"
        ],
        [
            "Perp.",
            "VernacExtend",
            "d897d03998ce7ea1641ab7106e051489d6e3a9db"
        ],
        [
            "apply l8_2; Col.",
            "VernacExtend",
            "3cbf08cadc4f7dfaff2dabf697bdccc7f1657941"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros; apply per_col with Q; Cop.",
            "VernacExtend",
            "62a8ad74ca4e41d725d8437ec66a56ca260e9593"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_62_unicity : forall A B C D D' P, Coplanar A B C D -> Coplanar A B C D' -> (forall E, Coplanar A B C E -> Per E D P) -> (forall E, Coplanar A B C E -> Per E D' P) -> D = D'.",
            "VernacStartTheoremProof",
            "e9b10a4578b3502549979667233450f0a14e0532"
        ],
        [
            "intros A B C D D' P HCop HCop' HD HD'.",
            "VernacExtend",
            "5b69c0904b2c68681efa645a2a8ccf605b012b6c"
        ],
        [
            "apply l8_7 with P; Perp.",
            "VernacExtend",
            "67ac33d7fd7e9873b7c517b3212cef257859c2fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_62_unicity_bis : forall A B C U X Y, Orth_at X A B C X U -> Orth_at Y A B C Y U -> X = Y.",
            "VernacStartTheoremProof",
            "a5d0fb131976a60015508f8c6a329143f9023c89"
        ],
        [
            "unfold Orth_at.",
            "VernacExtend",
            "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
        ],
        [
            "intros A B C U X Y HX HY.",
            "VernacExtend",
            "04a271795cbb01def6060314ab662bde81a15201"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_62_unicity with A B C U; trivial; intros; Col.",
            "VernacExtend",
            "287db4a0db2b2e3211e6cfde6212648e1f3e772c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at2__eq : forall A B C U V X Y, Orth_at X A B C U V -> Orth_at Y A B C U V -> X = Y.",
            "VernacStartTheoremProof",
            "75cee4ea4123b2a529f94d030a5c6a0c073b373b"
        ],
        [
            "unfold Orth_at.",
            "VernacExtend",
            "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
        ],
        [
            "intros A B C U V X Y HX HY.",
            "VernacExtend",
            "c29e01cdfb46c0171363089c8c0fd6820c905168"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_62_unicity with A B C U; trivial; intros; Col.",
            "VernacExtend",
            "287db4a0db2b2e3211e6cfde6212648e1f3e772c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cop_orth_at__eq : forall A B C U V X Y, Orth_at X A B C U V -> Coplanar A B C Y -> Col U V Y -> X = Y.",
            "VernacStartTheoremProof",
            "48cedb9555900a6671cb0acbdd34b03836461c22"
        ],
        [
            "intros A B C U V X Y HOrth HCop HCol.",
            "VernacExtend",
            "ef780e222c0c4522a880ec75bca1f3143a9f05ee"
        ],
        [
            "apply (orth_at2__eq A B C U V); [assumption|].",
            "VernacExtend",
            "a472c955969b4402c3aa752e6e3025cc5d75ac43"
        ],
        [
            "apply col_cop_orth__orth_at; [exists X|..]; assumption.",
            "VernacExtend",
            "87da73a848af518826b9434ff5052770debfb434"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at__ncop1 : forall A B C U V X, U <> X -> Orth_at X A B C U V -> ~ Coplanar A B C U.",
            "VernacStartTheoremProof",
            "6030ccf98b0871eec32398133c57a6d5addb6c90"
        ],
        [
            "intros A B C U V X HUX HOrth HCop.",
            "VernacExtend",
            "580b96722de6a6c937e39c9ef12fa8bf0f26ad7b"
        ],
        [
            "apply HUX, eq_sym, (col_cop_orth_at__eq A B C U V); Col.",
            "VernacExtend",
            "6ea73b879895992d3ebb860f8a5e080ab0af9957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at__ncop2 : forall A B C U V X, V <> X -> Orth_at X A B C U V -> ~ Coplanar A B C V.",
            "VernacStartTheoremProof",
            "13f8ff32d017f6ec3eb35e6d0146488fecdba05f"
        ],
        [
            "intros A B C U V X HUX HOrth.",
            "VernacExtend",
            "9d0e6ada4f136d24ee3a8cee6e26c11798b68346"
        ],
        [
            "apply orth_at__ncop1 with U X; [assumption|apply orth_at_symmetry, HOrth].",
            "VernacExtend",
            "052350a3f9736f8247bd26e1889d8f4f806934c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at__ncop : forall A B C P X, Orth_at X A B C X P -> ~ Coplanar A B C P.",
            "VernacStartTheoremProof",
            "82b01fe144c3adaf048c9a9ab07e6e554af036ff"
        ],
        [
            "intros A B C P X HOrth.",
            "VernacExtend",
            "361ea52cafc38beaae460878ccc73b414df92c68"
        ],
        [
            "assert (Hd := HOrth); apply orth_at_distincts in Hd; spliter.",
            "VernacExtend",
            "5fd1ea76c4a590434d85d84f6fbcac1dc9f6a22f"
        ],
        [
            "apply orth_at__ncop2 with X X; auto.",
            "VernacExtend",
            "fd10b24ed78908d503c5d666607993afc9512284"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_62_existence : forall A B C P, exists D, Coplanar A B C D /\\ forall E, Coplanar A B C E -> Per E D P.",
            "VernacStartTheoremProof",
            "db0541047b4b57af71b93c9d674ab004564a9c3d"
        ],
        [
            "intros A B C P.",
            "VernacExtend",
            "f871c2e675fa1d59560879ebabe0a9b7e333e50c"
        ],
        [
            "destruct (cop_dec A B C P) as [|HNCop].",
            "VernacExtend",
            "f8e552582cbe514fc5aa81e50f6672e3cd39987e"
        ],
        [
            "exists P; split; [assumption|intros; Perp].",
            "VernacExtend",
            "c22a48e03d92015225392d6e761991e6d9d8d589"
        ],
        [
            "assert (HNCol : ~ Col A B C) by (apply ncop__ncol with P, HNCop).",
            "VernacExtend",
            "8baddcae0c202d37cbccac138dda4ad6b45b298d"
        ],
        [
            "destruct (l8_18_existence A B P) as [D0 [HCol0 HPerp0]].",
            "VernacExtend",
            "d691d967c3b806422e66b2332233efdac35e4ca9"
        ],
        [
            "intro; apply HNCop; exists P; left; split; Col.",
            "VernacExtend",
            "0f9f3ed27fc0274bd2d7156c9e2dffb5054a923c"
        ],
        [
            "assert (HCop0 : Coplanar A B C D0) by (exists D0; left; split; Col).",
            "VernacExtend",
            "e17c1b54f28bddc2eeb5267b7a8ab9e3fe04f0f8"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (ex_perp_cop A B D0 C) as [D1 [HPerp1 HCop1]]; auto.",
            "VernacExtend",
            "02ec5f61c212a75fe8cf9adb182029b7336764db"
        ],
        [
            "destruct (perp_not_col2 A B D1 D0 HPerp1) as [HNCol1|]; [|exfalso; Col].",
            "VernacExtend",
            "d6c1b70e0cba60671469d1a906dd8f682e258bbb"
        ],
        [
            "assert (Haux : forall D, Col D0 D1 D -> Coplanar A B C D).",
            "VernacExtend",
            "610ea4625c36ddc07ebe36d303ec75f7ea4570e3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros D HD.",
            "VernacExtend",
            "3f7bba42b50fbac7989b052ad6b7515ffae391e9"
        ],
        [
            "apply coplanar_trans_1 with D1; [Col|Cop|].",
            "VernacExtend",
            "5769cf0adbe8af356d95f55eed8e9de7f3de9921"
        ],
        [
            "assert_diffs; apply coplanar_perm_12, col_cop__cop with D0; Col; Cop.",
            "VernacExtend",
            "6dbd1ce785476a9fc78ce7e327a313d4f3312866"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (diff_col_ex3 A B D0 HCol0) as [A0].",
            "VernacExtend",
            "cbd13970cd10d633be095b9e8654055222743abd"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (HCopA : Coplanar A B C A0) by (exists A0; left; split; Col).",
            "VernacExtend",
            "09a9e56699542f722988e209ce00c71d160c7d1f"
        ],
        [
            "assert (Per P D0 A0) by (destruct (l8_16_1 A B P A0 D0); auto).",
            "VernacExtend",
            "fe29697027e3c85d6cf0916523ce13f401665887"
        ],
        [
            "destruct (per_dec P D0 D1) as [|HNPer].",
            "VernacExtend",
            "1dc28ddb56255e4e2fb7149dc842d51f58cf826f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "intros E HE.",
            "VernacExtend",
            "41fcabbb4c888642410f290b2cabc1a3e042b2aa"
        ],
        [
            "apply l11_60 with A0 D1 D0; Perp.",
            "VernacExtend",
            "d9196182ad400a1120106aa8f4d51caa30d92a78"
        ],
        [
            "intro; apply HNCol1; ColR.",
            "VernacExtend",
            "db4c88af58e53c21b69c0295f95e83a9658421f3"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; trivial.",
            "VernacExtend",
            "3c7fe197950dc739e313782b702ac8e80bcc052c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (l8_18_existence D0 D1 P) as [D []]; Col.",
            "VernacExtend",
            "d2c7d7d42473743333735a353d53ca39a24d7159"
        ],
        [
            "intro Habs; apply HNCop, Haux, Habs.",
            "VernacExtend",
            "571dfbff5f4af9082eccdb73852c48cc2a71961c"
        ],
        [
            "exists D; split; auto.",
            "VernacExtend",
            "ae7ff0a651872c5d84e497d5d4a680617a8dacfc"
        ],
        [
            "intros E HE.",
            "VernacExtend",
            "41fcabbb4c888642410f290b2cabc1a3e042b2aa"
        ],
        [
            "assert (D <> D0) by (intro; subst; apply HNPer; Perp).",
            "VernacExtend",
            "b0c4389660c937ee4bb5203e7de8aa6895ae5230"
        ],
        [
            "assert (HPer : Per D0 D P) by (apply perp_per_1, perp_left_comm, perp_col with D1; auto).",
            "VernacExtend",
            "3b358b8a5103c0f7dbaf61b2f8a8647b3fef0b22"
        ],
        [
            "assert (HPer1 : Per D D0 A0).",
            "VernacExtend",
            "2d2c0b2569252920f39eeb03f096bd4343edba84"
        ],
        [
            "assert_diffs; apply l8_2, per_col with D1; auto; destruct (l8_16_1 A B D1 A0 D0); Perp.",
            "VernacExtend",
            "25c64b1bc923b7e4fc92dc22ea8360c502ec195e"
        ],
        [
            "apply l11_60 with D0 A0 D; Perp; [apply per_not_col in HPer1; Col|..].",
            "VernacExtend",
            "57e26a0ba5765d23fba443732b3d873bef902cb5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (symmetric_point_construction A0 D) as [A0'].",
            "VernacExtend",
            "684c912760db21cee91f0bee6ce05cc668c9bd89"
        ],
        [
            "apply l8_2; exists A0'; split; trivial.",
            "VernacExtend",
            "369464b9eec178099552fad5eae6a7f1d1093f6d"
        ],
        [
            "destruct (symmetric_point_construction D0 D) as [D0'].",
            "VernacExtend",
            "d5dcd0fa732c37234e2ef498a81d295d5ac9c5c0"
        ],
        [
            "apply l10_12 with D0 D0'; [..|apply per_double_cong with D|apply cong_symmetry, l7_13 with D]; Perp.",
            "VernacExtend",
            "249005fb38c8902bcde2891fec88f5cfaeba3f91"
        ],
        [
            "destruct (symmetric_point_construction P D) as [P'].",
            "VernacExtend",
            "56ab4ef0349400cea4a9c1553097f803d2226acd"
        ],
        [
            "apply midpoint_preserves_per with P' D0 A0 D; Midpoint.",
            "VernacExtend",
            "b008d24af31cfe93e1f01bd059dd662d6973d295"
        ],
        [
            "apply l11_60 with P D D0; Perp; [|exists P'; left; split; Col].",
            "VernacExtend",
            "c77f9b2ab3f6948bddb8653d8a0f64f00483173e"
        ],
        [
            "intro; apply HNCop, coplanar_trans_1 with D1; Col; [Cop|].",
            "VernacExtend",
            "7586032e9834b443b330d480055674b9e06e272b"
        ],
        [
            "exists D0; right; right; split; ColR.",
            "VernacExtend",
            "7fa6c855d32cd63dba305afc660e74a593a04365"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; trivial.",
            "VernacExtend",
            "3c7fe197950dc739e313782b702ac8e80bcc052c"
        ],
        [
            "apply coplanar_trans_1 with D1; Col.",
            "VernacExtend",
            "f8a550f7de74ee53eaf9d84fa41c786aa09cae41"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "exists D0; right; right; split; Col.",
            "VernacExtend",
            "46649ba8a923c1d8445c2e06938416c3deeb82ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_62_existence_bis : forall A B C P, ~ Coplanar A B C P -> exists X, Orth_at X A B C X P.",
            "VernacStartTheoremProof",
            "f1a841f64158fd4a1fb1939c21bae566e4cf6007"
        ],
        [
            "intros A B C P HNCop.",
            "VernacExtend",
            "40c7ec48811b654a3cb68e05b35c86ef025f2f30"
        ],
        [
            "destruct (l11_62_existence A B C P) as [X [HCop HX]].",
            "VernacExtend",
            "aabced8848fe1d7e3207f2148590266572655c64"
        ],
        [
            "assert (X <> P) by (intro; subst; apply (HNCop HCop)).",
            "VernacExtend",
            "67f39750ab2b99e4679aa4e4f1be33776d2a3da3"
        ],
        [
            "exists X; repeat split; Col.",
            "VernacExtend",
            "918f6ad10e6d2c66e8738f7d3093a8104bf4a2d2"
        ],
        [
            "apply ncop__ncol with P, HNCop.",
            "VernacExtend",
            "d90ee7c6d1100c7e113950de5d1424318b1c1f6c"
        ],
        [
            "intros D Q HD HQ.",
            "VernacExtend",
            "39cab403ad2b7230b3111bddf6051d9fbc9a598c"
        ],
        [
            "apply per_col with P; auto.",
            "VernacExtend",
            "9fe286992f37af5eceba833042b9d1007449c2b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_63_aux : forall A B C D E P, Coplanar A B C D -> D <> E -> Orth_at E A B C E P -> exists Q, OS D E P Q /\\ Orth A B C D Q.",
            "VernacStartTheoremProof",
            "9789cb806d09481fccf5a0608c875561cdc773f1"
        ],
        [
            "intros A B C D E P HD HDE HOrth.",
            "VernacExtend",
            "4ebfe34dd9d54f94fa259a3c678041f224cf3da8"
        ],
        [
            "assert (H' := HOrth).",
            "VernacExtend",
            "8e12598f8aa0f918342378a8eb9bb76ee7b8a234"
        ],
        [
            "destruct H' as [HNCol [HEP [HE1 [_ HE2]]]].",
            "VernacExtend",
            "6b143d6e4e4568c557d872367054009d668dd879"
        ],
        [
            "assert (HNCop : ~ Coplanar A B C P).",
            "VernacExtend",
            "b2043d03f004ad068d0a89c5b4e1dea760f3024c"
        ],
        [
            "intro; apply HEP, (col_cop_orth_at__eq A B C E P); Col.",
            "VernacExtend",
            "c13c48c0ee8ecacf430c7d51060181afde8b6fec"
        ],
        [
            "destruct (l10_15 D E D P) as [Q [HQ1 HQ2]]; Col.",
            "VernacExtend",
            "f7a064d547b46f14f3bd8cb18d53189c9f362b25"
        ],
        [
            "intro; apply HNCop, col_cop2__cop with D E; auto.",
            "VernacExtend",
            "9ef7cbffe9cddd2e98988ca01adc4376b03f6bb8"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split; [assumption|].",
            "VernacExtend",
            "7cde69a70c5ebfed86f2eba0170f3307a52efee2"
        ],
        [
            "destruct (ex_ncol_cop A B C D E HDE) as [F [HF1 HF2]].",
            "VernacExtend",
            "906f36d69a85c9a8ae937a88cc43b4f6bf44ab3a"
        ],
        [
            "destruct (ex_perp_cop D E D F) as [D' [HD'1 HD'2]]; auto.",
            "VernacExtend",
            "9dd7844c1f1b4275e83904ecf5c38aa88f2380d2"
        ],
        [
            "assert (~ Col D' D E) by (assert_diffs; apply per_not_col; Perp).",
            "VernacExtend",
            "1e2f0416706ce484d87338ae434f704a36aad100"
        ],
        [
            "assert (Coplanar D E F A) by (apply coplanar_pseudo_trans with A B C; Cop).",
            "VernacExtend",
            "b5258a0492bce5441a5991918a7ea03d491ddf78"
        ],
        [
            "assert (Coplanar D E F B) by (apply coplanar_pseudo_trans with A B C; Cop).",
            "VernacExtend",
            "1fd05d4bd0910f47cbbb6eea291321071941d6a9"
        ],
        [
            "assert (Coplanar D E F C) by (apply coplanar_pseudo_trans with A B C; Cop).",
            "VernacExtend",
            "dd01315af77c5f032652b8a1a23ae96bea6ffb1a"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "apply (cop3_orth_at__orth_at D' D E); [assumption|apply coplanar_pseudo_trans with D E F; Cop..|].",
            "VernacExtend",
            "d1426b3c515f8e856e0d9fa4a4809f232773a5aa"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_60_bis; Cop; [|Perp..].",
            "VernacExtend",
            "b86ff13ba1007d97243f8f5e60665a10b09ff55f"
        ],
        [
            "destruct (ex_perp_cop D E E F) as [E' [HE'1 HE'2]]; auto.",
            "VernacExtend",
            "cbfae0b8c6bc99cf1c81b3aff6678cf9522d14d4"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (l11_61 E E' P); Perp.",
            "VernacExtend",
            "b021d23cf835d925bf13a4ff2f8075570ae0d4e8"
        ],
        [
            "apply coplanar_trans_1 with F; Col; Cop.",
            "VernacExtend",
            "1ae91e3c42cdb2f86bc39e322b7f4e285b57180c"
        ],
        [
            "apply os__coplanar in HQ2; Cop.",
            "VernacExtend",
            "dbd3296dee6a985ead73500fd069f13e36a44578"
        ],
        [
            "apply l8_2, HE2; Col.",
            "VernacExtend",
            "93059b01d0f75c9f6bd76b4b8ce1a30718202449"
        ],
        [
            "apply HE2; Col; apply coplanar_pseudo_trans with D E F; assumption.",
            "VernacExtend",
            "96c68e7495c1c5875ead1c093d39e8f35c44b868"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l11_63_existence : forall A B C D P, Coplanar A B C D -> ~ Coplanar A B C P -> exists Q, Orth A B C D Q.",
            "VernacStartTheoremProof",
            "9584cb22ac166684f08491b842c3a90b8044f1fa"
        ],
        [
            "intros A B C D P HCop HNCop.",
            "VernacExtend",
            "66a9a04d30fb6585fa82d2691ee19840b9a4aabf"
        ],
        [
            "destruct (l11_62_existence_bis A B C P HNCop) as [E HE].",
            "VernacExtend",
            "723252e053c5ced71da6372469202ec713a989c7"
        ],
        [
            "destruct (eq_dec_points D E).",
            "VernacExtend",
            "d3235c34da890d51cedb91c17bde5012df92da7e"
        ],
        [
            "exists P, D; subst; assumption.",
            "VernacExtend",
            "836010be48b17e08990c08b78a4f63e613c5c84f"
        ],
        [
            "destruct (l11_63_aux A B C D E P) as [Q []]; auto.",
            "VernacExtend",
            "ebe63b053776c478bd7a69031f2de21f456c6697"
        ],
        [
            "exists Q; assumption.",
            "VernacExtend",
            "d7a2e86bc4eff3fa11b3196644a15488c5e61a26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l8_21_3 : forall A B C D X, Coplanar A B C D -> ~ Coplanar A B C X -> exists P T, Orth A B C D P /\\ Coplanar A B C T /\\ Bet X T P.",
            "VernacStartTheoremProof",
            "cc7ccb4a73ea73ccb035ee9c287d1f912eb953e9"
        ],
        [
            "intros A B C D X HD HX.",
            "VernacExtend",
            "4641b9c7f09c0fb8913a9519fb6d69fefa1ec150"
        ],
        [
            "destruct (l11_62_existence_bis A B C X HX) as [E HE].",
            "VernacExtend",
            "a8e1f37025f545af03c066c7d7d462c9c8aac741"
        ],
        [
            "destruct (eq_dec_points D E).",
            "VernacExtend",
            "d3235c34da890d51cedb91c17bde5012df92da7e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst E.",
            "VernacExtend",
            "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
        ],
        [
            "destruct (segment_construction X D D X) as [Y []].",
            "VernacExtend",
            "d28284142c610db6ac9abb1a70dc35e1cab1ceb3"
        ],
        [
            "exists Y, D; subst; repeat split; trivial.",
            "VernacExtend",
            "3aa2e3b934f44fd3e80a3c0440aec528f4a0dae0"
        ],
        [
            "assert (D <> X) by (intro; subst; apply (HX HD)); assert_diffs.",
            "VernacExtend",
            "631a55e412ae88d7dedd981b19f24ea5d249f783"
        ],
        [
            "apply col_orth__orth with X; Col.",
            "VernacExtend",
            "df145ff15c426017bb87eff68fd3b18e416e7830"
        ],
        [
            "exists D; assumption.",
            "VernacExtend",
            "8ca6a8ccf0d8cd2a9c133b1363b080799a92bb9f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (l11_63_aux A B C D E X) as [P' [HOS HP']]; auto.",
            "VernacExtend",
            "34f552966ae484b3e15acd567fe8489690be0dfe"
        ],
        [
            "destruct HE as [HNCol [HEX [HE [_ HOrth]]]].",
            "VernacExtend",
            "ab099580c4776961d19d574f465f07c899b20149"
        ],
        [
            "assert (HOrth' : Orth_at D A B C D P') by (apply col_cop_orth__orth_at; Col).",
            "VernacExtend",
            "87cb75a0e812d9a5b800c2c244e8da44cf4e9d28"
        ],
        [
            "assert (HDP' : D <> P') by (apply orth_distincts in HP'; spliter; auto).",
            "VernacExtend",
            "94e2fd22810defe5448cf57d42d1d06423b208bc"
        ],
        [
            "assert (HNCop : ~ Coplanar A B C P').",
            "VernacExtend",
            "b89a34177b8ba1405a12a79f04f9c30c1c456c7f"
        ],
        [
            "apply orth_at__ncop2 with D D; auto; apply col_cop_orth__orth_at; Col.",
            "VernacExtend",
            "cc86fddaa71d0c9b8048048c40e9495fe3452a33"
        ],
        [
            "destruct HOrth' as [_ [_ [_ [_ HOrth']]]].",
            "VernacExtend",
            "493867399ae415bbc0245329a66eee6e91455644"
        ],
        [
            "destruct (segment_construction P' D D P') as [P []].",
            "VernacExtend",
            "2c6a9226d7594fe61d1529890f5e38e6f07f92c3"
        ],
        [
            "assert (HT : TS D E X P).",
            "VernacExtend",
            "acf34dbfeb4410ba511721c4c6e8c99bcedb351b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_8_2 with P'; [|Side].",
            "VernacExtend",
            "1767d05537311450049a51235ffb7135d55328f9"
        ],
        [
            "repeat split; [intro; apply HNCop, col_cop2__cop with D E; ColR..|exists D; split; Col].",
            "VernacExtend",
            "f1bcc2dc2482b024cc6c1e26621df46b120a641e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HT as [_ [_ [T []]]].",
            "VernacExtend",
            "cf0025d1cf3bcc3d961f4a2362b5447e3f646743"
        ],
        [
            "exists P, T; repeat split; [|apply col_cop2__cop with D E; Col|assumption].",
            "VernacExtend",
            "6fa5766069b96d434ba0ddd1ac1aebfe00252353"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply col_orth__orth with P'; Col.",
            "VernacExtend",
            "42323110f057f4ffd74e4c2c9e93cbd6949c4453"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid2_orth_at2__cong : forall A B C X Y P Q P' Q', Orth_at X A B C X P -> Orth_at Y A B C Y Q -> Midpoint X P P' -> Midpoint Y Q Q' -> Cong P Q P' Q'.",
            "VernacStartTheoremProof",
            "e1ed2288a4e7f1076b3eaae377c4e1543b70bfbb"
        ],
        [
            "intros A B C X Y P Q P' Q' HX1 HY1 HX2 HY2.",
            "VernacExtend",
            "19b69cc2b41ff37d70eb68c5f1c696997926a3b7"
        ],
        [
            "assert (HX3 := HX1).",
            "VernacExtend",
            "11c462770518baa5d6b1b8ab7831fa78a30347e9"
        ],
        [
            "destruct HX3 as [HNCol [HXP [HCop1 [_ HX3]]]].",
            "VernacExtend",
            "956c873eb96517e9c04adec498e704d07c8024b0"
        ],
        [
            "assert (HY3 := HY1).",
            "VernacExtend",
            "574d012dc74e3f908241d5598ad3287785139d2c"
        ],
        [
            "destruct HY3 as [_ [HYQ [HCop2 [_ HY3]]]].",
            "VernacExtend",
            "ee6b3a19ab2786736ebc6d02e42a4c5ec1e99682"
        ],
        [
            "destruct (midpoint_existence X Y) as [Z].",
            "VernacExtend",
            "51807eead49e99f67d327c3efa7294035689c596"
        ],
        [
            "destruct (symmetric_point_construction P Z) as [R].",
            "VernacExtend",
            "2cc7d0953e175a00fd4cefd95da16b7851f89d9d"
        ],
        [
            "destruct (symmetric_point_construction P' Z) as [R'].",
            "VernacExtend",
            "61b8ff476eb0b715d65fb7eff7e61c505a20b05d"
        ],
        [
            "assert (Coplanar A B C Z) by (apply bet_cop2__cop with X Y; Between).",
            "VernacExtend",
            "129de7c65cfe86b0a9c14ba98e0f5376e3bdf700"
        ],
        [
            "assert (Cong Z P Z P').",
            "VernacExtend",
            "f996a8687f6add760eb86aea80efecfca87c9e8f"
        ],
        [
            "apply per_double_cong with X; Col.",
            "VernacExtend",
            "0dba8ccc9b8a6e6294953b3a7a8571dacdafbcad"
        ],
        [
            "apply five_segment with R R' Z Z; Between.",
            "VernacExtend",
            "b0264440c1cab29cd7460d38dd474ea9b71a1f86"
        ],
        [
            "apply cong_transitivity with P Z; [|apply cong_transitivity with P' Z]; Cong.",
            "VernacExtend",
            "65b97c04ce086e684639f117019d7314bf089c9d"
        ],
        [
            "apply cong_symmetry, l7_13 with Y; [apply symmetry_preserves_midpoint with P X P' Z|]; assumption.",
            "VernacExtend",
            "f53288b46ac276ebd348afeecb6e2309e5bcacc2"
        ],
        [
            "apply per_double_cong with Y; Col.",
            "VernacExtend",
            "f4362b6a7d958279e6aee0449bab598f201a97ba"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at2_tsp__ts : forall A B C X Y P Q, P <> Q -> Orth_at P A B C P X -> Orth_at Q A B C Q Y -> TSP A B C X Y -> TS P Q X Y.",
            "VernacStartTheoremProof",
            "13583448fdad89960e510ed2ee04d9fad1b43625"
        ],
        [
            "intros A B C X Y P Q HPQ HP HQ [HX [HY [T [HT HBet]]]].",
            "VernacExtend",
            "69a8dd563dfb42ec0da0dd7a368ce4a666473417"
        ],
        [
            "assert (HP1 := HP).",
            "VernacExtend",
            "d4da89101796c2c948e3011dc0046a5abb58397e"
        ],
        [
            "apply orth_at_chara in HP1; spliter.",
            "VernacExtend",
            "d622f6e61c048e5702eb0c87c805a140e3dca531"
        ],
        [
            "assert (HQ1 := HQ).",
            "VernacExtend",
            "8f3df8f29b258a98caf82e88b74a4bd6c21891ca"
        ],
        [
            "apply orth_at_chara in HQ1; spliter.",
            "VernacExtend",
            "5f14e92ef3655adab64b69ae01fbc5c871fc7cd3"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro; apply HX, col_cop2__cop with P Q; Col.",
            "VernacExtend",
            "f078fe36cf74b8798770cf3bfd0e7aec2bb05c17"
        ],
        [
            "intro; apply HY, col_cop2__cop with P Q; Col.",
            "VernacExtend",
            "91bcb47f2adaa6aa7671ccb51c464002d859f84c"
        ],
        [
            "exists T; split; [|assumption].",
            "VernacExtend",
            "20ed919728bfd01dfe448e64f3e3df03c3cb74c8"
        ],
        [
            "destruct (symmetric_point_construction X P) as [X'].",
            "VernacExtend",
            "83977b8328d8d5234887192f5af70f88a6b0df39"
        ],
        [
            "destruct (symmetric_point_construction Y Q) as [Y'].",
            "VernacExtend",
            "a9ce26fb48f7c1e7b7a828dfcff22fdd8d8dd35c"
        ],
        [
            "assert (Cong T X T X') by (apply per_double_cong with P; auto).",
            "VernacExtend",
            "ffac240b037ebd632e3b093d44e5edc3329b810c"
        ],
        [
            "assert (Cong T Y T Y') by (apply per_double_cong with Q; auto).",
            "VernacExtend",
            "f825126aa025312bef21cff93b8227594a72d955"
        ],
        [
            "apply col_permutation_4, bet_col, l7_22 with X Y X' Y'; trivial.",
            "VernacExtend",
            "5781d6b315813d8b6dc16a708dab329ea53a3ec3"
        ],
        [
            "apply (l4_6 X T Y); repeat split; Cong.",
            "VernacExtend",
            "111b34da77fecfdf5013525a95cb19d961bd116d"
        ],
        [
            "assert (~ Col A B C) by (apply ncop__ncol with X, HX).",
            "VernacExtend",
            "e6e073e6575df5d6ee9f31c43c6815d3298e03f8"
        ],
        [
            "apply mid2_orth_at2__cong with A B C P Q; auto.",
            "VernacExtend",
            "f188d927ef16a893ddf2004cc52e4a960fd80d1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_dec : forall A B C U V, Orth A B C U V \\/ ~ Orth A B C U V.",
            "VernacStartTheoremProof",
            "531a4f9500793f651a8b27a3e18ad4b372f17091"
        ],
        [
            "intros A B C U V.",
            "VernacExtend",
            "5e498867dbfc4e732c53e107f5d653398fa853b1"
        ],
        [
            "destruct (eq_dec_points U V).",
            "VernacExtend",
            "9f7598e080cde19bd68c120c7771aa7f8daab952"
        ],
        [
            "unfold Orth, Orth_at; right; intros [X []]; spliter; auto.",
            "VernacExtend",
            "82e9e1328cd77942a60fce9de3a6a7f26233a6cb"
        ],
        [
            "revert dependent V.",
            "VernacExtend",
            "052714346689fff8f6e7eea7b977fa6bcd876e74"
        ],
        [
            "revert U.",
            "VernacExtend",
            "c95d88226f1f03a3188a34cdc3ec08d9c8753051"
        ],
        [
            "assert (Haux : forall U V, U <> V -> ~ Coplanar A B C U -> Orth A B C U V \\/ ~ Orth A B C U V).",
            "VernacExtend",
            "3f8ce342998cdb8b340c81280379e342380cb26c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros U V HUV HU.",
            "VernacExtend",
            "9b1006af62ad5df1934ba07c5c95faeb1a4fa1d6"
        ],
        [
            "destruct (l11_62_existence_bis A B C U HU) as [X HX].",
            "VernacExtend",
            "d4a20dc2268560c4cb7746d32bd1aca715ad6a1c"
        ],
        [
            "destruct (col_dec U V X).",
            "VernacExtend",
            "197d600e59de92d8acf5de4d6bc9b9968f16cb03"
        ],
        [
            "left; apply col_orth__orth with X; Col; apply orth_symmetry; exists X; apply HX.",
            "VernacExtend",
            "ffab30870b58858007a22bf55a47158fa946bace"
        ],
        [
            "right; intros [Y HY].",
            "VernacExtend",
            "73105af7cee12b4c6ae7671d0c38a98f3d98865e"
        ],
        [
            "assert (X = Y).",
            "VernacExtend",
            "2bc2a01f660c74a9206acf39902b6fc29e98bdd3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l11_62_unicity_bis with A B C U; [assumption|].",
            "VernacExtend",
            "f67dd3a7304068d1f677d11e52665ec2f498c3db"
        ],
        [
            "apply orth_at_symmetry, col_orth_at__orth_at with V; [destruct HY; spliter..|]; trivial.",
            "VernacExtend",
            "2744918a674e7093a904b94a690c71ea48e6841c"
        ],
        [
            "intro; subst Y; absurd (Coplanar A B C U); [|assumption].",
            "VernacExtend",
            "1ac496deaf6d3f67be2bfc4358da4fd669d3549d"
        ],
        [
            "assert_diffs; apply orth_at__ncop2 with X X; auto.",
            "VernacExtend",
            "58207de3952c32134c5991a710cf394b1f07b6b6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst; destruct HY; spliter; Col.",
            "VernacExtend",
            "d42812a9134a5001e103e8adabce471c70f6fbf8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros U V HUV.",
            "VernacExtend",
            "30182e69ce4030fb3b6f2e9087fdc4ef18812110"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "unfold Orth, Orth_at; right; intros [X []]; spliter; auto.",
            "VernacExtend",
            "82e9e1328cd77942a60fce9de3a6a7f26233a6cb"
        ],
        [
            "destruct (cop_dec A B C U); [|auto].",
            "VernacExtend",
            "051c39ec07dfa1b92d77f188cdd719ed5351d67c"
        ],
        [
            "destruct (cop_dec A B C V).",
            "VernacExtend",
            "69a19983740214aed6a10ec7de44dfc1218ccaae"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; intro.",
            "VernacExtend",
            "0fd4b34386435b5a8272d82b153513f11dc07023"
        ],
        [
            "apply HUV, (orth_at2__eq A B C U V); apply col_cop_orth__orth_at; Col.",
            "VernacExtend",
            "1574a16797a5aa3e4a49b8dd79d7fd0d1387c918"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Haux V U) as [HOrth|HNOrth]; auto; [left|right; intro HOrth; apply HNOrth]; apply orth_symmetry, HOrth.",
            "VernacExtend",
            "a66fb8e894e4a786e4db8058d6fce3cf865bb945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orth_at_dec : forall A B C U V X, Orth_at X A B C U V \\/ ~ Orth_at X A B C U V.",
            "VernacStartTheoremProof",
            "3f41d6d123c6e4fbab1aae776e1de5b02730d8dc"
        ],
        [
            "intros A B C U V X.",
            "VernacExtend",
            "ed5193ba4d492b98e9042d0de1a982a1152a45c4"
        ],
        [
            "destruct (orth_dec A B C U V) as [|HNOrth]; [|right; intro HX; apply HNOrth; exists X; apply HX].",
            "VernacExtend",
            "a9867aa8d417ae27ec029a5153cf77a6c944536d"
        ],
        [
            "destruct (cop_dec A B C X); [|unfold Orth_at; right; intro; spliter; auto].",
            "VernacExtend",
            "afdb00abc160d0d5f381ba5d3f506d35f6cce112"
        ],
        [
            "destruct (col_dec U V X) as [HCol|]; [|unfold Orth_at; right; intro; spliter; auto].",
            "VernacExtend",
            "77b295d61ffbfcc0b6bd61d73aaaccca895e5597"
        ],
        [
            "left; apply col_cop_orth__orth_at; assumption.",
            "VernacExtend",
            "76c88fdc55071325edc99a890fd18f554c9dfbb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tsp_dec : forall A B C X Y, TSP A B C X Y \\/ ~ TSP A B C X Y.",
            "VernacStartTheoremProof",
            "ab62400ad54159bbb123f9b01a9f072fc14f05a8"
        ],
        [
            "intros A B C X Y.",
            "VernacExtend",
            "9dc2731015e9a5a816f77a42db5f33cd84f47f8e"
        ],
        [
            "destruct (cop_dec A B C X) as [|HX].",
            "VernacExtend",
            "56e3c3e3daf5ffe255530f0a6a344c14bfa00d7c"
        ],
        [
            "right; intros [Ha]; apply Ha; assumption.",
            "VernacExtend",
            "f32ab9ded5512b1d2e8c957b44c4e652d3485f11"
        ],
        [
            "destruct (cop_dec A B C Y) as [|HY].",
            "VernacExtend",
            "fe13de19058baa46b805296f6dae626c0379be88"
        ],
        [
            "right; intros [_ [Ha]]; apply Ha; assumption.",
            "VernacExtend",
            "3ecbe1e4bb1902c38c645e152890fa98af0ac375"
        ],
        [
            "destruct (l11_62_existence_bis A B C X HX) as [P HP].",
            "VernacExtend",
            "282bce3f06b49ee600217640496e57aed1ffdf7b"
        ],
        [
            "destruct (l11_62_existence_bis A B C Y HY) as [Q HQ].",
            "VernacExtend",
            "163f916db20b838019722301e563f0ffee0fd155"
        ],
        [
            "assert (HP1 := HP).",
            "VernacExtend",
            "d4da89101796c2c948e3011dc0046a5abb58397e"
        ],
        [
            "apply orth_at_chara in HP1; spliter.",
            "VernacExtend",
            "d622f6e61c048e5702eb0c87c805a140e3dca531"
        ],
        [
            "assert (HQ1 := HQ).",
            "VernacExtend",
            "8f3df8f29b258a98caf82e88b74a4bd6c21891ca"
        ],
        [
            "apply orth_at_chara in HQ1; spliter.",
            "VernacExtend",
            "5f14e92ef3655adab64b69ae01fbc5c871fc7cd3"
        ],
        [
            "destruct (eq_dec_points P Q).",
            "VernacExtend",
            "8e638c9507dff8ea1ec15d7062e186c739c15f49"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst Q; clear HQ; destruct (bet_dec X P Y) as [|HNBet].",
            "VernacExtend",
            "54aa262d88fcf10f05524def140b428ebcb51f49"
        ],
        [
            "left; repeat split; trivial; exists P; split; trivial.",
            "VernacExtend",
            "9512de0dc5bfab1301090e7e2e247518f23c185c"
        ],
        [
            "right; intro HQ; apply HNBet.",
            "VernacExtend",
            "52a9f61ce34be5e60b4c58809a30c07498c488c0"
        ],
        [
            "destruct HQ as [_ [_ [Q [HQ HBet]]]].",
            "VernacExtend",
            "0d50a0cc1799f11f26bae6a838cc1226b41f77f1"
        ],
        [
            "replace P with Q; [assumption|].",
            "VernacExtend",
            "c5e0ef5ffc9651e2509cf2a5422b1b77224da97b"
        ],
        [
            "apply l8_8, (col_per2__per X Y); try (apply l8_2); Col.",
            "VernacExtend",
            "8023c7d82f0f284e75be3f448fbb0c1fcf171acb"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (two_sides_dec P Q X Y) as [HT|HNTS].",
            "VernacExtend",
            "90b5ec9465495ee5a8ca392a3d323570d2435514"
        ],
        [
            "left; apply cop2_ts__tsp with P Q; assumption.",
            "VernacExtend",
            "f96c94bad12d7089d216e2361d996c285a3ff4bc"
        ],
        [
            "right; intro; apply HNTS, (orth_at2_tsp__ts A B C); assumption.",
            "VernacExtend",
            "84973f8c1d03734e7896e2319228a910f675e6fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma osp_dec : forall A B C X Y, OSP A B C X Y \\/ ~ OSP A B C X Y.",
            "VernacStartTheoremProof",
            "f69053785ae694aa8c56d5a317df760effd5fd79"
        ],
        [
            "intros A B C X Y.",
            "VernacExtend",
            "9dc2731015e9a5a816f77a42db5f33cd84f47f8e"
        ],
        [
            "destruct (cop_dec A B C X) as [|HX].",
            "VernacExtend",
            "56e3c3e3daf5ffe255530f0a6a344c14bfa00d7c"
        ],
        [
            "right; intros [X' [[Ha _] _]]; apply Ha; assumption.",
            "VernacExtend",
            "3cb9df55849aa8e64ac96a5fa8707a0b9b567e78"
        ],
        [
            "destruct (tsp_exists A B C X HX) as [X'].",
            "VernacExtend",
            "9c0893463dcc198247b77d73e8252256b52149a1"
        ],
        [
            "destruct (tsp_dec A B C Y X') as [|HNTS].",
            "VernacExtend",
            "2134f81786e9550290282180b8f2b3d9d0395d0e"
        ],
        [
            "left; exists X'; split; assumption.",
            "VernacExtend",
            "9acd9de15998a79a0d67139c36758b1260a10107"
        ],
        [
            "right; intro; apply HNTS; apply l9_41_2 with X; assumption.",
            "VernacExtend",
            "0a24e8a55273621b7d36d8868535d6192d5b1a1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma os_ts__inangle : forall A B C P, TS B P A C -> OS B A C P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "1f10566a06e3d3fe45b0edc164c8de8d4dd4696f"
        ],
        [
            "intros A B C P Hts Hos.",
            "VernacExtend",
            "f1f00931b0325d8a6a5a672b0277788ed992b4a7"
        ],
        [
            "assert(HNCol : ~ Col A B P) by (destruct Hts as []; Col).",
            "VernacExtend",
            "d0f200d7acd44efc579ebf795da018a7c34fd0ce"
        ],
        [
            "assert(~ Col B A C) by (apply (one_side_not_col123 _ _ _ P); auto).",
            "VernacExtend",
            "0c73dd9fe0ffb9143d3958a6a8d747c1f9d1ffb0"
        ],
        [
            "assert (HP' := symmetric_point_construction P B).",
            "VernacExtend",
            "626fc8c4553c961460b1ac773fabd8db2edce941"
        ],
        [
            "destruct HP' as [P'].",
            "VernacExtend",
            "25325204053d23146d468ba72155f3ecb51e155a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(~ Col B A P') by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "f5261fa03cfcf8937cddf393e1781caa1fc2640a"
        ],
        [
            "assert(HUn := two_sides_in_angle A B C P P').",
            "VernacExtend",
            "8ae8b19ad6bba13a96e75b5ed492cc6a1f447a6a"
        ],
        [
            "destruct HUn as [|Habs]; Between.",
            "VernacExtend",
            "e1ffd896b868a1d1adc23506dd862986ecf84913"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply in_angle_one_side in Habs; Col.",
            "VernacExtend",
            "993b8e47c20c9778ea009c61f9de7f46b2a56213"
        ],
        [
            "apply l9_9_bis in Habs.",
            "VernacExtend",
            "5efda967a01aeecbab70b4a3f30d014f8462ea38"
        ],
        [
            "apply Habs.",
            "VernacExtend",
            "50c6517b7b2948658a6294e812c8a67cddbfbe7c"
        ],
        [
            "apply invert_two_sides; apply l9_2.",
            "VernacExtend",
            "491d6972c6d34760c4223034265fb78efc7d3f79"
        ],
        [
            "apply (l9_8_2 _ _ P); Side.",
            "VernacExtend",
            "63e99fa0a0b7d7538851a4ba15dee0f37b84e588"
        ],
        [
            "repeat split; Col; exists B; split; Col; Between.",
            "VernacExtend",
            "52ee2a521a48031329fa706a77e217e52446c1ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma os2__inangle : forall A B C P, OS B A C P -> OS B C A P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "484e1a6fccf94ae060204bc7d4a8a6e2580bfb05"
        ],
        [
            "intros A B C P Hos1 Hos2.",
            "VernacExtend",
            "8bb338f6da2bc621d296bc81449e755056631f17"
        ],
        [
            "apply os_ts__inangle; auto.",
            "VernacExtend",
            "d86215d4cae311f0e0aee71552ac38860f616f96"
        ],
        [
            "apply l9_31; Side.",
            "VernacExtend",
            "eb42959e7bb2d0a1397c09e870caacd7a32d6043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_conga__acute : forall A B C D E F, Acute A B C -> CongA A B C D E F -> Acute D E F.",
            "VernacStartTheoremProof",
            "d72f1b76ae4c1602f87dd4e6e0a91629632ee2f5"
        ],
        [
            "intros A B C D E F Hacute HConga.",
            "VernacExtend",
            "faa20cd8b295db67417d1e43ec73bc43cc5f20a6"
        ],
        [
            "apply (acute_lea_acute _ _ _ A B C); auto.",
            "VernacExtend",
            "9e6121b7d69605cfad34ddd8f981f649f9618619"
        ],
        [
            "apply conga__lea.",
            "VernacExtend",
            "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
        ],
        [
            "apply conga_sym; assumption.",
            "VernacExtend",
            "2b25f222f2bd1654890783ce24b11c9ff220586f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_out2__acute : forall A B C A' C', Out B A' A -> Out B C' C -> Acute A B C -> Acute A' B C'.",
            "VernacStartTheoremProof",
            "4f56f8de0e103e5a7bea59874abb06b250535771"
        ],
        [
            "intros A B C A' C' HA HC HB.",
            "VernacExtend",
            "1022a4c6758cea25f05bd1b688dd11b76bbd742a"
        ],
        [
            "apply (acute_conga__acute A B C).",
            "VernacExtend",
            "8b0d4fcf386b0fb5fe4ce079c080b385f80995d7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out2__conga; assumption.",
            "VernacExtend",
            "4f104cfea7298df1d66bed71afa377f8b5cc44f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_obtuse__obtuse : forall A B C D E F, Obtuse A B C -> CongA A B C D E F -> Obtuse D E F.",
            "VernacStartTheoremProof",
            "0aaa4f3b29beed782bf3cfd73d24ad9c95a2f503"
        ],
        [
            "intros A B C D E F Hobtuse HConga.",
            "VernacExtend",
            "6ccd33de1daaeb2a30fc04a5c150b2a38c5040d1"
        ],
        [
            "apply (obtuse_gea_obtuse _ _ _ A B C); auto.",
            "VernacExtend",
            "e49555445dc0867a6bfdc8effdeb3cc4feb9341a"
        ],
        [
            "apply conga__lea; assumption.",
            "VernacExtend",
            "d3035a964ccd5d73fe4dc7e52840f965486a6cfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_out2__obtuse : forall A B C A' C', Out B A' A -> Out B C' C -> Obtuse A B C -> Obtuse A' B C'.",
            "VernacStartTheoremProof",
            "7c0cd78645d3ce52970b4c09f61a2432110f73ee"
        ],
        [
            "intros A B C A' C' HA HC HB.",
            "VernacExtend",
            "1022a4c6758cea25f05bd1b688dd11b76bbd742a"
        ],
        [
            "apply (conga_obtuse__obtuse A B C).",
            "VernacExtend",
            "62a18d4c8667627391e406a247428fcc3365a1bc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out2__conga; assumption.",
            "VernacExtend",
            "4f104cfea7298df1d66bed71afa377f8b5cc44f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_lea__bet : forall A B C D E F, Bet A B C -> LeA A B C D E F -> Bet D E F.",
            "VernacStartTheoremProof",
            "4a3c1799c83e5a1e5e0f5232d5078127cd5746a7"
        ],
        [
            "intros A B C D E F HBet Hlea.",
            "VernacExtend",
            "eadc3b574f9439c30df9020a02c30d3a706b23b5"
        ],
        [
            "apply (bet_conga__bet A B C); auto.",
            "VernacExtend",
            "29d5da8a14c74b30826438a6efc0876e54f36a22"
        ],
        [
            "apply lea_asym; auto.",
            "VernacExtend",
            "225b4007c284fb0991e29bc5ac1e2e640d0580cb"
        ],
        [
            "apply lea_distincts in Hlea.",
            "VernacExtend",
            "aeeca3a649881755aa318e2d6c433132f71ff662"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_lea__out : forall A B C D E F, Out E D F -> LeA A B C D E F -> Out B A C.",
            "VernacStartTheoremProof",
            "5d149ada63609b7fdeae8f360c7876464ab52e1c"
        ],
        [
            "intros A B C D E F Hout Hlea.",
            "VernacExtend",
            "d298b9010939647f546d2421fc8c9bc67da18aa1"
        ],
        [
            "apply (l11_21_a D E F); auto.",
            "VernacExtend",
            "6ce59a5a260bd35299a0dfe9b376f3a3abec037b"
        ],
        [
            "apply lea_asym; auto.",
            "VernacExtend",
            "225b4007c284fb0991e29bc5ac1e2e640d0580cb"
        ],
        [
            "apply lea_distincts in Hlea.",
            "VernacExtend",
            "aeeca3a649881755aa318e2d6c433132f71ff662"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply l11_31_1; auto.",
            "VernacExtend",
            "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_lta__lta : forall A B C D E F A' D', LtA A B C D E F -> Bet A B A' -> A' <> B -> Bet D E D' -> D' <> E -> LtA D' E F A' B C.",
            "VernacStartTheoremProof",
            "3dd474f23f70e98203687fded551b6b46cc39245"
        ],
        [
            "intros A B C D E F A' D' Hlta.",
            "VernacExtend",
            "9885450bae1858d38c320903cbacf84f308af22d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hd := Hlta).",
            "VernacExtend",
            "801b295582097ef495f153d38110dc833ca99fca"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (l11_36 A _ _ D); auto.",
            "VernacExtend",
            "c167a4b54bfc387d50ef34e03b3ee24d43428418"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(CongA A B C D E F); auto.",
            "VernacExtend",
            "9985ba7be5964096334bb166f80d398cb6b6359c"
        ],
        [
            "apply (l11_13 A' _ _ D'); try (apply conga_sym); Between.",
            "VernacExtend",
            "9ec2ae14e0c033a0d6e7a0b84c5c4b9a3efd8291"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta__lea : forall A B C D E F, LtA A B C D E F -> LeA A B C D E F.",
            "VernacStartTheoremProof",
            "0542eb004d7518086716014cbac914261c895b1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea123456_lta__lta : forall A B C D E F G H I, LeA A B C D E F -> LtA D E F G H I -> LtA A B C G H I.",
            "VernacStartTheoremProof",
            "998c371820759151b2c5b00639f6f53a7fb1af99"
        ],
        [
            "intros A B C D E F G H I Hlea Hlta.",
            "VernacExtend",
            "68432abe78f945fa48edd2a1e395edd17a3ca4ee"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (lea_trans _ _ _ D E F).",
            "VernacExtend",
            "ca38723144394a6840993c6342546d368631f31e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lta__lea; assumption.",
            "VernacExtend",
            "c19f850ae2f87a33b0b1c99943cdafd4bd081842"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [Hlea' HNConga].",
            "VernacExtend",
            "1106401424d4443a9ee36998142ffc866d9bef49"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (l11_30 A B C D E F); auto.",
            "VernacExtend",
            "0c4093cccf07ad3b59a7463d6154cc261a46d8bd"
        ],
        [
            "apply lea_distincts in Hlea.",
            "VernacExtend",
            "aeeca3a649881755aa318e2d6c433132f71ff662"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_refl; assumption.",
            "VernacExtend",
            "af9b062c8cbd24307d195fe8577271ed342bc710"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea456789_lta__lta : forall A B C D E F G H I, LtA A B C D E F -> LeA D E F G H I -> LtA A B C G H I.",
            "VernacStartTheoremProof",
            "6fff03169d9d0da9f0fd736e147d58d4a594bff1"
        ],
        [
            "intros A B C D E F G H I Hlta Hlea.",
            "VernacExtend",
            "f2854df9db1fce72ff66a0ae91e7355238e955ae"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (lea_trans _ _ _ D E F).",
            "VernacExtend",
            "ca38723144394a6840993c6342546d368631f31e"
        ],
        [
            "apply lta__lea; assumption.",
            "VernacExtend",
            "c19f850ae2f87a33b0b1c99943cdafd4bd081842"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [Hlea' HNConga].",
            "VernacExtend",
            "1106401424d4443a9ee36998142ffc866d9bef49"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply lea_asym.",
            "VernacExtend",
            "2063e70bb4c41c64024466002567257da2aca3f3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (l11_30 D E F G H I); auto.",
            "VernacExtend",
            "0e8c07202271eaced6f30e4cfff95c92daed8ebb"
        ],
        [
            "2: apply conga_sym; assumption.",
            "VernacExtend",
            "1fdef1a63ed444ae7f070ced10167c57f51caac6"
        ],
        [
            "apply lea_distincts in Hlea.",
            "VernacExtend",
            "aeeca3a649881755aa318e2d6c433132f71ff662"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_refl; assumption.",
            "VernacExtend",
            "af9b062c8cbd24307d195fe8577271ed342bc710"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_per__lta : forall A B C D E F, Acute A B C -> D <> E -> E <> F -> Per D E F -> LtA A B C D E F.",
            "VernacStartTheoremProof",
            "499a1b91af00efbc73a9b4b634e171c0dfc0ee96"
        ],
        [
            "intros A B C D E F Hacute HDE HEF HPer.",
            "VernacExtend",
            "6409923594ab7e40467bf005566792da11adbb5c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct Hacute as [G [H [I [HPer2 Hlta]]]].",
            "VernacExtend",
            "1ca28be21c8dc0f4c915b1ad9937b4cfb1401801"
        ],
        [
            "assert(Hdiff := lta_distincts A B C G H I Hlta).",
            "VernacExtend",
            "c350bce9c3be907bf653d25f23e3d661d74084d1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply (conga_preserves_lta A B C G H I); try (apply conga_refl); auto.",
            "VernacExtend",
            "7da0f2056e7cc084a7fbc2949075e4c2aabc0766"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_per__lta : forall A B C D E F, Obtuse A B C -> D <> E -> E <> F -> Per D E F -> LtA D E F A B C.",
            "VernacStartTheoremProof",
            "5fb24e467caa017208768fdce0e17a127847ecf3"
        ],
        [
            "intros A B C D E F Hobtuse HDE HEF HPer.",
            "VernacExtend",
            "e5425d45a75a06295abfa429345d17d55488ad38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct Hobtuse as [G [H [I [HPer2 Hgta]]]].",
            "VernacExtend",
            "ee94aa37224f6ff41a78019269659d4ea63f8a0c"
        ],
        [
            "assert(Hdiff := gta_distincts A B C G H I Hgta).",
            "VernacExtend",
            "aadab2ac639aa1ed94cb75aaa511822e840bbde1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply (conga_preserves_lta G H I A B C); try (apply conga_refl); auto.",
            "VernacExtend",
            "d35249c81fa854cfde2e62fda20f35a276d53037"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_obtuse__lta : forall A B C D E F, Acute A B C -> Obtuse D E F -> LtA A B C D E F.",
            "VernacStartTheoremProof",
            "24cf512b5aeaf22eb43298a9be0f9c74daec5ff2"
        ],
        [
            "intros A B C D E F Hacute Hobtuse.",
            "VernacExtend",
            "2c756c4ea9442438761fad0e097618e92d0abab6"
        ],
        [
            "destruct Hacute as [G [H [I [HPer Hlta]]]].",
            "VernacExtend",
            "6a14a0514185dec189ae114acd69a753d8bed249"
        ],
        [
            "apply (lta_trans _ _ _ G H I); auto.",
            "VernacExtend",
            "c02d20a67c0cebde31ec3e84aaa9a311ca7c7e5c"
        ],
        [
            "apply lta_distincts in Hlta.",
            "VernacExtend",
            "19d08099f2c1a9f157a8d5c41439bc861c596e1d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply obtuse_per__lta; auto.",
            "VernacExtend",
            "46daa89a6faff8909953985521e3f0b16d400da9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_in_angle : forall A B C P, LeA A B P A B C -> OS A B C P -> InAngle P A B C.",
            "VernacStartTheoremProof",
            "1dfe559d7765593fb1f290f0025acbf457f6fe7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(H1 := H0).",
            "VernacExtend",
            "088b8a9de6027adfe03dfa39b7dfb8bae8af664a"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert(H0 : CongA A B P A B P).",
            "VernacExtend",
            "642bf8151efddc6672dbb2574fc041a890703fdb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(~ Col A B P) by (apply (one_side_not_col123 _ _ _ C); Side).",
            "VernacExtend",
            "5034229431c67be053566aadb7a356cf7412da1c"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold LeA in H.",
            "VernacExtend",
            "f6755c4cc833482770be14e943273f174e05e04f"
        ],
        [
            "ex_and H T.",
            "VernacExtend",
            "baca6f2ffd978caa6322cc3280b1eeae0389e36e"
        ],
        [
            "eapply conga_preserves_in_angle.",
            "VernacExtend",
            "2f81faa73a44d215de9a684177549a6d87276b0c"
        ],
        [
            "3: apply H.",
            "VernacExtend",
            "af9b3cdf5f3a1f87c8cdc1914e68b5f3bb3edca5"
        ],
        [
            "apply conga_refl.",
            "VernacExtend",
            "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
        ],
        [
            "assert(HH0:=H0).",
            "VernacExtend",
            "f7d33f7919f61d212620b53de1133fb9d8e4f6cc"
        ],
        [
            "unfold CongA in HH0.",
            "VernacExtend",
            "53df6e376146a6c747120f69383c2ce25f7d2ae2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "clear H6.",
            "VernacExtend",
            "bcbf4d43ebfb4ad30f31b4264dcdbf754a920d28"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "unfold OS in H1.",
            "VernacExtend",
            "89ed54cd4b94bb916409452fa77e5c520785b620"
        ],
        [
            "ex_and H1 X.",
            "VernacExtend",
            "26cf0a1b421ac14bb208422fa8c8c96a15d0092e"
        ],
        [
            "unfold TS in H1.",
            "VernacExtend",
            "68dff6c354f305bd0012d3b37d398c9a186b9a42"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply conga_trans; apply conga_sym.",
            "VernacExtend",
            "37925827c85de23ba61999a02489b8e9c818e9ba"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_bet__obtuse : forall A B C A', Bet A B A' -> A' <> B -> Acute A B C -> Obtuse A' B C.",
            "VernacStartTheoremProof",
            "db3f58509d97809cce3060bef56bbf3ff18e4a17"
        ],
        [
            "intros A B C A' HBet HA'B Hacute.",
            "VernacExtend",
            "a26cc4a485c554776a70124e1bca33f801e3c9f5"
        ],
        [
            "assert(Hd := acute_distincts A B C Hacute).",
            "VernacExtend",
            "47799863aa89e1b4c3a59f7b4e1d5c1d97b3351d"
        ],
        [
            "destruct Hd.",
            "VernacExtend",
            "c1da9b7581942b918626ba64c1fc77541e2d1f71"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec A B C).",
            "VernacExtend",
            "c5492a1b872689bb9ee4184107bb3c6832671091"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(Hlta : LtA A B C A B C) by (apply acute_obtuse__lta; auto; apply bet__obtuse; auto).",
            "VernacExtend",
            "99042395626204aadd1d72abf6cf71e62c2553aa"
        ],
        [
            "destruct Hlta as [_ HNConga].",
            "VernacExtend",
            "1939b3e5aea595b55340a5e07d1a667102258fcf"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply bet__obtuse; auto.",
            "VernacExtend",
            "52eabbf2b3ba688eedef11d2874bb87823073604"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply (l6_2 A); auto.",
            "VernacExtend",
            "0d262f1c691485b470ee192028d7c76e0c64df79"
        ],
        [
            "apply not_bet_out; auto.",
            "VernacExtend",
            "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol1.",
            "VernacExtend",
            "2184024eabdbb8dfdc24467562b53eb9042970b5"
        ],
        [
            "assert(HD := l10_15 A B B C).",
            "VernacExtend",
            "1f3ce527e1a8cdc07f5b62c0df26c93fc1d65d04"
        ],
        [
            "destruct HD as [D []]; Col.",
            "VernacExtend",
            "8a766b551e177a0a5c1628ba2f9b0b80cc91daea"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HNCol2 : ~ Col C B D).",
            "VernacExtend",
            "cb7298f53dfc17addccd748c345eedd0cd361e0c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Hlta : LtA A B C A B C).",
            "VernacExtend",
            "7c186462319aafcaca18e8e116f76a245f59d6e1"
        ],
        [
            "2: destruct Hlta as [_ HNConga]; apply HNConga; apply conga_refl; auto.",
            "VernacExtend",
            "9a4705ae22f7615bd81be55ee8ff71d3482f6acb"
        ],
        [
            "apply acute_per__lta; auto.",
            "VernacExtend",
            "e7483d4405f5dcfd83f3a9fc8d7538ee2cd2bb26"
        ],
        [
            "apply (per_col _ _ D); Perp; Col.",
            "VernacExtend",
            "eed9dbb359a63e10442bcf21144c95018b15ac5e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS B A' C D) by (apply (col_one_side _ A); Side; Col).",
            "VernacExtend",
            "17c0af8148f8c68b221a1f9faab48fc9d4b6fec5"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split; Perp.",
            "VernacExtend",
            "bc5953d6f0d76d444d426576ad647efe219ea91b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "2: apply conga_comm; apply l11_18_1; Perp.",
            "VernacExtend",
            "f465c106e4d5efd6c7ec8973eadf23c57ad1e876"
        ],
        [
            "apply os2__inangle; auto.",
            "VernacExtend",
            "0184e6fcfc40cc9656d472ed8a3e9aeeca74345b"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro; apply HNCol1; ColR.",
            "VernacExtend",
            "db4c88af58e53c21b69c0295f95e83a9658421f3"
        ],
        [
            "exists B; Col; Between.",
            "VernacExtend",
            "b6be114c0f76fa5906c8d53fa9ff79d1699275cf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "apply in_angle_two_sides; Col.",
            "VernacExtend",
            "058860f8f19de69871e77dde1b4ce82fb6ad60a1"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "apply lea_in_angle; try (apply conga_refl); Side.",
            "VernacExtend",
            "f41a232e9fb95f525b750f81ecbe5f493c96d23c"
        ],
        [
            "apply lta__lea.",
            "VernacExtend",
            "e8363b3959de8067ca3d21fefbf5841cb47f33d8"
        ],
        [
            "apply acute_per__lta; Perp.",
            "VernacExtend",
            "1f239181715e63b856262e5c3adca087077fa83a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNCol2.",
            "VernacExtend",
            "88f7f0c273bc9a55cde201fc5f351b2f2b12af33"
        ],
        [
            "assert(HUn := conga_cop__or_out_ts A' B D C).",
            "VernacExtend",
            "543fc219f93b825e0527c99815073ee003f78829"
        ],
        [
            "destruct HUn.",
            "VernacExtend",
            "8e4a4e9ddd33e229ff805e86d3aa3f80f13b29a9"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "apply (conga_trans _ _ _ A B D); auto.",
            "VernacExtend",
            "a57f9982a1bf59931dee022a081877b9ad62993d"
        ],
        [
            "apply l11_16; auto; apply (l8_3 A); Perp; Col.",
            "VernacExtend",
            "8d5b4b96d5a3221973f2bf70779158d32271aef9"
        ],
        [
            "assert_cols; Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "exfalso; assert(~ TS A' B D C); auto; apply l9_9_bis; Side.",
            "VernacExtend",
            "51f496805d0def8e47d5291bbaf61786bf95b42b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_obtuse__acute : forall A B C A', Bet A B A' -> A' <> B -> Obtuse A B C -> Acute A' B C.",
            "VernacStartTheoremProof",
            "b620d2860e364453c40a2d16ce68837628b2008d"
        ],
        [
            "intros A B C A' HBet HA'B Hobtuse.",
            "VernacExtend",
            "6ea9f358899b29eb8053679471527f345550e908"
        ],
        [
            "assert(Hd := obtuse_distincts A B C Hobtuse).",
            "VernacExtend",
            "6182768bc316003f07c0e4d28322928c9dd656fe"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec A B C).",
            "VernacExtend",
            "c5492a1b872689bb9ee4184107bb3c6832671091"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply out__acute.",
            "VernacExtend",
            "bb87c7bd7b39a27d67ea1777f437b30aea7e4d45"
        ],
        [
            "apply (l6_2 _ _ A); Between.",
            "VernacExtend",
            "b35da7b7b1998348a16a24f40b6b61478ca36918"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(Hlta : LtA A B C A B C).",
            "VernacExtend",
            "7c186462319aafcaca18e8e116f76a245f59d6e1"
        ],
        [
            "2: destruct Hlta as [_ HNConga]; apply HNConga; apply conga_refl; auto.",
            "VernacExtend",
            "9a4705ae22f7615bd81be55ee8ff71d3482f6acb"
        ],
        [
            "apply acute_obtuse__lta; auto.",
            "VernacExtend",
            "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
        ],
        [
            "apply out__acute.",
            "VernacExtend",
            "bb87c7bd7b39a27d67ea1777f437b30aea7e4d45"
        ],
        [
            "apply not_bet_out; auto.",
            "VernacExtend",
            "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol1.",
            "VernacExtend",
            "2184024eabdbb8dfdc24467562b53eb9042970b5"
        ],
        [
            "assert(HD := l10_15 A B B C).",
            "VernacExtend",
            "1f3ce527e1a8cdc07f5b62c0df26c93fc1d65d04"
        ],
        [
            "destruct HD as [D []]; Col.",
            "VernacExtend",
            "8a766b551e177a0a5c1628ba2f9b0b80cc91daea"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HNCol2 : ~ Col C B D).",
            "VernacExtend",
            "cb7298f53dfc17addccd748c345eedd0cd361e0c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Hlta : LtA A B C A B C).",
            "VernacExtend",
            "7c186462319aafcaca18e8e116f76a245f59d6e1"
        ],
        [
            "2: destruct Hlta as [_ HNConga]; apply HNConga; apply conga_refl; auto.",
            "VernacExtend",
            "9a4705ae22f7615bd81be55ee8ff71d3482f6acb"
        ],
        [
            "apply obtuse_per__lta; auto.",
            "VernacExtend",
            "46daa89a6faff8909953985521e3f0b16d400da9"
        ],
        [
            "apply (per_col _ _ D); Perp; Col.",
            "VernacExtend",
            "eed9dbb359a63e10442bcf21144c95018b15ac5e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS B A' C D) by (apply (col_one_side _ A); Side; Col).",
            "VernacExtend",
            "17c0af8148f8c68b221a1f9faab48fc9d4b6fec5"
        ],
        [
            "assert(~ Col A B D) by (apply per_not_col; Perp).",
            "VernacExtend",
            "70cd881d523520ad7a54d3060282ec9e97402c9f"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (l8_3 A); Perp; Col.",
            "VernacExtend",
            "3bf52518b1890fe0ff79a0e821ef2c4ec673b5ef"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; try (apply conga_refl); auto.",
            "VernacExtend",
            "ab0dad027585578435cc32403c954b344c812a3d"
        ],
        [
            "apply os2__inangle; Side.",
            "VernacExtend",
            "905a7dce2207cf8323f6b9bd3f53a4c62d07ede5"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply (one_side_not_col123 _ _ _ C); Side.",
            "VernacExtend",
            "4fb4250cd16d57c4a85a9ea583e90f37b8e2577c"
        ],
        [
            "exists B; Col; Between.",
            "VernacExtend",
            "b6be114c0f76fa5906c8d53fa9ff79d1699275cf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "apply in_angle_two_sides; Col.",
            "VernacExtend",
            "058860f8f19de69871e77dde1b4ce82fb6ad60a1"
        ],
        [
            "apply l11_24.",
            "VernacExtend",
            "1a34f659d652765568950a0aad463783c56a6bbe"
        ],
        [
            "apply lea_in_angle; try (apply conga_refl); auto.",
            "VernacExtend",
            "6bd8d03278af20f590d9666a8dc59c407ed230e6"
        ],
        [
            "apply lta__lea.",
            "VernacExtend",
            "e8363b3959de8067ca3d21fefbf5841cb47f33d8"
        ],
        [
            "apply obtuse_per__lta; Perp.",
            "VernacExtend",
            "e70b546fdf142b097fa11c71657f19fd2a2fe4c1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "apply HNCol2.",
            "VernacExtend",
            "88f7f0c273bc9a55cde201fc5f351b2f2b12af33"
        ],
        [
            "assert (HCop : Coplanar A' B C D) by Cop.",
            "VernacExtend",
            "c80c40c9a84202b157ed3a65561b9546fcb8b04d"
        ],
        [
            "assert(HUn := conga_cop__or_out_ts A' B C D HCop Habs).",
            "VernacExtend",
            "4b39bb03fce299fdff1cbccabf6fb8d342cd12c5"
        ],
        [
            "destruct HUn.",
            "VernacExtend",
            "8e4a4e9ddd33e229ff805e86d3aa3f80f13b29a9"
        ],
        [
            "assert_cols; Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "exfalso; assert(~ TS A' B C D); auto; apply l9_9_bis; Side.",
            "VernacExtend",
            "653802eec00a5f03426f7c0880f0f69f193f667f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle_dec : forall A B C P, InAngle P A B C \\/ ~ InAngle P A B C.",
            "VernacStartTheoremProof",
            "636795f3a812be73b845efa084056624f536d46c"
        ],
        [
            "intros A B C P.",
            "VernacExtend",
            "f871c2e675fa1d59560879ebabe0a9b7e333e50c"
        ],
        [
            "elim(cop_dec A B C P).",
            "VernacExtend",
            "e0e75b7951ab81946471805aaade26c561456561"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HCop.",
            "VernacExtend",
            "72a16c9a6ddc8c5605de296d4d360cd914928b9b"
        ],
        [
            "elim(eq_dec_points A B).",
            "VernacExtend",
            "831fb4dd1e7a608ba80f1702de75d193eeaea711"
        ],
        [
            "intro; subst; right; unfold InAngle; intro; spliter; auto.",
            "VernacExtend",
            "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points C B).",
            "VernacExtend",
            "c7d3e99fad2bb04b0f42d8f8b9c539460dcf0937"
        ],
        [
            "intro; subst; right; unfold InAngle; intro; spliter; auto.",
            "VernacExtend",
            "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points P B).",
            "VernacExtend",
            "fac2d53a8061bc1fd4d216110c958833ac2d8d98"
        ],
        [
            "intro; subst; right; unfold InAngle; intro; spliter; auto.",
            "VernacExtend",
            "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HColB.",
            "VernacExtend",
            "4dda0a76387a2ef06d189ea466a981a5005ca95c"
        ],
        [
            "elim(bet_dec A B C).",
            "VernacExtend",
            "c5492a1b872689bb9ee4184107bb3c6832671091"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HBBet.",
            "VernacExtend",
            "1a4ade2ea55846739003a0eda5b39974c6cbddfe"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HBNBet.",
            "VernacExtend",
            "e8a9df812feaea2809a99259031af3a1f920d9a2"
        ],
        [
            "elim(out_dec B A P).",
            "VernacExtend",
            "76a49146501caec49542557f53fea642fddeb51e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists A; Between.",
            "VernacExtend",
            "8d9d0a97eedfb61c42ee8f151588f50d9313833a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
            "VernacExtend",
            "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
        ],
        [
            "destruct HUn as [|HoutBXP].",
            "VernacExtend",
            "e8a41dd2d783a44baf4f7044a252ef29ba47baad"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "assert(HInter := out2_bet_out A B C X P); auto.",
            "VernacExtend",
            "6ff1bdec2c0a4643ebfea7a3621007d39286fd27"
        ],
        [
            "destruct HInter; auto.",
            "VernacExtend",
            "22b310adfbe034f4c13a0ffda2a2aebf8c9971e3"
        ],
        [
            "apply not_bet_out; auto.",
            "VernacExtend",
            "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNColB.",
            "VernacExtend",
            "187a2286f46afbfdde3fb5b24e8d8ee7ccb58896"
        ],
        [
            "assert(HP' := symmetric_point_construction P B).",
            "VernacExtend",
            "626fc8c4553c961460b1ac773fabd8db2edce941"
        ],
        [
            "destruct HP' as [P'].",
            "VernacExtend",
            "25325204053d23146d468ba72155f3ecb51e155a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "elim(two_sides_dec B P A C).",
            "VernacExtend",
            "8ff521311b2a3904873df27ec03342c39acbaeb1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HUn := two_sides_in_angle A B C P P').",
            "VernacExtend",
            "8ae8b19ad6bba13a96e75b5ed492cc6a1f447a6a"
        ],
        [
            "destruct HUn as [HInAngle|HInAngle]; Between.",
            "VernacExtend",
            "04ad1d242cba77f9c7f2a7124e371c0db755cf9b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct HInAngle as [_ [_ [_ [X [HXBet HUn]]]]].",
            "VernacExtend",
            "a7e93381696d7f0ba5a9482852bde6ef95ba60ab"
        ],
        [
            "destruct HUn as [HXB|HBout].",
            "VernacExtend",
            "e11ac7d69f5dba5a5bb7fcff7faef9c1c29e39aa"
        ],
        [
            "left; repeat split; auto; exists X; split; auto.",
            "VernacExtend",
            "0478bf2cb074d7374efd390462c7963eaed00875"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "destruct Habs as [_ [_ [_ [X' [HX'Bet HUn]]]]].",
            "VernacExtend",
            "86c23a4fe55bb0f9c48e9719c60a41e4c5bbff81"
        ],
        [
            "assert(Col B X' P) by (destruct HUn; subst; assert_cols; Col).",
            "VernacExtend",
            "fae3f613f6005f81ae831bd10ab31a98956654c1"
        ],
        [
            "assert(X = X') by (apply (l6_21 A C B P); Col; ColR).",
            "VernacExtend",
            "6ff1b2540e59f7b5ded604d8b0a20b0ddd923ccd"
        ],
        [
            "subst X'.",
            "VernacExtend",
            "f1f852044d6b97f30d155b18971bf690ec33cde6"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct HUn as [|HBout']; auto.",
            "VernacExtend",
            "14718955893a5d9b4022754e16eb87c98fc02ee6"
        ],
        [
            "assert(Col P B P' /\\ ~ Bet P B P'); spliter; Between.",
            "VernacExtend",
            "b7fc22ba4e27cee53e9c2788f02f6850f9c48693"
        ],
        [
            "apply l6_4_1.",
            "VernacExtend",
            "8b130ebb81e81a30a90ac3e1bb1f678b0d840a4c"
        ],
        [
            "apply (l6_7 _ _ X); auto.",
            "VernacExtend",
            "d9602921c214cc9570fe5880a86f9821d2620db1"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNts.",
            "VernacExtend",
            "4a86e225940261b254b0bc7710a41aa9dad36173"
        ],
        [
            "elim(col_dec B A P).",
            "VernacExtend",
            "a16a1a45d093930e31c7df7f0517ef42ebfe7298"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(out_dec B A P).",
            "VernacExtend",
            "76a49146501caec49542557f53fea642fddeb51e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists A; Between.",
            "VernacExtend",
            "8d9d0a97eedfb61c42ee8f151588f50d9313833a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
            "VernacExtend",
            "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
        ],
        [
            "assert(Col B X P) by (destruct HUn; subst; assert_cols; Col).",
            "VernacExtend",
            "380ce530ba352cbbdd125d6095089e8d6864a170"
        ],
        [
            "assert(X = A) by (apply (l6_21 A C B P); Col; ColR).",
            "VernacExtend",
            "74bb777910223a76cd696fcda7c4c6d95ea12d15"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "destruct HUn; auto.",
            "VernacExtend",
            "939cb2d84254853add52589f41f0994b4a073d66"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(col_dec B C P).",
            "VernacExtend",
            "53d022f71d2387181c26b722b44bc17cca7eb406"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(out_dec B C P).",
            "VernacExtend",
            "1b1884fc08e97c8557249e3f4670e524d09bacd1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists C; Between.",
            "VernacExtend",
            "424ca3ff38ebadb2dd269a1a773d6ee077543bc3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
            "VernacExtend",
            "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
        ],
        [
            "assert(Col B X P) by (destruct HUn; subst; assert_cols; Col).",
            "VernacExtend",
            "380ce530ba352cbbdd125d6095089e8d6864a170"
        ],
        [
            "assert(X = C) by (apply (l6_21 A C B P); Col; ColR).",
            "VernacExtend",
            "d06369a4133c53630f91c6122249f64f16e0013a"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "destruct HUn; auto.",
            "VernacExtend",
            "939cb2d84254853add52589f41f0994b4a073d66"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNts.",
            "VernacExtend",
            "c3c931bc78eb75a4ccb34cc28f05b09dcfe0f2b4"
        ],
        [
            "apply invert_two_sides.",
            "VernacExtend",
            "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
        ],
        [
            "apply in_angle_two_sides; auto.",
            "VernacExtend",
            "7b2822e30f6999c7834f935a87c319f12167fdda"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCop.",
            "VernacExtend",
            "7b0cca5835811c8861708fcd8840821b261e0b06"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNCop; Cop.",
            "VernacExtend",
            "ca08358009427d737acbd8b7a1e8774d8b38eb58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_dec : forall A B C D E F, LeA A B C D E F \\/ ~ LeA A B C D E F.",
            "VernacStartTheoremProof",
            "87305ae8f211324b4496a812c112d4e75465bd5e"
        ],
        [
            "intros A B C D E F.",
            "VernacExtend",
            "2be5b25247fe2581e41ab1f8b0f613798974a319"
        ],
        [
            "elim(eq_dec_points A B).",
            "VernacExtend",
            "831fb4dd1e7a608ba80f1702de75d193eeaea711"
        ],
        [
            "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
            "VernacExtend",
            "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points B C).",
            "VernacExtend",
            "5aa63a265e70f9d0103084098fb9bad3a73caf66"
        ],
        [
            "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
            "VernacExtend",
            "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points D E).",
            "VernacExtend",
            "c6e589cd4c8b37a519930372e313a20a30051f59"
        ],
        [
            "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
            "VernacExtend",
            "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points E F).",
            "VernacExtend",
            "4692d9f43aa0a22ce1a129fcea7da71b011ea884"
        ],
        [
            "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
            "VernacExtend",
            "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(out_dec B A C).",
            "VernacExtend",
            "cf6dd7bb115e8079d981ca4e28170cb12884defd"
        ],
        [
            "intro; left; apply l11_31_1; auto.",
            "VernacExtend",
            "3b5bd0082707bb0d4f43ad8f24dee7061f4bace7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec D E F).",
            "VernacExtend",
            "150133112f709a30558ea4520838baf39aeb8cc5"
        ],
        [
            "intro; left; apply l11_31_2; auto.",
            "VernacExtend",
            "7b0cb4a0eb020b979178d4eb0f79cf1f31ba53ac"
        ],
        [
            "intro HENBet.",
            "VernacExtend",
            "79f92eb8e3c7de65911d9cb75a1f0ce686c2df14"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HENBet.",
            "VernacExtend",
            "a2920761d3f666270ea36d8f62acc6e91985d024"
        ],
        [
            "apply (bet_lea__bet A B C); auto.",
            "VernacExtend",
            "4747c96def2a671ce5f94d60fccfabbd127c96e9"
        ],
        [
            "apply not_out_bet; auto.",
            "VernacExtend",
            "dc55e69b3acf9e72c9dd6fbcc5a5e885132b908d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNColB.",
            "VernacExtend",
            "187a2286f46afbfdde3fb5b24e8d8ee7ccb58896"
        ],
        [
            "elim(col_dec D E F).",
            "VernacExtend",
            "48350e3651e6a0759fea03912060ef6c29e93fd9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec D E F).",
            "VernacExtend",
            "150133112f709a30558ea4520838baf39aeb8cc5"
        ],
        [
            "intro; left; apply l11_31_2; auto.",
            "VernacExtend",
            "7b0cb4a0eb020b979178d4eb0f79cf1f31ba53ac"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNColB.",
            "VernacExtend",
            "66d92c0162704b85a971d6599e302ea7f1704a44"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply (out_lea__out _ _ _ D E F); auto.",
            "VernacExtend",
            "5217173b9b40521e2ec418d6e64e3af4ffe6d2cf"
        ],
        [
            "apply not_bet_out; auto.",
            "VernacExtend",
            "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HP := angle_construction_1 A B C D E F).",
            "VernacExtend",
            "6e20eda99b10054f2a82722ee7873a207c52627c"
        ],
        [
            "destruct HP as [P []]; Col.",
            "VernacExtend",
            "005c7e48c68442e709d25de2c2896e780576cdde"
        ],
        [
            "elim(inangle_dec D E F P).",
            "VernacExtend",
            "29cf849ee86438407f6c0d98204a451b3025af5e"
        ],
        [
            "intro; left; exists P; auto.",
            "VernacExtend",
            "616a872ed8114f6092e55d38d87fe83dcc846f15"
        ],
        [
            "intro HNInAngle.",
            "VernacExtend",
            "ebfa94794faeaf980dba30117bfe35c56da057f8"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNInAngle.",
            "VernacExtend",
            "f913156cc74b7679f7e586e465392b2c0fcea230"
        ],
        [
            "apply lea_in_angle; try (apply conga_sym); Side.",
            "VernacExtend",
            "6bc4dba70fc9c3aebca01edf757f31cc828c19d2"
        ],
        [
            "apply (l11_30 A B C D E F); auto; apply conga_refl; auto.",
            "VernacExtend",
            "693055a927f36cb07510ff7f4dca1900d7a8227d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gea_dec : forall A B C D E F, GeA A B C D E F \\/ ~ GeA A B C D E F.",
            "VernacStartTheoremProof",
            "8319f22edb2aa1f086adbc3e2a5aa42b93f8fd34"
        ],
        [
            "intros A B C D E F.",
            "VernacExtend",
            "2be5b25247fe2581e41ab1f8b0f613798974a319"
        ],
        [
            "unfold GeA.",
            "VernacExtend",
            "1cfb52edf7c6d36453f0e729259fb3d8b12fe9e8"
        ],
        [
            "elim(lea_dec D E F A B C); auto.",
            "VernacExtend",
            "a9178bf1838b6eb039a97fc6496b8e44c9b15cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_dec : forall A B C D E F, LtA A B C D E F \\/ ~ LtA A B C D E F.",
            "VernacStartTheoremProof",
            "c6ee252a4f4bcf89fb51ee3341f6ef03bb8f50e5"
        ],
        [
            "intros A B C D E F.",
            "VernacExtend",
            "2be5b25247fe2581e41ab1f8b0f613798974a319"
        ],
        [
            "elim(conga_dec A B C D E F).",
            "VernacExtend",
            "42a28bff8977c66a43f73e6f0738c2c93fc385c8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(lea_dec A B C D E F).",
            "VernacExtend",
            "8153c011dbeb6cc4b71e8ce3199dc6d8bb51ef66"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gta_dec : forall A B C D E F, GtA A B C D E F \\/ ~ GtA A B C D E F.",
            "VernacStartTheoremProof",
            "142faf436d950f639dcbb1e6786d16d1788b4260"
        ],
        [
            "intros A B C D E F.",
            "VernacExtend",
            "2be5b25247fe2581e41ab1f8b0f613798974a319"
        ],
        [
            "unfold GtA.",
            "VernacExtend",
            "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
        ],
        [
            "elim(lta_dec D E F A B C); auto.",
            "VernacExtend",
            "6c6e27cbd342559560ffb108707ad66d3de644bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_total : forall A B C D E F, A <> B -> B <> C -> D <> E -> E <> F -> LeA A B C D E F \\/ LeA D E F A B C.",
            "VernacStartTheoremProof",
            "f79b9fefcddd46d3c7e95c3110acb1d82c5a57a5"
        ],
        [
            "intros A B C D E F HAB HBC HDE HEF.",
            "VernacExtend",
            "83e18f0c7eb37868f379228b7b3cbdfac6391a5e"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(out_dec B A C).",
            "VernacExtend",
            "cf6dd7bb115e8079d981ca4e28170cb12884defd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; left; apply l11_31_1; auto.",
            "VernacExtend",
            "3b5bd0082707bb0d4f43ad8f24dee7061f4bace7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; right; apply l11_31_2; auto; apply not_out_bet; auto.",
            "VernacExtend",
            "485ae2ecbc5109e93c8d75e57662ff04f98f85ec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(col_dec D E F).",
            "VernacExtend",
            "48350e3651e6a0759fea03912060ef6c29e93fd9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(out_dec E D F).",
            "VernacExtend",
            "c6acbb089467778de40c537f8b4567a42c7f61fb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; right; apply l11_31_1; auto.",
            "VernacExtend",
            "4a6f3862a58fcb9891c712217716ac38606e2a35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; left; apply l11_31_2; auto; apply not_out_bet; auto.",
            "VernacExtend",
            "97c77a9d4ad5df8355ccbcf0f29bc937f12afb0d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(lea_dec A B C D E F).",
            "VernacExtend",
            "8153c011dbeb6cc4b71e8ce3199dc6d8bb51ef66"
        ],
        [
            "intro; left; auto.",
            "VernacExtend",
            "3dcec4f9db613e506fdb314cd85a8e2337857b9b"
        ],
        [
            "intro HNlea.",
            "VernacExtend",
            "908a59dab214b12d0dfd7e1867e49e15569e45c9"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert(HP := angle_construction_1 D E F A B C).",
            "VernacExtend",
            "37c3bf1f61ace69869513ed416e8e7ea8a57c898"
        ],
        [
            "destruct HP as [P []]; Col.",
            "VernacExtend",
            "005c7e48c68442e709d25de2c2896e780576cdde"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply os2__inangle; Side.",
            "VernacExtend",
            "905a7dce2207cf8323f6b9bd3f53a4c62d07ede5"
        ],
        [
            "apply cop__not_two_sides_one_side; Col; Cop.",
            "VernacExtend",
            "8aab42e4b223ac7044f8c8941b87bd2933bb143b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNlea.",
            "VernacExtend",
            "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
        ],
        [
            "apply conga__lea.",
            "VernacExtend",
            "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
        ],
        [
            "apply (out_conga A B P D E F); try (apply out_trivial); try (apply conga_sym); auto.",
            "VernacExtend",
            "10bd10254aa4592cf540e434ae63d4e04e331bcf"
        ],
        [
            "apply (col_one_side_out _ A); Col; Side.",
            "VernacExtend",
            "756afeb69951532bf85035889e733fe9fc15a458"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNlea.",
            "VernacExtend",
            "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
        ],
        [
            "apply (l11_30 A B C A B P); try (apply conga_refl); try (apply conga_sym); auto.",
            "VernacExtend",
            "b78acf14c516817bb49dc9f95c7c17837d34ba4c"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; try (apply conga_refl); auto.",
            "VernacExtend",
            "ab0dad027585578435cc32403c954b344c812a3d"
        ],
        [
            "apply os_ts__inangle; Side.",
            "VernacExtend",
            "2847c859d970db6b768f7afdf3b8bc723d885757"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gea_total : forall A B C D E F, A <> B -> B <> C -> D <> E -> E <> F -> GeA A B C D E F \\/ GeA D E F A B C.",
            "VernacStartTheoremProof",
            "34e128a9713c4cb28bbc80136bb90993f4ac5c0c"
        ],
        [
            "intros A B C D E F HAB HBC HDE HEF.",
            "VernacExtend",
            "83e18f0c7eb37868f379228b7b3cbdfac6391a5e"
        ],
        [
            "elim(lea_total A B C D E F); auto.",
            "VernacExtend",
            "8727fec7bef713faf8f8c3da8c00d4c55ca74759"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_lta_conga_gta : forall A B C D E F, A <> B -> C <> B -> D <> E -> F <> E -> LtA A B C D E F \\/ GtA A B C D E F \\/ CongA A B C D E F.",
            "VernacStartTheoremProof",
            "0391cd077a4e58c7d83c19c0e75e3da9deca0c59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:=lea_total A B C D E F).",
            "VernacExtend",
            "589456412afb2598ab23ddec99c26c0d0ebed558"
        ],
        [
            "induction HH; auto.",
            "VernacExtend",
            "0133ce717fcbb01d2261c1c0b7dd5e2a5837b4d6"
        ],
        [
            "induction(conga_dec A B C D E F).",
            "VernacExtend",
            "0949798dd46e819123653c761883188d9d70d5f0"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "induction(conga_dec A B C D E F).",
            "VernacExtend",
            "0949798dd46e819123653c761883188d9d70d5f0"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "unfold GtA.",
            "VernacExtend",
            "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_partition : forall A B C, A <> B -> B <> C -> Acute A B C \\/ Per A B C \\/ Obtuse A B C.",
            "VernacStartTheoremProof",
            "5af887b8cbcb4bdc653b9224f4c5e1704aad3033"
        ],
        [
            "intros A B C HAB HBC.",
            "VernacExtend",
            "9f20a913d4883ab217948cf6fd69eaf73c27d1dc"
        ],
        [
            "assert(Hl := lower_dim_ex).",
            "VernacExtend",
            "4a4da3c2fbc3fd8dceb5096b7034f4bd92e1171c"
        ],
        [
            "destruct Hl as [A' [B' [D']]].",
            "VernacExtend",
            "57d1f4641f58a46deb97781f922974b965aa7a45"
        ],
        [
            "assert(~ Col A' B' D') by (unfold Col; auto).",
            "VernacExtend",
            "a804b0c8ff58803e20085cc9f882282f564c4602"
        ],
        [
            "assert(HC' := l10_15 A' B' B' D').",
            "VernacExtend",
            "7c1e3ff636a66eaf8066da1a8e5959caa1a53cb0"
        ],
        [
            "destruct HC' as [C' [HC'Right _]]; Col.",
            "VernacExtend",
            "0531eefea96355801138f08e5ea15addef7f7065"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (or_lta_conga_gta A B C A' B' C') as [|[|]]; auto.",
            "VernacExtend",
            "9b5ce578fdea4fd17a9f653bc0cbbb86b6f97780"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists A', B', C'.",
            "VernacExtend",
            "35193a167a70a5a27cadfefcd7ef4dece1967187"
        ],
        [
            "repeat (split; Perp).",
            "VernacExtend",
            "3637a5cb316e1227272f0ecd7df366b625db4fbd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "exists A', B', C'.",
            "VernacExtend",
            "35193a167a70a5a27cadfefcd7ef4dece1967187"
        ],
        [
            "repeat (split; Perp).",
            "VernacExtend",
            "3637a5cb316e1227272f0ecd7df366b625db4fbd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply (l11_17 A' B' C'); try (apply conga_sym); Perp.",
            "VernacExtend",
            "c304bf1ee33a495d1ae5a5c2a64633988f53ed60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_chara : forall A B C A', Bet A B A' -> B <> A' -> (Acute A B C <-> LtA A B C A' B C).",
            "VernacStartTheoremProof",
            "07f3ce590842180cd01e8959221d7cc0c2c33e09"
        ],
        [
            "intros A B C A' HBet HBA'.",
            "VernacExtend",
            "3f16ee27c430a3775fa182e9e0259be9ddced845"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hacute.",
            "VernacExtend",
            "4d7f48d860c76bc5138f3da0476eee8279f2f65e"
        ],
        [
            "assert(Hdiff := acute_distincts A B C Hacute).",
            "VernacExtend",
            "ede3ec7155de0fdcdedd5599c65dcaef143e0627"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply acute_obtuse__lta; auto.",
            "VernacExtend",
            "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
        ],
        [
            "apply (acute_bet__obtuse A); auto.",
            "VernacExtend",
            "7cff108bc430738f81a729d47558c1f315fe08b9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hlta.",
            "VernacExtend",
            "0d1e432b59e37777ab2b54fc232d0c57743306fe"
        ],
        [
            "assert (Hd := Hlta).",
            "VernacExtend",
            "801b295582097ef495f153d38110dc833ca99fca"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "elim(angle_partition A B C); auto.",
            "VernacExtend",
            "0a0c942b9de90a15db492df7ec39788947e5fe0d"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
            "VernacExtend",
            "27bd759592a539e15b3bb5e33ba823d5148110f3"
        ],
        [
            "destruct Habs.",
            "VernacExtend",
            "ddcc54f9873b0b2cc265402b9b7d3d90e61f7682"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (conga_preserves_lta A B C A' B C); try (apply conga_refl); auto.",
            "VernacExtend",
            "0187e0ad84d9fb634fea2362c2d12fde91f932b5"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply l11_18_1; Perp.",
            "VernacExtend",
            "47a1521b2b7fbab760f8cc5eb47f2ed88003a2e5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (lta_trans _ _ _ A' B C); auto.",
            "VernacExtend",
            "c506b00696968e364d4a65204e1f24db65ea1203"
        ],
        [
            "apply acute_obtuse__lta; auto.",
            "VernacExtend",
            "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
        ],
        [
            "apply (bet_obtuse__acute A); auto.",
            "VernacExtend",
            "03ab663afe933cbb30bcf3dfd6a6b502d832b61b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_chara : forall A B C A', Bet A B A' -> B <> A' -> (Obtuse A B C <-> LtA A' B C A B C).",
            "VernacStartTheoremProof",
            "cf0b8637f03470ac4a0cffc25d30359a6c8b6a07"
        ],
        [
            "intros A B C A' HBet HBA'.",
            "VernacExtend",
            "3f16ee27c430a3775fa182e9e0259be9ddced845"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hobtuse.",
            "VernacExtend",
            "4cd5eea8e62df1271464a6c2957d6ff965042f7b"
        ],
        [
            "assert(Hdiff := obtuse_distincts A B C Hobtuse).",
            "VernacExtend",
            "00aedf5ee87a41140f0149f762332d1b65efc74c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply acute_obtuse__lta; auto.",
            "VernacExtend",
            "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
        ],
        [
            "apply (bet_obtuse__acute A); auto.",
            "VernacExtend",
            "03ab663afe933cbb30bcf3dfd6a6b502d832b61b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro Hlta.",
            "VernacExtend",
            "0d1e432b59e37777ab2b54fc232d0c57743306fe"
        ],
        [
            "assert (Hd := Hlta).",
            "VernacExtend",
            "801b295582097ef495f153d38110dc833ca99fca"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "elim(angle_partition A B C); auto.",
            "VernacExtend",
            "0a0c942b9de90a15db492df7ec39788947e5fe0d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
            "VernacExtend",
            "27bd759592a539e15b3bb5e33ba823d5148110f3"
        ],
        [
            "apply (lta_trans _ _ _ A' B C); auto.",
            "VernacExtend",
            "c506b00696968e364d4a65204e1f24db65ea1203"
        ],
        [
            "apply acute_obtuse__lta; auto.",
            "VernacExtend",
            "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
        ],
        [
            "apply (acute_bet__obtuse A); auto.",
            "VernacExtend",
            "7cff108bc430738f81a729d47558c1f315fe08b9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HUn.",
            "VernacExtend",
            "9f8ea3000dfc5a12345065b57a7622d8dd77f5ea"
        ],
        [
            "destruct HUn; auto.",
            "VernacExtend",
            "939cb2d84254853add52589f41f0994b4a073d66"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
            "VernacExtend",
            "27bd759592a539e15b3bb5e33ba823d5148110f3"
        ],
        [
            "apply (conga_preserves_lta A' B C A B C); try (apply conga_refl); auto.",
            "VernacExtend",
            "22b8665739c8fcc12cb5e72c253107eae1f2d1e1"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply l11_18_1; Between; Perp.",
            "VernacExtend",
            "0392006835c5eb2af01ff2d9126434f2b61376f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga__acute : forall A B C, CongA A B C A C B -> Acute A B C.",
            "VernacStartTheoremProof",
            "7b6e0a0a5e886fc8464b214642b5dd234e94860e"
        ],
        [
            "intros A B C HCongA.",
            "VernacExtend",
            "112dd407421e535ff28cc835d6da97328d98c8bb"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply out__acute, not_bet_out; trivial.",
            "VernacExtend",
            "25a7cec8764d28855bd53727ca36c48894242191"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (B = C).",
            "VernacExtend",
            "2c6ab780f6ca318d1533c2a6e574798c6cc0254e"
        ],
        [
            "apply conga_distinct in HCongA; spliter; auto.",
            "VernacExtend",
            "fd8bb0ca6b3254341bf914f4359cbebb06634bad"
        ],
        [
            "apply between_equality with A; apply between_symmetry; trivial.",
            "VernacExtend",
            "eedce521686ad8611856cfc28ed311951fe56a52"
        ],
        [
            "apply (bet_conga__bet A B C); assumption.",
            "VernacExtend",
            "cee5931c2f8a542dd17fdb254e573098bab54d73"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (segment_construction C B C B) as [C' []].",
            "VernacExtend",
            "2dbebb88f87a1a60d7125c8e716a95ab02aa77f7"
        ],
        [
            "apply conga_distinct in HCongA; spliter.",
            "VernacExtend",
            "63e58f7770eb6947686bdcdeaecb3508ce5d5afd"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply acute_sym, acute_chara with C'; auto.",
            "VernacExtend",
            "48b4e9e5f4b2deee79903dfaddff08530d522e02"
        ],
        [
            "destruct (l11_41 B C A C'); Col.",
            "VernacExtend",
            "95d377bd6d14be4eaa5f2828d31246866f7a0816"
        ],
        [
            "apply (conga_preserves_lta B C A A B C'); trivial.",
            "VernacExtend",
            "7ea782892677959f785f5f6355f10c7b19dd8a28"
        ],
        [
            "apply conga_comm, conga_sym; assumption.",
            "VernacExtend",
            "3c7d6c85835cf69c8566a06c0e382e8c06905597"
        ],
        [
            "apply conga_pseudo_refl; auto.",
            "VernacExtend",
            "df9b6043ebd1492b46b4fc504cdbe598621cd514"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong__acute : forall A B C, A <> B -> B <> C -> Cong A B A C -> Acute A B C.",
            "VernacStartTheoremProof",
            "6a0bd8e639ce8ee10b6ebd65f51aaeb1dccf0a01"
        ],
        [
            "intros A B C HAB HBC HCong.",
            "VernacExtend",
            "2f37e39c3752c20bf58d82c31b74a4a11f57ce81"
        ],
        [
            "apply conga__acute.",
            "VernacExtend",
            "fdfbf81e35baef20e6c7d6fd46a10f87bdae6d46"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (l11_51 A B C A C B) as [_ []]; Cong.",
            "VernacExtend",
            "cc765431456cf19570af1b4955780de2f6ec7aae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nlta : forall A B C, ~ LtA A B C A B C.",
            "VernacStartTheoremProof",
            "b584fc58ab40d4c20017bbc0b1eba17ae21e9bf0"
        ],
        [
            "intros A B C.",
            "VernacExtend",
            "87ee5c5453dfc11a510bf2040be3c37a23963b5f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (not_and_lta A B C A B C).",
            "VernacExtend",
            "f8e357fa8f49fbab0c8b3beac8e2da1e801ae4b1"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea__nlta : forall A B C D E F, LeA A B C D E F -> ~ LtA D E F A B C.",
            "VernacStartTheoremProof",
            "a3ff67468537c39e906d49ea53c9734cba51d707"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro Hlta.",
            "VernacExtend",
            "0d1e432b59e37777ab2b54fc232d0c57743306fe"
        ],
        [
            "destruct Hlta as [Hlea HNConga].",
            "VernacExtend",
            "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply lea_asym; assumption.",
            "VernacExtend",
            "bb98cffe9d21ebd9cd959f7cdf7f851aa02ad49f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta__nlea : forall A B C D E F, LtA A B C D E F -> ~ LeA D E F A B C.",
            "VernacStartTheoremProof",
            "880de17426c1ff0d7d66f24195d3aaf01309ea4b"
        ],
        [
            "intros A B C D E F Hlta.",
            "VernacExtend",
            "c92b94871630be1ebb0ded9cd8b664c65340c525"
        ],
        [
            "destruct Hlta as [Hlea HNConga].",
            "VernacExtend",
            "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply lea_asym; assumption.",
            "VernacExtend",
            "bb98cffe9d21ebd9cd959f7cdf7f851aa02ad49f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nlta__lea : forall A B C D E F, ~ LtA A B C D E F -> A <> B -> B <> C -> D <> E -> E <> F -> LeA D E F A B C.",
            "VernacStartTheoremProof",
            "4a81cf8157c8b0569dbf7c405c47fb3f04f2025a"
        ],
        [
            "intros A B C D E F HNlta.",
            "VernacExtend",
            "a26c1376c0d8ee3c3e72f59f8f7bf1b5db5c26bd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim(conga_dec D E F A B C).",
            "VernacExtend",
            "270746bb4c8a1d8b435baa22fb3e531ff4e1f645"
        ],
        [
            "apply conga__lea.",
            "VernacExtend",
            "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(lea_total D E F A B C); auto.",
            "VernacExtend",
            "6fb21d9e3aa5e67867afdb97f2a8b34d051edcd4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply HNlta.",
            "VernacExtend",
            "1aa73c0e169baa46b3ea245a2652b3cc1b2f1c4f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply not_conga_sym; assumption.",
            "VernacExtend",
            "4744f84f38a591280b4955ae320c77a32fc25654"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nlea__lta : forall A B C D E F, ~ LeA A B C D E F -> A <> B -> B <> C -> D <> E -> E <> F -> LtA D E F A B C.",
            "VernacStartTheoremProof",
            "c00b6772c132c5e60cde78c3782e9bf974eb11d3"
        ],
        [
            "intros A B C D E F HNlea.",
            "VernacExtend",
            "06f9637bca2fe598447da3fe1bd0e36b52c3d5a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim(lea_total D E F A B C); auto.",
            "VernacExtend",
            "6fb21d9e3aa5e67867afdb97f2a8b34d051edcd4"
        ],
        [
            "intro; exfalso; auto.",
            "VernacExtend",
            "374c4df7300540f036474a3d5bfe4d58a7f24d51"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNlea.",
            "VernacExtend",
            "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
        ],
        [
            "apply conga__lea.",
            "VernacExtend",
            "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
        ],
        [
            "apply conga_sym; assumption.",
            "VernacExtend",
            "2b25f222f2bd1654890783ce24b11c9ff220586f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_strict_inequality : forall A B C D, Bet A B D -> Cong B C B D -> ~ Bet A B C -> Lt A C A D.",
            "VernacStartTheoremProof",
            "5b331f255cbcbb0e200f88d4ce3c02eae43b1532"
        ],
        [
            "intros A B C D HBet HCong HNBet.",
            "VernacExtend",
            "4e309bdfe0b72be72a41bd948da39ffcc4c89d0b"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(A <> B) by (intro; Between).",
            "VernacExtend",
            "c4f56896ba31c727cf32d5a21382afddd6a2c929"
        ],
        [
            "assert(B <> C) by (intro; Between).",
            "VernacExtend",
            "c74448f3cf72a3c0cb4fd34763f5844c3792676f"
        ],
        [
            "apply not_bet_out in HNBet; Col.",
            "VernacExtend",
            "5a8410e8247d6048ebdd46b8c74fbb11994bd7ee"
        ],
        [
            "destruct HNBet as [_ [_ [HBAC|HBCA]]].",
            "VernacExtend",
            "8b29c509e35e31f463b2e765f548253ebd868520"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (le_transitivity _ _ B C).",
            "VernacExtend",
            "7b22f5d62b58d97d5328e923a881888e862c08f3"
        ],
        [
            "apply le_comm; exists A; split; Between; Cong.",
            "VernacExtend",
            "1c136456702820bd6b77a9bda7415302ff2b3460"
        ],
        [
            "apply (l5_6 D B D A); Cong; exists B; split; Between; Cong.",
            "VernacExtend",
            "9f69c25ece17e61fa54029f245be68c2a2ff8554"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(A = B); auto.",
            "VernacExtend",
            "f39b3930f44ba4f0fe359844270f96acf0367248"
        ],
        [
            "apply between_symmetry in HBAC.",
            "VernacExtend",
            "d76d4986659a11c2721af011b60dae5602d82844"
        ],
        [
            "apply (l7_17 C D); split; Cong.",
            "VernacExtend",
            "abe979f4029a1edcae3e2fed63959ea07d27a30c"
        ],
        [
            "apply (outer_transitivity_between _ _ B); auto.",
            "VernacExtend",
            "83582ee2d9071784c70f0a950f77271ee1696ad7"
        ],
        [
            "apply (outer_transitivity_between2 _ A); auto.",
            "VernacExtend",
            "1c88eccb88c7e3e016a42caa9043c2bae1f8d8e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert(Bet A C D) by (apply (between_exchange4 _ _ B); Between).",
            "VernacExtend",
            "8c8836046467200711e67f0da6e82063ec57d59b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists C; split; Cong.",
            "VernacExtend",
            "16f79696ee0c065b5f2d2d00b85d8ed77b773b76"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(C = D) by (apply (between_cong A); auto).",
            "VernacExtend",
            "e2c9a868aca962860621c4190c466607fdd504fc"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert(B = C); auto.",
            "VernacExtend",
            "a6d5e043b1a388d87fd4ac0f8147dd1b12bd628a"
        ],
        [
            "apply (between_equality _ _ A); Between.",
            "VernacExtend",
            "cdb125bddba4d5d784c69e9b5d57c3c6ca64d778"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol.",
            "VernacExtend",
            "d2d5a30c7ebcd9ad8011f651d9082aa73266ec1d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(A <> D) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "4dda96a161c623d57634014f0b7d9318360014b0"
        ],
        [
            "assert(~ Col A C D) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "e5bef4af0c49a6fa1819a4adf1ce658e460da547"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply between_symmetry in HBet.",
            "VernacExtend",
            "5b03a2ea1965def70022c5dde5c9485368455916"
        ],
        [
            "apply l11_44_2; Col.",
            "VernacExtend",
            "4bc1a5c161eb2331e2f239ac1252f95e73646008"
        ],
        [
            "assert(CongA C D A D C B).",
            "VernacExtend",
            "4bbc20a87248b4d87eebbf2ad6efada07a4aef4a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (out_conga C D B D C B); try (apply out_trivial); auto.",
            "VernacExtend",
            "8c55ea6f00527416174f96feaecae8735bde6ab7"
        ],
        [
            "2: apply bet_out; auto.",
            "VernacExtend",
            "3c19140a261442e84246e0c9296141ddc957745f"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply l11_44_1; Cong.",
            "VernacExtend",
            "0c4c1d83041c15215b9a97a85b5d5eb2915dc760"
        ],
        [
            "intro; apply HNCol; ColR.",
            "VernacExtend",
            "80b045be857eff3fb5b48d773ec57291fa069e50"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "repeat (split; auto).",
            "VernacExtend",
            "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "right; apply out_trivial; auto.",
            "VernacExtend",
            "d968bada418d0a8639011179c4c37b4609d1c30d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Habs := conga_cop__or_out_ts D C A B).",
            "VernacExtend",
            "fecab36a0a7408845c8226e6f8f1de6d53fcbf27"
        ],
        [
            "destruct Habs as [Hout|Hts].",
            "VernacExtend",
            "993d4bcae6260ac0bd15243c6ca7819c504873f0"
        ],
        [
            "exists D; left; split; Col.",
            "VernacExtend",
            "730eba5d4f3293212ae93d6c576daa6d1d0b726b"
        ],
        [
            "apply (conga_trans _ _ _ C D A); auto; apply conga_sym; apply conga_comm; auto.",
            "VernacExtend",
            "5f26fde99863f1b5e0593665e90de0a790ede3c1"
        ],
        [
            "apply HNCol; Col.",
            "VernacExtend",
            "4c73f6f13aa5a73cc3ced7b4b6c79977506ac42b"
        ],
        [
            "assert(~ TS D C A B); auto.",
            "VernacExtend",
            "84dbed1b81e7eb15dd06c0238b714a906961d137"
        ],
        [
            "apply l9_9_bis.",
            "VernacExtend",
            "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
        ],
        [
            "apply out_one_side; Col.",
            "VernacExtend",
            "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
        ],
        [
            "apply l6_6; apply bet_out; auto.",
            "VernacExtend",
            "8dde5011bd171fddb3180989fd5a99ea20b5a65a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_inequality : forall A B C D, Bet A B D -> Cong B C B D -> Le A C A D.",
            "VernacStartTheoremProof",
            "7c15e81c80e3f51f18c65525fe011f398fe900c9"
        ],
        [
            "intros A B C D HCong HBet.",
            "VernacExtend",
            "a990190e88749fd42443e0371b69bb853aec36dd"
        ],
        [
            "elim(bet_dec A B C).",
            "VernacExtend",
            "c5492a1b872689bb9ee4184107bb3c6832671091"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points A B).",
            "VernacExtend",
            "831fb4dd1e7a608ba80f1702de75d193eeaea711"
        ],
        [
            "intro; subst; Le.",
            "VernacExtend",
            "aa035b5a93cda8617d2f3c5a23cc5713d336bdb3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(C = D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "apply (construction_uniqueness A B B D); Cong.",
            "VernacExtend",
            "68428d07399663dbe873ab9b4746fab864f87cea"
        ],
        [
            "subst; Le.",
            "VernacExtend",
            "816a913d048b19339ef94ecf5a016cf80e459a2d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Hlt := triangle_strict_inequality A B C D).",
            "VernacExtend",
            "3c9bb6e116fbc881e40a8968634e4f7f72b86f2d"
        ],
        [
            "destruct Hlt; auto.",
            "VernacExtend",
            "4c918fedfa3e831fdb12da288e165877291ec238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_strict_inequality_2 : forall A B C A' B' C', Bet A' B' C' -> Cong A B A' B' -> Cong B C B' C' -> ~ Bet A B C -> Lt A C A' C'.",
            "VernacStartTheoremProof",
            "562c4d1fb4a27827787007e13363af4107f20619"
        ],
        [
            "intros A B C A' B' C' HBet HCongA HCongB HNBet.",
            "VernacExtend",
            "3a2ab55b43a5c642058453f339e7554d62cfd82e"
        ],
        [
            "destruct (segment_construction A B B C) as [D [HBetD HCongD]].",
            "VernacExtend",
            "68980c56b4aeb58f5da3bbaaef7e5ec2a4b1300f"
        ],
        [
            "apply (cong2_lt__lt A C A D); Cong.",
            "VernacExtend",
            "50a7f48a9f2017207d69e14cd34671cd40870ec1"
        ],
        [
            "apply (triangle_strict_inequality _ B); Cong.",
            "VernacExtend",
            "5a9965bd9e0f3c87f30efe6baaff79233e1d5f3b"
        ],
        [
            "apply (l2_11 _ B _ _ B'); Cong.",
            "VernacExtend",
            "60d13f911547651daeed9de8737ce77786054146"
        ],
        [
            "apply cong_transitivity with B C; trivial.",
            "VernacExtend",
            "05072dd6ab0e399e40dce956fdfc4d0ea5e83a6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_inequality_2 : forall A B C A' B' C', Bet A' B' C' -> Cong A B A' B' -> Cong B C B' C' -> Le A C A' C'.",
            "VernacStartTheoremProof",
            "83bd09af83caa55fa1a5edcab94dbffd143a01ad"
        ],
        [
            "intros A B C A' B' C' HBet HCongA HCongB.",
            "VernacExtend",
            "812a88a009ae2219cee51b021c9a69ff6f801bb2"
        ],
        [
            "destruct (segment_construction A B B C) as [D [HBetD HCongD]].",
            "VernacExtend",
            "68980c56b4aeb58f5da3bbaaef7e5ec2a4b1300f"
        ],
        [
            "apply (l5_6 A C A D); Cong.",
            "VernacExtend",
            "2a4df18375f420da51f06d804776970c4a067a93"
        ],
        [
            "apply (triangle_inequality _ B); Cong.",
            "VernacExtend",
            "ac512cdd96b1ee575eba4127ec04077b7c54f12f"
        ],
        [
            "apply (l2_11 _ B _ _ B'); Cong.",
            "VernacExtend",
            "60d13f911547651daeed9de8737ce77786054146"
        ],
        [
            "apply cong_transitivity with B C; trivial.",
            "VernacExtend",
            "05072dd6ab0e399e40dce956fdfc4d0ea5e83a6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_strict_reverse_inequality : forall A B C D, Out A B D -> Cong A C A D -> ~ Out A B C -> Lt B D B C.",
            "VernacStartTheoremProof",
            "eb1dd2e57982d3fdf37e113cf399749f50c846d9"
        ],
        [
            "intros A B C D HABD HCong HNout.",
            "VernacExtend",
            "6b4fdb7a92365adadfef08309064768a16c6313e"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply not_out_bet in HNout; Col.",
            "VernacExtend",
            "4b2af9554d410fd7c9da81b52bdadb5180ab9de6"
        ],
        [
            "assert(Bet D A C) by (apply (l6_2 B); auto).",
            "VernacExtend",
            "0aaf6184f546140e6a39624c40292acfa52bd169"
        ],
        [
            "assert(C <> D) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "fddca58f2140eaa47caded2caf78a263b6fd3f38"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "2: intro; assert(A = B); auto; apply (l7_17 D C); split; Cong; apply l7_20_bis; auto; ColR.",
            "VernacExtend",
            "5b09d35c7cc16139424985b284a4f9a4251d3814"
        ],
        [
            "destruct HABD as [_ [_ [HABD|HADB]]].",
            "VernacExtend",
            "9ef9f0a9bed93b5cae6ea30a92fab403338ad30c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (le_transitivity _ _ A D).",
            "VernacExtend",
            "f326f3244164c928b70bb69cd43c192df7f68ba3"
        ],
        [
            "apply le_comm; exists B; split; Between; Cong.",
            "VernacExtend",
            "926250360293a952792d0784b4ebda498066eefb"
        ],
        [
            "apply (l5_6 C A C B); Cong.",
            "VernacExtend",
            "a0bf3f237aeb99c667417e79c2abfd5dc9f6e576"
        ],
        [
            "exists A; split; Between; Cong.",
            "VernacExtend",
            "6d9a6867c59c632b4406bb8a32e2a2f91385696e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split; Cong.",
            "VernacExtend",
            "85071cd05891ec2f57d45949ae6b4f5f4266f27e"
        ],
        [
            "apply (outer_transitivity_between _ _ A); Between.",
            "VernacExtend",
            "9a22eec62fa54a4b61cd5a340738ec35af6cbca6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol.",
            "VernacExtend",
            "d2d5a30c7ebcd9ad8011f651d9082aa73266ec1d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "elim(eq_dec_points B D).",
            "VernacExtend",
            "38e9254fdecd6b13e7679532021901349e7784f4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "split; Le.",
            "VernacExtend",
            "9e7957392f4ee59e6a826cdb295756cd16f8b1b7"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HNCol2 : ~ Col B C D) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "2048f32893e35866869bbf634fbad424b79a4480"
        ],
        [
            "assert(HNCol3 : ~ Col A C D) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "7a4936a03c7fb4aabae36667fb28519887f89c6b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_44_2; Col.",
            "VernacExtend",
            "4bc1a5c161eb2331e2f239ac1252f95e73646008"
        ],
        [
            "assert(CongA A C D A D C) by (apply l11_44_1; Cong; Col).",
            "VernacExtend",
            "1dcfa807a6069376d5e0329877bc4d74ebf750ba"
        ],
        [
            "destruct HABD as [_ [_ [HABD|HADB]]].",
            "VernacExtend",
            "9ef9f0a9bed93b5cae6ea30a92fab403338ad30c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply between_symmetry in HABD.",
            "VernacExtend",
            "f724b7d743911d989eaece68894128a64bae5878"
        ],
        [
            "apply (conga_preserves_lta D C B D C A).",
            "VernacExtend",
            "fb81658cced79022ec1d40282de5b517d9a739c0"
        ],
        [
            "apply conga_pseudo_refl; auto.",
            "VernacExtend",
            "df9b6043ebd1492b46b4fc504cdbe598621cd514"
        ],
        [
            "apply (out_conga D C A A D C); try (apply out_trivial); try (apply conga_left_comm); auto; apply l6_6; apply bet_out; auto.",
            "VernacExtend",
            "573e4f60a7610d0acbda4a5a6fd6d6d7dedb8123"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; try (apply conga_refl); auto.",
            "VernacExtend",
            "ab0dad027585578435cc32403c954b344c812a3d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "right; finish.",
            "VernacExtend",
            "fe1bdd8c445ed810e3aed308cc643357714608eb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(~ TS D C B A).",
            "VernacExtend",
            "7074c7b5d60dd53ba19ac6e3d8f73299c957cff0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_9_bis.",
            "VernacExtend",
            "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
        ],
        [
            "apply out_one_side; Col.",
            "VernacExtend",
            "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
        ],
        [
            "apply bet_out; auto.",
            "VernacExtend",
            "76a9f58df0a142584f28da339552287cd33d82a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Habs := conga_cop__or_out_ts D C B A).",
            "VernacExtend",
            "b0d1637e2e7032a3f65c4ecae4af1941b45fb85a"
        ],
        [
            "destruct Habs as [Hout|Hts]; auto.",
            "VernacExtend",
            "2bd92e449377f0cda129074e00ed4f832c108ca5"
        ],
        [
            "exists D; left; split; Col.",
            "VernacExtend",
            "730eba5d4f3293212ae93d6c576daa6d1d0b726b"
        ],
        [
            "apply HNCol; Col.",
            "VernacExtend",
            "4c73f6f13aa5a73cc3ced7b4b6c79977506ac42b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert(HE := symmetric_point_construction B C).",
            "VernacExtend",
            "c55cffdd1fcbecd4bb57383b64ca7b635df1b913"
        ],
        [
            "destruct HE as [E []].",
            "VernacExtend",
            "5d38b535a7cb685a81012ee0f1731f4b205ce3f0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (bet2_lta__lta A _ _ E); Between.",
            "VernacExtend",
            "6410338a7109f22a80c7a53b5edd4a3f54f47af1"
        ],
        [
            "assert (OS D C A E).",
            "VernacExtend",
            "c835d392dee8dfdb51d10a6dbe532ad3dd0136a7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists D; Col.",
            "VernacExtend",
            "b87c87d33eccededacba7450d83dc651e62674cb"
        ],
        [
            "intro; apply HNCol2; ColR.",
            "VernacExtend",
            "4526bc688a830dbbd9251bc4c7521120c71c2399"
        ],
        [
            "exists C; split; finish.",
            "VernacExtend",
            "7ac48edd716860d22c53784e02a6f5bcd7e57f14"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (conga_preserves_lta A C D E C D); try (apply conga_refl); auto.",
            "VernacExtend",
            "87998589c35f72c2eba75ff212a76a8887c8ca7a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "2: apply conga_refl; auto.",
            "VernacExtend",
            "95eeba3baa048d051f07b5368e0bd340ffccd9bb"
        ],
        [
            "apply os2__inangle; Side.",
            "VernacExtend",
            "905a7dce2207cf8323f6b9bd3f53a4c62d07ede5"
        ],
        [
            "apply (col_one_side _ B); Col.",
            "VernacExtend",
            "793728772ce828a95dc206925c68af27f3be2d8a"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply out_one_side; Col.",
            "VernacExtend",
            "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
        ],
        [
            "apply bet_out; Between.",
            "VernacExtend",
            "a53328ff9618e56bf07e5e99b92030d37b76bae5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Habs := conga_cop__or_out_ts D C A E).",
            "VernacExtend",
            "953afb68bd21fd73650e836136c81fd2846552d2"
        ],
        [
            "destruct Habs as [Hout|Hts]; try (apply conga_comm); Cop.",
            "VernacExtend",
            "ce471f79981d13bdedecbdacc9238a460d97b7c3"
        ],
        [
            "apply HNCol; ColR.",
            "VernacExtend",
            "4d3843a49841e9758fac66d12e304c8d115992d6"
        ],
        [
            "assert(~ TS D C A E); try (apply l9_9_bis); auto.",
            "VernacExtend",
            "21542df8d4fe9ccbd9ed117e81660d0ebfa9ead9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle_reverse_inequality : forall A B C D, Out A B D -> Cong A C A D -> Le B D B C.",
            "VernacStartTheoremProof",
            "073feeba87d7db8d5d15077580bdafa9859db4e1"
        ],
        [
            "intros A B C D HABD HCong.",
            "VernacExtend",
            "06b51e83d6c082a828e3b05ab16f117f50df6391"
        ],
        [
            "elim(out_dec A B C).",
            "VernacExtend",
            "395c46a33edc8102abed3581c5ca9d490a3fdefa"
        ],
        [
            "2: apply triangle_strict_reverse_inequality; auto.",
            "VernacExtend",
            "fc08d7b2810badaebe457283d51295bf4864f41b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(C = D) by (apply (l6_11_uniqueness A A C B); Cong; apply l6_6; auto).",
            "VernacExtend",
            "04a9b0884ea038e49d868d20ec56bbbbe20576ea"
        ],
        [
            "subst; Le.",
            "VernacExtend",
            "816a913d048b19339ef94ecf5a016cf80e459a2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma os3__lta : forall A B C D, OS A B C D -> OS B C A D -> OS A C B D -> LtA B A C B D C.",
            "VernacStartTheoremProof",
            "bf2098efd1aa392624ca162796d8d5f22c09cf86"
        ],
        [
            "intros A B C D HosC HosA HosB.",
            "VernacExtend",
            "e44c492b9ad42b62ff2d77d0e2634e75d8d2b3fb"
        ],
        [
            "assert(HE : InAngle D A B C) by (apply os2__inangle; Side).",
            "VernacExtend",
            "96085156590fd09d1dc0370686946e9fdc2bfb9a"
        ],
        [
            "destruct HE as [_ [_ [_ [E [HEBet HUn]]]]].",
            "VernacExtend",
            "1a6628bd19f229ec18f3dabcc51531b0c6b33a4a"
        ],
        [
            "assert(HNCol : ~ Col A B C) by (apply (one_side_not_col123 _ _ _ D); auto).",
            "VernacExtend",
            "423b4a27c3a43cd00f0b2de70c9e204d7409a74c"
        ],
        [
            "assert_ncols.",
            "VernacExtend",
            "25397c4b0e8909418c476d0819dc9f002d068408"
        ],
        [
            "destruct HUn as [|HBout].",
            "VernacExtend",
            "39e2c4f15564f25067d8fdc29e68fcc0a23ab3e6"
        ],
        [
            "exfalso; subst; Col.",
            "VernacExtend",
            "0316efc4157d45a2144e326f1d0221ffc5b6ba80"
        ],
        [
            "assert(A <> E) by (intro; subst; assert_cols; Col).",
            "VernacExtend",
            "87541a16c64b3f7cf128c3f2be35802660883e40"
        ],
        [
            "assert(C <> E) by (intro; subst; assert_cols; Col).",
            "VernacExtend",
            "819918d674cda8d07407c1ed5af51be1f5144118"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (lta_trans _ _ _ B E C).",
            "VernacExtend",
            "04361c4f0b1e1fb4f30ec0ccfbf3c09cfd286123"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (l11_41 E A B C); auto.",
            "VernacExtend",
            "dc22994a72a59b3cd0cf91768fb281737518fb21"
        ],
        [
            "intro; apply HNCol; ColR.",
            "VernacExtend",
            "80b045be857eff3fb5b48d773ec57291fa069e50"
        ],
        [
            "apply (conga_preserves_lta E A B B E C); try (apply conga_refl); auto.",
            "VernacExtend",
            "ccdf7ddeb1099b62326cfbe6b6912d4678de9613"
        ],
        [
            "apply (out_conga E A B B A E); try (apply out_trivial); try (apply conga_pseudo_refl); auto.",
            "VernacExtend",
            "6994fb5f1037ff97e277a417de321cfe95959d06"
        ],
        [
            "apply bet_out; auto.",
            "VernacExtend",
            "76a9f58df0a142584f28da339552287cd33d82a2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert(Out E D B).",
            "VernacExtend",
            "41ce30da7c94f7c6323ba1d103ffd0eb91697447"
        ],
        [
            "apply (col_one_side_out _ A); Col; apply invert_one_side; apply (col_one_side _ C); Col; Side.",
            "VernacExtend",
            "10df3b173776974771094b66741d06a760bd87ad"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (l11_41 D E C B); auto.",
            "VernacExtend",
            "59f974a628f7a4e9491989c3dbe56193938541d1"
        ],
        [
            "intro; apply HNCol; ColR.",
            "VernacExtend",
            "80b045be857eff3fb5b48d773ec57291fa069e50"
        ],
        [
            "apply out2__bet; auto.",
            "VernacExtend",
            "6423a45b459a2dce8e62ed4a0370b35cc024a5f6"
        ],
        [
            "apply (conga_preserves_lta D E C C D B); try (apply conga_pseudo_refl); auto.",
            "VernacExtend",
            "bfee4a70a897e3b72680530ea625ff4b30d2548e"
        ],
        [
            "apply (out_conga D E C D E C); try (apply out_trivial); try (apply conga_refl); auto.",
            "VernacExtend",
            "15a0a95e35312205842518ba01f18e6a1151fa7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_le__lt : forall A B C D, Bet A D B -> A <> D -> D <> B -> Le A C B C -> Lt D C B C.",
            "VernacStartTheoremProof",
            "655f01cd2bbf7ce6e6aef4a6e87dacf8cef1c28d"
        ],
        [
            "intros A B C D HBet HAD HBD Hle.",
            "VernacExtend",
            "6b244b734ef161904015fd1fe315b999d2ee1442"
        ],
        [
            "assert(HAB : B <> A) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "d4f82346f64f9ca0dce18fd6a868f9a2ad5e93da"
        ],
        [
            "apply lt_comm.",
            "VernacExtend",
            "05636d126ed795799e01d08cb495b7db182d6198"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec C D B).",
            "VernacExtend",
            "1bd464a49442129d2a17ac334a5af0c3001e9c99"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists D; Cong.",
            "VernacExtend",
            "b146872e0e484457c4da87fd0c5cc79e0c9b0e5e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HBD.",
            "VernacExtend",
            "1ea514dc7a4a5f223376411e2ec2f7b23d5f65a0"
        ],
        [
            "apply (between_cong C); auto.",
            "VernacExtend",
            "7188603c300616d89db6892a6fc91cb4dec59a26"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNBet.",
            "VernacExtend",
            "41c69df9d629ab5d15019807e428e889d1fbb6ab"
        ],
        [
            "apply not_bet_out in HNBet; try ColR.",
            "VernacExtend",
            "58dff0a393b52a7e9c9a5872f51324ed1bac7f97"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Bet C D A) by (apply (l6_2 B); try (apply l6_6); Between).",
            "VernacExtend",
            "c3a645cacdbb1c51d1fc161c14c6d2f172781a21"
        ],
        [
            "assert(A <> C) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "79ea47fe9f7e8e4a1406acd32ae28b60aee157d0"
        ],
        [
            "assert(Hout : Out A C B) by (apply (l6_7 _ _ D); [apply l6_6|]; apply bet_out; Between).",
            "VernacExtend",
            "1453de3bf2a522b5f75beb755cf90cdcd8902762"
        ],
        [
            "assert(~ Bet A B C).",
            "VernacExtend",
            "a02b8f42333ac57b23af5a7375b2808c068ce2e6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HAB.",
            "VernacExtend",
            "dfefecb2bffb160f6e58586154a2e53ee3c785bb"
        ],
        [
            "apply (between_cong C); Between.",
            "VernacExtend",
            "cc84c5754bd234e2a600e3f6893790c5ea51be21"
        ],
        [
            "apply le_anti_symmetry; Le.",
            "VernacExtend",
            "67e23816e73a34cf77a704a71ce27b645051fef9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hout as [_ [_ [HACB|]]].",
            "VernacExtend",
            "a787d4a3146c4bf5d480f975726e5b4fc4e2061b"
        ],
        [
            "2: exfalso; auto.",
            "VernacExtend",
            "7bcdf9c578b2781394a0cd40cc75e636b210332a"
        ],
        [
            "assert(B <> C) by (intro; subst; Between).",
            "VernacExtend",
            "ff8994d03f2eaad2f59fe6aa79e7cac4e31ddceb"
        ],
        [
            "assert(HC' := symmetric_point_construction A C).",
            "VernacExtend",
            "a32fe50dc8000381a9d59a10631398625eddc21f"
        ],
        [
            "destruct HC' as [C'].",
            "VernacExtend",
            "939ed20a80811f64e997e55db32e42da0d3db2fe"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Bet C C' B).",
            "VernacExtend",
            "0f3966f55ee4833a6599e762b8118cad266f0ca6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "apply (l6_2 _ _ A); Between.",
            "VernacExtend",
            "b35da7b7b1998348a16a24f40b6b61478ca36918"
        ],
        [
            "apply (l5_6 A C B C); Cong.",
            "VernacExtend",
            "5f9cbccdda5b5611885a68df6c576b4aee85080a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (le3456_lt__lt _ _ C A).",
            "VernacExtend",
            "7f4c2a01e47fb525b84e376a38d51a3312f1e5ae"
        ],
        [
            "2: exists C'; split;auto with cong.",
            "VernacExtend",
            "83d51752e032c3789465786996933f9fea2579e1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists D; auto with cong.",
            "VernacExtend",
            "1ffdc56795d2d08e9093c08f87ed3291e84447ff"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HAD.",
            "VernacExtend",
            "e94cd70f6ab6e0462983a39b4dc9df02c846141a"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply (between_cong C); Between.",
            "VernacExtend",
            "cc84c5754bd234e2a600e3f6893790c5ea51be21"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol.",
            "VernacExtend",
            "d2d5a30c7ebcd9ad8011f651d9082aa73266ec1d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_44_2.",
            "VernacExtend",
            "716b38ebaa7f139714b096817b786e25af528817"
        ],
        [
            "intro; apply HNCol; ColR.",
            "VernacExtend",
            "80b045be857eff3fb5b48d773ec57291fa069e50"
        ],
        [
            "apply (lea123456_lta__lta _ _ _ C A B).",
            "VernacExtend",
            "1de5cea8692f13bb792bfc765414d1bb79f10898"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (l11_30 C B A C A B); try apply (conga_refl); auto.",
            "VernacExtend",
            "5355a968868df783db0a34e6badd5ce531ef9dfc"
        ],
        [
            "2: apply (out_conga C B D C B D); try apply (out_trivial); try (apply conga_refl); auto; apply bet_out; Between.",
            "VernacExtend",
            "c58adcaaf298a060e0dfbd7d7bce7588b8af9c69"
        ],
        [
            "elim (cong_dec A C B C).",
            "VernacExtend",
            "22c0c1540f6ffae3e5e9ff44cba28034e517bd93"
        ],
        [
            "intro; apply conga__lea; apply l11_44_1; Col; Cong.",
            "VernacExtend",
            "8870ef34ff899ea397dc185f2ec4cf4157e82c2c"
        ],
        [
            "intro; apply lta__lea; apply l11_44_2; Col; apply lt_comm; split; auto.",
            "VernacExtend",
            "6476e291fae149a981ccda588233028f45c12e05"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert(~ Col D A C) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "fa6766893f0a071a83acfba37b93973579d591bf"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HInter := l11_41 D A C B).",
            "VernacExtend",
            "a25f437da4193ba4c4fa70706afd226fb3e22dcf"
        ],
        [
            "destruct HInter; auto.",
            "VernacExtend",
            "22b310adfbe034f4c13a0ffda2a2aebf8c9971e3"
        ],
        [
            "apply (conga_preserves_lta D A C C D B); try (apply conga_refl); auto.",
            "VernacExtend",
            "29d3e7687b3a69f3cde5e468b34e078d3ed2ec67"
        ],
        [
            "apply (out_conga D A C C A D); try (apply out_trivial); try (apply conga_pseudo_refl); auto.",
            "VernacExtend",
            "1c837c5a1d6f3376178c1ce9c862b842072138fe"
        ],
        [
            "apply bet_out; auto.",
            "VernacExtend",
            "76a9f58df0a142584f28da339552287cd33d82a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t18_18_aux : forall A B C D E F, Cong A B D E -> Cong A C D F -> LtA F D E C A B -> ~ Col A B C -> ~ Col D E F -> Le D F D E -> Lt E F B C.",
            "VernacStartTheoremProof",
            "4477889baa1aca61e6bad2763a1f7e1f54f9b48a"
        ],
        [
            "intros A B C D E F HCongAB HCongAC Hlta HNCol1 HNCol2 Hle.",
            "VernacExtend",
            "f7a1daa03e6be5e226f01f3fd1658466d5278791"
        ],
        [
            "assert (Hd := Hlta).",
            "VernacExtend",
            "801b295582097ef495f153d38110dc833ca99fca"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(HG0 := angle_construction_1 C A B F D E).",
            "VernacExtend",
            "cf22101a0418521865fef561f4ca0c120026c527"
        ],
        [
            "destruct HG0 as [G0 []]; Col.",
            "VernacExtend",
            "dfc47a726e82487782c673fad4451ab8422033be"
        ],
        [
            "assert(~ Col F D G0) by (apply (one_side_not_col123 _ _ _ E); auto).",
            "VernacExtend",
            "74fa37a1911315d802a5b5403812428636aa6d71"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HG := segment_construction_3 D G0 A B).",
            "VernacExtend",
            "9c68223d4b9444e73d4393cd319fccb96fb1125f"
        ],
        [
            "destruct HG as [G []]; auto.",
            "VernacExtend",
            "da02217e432efb6a51e0fb5ceb469a7b7291f3a5"
        ],
        [
            "assert(CongA C A B F D G) by (apply (out_conga C A B F D G0); try (apply out_trivial); auto).",
            "VernacExtend",
            "3d8e443b017e32bb5ae5d870f0c52f917c705158"
        ],
        [
            "assert(OS F D G E).",
            "VernacExtend",
            "d204d65d6af1a0ccfcb11f7270b2eadd8418229a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (one_side_transitivity _ _ _ G0); auto.",
            "VernacExtend",
            "8a42fd660b2eaf2303066f9d01b0ff980942f995"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply out_one_side; Col.",
            "VernacExtend",
            "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HNCol3 : ~ Col F D G) by (apply (one_side_not_col123 _ _ _ E); auto).",
            "VernacExtend",
            "9fcc1def635c2bdbe931db74bba242f7e25c0e60"
        ],
        [
            "clear dependent G0.",
            "VernacExtend",
            "108a3f14a58aac097e12210297b10dd7620a3a7c"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HSAS := l11_49 C A B F D G).",
            "VernacExtend",
            "bb38232470189a359ce7ca0567aca3062cbc9164"
        ],
        [
            "destruct HSAS as [HCongBC _]; Cong.",
            "VernacExtend",
            "9a1bc9bd4485556c57bf159cf5f2a1b764800cce"
        ],
        [
            "apply (cong2_lt__lt F E F G); Cong.",
            "VernacExtend",
            "25c990012a691ae56047a5dda27a214ce7843b02"
        ],
        [
            "apply (conga_preserves_lta _ _ _ _ _ _ F D E F D G) in Hlta; try (apply conga_refl); auto.",
            "VernacExtend",
            "b0198942599bb9efe0de7655118dd00fc6ce619f"
        ],
        [
            "assert(Cong D G D E) by (apply (cong_transitivity _ _ A B); auto).",
            "VernacExtend",
            "a53673000964abc6d6c734d0784486b036b9dc39"
        ],
        [
            "clear dependent A.",
            "VernacExtend",
            "b17f0ce110025f361a42a4ba851c465cbd5f20a1"
        ],
        [
            "clear dependent B.",
            "VernacExtend",
            "bcda20d12768b046d8573dff8e8e744a1964a601"
        ],
        [
            "assert(~ Col E F G).",
            "VernacExtend",
            "3496a62f54fd272e052ad20ef307e4db1051089e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [Hlea HNConga].",
            "VernacExtend",
            "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "assert (HSSA := l11_52 E F D G F D).",
            "VernacExtend",
            "1c8a01bf730b522186f60d3b0920612899901764"
        ],
        [
            "destruct HSSA as [_[]]; Cong; Le.",
            "VernacExtend",
            "eb3b439ad4cdea37f4fd36b040cde848654b2692"
        ],
        [
            "apply (out_conga G F D G F D); try (apply out_trivial); try (apply conga_refl); auto.",
            "VernacExtend",
            "ee604d12478f7f81408c6b76984af27fca76b06b"
        ],
        [
            "apply (col_one_side_out _ D); Col.",
            "VernacExtend",
            "082a5240f5750bb1b77c3435c42d61362cdc7585"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(~ Col D E G).",
            "VernacExtend",
            "df7c4ea4d5b916e7292bf957daaaf6933e42fc70"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [Hlea HNConga].",
            "VernacExtend",
            "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply (out_conga F D G F D G); try (apply out_trivial); try (apply conga_refl); auto.",
            "VernacExtend",
            "9acffa2955dc7eab85f06bf91f82d174e3da145c"
        ],
        [
            "apply (col_one_side_out _ F); Col; Side.",
            "VernacExtend",
            "1bf3fb82cedb7dfbc15095604c387e583c5b25a2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l11_44_2; Col.",
            "VernacExtend",
            "4bc1a5c161eb2331e2f239ac1252f95e73646008"
        ],
        [
            "assert(HInAngle : InAngle E F D G) by (apply lea_in_angle; destruct Hlta; auto).",
            "VernacExtend",
            "e530aa182544900fea5500299e0bbbc7416446c5"
        ],
        [
            "rename H into HFD.",
            "VernacExtend",
            "245dd2c9bf3e88bd2153faa90d04c6a59c4dff8d"
        ],
        [
            "destruct HInAngle as [_ [_ [_ [H [HH HUn]]]]].",
            "VernacExtend",
            "aab2259becf14a5d863933991efd89ebb6fdfa1d"
        ],
        [
            "destruct HUn.",
            "VernacExtend",
            "8e4a4e9ddd33e229ff805e86d3aa3f80f13b29a9"
        ],
        [
            "exfalso; subst; Col.",
            "VernacExtend",
            "0316efc4157d45a2144e326f1d0221ffc5b6ba80"
        ],
        [
            "assert(H <> F) by (intro; subst; assert_cols; Col).",
            "VernacExtend",
            "b0a458cd6340b24f26447c044c5f729126c33c2b"
        ],
        [
            "assert(H <> G) by (intro; subst; assert_cols; Col).",
            "VernacExtend",
            "fc5244257a27509dde1ba7ec27957415e8a162bc"
        ],
        [
            "assert(Hlt : Lt D H D E).",
            "VernacExtend",
            "c589a54d9f4aa9669e838a9a002ea855a68ee904"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (cong2_lt__lt H D G D); Cong.",
            "VernacExtend",
            "6bcfbd03e0fdbb26d1c31ac7705d147522069025"
        ],
        [
            "apply (bet_le__lt F); auto.",
            "VernacExtend",
            "518b270e9f9d92405fad69cec697f0b608190271"
        ],
        [
            "apply (l5_6 D F D E); Cong.",
            "VernacExtend",
            "d909cb0c13ff264a29d00fa6ef09785c9f5dda7d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hlt.",
            "VernacExtend",
            "5966b4b2f87c1102cd40d15067ea8e1cd8e0f9db"
        ],
        [
            "assert(H <> E) by (intro; subst; Cong).",
            "VernacExtend",
            "cf1c4355f70b4499f27d0a31c2f8e25576c99425"
        ],
        [
            "assert(Bet D H E) by (apply l6_13_1; Le).",
            "VernacExtend",
            "dc1638b01e0e2cfc2d93e1068827f698b46145d0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(~ TS E G F D).",
            "VernacExtend",
            "ad0d5ef5b10f4b380a3ac45527895abb0cd1521d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_9_bis.",
            "VernacExtend",
            "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
        ],
        [
            "apply (one_side_transitivity _ _ _ H); [apply invert_one_side; apply one_side_symmetry|]; apply out_one_side; Col; apply bet_out; Between.",
            "VernacExtend",
            "5c5e50f0d629c1186e29afb134114629dc29c200"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (lta_trans _ _ _ D E G).",
            "VernacExtend",
            "a9115f04f8af4363fd1ea826ca4d16633e2054b7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply(conga_preserves_lta F G E D G E); try (apply conga_refl); auto.",
            "VernacExtend",
            "fe7b7b661a25acdb182cedb59f8ae1cfbe191df6"
        ],
        [
            "apply l11_44_1; Col.",
            "VernacExtend",
            "d57046638e1be188d9af8b8513d717b0560d73a3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists F.",
            "VernacExtend",
            "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
        ],
        [
            "split; try (apply conga_refl); auto.",
            "VernacExtend",
            "ab0dad027585578435cc32403c954b344c812a3d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists H.",
            "VernacExtend",
            "bef8451ce130bb4441c1709095f89139b3f3289c"
        ],
        [
            "split; Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "right; apply bet_out; Between.",
            "VernacExtend",
            "c754fe25e82e59190acbc04b1c28532ca91a3f87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HConga.",
            "VernacExtend",
            "eceae29380bb0709d9de139a3e86565e7b2d62a3"
        ],
        [
            "apply conga_comm in HConga.",
            "VernacExtend",
            "77ceb64152fc3fa04795c7aaed3d838481b593fc"
        ],
        [
            "assert (HCop : Coplanar E G F D) by Cop.",
            "VernacExtend",
            "807d6db0b414e6483d7612176c8266f503b4803e"
        ],
        [
            "assert(Habs := conga_cop__or_out_ts E G F D HCop HConga).",
            "VernacExtend",
            "902129e4fbe14b964a888c070b2b6b0bb516b5b2"
        ],
        [
            "destruct Habs as [Hout|Hts]; assert_cols; Col.",
            "VernacExtend",
            "f1ed573a2a50bf8912ddc7e1916356b216e87d58"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lta_comm.",
            "VernacExtend",
            "e25453c857a295186433f9f605bde819e46a017e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "split; try (apply conga_refl); auto.",
            "VernacExtend",
            "ab0dad027585578435cc32403c954b344c812a3d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists H.",
            "VernacExtend",
            "bef8451ce130bb4441c1709095f89139b3f3289c"
        ],
        [
            "split; Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "right; apply bet_out; Between.",
            "VernacExtend",
            "c754fe25e82e59190acbc04b1c28532ca91a3f87"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HConga.",
            "VernacExtend",
            "eceae29380bb0709d9de139a3e86565e7b2d62a3"
        ],
        [
            "assert (HCop : Coplanar G E D F) by Cop.",
            "VernacExtend",
            "67cabf32f8f7c3bbbc5c88820aadafa8c5bd465b"
        ],
        [
            "assert(Habs := conga_cop__or_out_ts G E D F HCop HConga).",
            "VernacExtend",
            "33a6b7141a00f61417cb8be2a2347e089e944cc9"
        ],
        [
            "destruct Habs as [Hout|Hts]; assert_cols; Col; Side.",
            "VernacExtend",
            "e53b77eacfa17980ce852e8998f4215003b38577"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t18_18 : forall A B C D E F, Cong A B D E -> Cong A C D F -> LtA F D E C A B -> Lt E F B C.",
            "VernacStartTheoremProof",
            "5157e9c7ab8776c4580b9377681ecbaeab9b3ef6"
        ],
        [
            "intros A B C D E F HCongAB HCongAC Hlta.",
            "VernacExtend",
            "d36fb05d09bbe9b2a31eae86955afc440100a9fa"
        ],
        [
            "assert (Hd := Hlta).",
            "VernacExtend",
            "801b295582097ef495f153d38110dc833ca99fca"
        ],
        [
            "apply lta_distincts in Hd.",
            "VernacExtend",
            "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "elim(col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec B A C).",
            "VernacExtend",
            "f6af72f579e6a711219ed5ecc48d11f098e05b63"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HC' := segment_construction E D A C).",
            "VernacExtend",
            "15cbb2409110c3b62820528151867b5c4cdc250b"
        ],
        [
            "destruct HC' as [C' []].",
            "VernacExtend",
            "33f593463d77261685cf9866ae6b314cbe2b4bff"
        ],
        [
            "apply (cong2_lt__lt E F E C'); Cong.",
            "VernacExtend",
            "3b5c94c7b9533511ab72c28692e99f1d952b0f43"
        ],
        [
            "2: apply (l2_11 _ D _ _ A); Cong.",
            "VernacExtend",
            "6fb3f07efe47d4cc7bba8ffa48822ae54749f456"
        ],
        [
            "apply (triangle_strict_inequality _ D); auto.",
            "VernacExtend",
            "dbf418070d985862c9e7769bc2071f79f2d3f7f4"
        ],
        [
            "apply (cong_transitivity _ _ A C); Cong.",
            "VernacExtend",
            "d5953ea3d53876ec7dd6d22f505638cfdd4101c0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [_ HNConga].",
            "VernacExtend",
            "1939b3e5aea595b55340a5e07d1a667102258fcf"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply conga_line; Between.",
            "VernacExtend",
            "4147f32d0c463d889b951f5e126cf5519e28a4dd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply (nlta C A B).",
            "VernacExtend",
            "7ae2919507dbe77b8d086a4e17e2438aa925b28b"
        ],
        [
            "apply (lea123456_lta__lta _ _ _ F D E); auto.",
            "VernacExtend",
            "8083cbfc02654ed9d1400fc890f81236691bf10f"
        ],
        [
            "apply l11_31_1; auto.",
            "VernacExtend",
            "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
        ],
        [
            "apply not_bet_out; Col; Between.",
            "VernacExtend",
            "ad301be2d3f181d6e1ef67f400d84eab3c576f7f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(col_dec D E F).",
            "VernacExtend",
            "48350e3651e6a0759fea03912060ef6c29e93fd9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec F D E).",
            "VernacExtend",
            "87fd132b06eb467fcdd7c8c11c0c5c26747e9ae8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply (nlta F D E).",
            "VernacExtend",
            "068af365158cc4366c910b781b3804654135b311"
        ],
        [
            "apply (lea456789_lta__lta _ _ _ C A B); auto.",
            "VernacExtend",
            "43772810320e5abcd384ca3b71f1358142cb5c92"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HNBet.",
            "VernacExtend",
            "41c69df9d629ab5d15019807e428e889d1fbb6ab"
        ],
        [
            "apply not_bet_out in HNBet; Col.",
            "VernacExtend",
            "5a8410e8247d6048ebdd46b8c74fbb11994bd7ee"
        ],
        [
            "assert(HF' := segment_construction_3 A B A C).",
            "VernacExtend",
            "630d55b00ddcfaf441935410fa90e2ba3eeb809a"
        ],
        [
            "destruct HF' as [F' []]; auto.",
            "VernacExtend",
            "aad9e979c40d7fac6f67d28af12451592aa12c2b"
        ],
        [
            "apply (cong2_lt__lt B F' B C); Cong.",
            "VernacExtend",
            "bdda2b561618fd723a0bdee1f505bf1e0c81469d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (triangle_strict_reverse_inequality A); Cong.",
            "VernacExtend",
            "3a1474e5111988cbab46aad94c42640b2fc8cc67"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [_ HNConga].",
            "VernacExtend",
            "1939b3e5aea595b55340a5e07d1a667102258fcf"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply l11_21_b; auto.",
            "VernacExtend",
            "ce12aec46b32e53c292c17567774e3a4a232387a"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (out_cong_cong A _ _ D); auto.",
            "VernacExtend",
            "0e14fece0971d5d3b1a617a2a4dae2d2e6d2ce54"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "apply (cong_transitivity _ _ A C); auto.",
            "VernacExtend",
            "caf71fa5b5830a1b072f50796e7a5505ab01ce2c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(le_cases D F D E); intro; [|apply lt_comm; apply lta_comm in Hlta]; apply (t18_18_aux A _ _ D); Cong; Col.",
            "VernacExtend",
            "4b82d3d06e592005a853dace389109ccc31efb42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t18_19 : forall A B C D E F, A <> B -> A <> C -> Cong A B D E -> Cong A C D F -> Lt E F B C -> LtA F D E C A B.",
            "VernacStartTheoremProof",
            "2fb569edd0ced095933748939d9c9b4963396aad"
        ],
        [
            "intros A B C D E F HAB HAC HCongAB HCongAC Hlt.",
            "VernacExtend",
            "e0b303c801fb84457a476cc614015aedd75ebaf6"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply nlea__lta; auto.",
            "VernacExtend",
            "fd2b42cf769e32e344fc26593eec60c4af094c03"
        ],
        [
            "intro Hlea.",
            "VernacExtend",
            "9fc9ddee2ac69783bb6124403a4581e021beaa79"
        ],
        [
            "elim(conga_dec C A B F D E).",
            "VernacExtend",
            "cbf5539cc581496b6a526aa9726399c7d32e6270"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "destruct Hlt as [Hle HNCong].",
            "VernacExtend",
            "c724089fa57e8046261242de2a9b341e9b1150f9"
        ],
        [
            "apply HNCong.",
            "VernacExtend",
            "a3afddee961db56c5fdf29cc028977f5812aab57"
        ],
        [
            "assert(HSAS := l11_49 C A B F D E).",
            "VernacExtend",
            "07f064b7d48ce2dc8aa05e4854c8c63c1e110fbc"
        ],
        [
            "destruct HSAS; Cong.",
            "VernacExtend",
            "f4b02e081151cf4862db39cbd03b3396f8873238"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (not_and_lt E F B C).",
            "VernacExtend",
            "920e93d7a33347c9c0387d41c580ccef559d9e80"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (t18_18 D _ _ A); Cong.",
            "VernacExtend",
            "dac8fc1786f2dec64f3492b8b44d1a0ce8c23d27"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_trivial : forall A B, A <> B -> Acute A B A.",
            "VernacStartTheoremProof",
            "2ef8aaf45396bd73fd7d5c9f3cae5e81d1504b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= not_col_exists A B H).",
            "VernacExtend",
            "cbe19237a0b96ae7cccde81ec4a59fb89e9d9a66"
        ],
        [
            "ex_and HH P.",
            "VernacExtend",
            "62826eef4f0c06ff0f259c30341fa8f0ebb13e10"
        ],
        [
            "assert(exists C : Tpoint, Per C B A /\\ Cong C B A B /\\ OS A B C P).",
            "VernacExtend",
            "8e1b6324c7b5b9cd7e57f3eaa673c6417c3abde1"
        ],
        [
            "apply(ex_per_cong A B B P A B H H); Col; exists A.",
            "VernacExtend",
            "a9a366f610871b099b8f0c5301d0fe7284802ec7"
        ],
        [
            "ex_and H1 C.",
            "VernacExtend",
            "02d15f3e0054c2f5f568324b446e267aa563d2b9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "unfold Acute.",
            "VernacExtend",
            "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply l8_2.",
            "VernacExtend",
            "d878a2802f16fbb68671b14cd5324ab763023b98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold LtA.",
            "VernacExtend",
            "bc78b9900dc56635561f2a4605971f770e0a31c5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold LeA.",
            "VernacExtend",
            "5508e8c20a9df4f35160f441ed10ce769522d020"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle1123; auto.",
            "VernacExtend",
            "6b4a794455e72fea1cab6033d40b8eaa1d672115"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Out B A C).",
            "VernacExtend",
            "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
        ],
        [
            "apply(l11_21_a A B A A B C).",
            "VernacExtend",
            "6d93ba85e30a14ed324e4cf97f15ca8e1b0f00d5"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert(Perp C B B A).",
            "VernacExtend",
            "017bead0af4ac0531d2199b74e4df7afb32bf293"
        ],
        [
            "apply per_perp_in in H1; auto.",
            "VernacExtend",
            "cb0004c2302dc39331e273828e57e217f9e481ee"
        ],
        [
            "apply perp_in_perp_bis in H1.",
            "VernacExtend",
            "83ad2797c75cf9c2ce178b94a52c339859dae3a3"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "apply perp_not_eq_1 in H1.",
            "VernacExtend",
            "55952b10be90ebbefa6608461d0cd7387d1d1260"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply perp_comm in H10.",
            "VernacExtend",
            "57d281201b45e93b455d8e7b2ae8b8956373e863"
        ],
        [
            "apply perp_not_col in H10.",
            "VernacExtend",
            "33f54ee88df8b375912b12077f1bfd44c69d9f1a"
        ],
        [
            "apply out_col in H8.",
            "VernacExtend",
            "d91a5ec0f5b5fcce138399a929e06e582c9bfbb2"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_not_per : forall A B C, Acute A B C -> ~ Per A B C.",
            "VernacStartTheoremProof",
            "a1726ace565b9b74b5b64a6c4412b98d1e5ab6f3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Acute in H.",
            "VernacExtend",
            "ab06f9f66f851379d797edb3fa0d8444c7ac6132"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H0 B'.",
            "VernacExtend",
            "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "unfold LtA in H0.",
            "VernacExtend",
            "5c7d9f8549f9d9d10bc65459cb5889b00c2c23f3"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B').",
            "VernacExtend",
            "8e250fd4ab623239662b3d46e43b93af1d92e6c8"
        ],
        [
            "unfold LeA in H0.",
            "VernacExtend",
            "dfedeac9325976df0d168bc349bb7885252e374f"
        ],
        [
            "ex_and H0 X.",
            "VernacExtend",
            "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
        ],
        [
            "apply conga_distinct in H3.",
            "VernacExtend",
            "5da341328fc3fdddba1adccf6aa48f15c181abfc"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "unfold InAngle in H0.",
            "VernacExtend",
            "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
        ],
        [
            "spliter; auto.",
            "VernacExtend",
            "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply(l11_16 A B C A' B' C'); auto.",
            "VernacExtend",
            "588eea03a34ef518fb9b1f95a13d15468f2b5582"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma angle_bisector : forall A B C, A <> B -> C <> B -> exists P, InAngle P A B C /\\ CongA P B A P B C.",
            "VernacStartTheoremProof",
            "49e3c2737eeb43f3d1cdf7b892af0e3dd8a20012"
        ],
        [
            "intros A B C HAB HCB.",
            "VernacExtend",
            "0b0b45914a9eea1eca1e3bf511b1b41dca729a44"
        ],
        [
            "elim (col_dec A B C).",
            "VernacExtend",
            "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HCol.",
            "VernacExtend",
            "7339a24608f9044c1539af209f14a20bfa73ed6f"
        ],
        [
            "elim (bet_dec A B C).",
            "VernacExtend",
            "c5492a1b872689bb9ee4184107bb3c6832671091"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HBet; destruct (not_col_exists A B) as [Q HNCol]; trivial.",
            "VernacExtend",
            "7f3ee4e6a5375cf0a5491d44c677fd4c70440c16"
        ],
        [
            "destruct (l10_15 A B B Q) as [P [HPerp HOS]]; Col.",
            "VernacExtend",
            "1c26d0324c6a5c3ed09039138537e8a421644c0e"
        ],
        [
            "assert_diffs; exists P; split.",
            "VernacExtend",
            "ee3516a9934d779bd5049685885869aa48bcd54c"
        ],
        [
            "apply in_angle_line; auto.",
            "VernacExtend",
            "9741416c2f99a4a3f8957bd776b8f8fd20d9346c"
        ],
        [
            "apply l11_18_1; Perp.",
            "VernacExtend",
            "47a1521b2b7fbab760f8cc5eb47f2ed88003a2e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HOut; apply not_bet_out in HOut; trivial; assert_diffs.",
            "VernacExtend",
            "35892651ab7947bdbe670a0eed0dcaa850428028"
        ],
        [
            "exists C; split.",
            "VernacExtend",
            "5073d518962d84a4cc5923806862d318f59878dc"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists C; split; Between.",
            "VernacExtend",
            "ccd23a02f51ca8e6e8c6a3b49d4ef0af2d9fe27a"
        ],
        [
            "right; apply out_trivial; auto.",
            "VernacExtend",
            "d968bada418d0a8639011179c4c37b4609d1c30d"
        ],
        [
            "apply l11_21_b.",
            "VernacExtend",
            "1da580424192b6645444b07bef8443a7727be11c"
        ],
        [
            "apply l6_6; trivial.",
            "VernacExtend",
            "24379c6cad4d7686c4b2144edcd5eb0b6393c194"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HNCol.",
            "VernacExtend",
            "d2d5a30c7ebcd9ad8011f651d9082aa73266ec1d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (l6_11_existence B B A C) as [C0 [HOut HCong]]; auto.",
            "VernacExtend",
            "9c85416bd2eeb10b6d80abc67c81eeb2786f8599"
        ],
        [
            "destruct (midpoint_existence A C0) as [P HP].",
            "VernacExtend",
            "19a31fd1264bd04687021e6a8d64ece704cb66d3"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HNCol1 : ~ Col A B C0) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "2745d829b077356a6f7ced37a1f7f7b0cafd6d7e"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (P <> B) by (intro; subst P; apply HNCol1; Col).",
            "VernacExtend",
            "af16f992afa4ad5f0ede7b1c1d5e63c074e7942b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (l11_25 P A B C0); try (apply out_trivial); auto; [|apply l6_6; trivial].",
            "VernacExtend",
            "7c39d4bf6810d255254fe6334c17e8a1cd5068bd"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists P; split; Between.",
            "VernacExtend",
            "6cf5e49fd6381cc057f2442d1146b8df92dabb14"
        ],
        [
            "right; apply out_trivial; auto.",
            "VernacExtend",
            "d968bada418d0a8639011179c4c37b4609d1c30d"
        ],
        [
            "destruct (l11_51 B P A B P C0); auto with cong.",
            "VernacExtend",
            "a9c05fcde1f5d6c5ab81f23f7da614e09fe58cb2"
        ],
        [
            "apply (out_conga P B A P B C0); try (apply out_trivial); auto.",
            "VernacExtend",
            "a24242578ef6908e113364df3393ef064fe95019"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reflectl__conga : forall A B P P', A <> B -> B <> P -> ReflectL P P' A B -> CongA A B P A B P'.",
            "VernacStartTheoremProof",
            "0ea5628ac9f2097f901a2e341a197578de2b99c4"
        ],
        [
            "intros A B P P' HAB HBP HRefl.",
            "VernacExtend",
            "62e15d6eb0b97bd974652a470a9787d857be3bf2"
        ],
        [
            "destruct HRefl as [[A' [HMid HCol]] [HPerp|Heq]]; [|subst; apply conga_refl; auto].",
            "VernacExtend",
            "2b7544490dfab985204c02a02f14fac4bd092816"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (eq_dec_points A' B).",
            "VernacExtend",
            "eac0c07517f052f1a6f587b118943ad712f16c63"
        ],
        [
            "subst A'.",
            "VernacExtend",
            "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_16; auto; apply perp_per_1; [apply perp_col1 with P'|apply perp_col1 with P]; Col; Perp.",
            "VernacExtend",
            "29cfa362530a4eae8e7a879bb7a28b1c630a5c4d"
        ],
        [
            "destruct HMid as [HBet HCong].",
            "VernacExtend",
            "9f2468a2e09be0f28d76d01338829e154cfe223e"
        ],
        [
            "destruct (l11_49 B A' P B A' P') as [HCong1 [HConga1 HConga2]]; Cong.",
            "VernacExtend",
            "c31063e0ad08cc2363c5424393c938001a57a402"
        ],
        [
            "apply l11_16; auto; apply perp_per_1, perp_left_comm, perp_col with A; Col; [apply perp_col1 with P'|apply perp_col1 with P]; Col; Perp.",
            "VernacExtend",
            "66b2bc6376227098b1e818f792ede58e4328b42b"
        ],
        [
            "destruct (bet_dec A' B A) as [HBBet|HBOut].",
            "VernacExtend",
            "f1bf03863dca39d24c71510dd9c6a0c6e175675b"
        ],
        [
            "apply l11_13 with A' A'; assumption.",
            "VernacExtend",
            "b81e8771452c2b285f778e5fd5b5a3488dbec797"
        ],
        [
            "apply not_bet_out in HBOut; Col.",
            "VernacExtend",
            "78073da0f52ff8a170449452e74cd492687ff94b"
        ],
        [
            "apply out_conga with A' P A' P'; trivial; apply out_trivial; assert_diffs; auto.",
            "VernacExtend",
            "882eb43655fb4e67d797104df1fad05417f6f139"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_cop_out_reflectl__out : forall A B C P T T', ~ Out B A C -> Coplanar A B C P -> CongA P B A P B C -> Out B A T -> ReflectL T T' B P -> Out B C T'.",
            "VernacStartTheoremProof",
            "fd1f8d2ea10c7c3abd9220de5010a849b2d763a5"
        ],
        [
            "intros A B C P T T' HNOut HCop HConga HOut HRefl.",
            "VernacExtend",
            "e60c677224ac1ceb1fee5ad204eef398b5cbe657"
        ],
        [
            "apply conga_distinct in HConga; spliter; clean.",
            "VernacExtend",
            "490af09f28d4af26fd3d963a820b57bb201fc3f4"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HConga1 : CongA P B T P B T') by (apply reflectl__conga; auto; apply is_image_spec_rev, HRefl).",
            "VernacExtend",
            "d6753de55ae5d372a041153e4ee5aaa55780fded"
        ],
        [
            "apply is_image_is_image_spec in HRefl; auto.",
            "VernacExtend",
            "71985ea54dfaaeab16bfecdbe250e62998598740"
        ],
        [
            "apply conga_distinct in HConga1; spliter; clean.",
            "VernacExtend",
            "c5d8ca73ffeb153c30199abdac8a2e8fcf1989c6"
        ],
        [
            "destruct (conga_cop__or_out_ts P B C T'); trivial.",
            "VernacExtend",
            "7e2b74a243e95a7358547a12c7ab3e25a6519653"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply coplanar_trans_1 with T; [..|Cop].",
            "VernacExtend",
            "4693869aea60e1a7b558733f8a46b51ec1a5e5b7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNOut.",
            "VernacExtend",
            "bfac1288cf9ba3ac27854ce12cfabf1164ea9f9d"
        ],
        [
            "assert (HCol : Col A B P) by ColR.",
            "VernacExtend",
            "b4a2616ec9346cda8b5dec638c75f673f3b1a782"
        ],
        [
            "destruct (bet_dec A B P) as [HBet|HOut1].",
            "VernacExtend",
            "db2829813531c6ae1da8b5bf2cb2cf53136005a2"
        ],
        [
            "apply l6_2 with P; auto.",
            "VernacExtend",
            "77172ae28dad3bdb9bf6a7777df315696a136945"
        ],
        [
            "apply (bet_conga__bet A B P); [|apply conga_comm]; assumption.",
            "VernacExtend",
            "8096c291392b571973bbc7923deda4c5e10cd62e"
        ],
        [
            "apply not_bet_out in HOut1; trivial.",
            "VernacExtend",
            "06cbef17d29e13730a1be3d84f57d6b1d93cd0ed"
        ],
        [
            "apply l6_7 with P; trivial.",
            "VernacExtend",
            "0ff8cd8ecd86c4e2cca6e6f0349d781e1b08b702"
        ],
        [
            "apply (l11_21_a P B A); [apply l6_6|]; assumption.",
            "VernacExtend",
            "23f35980102755bb339c9b828e7d7e4ddbdd0781"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply coplanar_perm_19, col_cop__cop with A; Col; Cop.",
            "VernacExtend",
            "b7de064ebb4cad3d0f8d5bdcc2a96ac9cf7e9e08"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply conga_trans with P B A.",
            "VernacExtend",
            "4ab2cfd132c514b3efce4fcce9f49946e196ec13"
        ],
        [
            "apply conga_sym; assumption.",
            "VernacExtend",
            "2b25f222f2bd1654890783ce24b11c9ff220586f"
        ],
        [
            "apply l6_6 in HOut; apply out_conga with P T P T'; try (apply out_trivial); auto.",
            "VernacExtend",
            "6f5e74d48bfd010fe5735f69dae5fb999172abb1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply (l9_9_bis P B C T'); trivial.",
            "VernacExtend",
            "7532419717186b46c1320600e794663a99412d01"
        ],
        [
            "exists A; split; apply l9_2.",
            "VernacExtend",
            "04924cb96770833a85bde5d9a91bc52ee688bf3e"
        ],
        [
            "destruct (conga_cop__or_out_ts P B A C); Cop; contradiction.",
            "VernacExtend",
            "8997aa47bea34cb658ebe0c5ff3976f9e2a8da19"
        ],
        [
            "apply out_two_sides_two_sides with T B; Col.",
            "VernacExtend",
            "00a719f3e77c920c8c3879688b707a107feb21ea"
        ],
        [
            "apply invert_two_sides, l10_14; auto.",
            "VernacExtend",
            "c7050ec505312f2b90e6a1a3ca57bf7894900cd2"
        ],
        [
            "intro; subst T'.",
            "VernacExtend",
            "36625e51671b4d1329d1e78b779b519930b4973b"
        ],
        [
            "apply HNOut.",
            "VernacExtend",
            "bfac1288cf9ba3ac27854ce12cfabf1164ea9f9d"
        ],
        [
            "assert (Col T B P) by (apply l10_8, HRefl).",
            "VernacExtend",
            "30cbf8ca1f1dfbaa3df54f7ee1fd6e93cccc799f"
        ],
        [
            "assert (Col P B A) by ColR.",
            "VernacExtend",
            "942e9e28bf50e8e96780daf74c91669bbdd0820c"
        ],
        [
            "assert (Col P B C) by (apply (col_conga_col P B A); assumption).",
            "VernacExtend",
            "5c73382924259904015ff83ec8382538b3c334ac"
        ],
        [
            "apply not_bet_out; try ColR.",
            "VernacExtend",
            "ffcbf6683db111af9a83ca52918584611f0d3061"
        ],
        [
            "intro HBet.",
            "VernacExtend",
            "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
        ],
        [
            "apply (per_not_col P B A); auto.",
            "VernacExtend",
            "46945c73c8b38b8cf0065e5957cccb08a7facdbc"
        ],
        [
            "apply l11_18_2 with C; assumption.",
            "VernacExtend",
            "178ab73a3c9bfb5dbb2bb407ae65de373c37725f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_conga_cop_reflectl__col : forall A B C P T T', ~ Out B A C -> Coplanar A B C P -> CongA P B A P B C -> Col B A T -> ReflectL T T' B P -> Col B C T'.",
            "VernacStartTheoremProof",
            "10cb74d979518f2e0ec43cf6c6e1f6282c82ea08"
        ],
        [
            "intros A B C P T T' HNOut HCop HConga HCol HRefl.",
            "VernacExtend",
            "47629d9f6efaf9ea27d3daf1f09a05560e672a84"
        ],
        [
            "destruct (eq_dec_points B T).",
            "VernacExtend",
            "574725725e913dbacddbe9f7beffdc61ece8971f"
        ],
        [
            "subst; assert (T = T'); subst; Col.",
            "VernacExtend",
            "bfd77b8c990a1af0cce523b5efc850f89f9ee39b"
        ],
        [
            "apply (l10_6_uniqueness_spec T P T); trivial; apply col__refl; Col.",
            "VernacExtend",
            "9e3f9c75cc3c849f97d70d5c39a50f2660a334d1"
        ],
        [
            "destruct (out_dec B A T).",
            "VernacExtend",
            "93e10a8f98e6f0a5a522281b0802075e3373d370"
        ],
        [
            "apply out_col, conga_cop_out_reflectl__out with A P T; assumption.",
            "VernacExtend",
            "e8479a50d8272a400e64a0c08bf814e3c1097103"
        ],
        [
            "destruct (segment_construction A B A B) as [A' [HA'1 HA'2]].",
            "VernacExtend",
            "2df1aceafc054aa1d9775d940cff8f69f4b5ae4b"
        ],
        [
            "destruct (segment_construction C B C B) as [C' [HC'1 HC'2]].",
            "VernacExtend",
            "3a168311d1c0e9ecedd266957f36c8a58c6b2a7b"
        ],
        [
            "assert (Out B C' T'); try ColR.",
            "VernacExtend",
            "8389f2d56c37ddaca15a78fd35f43251264d1551"
        ],
        [
            "apply conga_distinct in HConga; spliter; assert_diffs.",
            "VernacExtend",
            "e617bd953bba8d6c417b4caaec6f8fcb18d6ebd7"
        ],
        [
            "apply conga_cop_out_reflectl__out with A' P T; trivial.",
            "VernacExtend",
            "a434d0b6e8268df83ae4a366a2d1fbd4b93d24be"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; apply HNOut.",
            "VernacExtend",
            "3c07faa416f2844d2daa3e5dbcc5203bd867bc94"
        ],
        [
            "apply l6_2 with A'; auto.",
            "VernacExtend",
            "fd2426f044a63c203606d622e27bb1e8e7d0d413"
        ],
        [
            "apply between_symmetry, l6_2 with C'; try (apply l6_6); Between.",
            "VernacExtend",
            "aab5892ddf7b9bb540bad22ef773bb71957623e5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "exists C'; left; split; ColR.",
            "VernacExtend",
            "9dc23ad4927ebad919074548164391ce4d9634d8"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; Cop.",
            "VernacExtend",
            "bcc950db2da3c31f64c2af161c0781104026407e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply conga_comm, l11_13 with A C; auto; apply conga_comm; assumption.",
            "VernacExtend",
            "6b1be4d4125330db573af60cf411793eeea780d8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l6_2 with A; try (apply between_symmetry); auto.",
            "VernacExtend",
            "2f0f24d4fe2b99b39ee29d9974662b28879c3192"
        ],
        [
            "apply not_out_bet; Col.",
            "VernacExtend",
            "b7b5f14a999c4872d9e09624cd42467a37e7f0f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga2_cop2__col : forall A B C P P', ~ Out B A C -> CongA P B A P B C -> CongA P' B A P' B C -> Coplanar A B P P' -> Coplanar B C P P' -> Col B P P'.",
            "VernacStartTheoremProof",
            "b9309052ed183649f7940bb407fa35ddbcf29844"
        ],
        [
            "intros A B C P P' HNOut HP HP' HCopA HCopC.",
            "VernacExtend",
            "61c0fb303ade25e75c8457dd151835ea35e92947"
        ],
        [
            "apply conga_distinct in HP; apply conga_distinct in HP'; spliter; clean.",
            "VernacExtend",
            "2c6c35769e436b1c6aa092e68c9954e597e528ca"
        ],
        [
            "destruct (l6_11_existence B B A C) as [C' [HC'1 HC'2]]; auto.",
            "VernacExtend",
            "c6b3dc5fa8ff2f2395ab0f5fcd1b9fbffb907180"
        ],
        [
            "destruct (l11_49 P B A P B C'); Cong.",
            "VernacExtend",
            "9cba80dd3dcc5550c4e142016a97e87d77d0def1"
        ],
        [
            "apply out_conga with P A P C; try (apply out_trivial); try (apply l6_6); auto.",
            "VernacExtend",
            "c60be62393412cc9518ebef42605db225f098f60"
        ],
        [
            "destruct (l11_49 P' B A P' B C'); Cong.",
            "VernacExtend",
            "f2d8a79e1efa408a08046971e61e961f149eb578"
        ],
        [
            "apply out_conga with P' A P' C; try (apply out_trivial); try (apply l6_6); auto.",
            "VernacExtend",
            "01dcdeddd60817630eae1919b7bbdf1017086da2"
        ],
        [
            "apply cong3_cop2__col with A C'; Cong.",
            "VernacExtend",
            "2ab27afe6eeb868bb1476a8573690f26210fc93b"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with C; Col; Cop.",
            "VernacExtend",
            "f75f43eee6d1b201ebee18d9a38092e5d3b44784"
        ],
        [
            "intro; subst; auto.",
            "VernacExtend",
            "14c52ba75193a5cf953b4666ab65f547781225b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga2_cop2__col_1 : forall A B C P P', ~ Col A B C -> CongA P B A P B C -> CongA P' B A P' B C -> Coplanar A B C P -> Coplanar A B C P' -> Col B P P'.",
            "VernacStartTheoremProof",
            "60527b5285d34a1bbc0ed2908d6f723c1620e42c"
        ],
        [
            "intros A B C P P' HNCol HP HP' HCop HCop'.",
            "VernacExtend",
            "4ac67be8dbedb7d8c8e603c3a1d6e442aeb7d6ba"
        ],
        [
            "apply conga2_cop2__col with A C; trivial; [|apply coplanar_pseudo_trans with A B C; Cop..].",
            "VernacExtend",
            "ed1bf11fb40a8e7ee7209738c4ecf5bd991a7e7c"
        ],
        [
            "intro; apply HNCol; Col.",
            "VernacExtend",
            "bc1ad9e50076fe7ff6cb940cf13b0eb1e0e75e49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_conga__conga : forall A B C P P', CongA P B A P B C -> Col B P P' -> B <> P' -> CongA P' B A P' B C.",
            "VernacStartTheoremProof",
            "b89c317f018986bf5d59b238d3aa34e3226dd2f1"
        ],
        [
            "intros A B C P P' HConga HCol HBP'.",
            "VernacExtend",
            "06eac4312ff8968eaa938b49cffb453582738ca9"
        ],
        [
            "destruct (bet_dec P B P') as [HBet|HNBet].",
            "VernacExtend",
            "b1f9fde7f5cfb1cc3393331adc8e92021795de6d"
        ],
        [
            "apply l11_13 with P P; auto.",
            "VernacExtend",
            "35a12ed9737a655736dbe07a22557dd15d32afbb"
        ],
        [
            "apply not_bet_out in HNBet; Col.",
            "VernacExtend",
            "5a8410e8247d6048ebdd46b8c74fbb11994bd7ee"
        ],
        [
            "apply conga_distinct in HConga; spliter.",
            "VernacExtend",
            "8c6d2bf38c67721b5af1338971ac6a2664c026ab"
        ],
        [
            "apply out_conga with P A P C; try (apply out_trivial); auto.",
            "VernacExtend",
            "af263c74af831080f173d685b878beba45c66ce0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_inangle__ex_col_inangle : forall A B C P Q, ~ Out B A C -> InAngle P A B C -> Coplanar A B C Q -> exists R, InAngle R A B C /\\ P <> R /\\ Col P Q R.",
            "VernacStartTheoremProof",
            "84fe79e34035636d02c9475d0c152aa9c4a0be80"
        ],
        [
            "intros A B C P Q HNOut HIn HCop.",
            "VernacExtend",
            "73661163cf2a42a4f846bb63c5fa21e071a921fc"
        ],
        [
            "assert (h := inangle_distincts A B C P HIn); spliter.",
            "VernacExtend",
            "79731002cc8197bd55b7c2d78673d9d96aad5898"
        ],
        [
            "assert (A <> C) by (intro; subst; apply HNOut, out_trivial; auto).",
            "VernacExtend",
            "fa84e5e1747859495a37de6415d262adca11c227"
        ],
        [
            "destruct (eq_dec_points P Q).",
            "VernacExtend",
            "8e638c9507dff8ea1ec15d7062e186c739c15f49"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "destruct (eq_dec_points A P).",
            "VernacExtend",
            "dbbbf4d20ba13f727e33e9b5f7d957ff95accc22"
        ],
        [
            "subst P; exists C; split; Col.",
            "VernacExtend",
            "1953cfa11b5a8e0ba4b3e29ae8184d16c7bb07f8"
        ],
        [
            "apply inangle3123; auto.",
            "VernacExtend",
            "56d0c54a334d0bb9e49709f29682d30ec986b56e"
        ],
        [
            "exists A; split; Col; apply inangle1123; auto.",
            "VernacExtend",
            "cb2a256aa33c2a5c324d28b3a25afae6612c7d08"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (col_dec B P Q) as [HCol|HNCol1].",
            "VernacExtend",
            "b18bcda8a069737e3aca226337861b8075991732"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (segment_construction B P B P) as [R [HR1 HR2]].",
            "VernacExtend",
            "11af648ee6a42deb2662b752c2a82d568191fadb"
        ],
        [
            "exists R.",
            "VernacExtend",
            "6be16195e61cf6042a202f52c388c0dc69db4ce9"
        ],
        [
            "assert_diffs; split; [|split; ColR].",
            "VernacExtend",
            "1a16118688b2f3b06ce8b9b7667c7c4649c80885"
        ],
        [
            "apply l11_25 with P A C; try (apply out_trivial); auto.",
            "VernacExtend",
            "47621b6e608ca98e5bce5343dc3ba7443189a80d"
        ],
        [
            "apply l6_6, bet_out; auto.",
            "VernacExtend",
            "9aba55c0c4537576e8c38045aea94b98aba9917b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (col_dec A B C) as [HCol|HNCol2].",
            "VernacExtend",
            "90e9c7d7d9ebad9b69fd511a3eab1621c42cab54"
        ],
        [
            "exists Q; split; Col.",
            "VernacExtend",
            "0cd155dec218b94a6cb741240575c25e45768bb7"
        ],
        [
            "apply in_angle_line; auto.",
            "VernacExtend",
            "9741416c2f99a4a3f8957bd776b8f8fd20d9346c"
        ],
        [
            "apply not_out_bet; assumption.",
            "VernacExtend",
            "9e38016ae86c48d96bb96b2c9c5e14a31be9ae8e"
        ],
        [
            "destruct (col_dec B C P) as [HCol|HNCol3].",
            "VernacExtend",
            "2f63c2115ef8fc65d1e0439190d8e043ddd24b45"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (HNCol3 : ~ Col B A P) by (intro; apply HNCol2; ColR).",
            "VernacExtend",
            "2b715951f27ab944f3d7f2519f1583f49193ce77"
        ],
        [
            "destruct (cop_not_par_same_side B P Q P P A) as [Q0 [HCol1 HOS]]; Col.",
            "VernacExtend",
            "4d80f7d413021a0326e73c22072a70b9567bacc3"
        ],
        [
            "apply coplanar_perm_16, col_cop__cop with C; Cop.",
            "VernacExtend",
            "9b529829ee53f64c1701ed0b43ddda995916e5cd"
        ],
        [
            "assert (Hd := os_distincts B P A Q0 HOS); spliter; clean.",
            "VernacExtend",
            "8e1bd5f7b1d1670750f6529f867bed3f3e653a6e"
        ],
        [
            "destruct (one_side_dec B A P Q0).",
            "VernacExtend",
            "aea10953a26f8b813431778dc2ec703e9fd4f12e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HIn' : InAngle Q0 A B P) by (apply os2__inangle; assumption).",
            "VernacExtend",
            "ce08d472aef1652e557abac2c29e309ad03570c5"
        ],
        [
            "exists Q0; split; Col.",
            "VernacExtend",
            "3746e5656a63158504ff8655a097a4da62da38c2"
        ],
        [
            "apply in_angle_trans with P; trivial.",
            "VernacExtend",
            "887c7d40d08aabd4edb23f65a92bc650ee7006c6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HR : exists R, Bet P R Q0 /\\ Col P Q R /\\ Col B A R).",
            "VernacExtend",
            "8fe28c0483dd24251b4c88836e712a8a5e6bfa95"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (col_dec B A Q0).",
            "VernacExtend",
            "95646bdd6d3cca9d2745a1eb044bb6ede8143eef"
        ],
        [
            "exists Q0; split; Between; Col.",
            "VernacExtend",
            "1c5f9d26c5b9035102a18a91ba4b24c39c885e61"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (cop__not_one_side_two_sides B A P Q0) as [_ [_ [R [HCol' HBet]]]]; Col; Cop.",
            "VernacExtend",
            "c5924f58b5dc4669cd4c30d253cf7c9067c235ec"
        ],
        [
            "exists R; split; trivial; split; ColR.",
            "VernacExtend",
            "3dca6696776ff99b9031f31af236df3986b1ba3f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HR as [R [HR1 [HR2 HR3]]].",
            "VernacExtend",
            "5ff04b554b1c257f20e9bcb76605c77f692c9fb9"
        ],
        [
            "assert (P <> R) by (intro; subst; apply HNCol3, HR3).",
            "VernacExtend",
            "03826440e502a850306e85d519dc8701840b5849"
        ],
        [
            "exists R; split; auto.",
            "VernacExtend",
            "e5c78d8345b588d288c86a8621ad56b76f1fc15d"
        ],
        [
            "apply out321__inangle; auto.",
            "VernacExtend",
            "e64362360b6cae184105f7a3dac144d66e532ec3"
        ],
        [
            "apply col_one_side_out with P; trivial.",
            "VernacExtend",
            "e6523d3eda40513cc27af8ccfde408d7ccb09804"
        ],
        [
            "apply one_side_transitivity with Q0; trivial.",
            "VernacExtend",
            "3f151a01a1070f2eda965f783b83778a67b73fed"
        ],
        [
            "apply one_side_not_col124 in HOS.",
            "VernacExtend",
            "2a0523a1e90fad23bcc6c6916debb2f009f8ccbb"
        ],
        [
            "apply invert_one_side, out_one_side; Col.",
            "VernacExtend",
            "06d5cb70a26bc0ad1488afc69f1e0c48a10c8f44"
        ],
        [
            "apply l6_6, bet_out; auto.",
            "VernacExtend",
            "9aba55c0c4537576e8c38045aea94b98aba9917b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (cop_not_par_same_side B P Q P P C) as [Q0 [HCol1 HOS]]; Col.",
            "VernacExtend",
            "c6032fbbc54976c2698545d27fb5b861372fabf6"
        ],
        [
            "apply coplanar_perm_3, coplanar_trans_1 with A; Cop.",
            "VernacExtend",
            "4206748e9722eb3cf14da27f793067a7cceb6056"
        ],
        [
            "assert (Hd := os_distincts B P C Q0 HOS); spliter; clean.",
            "VernacExtend",
            "0321169e655553b80d22aaeb679e66b1ba32268f"
        ],
        [
            "destruct (one_side_dec B C P Q0).",
            "VernacExtend",
            "18bca853ff9b4fa5c843d992b61b9161ee9362f4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HIn' : InAngle Q0 C B P) by (apply os2__inangle; assumption).",
            "VernacExtend",
            "ed88f0bb5deac82ae48f51d111eebb0abe2779b6"
        ],
        [
            "exists Q0; split; Col.",
            "VernacExtend",
            "3746e5656a63158504ff8655a097a4da62da38c2"
        ],
        [
            "apply l11_24, in_angle_trans with P; trivial.",
            "VernacExtend",
            "ef3df06ff776302ac34fc812010b95b086d6fe71"
        ],
        [
            "apply l11_24, HIn.",
            "VernacExtend",
            "1b798a135094a1cd76100690fc9f3eaea7404f2d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HR : exists R, Bet P R Q0 /\\ Col P Q R /\\ Col B C R).",
            "VernacExtend",
            "5b2c03434f069a789213a10fe64af82e8bdfde36"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (col_dec B C Q0).",
            "VernacExtend",
            "23bc08cd6a095d92613d433651160118efb6f4ee"
        ],
        [
            "exists Q0; split; Between; Col.",
            "VernacExtend",
            "1c5f9d26c5b9035102a18a91ba4b24c39c885e61"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (cop__not_one_side_two_sides B C P Q0) as [_ [_ [R [HCol' HBet]]]]; Col; Cop.",
            "VernacExtend",
            "a688757d2b53a825caf9a97da3820802dccea939"
        ],
        [
            "exists R; split; trivial; split; ColR.",
            "VernacExtend",
            "3dca6696776ff99b9031f31af236df3986b1ba3f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HR as [R [HR1 [HR2 HR3]]].",
            "VernacExtend",
            "5ff04b554b1c257f20e9bcb76605c77f692c9fb9"
        ],
        [
            "assert (P <> R) by (intro; subst; apply HNCol3, HR3).",
            "VernacExtend",
            "03826440e502a850306e85d519dc8701840b5849"
        ],
        [
            "exists R; split; auto.",
            "VernacExtend",
            "e5c78d8345b588d288c86a8621ad56b76f1fc15d"
        ],
        [
            "apply l11_24, out321__inangle; auto.",
            "VernacExtend",
            "253c09b338602ac5c9168a44ae7b186f666efed2"
        ],
        [
            "apply col_one_side_out with P; trivial.",
            "VernacExtend",
            "e6523d3eda40513cc27af8ccfde408d7ccb09804"
        ],
        [
            "apply one_side_transitivity with Q0; trivial.",
            "VernacExtend",
            "3f151a01a1070f2eda965f783b83778a67b73fed"
        ],
        [
            "apply one_side_not_col124 in HOS.",
            "VernacExtend",
            "2a0523a1e90fad23bcc6c6916debb2f009f8ccbb"
        ],
        [
            "apply invert_one_side, out_one_side; Col.",
            "VernacExtend",
            "06d5cb70a26bc0ad1488afc69f1e0c48a10c8f44"
        ],
        [
            "apply l6_6, bet_out; auto.",
            "VernacExtend",
            "9aba55c0c4537576e8c38045aea94b98aba9917b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_inangle2__out : forall A B C P Q, ~ Bet A B C -> InAngle P A B C -> InAngle Q A B C -> Col B P Q -> Out B P Q.",
            "VernacStartTheoremProof",
            "d41c8d6214cf6f3c68118c7fd66a4752eb3dbe8c"
        ],
        [
            "intros A B C P Q HNBet HP HQ HCol.",
            "VernacExtend",
            "efc9df9566ced43e95c0ff122479e4b373395c0b"
        ],
        [
            "assert (Hd := inangle_distincts A B C P HP); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
            "VernacExtend",
            "469d5bb39bc9adbc9bbfce8f012028952ec0a2e1"
        ],
        [
            "destruct (col_dec A B C).",
            "VernacExtend",
            "7b10dd9c6b7260f86668772ddd2589811597a7f0"
        ],
        [
            "assert (Out B A C) by (apply not_bet_out; assumption).",
            "VernacExtend",
            "807e7ad81cd65ebb011e59401c5e6f8a63b54ba6"
        ],
        [
            "apply l6_7 with A; [apply l6_6|]; apply out_in_angle_out with C; auto.",
            "VernacExtend",
            "f5b7a2ba58902b8ac872d5d4bf386db10ee131bb"
        ],
        [
            "destruct (col_dec B A P) as [HCol1|HNCol1].",
            "VernacExtend",
            "08837d435ed5c23f620be2aad965f6d7ad52ee33"
        ],
        [
            "apply l6_7 with A; [apply l6_6|]; apply col_in_angle_out with C; ColR.",
            "VernacExtend",
            "2c71af3d23388b77c8207133fe90dd2a179f36de"
        ],
        [
            "apply col_one_side_out with A; trivial.",
            "VernacExtend",
            "f99c9b9e3fedcf7c716071d6aebf71369f67bd29"
        ],
        [
            "apply one_side_transitivity with C; [|apply one_side_symmetry]; apply invert_one_side, in_angle_one_side; Col.",
            "VernacExtend",
            "18663180b8a5c332176672921835958814f9d352"
        ],
        [
            "intro; apply HNCol1; ColR.",
            "VernacExtend",
            "db4c88af58e53c21b69c0295f95e83a9658421f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle2__lea : forall A B C P Q, InAngle P A B C -> InAngle Q A B C -> LeA P B Q A B C.",
            "VernacStartTheoremProof",
            "70016f01631faaf0ce191dcdb81aac65068684a6"
        ],
        [
            "intros A B C P Q HP HQ.",
            "VernacExtend",
            "4684d7b66b413903e844d9b5b63caf24886990cc"
        ],
        [
            "assert (HP' := l11_24 P A B C HP).",
            "VernacExtend",
            "6333c29b0653793e238b769e8d474d7ddb3354e1"
        ],
        [
            "assert (HQ' := l11_24 Q A B C HQ).",
            "VernacExtend",
            "695f94c89a9ba6267d5dcc61824105eb8008d930"
        ],
        [
            "assert (Hd := inangle_distincts A B C P HP); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
            "VernacExtend",
            "469d5bb39bc9adbc9bbfce8f012028952ec0a2e1"
        ],
        [
            "destruct (col_dec A B C) as [HCol|HNCol].",
            "VernacExtend",
            "3e9dd15d3bbd59e77870202ff8b14e82f103a816"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (bet_dec A B C).",
            "VernacExtend",
            "c15fc78159b7b131f2e6c9b46dc7f34d22b444d4"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "apply l11_31_1; auto.",
            "VernacExtend",
            "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
        ],
        [
            "assert (Out B A C) by (apply not_bet_out; assumption).",
            "VernacExtend",
            "807e7ad81cd65ebb011e59401c5e6f8a63b54ba6"
        ],
        [
            "apply l6_7 with A; [apply l6_6|]; apply out_in_angle_out with C; auto.",
            "VernacExtend",
            "f5b7a2ba58902b8ac872d5d4bf386db10ee131bb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (col_dec B P Q) as [HCol1|HNCol1].",
            "VernacExtend",
            "ca1c74530d002f02707568710f923acacd8e54e4"
        ],
        [
            "apply l11_31_1; auto; apply col_inangle2__out with A C; auto.",
            "VernacExtend",
            "0bb2e70c9c6d2407b02cab563a6deab5acdaded7"
        ],
        [
            "intro; apply HNCol; Col.",
            "VernacExtend",
            "bc1ad9e50076fe7ff6cb940cf13b0eb1e0e75e49"
        ],
        [
            "destruct (col_dec B A P) as [HCol2|HNCol2].",
            "VernacExtend",
            "e2e8a1c9868596e53b4760ea9eeccd49e6107b9a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Out B A P) by (apply col_in_angle_out with C; auto; intro; apply HNCol; Col).",
            "VernacExtend",
            "f82f86c0a994ec5407155cfdff7435d931cbd65a"
        ],
        [
            "exists Q; split; trivial.",
            "VernacExtend",
            "514d7bec862b6879d802b34feca5bf1511cc1e90"
        ],
        [
            "apply out_conga with A Q A Q; try (apply out_trivial); auto.",
            "VernacExtend",
            "5226f7e61aed49ee7cc4f60fdac60b49a92695eb"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (col_dec B C P) as [HCol3|HNCol3].",
            "VernacExtend",
            "8c5c376af216e5e66bd080af3e87ce3642eb43df"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Out B C P).",
            "VernacExtend",
            "d417c9377b54580b2d819740333c1df684f964e6"
        ],
        [
            "apply col_in_angle_out with A; auto; intro; apply HNCol; Col.",
            "VernacExtend",
            "d61754ad17e0886a96fa771b1ce580299d257c8e"
        ],
        [
            "apply lea_right_comm.",
            "VernacExtend",
            "e0d7607e49a0d5880afb60733de3de3a5dafb459"
        ],
        [
            "exists Q; split; trivial.",
            "VernacExtend",
            "514d7bec862b6879d802b34feca5bf1511cc1e90"
        ],
        [
            "apply out_conga with C Q C Q; try (apply out_trivial); auto.",
            "VernacExtend",
            "4d3209290997ed1da1d3bc4780571975e8872dee"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (col_dec B A Q) as [HCol4|HNCol4].",
            "VernacExtend",
            "50beffbb33a1ef624d2d4857b7519d2769b19015"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Out B A Q) by (apply col_in_angle_out with C; auto; intro; apply HNCol; Col).",
            "VernacExtend",
            "2f6335b1c07c3e07e6581992d318d521fb682288"
        ],
        [
            "apply lea_left_comm.",
            "VernacExtend",
            "ec98640628879e019e32000f9c43f96769a60abf"
        ],
        [
            "exists P; split; trivial.",
            "VernacExtend",
            "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
        ],
        [
            "apply out_conga with A P A P; try (apply out_trivial); auto.",
            "VernacExtend",
            "562032e46ef772f1651a4cfe96894dcc79aa3f2f"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (col_dec B C Q) as [HCol5|HNCol5].",
            "VernacExtend",
            "02455e1446ffefc2fb2c08c72fd13ad901509f59"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Out B C Q).",
            "VernacExtend",
            "f5a9f4f30f29c589e47f037ac3c558fc4550052c"
        ],
        [
            "apply col_in_angle_out with A; auto; intro; apply HNCol; Col.",
            "VernacExtend",
            "d61754ad17e0886a96fa771b1ce580299d257c8e"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists P; split; trivial.",
            "VernacExtend",
            "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
        ],
        [
            "apply out_conga with C P C P; try (apply out_trivial); auto.",
            "VernacExtend",
            "41a63715d405841096f734b8ba64f92d846be065"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (cop__one_or_two_sides B P A Q) as [HOS|HTS]; Col.",
            "VernacExtend",
            "279b6fc800c9e101692f12992bdefed9e32d1881"
        ],
        [
            "apply coplanar_perm_2, coplanar_trans_1 with C; Cop; Col.",
            "VernacExtend",
            "c6b873075fe933660ee25cc65dbebeb1b3bb0fbc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lea_trans with P B C; [|apply lea_comm]; apply inangle__lea; trivial.",
            "VernacExtend",
            "4489f3ff0467c6ebb1bee930796b059821327f85"
        ],
        [
            "apply os2__inangle; apply invert_one_side.",
            "VernacExtend",
            "e832dce3b6b1d73bdf67ffb2c9ab20e682ddd47d"
        ],
        [
            "exists A; split; Side; apply in_angle_two_sides; Col.",
            "VernacExtend",
            "617236a7c03f9d24ac9e3373a9915aa3f8495078"
        ],
        [
            "apply one_side_transitivity with A; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
            "VernacExtend",
            "89110ca43293b3acc709e36b2aba66b7b68d9e94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lea_trans with A B P; [apply lea_right_comm|]; apply inangle__lea; trivial.",
            "VernacExtend",
            "d59680c4e0247c42766eb85588d342f90c7efa63"
        ],
        [
            "apply os2__inangle; trivial.",
            "VernacExtend",
            "b71637a86c609ccc3b0970f7cc85fec916a5d3c1"
        ],
        [
            "apply invert_one_side, one_side_transitivity with C; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
            "VernacExtend",
            "2eb25470e581485dc0cad225c0ffcba51fa7d56c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_inangle_per__acute : forall A B C P, Per A B C -> InAngle P A B C -> CongA P B A P B C -> Acute A B P.",
            "VernacStartTheoremProof",
            "cede955859fe88cdee72a1ddb76c775f4f653704"
        ],
        [
            "intros A B C P HPer HP1 HP2.",
            "VernacExtend",
            "fe4b0eb676fcc0850212986e5d6f22e2781e60c4"
        ],
        [
            "assert (Hd := inangle_distincts A B C P HP1); spliter; clean.",
            "VernacExtend",
            "38e3b75eda0146d9189ab46267966e25de32b94d"
        ],
        [
            "assert (HNCol : ~ Col A B C) by (apply per_not_col; auto).",
            "VernacExtend",
            "e2c4d407264512f878f53e1ae6abef1beff45317"
        ],
        [
            "exists A, B, C; split; trivial.",
            "VernacExtend",
            "fa7cfc46900328fc7c9d20013fedaaa13f13f5a0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inangle__lea, HP1.",
            "VernacExtend",
            "726ebf14d50eede9c6033452c7f79594ef807ecf"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "assert (Per A B P) by (apply l11_17 with A B C, conga_sym; trivial).",
            "VernacExtend",
            "67e8c67295c0d0a6fa4126d882669c831ff400a1"
        ],
        [
            "apply HNCol, col_permutation_1, cop_per2__col with P; Cop.",
            "VernacExtend",
            "c3c137809f7be752a914a897c37229202e0da48a"
        ],
        [
            "apply l11_17 with A B P; trivial.",
            "VernacExtend",
            "dd3b19b7916b9f48822b97ac76525fc30c65675f"
        ],
        [
            "apply conga_comm, HP2.",
            "VernacExtend",
            "ac2565d9bc053da1faffda1797fcd7296a33e795"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_inangle2_per__acute : forall A B C P Q, Per A B C -> InAngle P A B C -> CongA P B A P B C -> InAngle Q A B C -> Acute P B Q.",
            "VernacStartTheoremProof",
            "7b98fbb0521c75eabdaac83c6b2d3f1fbef1513a"
        ],
        [
            "intros A B C P Q HPer HP1 HP2 HQ.",
            "VernacExtend",
            "0b2e710358b5761f44958fc914355ba2c1048a55"
        ],
        [
            "assert (HP' := l11_24 P A B C HP1).",
            "VernacExtend",
            "7d05985b8fb7bbd68c3fe35cd5fef8d75aa19f51"
        ],
        [
            "assert (HQ' := l11_24 Q A B C HQ).",
            "VernacExtend",
            "695f94c89a9ba6267d5dcc61824105eb8008d930"
        ],
        [
            "assert (Hd := inangle_distincts A B C P HP1); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
            "VernacExtend",
            "b42a152fb3490c94e0dbdc32098babe082a6eb05"
        ],
        [
            "assert (HNCol : ~ Col A B C) by (apply per_not_col; auto).",
            "VernacExtend",
            "e2c4d407264512f878f53e1ae6abef1beff45317"
        ],
        [
            "assert (HAcute : Acute A B P) by (apply conga_inangle_per__acute with C; assumption).",
            "VernacExtend",
            "004566d616da54accb733df79a5f68a7b128ea85"
        ],
        [
            "assert (HNCol1 : ~ Col P B A).",
            "VernacExtend",
            "1a1f425d39019180a772a9d41a98d2901d988551"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col P B C) by (apply (col_conga_col P B A); assumption).",
            "VernacExtend",
            "5c73382924259904015ff83ec8382538b3c334ac"
        ],
        [
            "apply HNCol; ColR.",
            "VernacExtend",
            "4d3843a49841e9758fac66d12e304c8d115992d6"
        ],
        [
            "assert (HNCol2 : ~ Col P B C) by (apply (ncol_conga_ncol P B A); assumption).",
            "VernacExtend",
            "52427238f61456e6670fc9193c270b9ee9b24882"
        ],
        [
            "assert (~ Bet A B C) by (intro; apply HNCol; Col).",
            "VernacExtend",
            "9948675729c0e306a4612638cbc59e41163747e4"
        ],
        [
            "destruct (col_dec B A Q).",
            "VernacExtend",
            "532c540895553d71b65999843b78b8f787edd9c0"
        ],
        [
            "assert (Out B A Q) by (apply col_in_angle_out with C; Col).",
            "VernacExtend",
            "af89120c7682aadd9f042c1077fe2bc9760abc3e"
        ],
        [
            "apply (acute_conga__acute A B P); trivial.",
            "VernacExtend",
            "f0b645a4b5bfb9494968cd7a30ab219ff711ad55"
        ],
        [
            "apply out_conga with A P P A; try (apply out_trivial); auto.",
            "VernacExtend",
            "d8fd50417d49021191d670807d29ad5848116c7c"
        ],
        [
            "apply conga_pseudo_refl; auto.",
            "VernacExtend",
            "df9b6043ebd1492b46b4fc504cdbe598621cd514"
        ],
        [
            "destruct (col_dec B C Q).",
            "VernacExtend",
            "de770b67ff210e2731fbf01f45ee2650a6fd7fc5"
        ],
        [
            "assert (Out B C Q) by (apply col_in_angle_out with A; Between; Col).",
            "VernacExtend",
            "f55fb3f963d5ac8989079830fa911a0f3734add7"
        ],
        [
            "apply (acute_conga__acute A B P); trivial.",
            "VernacExtend",
            "f0b645a4b5bfb9494968cd7a30ab219ff711ad55"
        ],
        [
            "apply out_conga with A P P C; try (apply out_trivial); auto.",
            "VernacExtend",
            "4b952e00c9d9576580500e26292f46bbb3ad105e"
        ],
        [
            "apply conga_left_comm, HP2.",
            "VernacExtend",
            "650c5275b64674a8ac3d734d9f538c2419bc07bd"
        ],
        [
            "destruct (col_dec B P Q).",
            "VernacExtend",
            "0e54161a8e92fa7898f5cd75b816f2de1b4f9a70"
        ],
        [
            "apply out__acute, col_inangle2__out with A C; assumption.",
            "VernacExtend",
            "62202c3e546ea2071722571af793034aef63214d"
        ],
        [
            "destruct (cop__one_or_two_sides B P A Q) as [HOS|HTS]; Col.",
            "VernacExtend",
            "279b6fc800c9e101692f12992bdefed9e32d1881"
        ],
        [
            "apply coplanar_perm_2, coplanar_trans_1 with C; Cop; Col.",
            "VernacExtend",
            "c6b873075fe933660ee25cc65dbebeb1b3bb0fbc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply acute_lea_acute with P B C.",
            "VernacExtend",
            "288e0893493124dc054e5fd6d4abf5c562ba4bb7"
        ],
        [
            "apply (acute_conga__acute A B P); try (apply conga_left_comm); assumption.",
            "VernacExtend",
            "fa67a85ce992097b6a507d228f8b90c204ad6cee"
        ],
        [
            "exists Q; split; [|apply conga_refl; auto].",
            "VernacExtend",
            "1709a7dd159762bb3644ad17e165cedf1513a56e"
        ],
        [
            "apply os2__inangle; apply invert_one_side.",
            "VernacExtend",
            "e832dce3b6b1d73bdf67ffb2c9ab20e682ddd47d"
        ],
        [
            "exists A; split; Side; apply in_angle_two_sides; Col.",
            "VernacExtend",
            "617236a7c03f9d24ac9e3373a9915aa3f8495078"
        ],
        [
            "apply one_side_transitivity with A; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
            "VernacExtend",
            "89110ca43293b3acc709e36b2aba66b7b68d9e94"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply acute_lea_acute with A B P; trivial.",
            "VernacExtend",
            "8f0dcb05f5c3821cd1f2d820087dc0ccf37eae12"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists Q; split; [|apply conga_pseudo_refl; auto].",
            "VernacExtend",
            "ce346f1700a707e54a00b7ab4fcbe0d9f304d9a7"
        ],
        [
            "apply os2__inangle; trivial.",
            "VernacExtend",
            "b71637a86c609ccc3b0970f7cc85fec916a5d3c1"
        ],
        [
            "apply invert_one_side, one_side_transitivity with C; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
            "VernacExtend",
            "2eb25470e581485dc0cad225c0ffcba51fa7d56c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_os__ts : forall A O B P, ~ Col A O P -> LtA A O P A O B -> OS O A B P -> TS O P A B.",
            "VernacStartTheoremProof",
            "dee75659ebdc83f8776b518b7ed1312ad26e03bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold LtA in *.",
            "VernacExtend",
            "802c232fa354dc638937352b485ceb094cba03d6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold LeA in *.",
            "VernacExtend",
            "8e6fc1f965ce7ec5df3fa3fdef94fa190195654c"
        ],
        [
            "ex_and H0 P'.",
            "VernacExtend",
            "d7ce446fba2400907e9b59523e9b2814ea989a1f"
        ],
        [
            "assert(~Col A O B).",
            "VernacExtend",
            "65c83889040b26e98bcfb797156d6500146cee5d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold OS in H1.",
            "VernacExtend",
            "89ed54cd4b94bb916409452fa77e5c520785b620"
        ],
        [
            "ex_and H1 R.",
            "VernacExtend",
            "5257691d61e952759baea3f313ecb8d2ee2333a7"
        ],
        [
            "unfold TS in H1.",
            "VernacExtend",
            "68dff6c354f305bd0012d3b37d398c9a186b9a42"
        ],
        [
            "spliter; Col.",
            "VernacExtend",
            "06239419a8ae9f5ccd1709f02171cc6a620beb58"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "assert(TS O A B P).",
            "VernacExtend",
            "e5d10c245148f98c2d32d2ea96bf63e710045e0a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l9_9 in H6.",
            "VernacExtend",
            "2d583576b1c897128c8ade783338ba701a878674"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply(out_conga A O B A O B A P A B); try(apply out_trivial; auto).",
            "VernacExtend",
            "7378b03397d5c3ec4a8aa0e39e686785abeff852"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "right; Between.",
            "VernacExtend",
            "793f2de5ec920543c65702781626e8502d8f59b8"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "unfold InAngle in *.",
            "VernacExtend",
            "610395d1b01656200e0634f5317657d86675c7e8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H7 T.",
            "VernacExtend",
            "362428e9e958f6d10d98105b186be529d650cc98"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "treat_equalities; Col.",
            "VernacExtend",
            "e2a88752c5d3e641f3d6578fca426d15d650e77c"
        ],
        [
            "assert(HCop : Coplanar A O P P').",
            "VernacExtend",
            "c89216fbf04eabf8ab4233ce2b6d8c263a4b3f14"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply coplanar_trans_1 with B; Col.",
            "VernacExtend",
            "9810967cc48facd8550fe5385664c3f571273346"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "split; Col.",
            "VernacExtend",
            "aa5cae43f030df753431c4227d6e2b42d3c89c38"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HH:= conga_cop__or_out_ts A O P P' HCop H3).",
            "VernacExtend",
            "7383c5b19da32500095509fdffec832ab4f1e1eb"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(Out O P T) by (apply (l6_7) with P'; finish).",
            "VernacExtend",
            "b25bf68a6319d05c475ae17a28eaaff2b3c34957"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(A <> T).",
            "VernacExtend",
            "a6cf65e909f94d52936ae569382f1744cdfb4294"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "unfold TS in H9.",
            "VernacExtend",
            "33c05717809dd9341b5027dd01c726a82df2d781"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O A T P').",
            "VernacExtend",
            "40f1a90e7587be3433aee595892e03c393cf8d12"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS A O B T).",
            "VernacExtend",
            "d1b45e0bfa69ebe5a36efd8c1a32c66c80cc9b62"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "left; Col.",
            "VernacExtend",
            "d2e3bd81ed9425f47bc258c9ea77b499a02e4b15"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H4; Col.",
            "VernacExtend",
            "b7faaf12ca8a77ae3da539dd4c46387190af5ed0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O A B P').",
            "VernacExtend",
            "e63a16cc6cba29f704ef9ca9a1a84ee0fe05a5fd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (one_side_transitivity _ _ _ T); finish.",
            "VernacExtend",
            "bccd989c4f1d94c1e980223bab214115d53bc440"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(TS O A B P) by (apply(l9_8_2 _ _ P');finish).",
            "VernacExtend",
            "96706b9ad8b51a1872b1b44d6c216c89e3edc046"
        ],
        [
            "apply l9_9 in H14.",
            "VernacExtend",
            "311e8519ba63f3f6261b45c619b3445f172985b5"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_os__out : forall O A B C, CongA A O B A O C -> OS O A B C -> Out O B C.",
            "VernacStartTheoremProof",
            "4d7f86e25612b71c541b4e22a3385cbb1b6a6175"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(HH:= conga_cop__or_out_ts A O B C).",
            "VernacExtend",
            "9cf183fecc3dd91815caad9e0bcb3ba5db660b97"
        ],
        [
            "induction HH; Cop.",
            "VernacExtend",
            "7bf5fcf5fd1371eb101420de0db0c47f3801c319"
        ],
        [
            "apply invert_two_sides in H1.",
            "VernacExtend",
            "e4723713e38ac97c4109431d883d174585922a2f"
        ],
        [
            "apply l9_9 in H1.",
            "VernacExtend",
            "64060b6af01da38bce432bcff79d23a639e8f84c"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ex_suppa : forall A B C, A <> B -> B <> C -> exists D E F, SuppA A B C D E F.",
            "VernacStartTheoremProof",
            "0c6b5e24bc6078e711cdddabf3dcf76754c58137"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (segment_construction A B A B) as [A' []].",
            "VernacExtend",
            "fff9e5b9d85d2193d50b65cc19d2b3ad47bb947a"
        ],
        [
            "exists C, B, A'.",
            "VernacExtend",
            "6791865988a868e05f376d34b79e5395b85d05ff"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_distincts : forall A B C D E F, SuppA A B C D E F -> A <> B /\\ B <> C /\\ D <> E /\\ E <> F.",
            "VernacStartTheoremProof",
            "73754c939ebbdfb29fb08f1f50cf1f23c7b3b279"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H0 A'.",
            "VernacExtend",
            "0ffef9276c4b593db9887d80dd7b468c3faad229"
        ],
        [
            "apply conga_distinct in H1; spliter.",
            "VernacExtend",
            "834f87d399cec51eec090ba3f60d4341804ae08a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_right_comm : forall A B C D E F, SuppA A B C D E F -> SuppA A B C F E D.",
            "VernacStartTheoremProof",
            "89d93fea001faafcc189b5242f2515a47e1ec088"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "ex_and H0 A'.",
            "VernacExtend",
            "0ffef9276c4b593db9887d80dd7b468c3faad229"
        ],
        [
            "exists A'.",
            "VernacExtend",
            "1babc641ccb33afa456d76507d6a9aceb19c654a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply conga_left_comm, H1.",
            "VernacExtend",
            "c59a7ecfc37bfcee530458fb22d344c34604b71a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_left_comm : forall A B C D E F, SuppA A B C D E F -> SuppA C B A D E F.",
            "VernacStartTheoremProof",
            "c6b9f4e14beeb52c422792a6c14ff42fad7dc403"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H0 A'.",
            "VernacExtend",
            "0ffef9276c4b593db9887d80dd7b468c3faad229"
        ],
        [
            "apply conga_distinct in H1.",
            "VernacExtend",
            "2d57e33a154cd5abf672b4c4afa2e60e65f87a7d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct (segment_construction C B C B) as [C' []].",
            "VernacExtend",
            "2dbebb88f87a1a60d7125c8e716a95ab02aa77f7"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply conga_trans with C B A'; trivial.",
            "VernacExtend",
            "4c065655dc908c77697aa26bd1faea1221f60c52"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_left_comm, l11_14; Between.",
            "VernacExtend",
            "65a0c2feee108a82572ab997e798166f752a522a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_comm : forall A B C D E F, SuppA A B C D E F -> SuppA C B A F E D.",
            "VernacStartTheoremProof",
            "e72a7cca3729026ec5f35f14c83a3ed5511c0b91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply suppa_left_comm, suppa_right_comm, H.",
            "VernacExtend",
            "1e039c432dee4725c5af1e20df3e9eb08e5e5e0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_sym : forall A B C D E F, SuppA A B C D E F -> SuppA D E F A B C.",
            "VernacStartTheoremProof",
            "1ab884f411a0ff7c5d61283cff7cdccc7ceda422"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H0 A'.",
            "VernacExtend",
            "0ffef9276c4b593db9887d80dd7b468c3faad229"
        ],
        [
            "apply conga_distinct in H1; spliter.",
            "VernacExtend",
            "834f87d399cec51eec090ba3f60d4341804ae08a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct (segment_construction D E D E) as [D' []].",
            "VernacExtend",
            "fb3a9cb11d9832c92f154655e19f86c2c3f4d98c"
        ],
        [
            "exists D'.",
            "VernacExtend",
            "df6eb3da32dce2b909580514bdf7e8956c2b026e"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_right_comm, l11_13 with A' D; Between.",
            "VernacExtend",
            "56bba27fbf385d8a7076bba8d63acbdeb05302d0"
        ],
        [
            "apply conga_sym, conga_right_comm, H1.",
            "VernacExtend",
            "022c7147940027c23e25abb03730baafc263796b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga2_suppa__suppa : forall A B C D E F A' B' C' D' E' F', CongA A B C A' B' C' -> CongA D E F D' E' F' -> SuppA A B C D E F -> SuppA A' B' C' D' E' F'.",
            "VernacStartTheoremProof",
            "7090a3c7dd9ab8be847cd7d494675b9cdf8d408d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (SuppA A B C D' E' F').",
            "VernacExtend",
            "200a86f968bac3c925cb30de4888da8af802398b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold SuppA in *; spliter.",
            "VernacExtend",
            "c80a6e4fea0effd209c2837a48d6e74c6af0cef0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "ex_and H2 A0.",
            "VernacExtend",
            "95abaf72ad1e1fdbc1b4980ddc3c3df06c9d4da4"
        ],
        [
            "exists A0.",
            "VernacExtend",
            "d1e78844214f389a204e3a2c9ee10f01755394b7"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply conga_trans with D E F; [apply conga_sym|]; assumption.",
            "VernacExtend",
            "0c270038ca6ba101ba853e12de0a69d901fcf680"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply suppa_sym.",
            "VernacExtend",
            "b87b8d594d7b747417909923d6742c97a8e8c967"
        ],
        [
            "apply suppa_sym in H2.",
            "VernacExtend",
            "4d4b1dc4acac1b45adc55239cc5377b9c9cfd968"
        ],
        [
            "unfold SuppA in H2; spliter.",
            "VernacExtend",
            "298396447986fc56c70b0c5b0d67dfce5b2c9fb6"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "ex_and H3 D0.",
            "VernacExtend",
            "018b581b421193d39ab5582113065bdaac1bac7b"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply conga_trans with A B C; [apply conga_sym|]; assumption.",
            "VernacExtend",
            "848c6cf444ca6ecd49a0d5305e8619625a53e6fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa2__conga456 : forall A B C D E F D' E' F', SuppA A B C D E F -> SuppA A B C D' E' F' -> CongA D E F D' E' F'.",
            "VernacStartTheoremProof",
            "d2ee20fc7d322bda8a7b16cbc120a818a42c5267"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H2 A'.",
            "VernacExtend",
            "b19ea0ae3f7c88386cb571c421190d71eb01a47f"
        ],
        [
            "ex_and H1 A''.",
            "VernacExtend",
            "290524c27e67a53e35aab9ddf77de7c33e4c886c"
        ],
        [
            "apply conga_trans with C B A'; trivial.",
            "VernacExtend",
            "4c065655dc908c77697aa26bd1faea1221f60c52"
        ],
        [
            "apply conga_trans with C B A''; [|apply conga_sym, H4].",
            "VernacExtend",
            "8f5536419f1f7ac7973df40f7c8a733c97fcd743"
        ],
        [
            "apply conga_distinct in H3.",
            "VernacExtend",
            "5da341328fc3fdddba1adccf6aa48f15c181abfc"
        ],
        [
            "apply conga_distinct in H4.",
            "VernacExtend",
            "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply out2__conga.",
            "VernacExtend",
            "c1ea59b8b4879707463eec489350ba6d8db25284"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "apply l6_2 with A; Between.",
            "VernacExtend",
            "393a4938baa29bae6ecb8d9d0bc55b84c692a904"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa2__conga123 : forall A B C D E F A' B' C', SuppA A B C D E F -> SuppA A' B' C' D E F -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "1c6a1229f52d6cd2860e3a031295b4a8275350a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (suppa2__conga456 D E F); apply suppa_sym; assumption.",
            "VernacExtend",
            "829cf7fb583f709ba77b1e5199aa256ab1265ce3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_out__suppa : forall A B C D E F, A <> B -> B <> C -> Bet A B C -> Out E D F -> SuppA A B C D E F.",
            "VernacStartTheoremProof",
            "69d7f01208a669eb4b43c2dbae6a85391b809bac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply l11_21_b; trivial.",
            "VernacExtend",
            "fb6c9859c865472773ee6f2741b1969e90d8f99f"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_suppa__out : forall A B C D E F, Bet A B C -> SuppA A B C D E F -> Out E D F.",
            "VernacStartTheoremProof",
            "52be9f16f3711c71542886f2fd6968ad3b42f976"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Hd := H0).",
            "VernacExtend",
            "c69a123d85c581178d0b425115b3140d85d1b81f"
        ],
        [
            "apply suppa_distincts in Hd; spliter.",
            "VernacExtend",
            "704fd96b9eb18c22dd5cfaa8370463ff11753944"
        ],
        [
            "apply (l11_21_a C B C).",
            "VernacExtend",
            "718f7206a2d0df66f25a8aceb6a0db1265ae0cb5"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "apply (suppa2__conga456 A B C); trivial.",
            "VernacExtend",
            "bd1a6f2c018732073216cb1bae2d91e7dd854702"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma out_suppa__bet : forall A B C D E F, Out B A C -> SuppA A B C D E F -> Bet D E F.",
            "VernacStartTheoremProof",
            "bf5df54761fc55364f041ca15079cf860de212e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (segment_construction A B A B) as [B' []].",
            "VernacExtend",
            "9011ef652445c6e723daaa28811cadd3d491e655"
        ],
        [
            "apply (bet_conga__bet A B B'); trivial.",
            "VernacExtend",
            "48a5b0688e0edf5c4f8a63dba2dabe4c46f3933a"
        ],
        [
            "apply (suppa2__conga456 A B C); trivial.",
            "VernacExtend",
            "bd1a6f2c018732073216cb1bae2d91e7dd854702"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply suppa_sym, bet_out__suppa; auto.",
            "VernacExtend",
            "f9cbc83d0b93369446a8af8c6d8910558b2034a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per_suppa__per : forall A B C D E F, Per A B C -> SuppA A B C D E F -> Per D E F.",
            "VernacStartTheoremProof",
            "06ae8c2b4a99cdcd5ef765ca367423fc34346e07"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H1 A'.",
            "VernacExtend",
            "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
        ],
        [
            "apply (l11_17 C B A'); [|apply conga_sym, H2].",
            "VernacExtend",
            "d1d6252ff4bd2f8252b96b32067ba9f2665b5134"
        ],
        [
            "apply conga_distinct in H2; spliter.",
            "VernacExtend",
            "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
        ],
        [
            "apply per_col with A; Perp; Col.",
            "VernacExtend",
            "9c9af859092dee66cb72f43e185168f48ee6a2ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma per2__suppa : forall A B C D E F, A <> B -> B <> C -> D <> E -> E <> F -> Per A B C -> Per D E F -> SuppA A B C D E F.",
            "VernacStartTheoremProof",
            "57b8552646a4017c60db5f3988d2cce0bc703388"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ex_suppa A B C) as [D' [E' [F']]]; auto.",
            "VernacExtend",
            "43daadf100e8530ee4d6a25ab93dcc6762f5b8db"
        ],
        [
            "apply (conga2_suppa__suppa A B C D' E' F'); try apply conga_refl; auto.",
            "VernacExtend",
            "21509c395ad90fefff39a1f24993e0a4c167162f"
        ],
        [
            "assert (Hd := H5).",
            "VernacExtend",
            "0df3e18e47e8862afe0ff3fabf32c459b2ee4e81"
        ],
        [
            "apply suppa_distincts in Hd; spliter.",
            "VernacExtend",
            "704fd96b9eb18c22dd5cfaa8370463ff11753944"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "apply (per_suppa__per A B C); assumption.",
            "VernacExtend",
            "f1302aa8d59ce8c32ccffffdc52baf3d9fb74ecd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa__per : forall A B C, SuppA A B C A B C -> Per A B C.",
            "VernacStartTheoremProof",
            "7f32c4432f1ce2f768d98761daecafc7c8ef32ae"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H0 A'.",
            "VernacExtend",
            "0ffef9276c4b593db9887d80dd7b468c3faad229"
        ],
        [
            "apply l8_2, l11_18_2 with A'; trivial.",
            "VernacExtend",
            "a4fdf1ea0fcc2f21094f6f7a9161c312d09d71b9"
        ],
        [
            "apply conga_left_comm, H1.",
            "VernacExtend",
            "c59a7ecfc37bfcee530458fb22d344c34604b71a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_suppa__obtuse : forall A B C D E F, Acute A B C -> SuppA A B C D E F -> Obtuse D E F.",
            "VernacStartTheoremProof",
            "758006b3cf4e17b5ea701c848d6264a1da3ad954"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H1 A'.",
            "VernacExtend",
            "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
        ],
        [
            "apply (conga_obtuse__obtuse C B A'); [|apply conga_sym, H2].",
            "VernacExtend",
            "44ff07424a0fdaa3ad72e45d357cbfdb87889260"
        ],
        [
            "apply conga_distinct in H2; spliter.",
            "VernacExtend",
            "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
        ],
        [
            "apply obtuse_sym, (acute_bet__obtuse A); auto.",
            "VernacExtend",
            "3483bc6f9794f1e846a2e0f25f801fd5349f396c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma obtuse_suppa__acute : forall A B C D E F, Obtuse A B C -> SuppA A B C D E F -> Acute D E F.",
            "VernacStartTheoremProof",
            "7c510b1bc4d2e2cb2092d016664252c6d094af3e"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H1 A'.",
            "VernacExtend",
            "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
        ],
        [
            "apply (acute_conga__acute C B A'); [|apply conga_sym, H2].",
            "VernacExtend",
            "24dffacdd9cba7b1470f6fb00a8bf0a9c0e53bd1"
        ],
        [
            "apply conga_distinct in H2; spliter.",
            "VernacExtend",
            "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
        ],
        [
            "apply acute_sym, (bet_obtuse__acute A); auto.",
            "VernacExtend",
            "54e84a6ef23b527bc968d3414fb747ab377ede24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lea_suppa2__lea : forall A B C D E F A' B' C' D' E' F', SuppA A B C A' B' C' -> SuppA D E F D' E' F' -> LeA A B C D E F -> LeA D' E' F' A' B' C'.",
            "VernacStartTheoremProof",
            "d89d611c51c0957696f61da649b92d48103931b3"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H3 A0.",
            "VernacExtend",
            "12454b2d2269dd43ac16d85d7cebae9334a337bf"
        ],
        [
            "ex_and H2 D0.",
            "VernacExtend",
            "6e8402b8d350f91f3b5d6be641ed001f8faeb387"
        ],
        [
            "apply (l11_30 F E D0 C B A0); [|apply conga_sym; assumption..].",
            "VernacExtend",
            "fd482d8dee42b05f9072ab60f703814142880561"
        ],
        [
            "apply conga_distinct in H4.",
            "VernacExtend",
            "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
        ],
        [
            "apply conga_distinct in H5.",
            "VernacExtend",
            "b63f087782dc2c27491bf135c4ca03e3e273c464"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply lea_comm, l11_36 with D A; Between.",
            "VernacExtend",
            "f10871b9a444fe9e5e6ce4fd585061adf557df74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lta_suppa2__lta : forall A B C D E F A' B' C' D' E' F', SuppA A B C A' B' C' -> SuppA D E F D' E' F' -> LtA A B C D E F -> LtA D' E' F' A' B' C'.",
            "VernacStartTheoremProof",
            "d06bb936672b7046e9a2f006294e67370422c861"
        ],
        [
            "unfold SuppA.",
            "VernacExtend",
            "f11b75e4aef748c4da10d48087a2392925a12e86"
        ],
        [
            "intros; spliter.",
            "VernacExtend",
            "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
        ],
        [
            "ex_and H3 A0.",
            "VernacExtend",
            "12454b2d2269dd43ac16d85d7cebae9334a337bf"
        ],
        [
            "ex_and H2 D0.",
            "VernacExtend",
            "6e8402b8d350f91f3b5d6be641ed001f8faeb387"
        ],
        [
            "apply (conga_preserves_lta F E D0 C B A0); [apply conga_sym; assumption..|].",
            "VernacExtend",
            "06fa52cb6d6453a2b4b5fa6f8ad174784ed7a308"
        ],
        [
            "apply conga_distinct in H4.",
            "VernacExtend",
            "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
        ],
        [
            "apply conga_distinct in H5.",
            "VernacExtend",
            "b63f087782dc2c27491bf135c4ca03e3e273c464"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply lta_comm, bet2_lta__lta with A D; Between.",
            "VernacExtend",
            "d243ac1ae5707f52f2c56b642895a4bf70e0ab26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma suppa_dec : forall A B C D E F, SuppA A B C D E F \\/ ~ SuppA A B C D E F.",
            "VernacStartTheoremProof",
            "55c4701df52f29fc97134f97bae5dc93de34dd77"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "right; intros []; auto.",
            "VernacExtend",
            "74ce6151f62d564cc1f912194f1129658a5e6c20"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "right; intro Habs; apply suppa_distincts in Habs; spliter; auto.",
            "VernacExtend",
            "5ba8c02b9caa16a099370f084387ecf14d30904b"
        ],
        [
            "destruct (ex_suppa A B C) as [D' [E' [F']]]; auto.",
            "VernacExtend",
            "43daadf100e8530ee4d6a25ab93dcc6762f5b8db"
        ],
        [
            "induction (conga_dec D' E' F' D E F).",
            "VernacExtend",
            "963597eaa7566d377107f6ec91a4ba3d93f6a068"
        ],
        [
            "left; apply (conga2_suppa__suppa A B C D' E' F'); try apply conga_refl; auto.",
            "VernacExtend",
            "fb3feee224935f14880cb4726b1138711bcdfc2c"
        ],
        [
            "right; intro; apply H2, (suppa2__conga456 A B C); assumption.",
            "VernacExtend",
            "95173c56977a82712f37b155f1b678c044e4bea4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T11_2.",
            "VernacEndSegment",
            "65506686be30d08149c72010f4e967738d0122ff"
        ],
        [
            "Ltac not_exist_hyp4 A B C D E F G H := first [not_exist_hyp_comm A B | not_exist_hyp_comm C D | not_exist_hyp_comm E F | not_exist_hyp_comm G H].",
            "VernacExtend",
            "2cba7a71c75da95107709f2ead6cf6e8d5abc15f"
        ],
        [
            "Ltac not_exist_hyp5 A B C D E F G H I J := first [not_exist_hyp_comm A B | not_exist_hyp_comm C D | not_exist_hyp_comm E F | not_exist_hyp_comm G H | not_exist_hyp_comm I J].",
            "VernacExtend",
            "159764f415996e9b05ba79de753ae12c8caa99a5"
        ],
        [
            "Ltac not_exist_hyp6 A B C D E F G H I J K L := first [not_exist_hyp_comm A B | not_exist_hyp_comm C D | not_exist_hyp_comm E F | not_exist_hyp_comm G H | not_exist_hyp_comm I J | not_exist_hyp_comm K L].",
            "VernacExtend",
            "bbb180676e1e151ab097942759c64fdcaa18f6f2"
        ],
        [
            "Ltac assert_diffs := repeat match goal with | H:(~Col ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp3 X1 X2 X1 X3 X2 X3; assert (h := not_col_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:(~Bet ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp2 X1 X2 X2 X3; assert (h := not_bet_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq12__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq21__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq23__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?C <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq32__neq A B C H H2);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff_2 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?C <> ?D |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_3 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?D <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_4 A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D (swap_diff B A H2) H);clean_reap_hyps | H:Lt ?A ?B ?C ?D |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= lt_diff A B C D H);clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?B |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B I A); assert (T:= midpoint_distinct_1 I A B (swap_diff B A H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?A |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?A<>?I |- _ => let T:= fresh in (not_exist_hyp2 I B A B); assert (T:= midpoint_distinct_2 I A B (swap_diff A I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?I<>?B |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B H2 H); decompose [and] T;clear T;clean_reap_hyps | H:Midpoint ?I ?A ?B, H2 : ?B<>?I |- _ => let T:= fresh in (not_exist_hyp2 I A A B); assert (T:= midpoint_distinct_3 I A B (swap_diff B I H2) H); decompose [and] T;clear T;clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?A<>?B |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct A B C H H2); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?B<>?A |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct A B C H (swap_diff B A H2)); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?B<>?C |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct_1 A B C H H2); clean_reap_hyps | H:Per ?A ?B ?C, H2 : ?C<>?B |- _ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= per_distinct_1 A B C H (swap_diff C B H2)); clean_reap_hyps | H:Perp ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_distinct A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Perp_at ?X ?A ?B ?C ?D |- _ => let T:= fresh in (not_exist_hyp2 A B C D); assert (T:= perp_in_distinct X A B C D H); decompose [and] T;clear T;clean_reap_hyps | H:Out ?A ?B ?C |- _ => let T:= fresh in (not_exist_hyp2 A B A C); assert (T:= out_distinct A B C H); decompose [and] T;clear T;clean_reap_hyps | H:TS ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp6 A B A C A D B C B D C D; assert (h := ts_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:OS ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp5 A B A C A D B C B D; assert (h := os_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:~ Coplanar ?A ?B ?C ?D |- _ => let h := fresh in not_exist_hyp6 A B A C A D B C B D C D; assert (h := ncop_distincts A B C D H);decompose [and] h;clear h;clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= conga_diff1 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm B C); assert (T:= conga_diff2 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm A' B'); assert (T:= conga_diff45 A B C A' B' C' H);clean_reap_hyps | H:CongA ?A ?B ?C ?A' ?B' ?C' |- _ => let T:= fresh in (not_exist_hyp_comm B' C'); assert (T:= conga_diff56 A B C A' B' C' H);clean_reap_hyps | H:(InAngle ?P ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp3 A B C B P B; assert (h := inangle_distincts A B C P H);decompose [and] h;clear h;clean_reap_hyps | H:LeA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := lea_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:LtA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := lta_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:(Acute ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp2 A B B C; assert (h := acute_distincts A B C H);decompose [and] h;clear h;clean_reap_hyps | H:(Obtuse ?A ?B ?C) |- _ => let h := fresh in not_exist_hyp2 A B B C; assert (h := obtuse_distincts A B C H);decompose [and] h;clear h;clean_reap_hyps | H:SuppA ?A ?B ?C ?D ?E ?F |- _ => let h := fresh in not_exist_hyp4 A B B C D E E F; assert (h := suppa_distincts A B C D E F H);decompose [and] h;clear h;clean_reap_hyps | H:(Orth_at ?X ?A ?B ?C ?U ?V) |- _ => let h := fresh in not_exist_hyp4 A B A C B C U V; assert (h := orth_at_distincts A B C U V X H);decompose [and] h;clear h;clean_reap_hyps | H:(Orth ?A ?B ?C ?U ?V) |- _ => let h := fresh in not_exist_hyp4 A B A C B C U V; assert (h := orth_distincts A B C U V H);decompose [and] h;clear h;clean_reap_hyps end.",
            "VernacExtend",
            "ae2a2b2499f9259fc7f5ee21969248f5158dc27d"
        ],
        [
            "Hint Resolve conga_refl conga_sym cong3_conga conga_pseudo_refl conga_trivial_1 conga_right_comm conga_left_comm conga_comm : conga.",
            "VernacHints",
            "3b9f435a7c5073be6063f74cc6f7e219df762e1f"
        ],
        [
            "Ltac CongA := auto with conga.",
            "VernacExtend",
            "fe1b482b2383d05a58be3dcf7d5fb940433233d4"
        ],
        [
            "Hint Resolve l11_31_1 l11_31_2 lta__lea lea_comm lea_right_comm lea_left_comm lea_asym lea121345 inangle__lea conga__lea conga__lea456123 lea_refl acute_per__lta obtuse_per__lta acute_obtuse__lta : lea.",
            "VernacHints",
            "bf8c688b68e3976768c337c06e979ad0753dd41c"
        ],
        [
            "Ltac Lea := auto with lea.",
            "VernacExtend",
            "7e23d43f88d532af2899b86f724cbcccf8cf2f53"
        ],
        [
            "Section T11_3.",
            "VernacBeginSection",
            "5f42c378bf413f07419aae0047a79acf3190419a"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma acute_one_side_aux : forall P A O B, OS O A P B -> Acute A O P -> Perp O A B O -> OS O B A P.",
            "VernacStartTheoremProof",
            "75ead192b45753f0fd4b59a296348fc55bbead50"
        ],
        [
            "intros P A O B HOS.",
            "VernacExtend",
            "115511df00c606fffe61b20fb528b606635d0090"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Acute in H.",
            "VernacExtend",
            "ab06f9f66f851379d797edb3fa0d8444c7ac6132"
        ],
        [
            "ex_and H A'.",
            "VernacExtend",
            "5e920bdbf1d1ecd1e7799c941da260e3de675571"
        ],
        [
            "ex_and H1 B'.",
            "VernacExtend",
            "e9234e7bbfd757c3101969808560b69dcb93d98a"
        ],
        [
            "ex_and H C'.",
            "VernacExtend",
            "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
        ],
        [
            "assert(Per A O B).",
            "VernacExtend",
            "4b83abbeb358b8349a9dcd815c66e99a722df1fb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_perp_in in H0.",
            "VernacExtend",
            "9cd8811b6170dca41c9760080f6faf699b3bb90a"
        ],
        [
            "apply perp_in_comm in H0.",
            "VernacExtend",
            "b9e06bfea049382e02170a652485dd62c6d2182b"
        ],
        [
            "apply perp_in_per in H0.",
            "VernacExtend",
            "5bcba6ac10901b94a40244429839da01bab51781"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(CongA A' B' C' A O B).",
            "VernacExtend",
            "9c9f6b11217589f2c4af3c1b552b5354af745617"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(LtA A O P A O B).",
            "VernacExtend",
            "2d69eea62dcd9e64ad45c06f6a8d96303474fec5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(conga_preserves_lta A O P A' B' C' A O P A O B); auto.",
            "VernacExtend",
            "eeb6aa62139b836fb6a56119d88bba602b8c15b0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_refl; auto.",
            "VernacExtend",
            "726097dd72623b98840271b6a4d826176b3d1e91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(~Col P O B).",
            "VernacExtend",
            "9f2e77d0d34af47d8ff80271391ea3919a9883cd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Per A O P).",
            "VernacExtend",
            "8763256b45d69ec13d3c872f3301227d54bf4f18"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (per_col A O B P); Col.",
            "VernacExtend",
            "5069b47b31dca63cccdf48161382d39bd1cef2ac"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold LtA in H4.",
            "VernacExtend",
            "bf2c706bf1e717c34dbfa99beff0a61b3604602a"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply(l11_16); auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(NC:~Col A O P).",
            "VernacExtend",
            "5ebf95d080e11f821a1a549894a62cf4ffaade1a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold OS in HOS.",
            "VernacExtend",
            "4924237c45752e16e46e606d51be9ae01b721c29"
        ],
        [
            "ex_and HOS R.",
            "VernacExtend",
            "6021c37f8f0473ac2ec9951ed95ecc45e249ce53"
        ],
        [
            "unfold TS in H6.",
            "VernacExtend",
            "7321a87dcf2b6a192f0217d5f17f815bc7fac14b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(TS O B A P \\/ OS O B A P).",
            "VernacExtend",
            "6b04ee961cbd9bcfbdbc6ff2c759112b107bca57"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(cop__one_or_two_sides O B A P); Cop.",
            "VernacExtend",
            "b64bf27f4eacc2a17105acb1b0a77979563d23d8"
        ],
        [
            "apply perp_not_col in H0; Col.",
            "VernacExtend",
            "a43b016ebea555af988d0cbbc908d88685be1277"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "unfold TS in H6.",
            "VernacExtend",
            "7321a87dcf2b6a192f0217d5f17f815bc7fac14b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H8 T.",
            "VernacExtend",
            "ce202b0d1833389afdf54c6cc925ed6e95e3bf05"
        ],
        [
            "assert(O <> T).",
            "VernacExtend",
            "ce29b3483d186bc28504f60dbb0c165d0421a734"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert(LeA A O B A O P).",
            "VernacExtend",
            "8fcfd38c163aed6078a3c748f091ff0a0d5c8621"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply(l11_31_2 A O B A O P); auto.",
            "VernacExtend",
            "28b45e5c98eb9716e430b52e5224b4d9a8682009"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(~LtA A O P A O B).",
            "VernacExtend",
            "05a5280fb14a03d426c1b16b5fe690ef3e19b05a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply lea__nlta.",
            "VernacExtend",
            "7b09d3a085972ccbc759ae2a20a1d203a410f683"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(InAngle T A O P).",
            "VernacExtend",
            "878307fdb05f34680473057fec3805860a0d8425"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold InAngle.",
            "VernacExtend",
            "26800be71d27e0dab351c9587e5270c0dffa3f13"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "finish.",
            "VernacExtend",
            "0eb65e2600b0e543719211fd4fd520bb87987cf1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O A T P).",
            "VernacExtend",
            "19acef138c88f5f3b61af3122d333ef2cdb1c3c1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply out_one_side.",
            "VernacExtend",
            "d208133ef531a0c6e14938989b19b134317037f3"
        ],
        [
            "right; Col.",
            "VernacExtend",
            "290128493add6e6a127c5ba3c5988e64f02b21c9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply perp_not_col in H0.",
            "VernacExtend",
            "dde1ce5155f3ff8c64a8d4dfc2dc6cd22b80979d"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "apply H0; Col.",
            "VernacExtend",
            "158b34c89c5ac63122829ddb57d299c3deaed2aa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O A T B).",
            "VernacExtend",
            "85df9b41fe9fc19804658c86f49a9cbdd8d847df"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (one_side_transitivity _ _ _ P); auto.",
            "VernacExtend",
            "743443a05a321efb16c5efbbeccc735704bee066"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct(l9_19 O A T B O); Col.",
            "VernacExtend",
            "849bb06d7aec1fee8fc98c8a3ad893401796591b"
        ],
        [
            "apply H14 in H13.",
            "VernacExtend",
            "04d472cae2376f6646d64f2c4d70defdd3a8e5a8"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(InAngle B A O P).",
            "VernacExtend",
            "9bf215c85380a6d9dca3d06aa12690bb9640d447"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply(l11_25 T A O P A P B H11); auto; try(apply out_trivial; auto).",
            "VernacExtend",
            "3006c8a747f8d104e95d72df3417a05c4dbc22e7"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply inangle__lea in H17.",
            "VernacExtend",
            "454b4105ccbbf135a3fbe967248e387802059ad5"
        ],
        [
            "apply lea__nlta in H17.",
            "VernacExtend",
            "29c9d7cbc17283caa6f8ef4eae38e18160787843"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_one_side_aux0 : forall P A O B, Col A O P -> Acute A O P -> Perp O A B O -> OS O B A P.",
            "VernacStartTheoremProof",
            "7899a360463313a0bea05017255201f9a607e458"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(LtA A O P A O B).",
            "VernacExtend",
            "2d69eea62dcd9e64ad45c06f6a8d96303474fec5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply(acute_per__lta A O P A O B H0); auto.",
            "VernacExtend",
            "dde861ab79c833a4880617b7df04ea16d3ae10eb"
        ],
        [
            "apply perp_perp_in in H1.",
            "VernacExtend",
            "009a14a8104bf1d74c6975b9aaaa9386aa499dec"
        ],
        [
            "apply perp_in_comm in H1.",
            "VernacExtend",
            "5d3337425097544a00bc1302e326803fd350e377"
        ],
        [
            "apply perp_in_per in H1.",
            "VernacExtend",
            "115053618db5c042b2735cd02e424eedfd653d62"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Out O A P).",
            "VernacExtend",
            "01426bdf381049bd6e0e632d1d64c206d1bffe3a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert(LeA A O B A O P).",
            "VernacExtend",
            "8fcfd38c163aed6078a3c748f091ff0a0d5c8621"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l11_31_2; auto.",
            "VernacExtend",
            "56ded40783ae3142836c891eb28367d2183e2280"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply lea__nlta in H3.",
            "VernacExtend",
            "202b0541697d2e42093e4080022131b1b663e226"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "right; Between.",
            "VernacExtend",
            "793f2de5ec920543c65702781626e8502d8f59b8"
        ],
        [
            "left; Between.",
            "VernacExtend",
            "207a8435109ec96ec7baab8ba3707f9022610728"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply(out_one_side O B A P); auto.",
            "VernacExtend",
            "02501a7d00c97c7331de4be4ab8ee24367856356"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply perp_not_col in H1.",
            "VernacExtend",
            "2380e97962ec4eb92e73beb6f48db5c95d675690"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_cop_perp__one_side : forall P A O B, Acute A O P -> Perp O A B O -> Coplanar A B O P -> OS O B A P.",
            "VernacStartTheoremProof",
            "898d0cf9342bad4a5448d25a149a536b49beb785"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(col_dec A O P).",
            "VernacExtend",
            "d3392e04f1a9c726c07f29ba650bfee499aed117"
        ],
        [
            "apply(acute_one_side_aux0); auto.",
            "VernacExtend",
            "42224d137f1fb4cd8de4b09411ec2a0f3fb67fb0"
        ],
        [
            "assert(~Col A O B).",
            "VernacExtend",
            "65c83889040b26e98bcfb797156d6500146cee5d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_not_col in H0.",
            "VernacExtend",
            "dde1ce5155f3ff8c64a8d4dfc2dc6cd22b80979d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(TS O A P B \\/ OS O A P B).",
            "VernacExtend",
            "14329a7118a0f9e385c6d87dbed8696388d7ebbc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(cop__one_or_two_sides O A P B); Col.",
            "VernacExtend",
            "bfddcb0232e87d536335dd4bbffc71fb600a7821"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "assert(HC:=symmetric_point_construction B O).",
            "VernacExtend",
            "8eed0a489424b3495e06cd3fa0379bfec606a9b2"
        ],
        [
            "ex_and HC Bs.",
            "VernacExtend",
            "148ca861ceba20105ded488588d2979781291e67"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(TS O A Bs B).",
            "VernacExtend",
            "ffd602232fb83a6dede586fa34bf756ee6a0978a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "split; Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O A P Bs).",
            "VernacExtend",
            "28cf88609fc7046883a495a851fb095e74bdaf56"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(l9_8_1 _ _ _ _ B); auto.",
            "VernacExtend",
            "c12c330ea9ad8f289a0e905759cc1a68c987bdb2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Perp O A Bs O ).",
            "VernacExtend",
            "0d53d6f88072ba7bcdbcf78c14d4de9565fc95ea"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_sym.",
            "VernacExtend",
            "6ffb8a5ce8bd3f2edbf495264722c5c7b6eebd74"
        ],
        [
            "apply perp_comm.",
            "VernacExtend",
            "add9bb0c8b1d0ff8b454ddb4fdc5f0a3c1e4d0a4"
        ],
        [
            "apply (perp_col _ B); Perp.",
            "VernacExtend",
            "072cf738366c8af2199713e109c848062ddddec8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H3; Col.",
            "VernacExtend",
            "07d0850bd548b476a2c6bbc891669c5ee49e5b8d"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(OS O Bs A P).",
            "VernacExtend",
            "a8bd8216cc7204d2c46267c49ad78af76ae3364d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(acute_one_side_aux P A O Bs); auto.",
            "VernacExtend",
            "c4f6d3f7aa76a2c068a643204089e4e8a09bf1be"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply(col_one_side _ Bs); Col.",
            "VernacExtend",
            "e059d4b38e6637914b5c99194f1f7abb1dd2ae22"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H3; Col.",
            "VernacExtend",
            "07d0850bd548b476a2c6bbc891669c5ee49e5b8d"
        ],
        [
            "apply(acute_one_side_aux P A O B); auto.",
            "VernacExtend",
            "dea048797d8e32ca53051634be8d7731f087f214"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T11_3.",
            "VernacEndSegment",
            "96b5899f3fd8afd516042c4e4112c11b1a4a3d7f"
        ],
        [
            "Section T11_2D.",
            "VernacBeginSection",
            "5c256315862b8d277e39edee00b2f72206c3b9f2"
        ],
        [
            "Context `{T2D:Tarski_2D}.",
            "VernacContext",
            "14f267f1df37e6960d41f261868f4676668c9138"
        ],
        [
            "Lemma conga__or_out_ts : forall A B C C', CongA A B C A B C' -> Out B C C' \\/ TS A B C C'.",
            "VernacStartTheoremProof",
            "9eac4c7313dd89a4cdf5b6bcd793e03861e16afe"
        ],
        [
            "intros A B C C'.",
            "VernacExtend",
            "afb2f8551fb2c8b3788a1f733a5bc6a1e929d0eb"
        ],
        [
            "apply conga_cop__or_out_ts, all_coplanar.",
            "VernacExtend",
            "e0062720408cae78b85b2601397610ee37b0495f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga_out_reflectl__out : forall A B C P T T', ~ Out B A C -> CongA P B A P B C -> Out B A T -> ReflectL T T' B P -> Out B C T'.",
            "VernacStartTheoremProof",
            "0bf69352476b281f5723de4456b5c865e2e2600a"
        ],
        [
            "intros A B C P T T' H.",
            "VernacExtend",
            "4b043a81e46ff318ed754aba97c8d7cba8cb76b7"
        ],
        [
            "assert (H1 := all_coplanar A B C P).",
            "VernacExtend",
            "0c07ea99c339e994a78407e7151cb320a31d7132"
        ],
        [
            "apply conga_cop_out_reflectl__out; assumption.",
            "VernacExtend",
            "b05e33b33bfc67cb48d95672fa5e2aa8e743b83d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_conga_reflectl__col : forall A B C P T T', ~ Out B A C -> CongA P B A P B C -> Col B A T -> ReflectL T T' B P -> Col B C T'.",
            "VernacStartTheoremProof",
            "999eb2dfc6371cb4bcda24cb3e5ada693e3ee22d"
        ],
        [
            "intros A B C P T T' H.",
            "VernacExtend",
            "4b043a81e46ff318ed754aba97c8d7cba8cb76b7"
        ],
        [
            "assert (H1 := all_coplanar A B C P).",
            "VernacExtend",
            "0c07ea99c339e994a78407e7151cb320a31d7132"
        ],
        [
            "apply col_conga_cop_reflectl__col; assumption.",
            "VernacExtend",
            "e3e3dc8845939bb1287d826393da067995fe9b32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma conga2__col : forall A B C P P', ~ Out B A C -> CongA P B A P B C -> CongA P' B A P' B C -> Col B P P'.",
            "VernacStartTheoremProof",
            "0c9bd9af6fa68e14324691c4ea799d42919f59a8"
        ],
        [
            "intros A B C P P' H H1 H2.",
            "VernacExtend",
            "30d3ec53767a09e38831ddc0657d8fe96443d5f1"
        ],
        [
            "assert (H3 := all_coplanar A B P P').",
            "VernacExtend",
            "4204d71158aa0c84965cf984cd370f6f97a8df87"
        ],
        [
            "assert (H4 := all_coplanar B C P P').",
            "VernacExtend",
            "f5a8ffe07033cea63f3793f891c2d6b22bcca6df"
        ],
        [
            "apply conga2_cop2__col with A C; assumption.",
            "VernacExtend",
            "ce4d716bcb8379dcf2327e9eb4f0bf144abc96d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inangle__ex_col_inangle : forall A B C P Q, ~ Out B A C -> InAngle P A B C -> exists R, InAngle R A B C /\\ P <> R /\\ Col P Q R.",
            "VernacStartTheoremProof",
            "66942940c89e4d419ad021d7f1fd842c3e41e5ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cop_inangle__ex_col_inangle; [assumption..|].",
            "VernacExtend",
            "652c81e94a6718b07f4d3aee88c12d0384593ea7"
        ],
        [
            "apply all_coplanar.",
            "VernacExtend",
            "034a4dfc295ed5a6bcc0689a3b1acb8bc51da2a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acute_perp__one_side : forall P A O B, Acute A O P -> Perp O A B O -> OS O B A P.",
            "VernacStartTheoremProof",
            "730a4c5dc0d0a3a8f933b83d9f8552a2d2667b63"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply acute_cop_perp__one_side; [assumption..|].",
            "VernacExtend",
            "6524f7d36ab4c4185bff838b953a58241fecec11"
        ],
        [
            "apply all_coplanar.",
            "VernacExtend",
            "034a4dfc295ed5a6bcc0689a3b1acb8bc51da2a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T11_2D.",
            "VernacEndSegment",
            "14fd923eca0f4f93592e21811474f33b2bb39a92"
        ]
    ],
    "proofs": [
        {
            "name": "l11_3",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 A'.",
                        "VernacExtend",
                        "227b4a120e097053aeca0d347ab53672b9405e56"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 C'.",
                        "VernacExtend",
                        "5e457575cd7bdd1128982abab35b55ad94ca418c"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 D'.",
                        "VernacExtend",
                        "5f0e3993c44ba64d3d9e836fe32624a9328d6f8a"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 F'.",
                        "VernacExtend",
                        "993fe541996125c11156a4aff649d6f08f36c84a"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "exists D'.",
                        "VernacExtend",
                        "df6eb3da32dce2b909580514bdf7e8956c2b026e"
                    ]
                },
                {
                    "command": [
                        "exists F'.",
                        "VernacExtend",
                        "031415fa97f3e96a2ede466c6b87bce353e062cf"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split;finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "apply cong_left_commutativity.",
                        "VernacExtend",
                        "929cbef25c9234253c2c6321d3d485d09f8d66f6"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11 with A D;finish.",
                        "VernacExtend",
                        "bb3e35b95e17cb88e4aded2d1beec2944b916666"
                    ]
                },
                {
                    "command": [
                        "apply cong_left_commutativity.",
                        "VernacExtend",
                        "929cbef25c9234253c2c6321d3d485d09f8d66f6"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11; eBetween; Cong.",
                        "VernacExtend",
                        "a45a9195a9235cdd880c40e09e9dbcfd33f12a82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_3_bis",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "ex_and H A'.",
                        "VernacExtend",
                        "5e920bdbf1d1ecd1e7799c941da260e3de675571"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 C'.",
                        "VernacExtend",
                        "1f2021fe4adb3d11368c967beff0696570a2eb75"
                    ]
                },
                {
                    "command": [
                        "ex_and H D'.",
                        "VernacExtend",
                        "a924c51055d65b2f8c4bb496a46f08674cec766a"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 F'.",
                        "VernacExtend",
                        "3ca680ba6d64d16f55a9b2e57977e2e9e7b29045"
                    ]
                },
                {
                    "command": [
                        "prolong B A A0 E D.",
                        "VernacExtend",
                        "ff4c74bde22af68fa251dd43cebcc3bbbfc5aaeb"
                    ]
                },
                {
                    "command": [
                        "prolong B C C0 E F.",
                        "VernacExtend",
                        "c7be7a31ff14024f9cb3a652017ed14f96fab275"
                    ]
                },
                {
                    "command": [
                        "prolong E D D0 B A.",
                        "VernacExtend",
                        "62c95138f2dbf9ba275803a334ed27b61708d51e"
                    ]
                },
                {
                    "command": [
                        "prolong E F F0 B C.",
                        "VernacExtend",
                        "534ed843b0ddd71be068979c470ca45b582bf8b8"
                    ]
                },
                {
                    "command": [
                        "assert(HH0:=H0).",
                        "VernacExtend",
                        "f7d33f7919f61d212620b53de1133fb9d8e4f6cc"
                    ]
                },
                {
                    "command": [
                        "assert(HH1:=H1).",
                        "VernacExtend",
                        "6c3c0a9879269335c53941cd8c3746911de37368"
                    ]
                },
                {
                    "command": [
                        "assert(HH2:=H2).",
                        "VernacExtend",
                        "6ecf4d582187bc5911e8ff3b185d84a1023ef143"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "unfold Out in HH.",
                        "VernacExtend",
                        "08ca3775e31ed0561f3114ba8ad9f6a77821af5a"
                    ]
                },
                {
                    "command": [
                        "unfold Out in HH0.",
                        "VernacExtend",
                        "237da86782c6278d136d41dcab8b7f38d2a8f7c2"
                    ]
                },
                {
                    "command": [
                        "unfold Out in HH1.",
                        "VernacExtend",
                        "32da31cabda7cd1b84bc1be21a3a6286a66ed38b"
                    ]
                },
                {
                    "command": [
                        "unfold Out in HH2.",
                        "VernacExtend",
                        "a2880a4868fa2a90d32debb710660904783e6603"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists A0.",
                        "VernacExtend",
                        "d1e78844214f389a204e3a2c9ee10f01755394b7"
                    ]
                },
                {
                    "command": [
                        "exists C0.",
                        "VernacExtend",
                        "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
                    ]
                },
                {
                    "command": [
                        "exists D0.",
                        "VernacExtend",
                        "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
                    ]
                },
                {
                    "command": [
                        "exists F0.",
                        "VernacExtend",
                        "6a5495edcaceeb7d2de63d96dc2e4579e05d77c3"
                    ]
                },
                {
                    "command": [
                        "repeat split; try (assumption).",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3 in H3.",
                        "VernacExtend",
                        "461caf48339a3135d1ac0be9b57c2d147234ff6f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B A0 E D0 /\\ Cong A' A0 D' D0).",
                        "VernacExtend",
                        "a4eb6b7e61636510a142ca2262dd91916ed9dbd7"
                    ]
                },
                {
                    "command": [
                        "eapply l11_aux with A D;finish.",
                        "VernacExtend",
                        "401cd82e1be5a68e7357b1936bd734dc5da92866"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B C0 E F0 /\\ Cong C' C0 F' F0).",
                        "VernacExtend",
                        "480d6ed5fa8a632f6c4c3c8745a76ba56c733ffe"
                    ]
                },
                {
                    "command": [
                        "eapply l11_aux with C F;finish.",
                        "VernacExtend",
                        "1f3af27d207704a4ab5bc9250c6d0b7bd0822c06"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 B A' A0 E D' D0) by (repeat split;finish).",
                        "VernacExtend",
                        "95b473d5334299ee56711be7d0ff1209796855bf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 B C' C0 E F' F0) by (repeat split;finish).",
                        "VernacExtend",
                        "77c6bd05411a8882f3edbf83d6dfc0249a0aa312"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C0 A' F0 D').",
                        "VernacExtend",
                        "6243f40cb9f0c2a71d9a0f49a3e6f77d0143d2e7"
                    ]
                },
                {
                    "command": [
                        "apply l4_16 with B C' E F'; unfold FSC;repeat split;finish;ColR.",
                        "VernacExtend",
                        "cbb47d931fca3463b37438806d58b64a910bc880"
                    ]
                },
                {
                    "command": [
                        "apply l4_16 with B A' E D'; unfold FSC;repeat split;finish;ColR.",
                        "VernacExtend",
                        "382c6f86acd8c13d042b6f69c7eff20f41ad6af5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_refl",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l11_3_bis.",
                        "VernacExtend",
                        "ff9ab530acc51ffd53857904554f59aadad107bf"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "repeat split; finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_sym",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 A0.",
                        "VernacExtend",
                        "12454b2d2269dd43ac16d85d7cebae9334a337bf"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 C0.",
                        "VernacExtend",
                        "5e3728f6bc260e79e62a276f4a81c5035abaa9da"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 D0.",
                        "VernacExtend",
                        "018b581b421193d39ab5582113065bdaac1bac7b"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 F0.",
                        "VernacExtend",
                        "9fb2afc4663d811b39758cbeefd8e3d7499b24f3"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists D0.",
                        "VernacExtend",
                        "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
                    ]
                },
                {
                    "command": [
                        "exists F0.",
                        "VernacExtend",
                        "6a5495edcaceeb7d2de63d96dc2e4579e05d77c3"
                    ]
                },
                {
                    "command": [
                        "exists A0.",
                        "VernacExtend",
                        "d1e78844214f389a204e3a2c9ee10f01755394b7"
                    ]
                },
                {
                    "command": [
                        "exists C0.",
                        "VernacExtend",
                        "f68384a7d0cd7d22bc5106ab7119de2a5da1b064"
                    ]
                },
                {
                    "command": [
                        "repeat split; finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_conga",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l11_4_1 in H.",
                        "VernacExtend",
                        "25d9fd5003bdf229f685ebcb3cef61052e7310a7"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_4_2.",
                        "VernacExtend",
                        "282267891160ee4ca163edce7f53f5a88efe26f3"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split;finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "eapply l6_7 with A0;finish.",
                        "VernacExtend",
                        "f65d0eedeb0bfb24c019c8c1516963f3855c466f"
                    ]
                },
                {
                    "command": [
                        "eapply l6_7 with C0;finish.",
                        "VernacExtend",
                        "007fc08a009add9410429087d71c7a55fd8008be"
                    ]
                },
                {
                    "command": [
                        "eapply l6_7 with A1;finish.",
                        "VernacExtend",
                        "fe55e8702dccab0c5b57fa6f5437eec3f9615673"
                    ]
                },
                {
                    "command": [
                        "eapply l6_7 with C1;finish.",
                        "VernacExtend",
                        "5600e1a152a08e56bb606e56a6243fcc9aed5923"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong3_diff",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "unfold Cong_3 in *.",
                        "VernacExtend",
                        "81846649e3ee6af32dc9d86caa3a4bf892f50899"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong3_diff2",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "unfold Cong_3 in *.",
                        "VernacExtend",
                        "81846649e3ee6af32dc9d86caa3a4bf892f50899"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong3_conga",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B') by (eauto using cong3_diff).",
                        "VernacExtend",
                        "89de3a8fe815db9a22712208768bba191aff5774"
                    ]
                },
                {
                    "command": [
                        "assert (B' <> C') by (eauto using cong3_diff2).",
                        "VernacExtend",
                        "4300979db11d19b19f65c9ed639a23205434e4cd"
                    ]
                },
                {
                    "command": [
                        "apply (l11_3_bis A B C A' B' C').",
                        "VernacExtend",
                        "671ba807ffb8a159ae5e04acd165434a6b2bc593"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "intuition finish.",
                        "VernacExtend",
                        "d5eedf3438b6ef30d3225e4eb41f48e52dc9d6f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong3_conga2",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H0.",
                        "VernacExtend",
                        "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 A0.",
                        "VernacExtend",
                        "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 C0.",
                        "VernacExtend",
                        "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 A2.",
                        "VernacExtend",
                        "d4c062c05c5505dd33be70597bc7c4c444e0e812"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 C2.",
                        "VernacExtend",
                        "787dc05f5e81df00dcf69119df92f143005e359c"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3 in H.",
                        "VernacExtend",
                        "20dd0202edd04c922189321a655c051034a59a81"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split;try solve [auto].",
                        "VernacExtend",
                        "5770b30d049d9ecaa3012a24f2894aa826bc4a55"
                    ]
                },
                {
                    "command": [
                        "prolong B' A' A1 B'' A''.",
                        "VernacExtend",
                        "123e42732328552adfea50c858bfcf6e21ad8ee8"
                    ]
                },
                {
                    "command": [
                        "prolong B' C' C1 B'' C''.",
                        "VernacExtend",
                        "17180898661151830d60bfce10ca625c4e591543"
                    ]
                },
                {
                    "command": [
                        "exists A1.",
                        "VernacExtend",
                        "860e23291647008053c30621a32bfd6912a8a298"
                    ]
                },
                {
                    "command": [
                        "exists C1.",
                        "VernacExtend",
                        "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
                    ]
                },
                {
                    "command": [
                        "exists A2.",
                        "VernacExtend",
                        "f3908652f37161bba2ccfd166f76d88f5a02cbfd"
                    ]
                },
                {
                    "command": [
                        "exists C2.",
                        "VernacExtend",
                        "0773330ae05dff589dcb26d0590f29af206680f3"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "eapply cong_transitivity with B A;finish.",
                        "VernacExtend",
                        "1124588c43b83cce7f68a5b676e01185994f0c49"
                    ]
                },
                {
                    "command": [
                        "eapply cong_transitivity with B C;finish.",
                        "VernacExtend",
                        "b3de86f18d966a6b31819f0992ce34baf06d41dc"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A A0 A' A1).",
                        "VernacExtend",
                        "17263a8f370eff312ca2c80a2e34e0c7c69b66ef"
                    ]
                },
                {
                    "command": [
                        "eapply cong_transitivity with B'' A'';finish.",
                        "VernacExtend",
                        "da44dd93d22a64edd53c3a3efb3a30dac200b5d6"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B A0 B' A1).",
                        "VernacExtend",
                        "4226f88f1ffd7a28087db069f53e501420b9b805"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11 with A A';finish.",
                        "VernacExtend",
                        "ebb00f3d2107e00389d6ddda76eee02931126151"
                    ]
                },
                {
                    "command": [
                        "assert (Cong C C0 C' C1).",
                        "VernacExtend",
                        "047094830712f2e806901c479c6dacdf9347d1e9"
                    ]
                },
                {
                    "command": [
                        "eapply cong_transitivity with B'' C'';finish.",
                        "VernacExtend",
                        "0da10dedbd6366eb5041fb0f192d99de3becfcb4"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B C0 B' C1).",
                        "VernacExtend",
                        "f1b28c247e75d625c17ca62e6879800f70a77107"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11 with C C';finish.",
                        "VernacExtend",
                        "c6410bcbece6a257a86ac5212597ed3e352f1a7d"
                    ]
                },
                {
                    "command": [
                        "assert(FSC B A A0 C B' A' A1 C').",
                        "VernacExtend",
                        "90a3c11125a9ea3be2a5f0140672e1c0945046e9"
                    ]
                },
                {
                    "command": [
                        "unfold FSC;assert_cols;repeat split;finish.",
                        "VernacExtend",
                        "da1f8cdb20484086cc024269bfa680238c4f5a14"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A0 C A1 C').",
                        "VernacExtend",
                        "665ad521c4591d0c92659aa2ad8936c2ae9ad1fe"
                    ]
                },
                {
                    "command": [
                        "eauto using l4_16.",
                        "VernacExtend",
                        "9a2e1c6d2a9e3d94094683b0c2beb042054bfdc3"
                    ]
                },
                {
                    "command": [
                        "apply cong_commutativity.",
                        "VernacExtend",
                        "f9aaaf4e990e42548d094910d661343457891a5f"
                    ]
                },
                {
                    "command": [
                        "assert(Cong C0 A0 C1 A1).",
                        "VernacExtend",
                        "799bace9a599aaa0ecddcd9d72c368577a0b6db0"
                    ]
                },
                {
                    "command": [
                        "eapply (l4_16 B C C0 A0 B' C' C1 A1).",
                        "VernacExtend",
                        "7a8a05bd7b04fc7e8dc8895e3859ef498b0e14dc"
                    ]
                },
                {
                    "command": [
                        "unfold FSC;assert_cols;repeat split;finish.",
                        "VernacExtend",
                        "da1f8cdb20484086cc024269bfa680238c4f5a14"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with A0 C0; Cong.",
                        "VernacExtend",
                        "99b3102330d819a3a73a30a7b164af2c7af55fdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_diff1",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_diff2",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_diff45",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' H.",
                        "VernacExtend",
                        "20e879c51dafd8c6fe938da38da3589cb8da118b"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff1 A' B' C' A B C); apply conga_sym; auto.",
                        "VernacExtend",
                        "01cd9b6852773c359f3ca24977eef0db1006e208"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_diff56",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' H.",
                        "VernacExtend",
                        "20e879c51dafd8c6fe938da38da3589cb8da118b"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff2 A' B' C' A B C); apply conga_sym; auto.",
                        "VernacExtend",
                        "71f41050d84dd955f5c2a1e1e54fe8e60e867391"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_trans",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (HH:=H).",
                        "VernacExtend",
                        "9c1f72f849691ff8c788d02cccca65e704a65a92"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 A0.",
                        "VernacExtend",
                        "7eeed7002bdd47a0dcc657ffef37bf549e7fcec0"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 C0.",
                        "VernacExtend",
                        "21a0a1fa5ab5e110b0a2d6c4a14003ad14b72976"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 A1.",
                        "VernacExtend",
                        "36a3133de634035e5a338f08cfc6b1f9e2f42fab"
                    ]
                },
                {
                    "command": [
                        "ex_and H5 C1.",
                        "VernacExtend",
                        "e9691cd9730c56848501aa124c64ae972eb7f6d1"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(A'' <> B'' /\\ C'' <> B'').",
                        "VernacExtend",
                        "0eaaee6145761abc9029593125a24ca330e5f607"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H0.",
                        "VernacExtend",
                        "a3f4cdfe8e9e9e002ef9be9b38164ed6f555542e"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(CongA A1 B' C1 A'' B'' C'') by (apply out_conga with A' C' A'' C'';finish).",
                        "VernacExtend",
                        "0d29238ae5a6b9544094508713c0a98cd0ee8633"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A0 B C0 A' B' C') by (apply out_conga with A C A' C';finish).",
                        "VernacExtend",
                        "372fb82650f94b9845552e6402d428725c94c42d"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A0 B' A1).",
                        "VernacExtend",
                        "4226f88f1ffd7a28087db069f53e501420b9b805"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply cong_right_commutativity.",
                        "VernacExtend",
                        "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
                    ]
                },
                {
                    "command": [
                        "apply l2_11 with A A';finish.",
                        "VernacExtend",
                        "ebc936ade26f4f983bc675e5bc5de7480806e0b6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B C0 B' C1).",
                        "VernacExtend",
                        "f1b28c247e75d625c17ca62e6879800f70a77107"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply cong_right_commutativity.",
                        "VernacExtend",
                        "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11 with C C';finish.",
                        "VernacExtend",
                        "c6410bcbece6a257a86ac5212597ed3e352f1a7d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A0 C0 A1 C1).",
                        "VernacExtend",
                        "09fcbbd1cdc28420953cb515a14603cff24bb9c8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (l11_4_1) in H24.",
                        "VernacExtend",
                        "a60052db399fecc3c0ad6f419a5159e19d1f1ad3"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H30.",
                        "VernacExtend",
                        "ee7d936337168bc5180993de9f345fc5e560fa0e"
                    ]
                },
                {
                    "command": [
                        "repeat split;finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 A0 B C0 A1 B' C1) by (repeat split;finish).",
                        "VernacExtend",
                        "3e5bf1d57eb312431bf435e98e6efdb05c96d8c3"
                    ]
                },
                {
                    "command": [
                        "apply cong3_symmetry in H28.",
                        "VernacExtend",
                        "88af51b087830faf4ebfd9d8749dea6566a89abf"
                    ]
                },
                {
                    "command": [
                        "assert( CongA A0 B C0 A'' B'' C'') by (eauto using cong3_conga2).",
                        "VernacExtend",
                        "75444671f228938bce88db1bca2e18e27e0ac424"
                    ]
                },
                {
                    "command": [
                        "eapply out_conga with A0 C0 A'' C'';finish.",
                        "VernacExtend",
                        "0bba6e3e561bcf68c3653f1d35b8e414b1875551"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_pseudo_refl",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "prolong B A A' B C.",
                        "VernacExtend",
                        "57cee99a90469875952367f12a8fce68a878500f"
                    ]
                },
                {
                    "command": [
                        "prolong B C C' B A.",
                        "VernacExtend",
                        "ed3c6fae6d2483d0216e27e0e80b7efd6881fa2b"
                    ]
                },
                {
                    "command": [
                        "prolong B A A'' B C.",
                        "VernacExtend",
                        "1fdd7a68e544e8db921991a29c936a31fcbba966"
                    ]
                },
                {
                    "command": [
                        "prolong B C C'' B A.",
                        "VernacExtend",
                        "67747d61cf30fc38130b92091230095beaf342c5"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "exists C''.",
                        "VernacExtend",
                        "edc38b8d7fa02aad35e67a5b3b120d25fe938d4b"
                    ]
                },
                {
                    "command": [
                        "exists A''.",
                        "VernacExtend",
                        "2c62bea276434352308dfb4eac61b0cfd4e93b7e"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "assert (A' = A'') by (eauto using (construction_uniqueness B A)).",
                        "VernacExtend",
                        "983bf96ea4204e8293c6dc4f1d82b3d62b090a9a"
                    ]
                },
                {
                    "command": [
                        "subst A''.",
                        "VernacExtend",
                        "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
                    ]
                },
                {
                    "command": [
                        "assert (C' = C'') by (eauto using (construction_uniqueness B C)).",
                        "VernacExtend",
                        "8a087accbe1a9e12584265f0aa48722e466eb92f"
                    ]
                },
                {
                    "command": [
                        "subst C''.",
                        "VernacExtend",
                        "baf9e25f24f7f72e069af1c7b2831385b5536daa"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_trivial_1",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "prolong B A A' D C.",
                        "VernacExtend",
                        "cdc85f8919fe86d4ab6a340a06f014fe32c76585"
                    ]
                },
                {
                    "command": [
                        "prolong D C C' B A.",
                        "VernacExtend",
                        "fa10173f8d521892058e7f1ee8483b9220237237"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "repeat split;finish.",
                        "VernacExtend",
                        "266c72449c644693452ceb961ccb5e75e6b1f622"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_10",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga A B C D E F); auto using l6_6.",
                        "VernacExtend",
                        "2ccd05abc625f1fe12ced885f30e1d7a90171df1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out2__conga",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "intros A B C A' C' HAOut HCOut.",
                        "VernacExtend",
                        "6c1c45bd9bc8b517055eb0696211da31999a3acd"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l11_10 with A C A C;finish.",
                        "VernacExtend",
                        "a7fdacaf587b462af3a46067534b32f0b35e2a07"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl;auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_right_comm",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with D E F.",
                        "VernacExtend",
                        "d45fc748188cee58ed87ee7f483c9ed44dafdb0e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl;auto.",
                        "VernacExtend",
                        "df9b6043ebd1492b46b4fc504cdbe598621cd514"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_left_comm",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with A B C.",
                        "VernacExtend",
                        "c5b0efd8fc452d258882f35f16a716762933763c"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl.",
                        "VernacExtend",
                        "3829de4e396b8da851f142420c7dafe9d554c3fb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_comm",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm.",
                        "VernacExtend",
                        "6e225b064a1334fb13c881e177096174661b35b2"
                    ]
                },
                {
                    "command": [
                        "apply conga_right_comm.",
                        "VernacExtend",
                        "0b9b70f91492a911a5ff4749c016ba065a960f63"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_14",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (CongA A' B C C' B A).",
                        "VernacExtend",
                        "67141403fd5eb42b2f0c462dca4e59c55e37fc3b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l11_13 with A C;finish.",
                        "VernacExtend",
                        "bdeae44ff008d43029b1e0b054a0229d42e704bd"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl;finish.",
                        "VernacExtend",
                        "263a259b5d2fefeb08bbb9d0414f51ef42f81b2a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l11_13 with A' A;finish.",
                        "VernacExtend",
                        "e3d40125fe2351468c37e71b37dcd6f78c7ebaf3"
                    ]
                },
                {
                    "command": [
                        "apply conga_right_comm.",
                        "VernacExtend",
                        "0b9b70f91492a911a5ff4749c016ba065a960f63"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_conga_ts",
            "line_nb": 1664,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' P HNCol HNCol'.",
                        "VernacExtend",
                        "2f83a168419de46d355a697df5966a1b97284602"
                    ]
                },
                {
                    "command": [
                        "assert (HP' : exists P', Midpoint A' P P') by (apply symmetric_point_construction).",
                        "VernacExtend",
                        "ef59e3b68faa2437abc65c5b764571f76aea6c65"
                    ]
                },
                {
                    "command": [
                        "destruct HP' as [P' HMid].",
                        "VernacExtend",
                        "fce25c8409942059a6a02e7a313ce7d830ef7a5d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A' B' P').",
                        "VernacExtend",
                        "390d1cb69aaaf5f26cb807c9072e51b3632ce561"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HCol.",
                        "VernacExtend",
                        "7339a24608f9044c1539af209f14a20bfa73ed6f"
                    ]
                },
                {
                    "command": [
                        "apply HNCol'.",
                        "VernacExtend",
                        "fb819ec4f8becfebe1096d561a1bebf98865804c"
                    ]
                },
                {
                    "command": [
                        "assert (Col A' P P') by (apply midpoint_col; auto).",
                        "VernacExtend",
                        "f77d88f974d8fe0418559d0817a73c60f7bf0644"
                    ]
                },
                {
                    "command": [
                        "apply (col3 A' P'); Col.",
                        "VernacExtend",
                        "72a6d4e3f05707b2db07a1b31f54be3779bad285"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; Col.",
                        "VernacExtend",
                        "4802ddf4d57a9004d828701fbcf4b13350447146"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HC' : exists C', CongA A B C A' B' C' /\\ OS A' B' C' P').",
                        "VernacExtend",
                        "b23f65a3dad0125c0a78cfebd6892258f51b6ad5"
                    ]
                },
                {
                    "command": [
                        "apply (angle_construction_1 A B C A' B' P'); auto.",
                        "VernacExtend",
                        "fd1a96273dc32707e9aa9d73093b2f9822d28710"
                    ]
                },
                {
                    "command": [
                        "destruct HC' as [C' [HConga HOne]].",
                        "VernacExtend",
                        "c989ba7f855e0c31b557c9480955d75eabe57cb5"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (l9_8_2 A' B' P'); Side.",
                        "VernacExtend",
                        "e11204e8f729306d3a3545ba71d7c488b2d05240"
                    ]
                },
                {
                    "command": [
                        "split; Col; split; Col.",
                        "VernacExtend",
                        "dfbb5da03e4a7eeaf33516d2b5cb2c9143118b51"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "destruct HMid; Between.",
                        "VernacExtend",
                        "c659d5e33d9a936d5eea838076d3f86c8dce5281"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_19",
            "line_nb": 1717,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A B P1).",
                        "VernacExtend",
                        "cca8c65a51b9c78dd1884e5aed0496236c4e5c0c"
                    ]
                },
                {
                    "command": [
                        "induction (l8_9 A B P1 H H2).",
                        "VernacExtend",
                        "0bd195dbbaafae802f430ca5fe9697a2cb26b77d"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold OS in *.",
                        "VernacExtend",
                        "cd76f8c4e11f26cab9d20dfba51500620a412323"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold OS in *.",
                        "VernacExtend",
                        "cd76f8c4e11f26cab9d20dfba51500620a412323"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A B) by Col.",
                        "VernacExtend",
                        "50ad34647c9b84020cbd9d5e75cd9e6d32b20ccc"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A B P2).",
                        "VernacExtend",
                        "528bfabfec5c1735c2f2eaeb204f6a6c93076bca"
                    ]
                },
                {
                    "command": [
                        "induction (l8_9 A B P2 H0 ).",
                        "VernacExtend",
                        "31fc75f28d205ff239791dbd259f97ed6b27de52"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold OS in *.",
                        "VernacExtend",
                        "cd76f8c4e11f26cab9d20dfba51500620a412323"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold OS in *.",
                        "VernacExtend",
                        "cd76f8c4e11f26cab9d20dfba51500620a412323"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1.",
                        "VernacExtend",
                        "951eaa7e0f44b9c41313aa0ab6f489dceca8815c"
                    ]
                },
                {
                    "command": [
                        "unfold TS in *.",
                        "VernacExtend",
                        "6ae064d5c4a9e5765c4d90e4204a4ce389ad4607"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A B) by Col.",
                        "VernacExtend",
                        "50ad34647c9b84020cbd9d5e75cd9e6d32b20ccc"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (T:=l11_15 A B P1 A B P2 H2 H3).",
                        "VernacExtend",
                        "03872e67191b7aa69aafddd74cc0478cf53451a7"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] T.",
                        "VernacExtend",
                        "845e0c75fa3b8c08205b14839897fbb96a918988"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl.",
                        "VernacExtend",
                        "58c2f5784aa86d85c38d62e974f17ffc257c5f0b"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side;auto.",
                        "VernacExtend",
                        "e6e952a98f9bc558ae73d1b9614cafb01ea3be55"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l11_16;try assumption.",
                        "VernacExtend",
                        "b728f16146c3525bf98427c76cbe4e765281b5e7"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "intro;subst;Col.",
                        "VernacExtend",
                        "c441c0cb1182259600c627a2cc12c26ef6a19a9e"
                    ]
                },
                {
                    "command": [
                        "apply one_side_reflexivity.",
                        "VernacExtend",
                        "c84eac66c6c443db72592068bf2d3592bf46556c"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_22",
            "line_nb": 2433,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "eapply (l11_22a _ _ _ P _ _ _ P');tauto.",
                        "VernacExtend",
                        "db0434ea98233bc67070b2fa59ef3bdf17100f04"
                    ]
                },
                {
                    "command": [
                        "eapply (l11_22b _ _ _ P _ _ _ P');tauto.",
                        "VernacExtend",
                        "27aab7e6bc4ce0f49f2db535df48806f01e5a91b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_24",
            "line_nb": 2440,
            "steps": [
                {
                    "command": [
                        "unfold InAngle.",
                        "VernacExtend",
                        "26800be71d27e0dab351c9587e5270c0dffa3f13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 X.",
                        "VernacExtend",
                        "584765fac00dcf6564004db17c6cd360a32e45ea"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_in_angle",
            "line_nb": 2638,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out321__inangle",
            "line_nb": 2655,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply col_in_angle; auto.",
                        "VernacExtend",
                        "e6c49c70d81752aaf2588ba5840d71ec4e4e9a70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle1123",
            "line_nb": 2660,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply out321__inangle; auto.",
                        "VernacExtend",
                        "e64362360b6cae184105f7a3dac144d66e532ec3"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out341__inangle",
            "line_nb": 2665,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply col_in_angle; auto.",
                        "VernacExtend",
                        "e6c49c70d81752aaf2588ba5840d71ec4e4e9a70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle3123",
            "line_nb": 2670,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply out341__inangle; auto.",
                        "VernacExtend",
                        "7a1f8bb76e4bf990058085de564b70c402cd1749"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_angle_two_sides",
            "line_nb": 2675,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold InAngle in H1.",
                        "VernacExtend",
                        "1f0c76df3b6c8f6a52bdc1e8241a9cf4f409ee4c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 X.",
                        "VernacExtend",
                        "2ee1e1ce6f6d756caedcd0441e1e13950f8b7515"
                    ]
                },
                {
                    "command": [
                        "induction H5.",
                        "VernacExtend",
                        "95b234133c893feab1fa02ba35d711b8dc2279bb"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "unfold TS.",
                        "VernacExtend",
                        "b797aa08231484e4dce465b473be143ea9f36b33"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply col_trivial_3.",
                        "VernacExtend",
                        "05e2ee812e1e2a11d4a529ba00c9b99017678361"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2.",
                        "VernacExtend",
                        "b9ba84f277b668afffbef982ee534ea3668391cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H5.",
                        "VernacExtend",
                        "8d96b99f08f331d95066ed72b39fdd1ebb0b5331"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1.",
                        "VernacExtend",
                        "14e18c0fd9f924050c674020d62e1f21b605c996"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle_distincts",
            "line_nb": 2950,
            "steps": [
                {
                    "command": [
                        "intros; unfold InAngle in *; spliter; repeat split; assumption.",
                        "VernacExtend",
                        "a72207f5fae51f34a44f6827f08a8883ca08987a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "segment_construction_0",
            "line_nb": 2953,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_trivial_identity.",
                        "VernacExtend",
                        "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
                    ]
                },
                {
                    "command": [
                        "assert(exists X : Tpoint, A' <> X).",
                        "VernacExtend",
                        "622eaacd16843e9fae875d6db3e3f254a6fccd43"
                    ]
                },
                {
                    "command": [
                        "apply another_point.",
                        "VernacExtend",
                        "418f5b6b3961e07d621813447836f6005770a9f2"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 X.",
                        "VernacExtend",
                        "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=segment_construction_3 A' X A B H1 H).",
                        "VernacExtend",
                        "923cf74fae637ef62fa4ddf265b54aba4d781103"
                    ]
                },
                {
                    "command": [
                        "ex_and HH B'.",
                        "VernacExtend",
                        "441d953bb0d4a6ba21f02c507f3f380f35654182"
                    ]
                },
                {
                    "command": [
                        "exists B'.",
                        "VernacExtend",
                        "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "angle_construction_3",
            "line_nb": 2967,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(exists P, ~Col A' B' P).",
                        "VernacExtend",
                        "aab79f91694a4063d0d6061f7b2ff8010463acc7"
                    ]
                },
                {
                    "command": [
                        "eapply not_col_exists.",
                        "VernacExtend",
                        "dcbeb3acfb9da102987cf84bcf2f68731f6823ec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 P.",
                        "VernacExtend",
                        "def0c78f64ec58e2d9899580dcf7798b91ef5b2d"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A C).",
                        "VernacExtend",
                        "bda996de19e922f2f3aa46630bed62394edd5e36"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "apply conga_trivial_1; assumption.",
                        "VernacExtend",
                        "d45836a361ff4b7496543373ddc2815cf2e928f7"
                    ]
                },
                {
                    "command": [
                        "assert(exists C', CongA A B C A' B' C' /\\ (OS A' B' C' P \\/ Col A' B' C')).",
                        "VernacExtend",
                        "662acd20820098e7713ad0e7018a2745125df33b"
                    ]
                },
                {
                    "command": [
                        "apply angle_construction_2.",
                        "VernacExtend",
                        "e3f510e7b5507d07de5de23aa0a914037d76729c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 C'.",
                        "VernacExtend",
                        "5e457575cd7bdd1128982abab35b55ad94ca418c"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle_one_side2",
            "line_nb": 3428,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (inangle_one_side _ _ C); Col.",
                        "VernacExtend",
                        "17b95f989af89a9e94ebce79f99ce4e6896ed5ad"
                    ]
                },
                {
                    "command": [
                        "apply (inangle_one_side _ _ A); Col.",
                        "VernacExtend",
                        "23b73613866185f7d2a4ea1c4b4b3bf7aa01a41b"
                    ]
                },
                {
                    "command": [
                        "apply l11_24.",
                        "VernacExtend",
                        "1a34f659d652765568950a0aad463783c56a6bbe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply l11_24.",
                        "VernacExtend",
                        "1a34f659d652765568950a0aad463783c56a6bbe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "angle_construction_4",
            "line_nb": 3495,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A' B' P).",
                        "VernacExtend",
                        "60a9582e2cea9069aca83ef41a4216b1e248b441"
                    ]
                },
                {
                    "command": [
                        "destruct (angle_construction_3 A B C A' B') as [C']; auto.",
                        "VernacExtend",
                        "3736902283bfd2d060885be96d284e46918ed013"
                    ]
                },
                {
                    "command": [
                        "exists C'; split; Cop.",
                        "VernacExtend",
                        "8b8275571d8355186382a2c47892687e2ed34f75"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "destruct (angle_construction_3 A B C A' B') as [C']; auto.",
                        "VernacExtend",
                        "3736902283bfd2d060885be96d284e46918ed013"
                    ]
                },
                {
                    "command": [
                        "exists C'; split; auto.",
                        "VernacExtend",
                        "5a885337254a53077362d794352352c26516420a"
                    ]
                },
                {
                    "command": [
                        "exists C'; left; split; Col.",
                        "VernacExtend",
                        "cca550b7736a43b87741b7f3dd8626dd0ccd9f2e"
                    ]
                },
                {
                    "command": [
                        "apply (col_conga_col A B C); assumption.",
                        "VernacExtend",
                        "68e03738526a1969b1bdf4a7555288acf99c88ed"
                    ]
                },
                {
                    "command": [
                        "destruct (angle_construction_1 A B C A' B' P) as [C' []]; auto.",
                        "VernacExtend",
                        "3ad2fc472edef6bd845bf4567f1ff972890aeb00"
                    ]
                },
                {
                    "command": [
                        "exists C'; split; Cop.",
                        "VernacExtend",
                        "8b8275571d8355186382a2c47892687e2ed34f75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_distincts",
            "line_nb": 3508,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hlea.",
                        "VernacExtend",
                        "0a74263ca87988e2788eb42158507db122b0887a"
                    ]
                },
                {
                    "command": [
                        "destruct Hlea as [X [HInAngle HConga]].",
                        "VernacExtend",
                        "7248243d1bf1439a264d7f8df4de8283a7a99e05"
                    ]
                },
                {
                    "command": [
                        "destruct HInAngle as [HDE [HEF _]].",
                        "VernacExtend",
                        "09d0cfd8556a59b90cb69afbffa9bc1695bdfacd"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff1 A B C D E X); auto.",
                        "VernacExtend",
                        "8c85608456e8187754b5c41fb3295d8badfcafa8"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff2 A B C D E X); auto.",
                        "VernacExtend",
                        "a30b0ac767a5a5738a7e7d2880c1854b47fb2956"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gea_distincts",
            "line_nb": 3516,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hgea.",
                        "VernacExtend",
                        "3b409101e39fb192a963c012f30982afc134487a"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in Hgea.",
                        "VernacExtend",
                        "4ec51a9a53575815575459598176e1092051b100"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_angle_line",
            "line_nb": 3873,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_31_1",
            "line_nb": 4783,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold LeA.",
                        "VernacExtend",
                        "5508e8c20a9df4f35160f441ed10ce769522d020"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inangle1123; assumption.",
                        "VernacExtend",
                        "b2de51e7e9a21b5acb2998c224f0109f8945593d"
                    ]
                },
                {
                    "command": [
                        "apply l11_21_b.",
                        "VernacExtend",
                        "1da580424192b6645444b07bef8443a7727be11c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial.",
                        "VernacExtend",
                        "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_31_2",
            "line_nb": 4794,
            "steps": [
                {
                    "command": [
                        "intros; destruct (angle_construction_3 A B C D E) as [P HCongA]; auto.",
                        "VernacExtend",
                        "c1d4098e05e9b017ae70bdd91c10ca7da084cabf"
                    ]
                },
                {
                    "command": [
                        "exists P; split; try apply in_angle_line; unfold CongA in *; spliter; auto.",
                        "VernacExtend",
                        "30899cba538e7d20d0ea60d4e044423a2676016d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_refl",
            "line_nb": 4798,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold LeA.",
                        "VernacExtend",
                        "5508e8c20a9df4f35160f441ed10ce769522d020"
                    ]
                },
                {
                    "command": [
                        "exists C .",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inangle3123; assumption.",
                        "VernacExtend",
                        "11e01e253f128227ad4c20f1239756b94d2f0519"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; assumption.",
                        "VernacExtend",
                        "af9b062c8cbd24307d195fe8577271ed342bc710"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga__lea",
            "line_nb": 4806,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold LeA.",
                        "VernacExtend",
                        "5508e8c20a9df4f35160f441ed10ce769522d020"
                    ]
                },
                {
                    "command": [
                        "exists F.",
                        "VernacExtend",
                        "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inangle3123.",
                        "VernacExtend",
                        "e127b891539fe1c477172f8ede9879d0aad53b59"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff45 A B C D E F); assumption.",
                        "VernacExtend",
                        "8a70765e51205a1d5aecb3cbee3d83be24d22480"
                    ]
                },
                {
                    "command": [
                        "apply (conga_diff56 A B C D); assumption.",
                        "VernacExtend",
                        "7cd041a3487d6216281b9e9375ed55aa37b8c81b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga__lea456123",
            "line_nb": 4816,
            "steps": [
                {
                    "command": [
                        "intros; apply conga__lea, conga_sym; trivial.",
                        "VernacExtend",
                        "81decd4f87e0f84f38b5efc6d7f8024c9c60f92a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_out4__lea",
            "line_nb": 4819,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F A' C' D' F' Hl HA HC HD HF.",
                        "VernacExtend",
                        "8438cc087f1acc2d6f9f36c154053b1fc6afebdc"
                    ]
                },
                {
                    "command": [
                        "apply (l11_30 A B C D E F); trivial; apply out2__conga; apply l6_6; assumption.",
                        "VernacExtend",
                        "0f3ba766bdbd2b61db49798397833a73a1093a90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea121345",
            "line_nb": 4823,
            "steps": [
                {
                    "command": [
                        "intros A B C D E HAB HCD HDE.",
                        "VernacExtend",
                        "2c45de7ace13185bfd9be1e864956ec477f6993c"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "396caa2bfb35ec342ddeb325075b6bc72bbd9ee3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle__lea",
            "line_nb": 4827,
            "steps": [
                {
                    "command": [
                        "intros A B C P HIn.",
                        "VernacExtend",
                        "bda2d46918c0d8fa6dccb7de1ed2021aa53bd8ae"
                    ]
                },
                {
                    "command": [
                        "exists P; split; trivial.",
                        "VernacExtend",
                        "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
                    ]
                },
                {
                    "command": [
                        "unfold InAngle in HIn; spliter.",
                        "VernacExtend",
                        "41dc6afb79bf6a5cc2fca36d89f9bb478354e8ca"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_lta__bet",
            "line_nb": 5292,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := H0).",
                        "VernacExtend",
                        "c69a123d85c581178d0b425115b3140d85d1b81f"
                    ]
                },
                {
                    "command": [
                        "apply not_out_bet.",
                        "VernacExtend",
                        "4d81867de2ff7dda5537b3e192c5c1f4976503a8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym.",
                        "VernacExtend",
                        "2063e70bb4c41c64024466002567257da2aca3f3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in H0.",
                        "VernacExtend",
                        "dff0b6cb7328a1df5877966b420d3938aff8c287"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; auto.",
                        "VernacExtend",
                        "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_lta__out",
            "line_nb": 5306,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out.",
                        "VernacExtend",
                        "a440058293db7cae4cfd0786f15d17e97c111976"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym.",
                        "VernacExtend",
                        "2063e70bb4c41c64024466002567257da2aca3f3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in H0.",
                        "VernacExtend",
                        "dff0b6cb7328a1df5877966b420d3938aff8c287"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_2; auto.",
                        "VernacExtend",
                        "56ded40783ae3142836c891eb28367d2183e2280"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_distincts",
            "line_nb": 5319,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hlta.",
                        "VernacExtend",
                        "c92b94871630be1ebb0ded9cd8b664c65340c525"
                    ]
                },
                {
                    "command": [
                        "assert (Hlea : LeA A B C D E F) by (destruct Hlta; assumption).",
                        "VernacExtend",
                        "71b898f61903cbec495eae6680c3699daec766e2"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in Hlea.",
                        "VernacExtend",
                        "aeeca3a649881755aa318e2d6c433132f71ff662"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst F.",
                        "VernacExtend",
                        "b5b2ce02b4ddd721e4f4723fa26522e848c769e6"
                    ]
                },
                {
                    "command": [
                        "assert (Bet D E D) by (apply (col_lta__bet A B C); Col).",
                        "VernacExtend",
                        "c6a244cbfb9a02fd6d1ec0552d7c113e3dd23766"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gta_distincts",
            "line_nb": 5330,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hgta.",
                        "VernacExtend",
                        "1329d19371e21dd08064d2d5bec23c3e9067866e"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hgta.",
                        "VernacExtend",
                        "f399b96494802b73918dd9a569fc69e3105ea043"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_distincts",
            "line_nb": 5336,
            "steps": [
                {
                    "command": [
                        "intros A B C Hacute.",
                        "VernacExtend",
                        "e700eb67321827e612d86c29e4b1f3abccb7ed24"
                    ]
                },
                {
                    "command": [
                        "destruct Hacute as [x [y [z [HPer Hlta]]]].",
                        "VernacExtend",
                        "eb5817cfd6598b2eb13d6d10f2dc4a2db2b29a0a"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hlta.",
                        "VernacExtend",
                        "19d08099f2c1a9f157a8d5c41439bc861c596e1d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_distincts",
            "line_nb": 5343,
            "steps": [
                {
                    "command": [
                        "intros A B C Hobtuse.",
                        "VernacExtend",
                        "c087783834cf007d9eba074b5589c6d3a1e70822"
                    ]
                },
                {
                    "command": [
                        "destruct Hobtuse as [x [y [z [HPer Hgta]]]].",
                        "VernacExtend",
                        "4c2142134e0002a95b60834068dd759e74600545"
                    ]
                },
                {
                    "command": [
                        "apply gta_distincts in Hgta.",
                        "VernacExtend",
                        "f766cee3f8b3999b7104def96185f67adf3ee797"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_angle_trans2",
            "line_nb": 5739,
            "steps": [
                {
                    "command": [
                        "intros A B C D E HC HD.",
                        "VernacExtend",
                        "716dd32ddd3baf1393161793e96a02ddc052faf8"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction E B E B) as [E' [HE1 HE2]].",
                        "VernacExtend",
                        "cb5365687f843e9c09b7f8b6bdb698d9153b6e35"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := HD).",
                        "VernacExtend",
                        "275c8198ccec517e10176f0739ff2151d8e1e4ca"
                    ]
                },
                {
                    "command": [
                        "apply inangle_distincts in Hd.",
                        "VernacExtend",
                        "ad93c23f327ccddf94c7513d05655b1be3fd72a2"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs.",
                        "VernacExtend",
                        "1f1984354b3478db2c03d988970055ed3734b17e"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, in_angle_reverse with E'; Between.",
                        "VernacExtend",
                        "f9330813d96aed9820d69343d3442e188c5e9713"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, in_angle_trans with A; apply l11_24; trivial.",
                        "VernacExtend",
                        "72b48477f3303356484d5b00d74d7f55e23e73cc"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_reverse with E; auto.",
                        "VernacExtend",
                        "3ded18236dee0c83824d2f1d7fb682b6af1d3e6a"
                    ]
                },
                {
                    "command": [
                        "apply l11_24; trivial.",
                        "VernacExtend",
                        "5c6eb57dd1617a369edb813c6f96e54d1894ad73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_conga_sym",
            "line_nb": 6071,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_and_lta",
            "line_nb": 6078,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in *.",
                        "VernacExtend",
                        "802c232fa354dc638937352b485ceb094cba03d6"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(CongA A B C D E F).",
                        "VernacExtend",
                        "aa3927b609c9ff78d7b6f960b86aa82e88461a02"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym.",
                        "VernacExtend",
                        "2063e70bb4c41c64024466002567257da2aca3f3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_left_comm",
            "line_nb": 6154,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold LeA in *.",
                        "VernacExtend",
                        "8e6fc1f965ce7ec5df3fa3fdef94fa190195654c"
                    ]
                },
                {
                    "command": [
                        "ex_and H P.",
                        "VernacExtend",
                        "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm.",
                        "VernacExtend",
                        "6e225b064a1334fb13c881e177096174661b35b2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_right_comm",
            "line_nb": 6164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l11_29_b.",
                        "VernacExtend",
                        "f3aeaf9043d3867159df2b5e99c3f42f0283059f"
                    ]
                },
                {
                    "command": [
                        "apply l11_29_a in H.",
                        "VernacExtend",
                        "93fb5ef7b1405a83347db1934827a27f34601213"
                    ]
                },
                {
                    "command": [
                        "ex_and H P.",
                        "VernacExtend",
                        "8c329bf34d74b02fba7fd9d8282b42e5ff292b1e"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply conga_right_comm.",
                        "VernacExtend",
                        "0b9b70f91492a911a5ff4749c016ba065a960f63"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_comm",
            "line_nb": 6175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lea_left_comm.",
                        "VernacExtend",
                        "ec98640628879e019e32000f9c43f96769a60abf"
                    ]
                },
                {
                    "command": [
                        "apply lea_right_comm.",
                        "VernacExtend",
                        "e0d7607e49a0d5880afb60733de3de3a5dafb459"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_left_comm",
            "line_nb": 6181,
            "steps": [
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply lea_left_comm.",
                        "VernacExtend",
                        "ec98640628879e019e32000f9c43f96769a60abf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm.",
                        "VernacExtend",
                        "6e225b064a1334fb13c881e177096174661b35b2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_right_comm",
            "line_nb": 6193,
            "steps": [
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply lea_right_comm.",
                        "VernacExtend",
                        "e0d7607e49a0d5880afb60733de3de3a5dafb459"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply conga_right_comm.",
                        "VernacExtend",
                        "0b9b70f91492a911a5ff4749c016ba065a960f63"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_comm",
            "line_nb": 6205,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lta_left_comm.",
                        "VernacExtend",
                        "86141376405c8ffe2d8c1ec86d5b2abf52abc2e4"
                    ]
                },
                {
                    "command": [
                        "apply lta_right_comm.",
                        "VernacExtend",
                        "e4a866f3519121c0dc90cda2171fa974fada2d0f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_sym",
            "line_nb": 6211,
            "steps": [
                {
                    "command": [
                        "unfold Obtuse.",
                        "VernacExtend",
                        "6d4b3458f1c4c03c771160f4a3834da9b5a7569b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H A'.",
                        "VernacExtend",
                        "5e920bdbf1d1ecd1e7799c941da260e3de675571"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 B'.",
                        "VernacExtend",
                        "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
                    ]
                },
                {
                    "command": [
                        "ex_and H C'.",
                        "VernacExtend",
                        "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists B'.",
                        "VernacExtend",
                        "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold GtA in *.",
                        "VernacExtend",
                        "10c238e45282e6180118b26f3853c9654b51d6ed"
                    ]
                },
                {
                    "command": [
                        "apply lta_right_comm.",
                        "VernacExtend",
                        "e4a866f3519121c0dc90cda2171fa974fada2d0f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_sym",
            "line_nb": 6226,
            "steps": [
                {
                    "command": [
                        "unfold Acute.",
                        "VernacExtend",
                        "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "ex_and H A'.",
                        "VernacExtend",
                        "5e920bdbf1d1ecd1e7799c941da260e3de675571"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 B'.",
                        "VernacExtend",
                        "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
                    ]
                },
                {
                    "command": [
                        "ex_and H C'.",
                        "VernacExtend",
                        "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "exists B'.",
                        "VernacExtend",
                        "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "split;auto using lta_left_comm.",
                        "VernacExtend",
                        "93db2a0ef9a16cf56398d8d96d596abe7c862058"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_col__out",
            "line_nb": 6237,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [X [Y [Z []]]].",
                        "VernacExtend",
                        "af91f434a5f3e4f2d5093d78fdd72a2a7ce14f90"
                    ]
                },
                {
                    "command": [
                        "apply col_lta__out with X Y Z; assumption.",
                        "VernacExtend",
                        "565d1b002bae052574ac876b55b9adea0d7fae5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_obtuse__bet",
            "line_nb": 6242,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [X [Y [Z []]]].",
                        "VernacExtend",
                        "af91f434a5f3e4f2d5093d78fdd72a2a7ce14f90"
                    ]
                },
                {
                    "command": [
                        "apply (col_lta__bet X Y Z); assumption.",
                        "VernacExtend",
                        "a37aa8424c878c925e8d5ddf321e1b802ebe1ccb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out__acute",
            "line_nb": 6247,
            "steps": [
                {
                    "command": [
                        "intros A B C Hout.",
                        "VernacExtend",
                        "d1ecec09a139fa2a7e7a614ddec8c6030da39115"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HD := perp_exists B A B).",
                        "VernacExtend",
                        "d507cc75a323cd3735542b63601b5cf77d78806b"
                    ]
                },
                {
                    "command": [
                        "destruct HD as [D]; auto.",
                        "VernacExtend",
                        "5479f575404868e4d17d76b0fde7d91a8980b38f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "split; Perp.",
                        "VernacExtend",
                        "bc5953d6f0d76d444d426576ad647efe219ea91b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; auto.",
                        "VernacExtend",
                        "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol : ~ Col A B D) by (apply per_not_col; Perp).",
                        "VernacExtend",
                        "e77243b05da1fa48376db77718f6bbf0bad25b89"
                    ]
                },
                {
                    "command": [
                        "apply HNCol.",
                        "VernacExtend",
                        "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_4.",
                        "VernacExtend",
                        "54503687d69ef6d95431dca18b161ad914cc94d5"
                    ]
                },
                {
                    "command": [
                        "apply out_col.",
                        "VernacExtend",
                        "57e48e4027162d3af2f745773def7abb7cb80e82"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a A B C); auto.",
                        "VernacExtend",
                        "7040e9a60487f19af261155584a8b73af1024534"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet__obtuse",
            "line_nb": 6266,
            "steps": [
                {
                    "command": [
                        "intros A B C HBet HAB HBC.",
                        "VernacExtend",
                        "7e5b3b7dd944f98292a4a5fcc34551b4a3c602ed"
                    ]
                },
                {
                    "command": [
                        "assert(HD := perp_exists B A B).",
                        "VernacExtend",
                        "d507cc75a323cd3735542b63601b5cf77d78806b"
                    ]
                },
                {
                    "command": [
                        "destruct HD as [D]; auto.",
                        "VernacExtend",
                        "5479f575404868e4d17d76b0fde7d91a8980b38f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "split; Perp.",
                        "VernacExtend",
                        "bc5953d6f0d76d444d426576ad647efe219ea91b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_2; auto.",
                        "VernacExtend",
                        "56ded40783ae3142836c891eb28367d2183e2280"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol : ~ Col A B D) by (apply per_not_col; Perp).",
                        "VernacExtend",
                        "e77243b05da1fa48376db77718f6bbf0bad25b89"
                    ]
                },
                {
                    "command": [
                        "apply HNCol.",
                        "VernacExtend",
                        "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
                    ]
                },
                {
                    "command": [
                        "apply bet_col.",
                        "VernacExtend",
                        "8f228b9c8b3c0c97dd3fb238a259f7c50c431cec"
                    ]
                },
                {
                    "command": [
                        "apply (bet_conga__bet A B C); try (apply conga_sym); auto.",
                        "VernacExtend",
                        "8d3f5d57bb15e8c241331f75ce48f621612f3c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_43",
            "line_nb": 6463,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l11_43_aux;auto.",
                        "VernacExtend",
                        "ac023cb603365204532b92d34849eef56d013bb8"
                    ]
                },
                {
                    "command": [
                        "apply l11_43_aux;auto.",
                        "VernacExtend",
                        "ac023cb603365204532b92d34849eef56d013bb8"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "left;finish.",
                        "VernacExtend",
                        "ec1211e431598310722db092af331441480a52da"
                    ]
                },
                {
                    "command": [
                        "right;apply obtuse_sym;assumption.",
                        "VernacExtend",
                        "d804a38caac3019694d84c2c9844c1ba959fa8fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_44_1_a",
            "line_nb": 6568,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A C) as [P HP].",
                        "VernacExtend",
                        "fe1a5259f797bdce000f37d3e30adbae1d0b75ac"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Cong_3 B C P B A P) by (repeat split;finish).",
                        "VernacExtend",
                        "358e5cb49c24429d6920f0b00ccb56a8bde65a7f"
                    ]
                },
                {
                    "command": [
                        "assert(CongA B C P B A P) by (auto using cong3_conga).",
                        "VernacExtend",
                        "be24f70334bde119c5768a288c2df19b3ab4d0ff"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "eapply l11_10 with B P B P;finish.",
                        "VernacExtend",
                        "99aa18806e2b77f3675cd931a741f8de837fbd3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_lta_and_conga",
            "line_nb": 6696,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in H.",
                        "VernacExtend",
                        "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_gta_and_conga",
            "line_nb": 6704,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold GtA in H.",
                        "VernacExtend",
                        "6ab2408000eb70740c634986276e266ea7360d60"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in H.",
                        "VernacExtend",
                        "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym in H0.",
                        "VernacExtend",
                        "f9ca3d0893280b53cf9038b91ff898bc0a7cebb1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_lta_and_gta",
            "line_nb": 6714,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "unfold GtA in H0.",
                        "VernacExtend",
                        "a27e3421efffe9ca162ecd9f6b238efb2fe68d19"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in *.",
                        "VernacExtend",
                        "802c232fa354dc638937352b485ceb094cba03d6"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym.",
                        "VernacExtend",
                        "2063e70bb4c41c64024466002567257da2aca3f3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_sym_equiv",
            "line_nb": 6726,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; apply conga_sym.",
                        "VernacExtend",
                        "68e02da342440cc946917a704e8ebab23cbda20b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_dec",
            "line_nb": 6730,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst;right;intro;unfold CongA in *;intuition.",
                        "VernacExtend",
                        "336182a4ecbabdcb9523354237640cb6bc2bc595"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points C B).",
                        "VernacExtend",
                        "021929c41b94e147e1b7d8f513756db473e881b6"
                    ]
                },
                {
                    "command": [
                        "subst;right;intro;unfold CongA in *;intuition.",
                        "VernacExtend",
                        "336182a4ecbabdcb9523354237640cb6bc2bc595"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points D E).",
                        "VernacExtend",
                        "d960a8a8aa7c54282602c6757935d12ce23093c2"
                    ]
                },
                {
                    "command": [
                        "subst;right;intro;unfold CongA in *;intuition.",
                        "VernacExtend",
                        "336182a4ecbabdcb9523354237640cb6bc2bc595"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points F E).",
                        "VernacExtend",
                        "35811538f9c5c9507c2220731fa7c9577cea2b22"
                    ]
                },
                {
                    "command": [
                        "subst;right;intro;unfold CongA in *;intuition.",
                        "VernacExtend",
                        "336182a4ecbabdcb9523354237640cb6bc2bc595"
                    ]
                },
                {
                    "command": [
                        "assert (exists A' : Tpoint, Bet B A A' /\\ Cong A A' E D) by (apply segment_construction).",
                        "VernacExtend",
                        "7c17ea00411dcbafc9fd87cab6d4fdb8bb287365"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H3; clear H3.",
                        "VernacExtend",
                        "0ac7506df679c08bcab5c22ab91bf031db591a37"
                    ]
                },
                {
                    "command": [
                        "assert (exists C' : Tpoint, Bet B C C' /\\ Cong C C' E F) by (apply segment_construction).",
                        "VernacExtend",
                        "ae420278d2e62b7522032823a13630ea21cbe15f"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H3; clear H3.",
                        "VernacExtend",
                        "0ac7506df679c08bcab5c22ab91bf031db591a37"
                    ]
                },
                {
                    "command": [
                        "assert (exists D' : Tpoint, Bet E D D' /\\ Cong D D' B A) by (apply segment_construction).",
                        "VernacExtend",
                        "95dec9c4646968eb91c7a3bbdab97b3f5811ecba"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H3; clear H3.",
                        "VernacExtend",
                        "0ac7506df679c08bcab5c22ab91bf031db591a37"
                    ]
                },
                {
                    "command": [
                        "assert (exists F' : Tpoint, Bet E F F' /\\ Cong F F' B C) by (apply segment_construction).",
                        "VernacExtend",
                        "c3d5b880bb43212f2983bb75c07a1cb402be16de"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H3; clear H3.",
                        "VernacExtend",
                        "0ac7506df679c08bcab5c22ab91bf031db591a37"
                    ]
                },
                {
                    "command": [
                        "induction (cong_dec x x0 x1 x2).",
                        "VernacExtend",
                        "62168fde2021ee7b48a0702f9639224cefcf568b"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists x; exists x0; exists x1; exists x2.",
                        "VernacExtend",
                        "1bf1c0b5d55361bc90b22cff49c8552770bf53e5"
                    ]
                },
                {
                    "command": [
                        "repeat split; assumption.",
                        "VernacExtend",
                        "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold CongA.",
                        "VernacExtend",
                        "1c29a8ac2c25dc904dbf30e97f6dba65a6e4f512"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "decompose [and ex] H4; clear H4.",
                        "VernacExtend",
                        "2bcee3a5f3e4cc95049a9dcf2e20c2ae28911a3d"
                    ]
                },
                {
                    "command": [
                        "assert (x3 = x) by (apply construction_uniqueness with B A E D; intuition).",
                        "VernacExtend",
                        "fe6df96cd88e43c3b2c583af44bd6ec382f1b261"
                    ]
                },
                {
                    "command": [
                        "assert (x4 = x0) by (apply construction_uniqueness with B C E F; intuition).",
                        "VernacExtend",
                        "20714de328a0632ba79728ceea80fa8ba4024815"
                    ]
                },
                {
                    "command": [
                        "assert (x5 = x1) by (apply construction_uniqueness with E D B A; intuition).",
                        "VernacExtend",
                        "46fc9ba79b4ddae707a7731a1deb09fb9504ace0"
                    ]
                },
                {
                    "command": [
                        "assert (x6 = x2) by (apply construction_uniqueness with E F B C; intuition).",
                        "VernacExtend",
                        "339ef53c96aed0f777c991baa8d634189b7ff288"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_not_conga",
            "line_nb": 6765,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in H.",
                        "VernacExtend",
                        "ae6a65e1d89ca906a9d19c0818296b3005c8aae9"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_44_1_b",
            "line_nb": 6772,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply not_col_distincts in H.",
                        "VernacExtend",
                        "96597e4344645954050953e1c3c06af05f730923"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= or_lt_cong_gt B A B C).",
                        "VernacExtend",
                        "e2def10f9c80f5632708e5c5092d66142b0a0707"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_2_a in H4.",
                        "VernacExtend",
                        "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
                    ]
                },
                {
                    "command": [
                        "apply lta_not_conga in H4.",
                        "VernacExtend",
                        "b0da6bbd2561e1d673d81a281015e259a740e781"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym in H0.",
                        "VernacExtend",
                        "f9ca3d0893280b53cf9038b91ff898bc0a7cebb1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "unfold Gt in H4.",
                        "VernacExtend",
                        "871e6fb773c542d6b88167181ee58a7a7fc87fa2"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_2_a in H4.",
                        "VernacExtend",
                        "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
                    ]
                },
                {
                    "command": [
                        "apply lta_not_conga in H4.",
                        "VernacExtend",
                        "b0da6bbd2561e1d673d81a281015e259a740e781"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_3.",
                        "VernacExtend",
                        "b5b3e8f1b1ab4e019edffab3f68cbd874e581bbc"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_44_2_b",
            "line_nb": 6794,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A B C).",
                        "VernacExtend",
                        "a308b0a7aa87a8d722d63307a143a32131516309"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := H).",
                        "VernacExtend",
                        "58244ee871e08ccceed71966f00af5881f498b1e"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hd; spliter; clean_reap_hyps.",
                        "VernacExtend",
                        "88de06b2d31329c3f1ae668af4f9c32908bd1f96"
                    ]
                },
                {
                    "command": [
                        "apply col_lta__bet in H; Col; Le.",
                        "VernacExtend",
                        "9e4e128452275d11dd0f6ae4e62a4dacc0693821"
                    ]
                },
                {
                    "command": [
                        "apply not_col_distincts in H0.",
                        "VernacExtend",
                        "cbef6970efca517cd8f8139c21aedf1219095d6b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= or_lt_cong_gt B A B C).",
                        "VernacExtend",
                        "e2def10f9c80f5632708e5c5092d66142b0a0707"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_2_a in H4.",
                        "VernacExtend",
                        "ccfa64196c6f1344eb23c1f33756e7e854eff0f0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= not_lta_and_gta B A C B C A).",
                        "VernacExtend",
                        "1e461606ef6afdd0b717586c2f6f2878e4026e65"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply HH.",
                        "VernacExtend",
                        "cee39940038212d757baee03cd54f334d2d6adad"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "unfold Gt in H4.",
                        "VernacExtend",
                        "871e6fb773c542d6b88167181ee58a7a7fc87fa2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_1_a in H4; auto.",
                        "VernacExtend",
                        "e8b5b5e20cf48fd4c1ead941ea9c51525bd1cb5a"
                    ]
                },
                {
                    "command": [
                        "apply lta_not_conga in H; auto.",
                        "VernacExtend",
                        "dcb30b9023cde8f1fd93f70db167d769f1e6d2f4"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_44_1",
            "line_nb": 6817,
            "steps": [
                {
                    "command": [
                        "intros;assert_diffs;split;intro; auto using l11_44_1_b, l11_44_1_a.",
                        "VernacExtend",
                        "b8bdd957e3f10904e38efdc3aff8f7299da6c415"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_44_2",
            "line_nb": 6820,
            "steps": [
                {
                    "command": [
                        "intros;split;intro; auto using l11_44_2_b, l11_44_2_a with col.",
                        "VernacExtend",
                        "f7aff295fd4058f5af3cbdf87652f4322efe43c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_51",
            "line_nb": 7369,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(Cong_3 B A C B' A' C' /\\ Cong_3 A B C A' B' C' /\\ Cong_3 B C A B' C' A').",
                        "VernacExtend",
                        "94b2388a7ba98bccb6b0b74e6c7307f549954ade"
                    ]
                },
                {
                    "command": [
                        "repeat split; cong.",
                        "VernacExtend",
                        "94ebe978cb673990d7eef0578ed2a6a61fe93e88"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply cong3_conga.",
                        "VernacExtend",
                        "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply cong3_conga.",
                        "VernacExtend",
                        "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cong3_conga.",
                        "VernacExtend",
                        "ad6ff9a909359a06444d6b0b27dddddb06e03f5f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_distinct",
            "line_nb": 7389,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold CongA in H.",
                        "VernacExtend",
                        "ee14377b87eaf0aa70d6485f3ac3c948d3021727"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; assumption.",
                        "VernacExtend",
                        "bef73d469c4b2563d199e8ad8bbc5c71357e330c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong2_conga_obtuse__cong_conga2",
            "line_nb": 7973,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (l11_52 A B C A' B' C'); auto.",
                        "VernacExtend",
                        "46f003eec3c2daf520c75010c446c58ff4f42a38"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "apply bet__le2313, col_obtuse__bet; assumption.",
                        "VernacExtend",
                        "5bdca67d4f3a1fc87e49bcede609781b01e5de2c"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply l11_46; auto.",
                        "VernacExtend",
                        "ee4cc4d8bce8f9d18a10b879d9374098d5cd8237"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong2_per2__cong_conga2",
            "line_nb": 7980,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_46 A B C) as [_ []]; auto using per_not_col.",
                        "VernacExtend",
                        "3d76ed5eae44b0c40f7fb6ca9a82f5e44a5dbdf0"
                    ]
                },
                {
                    "command": [
                        "apply (l11_52 A B C A' B' C');auto.",
                        "VernacExtend",
                        "46f003eec3c2daf520c75010c446c58ff4f42a38"
                    ]
                },
                {
                    "command": [
                        "apply l11_16;auto.",
                        "VernacExtend",
                        "f55656560cb5b4267b2671cabb23ed36e27b289e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst B'.",
                        "VernacExtend",
                        "8cde9e92b7e45a08022881a785185790cfb3adef"
                    ]
                },
                {
                    "command": [
                        "apply H9, cong_transitivity with A' C'; Cong.",
                        "VernacExtend",
                        "37d531a5b2189ec94f870a3f4d6e66dfd8aa0dbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong2_per2__cong",
            "line_nb": 7990,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points B C).",
                        "VernacExtend",
                        "78a4dc59cf41c1536399261576755a0c2955a4e0"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; Cong.",
                        "VernacExtend",
                        "3008ea797afa9551cbe2f0c6fa3d7ef0d856cdc4"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A' B'); subst; [Cong|].",
                        "VernacExtend",
                        "f5aee5c5e111e967bfd1fc796b680c9a70118460"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (cong2_per2__cong_conga2 A' B' C' B B C); Cong; Perp.",
                        "VernacExtend",
                        "36756098a6f5bd536ddf6b4c936ed28b72f32abb"
                    ]
                },
                {
                    "command": [
                        "apply cong2_per2__cong_conga2 with C C'; auto.",
                        "VernacExtend",
                        "3344a74a72b377b7e4b0eee2c54856b030221282"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong2_per2__cong_3",
            "line_nb": 8000,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3.",
                        "VernacExtend",
                        "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A B' A') by (apply (cong2_per2__cong A B C A' B' C');auto).",
                        "VernacExtend",
                        "e9a3a07163c3902bd9eee4a03ee21daa1e1a9296"
                    ]
                },
                {
                    "command": [
                        "repeat split;Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_lt_per2__lt",
            "line_nb": 8006,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points B C).",
                        "VernacExtend",
                        "78a4dc59cf41c1536399261576755a0c2955a4e0"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt B' A' C' A'); Cong.",
                        "VernacExtend",
                        "dcfcff031ce2e358a71a1209fa024537c09a5547"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l11_46; Perp.",
                        "VernacExtend",
                        "80778e64f12796dd86491eaad514388ea536b4c4"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[C0 []] HNCong].",
                        "VernacExtend",
                        "d327a9f713b6137cd153c2e1d2748ce788cc836b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Per A' B' C0) by (apply per_col with C'; Col).",
                        "VernacExtend",
                        "f4be780c32daac5116fd1ce6e53f1e46d8a7bf1d"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt A' C0 A' C'); [|apply l10_12 with B' B|]; Cong.",
                        "VernacExtend",
                        "243e272c4bba40f68acce5ff85b1a7a5abe69129"
                    ]
                },
                {
                    "command": [
                        "apply lt_comm.",
                        "VernacExtend",
                        "05636d126ed795799e01d08cb495b7db182d6198"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_53 C' C0 B' A'); Between.",
                        "VernacExtend",
                        "b2283f4a611848c4e9ac516c1b6064d604ebc2e8"
                    ]
                },
                {
                    "command": [
                        "intro; subst; auto.",
                        "VernacExtend",
                        "14c52ba75193a5cf953b4666ab65f547781225b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_le_per2__le",
            "line_nb": 8023,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (cong_dec B C B' C').",
                        "VernacExtend",
                        "7cee255fce36b26f6e9c7a77ea70a6c3f306ece5"
                    ]
                },
                {
                    "command": [
                        "apply cong__le, l10_12 with B B'; assumption.",
                        "VernacExtend",
                        "eb4423ec34893465c6ef67a49c0074f3a4528021"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C B' C') by (split; assumption).",
                        "VernacExtend",
                        "477dd6a54e3745b42c1b62f1deca67ce564c2119"
                    ]
                },
                {
                    "command": [
                        "apply lt__le, cong_lt_per2__lt with B B'; assumption.",
                        "VernacExtend",
                        "ee39b910cc8c6b78362800b2895df284e192c364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt2_per2__lt",
            "line_nb": 8030,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points B C).",
                        "VernacExtend",
                        "78a4dc59cf41c1536399261576755a0c2955a4e0"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply lt_transitivity with A' B'; auto.",
                        "VernacExtend",
                        "0abf6affdf4dab26cd072dcb8138d30fabadae86"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply lt_comm, l11_46; Perp.",
                        "VernacExtend",
                        "5ced2f48c5fad805d4a5f6c9192f42a88244af9f"
                    ]
                },
                {
                    "command": [
                        "apply lt_comm in H1.",
                        "VernacExtend",
                        "16e32a7b02e515069e5a1192902d45d9542dbb0a"
                    ]
                },
                {
                    "command": [
                        "assert (HC0 := H2).",
                        "VernacExtend",
                        "806c1026a14d03fde31b9d78399d0da75c19085c"
                    ]
                },
                {
                    "command": [
                        "destruct HC0 as [[C0 []] HNCong].",
                        "VernacExtend",
                        "8123d97c1abbefbf9c0a11ae478b832c53c69a8c"
                    ]
                },
                {
                    "command": [
                        "assert (Per A' B' C0).",
                        "VernacExtend",
                        "6ea15fdb9f2b98c571d156f4ee05f93bf13f31cf"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply per_col with C'; Col.",
                        "VernacExtend",
                        "ea2b225f91f1a513faded2c50d2a13023993514f"
                    ]
                },
                {
                    "command": [
                        "apply lt_transitivity with A' C0.",
                        "VernacExtend",
                        "d683ee0a4afff6a24da7bf32c55edbc4acb39beb"
                    ]
                },
                {
                    "command": [
                        "apply lt_comm, cong_lt_per2__lt with B B'; Cong; Perp.",
                        "VernacExtend",
                        "a213717d2f9b19f3bd40b7eb30cef899a0eb26f2"
                    ]
                },
                {
                    "command": [
                        "apply cong_lt_per2__lt with B' B'; Cong.",
                        "VernacExtend",
                        "c08a1ce2d8681be42b3d0ad8551be04b8fa9c2b8"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt B C B' C'); Cong.",
                        "VernacExtend",
                        "70159b665be78ebb784248563f996938127b1446"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_per2__lt",
            "line_nb": 8047,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (cong_dec A B A' B').",
                        "VernacExtend",
                        "df311debb7467d1ab57a9c901c99bdaa9ad48807"
                    ]
                },
                {
                    "command": [
                        "apply cong_lt_per2__lt with B B'; assumption.",
                        "VernacExtend",
                        "cd8738c6906fbf7904fe8e30fe1153f1356fc1dd"
                    ]
                },
                {
                    "command": [
                        "assert (Lt A B A' B') by (split; assumption).",
                        "VernacExtend",
                        "683e8427cd75e51b7222500c154baf6d24248586"
                    ]
                },
                {
                    "command": [
                        "apply lt2_per2__lt with B B'; assumption.",
                        "VernacExtend",
                        "a463a96033bb3486ac275f1b67559c2023aa49c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le2_per2__le",
            "line_nb": 8054,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (cong_dec B C B' C').",
                        "VernacExtend",
                        "7cee255fce36b26f6e9c7a77ea70a6c3f306ece5"
                    ]
                },
                {
                    "command": [
                        "apply le_comm, cong_le_per2__le with B B'; finish.",
                        "VernacExtend",
                        "d396dceb9c207544830882ed17cdc17b4d0f3ed6"
                    ]
                },
                {
                    "command": [
                        "assert (Lt B C B' C') by (split; assumption).",
                        "VernacExtend",
                        "477dd6a54e3745b42c1b62f1deca67ce564c2119"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_per2__lt with B B'; assumption.",
                        "VernacExtend",
                        "adb81c08c9f7dc2233b8b0c3cfb7b1ec05228cfc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_lt_per2__lt_1",
            "line_nb": 8061,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply nle__lt.",
                        "VernacExtend",
                        "63889d70b034028594d50020b89e18c6a0c3abbd"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (le_lt_per2__lt C B A C' B' A'); finish.",
                        "VernacExtend",
                        "435c3f2a895a31226ae357d2def7b3234caa1f1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symmetry_preserves_conga",
            "line_nb": 8067,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A B A' B').",
                        "VernacExtend",
                        "cb2fe00feef9320bbaef28a799d4f1c5f11694ab"
                    ]
                },
                {
                    "command": [
                        "apply (l7_13 M); Midpoint.",
                        "VernacExtend",
                        "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B C B' C').",
                        "VernacExtend",
                        "5b489bfcd3d3cf8630ee50d112339bddd0a8e35f"
                    ]
                },
                {
                    "command": [
                        "apply (l7_13 M); Midpoint.",
                        "VernacExtend",
                        "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
                    ]
                },
                {
                    "command": [
                        "assert(Cong A C A' C').",
                        "VernacExtend",
                        "7f7937af4c58896ae0d60bcc76d667aade32b5ed"
                    ]
                },
                {
                    "command": [
                        "apply (l7_13 M); Midpoint.",
                        "VernacExtend",
                        "603488c178e3b61a1e313c3bbcb9ac78886b83b7"
                    ]
                },
                {
                    "command": [
                        "apply cong3_conga; auto.",
                        "VernacExtend",
                        "397f25e3ba2fbd3549af8b80954c72862060259c"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_57",
            "line_nb": 8078,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' HOSB HPer1 HPer2 HOSC HPer3 HPer4.",
                        "VernacExtend",
                        "024b464b8ece5d0e020967724d45caa15a0f7d53"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A A') as [M HM].",
                        "VernacExtend",
                        "d2ee776021d8e2e58be9a30e9a9b3118fb7d1977"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction B M) as [B'' HB''].",
                        "VernacExtend",
                        "512bad485cf7c33e318bc3fd009d385c786f51d0"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction C M) as [C'' HC''].",
                        "VernacExtend",
                        "a5c1bf03ab0306da4637d78adb2c630179d7de85"
                    ]
                },
                {
                    "command": [
                        "assert (HNColB := one_side_not_col123 A A' B B' HOSB).",
                        "VernacExtend",
                        "ad06c5a6d5cf32c23f6795e0bd2ee6773330199f"
                    ]
                },
                {
                    "command": [
                        "assert (HNColC := one_side_not_col123 A A' C C' HOSC).",
                        "VernacExtend",
                        "d12635cb1de35b8ee8c7f385912426b5ea16234a"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with B'' A' C''.",
                        "VernacExtend",
                        "19ca0eae5daeaee1720536ec794b5025b3c4c83e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply symmetry_preserves_conga with M; auto.",
                        "VernacExtend",
                        "a0d82f19ad027e917f271679e33471e40728f21f"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B'' A A').",
                        "VernacExtend",
                        "0d768f646b050eef8b2d1503e62c3ec297182052"
                    ]
                },
                {
                    "command": [
                        "assert (B <> M) by (intro; subst; apply HNColB; Col); intro; apply HNColB; ColR.",
                        "VernacExtend",
                        "14882236c1a3f1d9621d5056e39e504e5e1874b4"
                    ]
                },
                {
                    "command": [
                        "assert (Bet B'' A' B').",
                        "VernacExtend",
                        "169a3b94af9f6f54a63f8fc69a91b7051ae02c7c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Col B' B'' A').",
                        "VernacExtend",
                        "3b6167788984ae045ab5006f1e669766a83174c4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply (cop_per2__col A); auto.",
                        "VernacExtend",
                        "6a4c29d1093eebf7ec917559312ff2bcc755404c"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_3, coplanar_trans_1 with B; [Col|Cop|].",
                        "VernacExtend",
                        "082ff535c0de736912de3add46bfd8fe85c607f7"
                    ]
                },
                {
                    "command": [
                        "exists M; right; right; split; Col.",
                        "VernacExtend",
                        "15d018d609dea9fe185f967dad34958e2153aa5d"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_preserves_per with B A A' M; Midpoint.",
                        "VernacExtend",
                        "aa21b42fddfbd5bdef29735acb744eec258cb1cf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply col_two_sides_bet with A; Col.",
                        "VernacExtend",
                        "c2d4c937e61c74d6a0f36aaf4643804a1ca61d14"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides, l9_2, l9_8_2 with B; trivial.",
                        "VernacExtend",
                        "6be294f90679de31a8ee3b02fb189d6ec14c3bfe"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "exists M; split; [Col|Between].",
                        "VernacExtend",
                        "5a01c140df02d236f43adc6188f17846a3259b50"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C'' A A').",
                        "VernacExtend",
                        "2e75ea870b616f0eea58403ba4270ba0bfe800ba"
                    ]
                },
                {
                    "command": [
                        "assert (C <> M) by (intro; subst; apply HNColC; Col); intro; apply HNColC; ColR.",
                        "VernacExtend",
                        "0b8d45c893d866947ea232f4efcfdc3ae9b8a666"
                    ]
                },
                {
                    "command": [
                        "assert (Bet C'' A' C').",
                        "VernacExtend",
                        "08b1a78801b851e8feb1517217a80602c57d27cd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Col C' C'' A').",
                        "VernacExtend",
                        "ac510accb29825c5bf342977d2485d920913878e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply (cop_per2__col A); auto.",
                        "VernacExtend",
                        "6a4c29d1093eebf7ec917559312ff2bcc755404c"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_3, coplanar_trans_1 with C; [Col|Cop|].",
                        "VernacExtend",
                        "c8ca94eafefa9d73de04fce5c6d08423fcfb7767"
                    ]
                },
                {
                    "command": [
                        "exists M; right; right; split; Col.",
                        "VernacExtend",
                        "15d018d609dea9fe185f967dad34958e2153aa5d"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_preserves_per with C A A' M; Midpoint.",
                        "VernacExtend",
                        "b5f418123e3594ca0470a4bcd9a1a6cd8bf639be"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply col_two_sides_bet with A; Col.",
                        "VernacExtend",
                        "c2d4c937e61c74d6a0f36aaf4643804a1ca61d14"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides, l9_2, l9_8_2 with C; trivial.",
                        "VernacExtend",
                        "19c18dae142e968a893c01c6c23cb2239ef950be"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "exists M; split; [Col|Between].",
                        "VernacExtend",
                        "5a01c140df02d236f43adc6188f17846a3259b50"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply one_side_not_col124 in HOSB.",
                        "VernacExtend",
                        "e9ed73324c802be7686e58f63e9cb432687cff5c"
                    ]
                },
                {
                    "command": [
                        "apply one_side_not_col124 in HOSC.",
                        "VernacExtend",
                        "e9670a2308b756ee0f87b4d1614485b0c900160d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply l11_14; auto.",
                        "VernacExtend",
                        "d2748102621534654ffc0a3096350c0cdf7734fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop3_orth_at__orth_at",
            "line_nb": 8123,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F U V X HNCol HD HE HF [HNCol1 [HUV [HX1 [HX2 HX3]]]].",
                        "VernacExtend",
                        "9791e33354e07a14e22e687a5d4eef13c339cac9"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; assumption.",
                        "VernacExtend",
                        "fef3ab684f73480b725a09c11925662b9e401c32"
                    ]
                },
                {
                    "command": [
                        "assert (forall M, Coplanar A B C M -> Coplanar D E F M).",
                        "VernacExtend",
                        "e91cd31390b49c57f7dbf6780ae99d292909b28c"
                    ]
                },
                {
                    "command": [
                        "intro; apply coplanar_pseudo_trans; Cop.",
                        "VernacExtend",
                        "a8aacd2b92b47c8f578a41ce2e63008aa561bbb4"
                    ]
                },
                {
                    "command": [
                        "assert (forall M, Coplanar D E F M -> Coplanar A B C M).",
                        "VernacExtend",
                        "2be7780f68082fcb0a04ef489c3fa18899667d67"
                    ]
                },
                {
                    "command": [
                        "intro; apply coplanar_pseudo_trans; Cop.",
                        "VernacExtend",
                        "a8aacd2b92b47c8f578a41ce2e63008aa561bbb4"
                    ]
                },
                {
                    "command": [
                        "intros; apply HX3; auto.",
                        "VernacExtend",
                        "915ce39663ecb0fe790e2cc3329460c5a87d4a57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col2_orth_at__orth_at",
            "line_nb": 8133,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q U V X HUV HU HV [HNCol [HPQ [HX1 [HX2 HX3]]]].",
                        "VernacExtend",
                        "f77cc55e6b96d556c2e8b02889dfd8468d3d77dd"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "apply (col3 P Q); auto.",
                        "VernacExtend",
                        "d9cb6082c7f412811b0d48a8145fef8f77eb0b78"
                    ]
                },
                {
                    "command": [
                        "intros D W HD HW.",
                        "VernacExtend",
                        "f1270181541d95725a7fce650e5c16ece6517b9b"
                    ]
                },
                {
                    "command": [
                        "apply HX3; [|apply (colx U V)]; assumption.",
                        "VernacExtend",
                        "52f673c7dee5a55467c23d762085da8d4bdf4f21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_orth_at__orth_at",
            "line_nb": 8140,
            "steps": [
                {
                    "command": [
                        "intros A B C U V W X HUW HCol HX.",
                        "VernacExtend",
                        "75edf38a85538df541db1b5151da4f6152f07d5d"
                    ]
                },
                {
                    "command": [
                        "apply col2_orth_at__orth_at with U V; Col.",
                        "VernacExtend",
                        "c497df46c67c9d833d660dbe08a3349d28774c05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at_symmetry",
            "line_nb": 8144,
            "steps": [
                {
                    "command": [
                        "unfold Orth_at.",
                        "VernacExtend",
                        "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
                    ]
                },
                {
                    "command": [
                        "intros A B C U V X HX; spliter.",
                        "VernacExtend",
                        "93fe4114244c30059385fb971e61ebc6e10997e5"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at_distincts",
            "line_nb": 8149,
            "steps": [
                {
                    "command": [
                        "unfold Orth_at; intros; spliter; assert_diffs.",
                        "VernacExtend",
                        "4ccea4eb0917e4e0551716c2f457e7acf779df61"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at_chara",
            "line_nb": 8153,
            "steps": [
                {
                    "command": [
                        "intros A B C P X; split.",
                        "VernacExtend",
                        "2f7d7a14c338607895b23fb0a12f277de5e9dbe7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold Orth_at; intro; spliter.",
                        "VernacExtend",
                        "85653aa96b340e820ac5273281fd783c56ee9873"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; spliter.",
                        "VernacExtend",
                        "8c12bb0f80b77e560a7d26b76aac4b3a29986a28"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "intros; apply per_col with P; auto.",
                        "VernacExtend",
                        "b4d37855197d9b323787f0bceb1ec632c6ae5a59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop3_orth__orth",
            "line_nb": 8163,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F U V HNCol HD HE HF [X HX].",
                        "VernacExtend",
                        "a7d6a819ace99ffbfbdff0760c59be26e2c9afd5"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "apply (cop3_orth_at__orth_at A B C); assumption.",
                        "VernacExtend",
                        "cbeb692ffd7ecff3f12fabe65269b1bedcb52778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col2_orth__orth",
            "line_nb": 8168,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q U V HUV HU HV [X HX].",
                        "VernacExtend",
                        "f72ff7d8ac8ea69465ba34b1d359973eb988eb02"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "apply col2_orth_at__orth_at with P Q; assumption.",
                        "VernacExtend",
                        "5b8ef75c8935fe6a0fc8e0026fb874bac7b571c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_orth__orth",
            "line_nb": 8173,
            "steps": [
                {
                    "command": [
                        "intros A B C U V W HUW HCol HOrth.",
                        "VernacExtend",
                        "c29c5040c81dbd324eafd30551b49aa95258eb97"
                    ]
                },
                {
                    "command": [
                        "apply col2_orth__orth with U V; Col.",
                        "VernacExtend",
                        "292bcb8a55a55fd95759c8a1527a561ffc88aac7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_symmetry",
            "line_nb": 8177,
            "steps": [
                {
                    "command": [
                        "intros A B C U V [X HX].",
                        "VernacExtend",
                        "8e36a80777315672688aac084de95e0cd7703cda"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_symmetry, HX.",
                        "VernacExtend",
                        "119816b70404fda335ab3979177b93c48df0bb49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_distincts",
            "line_nb": 8182,
            "steps": [
                {
                    "command": [
                        "intros A B C U V [X HX].",
                        "VernacExtend",
                        "8e36a80777315672688aac084de95e0cd7703cda"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_distincts with X, HX.",
                        "VernacExtend",
                        "aa5908b3b6f9ec8435f8c656d570df24fe9084de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cop_orth__orth_at",
            "line_nb": 8186,
            "steps": [
                {
                    "command": [
                        "intros A B C U V X [Y [HNCol [HUV [HY1 [HY2 HY3]]]]] HX1 HX2.",
                        "VernacExtend",
                        "2b9c7c3e064bfa445b033f8117035c4ec206642d"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "replace X with Y; [assumption|].",
                        "VernacExtend",
                        "dd69640d41995d43bec71c27c06d88eacc1035d6"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, l8_8; auto.",
                        "VernacExtend",
                        "87e48222c1f827586c820bf9661b61a59bdd6f02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_60_aux",
            "line_nb": 8192,
            "steps": [
                {
                    "command": [
                        "intros A B C D P Q HNCol HA HB HC HCop.",
                        "VernacExtend",
                        "7adae3566b74b93643134405aa268b81be48edc4"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence P Q) as [M []].",
                        "VernacExtend",
                        "6e3bde2201daa1983eb61c8028c08a6885b663a4"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; destruct HCop as [X [|[|]]]; spliter.",
                        "VernacExtend",
                        "fbd3d0591d0c202f033480e0136cd303eb258c7b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with C X; Col.",
                        "VernacExtend",
                        "78cd21059483e6576d324c10511a5c1320ccdf05"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply HNCol; assumption.",
                        "VernacExtend",
                        "e262790366918a64d8bac15316d738f26a1f349e"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with A B; auto.",
                        "VernacExtend",
                        "635a1391bd8de880e5d868946badfa91ba4f95b3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with B X; Col.",
                        "VernacExtend",
                        "35ff21f222de60047700d0fff38bcafb18c78550"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply HNCol; Col.",
                        "VernacExtend",
                        "209688d772b0ec1f61196134dfb7fc4fc476e825"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with A C; auto.",
                        "VernacExtend",
                        "839c25b892ab4f7766bc9c8317a51c90adf16b20"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with A X; Col.",
                        "VernacExtend",
                        "d0b71cd7bdd0b33a573b8066cd3e124e68004da5"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply HNCol; Col.",
                        "VernacExtend",
                        "209688d772b0ec1f61196134dfb7fc4fc476e825"
                    ]
                },
                {
                    "command": [
                        "apply l4_17 with B C; auto.",
                        "VernacExtend",
                        "936e9279ee5f4695dd9a5ca69e0797cc89ed5b4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_60",
            "line_nb": 8209,
            "steps": [
                {
                    "command": [
                        "intros A B C D E P HNCol HPerA HPerB HPerC HCop.",
                        "VernacExtend",
                        "cc30c95eb2671e53386f66bbf62d499b9fa45fdf"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points D P).",
                        "VernacExtend",
                        "6ecc04f37482474092d71ded4df890c67cd85ff9"
                    ]
                },
                {
                    "command": [
                        "subst; apply l8_5.",
                        "VernacExtend",
                        "2d7f88fef5bf02a34ea7136be0b974c5a89db168"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P D) as [P'].",
                        "VernacExtend",
                        "56ab4ef0349400cea4a9c1553097f803d2226acd"
                    ]
                },
                {
                    "command": [
                        "exists P'; split; auto.",
                        "VernacExtend",
                        "2e7a60ed3d440c06e7fae8499e04fdff4136c3ab"
                    ]
                },
                {
                    "command": [
                        "apply (l11_60_aux A B C); [|apply per_double_cong with D..|]; assumption.",
                        "VernacExtend",
                        "e5d4325eb44e48576d57ae5aaa693ff089e5159b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_60_bis",
            "line_nb": 8217,
            "steps": [
                {
                    "command": [
                        "intros A B C D P HNCol HDP HD HA HB HC.",
                        "VernacExtend",
                        "4ed7b41dda1cda6c7e927eca2b54a11401ccd39c"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "intros E Q HE HQ.",
                        "VernacExtend",
                        "a5a14965059b54f40003e137f9fac28eea04a647"
                    ]
                },
                {
                    "command": [
                        "apply per_col with P; auto.",
                        "VernacExtend",
                        "9fe286992f37af5eceba833042b9d1007449c2b8"
                    ]
                },
                {
                    "command": [
                        "apply (l11_60 A B C); assumption.",
                        "VernacExtend",
                        "8095ed8d622ffce87b47b34d1eaf2430a4fd257e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_61",
            "line_nb": 8224,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C'; intros.",
                        "VernacExtend",
                        "51d8bb6037463527defe7bef1b049bb4e216b150"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C A A') by (assert_diffs; apply per_not_col; auto).",
                        "VernacExtend",
                        "1fe7dd676bdd5f83cefd9dcec70ec49a1ebd3e3f"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A A' A' C) as [C'' []]; Col.",
                        "VernacExtend",
                        "4ed06e7f1b47727682512debda24ed69486cdc8c"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, (l11_60 A' A C''); [apply one_side_not_col124 with C; Side|Perp..| |apply coplanar_trans_1 with C; Col; Cop].",
                        "VernacExtend",
                        "d36bdf8386131a6908f00f13c1a7bf1dd3da62f2"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "revert dependent B'.",
                        "VernacExtend",
                        "053af2127c68274e6fabf554a0777f9cbfc9c733"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall B', OS A A' B B' -> Per B' A' A -> Per B' A' C'').",
                        "VernacExtend",
                        "ef22ec20278a8f44dc2902e347b5153ce87a58ec"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros B' HOS HPer.",
                        "VernacExtend",
                        "0cdbe99d68199676d9ced9e4e471277f0dfd8a64"
                    ]
                },
                {
                    "command": [
                        "apply (l11_17 B A C); trivial.",
                        "VernacExtend",
                        "c0a5f148e7b9632370def1e1aa50d80f423207d0"
                    ]
                },
                {
                    "command": [
                        "apply l11_57; Perp.",
                        "VernacExtend",
                        "04cddfb14fc55744a03557625d634aabd2ef53a0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro B'; intros.",
                        "VernacExtend",
                        "005f14bdee5f86142835f96f8529252b142a2691"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points B' A'); [subst; Perp|].",
                        "VernacExtend",
                        "9f0954632c0b1563234ea3657e41fc3b959075a8"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col B' A' A) by (apply per_not_col; auto).",
                        "VernacExtend",
                        "41b7ac604de9efe1df4a95d89cec6fb84ebbd541"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__one_or_two_sides A A' B B'); Col.",
                        "VernacExtend",
                        "d19eaaed17752fb81259d8903871a1caff63f7e2"
                    ]
                },
                {
                    "command": [
                        "apply per_not_col; auto.",
                        "VernacExtend",
                        "d63d5952cf2436a9063723d705acf1d4b8e7f322"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction B' A' A' B') as [B'' []].",
                        "VernacExtend",
                        "217b0470270fe8b4e8d4ff3d279743cd301b6932"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, per_col with B''; Col.",
                        "VernacExtend",
                        "a956926b76cc3e2c624fd90d41cbfe15194a7755"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, Haux; [|apply l8_2, per_col with B'; Perp; Col].",
                        "VernacExtend",
                        "5f6f5b5a3bef45e686961053ce474dfe2a0b7386"
                    ]
                },
                {
                    "command": [
                        "exists B'; split; trivial.",
                        "VernacExtend",
                        "8c91830a66dc0c8b7b2c9b319094e8407a517674"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol; ColR.",
                        "VernacExtend",
                        "80b045be857eff3fb5b48d773ec57291fa069e50"
                    ]
                },
                {
                    "command": [
                        "exists A'; split; Col; Between.",
                        "VernacExtend",
                        "3daf405d96ac770108cfdf93f6141c2a07843988"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_61_bis",
            "line_nb": 8252,
            "steps": [
                {
                    "command": [
                        "intros A B C D E P Q [HNCol [HDP [HD [_ HOrth]]]] HPerp HE HCop.",
                        "VernacExtend",
                        "0f17041fc782e335674469d1207ec0179a036a14"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall M, Coplanar A B C M -> Per M E Q).",
                        "VernacExtend",
                        "c050b07b70bf67f89e493cfc6432cbb922562fc5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros M HM.",
                        "VernacExtend",
                        "ceb50bc8e9153612adb5fe7d6c120e4fb8f01344"
                    ]
                },
                {
                    "command": [
                        "assert (HD' : exists D', Perp D E D' D /\\ Coplanar A B C D').",
                        "VernacExtend",
                        "a35933edb282aac19d081366216b562a4791cafc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop A B C D E) as [F []]; auto.",
                        "VernacExtend",
                        "f2eb0a2f0ce49f2a9ac4165e5b37068b2c271b52"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_perp_cop D E D F) as [D' []]; auto.",
                        "VernacExtend",
                        "082905fc2b4d04caffb237b4bcec1c9c417050b6"
                    ]
                },
                {
                    "command": [
                        "exists D'; split; auto.",
                        "VernacExtend",
                        "651a71a3326cef96e0507e459086ad07f9773c1f"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with D E F; trivial; apply coplanar_pseudo_trans with A B C; Cop.",
                        "VernacExtend",
                        "12131fe9037b0b80b7f994b5887f621fc52eea71"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HD' as [D' []].",
                        "VernacExtend",
                        "59fc638dcaecc584682405f4d987fcb8c312da56"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, (l11_61 D P D'); auto.",
                        "VernacExtend",
                        "8b3e8485ee13172429748b889254f1fe20e699cc"
                    ]
                },
                {
                    "command": [
                        "apply l8_2; Col.",
                        "VernacExtend",
                        "3cbf08cadc4f7dfaff2dabf697bdccc7f1657941"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; assumption.",
                        "VernacExtend",
                        "fef3ab684f73480b725a09c11925662b9e401c32"
                    ]
                },
                {
                    "command": [
                        "Perp.",
                        "VernacExtend",
                        "d897d03998ce7ea1641ab7106e051489d6e3a9db"
                    ]
                },
                {
                    "command": [
                        "apply l8_2; Col.",
                        "VernacExtend",
                        "3cbf08cadc4f7dfaff2dabf697bdccc7f1657941"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros; apply per_col with Q; Cop.",
                        "VernacExtend",
                        "62a8ad74ca4e41d725d8437ec66a56ca260e9593"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_62_unicity",
            "line_nb": 8277,
            "steps": [
                {
                    "command": [
                        "intros A B C D D' P HCop HCop' HD HD'.",
                        "VernacExtend",
                        "5b69c0904b2c68681efa645a2a8ccf605b012b6c"
                    ]
                },
                {
                    "command": [
                        "apply l8_7 with P; Perp.",
                        "VernacExtend",
                        "67ac33d7fd7e9873b7c517b3212cef257859c2fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_62_unicity_bis",
            "line_nb": 8281,
            "steps": [
                {
                    "command": [
                        "unfold Orth_at.",
                        "VernacExtend",
                        "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
                    ]
                },
                {
                    "command": [
                        "intros A B C U X Y HX HY.",
                        "VernacExtend",
                        "04a271795cbb01def6060314ab662bde81a15201"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_62_unicity with A B C U; trivial; intros; Col.",
                        "VernacExtend",
                        "287db4a0db2b2e3211e6cfde6212648e1f3e772c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at2__eq",
            "line_nb": 8287,
            "steps": [
                {
                    "command": [
                        "unfold Orth_at.",
                        "VernacExtend",
                        "b1322861542e7bef059d6be00f6ec4ba36ed24a4"
                    ]
                },
                {
                    "command": [
                        "intros A B C U V X Y HX HY.",
                        "VernacExtend",
                        "c29e01cdfb46c0171363089c8c0fd6820c905168"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_62_unicity with A B C U; trivial; intros; Col.",
                        "VernacExtend",
                        "287db4a0db2b2e3211e6cfde6212648e1f3e772c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cop_orth_at__eq",
            "line_nb": 8293,
            "steps": [
                {
                    "command": [
                        "intros A B C U V X Y HOrth HCop HCol.",
                        "VernacExtend",
                        "ef780e222c0c4522a880ec75bca1f3143a9f05ee"
                    ]
                },
                {
                    "command": [
                        "apply (orth_at2__eq A B C U V); [assumption|].",
                        "VernacExtend",
                        "a472c955969b4402c3aa752e6e3025cc5d75ac43"
                    ]
                },
                {
                    "command": [
                        "apply col_cop_orth__orth_at; [exists X|..]; assumption.",
                        "VernacExtend",
                        "87da73a848af518826b9434ff5052770debfb434"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at__ncop1",
            "line_nb": 8298,
            "steps": [
                {
                    "command": [
                        "intros A B C U V X HUX HOrth HCop.",
                        "VernacExtend",
                        "580b96722de6a6c937e39c9ef12fa8bf0f26ad7b"
                    ]
                },
                {
                    "command": [
                        "apply HUX, eq_sym, (col_cop_orth_at__eq A B C U V); Col.",
                        "VernacExtend",
                        "6ea73b879895992d3ebb860f8a5e080ab0af9957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at__ncop2",
            "line_nb": 8302,
            "steps": [
                {
                    "command": [
                        "intros A B C U V X HUX HOrth.",
                        "VernacExtend",
                        "9d0e6ada4f136d24ee3a8cee6e26c11798b68346"
                    ]
                },
                {
                    "command": [
                        "apply orth_at__ncop1 with U X; [assumption|apply orth_at_symmetry, HOrth].",
                        "VernacExtend",
                        "052350a3f9736f8247bd26e1889d8f4f806934c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at__ncop",
            "line_nb": 8306,
            "steps": [
                {
                    "command": [
                        "intros A B C P X HOrth.",
                        "VernacExtend",
                        "361ea52cafc38beaae460878ccc73b414df92c68"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := HOrth); apply orth_at_distincts in Hd; spliter.",
                        "VernacExtend",
                        "5fd1ea76c4a590434d85d84f6fbcac1dc9f6a22f"
                    ]
                },
                {
                    "command": [
                        "apply orth_at__ncop2 with X X; auto.",
                        "VernacExtend",
                        "fd10b24ed78908d503c5d666607993afc9512284"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_62_existence",
            "line_nb": 8311,
            "steps": [
                {
                    "command": [
                        "intros A B C P.",
                        "VernacExtend",
                        "f871c2e675fa1d59560879ebabe0a9b7e333e50c"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C P) as [|HNCop].",
                        "VernacExtend",
                        "f8e552582cbe514fc5aa81e50f6672e3cd39987e"
                    ]
                },
                {
                    "command": [
                        "exists P; split; [assumption|intros; Perp].",
                        "VernacExtend",
                        "c22a48e03d92015225392d6e761991e6d9d8d589"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col A B C) by (apply ncop__ncol with P, HNCop).",
                        "VernacExtend",
                        "8baddcae0c202d37cbccac138dda4ad6b45b298d"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B P) as [D0 [HCol0 HPerp0]].",
                        "VernacExtend",
                        "d691d967c3b806422e66b2332233efdac35e4ca9"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCop; exists P; left; split; Col.",
                        "VernacExtend",
                        "0f9f3ed27fc0274bd2d7156c9e2dffb5054a923c"
                    ]
                },
                {
                    "command": [
                        "assert (HCop0 : Coplanar A B C D0) by (exists D0; left; split; Col).",
                        "VernacExtend",
                        "e17c1b54f28bddc2eeb5267b7a8ab9e3fe04f0f8"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_perp_cop A B D0 C) as [D1 [HPerp1 HCop1]]; auto.",
                        "VernacExtend",
                        "02ec5f61c212a75fe8cf9adb182029b7336764db"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_not_col2 A B D1 D0 HPerp1) as [HNCol1|]; [|exfalso; Col].",
                        "VernacExtend",
                        "d6c1b70e0cba60671469d1a906dd8f682e258bbb"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall D, Col D0 D1 D -> Coplanar A B C D).",
                        "VernacExtend",
                        "610ea4625c36ddc07ebe36d303ec75f7ea4570e3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros D HD.",
                        "VernacExtend",
                        "3f7bba42b50fbac7989b052ad6b7515ffae391e9"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with D1; [Col|Cop|].",
                        "VernacExtend",
                        "5769cf0adbe8af356d95f55eed8e9de7f3de9921"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply coplanar_perm_12, col_cop__cop with D0; Col; Cop.",
                        "VernacExtend",
                        "6dbd1ce785476a9fc78ce7e327a313d4f3312866"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 A B D0 HCol0) as [A0].",
                        "VernacExtend",
                        "cbd13970cd10d633be095b9e8654055222743abd"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (HCopA : Coplanar A B C A0) by (exists A0; left; split; Col).",
                        "VernacExtend",
                        "09a9e56699542f722988e209ce00c71d160c7d1f"
                    ]
                },
                {
                    "command": [
                        "assert (Per P D0 A0) by (destruct (l8_16_1 A B P A0 D0); auto).",
                        "VernacExtend",
                        "fe29697027e3c85d6cf0916523ce13f401665887"
                    ]
                },
                {
                    "command": [
                        "destruct (per_dec P D0 D1) as [|HNPer].",
                        "VernacExtend",
                        "1dc28ddb56255e4e2fb7149dc842d51f58cf826f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists D0.",
                        "VernacExtend",
                        "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
                    ]
                },
                {
                    "command": [
                        "split; Col.",
                        "VernacExtend",
                        "aa5cae43f030df753431c4227d6e2b42d3c89c38"
                    ]
                },
                {
                    "command": [
                        "intros E HE.",
                        "VernacExtend",
                        "41fcabbb4c888642410f290b2cabc1a3e042b2aa"
                    ]
                },
                {
                    "command": [
                        "apply l11_60 with A0 D1 D0; Perp.",
                        "VernacExtend",
                        "d9196182ad400a1120106aa8f4d51caa30d92a78"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol1; ColR.",
                        "VernacExtend",
                        "db4c88af58e53c21b69c0295f95e83a9658421f3"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; trivial.",
                        "VernacExtend",
                        "3c7fe197950dc739e313782b702ac8e80bcc052c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence D0 D1 P) as [D []]; Col.",
                        "VernacExtend",
                        "d2c7d7d42473743333735a353d53ca39a24d7159"
                    ]
                },
                {
                    "command": [
                        "intro Habs; apply HNCop, Haux, Habs.",
                        "VernacExtend",
                        "571dfbff5f4af9082eccdb73852c48cc2a71961c"
                    ]
                },
                {
                    "command": [
                        "exists D; split; auto.",
                        "VernacExtend",
                        "ae7ff0a651872c5d84e497d5d4a680617a8dacfc"
                    ]
                },
                {
                    "command": [
                        "intros E HE.",
                        "VernacExtend",
                        "41fcabbb4c888642410f290b2cabc1a3e042b2aa"
                    ]
                },
                {
                    "command": [
                        "assert (D <> D0) by (intro; subst; apply HNPer; Perp).",
                        "VernacExtend",
                        "b0c4389660c937ee4bb5203e7de8aa6895ae5230"
                    ]
                },
                {
                    "command": [
                        "assert (HPer : Per D0 D P) by (apply perp_per_1, perp_left_comm, perp_col with D1; auto).",
                        "VernacExtend",
                        "3b358b8a5103c0f7dbaf61b2f8a8647b3fef0b22"
                    ]
                },
                {
                    "command": [
                        "assert (HPer1 : Per D D0 A0).",
                        "VernacExtend",
                        "2d2c0b2569252920f39eeb03f096bd4343edba84"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply l8_2, per_col with D1; auto; destruct (l8_16_1 A B D1 A0 D0); Perp.",
                        "VernacExtend",
                        "25c64b1bc923b7e4fc92dc22ea8360c502ec195e"
                    ]
                },
                {
                    "command": [
                        "apply l11_60 with D0 A0 D; Perp; [apply per_not_col in HPer1; Col|..].",
                        "VernacExtend",
                        "57e26a0ba5765d23fba443732b3d873bef902cb5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction A0 D) as [A0'].",
                        "VernacExtend",
                        "684c912760db21cee91f0bee6ce05cc668c9bd89"
                    ]
                },
                {
                    "command": [
                        "apply l8_2; exists A0'; split; trivial.",
                        "VernacExtend",
                        "369464b9eec178099552fad5eae6a7f1d1093f6d"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction D0 D) as [D0'].",
                        "VernacExtend",
                        "d5dcd0fa732c37234e2ef498a81d295d5ac9c5c0"
                    ]
                },
                {
                    "command": [
                        "apply l10_12 with D0 D0'; [..|apply per_double_cong with D|apply cong_symmetry, l7_13 with D]; Perp.",
                        "VernacExtend",
                        "249005fb38c8902bcde2891fec88f5cfaeba3f91"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P D) as [P'].",
                        "VernacExtend",
                        "56ab4ef0349400cea4a9c1553097f803d2226acd"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_preserves_per with P' D0 A0 D; Midpoint.",
                        "VernacExtend",
                        "b008d24af31cfe93e1f01bd059dd662d6973d295"
                    ]
                },
                {
                    "command": [
                        "apply l11_60 with P D D0; Perp; [|exists P'; left; split; Col].",
                        "VernacExtend",
                        "c77f9b2ab3f6948bddb8653d8a0f64f00483173e"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCop, coplanar_trans_1 with D1; Col; [Cop|].",
                        "VernacExtend",
                        "7586032e9834b443b330d480055674b9e06e272b"
                    ]
                },
                {
                    "command": [
                        "exists D0; right; right; split; ColR.",
                        "VernacExtend",
                        "7fa6c855d32cd63dba305afc660e74a593a04365"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; trivial.",
                        "VernacExtend",
                        "3c7fe197950dc739e313782b702ac8e80bcc052c"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with D1; Col.",
                        "VernacExtend",
                        "f8a550f7de74ee53eaf9d84fa41c786aa09cae41"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "exists D0; right; right; split; Col.",
                        "VernacExtend",
                        "46649ba8a923c1d8445c2e06938416c3deeb82ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_62_existence_bis",
            "line_nb": 8366,
            "steps": [
                {
                    "command": [
                        "intros A B C P HNCop.",
                        "VernacExtend",
                        "40c7ec48811b654a3cb68e05b35c86ef025f2f30"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence A B C P) as [X [HCop HX]].",
                        "VernacExtend",
                        "aabced8848fe1d7e3207f2148590266572655c64"
                    ]
                },
                {
                    "command": [
                        "assert (X <> P) by (intro; subst; apply (HNCop HCop)).",
                        "VernacExtend",
                        "67f39750ab2b99e4679aa4e4f1be33776d2a3da3"
                    ]
                },
                {
                    "command": [
                        "exists X; repeat split; Col.",
                        "VernacExtend",
                        "918f6ad10e6d2c66e8738f7d3093a8104bf4a2d2"
                    ]
                },
                {
                    "command": [
                        "apply ncop__ncol with P, HNCop.",
                        "VernacExtend",
                        "d90ee7c6d1100c7e113950de5d1424318b1c1f6c"
                    ]
                },
                {
                    "command": [
                        "intros D Q HD HQ.",
                        "VernacExtend",
                        "39cab403ad2b7230b3111bddf6051d9fbc9a598c"
                    ]
                },
                {
                    "command": [
                        "apply per_col with P; auto.",
                        "VernacExtend",
                        "9fe286992f37af5eceba833042b9d1007449c2b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_63_aux",
            "line_nb": 8375,
            "steps": [
                {
                    "command": [
                        "intros A B C D E P HD HDE HOrth.",
                        "VernacExtend",
                        "4ebfe34dd9d54f94fa259a3c678041f224cf3da8"
                    ]
                },
                {
                    "command": [
                        "assert (H' := HOrth).",
                        "VernacExtend",
                        "8e12598f8aa0f918342378a8eb9bb76ee7b8a234"
                    ]
                },
                {
                    "command": [
                        "destruct H' as [HNCol [HEP [HE1 [_ HE2]]]].",
                        "VernacExtend",
                        "6b143d6e4e4568c557d872367054009d668dd879"
                    ]
                },
                {
                    "command": [
                        "assert (HNCop : ~ Coplanar A B C P).",
                        "VernacExtend",
                        "b2043d03f004ad068d0a89c5b4e1dea760f3024c"
                    ]
                },
                {
                    "command": [
                        "intro; apply HEP, (col_cop_orth_at__eq A B C E P); Col.",
                        "VernacExtend",
                        "c13c48c0ee8ecacf430c7d51060181afde8b6fec"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 D E D P) as [Q [HQ1 HQ2]]; Col.",
                        "VernacExtend",
                        "f7a064d547b46f14f3bd8cb18d53189c9f362b25"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCop, col_cop2__cop with D E; auto.",
                        "VernacExtend",
                        "9ef7cbffe9cddd2e98988ca01adc4376b03f6bb8"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "split; [assumption|].",
                        "VernacExtend",
                        "7cde69a70c5ebfed86f2eba0170f3307a52efee2"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop A B C D E HDE) as [F [HF1 HF2]].",
                        "VernacExtend",
                        "906f36d69a85c9a8ae937a88cc43b4f6bf44ab3a"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_perp_cop D E D F) as [D' [HD'1 HD'2]]; auto.",
                        "VernacExtend",
                        "9dd7844c1f1b4275e83904ecf5c38aa88f2380d2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col D' D E) by (assert_diffs; apply per_not_col; Perp).",
                        "VernacExtend",
                        "1e2f0416706ce484d87338ae434f704a36aad100"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar D E F A) by (apply coplanar_pseudo_trans with A B C; Cop).",
                        "VernacExtend",
                        "b5258a0492bce5441a5991918a7ea03d491ddf78"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar D E F B) by (apply coplanar_pseudo_trans with A B C; Cop).",
                        "VernacExtend",
                        "1fd05d4bd0910f47cbbb6eea291321071941d6a9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar D E F C) by (apply coplanar_pseudo_trans with A B C; Cop).",
                        "VernacExtend",
                        "dd01315af77c5f032652b8a1a23ae96bea6ffb1a"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "apply (cop3_orth_at__orth_at D' D E); [assumption|apply coplanar_pseudo_trans with D E F; Cop..|].",
                        "VernacExtend",
                        "d1426b3c515f8e856e0d9fa4a4809f232773a5aa"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l11_60_bis; Cop; [|Perp..].",
                        "VernacExtend",
                        "b86ff13ba1007d97243f8f5e60665a10b09ff55f"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_perp_cop D E E F) as [E' [HE'1 HE'2]]; auto.",
                        "VernacExtend",
                        "cbfae0b8c6bc99cf1c81b3aff6678cf9522d14d4"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply (l11_61 E E' P); Perp.",
                        "VernacExtend",
                        "b021d23cf835d925bf13a4ff2f8075570ae0d4e8"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with F; Col; Cop.",
                        "VernacExtend",
                        "1ae91e3c42cdb2f86bc39e322b7f4e285b57180c"
                    ]
                },
                {
                    "command": [
                        "apply os__coplanar in HQ2; Cop.",
                        "VernacExtend",
                        "dbd3296dee6a985ead73500fd069f13e36a44578"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, HE2; Col.",
                        "VernacExtend",
                        "93059b01d0f75c9f6bd76b4b8ce1a30718202449"
                    ]
                },
                {
                    "command": [
                        "apply HE2; Col; apply coplanar_pseudo_trans with D E F; assumption.",
                        "VernacExtend",
                        "96c68e7495c1c5875ead1c093d39e8f35c44b868"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l11_63_existence",
            "line_nb": 8403,
            "steps": [
                {
                    "command": [
                        "intros A B C D P HCop HNCop.",
                        "VernacExtend",
                        "66a9a04d30fb6585fa82d2691ee19840b9a4aabf"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C P HNCop) as [E HE].",
                        "VernacExtend",
                        "723252e053c5ced71da6372469202ec713a989c7"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points D E).",
                        "VernacExtend",
                        "d3235c34da890d51cedb91c17bde5012df92da7e"
                    ]
                },
                {
                    "command": [
                        "exists P, D; subst; assumption.",
                        "VernacExtend",
                        "836010be48b17e08990c08b78a4f63e613c5c84f"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_63_aux A B C D E P) as [Q []]; auto.",
                        "VernacExtend",
                        "ebe63b053776c478bd7a69031f2de21f456c6697"
                    ]
                },
                {
                    "command": [
                        "exists Q; assumption.",
                        "VernacExtend",
                        "d7a2e86bc4eff3fa11b3196644a15488c5e61a26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l8_21_3",
            "line_nb": 8411,
            "steps": [
                {
                    "command": [
                        "intros A B C D X HD HX.",
                        "VernacExtend",
                        "4641b9c7f09c0fb8913a9519fb6d69fefa1ec150"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C X HX) as [E HE].",
                        "VernacExtend",
                        "a8e1f37025f545af03c066c7d7d462c9c8aac741"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points D E).",
                        "VernacExtend",
                        "d3235c34da890d51cedb91c17bde5012df92da7e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst E.",
                        "VernacExtend",
                        "602b9fdd76c6547cb04a9ea19bb49c6bd62d5e8f"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction X D D X) as [Y []].",
                        "VernacExtend",
                        "d28284142c610db6ac9abb1a70dc35e1cab1ceb3"
                    ]
                },
                {
                    "command": [
                        "exists Y, D; subst; repeat split; trivial.",
                        "VernacExtend",
                        "3aa2e3b934f44fd3e80a3c0440aec528f4a0dae0"
                    ]
                },
                {
                    "command": [
                        "assert (D <> X) by (intro; subst; apply (HX HD)); assert_diffs.",
                        "VernacExtend",
                        "631a55e412ae88d7dedd981b19f24ea5d249f783"
                    ]
                },
                {
                    "command": [
                        "apply col_orth__orth with X; Col.",
                        "VernacExtend",
                        "df145ff15c426017bb87eff68fd3b18e416e7830"
                    ]
                },
                {
                    "command": [
                        "exists D; assumption.",
                        "VernacExtend",
                        "8ca6a8ccf0d8cd2a9c133b1363b080799a92bb9f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_63_aux A B C D E X) as [P' [HOS HP']]; auto.",
                        "VernacExtend",
                        "34f552966ae484b3e15acd567fe8489690be0dfe"
                    ]
                },
                {
                    "command": [
                        "destruct HE as [HNCol [HEX [HE [_ HOrth]]]].",
                        "VernacExtend",
                        "ab099580c4776961d19d574f465f07c899b20149"
                    ]
                },
                {
                    "command": [
                        "assert (HOrth' : Orth_at D A B C D P') by (apply col_cop_orth__orth_at; Col).",
                        "VernacExtend",
                        "87cb75a0e812d9a5b800c2c244e8da44cf4e9d28"
                    ]
                },
                {
                    "command": [
                        "assert (HDP' : D <> P') by (apply orth_distincts in HP'; spliter; auto).",
                        "VernacExtend",
                        "94e2fd22810defe5448cf57d42d1d06423b208bc"
                    ]
                },
                {
                    "command": [
                        "assert (HNCop : ~ Coplanar A B C P').",
                        "VernacExtend",
                        "b89a34177b8ba1405a12a79f04f9c30c1c456c7f"
                    ]
                },
                {
                    "command": [
                        "apply orth_at__ncop2 with D D; auto; apply col_cop_orth__orth_at; Col.",
                        "VernacExtend",
                        "cc86fddaa71d0c9b8048048c40e9495fe3452a33"
                    ]
                },
                {
                    "command": [
                        "destruct HOrth' as [_ [_ [_ [_ HOrth']]]].",
                        "VernacExtend",
                        "493867399ae415bbc0245329a66eee6e91455644"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction P' D D P') as [P []].",
                        "VernacExtend",
                        "2c6a9226d7594fe61d1529890f5e38e6f07f92c3"
                    ]
                },
                {
                    "command": [
                        "assert (HT : TS D E X P).",
                        "VernacExtend",
                        "acf34dbfeb4410ba511721c4c6e8c99bcedb351b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with P'; [|Side].",
                        "VernacExtend",
                        "1767d05537311450049a51235ffb7135d55328f9"
                    ]
                },
                {
                    "command": [
                        "repeat split; [intro; apply HNCop, col_cop2__cop with D E; ColR..|exists D; split; Col].",
                        "VernacExtend",
                        "f1bcc2dc2482b024cc6c1e26621df46b120a641e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HT as [_ [_ [T []]]].",
                        "VernacExtend",
                        "cf0025d1cf3bcc3d961f4a2362b5447e3f646743"
                    ]
                },
                {
                    "command": [
                        "exists P, T; repeat split; [|apply col_cop2__cop with D E; Col|assumption].",
                        "VernacExtend",
                        "6fa5766069b96d434ba0ddd1ac1aebfe00252353"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply col_orth__orth with P'; Col.",
                        "VernacExtend",
                        "42323110f057f4ffd74e4c2c9e93cbd6949c4453"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid2_orth_at2__cong",
            "line_nb": 8441,
            "steps": [
                {
                    "command": [
                        "intros A B C X Y P Q P' Q' HX1 HY1 HX2 HY2.",
                        "VernacExtend",
                        "19b69cc2b41ff37d70eb68c5f1c696997926a3b7"
                    ]
                },
                {
                    "command": [
                        "assert (HX3 := HX1).",
                        "VernacExtend",
                        "11c462770518baa5d6b1b8ab7831fa78a30347e9"
                    ]
                },
                {
                    "command": [
                        "destruct HX3 as [HNCol [HXP [HCop1 [_ HX3]]]].",
                        "VernacExtend",
                        "956c873eb96517e9c04adec498e704d07c8024b0"
                    ]
                },
                {
                    "command": [
                        "assert (HY3 := HY1).",
                        "VernacExtend",
                        "574d012dc74e3f908241d5598ad3287785139d2c"
                    ]
                },
                {
                    "command": [
                        "destruct HY3 as [_ [HYQ [HCop2 [_ HY3]]]].",
                        "VernacExtend",
                        "ee6b3a19ab2786736ebc6d02e42a4c5ec1e99682"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence X Y) as [Z].",
                        "VernacExtend",
                        "51807eead49e99f67d327c3efa7294035689c596"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P Z) as [R].",
                        "VernacExtend",
                        "2cc7d0953e175a00fd4cefd95da16b7851f89d9d"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P' Z) as [R'].",
                        "VernacExtend",
                        "61b8ff476eb0b715d65fb7eff7e61c505a20b05d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B C Z) by (apply bet_cop2__cop with X Y; Between).",
                        "VernacExtend",
                        "129de7c65cfe86b0a9c14ba98e0f5376e3bdf700"
                    ]
                },
                {
                    "command": [
                        "assert (Cong Z P Z P').",
                        "VernacExtend",
                        "f996a8687f6add760eb86aea80efecfca87c9e8f"
                    ]
                },
                {
                    "command": [
                        "apply per_double_cong with X; Col.",
                        "VernacExtend",
                        "0dba8ccc9b8a6e6294953b3a7a8571dacdafbcad"
                    ]
                },
                {
                    "command": [
                        "apply five_segment with R R' Z Z; Between.",
                        "VernacExtend",
                        "b0264440c1cab29cd7460d38dd474ea9b71a1f86"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with P Z; [|apply cong_transitivity with P' Z]; Cong.",
                        "VernacExtend",
                        "65b97c04ce086e684639f117019d7314bf089c9d"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry, l7_13 with Y; [apply symmetry_preserves_midpoint with P X P' Z|]; assumption.",
                        "VernacExtend",
                        "f53288b46ac276ebd348afeecb6e2309e5bcacc2"
                    ]
                },
                {
                    "command": [
                        "apply per_double_cong with Y; Col.",
                        "VernacExtend",
                        "f4362b6a7d958279e6aee0449bab598f201a97ba"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at2_tsp__ts",
            "line_nb": 8459,
            "steps": [
                {
                    "command": [
                        "intros A B C X Y P Q HPQ HP HQ [HX [HY [T [HT HBet]]]].",
                        "VernacExtend",
                        "69a8dd563dfb42ec0da0dd7a368ce4a666473417"
                    ]
                },
                {
                    "command": [
                        "assert (HP1 := HP).",
                        "VernacExtend",
                        "d4da89101796c2c948e3011dc0046a5abb58397e"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HP1; spliter.",
                        "VernacExtend",
                        "d622f6e61c048e5702eb0c87c805a140e3dca531"
                    ]
                },
                {
                    "command": [
                        "assert (HQ1 := HQ).",
                        "VernacExtend",
                        "8f3df8f29b258a98caf82e88b74a4bd6c21891ca"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HQ1; spliter.",
                        "VernacExtend",
                        "5f14e92ef3655adab64b69ae01fbc5c871fc7cd3"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "intro; apply HX, col_cop2__cop with P Q; Col.",
                        "VernacExtend",
                        "f078fe36cf74b8798770cf3bfd0e7aec2bb05c17"
                    ]
                },
                {
                    "command": [
                        "intro; apply HY, col_cop2__cop with P Q; Col.",
                        "VernacExtend",
                        "91bcb47f2adaa6aa7671ccb51c464002d859f84c"
                    ]
                },
                {
                    "command": [
                        "exists T; split; [|assumption].",
                        "VernacExtend",
                        "20ed919728bfd01dfe448e64f3e3df03c3cb74c8"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction X P) as [X'].",
                        "VernacExtend",
                        "83977b8328d8d5234887192f5af70f88a6b0df39"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction Y Q) as [Y'].",
                        "VernacExtend",
                        "a9ce26fb48f7c1e7b7a828dfcff22fdd8d8dd35c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong T X T X') by (apply per_double_cong with P; auto).",
                        "VernacExtend",
                        "ffac240b037ebd632e3b093d44e5edc3329b810c"
                    ]
                },
                {
                    "command": [
                        "assert (Cong T Y T Y') by (apply per_double_cong with Q; auto).",
                        "VernacExtend",
                        "f825126aa025312bef21cff93b8227594a72d955"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_4, bet_col, l7_22 with X Y X' Y'; trivial.",
                        "VernacExtend",
                        "5781d6b315813d8b6dc16a708dab329ea53a3ec3"
                    ]
                },
                {
                    "command": [
                        "apply (l4_6 X T Y); repeat split; Cong.",
                        "VernacExtend",
                        "111b34da77fecfdf5013525a95cb19d961bd116d"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B C) by (apply ncop__ncol with X, HX).",
                        "VernacExtend",
                        "e6e073e6575df5d6ee9f31c43c6815d3298e03f8"
                    ]
                },
                {
                    "command": [
                        "apply mid2_orth_at2__cong with A B C P Q; auto.",
                        "VernacExtend",
                        "f188d927ef16a893ddf2004cc52e4a960fd80d1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_dec",
            "line_nb": 8478,
            "steps": [
                {
                    "command": [
                        "intros A B C U V.",
                        "VernacExtend",
                        "5e498867dbfc4e732c53e107f5d653398fa853b1"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points U V).",
                        "VernacExtend",
                        "9f7598e080cde19bd68c120c7771aa7f8daab952"
                    ]
                },
                {
                    "command": [
                        "unfold Orth, Orth_at; right; intros [X []]; spliter; auto.",
                        "VernacExtend",
                        "82e9e1328cd77942a60fce9de3a6a7f26233a6cb"
                    ]
                },
                {
                    "command": [
                        "revert dependent V.",
                        "VernacExtend",
                        "052714346689fff8f6e7eea7b977fa6bcd876e74"
                    ]
                },
                {
                    "command": [
                        "revert U.",
                        "VernacExtend",
                        "c95d88226f1f03a3188a34cdc3ec08d9c8753051"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall U V, U <> V -> ~ Coplanar A B C U -> Orth A B C U V \\/ ~ Orth A B C U V).",
                        "VernacExtend",
                        "3f8ce342998cdb8b340c81280379e342380cb26c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros U V HUV HU.",
                        "VernacExtend",
                        "9b1006af62ad5df1934ba07c5c95faeb1a4fa1d6"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C U HU) as [X HX].",
                        "VernacExtend",
                        "d4a20dc2268560c4cb7746d32bd1aca715ad6a1c"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec U V X).",
                        "VernacExtend",
                        "197d600e59de92d8acf5de4d6bc9b9968f16cb03"
                    ]
                },
                {
                    "command": [
                        "left; apply col_orth__orth with X; Col; apply orth_symmetry; exists X; apply HX.",
                        "VernacExtend",
                        "ffab30870b58858007a22bf55a47158fa946bace"
                    ]
                },
                {
                    "command": [
                        "right; intros [Y HY].",
                        "VernacExtend",
                        "73105af7cee12b4c6ae7671d0c38a98f3d98865e"
                    ]
                },
                {
                    "command": [
                        "assert (X = Y).",
                        "VernacExtend",
                        "2bc2a01f660c74a9206acf39902b6fc29e98bdd3"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l11_62_unicity_bis with A B C U; [assumption|].",
                        "VernacExtend",
                        "f67dd3a7304068d1f677d11e52665ec2f498c3db"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_symmetry, col_orth_at__orth_at with V; [destruct HY; spliter..|]; trivial.",
                        "VernacExtend",
                        "2744918a674e7093a904b94a690c71ea48e6841c"
                    ]
                },
                {
                    "command": [
                        "intro; subst Y; absurd (Coplanar A B C U); [|assumption].",
                        "VernacExtend",
                        "1ac496deaf6d3f67be2bfc4358da4fd669d3549d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply orth_at__ncop2 with X X; auto.",
                        "VernacExtend",
                        "58207de3952c32134c5991a710cf394b1f07b6b6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "subst; destruct HY; spliter; Col.",
                        "VernacExtend",
                        "d42812a9134a5001e103e8adabce471c70f6fbf8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros U V HUV.",
                        "VernacExtend",
                        "30182e69ce4030fb3b6f2e9087fdc4ef18812110"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "unfold Orth, Orth_at; right; intros [X []]; spliter; auto.",
                        "VernacExtend",
                        "82e9e1328cd77942a60fce9de3a6a7f26233a6cb"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C U); [|auto].",
                        "VernacExtend",
                        "051c39ec07dfa1b92d77f188cdd719ed5351d67c"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C V).",
                        "VernacExtend",
                        "69a19983740214aed6a10ec7de44dfc1218ccaae"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; intro.",
                        "VernacExtend",
                        "0fd4b34386435b5a8272d82b153513f11dc07023"
                    ]
                },
                {
                    "command": [
                        "apply HUV, (orth_at2__eq A B C U V); apply col_cop_orth__orth_at; Col.",
                        "VernacExtend",
                        "1574a16797a5aa3e4a49b8dd79d7fd0d1387c918"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Haux V U) as [HOrth|HNOrth]; auto; [left|right; intro HOrth; apply HNOrth]; apply orth_symmetry, HOrth.",
                        "VernacExtend",
                        "a66fb8e894e4a786e4db8058d6fce3cf865bb945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orth_at_dec",
            "line_nb": 8511,
            "steps": [
                {
                    "command": [
                        "intros A B C U V X.",
                        "VernacExtend",
                        "ed5193ba4d492b98e9042d0de1a982a1152a45c4"
                    ]
                },
                {
                    "command": [
                        "destruct (orth_dec A B C U V) as [|HNOrth]; [|right; intro HX; apply HNOrth; exists X; apply HX].",
                        "VernacExtend",
                        "a9867aa8d417ae27ec029a5153cf77a6c944536d"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C X); [|unfold Orth_at; right; intro; spliter; auto].",
                        "VernacExtend",
                        "afdb00abc160d0d5f381ba5d3f506d35f6cce112"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec U V X) as [HCol|]; [|unfold Orth_at; right; intro; spliter; auto].",
                        "VernacExtend",
                        "77b295d61ffbfcc0b6bd61d73aaaccca895e5597"
                    ]
                },
                {
                    "command": [
                        "left; apply col_cop_orth__orth_at; assumption.",
                        "VernacExtend",
                        "76c88fdc55071325edc99a890fd18f554c9dfbb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tsp_dec",
            "line_nb": 8518,
            "steps": [
                {
                    "command": [
                        "intros A B C X Y.",
                        "VernacExtend",
                        "9dc2731015e9a5a816f77a42db5f33cd84f47f8e"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C X) as [|HX].",
                        "VernacExtend",
                        "56e3c3e3daf5ffe255530f0a6a344c14bfa00d7c"
                    ]
                },
                {
                    "command": [
                        "right; intros [Ha]; apply Ha; assumption.",
                        "VernacExtend",
                        "f32ab9ded5512b1d2e8c957b44c4e652d3485f11"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C Y) as [|HY].",
                        "VernacExtend",
                        "fe13de19058baa46b805296f6dae626c0379be88"
                    ]
                },
                {
                    "command": [
                        "right; intros [_ [Ha]]; apply Ha; assumption.",
                        "VernacExtend",
                        "3ecbe1e4bb1902c38c645e152890fa98af0ac375"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C X HX) as [P HP].",
                        "VernacExtend",
                        "282bce3f06b49ee600217640496e57aed1ffdf7b"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C Y HY) as [Q HQ].",
                        "VernacExtend",
                        "163f916db20b838019722301e563f0ffee0fd155"
                    ]
                },
                {
                    "command": [
                        "assert (HP1 := HP).",
                        "VernacExtend",
                        "d4da89101796c2c948e3011dc0046a5abb58397e"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HP1; spliter.",
                        "VernacExtend",
                        "d622f6e61c048e5702eb0c87c805a140e3dca531"
                    ]
                },
                {
                    "command": [
                        "assert (HQ1 := HQ).",
                        "VernacExtend",
                        "8f3df8f29b258a98caf82e88b74a4bd6c21891ca"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HQ1; spliter.",
                        "VernacExtend",
                        "5f14e92ef3655adab64b69ae01fbc5c871fc7cd3"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points P Q).",
                        "VernacExtend",
                        "8e638c9507dff8ea1ec15d7062e186c739c15f49"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst Q; clear HQ; destruct (bet_dec X P Y) as [|HNBet].",
                        "VernacExtend",
                        "54aa262d88fcf10f05524def140b428ebcb51f49"
                    ]
                },
                {
                    "command": [
                        "left; repeat split; trivial; exists P; split; trivial.",
                        "VernacExtend",
                        "9512de0dc5bfab1301090e7e2e247518f23c185c"
                    ]
                },
                {
                    "command": [
                        "right; intro HQ; apply HNBet.",
                        "VernacExtend",
                        "52a9f61ce34be5e60b4c58809a30c07498c488c0"
                    ]
                },
                {
                    "command": [
                        "destruct HQ as [_ [_ [Q [HQ HBet]]]].",
                        "VernacExtend",
                        "0d50a0cc1799f11f26bae6a838cc1226b41f77f1"
                    ]
                },
                {
                    "command": [
                        "replace P with Q; [assumption|].",
                        "VernacExtend",
                        "c5e0ef5ffc9651e2509cf2a5422b1b77224da97b"
                    ]
                },
                {
                    "command": [
                        "apply l8_8, (col_per2__per X Y); try (apply l8_2); Col.",
                        "VernacExtend",
                        "8023c7d82f0f284e75be3f448fbb0c1fcf171acb"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (two_sides_dec P Q X Y) as [HT|HNTS].",
                        "VernacExtend",
                        "90b5ec9465495ee5a8ca392a3d323570d2435514"
                    ]
                },
                {
                    "command": [
                        "left; apply cop2_ts__tsp with P Q; assumption.",
                        "VernacExtend",
                        "f96c94bad12d7089d216e2361d996c285a3ff4bc"
                    ]
                },
                {
                    "command": [
                        "right; intro; apply HNTS, (orth_at2_tsp__ts A B C); assumption.",
                        "VernacExtend",
                        "84973f8c1d03734e7896e2319228a910f675e6fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osp_dec",
            "line_nb": 8544,
            "steps": [
                {
                    "command": [
                        "intros A B C X Y.",
                        "VernacExtend",
                        "9dc2731015e9a5a816f77a42db5f33cd84f47f8e"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C X) as [|HX].",
                        "VernacExtend",
                        "56e3c3e3daf5ffe255530f0a6a344c14bfa00d7c"
                    ]
                },
                {
                    "command": [
                        "right; intros [X' [[Ha _] _]]; apply Ha; assumption.",
                        "VernacExtend",
                        "3cb9df55849aa8e64ac96a5fa8707a0b9b567e78"
                    ]
                },
                {
                    "command": [
                        "destruct (tsp_exists A B C X HX) as [X'].",
                        "VernacExtend",
                        "9c0893463dcc198247b77d73e8252256b52149a1"
                    ]
                },
                {
                    "command": [
                        "destruct (tsp_dec A B C Y X') as [|HNTS].",
                        "VernacExtend",
                        "2134f81786e9550290282180b8f2b3d9d0395d0e"
                    ]
                },
                {
                    "command": [
                        "left; exists X'; split; assumption.",
                        "VernacExtend",
                        "9acd9de15998a79a0d67139c36758b1260a10107"
                    ]
                },
                {
                    "command": [
                        "right; intro; apply HNTS; apply l9_41_2 with X; assumption.",
                        "VernacExtend",
                        "0a24e8a55273621b7d36d8868535d6192d5b1a1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "os_ts__inangle",
            "line_nb": 8553,
            "steps": [
                {
                    "command": [
                        "intros A B C P Hts Hos.",
                        "VernacExtend",
                        "f1f00931b0325d8a6a5a672b0277788ed992b4a7"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol : ~ Col A B P) by (destruct Hts as []; Col).",
                        "VernacExtend",
                        "d0f200d7acd44efc579ebf795da018a7c34fd0ce"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col B A C) by (apply (one_side_not_col123 _ _ _ P); auto).",
                        "VernacExtend",
                        "0c73dd9fe0ffb9143d3958a6a8d747c1f9d1ffb0"
                    ]
                },
                {
                    "command": [
                        "assert (HP' := symmetric_point_construction P B).",
                        "VernacExtend",
                        "626fc8c4553c961460b1ac773fabd8db2edce941"
                    ]
                },
                {
                    "command": [
                        "destruct HP' as [P'].",
                        "VernacExtend",
                        "25325204053d23146d468ba72155f3ecb51e155a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col B A P') by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "f5261fa03cfcf8937cddf393e1781caa1fc2640a"
                    ]
                },
                {
                    "command": [
                        "assert(HUn := two_sides_in_angle A B C P P').",
                        "VernacExtend",
                        "8ae8b19ad6bba13a96e75b5ed492cc6a1f447a6a"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [|Habs]; Between.",
                        "VernacExtend",
                        "e1ffd896b868a1d1adc23506dd862986ecf84913"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_one_side in Habs; Col.",
                        "VernacExtend",
                        "993b8e47c20c9778ea009c61f9de7f46b2a56213"
                    ]
                },
                {
                    "command": [
                        "apply l9_9_bis in Habs.",
                        "VernacExtend",
                        "5efda967a01aeecbab70b4a3f30d014f8462ea38"
                    ]
                },
                {
                    "command": [
                        "apply Habs.",
                        "VernacExtend",
                        "50c6517b7b2948658a6294e812c8a67cddbfbe7c"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides; apply l9_2.",
                        "VernacExtend",
                        "491d6972c6d34760c4223034265fb78efc7d3f79"
                    ]
                },
                {
                    "command": [
                        "apply (l9_8_2 _ _ P); Side.",
                        "VernacExtend",
                        "63e99fa0a0b7d7538851a4ba15dee0f37b84e588"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; exists B; split; Col; Between.",
                        "VernacExtend",
                        "52ee2a521a48031329fa706a77e217e52446c1ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "os2__inangle",
            "line_nb": 8571,
            "steps": [
                {
                    "command": [
                        "intros A B C P Hos1 Hos2.",
                        "VernacExtend",
                        "8bb338f6da2bc621d296bc81449e755056631f17"
                    ]
                },
                {
                    "command": [
                        "apply os_ts__inangle; auto.",
                        "VernacExtend",
                        "d86215d4cae311f0e0aee71552ac38860f616f96"
                    ]
                },
                {
                    "command": [
                        "apply l9_31; Side.",
                        "VernacExtend",
                        "eb42959e7bb2d0a1397c09e870caacd7a32d6043"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_conga__acute",
            "line_nb": 8576,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hacute HConga.",
                        "VernacExtend",
                        "faa20cd8b295db67417d1e43ec73bc43cc5f20a6"
                    ]
                },
                {
                    "command": [
                        "apply (acute_lea_acute _ _ _ A B C); auto.",
                        "VernacExtend",
                        "9e6121b7d69605cfad34ddd8f981f649f9618619"
                    ]
                },
                {
                    "command": [
                        "apply conga__lea.",
                        "VernacExtend",
                        "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym; assumption.",
                        "VernacExtend",
                        "2b25f222f2bd1654890783ce24b11c9ff220586f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_out2__acute",
            "line_nb": 8582,
            "steps": [
                {
                    "command": [
                        "intros A B C A' C' HA HC HB.",
                        "VernacExtend",
                        "1022a4c6758cea25f05bd1b688dd11b76bbd742a"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute A B C).",
                        "VernacExtend",
                        "8b0d4fcf386b0fb5fe4ce079c080b385f80995d7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply out2__conga; assumption.",
                        "VernacExtend",
                        "4f104cfea7298df1d66bed71afa377f8b5cc44f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_obtuse__obtuse",
            "line_nb": 8588,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hobtuse HConga.",
                        "VernacExtend",
                        "6ccd33de1daaeb2a30fc04a5c150b2a38c5040d1"
                    ]
                },
                {
                    "command": [
                        "apply (obtuse_gea_obtuse _ _ _ A B C); auto.",
                        "VernacExtend",
                        "e49555445dc0867a6bfdc8effdeb3cc4feb9341a"
                    ]
                },
                {
                    "command": [
                        "apply conga__lea; assumption.",
                        "VernacExtend",
                        "d3035a964ccd5d73fe4dc7e52840f965486a6cfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_out2__obtuse",
            "line_nb": 8593,
            "steps": [
                {
                    "command": [
                        "intros A B C A' C' HA HC HB.",
                        "VernacExtend",
                        "1022a4c6758cea25f05bd1b688dd11b76bbd742a"
                    ]
                },
                {
                    "command": [
                        "apply (conga_obtuse__obtuse A B C).",
                        "VernacExtend",
                        "62a18d4c8667627391e406a247428fcc3365a1bc"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply out2__conga; assumption.",
                        "VernacExtend",
                        "4f104cfea7298df1d66bed71afa377f8b5cc44f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_lea__bet",
            "line_nb": 8599,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HBet Hlea.",
                        "VernacExtend",
                        "eadc3b574f9439c30df9020a02c30d3a706b23b5"
                    ]
                },
                {
                    "command": [
                        "apply (bet_conga__bet A B C); auto.",
                        "VernacExtend",
                        "29d5da8a14c74b30826438a6efc0876e54f36a22"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym; auto.",
                        "VernacExtend",
                        "225b4007c284fb0991e29bc5ac1e2e640d0580cb"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in Hlea.",
                        "VernacExtend",
                        "aeeca3a649881755aa318e2d6c433132f71ff662"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_2; auto.",
                        "VernacExtend",
                        "56ded40783ae3142836c891eb28367d2183e2280"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_lea__out",
            "line_nb": 8607,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hout Hlea.",
                        "VernacExtend",
                        "d298b9010939647f546d2421fc8c9bc67da18aa1"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a D E F); auto.",
                        "VernacExtend",
                        "6ce59a5a260bd35299a0dfe9b376f3a3abec037b"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym; auto.",
                        "VernacExtend",
                        "225b4007c284fb0991e29bc5ac1e2e640d0580cb"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in Hlea.",
                        "VernacExtend",
                        "aeeca3a649881755aa318e2d6c433132f71ff662"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; auto.",
                        "VernacExtend",
                        "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet2_lta__lta",
            "line_nb": 8615,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F A' D' Hlta.",
                        "VernacExtend",
                        "9885450bae1858d38c320903cbacf84f308af22d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := Hlta).",
                        "VernacExtend",
                        "801b295582097ef495f153d38110dc833ca99fca"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hd.",
                        "VernacExtend",
                        "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in *.",
                        "VernacExtend",
                        "802c232fa354dc638937352b485ceb094cba03d6"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (l11_36 A _ _ D); auto.",
                        "VernacExtend",
                        "c167a4b54bfc387d50ef34e03b3ee24d43428418"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(CongA A B C D E F); auto.",
                        "VernacExtend",
                        "9985ba7be5964096334bb166f80d398cb6b6359c"
                    ]
                },
                {
                    "command": [
                        "apply (l11_13 A' _ _ D'); try (apply conga_sym); Between.",
                        "VernacExtend",
                        "9ec2ae14e0c033a0d6e7a0b84c5c4b9a3efd8291"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta__lea",
            "line_nb": 8628,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea123456_lta__lta",
            "line_nb": 8633,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F G H I Hlea Hlta.",
                        "VernacExtend",
                        "68432abe78f945fa48edd2a1e395edd17a3ca4ee"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (lea_trans _ _ _ D E F).",
                        "VernacExtend",
                        "ca38723144394a6840993c6342546d368631f31e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply lta__lea; assumption.",
                        "VernacExtend",
                        "c19f850ae2f87a33b0b1c99943cdafd4bd081842"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [Hlea' HNConga].",
                        "VernacExtend",
                        "1106401424d4443a9ee36998142ffc866d9bef49"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym.",
                        "VernacExtend",
                        "2063e70bb4c41c64024466002567257da2aca3f3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (l11_30 A B C D E F); auto.",
                        "VernacExtend",
                        "0c4093cccf07ad3b59a7463d6154cc261a46d8bd"
                    ]
                },
                {
                    "command": [
                        "apply lea_distincts in Hlea.",
                        "VernacExtend",
                        "aeeca3a649881755aa318e2d6c433132f71ff662"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; assumption.",
                        "VernacExtend",
                        "af9b062c8cbd24307d195fe8577271ed342bc710"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_per__lta",
            "line_nb": 8670,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hacute HDE HEF HPer.",
                        "VernacExtend",
                        "6409923594ab7e40467bf005566792da11adbb5c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct Hacute as [G [H [I [HPer2 Hlta]]]].",
                        "VernacExtend",
                        "1ca28be21c8dc0f4c915b1ad9937b4cfb1401801"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := lta_distincts A B C G H I Hlta).",
                        "VernacExtend",
                        "c350bce9c3be907bf653d25f23e3d661d74084d1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta A B C G H I); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "7da0f2056e7cc084a7fbc2949075e4c2aabc0766"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto.",
                        "VernacExtend",
                        "f55656560cb5b4267b2671cabb23ed36e27b289e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_per__lta",
            "line_nb": 8679,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hobtuse HDE HEF HPer.",
                        "VernacExtend",
                        "e5425d45a75a06295abfa429345d17d55488ad38"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct Hobtuse as [G [H [I [HPer2 Hgta]]]].",
                        "VernacExtend",
                        "ee94aa37224f6ff41a78019269659d4ea63f8a0c"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := gta_distincts A B C G H I Hgta).",
                        "VernacExtend",
                        "aadab2ac639aa1ed94cb75aaa511822e840bbde1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta G H I A B C); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "d35249c81fa854cfde2e62fda20f35a276d53037"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto.",
                        "VernacExtend",
                        "f55656560cb5b4267b2671cabb23ed36e27b289e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_obtuse__lta",
            "line_nb": 8688,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hacute Hobtuse.",
                        "VernacExtend",
                        "2c756c4ea9442438761fad0e097618e92d0abab6"
                    ]
                },
                {
                    "command": [
                        "destruct Hacute as [G [H [I [HPer Hlta]]]].",
                        "VernacExtend",
                        "6a14a0514185dec189ae114acd69a753d8bed249"
                    ]
                },
                {
                    "command": [
                        "apply (lta_trans _ _ _ G H I); auto.",
                        "VernacExtend",
                        "c02d20a67c0cebde31ec3e84aaa9a311ca7c7e5c"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hlta.",
                        "VernacExtend",
                        "19d08099f2c1a9f157a8d5c41439bc861c596e1d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply obtuse_per__lta; auto.",
                        "VernacExtend",
                        "46daa89a6faff8909953985521e3f0b16d400da9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle_dec",
            "line_nb": 8866,
            "steps": [
                {
                    "command": [
                        "intros A B C P.",
                        "VernacExtend",
                        "f871c2e675fa1d59560879ebabe0a9b7e333e50c"
                    ]
                },
                {
                    "command": [
                        "elim(cop_dec A B C P).",
                        "VernacExtend",
                        "e0e75b7951ab81946471805aaade26c561456561"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HCop.",
                        "VernacExtend",
                        "72a16c9a6ddc8c5605de296d4d360cd914928b9b"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A B).",
                        "VernacExtend",
                        "831fb4dd1e7a608ba80f1702de75d193eeaea711"
                    ]
                },
                {
                    "command": [
                        "intro; subst; right; unfold InAngle; intro; spliter; auto.",
                        "VernacExtend",
                        "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points C B).",
                        "VernacExtend",
                        "c7d3e99fad2bb04b0f42d8f8b9c539460dcf0937"
                    ]
                },
                {
                    "command": [
                        "intro; subst; right; unfold InAngle; intro; spliter; auto.",
                        "VernacExtend",
                        "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points P B).",
                        "VernacExtend",
                        "fac2d53a8061bc1fd4d216110c958833ac2d8d98"
                    ]
                },
                {
                    "command": [
                        "intro; subst; right; unfold InAngle; intro; spliter; auto.",
                        "VernacExtend",
                        "a4e0ea9da9cb660a44b4b89f2f882c0b7bfb5f69"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec A B C).",
                        "VernacExtend",
                        "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HColB.",
                        "VernacExtend",
                        "4dda0a76387a2ef06d189ea466a981a5005ca95c"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec A B C).",
                        "VernacExtend",
                        "c5492a1b872689bb9ee4184107bb3c6832671091"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HBBet.",
                        "VernacExtend",
                        "1a4ade2ea55846739003a0eda5b39974c6cbddfe"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HBNBet.",
                        "VernacExtend",
                        "e8a9df812feaea2809a99259031af3a1f920d9a2"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec B A P).",
                        "VernacExtend",
                        "76a49146501caec49542557f53fea642fddeb51e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists A; Between.",
                        "VernacExtend",
                        "8d9d0a97eedfb61c42ee8f151588f50d9313833a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
                        "VernacExtend",
                        "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [|HoutBXP].",
                        "VernacExtend",
                        "e8a41dd2d783a44baf4f7044a252ef29ba47baad"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "assert(HInter := out2_bet_out A B C X P); auto.",
                        "VernacExtend",
                        "6ff1bdec2c0a4643ebfea7a3621007d39286fd27"
                    ]
                },
                {
                    "command": [
                        "destruct HInter; auto.",
                        "VernacExtend",
                        "22b310adfbe034f4c13a0ffda2a2aebf8c9971e3"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out; auto.",
                        "VernacExtend",
                        "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HNColB.",
                        "VernacExtend",
                        "187a2286f46afbfdde3fb5b24e8d8ee7ccb58896"
                    ]
                },
                {
                    "command": [
                        "assert(HP' := symmetric_point_construction P B).",
                        "VernacExtend",
                        "626fc8c4553c961460b1ac773fabd8db2edce941"
                    ]
                },
                {
                    "command": [
                        "destruct HP' as [P'].",
                        "VernacExtend",
                        "25325204053d23146d468ba72155f3ecb51e155a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "elim(two_sides_dec B P A C).",
                        "VernacExtend",
                        "8ff521311b2a3904873df27ec03342c39acbaeb1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(HUn := two_sides_in_angle A B C P P').",
                        "VernacExtend",
                        "8ae8b19ad6bba13a96e75b5ed492cc6a1f447a6a"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [HInAngle|HInAngle]; Between.",
                        "VernacExtend",
                        "04ad1d242cba77f9c7f2a7124e371c0db755cf9b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct HInAngle as [_ [_ [_ [X [HXBet HUn]]]]].",
                        "VernacExtend",
                        "a7e93381696d7f0ba5a9482852bde6ef95ba60ab"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [HXB|HBout].",
                        "VernacExtend",
                        "e11ac7d69f5dba5a5bb7fcff7faef9c1c29e39aa"
                    ]
                },
                {
                    "command": [
                        "left; repeat split; auto; exists X; split; auto.",
                        "VernacExtend",
                        "0478bf2cb074d7374efd390462c7963eaed00875"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [_ [_ [_ [X' [HX'Bet HUn]]]]].",
                        "VernacExtend",
                        "86c23a4fe55bb0f9c48e9719c60a41e4c5bbff81"
                    ]
                },
                {
                    "command": [
                        "assert(Col B X' P) by (destruct HUn; subst; assert_cols; Col).",
                        "VernacExtend",
                        "fae3f613f6005f81ae831bd10ab31a98956654c1"
                    ]
                },
                {
                    "command": [
                        "assert(X = X') by (apply (l6_21 A C B P); Col; ColR).",
                        "VernacExtend",
                        "6ff1b2540e59f7b5ded604d8b0a20b0ddd923ccd"
                    ]
                },
                {
                    "command": [
                        "subst X'.",
                        "VernacExtend",
                        "f1f852044d6b97f30d155b18971bf690ec33cde6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [|HBout']; auto.",
                        "VernacExtend",
                        "14718955893a5d9b4022754e16eb87c98fc02ee6"
                    ]
                },
                {
                    "command": [
                        "assert(Col P B P' /\\ ~ Bet P B P'); spliter; Between.",
                        "VernacExtend",
                        "b7fc22ba4e27cee53e9c2788f02f6850f9c48693"
                    ]
                },
                {
                    "command": [
                        "apply l6_4_1.",
                        "VernacExtend",
                        "8b130ebb81e81a30a90ac3e1bb1f678b0d840a4c"
                    ]
                },
                {
                    "command": [
                        "apply (l6_7 _ _ X); auto.",
                        "VernacExtend",
                        "d9602921c214cc9570fe5880a86f9821d2620db1"
                    ]
                },
                {
                    "command": [
                        "apply l6_6; auto.",
                        "VernacExtend",
                        "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HNts.",
                        "VernacExtend",
                        "4a86e225940261b254b0bc7710a41aa9dad36173"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec B A P).",
                        "VernacExtend",
                        "a16a1a45d093930e31c7df7f0517ef42ebfe7298"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec B A P).",
                        "VernacExtend",
                        "76a49146501caec49542557f53fea642fddeb51e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists A; Between.",
                        "VernacExtend",
                        "8d9d0a97eedfb61c42ee8f151588f50d9313833a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
                        "VernacExtend",
                        "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
                    ]
                },
                {
                    "command": [
                        "assert(Col B X P) by (destruct HUn; subst; assert_cols; Col).",
                        "VernacExtend",
                        "380ce530ba352cbbdd125d6095089e8d6864a170"
                    ]
                },
                {
                    "command": [
                        "assert(X = A) by (apply (l6_21 A C B P); Col; ColR).",
                        "VernacExtend",
                        "74bb777910223a76cd696fcda7c4c6d95ea12d15"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "destruct HUn; auto.",
                        "VernacExtend",
                        "939cb2d84254853add52589f41f0994b4a073d66"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec B C P).",
                        "VernacExtend",
                        "53d022f71d2387181c26b722b44bc17cca7eb406"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec B C P).",
                        "VernacExtend",
                        "1b1884fc08e97c8557249e3f4670e524d09bacd1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists C; Between.",
                        "VernacExtend",
                        "424ca3ff38ebadb2dd269a1a773d6ee077543bc3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [_ [_ [_ [X [HXBet HUn]]]]].",
                        "VernacExtend",
                        "c67d1ebf1ae071399c66277dd5d26d7ec401b183"
                    ]
                },
                {
                    "command": [
                        "assert(Col B X P) by (destruct HUn; subst; assert_cols; Col).",
                        "VernacExtend",
                        "380ce530ba352cbbdd125d6095089e8d6864a170"
                    ]
                },
                {
                    "command": [
                        "assert(X = C) by (apply (l6_21 A C B P); Col; ColR).",
                        "VernacExtend",
                        "d06369a4133c53630f91c6122249f64f16e0013a"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "destruct HUn; auto.",
                        "VernacExtend",
                        "939cb2d84254853add52589f41f0994b4a073d66"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNts.",
                        "VernacExtend",
                        "c3c931bc78eb75a4ccb34cc28f05b09dcfe0f2b4"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides.",
                        "VernacExtend",
                        "8d7f6352af5a502bb62331c8d6a403513cfeafb8"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_two_sides; auto.",
                        "VernacExtend",
                        "7b2822e30f6999c7834f935a87c319f12167fdda"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HNCop.",
                        "VernacExtend",
                        "7b0cca5835811c8861708fcd8840821b261e0b06"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNCop; Cop.",
                        "VernacExtend",
                        "ca08358009427d737acbd8b7a1e8774d8b38eb58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_dec",
            "line_nb": 8985,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F.",
                        "VernacExtend",
                        "2be5b25247fe2581e41ab1f8b0f613798974a319"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A B).",
                        "VernacExtend",
                        "831fb4dd1e7a608ba80f1702de75d193eeaea711"
                    ]
                },
                {
                    "command": [
                        "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
                        "VernacExtend",
                        "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points B C).",
                        "VernacExtend",
                        "5aa63a265e70f9d0103084098fb9bad3a73caf66"
                    ]
                },
                {
                    "command": [
                        "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
                        "VernacExtend",
                        "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points D E).",
                        "VernacExtend",
                        "c6e589cd4c8b37a519930372e313a20a30051f59"
                    ]
                },
                {
                    "command": [
                        "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
                        "VernacExtend",
                        "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points E F).",
                        "VernacExtend",
                        "4692d9f43aa0a22ce1a129fcea7da71b011ea884"
                    ]
                },
                {
                    "command": [
                        "intro; right; intro Hlea; apply lea_distincts in Hlea; spliter; auto.",
                        "VernacExtend",
                        "1496b611478498e82c9fb4cc2a6b0cdff86b6f03"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec A B C).",
                        "VernacExtend",
                        "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec B A C).",
                        "VernacExtend",
                        "cf6dd7bb115e8079d981ca4e28170cb12884defd"
                    ]
                },
                {
                    "command": [
                        "intro; left; apply l11_31_1; auto.",
                        "VernacExtend",
                        "3b5bd0082707bb0d4f43ad8f24dee7061f4bace7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec D E F).",
                        "VernacExtend",
                        "150133112f709a30558ea4520838baf39aeb8cc5"
                    ]
                },
                {
                    "command": [
                        "intro; left; apply l11_31_2; auto.",
                        "VernacExtend",
                        "7b0cb4a0eb020b979178d4eb0f79cf1f31ba53ac"
                    ]
                },
                {
                    "command": [
                        "intro HENBet.",
                        "VernacExtend",
                        "79f92eb8e3c7de65911d9cb75a1f0ce686c2df14"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HENBet.",
                        "VernacExtend",
                        "a2920761d3f666270ea36d8f62acc6e91985d024"
                    ]
                },
                {
                    "command": [
                        "apply (bet_lea__bet A B C); auto.",
                        "VernacExtend",
                        "4747c96def2a671ce5f94d60fccfabbd127c96e9"
                    ]
                },
                {
                    "command": [
                        "apply not_out_bet; auto.",
                        "VernacExtend",
                        "dc55e69b3acf9e72c9dd6fbcc5a5e885132b908d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HNColB.",
                        "VernacExtend",
                        "187a2286f46afbfdde3fb5b24e8d8ee7ccb58896"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec D E F).",
                        "VernacExtend",
                        "48350e3651e6a0759fea03912060ef6c29e93fd9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec D E F).",
                        "VernacExtend",
                        "150133112f709a30558ea4520838baf39aeb8cc5"
                    ]
                },
                {
                    "command": [
                        "intro; left; apply l11_31_2; auto.",
                        "VernacExtend",
                        "7b0cb4a0eb020b979178d4eb0f79cf1f31ba53ac"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNColB.",
                        "VernacExtend",
                        "66d92c0162704b85a971d6599e302ea7f1704a44"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_4.",
                        "VernacExtend",
                        "54503687d69ef6d95431dca18b161ad914cc94d5"
                    ]
                },
                {
                    "command": [
                        "apply out_col.",
                        "VernacExtend",
                        "57e48e4027162d3af2f745773def7abb7cb80e82"
                    ]
                },
                {
                    "command": [
                        "apply (out_lea__out _ _ _ D E F); auto.",
                        "VernacExtend",
                        "5217173b9b40521e2ec418d6e64e3af4ffe6d2cf"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out; auto.",
                        "VernacExtend",
                        "8192c9bbce7daf4bcae6e5ee001831d3a791fa13"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(HP := angle_construction_1 A B C D E F).",
                        "VernacExtend",
                        "6e20eda99b10054f2a82722ee7873a207c52627c"
                    ]
                },
                {
                    "command": [
                        "destruct HP as [P []]; Col.",
                        "VernacExtend",
                        "005c7e48c68442e709d25de2c2896e780576cdde"
                    ]
                },
                {
                    "command": [
                        "elim(inangle_dec D E F P).",
                        "VernacExtend",
                        "29cf849ee86438407f6c0d98204a451b3025af5e"
                    ]
                },
                {
                    "command": [
                        "intro; left; exists P; auto.",
                        "VernacExtend",
                        "616a872ed8114f6092e55d38d87fe83dcc846f15"
                    ]
                },
                {
                    "command": [
                        "intro HNInAngle.",
                        "VernacExtend",
                        "ebfa94794faeaf980dba30117bfe35c56da057f8"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNInAngle.",
                        "VernacExtend",
                        "f913156cc74b7679f7e586e465392b2c0fcea230"
                    ]
                },
                {
                    "command": [
                        "apply lea_in_angle; try (apply conga_sym); Side.",
                        "VernacExtend",
                        "6bc4dba70fc9c3aebca01edf757f31cc828c19d2"
                    ]
                },
                {
                    "command": [
                        "apply (l11_30 A B C D E F); auto; apply conga_refl; auto.",
                        "VernacExtend",
                        "693055a927f36cb07510ff7f4dca1900d7a8227d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gea_dec",
            "line_nb": 9041,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F.",
                        "VernacExtend",
                        "2be5b25247fe2581e41ab1f8b0f613798974a319"
                    ]
                },
                {
                    "command": [
                        "unfold GeA.",
                        "VernacExtend",
                        "1cfb52edf7c6d36453f0e729259fb3d8b12fe9e8"
                    ]
                },
                {
                    "command": [
                        "elim(lea_dec D E F A B C); auto.",
                        "VernacExtend",
                        "a9178bf1838b6eb039a97fc6496b8e44c9b15cb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_dec",
            "line_nb": 9046,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F.",
                        "VernacExtend",
                        "2be5b25247fe2581e41ab1f8b0f613798974a319"
                    ]
                },
                {
                    "command": [
                        "elim(conga_dec A B C D E F).",
                        "VernacExtend",
                        "42a28bff8977c66a43f73e6f0738c2c93fc385c8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(lea_dec A B C D E F).",
                        "VernacExtend",
                        "8153c011dbeb6cc4b71e8ce3199dc6d8bb51ef66"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gta_dec",
            "line_nb": 9071,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F.",
                        "VernacExtend",
                        "2be5b25247fe2581e41ab1f8b0f613798974a319"
                    ]
                },
                {
                    "command": [
                        "unfold GtA.",
                        "VernacExtend",
                        "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
                    ]
                },
                {
                    "command": [
                        "elim(lta_dec D E F A B C); auto.",
                        "VernacExtend",
                        "6c6e27cbd342559560ffb108707ad66d3de644bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_total",
            "line_nb": 9076,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HAB HBC HDE HEF.",
                        "VernacExtend",
                        "83e18f0c7eb37868f379228b7b3cbdfac6391a5e"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec A B C).",
                        "VernacExtend",
                        "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec B A C).",
                        "VernacExtend",
                        "cf6dd7bb115e8079d981ca4e28170cb12884defd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; left; apply l11_31_1; auto.",
                        "VernacExtend",
                        "3b5bd0082707bb0d4f43ad8f24dee7061f4bace7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; right; apply l11_31_2; auto; apply not_out_bet; auto.",
                        "VernacExtend",
                        "485ae2ecbc5109e93c8d75e57662ff04f98f85ec"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec D E F).",
                        "VernacExtend",
                        "48350e3651e6a0759fea03912060ef6c29e93fd9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(out_dec E D F).",
                        "VernacExtend",
                        "c6acbb089467778de40c537f8b4567a42c7f61fb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; right; apply l11_31_1; auto.",
                        "VernacExtend",
                        "4a6f3862a58fcb9891c712217716ac38606e2a35"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; left; apply l11_31_2; auto; apply not_out_bet; auto.",
                        "VernacExtend",
                        "97c77a9d4ad5df8355ccbcf0f29bc937f12afb0d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(lea_dec A B C D E F).",
                        "VernacExtend",
                        "8153c011dbeb6cc4b71e8ce3199dc6d8bb51ef66"
                    ]
                },
                {
                    "command": [
                        "intro; left; auto.",
                        "VernacExtend",
                        "3dcec4f9db613e506fdb314cd85a8e2337857b9b"
                    ]
                },
                {
                    "command": [
                        "intro HNlea.",
                        "VernacExtend",
                        "908a59dab214b12d0dfd7e1867e49e15569e45c9"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assert(HP := angle_construction_1 D E F A B C).",
                        "VernacExtend",
                        "37c3bf1f61ace69869513ed416e8e7ea8a57c898"
                    ]
                },
                {
                    "command": [
                        "destruct HP as [P []]; Col.",
                        "VernacExtend",
                        "005c7e48c68442e709d25de2c2896e780576cdde"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; Side.",
                        "VernacExtend",
                        "905a7dce2207cf8323f6b9bd3f53a4c62d07ede5"
                    ]
                },
                {
                    "command": [
                        "apply cop__not_two_sides_one_side; Col; Cop.",
                        "VernacExtend",
                        "8aab42e4b223ac7044f8c8941b87bd2933bb143b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNlea.",
                        "VernacExtend",
                        "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
                    ]
                },
                {
                    "command": [
                        "apply conga__lea.",
                        "VernacExtend",
                        "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga A B P D E F); try (apply out_trivial); try (apply conga_sym); auto.",
                        "VernacExtend",
                        "10bd10254aa4592cf540e434ae63d4e04e331bcf"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ A); Col; Side.",
                        "VernacExtend",
                        "756afeb69951532bf85035889e733fe9fc15a458"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNlea.",
                        "VernacExtend",
                        "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
                    ]
                },
                {
                    "command": [
                        "apply (l11_30 A B C A B P); try (apply conga_refl); try (apply conga_sym); auto.",
                        "VernacExtend",
                        "b78acf14c516817bb49dc9f95c7c17837d34ba4c"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; try (apply conga_refl); auto.",
                        "VernacExtend",
                        "ab0dad027585578435cc32403c954b344c812a3d"
                    ]
                },
                {
                    "command": [
                        "apply os_ts__inangle; Side.",
                        "VernacExtend",
                        "2847c859d970db6b768f7afdf3b8bc723d885757"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gea_total",
            "line_nb": 9122,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HAB HBC HDE HEF.",
                        "VernacExtend",
                        "83e18f0c7eb37868f379228b7b3cbdfac6391a5e"
                    ]
                },
                {
                    "command": [
                        "elim(lea_total A B C D E F); auto.",
                        "VernacExtend",
                        "8727fec7bef713faf8f8c3da8c00d4c55ca74759"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_lta_conga_gta",
            "line_nb": 9126,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=lea_total A B C D E F).",
                        "VernacExtend",
                        "589456412afb2598ab23ddec99c26c0d0ebed558"
                    ]
                },
                {
                    "command": [
                        "induction HH; auto.",
                        "VernacExtend",
                        "0133ce717fcbb01d2261c1c0b7dd5e2a5837b4d6"
                    ]
                },
                {
                    "command": [
                        "induction(conga_dec A B C D E F).",
                        "VernacExtend",
                        "0949798dd46e819123653c761883188d9d70d5f0"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "induction(conga_dec A B C D E F).",
                        "VernacExtend",
                        "0949798dd46e819123653c761883188d9d70d5f0"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right; left.",
                        "VernacExtend",
                        "0890e8256aff7ee5abfe085237b7b2250c448482"
                    ]
                },
                {
                    "command": [
                        "unfold GtA.",
                        "VernacExtend",
                        "6f9fe842b5aba5d937ea1079e9f94a5e3e9a1e42"
                    ]
                },
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "angle_partition",
            "line_nb": 9149,
            "steps": [
                {
                    "command": [
                        "intros A B C HAB HBC.",
                        "VernacExtend",
                        "9f20a913d4883ab217948cf6fd69eaf73c27d1dc"
                    ]
                },
                {
                    "command": [
                        "assert(Hl := lower_dim_ex).",
                        "VernacExtend",
                        "4a4da3c2fbc3fd8dceb5096b7034f4bd92e1171c"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as [A' [B' [D']]].",
                        "VernacExtend",
                        "57d1f4641f58a46deb97781f922974b965aa7a45"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col A' B' D') by (unfold Col; auto).",
                        "VernacExtend",
                        "a804b0c8ff58803e20085cc9f882282f564c4602"
                    ]
                },
                {
                    "command": [
                        "assert(HC' := l10_15 A' B' B' D').",
                        "VernacExtend",
                        "7c1e3ff636a66eaf8066da1a8e5959caa1a53cb0"
                    ]
                },
                {
                    "command": [
                        "destruct HC' as [C' [HC'Right _]]; Col.",
                        "VernacExtend",
                        "0531eefea96355801138f08e5ea15addef7f7065"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (or_lta_conga_gta A B C A' B' C') as [|[|]]; auto.",
                        "VernacExtend",
                        "9b5ce578fdea4fd17a9f653bc0cbbb86b6f97780"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists A', B', C'.",
                        "VernacExtend",
                        "35193a167a70a5a27cadfefcd7ef4dece1967187"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Perp).",
                        "VernacExtend",
                        "3637a5cb316e1227272f0ecd7df366b625db4fbd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "exists A', B', C'.",
                        "VernacExtend",
                        "35193a167a70a5a27cadfefcd7ef4dece1967187"
                    ]
                },
                {
                    "command": [
                        "repeat (split; Perp).",
                        "VernacExtend",
                        "3637a5cb316e1227272f0ecd7df366b625db4fbd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; left.",
                        "VernacExtend",
                        "0890e8256aff7ee5abfe085237b7b2250c448482"
                    ]
                },
                {
                    "command": [
                        "apply (l11_17 A' B' C'); try (apply conga_sym); Perp.",
                        "VernacExtend",
                        "c304bf1ee33a495d1ae5a5c2a64633988f53ed60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_chara",
            "line_nb": 9170,
            "steps": [
                {
                    "command": [
                        "intros A B C A' HBet HBA'.",
                        "VernacExtend",
                        "3f16ee27c430a3775fa182e9e0259be9ddced845"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hacute.",
                        "VernacExtend",
                        "4d7f48d860c76bc5138f3da0476eee8279f2f65e"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := acute_distincts A B C Hacute).",
                        "VernacExtend",
                        "ede3ec7155de0fdcdedd5599c65dcaef143e0627"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply acute_obtuse__lta; auto.",
                        "VernacExtend",
                        "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
                    ]
                },
                {
                    "command": [
                        "apply (acute_bet__obtuse A); auto.",
                        "VernacExtend",
                        "7cff108bc430738f81a729d47558c1f315fe08b9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hlta.",
                        "VernacExtend",
                        "0d1e432b59e37777ab2b54fc232d0c57743306fe"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := Hlta).",
                        "VernacExtend",
                        "801b295582097ef495f153d38110dc833ca99fca"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hd.",
                        "VernacExtend",
                        "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "elim(angle_partition A B C); auto.",
                        "VernacExtend",
                        "0a0c942b9de90a15db492df7ec39788947e5fe0d"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
                        "VernacExtend",
                        "27bd759592a539e15b3bb5e33ba823d5148110f3"
                    ]
                },
                {
                    "command": [
                        "destruct Habs.",
                        "VernacExtend",
                        "ddcc54f9873b0b2cc265402b9b7d3d90e61f7682"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta A B C A' B C); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "0187e0ad84d9fb634fea2362c2d12fde91f932b5"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm.",
                        "VernacExtend",
                        "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
                    ]
                },
                {
                    "command": [
                        "apply l11_18_1; Perp.",
                        "VernacExtend",
                        "47a1521b2b7fbab760f8cc5eb47f2ed88003a2e5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply (lta_trans _ _ _ A' B C); auto.",
                        "VernacExtend",
                        "c506b00696968e364d4a65204e1f24db65ea1203"
                    ]
                },
                {
                    "command": [
                        "apply acute_obtuse__lta; auto.",
                        "VernacExtend",
                        "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
                    ]
                },
                {
                    "command": [
                        "apply (bet_obtuse__acute A); auto.",
                        "VernacExtend",
                        "03ab663afe933cbb30bcf3dfd6a6b502d832b61b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_chara",
            "line_nb": 9199,
            "steps": [
                {
                    "command": [
                        "intros A B C A' HBet HBA'.",
                        "VernacExtend",
                        "3f16ee27c430a3775fa182e9e0259be9ddced845"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hobtuse.",
                        "VernacExtend",
                        "4cd5eea8e62df1271464a6c2957d6ff965042f7b"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := obtuse_distincts A B C Hobtuse).",
                        "VernacExtend",
                        "00aedf5ee87a41140f0149f762332d1b65efc74c"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply acute_obtuse__lta; auto.",
                        "VernacExtend",
                        "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
                    ]
                },
                {
                    "command": [
                        "apply (bet_obtuse__acute A); auto.",
                        "VernacExtend",
                        "03ab663afe933cbb30bcf3dfd6a6b502d832b61b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro Hlta.",
                        "VernacExtend",
                        "0d1e432b59e37777ab2b54fc232d0c57743306fe"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := Hlta).",
                        "VernacExtend",
                        "801b295582097ef495f153d38110dc833ca99fca"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hd.",
                        "VernacExtend",
                        "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "elim(angle_partition A B C); auto.",
                        "VernacExtend",
                        "0a0c942b9de90a15db492df7ec39788947e5fe0d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
                        "VernacExtend",
                        "27bd759592a539e15b3bb5e33ba823d5148110f3"
                    ]
                },
                {
                    "command": [
                        "apply (lta_trans _ _ _ A' B C); auto.",
                        "VernacExtend",
                        "c506b00696968e364d4a65204e1f24db65ea1203"
                    ]
                },
                {
                    "command": [
                        "apply acute_obtuse__lta; auto.",
                        "VernacExtend",
                        "509ec77dee70ca7f61740a0b04c5bc2f896031e4"
                    ]
                },
                {
                    "command": [
                        "apply (acute_bet__obtuse A); auto.",
                        "VernacExtend",
                        "7cff108bc430738f81a729d47558c1f315fe08b9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HUn.",
                        "VernacExtend",
                        "9f8ea3000dfc5a12345065b57a7622d8dd77f5ea"
                    ]
                },
                {
                    "command": [
                        "destruct HUn; auto.",
                        "VernacExtend",
                        "939cb2d84254853add52589f41f0994b4a073d66"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert(Hlta1 : LtA A B C A B C); [|destruct Hlta1 as [_ HNConga]; apply HNConga; apply conga_refl; auto].",
                        "VernacExtend",
                        "27bd759592a539e15b3bb5e33ba823d5148110f3"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta A' B C A B C); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "22b8665739c8fcc12cb5e72c253107eae1f2d1e1"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym.",
                        "VernacExtend",
                        "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm.",
                        "VernacExtend",
                        "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
                    ]
                },
                {
                    "command": [
                        "apply l11_18_1; Between; Perp.",
                        "VernacExtend",
                        "0392006835c5eb2af01ff2d9126434f2b61376f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga__acute",
            "line_nb": 9231,
            "steps": [
                {
                    "command": [
                        "intros A B C HCongA.",
                        "VernacExtend",
                        "112dd407421e535ff28cc835d6da97328d98c8bb"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply out__acute, not_bet_out; trivial.",
                        "VernacExtend",
                        "25a7cec8764d28855bd53727ca36c48894242191"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "absurd (B = C).",
                        "VernacExtend",
                        "2c6ab780f6ca318d1533c2a6e574798c6cc0254e"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HCongA; spliter; auto.",
                        "VernacExtend",
                        "fd8bb0ca6b3254341bf914f4359cbebb06634bad"
                    ]
                },
                {
                    "command": [
                        "apply between_equality with A; apply between_symmetry; trivial.",
                        "VernacExtend",
                        "eedce521686ad8611856cfc28ed311951fe56a52"
                    ]
                },
                {
                    "command": [
                        "apply (bet_conga__bet A B C); assumption.",
                        "VernacExtend",
                        "cee5931c2f8a542dd17fdb254e573098bab54d73"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction C B C B) as [C' []].",
                        "VernacExtend",
                        "2dbebb88f87a1a60d7125c8e716a95ab02aa77f7"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HCongA; spliter.",
                        "VernacExtend",
                        "63e58f7770eb6947686bdcdeaecb3508ce5d5afd"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply acute_sym, acute_chara with C'; auto.",
                        "VernacExtend",
                        "48b4e9e5f4b2deee79903dfaddff08530d522e02"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_41 B C A C'); Col.",
                        "VernacExtend",
                        "95d377bd6d14be4eaa5f2828d31246866f7a0816"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta B C A A B C'); trivial.",
                        "VernacExtend",
                        "7ea782892677959f785f5f6355f10c7b19dd8a28"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm, conga_sym; assumption.",
                        "VernacExtend",
                        "3c7d6c85835cf69c8566a06c0e382e8c06905597"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl; auto.",
                        "VernacExtend",
                        "df9b6043ebd1492b46b4fc504cdbe598621cd514"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong__acute",
            "line_nb": 9251,
            "steps": [
                {
                    "command": [
                        "intros A B C HAB HBC HCong.",
                        "VernacExtend",
                        "2f37e39c3752c20bf58d82c31b74a4a11f57ce81"
                    ]
                },
                {
                    "command": [
                        "apply conga__acute.",
                        "VernacExtend",
                        "fdfbf81e35baef20e6c7d6fd46a10f87bdae6d46"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_51 A B C A C B) as [_ []]; Cong.",
                        "VernacExtend",
                        "cc765431456cf19570af1b4955780de2f6ec7aae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nlta",
            "line_nb": 9257,
            "steps": [
                {
                    "command": [
                        "intros A B C.",
                        "VernacExtend",
                        "87ee5c5453dfc11a510bf2040be3c37a23963b5f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply (not_and_lta A B C A B C).",
                        "VernacExtend",
                        "f8e357fa8f49fbab0c8b3beac8e2da1e801ae4b1"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea__nlta",
            "line_nb": 9263,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro Hlta.",
                        "VernacExtend",
                        "0d1e432b59e37777ab2b54fc232d0c57743306fe"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [Hlea HNConga].",
                        "VernacExtend",
                        "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym; assumption.",
                        "VernacExtend",
                        "bb98cffe9d21ebd9cd959f7cdf7f851aa02ad49f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta__nlea",
            "line_nb": 9270,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F Hlta.",
                        "VernacExtend",
                        "c92b94871630be1ebb0ded9cd8b664c65340c525"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [Hlea HNConga].",
                        "VernacExtend",
                        "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "apply lea_asym; assumption.",
                        "VernacExtend",
                        "bb98cffe9d21ebd9cd959f7cdf7f851aa02ad49f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nlta__lea",
            "line_nb": 9277,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HNlta.",
                        "VernacExtend",
                        "a26c1376c0d8ee3c3e72f59f8f7bf1b5db5c26bd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim(conga_dec D E F A B C).",
                        "VernacExtend",
                        "270746bb4c8a1d8b435baa22fb3e531ff4e1f645"
                    ]
                },
                {
                    "command": [
                        "apply conga__lea.",
                        "VernacExtend",
                        "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(lea_total D E F A B C); auto.",
                        "VernacExtend",
                        "6fb21d9e3aa5e67867afdb97f2a8b34d051edcd4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply HNlta.",
                        "VernacExtend",
                        "1aa73c0e169baa46b3ea245a2652b3cc1b2f1c4f"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply not_conga_sym; assumption.",
                        "VernacExtend",
                        "4744f84f38a591280b4955ae320c77a32fc25654"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nlea__lta",
            "line_nb": 9290,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HNlea.",
                        "VernacExtend",
                        "06f9637bca2fe598447da3fe1bd0e36b52c3d5a7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim(lea_total D E F A B C); auto.",
                        "VernacExtend",
                        "6fb21d9e3aa5e67867afdb97f2a8b34d051edcd4"
                    ]
                },
                {
                    "command": [
                        "intro; exfalso; auto.",
                        "VernacExtend",
                        "374c4df7300540f036474a3d5bfe4d58a7f24d51"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNlea.",
                        "VernacExtend",
                        "e3c7f7f8083fc2ca8172abe21fd0288df64ce208"
                    ]
                },
                {
                    "command": [
                        "apply conga__lea.",
                        "VernacExtend",
                        "710cd7fac9faaf970fa73dddafc6ffd6162216d4"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym; assumption.",
                        "VernacExtend",
                        "2b25f222f2bd1654890783ce24b11c9ff220586f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_inequality",
            "line_nb": 9370,
            "steps": [
                {
                    "command": [
                        "intros A B C D HCong HBet.",
                        "VernacExtend",
                        "a990190e88749fd42443e0371b69bb853aec36dd"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec A B C).",
                        "VernacExtend",
                        "c5492a1b872689bb9ee4184107bb3c6832671091"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A B).",
                        "VernacExtend",
                        "831fb4dd1e7a608ba80f1702de75d193eeaea711"
                    ]
                },
                {
                    "command": [
                        "intro; subst; Le.",
                        "VernacExtend",
                        "aa035b5a93cda8617d2f3c5a23cc5713d336bdb3"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(C = D).",
                        "VernacExtend",
                        "4d7d671c2feb3545c987f482b7c460f6171544d4"
                    ]
                },
                {
                    "command": [
                        "apply (construction_uniqueness A B B D); Cong.",
                        "VernacExtend",
                        "68428d07399663dbe873ab9b4746fab864f87cea"
                    ]
                },
                {
                    "command": [
                        "subst; Le.",
                        "VernacExtend",
                        "816a913d048b19339ef94ecf5a016cf80e459a2d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Hlt := triangle_strict_inequality A B C D).",
                        "VernacExtend",
                        "3c9bb6e116fbc881e40a8968634e4f7f72b86f2d"
                    ]
                },
                {
                    "command": [
                        "destruct Hlt; auto.",
                        "VernacExtend",
                        "4c918fedfa3e831fdb12da288e165877291ec238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_strict_inequality_2",
            "line_nb": 9386,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' HBet HCongA HCongB HNBet.",
                        "VernacExtend",
                        "3a2ab55b43a5c642058453f339e7554d62cfd82e"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B B C) as [D [HBetD HCongD]].",
                        "VernacExtend",
                        "68980c56b4aeb58f5da3bbaaef7e5ec2a4b1300f"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt A C A D); Cong.",
                        "VernacExtend",
                        "50a7f48a9f2017207d69e14cd34671cd40870ec1"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_strict_inequality _ B); Cong.",
                        "VernacExtend",
                        "5a9965bd9e0f3c87f30efe6baaff79233e1d5f3b"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ B _ _ B'); Cong.",
                        "VernacExtend",
                        "60d13f911547651daeed9de8737ce77786054146"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with B C; trivial.",
                        "VernacExtend",
                        "05072dd6ab0e399e40dce956fdfc4d0ea5e83a6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle_inequality_2",
            "line_nb": 9394,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C' HBet HCongA HCongB.",
                        "VernacExtend",
                        "812a88a009ae2219cee51b021c9a69ff6f801bb2"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B B C) as [D [HBetD HCongD]].",
                        "VernacExtend",
                        "68980c56b4aeb58f5da3bbaaef7e5ec2a4b1300f"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 A C A D); Cong.",
                        "VernacExtend",
                        "2a4df18375f420da51f06d804776970c4a067a93"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_inequality _ B); Cong.",
                        "VernacExtend",
                        "ac512cdd96b1ee575eba4127ec04077b7c54f12f"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ B _ _ B'); Cong.",
                        "VernacExtend",
                        "60d13f911547651daeed9de8737ce77786054146"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with B C; trivial.",
                        "VernacExtend",
                        "05072dd6ab0e399e40dce956fdfc4d0ea5e83a6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "os3__lta",
            "line_nb": 9506,
            "steps": [
                {
                    "command": [
                        "intros A B C D HosC HosA HosB.",
                        "VernacExtend",
                        "e44c492b9ad42b62ff2d77d0e2634e75d8d2b3fb"
                    ]
                },
                {
                    "command": [
                        "assert(HE : InAngle D A B C) by (apply os2__inangle; Side).",
                        "VernacExtend",
                        "96085156590fd09d1dc0370686946e9fdc2bfb9a"
                    ]
                },
                {
                    "command": [
                        "destruct HE as [_ [_ [_ [E [HEBet HUn]]]]].",
                        "VernacExtend",
                        "1a6628bd19f229ec18f3dabcc51531b0c6b33a4a"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol : ~ Col A B C) by (apply (one_side_not_col123 _ _ _ D); auto).",
                        "VernacExtend",
                        "423b4a27c3a43cd00f0b2de70c9e204d7409a74c"
                    ]
                },
                {
                    "command": [
                        "assert_ncols.",
                        "VernacExtend",
                        "25397c4b0e8909418c476d0819dc9f002d068408"
                    ]
                },
                {
                    "command": [
                        "destruct HUn as [|HBout].",
                        "VernacExtend",
                        "39e2c4f15564f25067d8fdc29e68fcc0a23ab3e6"
                    ]
                },
                {
                    "command": [
                        "exfalso; subst; Col.",
                        "VernacExtend",
                        "0316efc4157d45a2144e326f1d0221ffc5b6ba80"
                    ]
                },
                {
                    "command": [
                        "assert(A <> E) by (intro; subst; assert_cols; Col).",
                        "VernacExtend",
                        "87541a16c64b3f7cf128c3f2be35802660883e40"
                    ]
                },
                {
                    "command": [
                        "assert(C <> E) by (intro; subst; assert_cols; Col).",
                        "VernacExtend",
                        "819918d674cda8d07407c1ed5af51be1f5144118"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply (lta_trans _ _ _ B E C).",
                        "VernacExtend",
                        "04361c4f0b1e1fb4f30ec0ccfbf3c09cfd286123"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_41 E A B C); auto.",
                        "VernacExtend",
                        "dc22994a72a59b3cd0cf91768fb281737518fb21"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol; ColR.",
                        "VernacExtend",
                        "80b045be857eff3fb5b48d773ec57291fa069e50"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta E A B B E C); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "ccdf7ddeb1099b62326cfbe6b6912d4678de9613"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga E A B B A E); try (apply out_trivial); try (apply conga_pseudo_refl); auto.",
                        "VernacExtend",
                        "6994fb5f1037ff97e277a417de321cfe95959d06"
                    ]
                },
                {
                    "command": [
                        "apply bet_out; auto.",
                        "VernacExtend",
                        "76a9f58df0a142584f28da339552287cd33d82a2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert(Out E D B).",
                        "VernacExtend",
                        "41ce30da7c94f7c6323ba1d103ffd0eb91697447"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ A); Col; apply invert_one_side; apply (col_one_side _ C); Col; Side.",
                        "VernacExtend",
                        "10df3b173776974771094b66741d06a760bd87ad"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_41 D E C B); auto.",
                        "VernacExtend",
                        "59f974a628f7a4e9491989c3dbe56193938541d1"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol; ColR.",
                        "VernacExtend",
                        "80b045be857eff3fb5b48d773ec57291fa069e50"
                    ]
                },
                {
                    "command": [
                        "apply out2__bet; auto.",
                        "VernacExtend",
                        "6423a45b459a2dce8e62ed4a0370b35cc024a5f6"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta D E C C D B); try (apply conga_pseudo_refl); auto.",
                        "VernacExtend",
                        "bfee4a70a897e3b72680530ea625ff4b30d2548e"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga D E C D E C); try (apply out_trivial); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "15a0a95e35312205842518ba01f18e6a1151fa7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t18_18_aux",
            "line_nb": 9604,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HCongAB HCongAC Hlta HNCol1 HNCol2 Hle.",
                        "VernacExtend",
                        "f7a1daa03e6be5e226f01f3fd1658466d5278791"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := Hlta).",
                        "VernacExtend",
                        "801b295582097ef495f153d38110dc833ca99fca"
                    ]
                },
                {
                    "command": [
                        "apply lta_distincts in Hd.",
                        "VernacExtend",
                        "f41c088a8f90f3d4eb740cedcd63379e42a1de1a"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert(HG0 := angle_construction_1 C A B F D E).",
                        "VernacExtend",
                        "cf22101a0418521865fef561f4ca0c120026c527"
                    ]
                },
                {
                    "command": [
                        "destruct HG0 as [G0 []]; Col.",
                        "VernacExtend",
                        "dfc47a726e82487782c673fad4451ab8422033be"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col F D G0) by (apply (one_side_not_col123 _ _ _ E); auto).",
                        "VernacExtend",
                        "74fa37a1911315d802a5b5403812428636aa6d71"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HG := segment_construction_3 D G0 A B).",
                        "VernacExtend",
                        "9c68223d4b9444e73d4393cd319fccb96fb1125f"
                    ]
                },
                {
                    "command": [
                        "destruct HG as [G []]; auto.",
                        "VernacExtend",
                        "da02217e432efb6a51e0fb5ceb469a7b7291f3a5"
                    ]
                },
                {
                    "command": [
                        "assert(CongA C A B F D G) by (apply (out_conga C A B F D G0); try (apply out_trivial); auto).",
                        "VernacExtend",
                        "3d8e443b017e32bb5ae5d870f0c52f917c705158"
                    ]
                },
                {
                    "command": [
                        "assert(OS F D G E).",
                        "VernacExtend",
                        "d204d65d6af1a0ccfcb11f7270b2eadd8418229a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ G0); auto.",
                        "VernacExtend",
                        "8a42fd660b2eaf2303066f9d01b0ff980942f995"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply out_one_side; Col.",
                        "VernacExtend",
                        "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
                    ]
                },
                {
                    "command": [
                        "apply l6_6; auto.",
                        "VernacExtend",
                        "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol3 : ~ Col F D G) by (apply (one_side_not_col123 _ _ _ E); auto).",
                        "VernacExtend",
                        "9fcc1def635c2bdbe931db74bba242f7e25c0e60"
                    ]
                },
                {
                    "command": [
                        "clear dependent G0.",
                        "VernacExtend",
                        "108a3f14a58aac097e12210297b10dd7620a3a7c"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HSAS := l11_49 C A B F D G).",
                        "VernacExtend",
                        "bb38232470189a359ce7ca0567aca3062cbc9164"
                    ]
                },
                {
                    "command": [
                        "destruct HSAS as [HCongBC _]; Cong.",
                        "VernacExtend",
                        "9a1bc9bd4485556c57bf159cf5f2a1b764800cce"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt F E F G); Cong.",
                        "VernacExtend",
                        "25c990012a691ae56047a5dda27a214ce7843b02"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta _ _ _ _ _ _ F D E F D G) in Hlta; try (apply conga_refl); auto.",
                        "VernacExtend",
                        "b0198942599bb9efe0de7655118dd00fc6ce619f"
                    ]
                },
                {
                    "command": [
                        "assert(Cong D G D E) by (apply (cong_transitivity _ _ A B); auto).",
                        "VernacExtend",
                        "a53673000964abc6d6c734d0784486b036b9dc39"
                    ]
                },
                {
                    "command": [
                        "clear dependent A.",
                        "VernacExtend",
                        "b17f0ce110025f361a42a4ba851c465cbd5f20a1"
                    ]
                },
                {
                    "command": [
                        "clear dependent B.",
                        "VernacExtend",
                        "bcda20d12768b046d8573dff8e8e744a1964a601"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col E F G).",
                        "VernacExtend",
                        "3496a62f54fd272e052ad20ef307e4db1051089e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [Hlea HNConga].",
                        "VernacExtend",
                        "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "assert (HSSA := l11_52 E F D G F D).",
                        "VernacExtend",
                        "1c8a01bf730b522186f60d3b0920612899901764"
                    ]
                },
                {
                    "command": [
                        "destruct HSSA as [_[]]; Cong; Le.",
                        "VernacExtend",
                        "eb3b439ad4cdea37f4fd36b040cde848654b2692"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga G F D G F D); try (apply out_trivial); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "ee604d12478f7f81408c6b76984af27fca76b06b"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ D); Col.",
                        "VernacExtend",
                        "082a5240f5750bb1b77c3435c42d61362cdc7585"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col D E G).",
                        "VernacExtend",
                        "df7c4ea4d5b916e7292bf957daaaf6933e42fc70"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [Hlea HNConga].",
                        "VernacExtend",
                        "2dc43fc7bc78bc3a3d1eb1be2067b7920a9bf72e"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga F D G F D G); try (apply out_trivial); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "9acffa2955dc7eab85f06bf91f82d174e3da145c"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ F); Col; Side.",
                        "VernacExtend",
                        "1bf3fb82cedb7dfbc15095604c387e583c5b25a2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_2; Col.",
                        "VernacExtend",
                        "4bc1a5c161eb2331e2f239ac1252f95e73646008"
                    ]
                },
                {
                    "command": [
                        "assert(HInAngle : InAngle E F D G) by (apply lea_in_angle; destruct Hlta; auto).",
                        "VernacExtend",
                        "e530aa182544900fea5500299e0bbbc7416446c5"
                    ]
                },
                {
                    "command": [
                        "rename H into HFD.",
                        "VernacExtend",
                        "245dd2c9bf3e88bd2153faa90d04c6a59c4dff8d"
                    ]
                },
                {
                    "command": [
                        "destruct HInAngle as [_ [_ [_ [H [HH HUn]]]]].",
                        "VernacExtend",
                        "aab2259becf14a5d863933991efd89ebb6fdfa1d"
                    ]
                },
                {
                    "command": [
                        "destruct HUn.",
                        "VernacExtend",
                        "8e4a4e9ddd33e229ff805e86d3aa3f80f13b29a9"
                    ]
                },
                {
                    "command": [
                        "exfalso; subst; Col.",
                        "VernacExtend",
                        "0316efc4157d45a2144e326f1d0221ffc5b6ba80"
                    ]
                },
                {
                    "command": [
                        "assert(H <> F) by (intro; subst; assert_cols; Col).",
                        "VernacExtend",
                        "b0a458cd6340b24f26447c044c5f729126c33c2b"
                    ]
                },
                {
                    "command": [
                        "assert(H <> G) by (intro; subst; assert_cols; Col).",
                        "VernacExtend",
                        "fc5244257a27509dde1ba7ec27957415e8a162bc"
                    ]
                },
                {
                    "command": [
                        "assert(Hlt : Lt D H D E).",
                        "VernacExtend",
                        "c589a54d9f4aa9669e838a9a002ea855a68ee904"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt H D G D); Cong.",
                        "VernacExtend",
                        "6bcfbd03e0fdbb26d1c31ac7705d147522069025"
                    ]
                },
                {
                    "command": [
                        "apply (bet_le__lt F); auto.",
                        "VernacExtend",
                        "518b270e9f9d92405fad69cec697f0b608190271"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 D F D E); Cong.",
                        "VernacExtend",
                        "d909cb0c13ff264a29d00fa6ef09785c9f5dda7d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct Hlt.",
                        "VernacExtend",
                        "5966b4b2f87c1102cd40d15067ea8e1cd8e0f9db"
                    ]
                },
                {
                    "command": [
                        "assert(H <> E) by (intro; subst; Cong).",
                        "VernacExtend",
                        "cf1c4355f70b4499f27d0a31c2f8e25576c99425"
                    ]
                },
                {
                    "command": [
                        "assert(Bet D H E) by (apply l6_13_1; Le).",
                        "VernacExtend",
                        "dc1638b01e0e2cfc2d93e1068827f698b46145d0"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(~ TS E G F D).",
                        "VernacExtend",
                        "ad0d5ef5b10f4b380a3ac45527895abb0cd1521d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l9_9_bis.",
                        "VernacExtend",
                        "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ H); [apply invert_one_side; apply one_side_symmetry|]; apply out_one_side; Col; apply bet_out; Between.",
                        "VernacExtend",
                        "5c5e50f0d629c1186e29afb134114629dc29c200"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply (lta_trans _ _ _ D E G).",
                        "VernacExtend",
                        "a9115f04f8af4363fd1ea826ca4d16633e2054b7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply(conga_preserves_lta F G E D G E); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "fe7b7b661a25acdb182cedb59f8ae1cfbe191df6"
                    ]
                },
                {
                    "command": [
                        "apply l11_44_1; Col.",
                        "VernacExtend",
                        "d57046638e1be188d9af8b8513d717b0560d73a3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply lea_comm.",
                        "VernacExtend",
                        "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
                    ]
                },
                {
                    "command": [
                        "exists F.",
                        "VernacExtend",
                        "ac6e44a491cbe4c7695107c0907318c2b2fae9f7"
                    ]
                },
                {
                    "command": [
                        "split; try (apply conga_refl); auto.",
                        "VernacExtend",
                        "ab0dad027585578435cc32403c954b344c812a3d"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists H.",
                        "VernacExtend",
                        "bef8451ce130bb4441c1709095f89139b3f3289c"
                    ]
                },
                {
                    "command": [
                        "split; Between.",
                        "VernacExtend",
                        "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
                    ]
                },
                {
                    "command": [
                        "right; apply bet_out; Between.",
                        "VernacExtend",
                        "c754fe25e82e59190acbc04b1c28532ca91a3f87"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HConga.",
                        "VernacExtend",
                        "eceae29380bb0709d9de139a3e86565e7b2d62a3"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm in HConga.",
                        "VernacExtend",
                        "77ceb64152fc3fa04795c7aaed3d838481b593fc"
                    ]
                },
                {
                    "command": [
                        "assert (HCop : Coplanar E G F D) by Cop.",
                        "VernacExtend",
                        "807d6db0b414e6483d7612176c8266f503b4803e"
                    ]
                },
                {
                    "command": [
                        "assert(Habs := conga_cop__or_out_ts E G F D HCop HConga).",
                        "VernacExtend",
                        "902129e4fbe14b964a888c070b2b6b0bb516b5b2"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [Hout|Hts]; assert_cols; Col.",
                        "VernacExtend",
                        "f1ed573a2a50bf8912ddc7e1916356b216e87d58"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply lta_comm.",
                        "VernacExtend",
                        "e25453c857a295186433f9f605bde819e46a017e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists D.",
                        "VernacExtend",
                        "7e206b3de048aab85afa1949990c2a1c5bce6072"
                    ]
                },
                {
                    "command": [
                        "split; try (apply conga_refl); auto.",
                        "VernacExtend",
                        "ab0dad027585578435cc32403c954b344c812a3d"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists H.",
                        "VernacExtend",
                        "bef8451ce130bb4441c1709095f89139b3f3289c"
                    ]
                },
                {
                    "command": [
                        "split; Between.",
                        "VernacExtend",
                        "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
                    ]
                },
                {
                    "command": [
                        "right; apply bet_out; Between.",
                        "VernacExtend",
                        "c754fe25e82e59190acbc04b1c28532ca91a3f87"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HConga.",
                        "VernacExtend",
                        "eceae29380bb0709d9de139a3e86565e7b2d62a3"
                    ]
                },
                {
                    "command": [
                        "assert (HCop : Coplanar G E D F) by Cop.",
                        "VernacExtend",
                        "67cabf32f8f7c3bbbc5c88820aadafa8c5bd465b"
                    ]
                },
                {
                    "command": [
                        "assert(Habs := conga_cop__or_out_ts G E D F HCop HConga).",
                        "VernacExtend",
                        "33a6b7141a00f61417cb8be2a2347e089e944cc9"
                    ]
                },
                {
                    "command": [
                        "destruct Habs as [Hout|Hts]; assert_cols; Col; Side.",
                        "VernacExtend",
                        "e53b77eacfa17980ce852e8998f4215003b38577"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t18_19",
            "line_nb": 9770,
            "steps": [
                {
                    "command": [
                        "intros A B C D E F HAB HAC HCongAB HCongAC Hlt.",
                        "VernacExtend",
                        "e0b303c801fb84457a476cc614015aedd75ebaf6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply nlea__lta; auto.",
                        "VernacExtend",
                        "fd2b42cf769e32e344fc26593eec60c4af094c03"
                    ]
                },
                {
                    "command": [
                        "intro Hlea.",
                        "VernacExtend",
                        "9fc9ddee2ac69783bb6124403a4581e021beaa79"
                    ]
                },
                {
                    "command": [
                        "elim(conga_dec C A B F D E).",
                        "VernacExtend",
                        "cbf5539cc581496b6a526aa9726399c7d32e6270"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "destruct Hlt as [Hle HNCong].",
                        "VernacExtend",
                        "c724089fa57e8046261242de2a9b341e9b1150f9"
                    ]
                },
                {
                    "command": [
                        "apply HNCong.",
                        "VernacExtend",
                        "a3afddee961db56c5fdf29cc028977f5812aab57"
                    ]
                },
                {
                    "command": [
                        "assert(HSAS := l11_49 C A B F D E).",
                        "VernacExtend",
                        "07f064b7d48ce2dc8aa05e4854c8c63c1e110fbc"
                    ]
                },
                {
                    "command": [
                        "destruct HSAS; Cong.",
                        "VernacExtend",
                        "f4b02e081151cf4862db39cbd03b3396f8873238"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply (not_and_lt E F B C).",
                        "VernacExtend",
                        "920e93d7a33347c9c0387d41c580ccef559d9e80"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (t18_18 D _ _ A); Cong.",
                        "VernacExtend",
                        "dac8fc1786f2dec64f3492b8b44d1a0ce8c23d27"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_trivial",
            "line_nb": 9790,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= not_col_exists A B H).",
                        "VernacExtend",
                        "cbe19237a0b96ae7cccde81ec4a59fb89e9d9a66"
                    ]
                },
                {
                    "command": [
                        "ex_and HH P.",
                        "VernacExtend",
                        "62826eef4f0c06ff0f259c30341fa8f0ebb13e10"
                    ]
                },
                {
                    "command": [
                        "assert(exists C : Tpoint, Per C B A /\\ Cong C B A B /\\ OS A B C P).",
                        "VernacExtend",
                        "8e1b6324c7b5b9cd7e57f3eaa673c6417c3abde1"
                    ]
                },
                {
                    "command": [
                        "apply(ex_per_cong A B B P A B H H); Col; exists A.",
                        "VernacExtend",
                        "a9a366f610871b099b8f0c5301d0fe7284802ec7"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 C.",
                        "VernacExtend",
                        "02d15f3e0054c2f5f568324b446e267aa563d2b9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "unfold Acute.",
                        "VernacExtend",
                        "3d3b9b210a10e549ddaa56f28d73bd066bb89fc5"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply l8_2.",
                        "VernacExtend",
                        "d878a2802f16fbb68671b14cd5324ab763023b98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold LtA.",
                        "VernacExtend",
                        "bc78b9900dc56635561f2a4605971f770e0a31c5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold LeA.",
                        "VernacExtend",
                        "5508e8c20a9df4f35160f441ed10ce769522d020"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inangle1123; auto.",
                        "VernacExtend",
                        "6b4a794455e72fea1cab6033d40b8eaa1d672115"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Out B A C).",
                        "VernacExtend",
                        "59f87a5b07ae9e8834311fdf3044cfc7045f3256"
                    ]
                },
                {
                    "command": [
                        "apply(l11_21_a A B A A B C).",
                        "VernacExtend",
                        "6d93ba85e30a14ed324e4cf97f15ca8e1b0f00d5"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert(Perp C B B A).",
                        "VernacExtend",
                        "017bead0af4ac0531d2199b74e4df7afb32bf293"
                    ]
                },
                {
                    "command": [
                        "apply per_perp_in in H1; auto.",
                        "VernacExtend",
                        "cb0004c2302dc39331e273828e57e217f9e481ee"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_perp_bis in H1.",
                        "VernacExtend",
                        "83ad2797c75cf9c2ce178b94a52c339859dae3a3"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "apply perp_not_eq_1 in H1.",
                        "VernacExtend",
                        "55952b10be90ebbefa6608461d0cd7387d1d1260"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply perp_comm in H10.",
                        "VernacExtend",
                        "57d281201b45e93b455d8e7b2ae8b8956373e863"
                    ]
                },
                {
                    "command": [
                        "apply perp_not_col in H10.",
                        "VernacExtend",
                        "33f54ee88df8b375912b12077f1bfd44c69d9f1a"
                    ]
                },
                {
                    "command": [
                        "apply out_col in H8.",
                        "VernacExtend",
                        "d91a5ec0f5b5fcce138399a929e06e582c9bfbb2"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_not_per",
            "line_nb": 9829,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Acute in H.",
                        "VernacExtend",
                        "ab06f9f66f851379d797edb3fa0d8444c7ac6132"
                    ]
                },
                {
                    "command": [
                        "ex_and H A'.",
                        "VernacExtend",
                        "5e920bdbf1d1ecd1e7799c941da260e3de675571"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 B'.",
                        "VernacExtend",
                        "a52aa76a7add4607289ef7ef182d771afa0b3a2e"
                    ]
                },
                {
                    "command": [
                        "ex_and H C'.",
                        "VernacExtend",
                        "10caf924647d44dd0ffb2df133d3540fc0e9cc1f"
                    ]
                },
                {
                    "command": [
                        "unfold LtA in H0.",
                        "VernacExtend",
                        "5c7d9f8549f9d9d10bc65459cb5889b00c2c23f3"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "assert(A <> B /\\ C <> B /\\ A' <> B' /\\ C' <> B').",
                        "VernacExtend",
                        "8e250fd4ab623239662b3d46e43b93af1d92e6c8"
                    ]
                },
                {
                    "command": [
                        "unfold LeA in H0.",
                        "VernacExtend",
                        "dfedeac9325976df0d168bc349bb7885252e374f"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 X.",
                        "VernacExtend",
                        "5e4c4b5abdbf2534736c8f1b78601e7a6110b270"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H3.",
                        "VernacExtend",
                        "5da341328fc3fdddba1adccf6aa48f15c181abfc"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "unfold InAngle in H0.",
                        "VernacExtend",
                        "b6153dcda0ea974cde4fd5b60e3d4ecda8d8a846"
                    ]
                },
                {
                    "command": [
                        "spliter; auto.",
                        "VernacExtend",
                        "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply(l11_16 A B C A' B' C'); auto.",
                        "VernacExtend",
                        "588eea03a34ef518fb9b1f95a13d15468f2b5582"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "angle_bisector",
            "line_nb": 9850,
            "steps": [
                {
                    "command": [
                        "intros A B C HAB HCB.",
                        "VernacExtend",
                        "0b0b45914a9eea1eca1e3bf511b1b41dca729a44"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec A B C).",
                        "VernacExtend",
                        "56b68f07aecf5cf0314aaf7f5b9032fef46c16f1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HCol.",
                        "VernacExtend",
                        "7339a24608f9044c1539af209f14a20bfa73ed6f"
                    ]
                },
                {
                    "command": [
                        "elim (bet_dec A B C).",
                        "VernacExtend",
                        "c5492a1b872689bb9ee4184107bb3c6832671091"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro HBet; destruct (not_col_exists A B) as [Q HNCol]; trivial.",
                        "VernacExtend",
                        "7f3ee4e6a5375cf0a5491d44c677fd4c70440c16"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A B B Q) as [P [HPerp HOS]]; Col.",
                        "VernacExtend",
                        "1c26d0324c6a5c3ed09039138537e8a421644c0e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; exists P; split.",
                        "VernacExtend",
                        "ee3516a9934d779bd5049685885869aa48bcd54c"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_line; auto.",
                        "VernacExtend",
                        "9741416c2f99a4a3f8957bd776b8f8fd20d9346c"
                    ]
                },
                {
                    "command": [
                        "apply l11_18_1; Perp.",
                        "VernacExtend",
                        "47a1521b2b7fbab760f8cc5eb47f2ed88003a2e5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro HOut; apply not_bet_out in HOut; trivial; assert_diffs.",
                        "VernacExtend",
                        "35892651ab7947bdbe670a0eed0dcaa850428028"
                    ]
                },
                {
                    "command": [
                        "exists C; split.",
                        "VernacExtend",
                        "5073d518962d84a4cc5923806862d318f59878dc"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists C; split; Between.",
                        "VernacExtend",
                        "ccd23a02f51ca8e6e8c6a3b49d4ef0af2d9fe27a"
                    ]
                },
                {
                    "command": [
                        "right; apply out_trivial; auto.",
                        "VernacExtend",
                        "d968bada418d0a8639011179c4c37b4609d1c30d"
                    ]
                },
                {
                    "command": [
                        "apply l11_21_b.",
                        "VernacExtend",
                        "1da580424192b6645444b07bef8443a7727be11c"
                    ]
                },
                {
                    "command": [
                        "apply l6_6; trivial.",
                        "VernacExtend",
                        "24379c6cad4d7686c4b2144edcd5eb0b6393c194"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HNCol.",
                        "VernacExtend",
                        "d2d5a30c7ebcd9ad8011f651d9082aa73266ec1d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence B B A C) as [C0 [HOut HCong]]; auto.",
                        "VernacExtend",
                        "9c85416bd2eeb10b6d80abc67c81eeb2786f8599"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A C0) as [P HP].",
                        "VernacExtend",
                        "19a31fd1264bd04687021e6a8d64ece704cb66d3"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol1 : ~ Col A B C0) by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "2745d829b077356a6f7ced37a1f7f7b0cafd6d7e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (P <> B) by (intro; subst P; apply HNCol1; Col).",
                        "VernacExtend",
                        "af16f992afa4ad5f0ede7b1c1d5e63c074e7942b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (l11_25 P A B C0); try (apply out_trivial); auto; [|apply l6_6; trivial].",
                        "VernacExtend",
                        "7c39d4bf6810d255254fe6334c17e8a1cd5068bd"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "exists P; split; Between.",
                        "VernacExtend",
                        "6cf5e49fd6381cc057f2442d1146b8df92dabb14"
                    ]
                },
                {
                    "command": [
                        "right; apply out_trivial; auto.",
                        "VernacExtend",
                        "d968bada418d0a8639011179c4c37b4609d1c30d"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_51 B P A B P C0); auto with cong.",
                        "VernacExtend",
                        "a9c05fcde1f5d6c5ab81f23f7da614e09fe58cb2"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga P B A P B C0); try (apply out_trivial); auto.",
                        "VernacExtend",
                        "a24242578ef6908e113364df3393ef064fe95019"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reflectl__conga",
            "line_nb": 9889,
            "steps": [
                {
                    "command": [
                        "intros A B P P' HAB HBP HRefl.",
                        "VernacExtend",
                        "62e15d6eb0b97bd974652a470a9787d857be3bf2"
                    ]
                },
                {
                    "command": [
                        "destruct HRefl as [[A' [HMid HCol]] [HPerp|Heq]]; [|subst; apply conga_refl; auto].",
                        "VernacExtend",
                        "2b7544490dfab985204c02a02f14fac4bd092816"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A' B).",
                        "VernacExtend",
                        "eac0c07517f052f1a6f587b118943ad712f16c63"
                    ]
                },
                {
                    "command": [
                        "subst A'.",
                        "VernacExtend",
                        "38ac8f0d3c4087e00fdcba2a2bf5b3a77f7c2bec"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto; apply perp_per_1; [apply perp_col1 with P'|apply perp_col1 with P]; Col; Perp.",
                        "VernacExtend",
                        "29cfa362530a4eae8e7a879bb7a28b1c630a5c4d"
                    ]
                },
                {
                    "command": [
                        "destruct HMid as [HBet HCong].",
                        "VernacExtend",
                        "9f2468a2e09be0f28d76d01338829e154cfe223e"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_49 B A' P B A' P') as [HCong1 [HConga1 HConga2]]; Cong.",
                        "VernacExtend",
                        "c31063e0ad08cc2363c5424393c938001a57a402"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto; apply perp_per_1, perp_left_comm, perp_col with A; Col; [apply perp_col1 with P'|apply perp_col1 with P]; Col; Perp.",
                        "VernacExtend",
                        "66b2bc6376227098b1e818f792ede58e4328b42b"
                    ]
                },
                {
                    "command": [
                        "destruct (bet_dec A' B A) as [HBBet|HBOut].",
                        "VernacExtend",
                        "f1bf03863dca39d24c71510dd9c6a0c6e175675b"
                    ]
                },
                {
                    "command": [
                        "apply l11_13 with A' A'; assumption.",
                        "VernacExtend",
                        "b81e8771452c2b285f778e5fd5b5a3488dbec797"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out in HBOut; Col.",
                        "VernacExtend",
                        "78073da0f52ff8a170449452e74cd492687ff94b"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A' P A' P'; trivial; apply out_trivial; assert_diffs; auto.",
                        "VernacExtend",
                        "882eb43655fb4e67d797104df1fad05417f6f139"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_cop_out_reflectl__out",
            "line_nb": 9905,
            "steps": [
                {
                    "command": [
                        "intros A B C P T T' HNOut HCop HConga HOut HRefl.",
                        "VernacExtend",
                        "e60c677224ac1ceb1fee5ad204eef398b5cbe657"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HConga; spliter; clean.",
                        "VernacExtend",
                        "490af09f28d4af26fd3d963a820b57bb201fc3f4"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HConga1 : CongA P B T P B T') by (apply reflectl__conga; auto; apply is_image_spec_rev, HRefl).",
                        "VernacExtend",
                        "d6753de55ae5d372a041153e4ee5aaa55780fded"
                    ]
                },
                {
                    "command": [
                        "apply is_image_is_image_spec in HRefl; auto.",
                        "VernacExtend",
                        "71985ea54dfaaeab16bfecdbe250e62998598740"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HConga1; spliter; clean.",
                        "VernacExtend",
                        "c5d8ca73ffeb153c30199abdac8a2e8fcf1989c6"
                    ]
                },
                {
                    "command": [
                        "destruct (conga_cop__or_out_ts P B C T'); trivial.",
                        "VernacExtend",
                        "7e2b74a243e95a7358547a12c7ab3e25a6519653"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with T; [..|Cop].",
                        "VernacExtend",
                        "4693869aea60e1a7b558733f8a46b51ec1a5e5b7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNOut.",
                        "VernacExtend",
                        "bfac1288cf9ba3ac27854ce12cfabf1164ea9f9d"
                    ]
                },
                {
                    "command": [
                        "assert (HCol : Col A B P) by ColR.",
                        "VernacExtend",
                        "b4a2616ec9346cda8b5dec638c75f673f3b1a782"
                    ]
                },
                {
                    "command": [
                        "destruct (bet_dec A B P) as [HBet|HOut1].",
                        "VernacExtend",
                        "db2829813531c6ae1da8b5bf2cb2cf53136005a2"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with P; auto.",
                        "VernacExtend",
                        "77172ae28dad3bdb9bf6a7777df315696a136945"
                    ]
                },
                {
                    "command": [
                        "apply (bet_conga__bet A B P); [|apply conga_comm]; assumption.",
                        "VernacExtend",
                        "8096c291392b571973bbc7923deda4c5e10cd62e"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out in HOut1; trivial.",
                        "VernacExtend",
                        "06cbef17d29e13730a1be3d84f57d6b1d93cd0ed"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with P; trivial.",
                        "VernacExtend",
                        "0ff8cd8ecd86c4e2cca6e6f0349d781e1b08b702"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a P B A); [apply l6_6|]; assumption.",
                        "VernacExtend",
                        "23f35980102755bb339c9b828e7d7e4ddbdd0781"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_19, col_cop__cop with A; Col; Cop.",
                        "VernacExtend",
                        "b7de064ebb4cad3d0f8d5bdcc2a96ac9cf7e9e08"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with P B A.",
                        "VernacExtend",
                        "4ab2cfd132c514b3efce4fcce9f49946e196ec13"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym; assumption.",
                        "VernacExtend",
                        "2b25f222f2bd1654890783ce24b11c9ff220586f"
                    ]
                },
                {
                    "command": [
                        "apply l6_6 in HOut; apply out_conga with P T P T'; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "6f5e74d48bfd010fe5735f69dae5fb999172abb1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply (l9_9_bis P B C T'); trivial.",
                        "VernacExtend",
                        "7532419717186b46c1320600e794663a99412d01"
                    ]
                },
                {
                    "command": [
                        "exists A; split; apply l9_2.",
                        "VernacExtend",
                        "04924cb96770833a85bde5d9a91bc52ee688bf3e"
                    ]
                },
                {
                    "command": [
                        "destruct (conga_cop__or_out_ts P B A C); Cop; contradiction.",
                        "VernacExtend",
                        "8997aa47bea34cb658ebe0c5ff3976f9e2a8da19"
                    ]
                },
                {
                    "command": [
                        "apply out_two_sides_two_sides with T B; Col.",
                        "VernacExtend",
                        "00a719f3e77c920c8c3879688b707a107feb21ea"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides, l10_14; auto.",
                        "VernacExtend",
                        "c7050ec505312f2b90e6a1a3ca57bf7894900cd2"
                    ]
                },
                {
                    "command": [
                        "intro; subst T'.",
                        "VernacExtend",
                        "36625e51671b4d1329d1e78b779b519930b4973b"
                    ]
                },
                {
                    "command": [
                        "apply HNOut.",
                        "VernacExtend",
                        "bfac1288cf9ba3ac27854ce12cfabf1164ea9f9d"
                    ]
                },
                {
                    "command": [
                        "assert (Col T B P) by (apply l10_8, HRefl).",
                        "VernacExtend",
                        "30cbf8ca1f1dfbaa3df54f7ee1fd6e93cccc799f"
                    ]
                },
                {
                    "command": [
                        "assert (Col P B A) by ColR.",
                        "VernacExtend",
                        "942e9e28bf50e8e96780daf74c91669bbdd0820c"
                    ]
                },
                {
                    "command": [
                        "assert (Col P B C) by (apply (col_conga_col P B A); assumption).",
                        "VernacExtend",
                        "5c73382924259904015ff83ec8382538b3c334ac"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out; try ColR.",
                        "VernacExtend",
                        "ffcbf6683db111af9a83ca52918584611f0d3061"
                    ]
                },
                {
                    "command": [
                        "intro HBet.",
                        "VernacExtend",
                        "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
                    ]
                },
                {
                    "command": [
                        "apply (per_not_col P B A); auto.",
                        "VernacExtend",
                        "46945c73c8b38b8cf0065e5957cccb08a7facdbc"
                    ]
                },
                {
                    "command": [
                        "apply l11_18_2 with C; assumption.",
                        "VernacExtend",
                        "178ab73a3c9bfb5dbb2bb407ae65de373c37725f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_conga_cop_reflectl__col",
            "line_nb": 9948,
            "steps": [
                {
                    "command": [
                        "intros A B C P T T' HNOut HCop HConga HCol HRefl.",
                        "VernacExtend",
                        "47629d9f6efaf9ea27d3daf1f09a05560e672a84"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points B T).",
                        "VernacExtend",
                        "574725725e913dbacddbe9f7beffdc61ece8971f"
                    ]
                },
                {
                    "command": [
                        "subst; assert (T = T'); subst; Col.",
                        "VernacExtend",
                        "bfd77b8c990a1af0cce523b5efc850f89f9ee39b"
                    ]
                },
                {
                    "command": [
                        "apply (l10_6_uniqueness_spec T P T); trivial; apply col__refl; Col.",
                        "VernacExtend",
                        "9e3f9c75cc3c849f97d70d5c39a50f2660a334d1"
                    ]
                },
                {
                    "command": [
                        "destruct (out_dec B A T).",
                        "VernacExtend",
                        "93e10a8f98e6f0a5a522281b0802075e3373d370"
                    ]
                },
                {
                    "command": [
                        "apply out_col, conga_cop_out_reflectl__out with A P T; assumption.",
                        "VernacExtend",
                        "e8479a50d8272a400e64a0c08bf814e3c1097103"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B A B) as [A' [HA'1 HA'2]].",
                        "VernacExtend",
                        "2df1aceafc054aa1d9775d940cff8f69f4b5ae4b"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction C B C B) as [C' [HC'1 HC'2]].",
                        "VernacExtend",
                        "3a168311d1c0e9ecedd266957f36c8a58c6b2a7b"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C' T'); try ColR.",
                        "VernacExtend",
                        "8389f2d56c37ddaca15a78fd35f43251264d1551"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HConga; spliter; assert_diffs.",
                        "VernacExtend",
                        "e617bd953bba8d6c417b4caaec6f8fcb18d6ebd7"
                    ]
                },
                {
                    "command": [
                        "apply conga_cop_out_reflectl__out with A' P T; trivial.",
                        "VernacExtend",
                        "a434d0b6e8268df83ae4a366a2d1fbd4b93d24be"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNOut.",
                        "VernacExtend",
                        "3c07faa416f2844d2daa3e5dbcc5203bd867bc94"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with A'; auto.",
                        "VernacExtend",
                        "fd2426f044a63c203606d622e27bb1e8e7d0d413"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, l6_2 with C'; try (apply l6_6); Between.",
                        "VernacExtend",
                        "aab5892ddf7b9bb540bad22ef773bb71957623e5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "exists C'; left; split; ColR.",
                        "VernacExtend",
                        "9dc23ad4927ebad919074548164391ce4d9634d8"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; Cop.",
                        "VernacExtend",
                        "bcc950db2da3c31f64c2af161c0781104026407e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm, l11_13 with A C; auto; apply conga_comm; assumption.",
                        "VernacExtend",
                        "6b1be4d4125330db573af60cf411793eeea780d8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with A; try (apply between_symmetry); auto.",
                        "VernacExtend",
                        "2f0f24d4fe2b99b39ee29d9974662b28879c3192"
                    ]
                },
                {
                    "command": [
                        "apply not_out_bet; Col.",
                        "VernacExtend",
                        "b7b5f14a999c4872d9e09624cd42467a37e7f0f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga2_cop2__col",
            "line_nb": 9974,
            "steps": [
                {
                    "command": [
                        "intros A B C P P' HNOut HP HP' HCopA HCopC.",
                        "VernacExtend",
                        "61c0fb303ade25e75c8457dd151835ea35e92947"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HP; apply conga_distinct in HP'; spliter; clean.",
                        "VernacExtend",
                        "2c6c35769e436b1c6aa092e68c9954e597e528ca"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence B B A C) as [C' [HC'1 HC'2]]; auto.",
                        "VernacExtend",
                        "c6b3dc5fa8ff2f2395ab0f5fcd1b9fbffb907180"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_49 P B A P B C'); Cong.",
                        "VernacExtend",
                        "9cba80dd3dcc5550c4e142016a97e87d77d0def1"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with P A P C; try (apply out_trivial); try (apply l6_6); auto.",
                        "VernacExtend",
                        "c60be62393412cc9518ebef42605db225f098f60"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_49 P' B A P' B C'); Cong.",
                        "VernacExtend",
                        "f2d8a79e1efa408a08046971e61e961f149eb578"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with P' A P' C; try (apply out_trivial); try (apply l6_6); auto.",
                        "VernacExtend",
                        "01dcdeddd60817630eae1919b7bbdf1017086da2"
                    ]
                },
                {
                    "command": [
                        "apply cong3_cop2__col with A C'; Cong.",
                        "VernacExtend",
                        "2ab27afe6eeb868bb1476a8573690f26210fc93b"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col_cop__cop with C; Col; Cop.",
                        "VernacExtend",
                        "f75f43eee6d1b201ebee18d9a38092e5d3b44784"
                    ]
                },
                {
                    "command": [
                        "intro; subst; auto.",
                        "VernacExtend",
                        "14c52ba75193a5cf953b4666ab65f547781225b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga2_cop2__col_1",
            "line_nb": 9987,
            "steps": [
                {
                    "command": [
                        "intros A B C P P' HNCol HP HP' HCop HCop'.",
                        "VernacExtend",
                        "4ac67be8dbedb7d8c8e603c3a1d6e442aeb7d6ba"
                    ]
                },
                {
                    "command": [
                        "apply conga2_cop2__col with A C; trivial; [|apply coplanar_pseudo_trans with A B C; Cop..].",
                        "VernacExtend",
                        "ed1bf11fb40a8e7ee7209738c4ecf5bd991a7e7c"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol; Col.",
                        "VernacExtend",
                        "bc1ad9e50076fe7ff6cb940cf13b0eb1e0e75e49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_conga__conga",
            "line_nb": 9992,
            "steps": [
                {
                    "command": [
                        "intros A B C P P' HConga HCol HBP'.",
                        "VernacExtend",
                        "06eac4312ff8968eaa938b49cffb453582738ca9"
                    ]
                },
                {
                    "command": [
                        "destruct (bet_dec P B P') as [HBet|HNBet].",
                        "VernacExtend",
                        "b1f9fde7f5cfb1cc3393331adc8e92021795de6d"
                    ]
                },
                {
                    "command": [
                        "apply l11_13 with P P; auto.",
                        "VernacExtend",
                        "35a12ed9737a655736dbe07a22557dd15d32afbb"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out in HNBet; Col.",
                        "VernacExtend",
                        "5a8410e8247d6048ebdd46b8c74fbb11994bd7ee"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in HConga; spliter.",
                        "VernacExtend",
                        "8c6d2bf38c67721b5af1338971ac6a2664c026ab"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with P A P C; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "af263c74af831080f173d685b878beba45c66ce0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_inangle__ex_col_inangle",
            "line_nb": 10000,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HNOut HIn HCop.",
                        "VernacExtend",
                        "73661163cf2a42a4f846bb63c5fa21e071a921fc"
                    ]
                },
                {
                    "command": [
                        "assert (h := inangle_distincts A B C P HIn); spliter.",
                        "VernacExtend",
                        "79731002cc8197bd55b7c2d78673d9d96aad5898"
                    ]
                },
                {
                    "command": [
                        "assert (A <> C) by (intro; subst; apply HNOut, out_trivial; auto).",
                        "VernacExtend",
                        "fa84e5e1747859495a37de6415d262adca11c227"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points P Q).",
                        "VernacExtend",
                        "8e638c9507dff8ea1ec15d7062e186c739c15f49"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst Q.",
                        "VernacExtend",
                        "11ef39d7871ab32ca8047174680c596e5304f734"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A P).",
                        "VernacExtend",
                        "dbbbf4d20ba13f727e33e9b5f7d957ff95accc22"
                    ]
                },
                {
                    "command": [
                        "subst P; exists C; split; Col.",
                        "VernacExtend",
                        "1953cfa11b5a8e0ba4b3e29ae8184d16c7bb07f8"
                    ]
                },
                {
                    "command": [
                        "apply inangle3123; auto.",
                        "VernacExtend",
                        "56d0c54a334d0bb9e49709f29682d30ec986b56e"
                    ]
                },
                {
                    "command": [
                        "exists A; split; Col; apply inangle1123; auto.",
                        "VernacExtend",
                        "cb2a256aa33c2a5c324d28b3a25afae6612c7d08"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B P Q) as [HCol|HNCol1].",
                        "VernacExtend",
                        "b18bcda8a069737e3aca226337861b8075991732"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction B P B P) as [R [HR1 HR2]].",
                        "VernacExtend",
                        "11af648ee6a42deb2662b752c2a82d568191fadb"
                    ]
                },
                {
                    "command": [
                        "exists R.",
                        "VernacExtend",
                        "6be16195e61cf6042a202f52c388c0dc69db4ce9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; split; [|split; ColR].",
                        "VernacExtend",
                        "1a16118688b2f3b06ce8b9b7667c7c4649c80885"
                    ]
                },
                {
                    "command": [
                        "apply l11_25 with P A C; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "47621b6e608ca98e5bce5343dc3ba7443189a80d"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, bet_out; auto.",
                        "VernacExtend",
                        "9aba55c0c4537576e8c38045aea94b98aba9917b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [HCol|HNCol2].",
                        "VernacExtend",
                        "90e9c7d7d9ebad9b69fd511a3eab1621c42cab54"
                    ]
                },
                {
                    "command": [
                        "exists Q; split; Col.",
                        "VernacExtend",
                        "0cd155dec218b94a6cb741240575c25e45768bb7"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_line; auto.",
                        "VernacExtend",
                        "9741416c2f99a4a3f8957bd776b8f8fd20d9346c"
                    ]
                },
                {
                    "command": [
                        "apply not_out_bet; assumption.",
                        "VernacExtend",
                        "9e38016ae86c48d96bb96b2c9c5e14a31be9ae8e"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C P) as [HCol|HNCol3].",
                        "VernacExtend",
                        "2f63c2115ef8fc65d1e0439190d8e043ddd24b45"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col B A P) by (intro; apply HNCol2; ColR).",
                        "VernacExtend",
                        "2b715951f27ab944f3d7f2519f1583f49193ce77"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_not_par_same_side B P Q P P A) as [Q0 [HCol1 HOS]]; Col.",
                        "VernacExtend",
                        "4d80f7d413021a0326e73c22072a70b9567bacc3"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_16, col_cop__cop with C; Cop.",
                        "VernacExtend",
                        "9b529829ee53f64c1701ed0b43ddda995916e5cd"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := os_distincts B P A Q0 HOS); spliter; clean.",
                        "VernacExtend",
                        "8e1bd5f7b1d1670750f6529f867bed3f3e653a6e"
                    ]
                },
                {
                    "command": [
                        "destruct (one_side_dec B A P Q0).",
                        "VernacExtend",
                        "aea10953a26f8b813431778dc2ec703e9fd4f12e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HIn' : InAngle Q0 A B P) by (apply os2__inangle; assumption).",
                        "VernacExtend",
                        "ce08d472aef1652e557abac2c29e309ad03570c5"
                    ]
                },
                {
                    "command": [
                        "exists Q0; split; Col.",
                        "VernacExtend",
                        "3746e5656a63158504ff8655a097a4da62da38c2"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_trans with P; trivial.",
                        "VernacExtend",
                        "887c7d40d08aabd4edb23f65a92bc650ee7006c6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HR : exists R, Bet P R Q0 /\\ Col P Q R /\\ Col B A R).",
                        "VernacExtend",
                        "8fe28c0483dd24251b4c88836e712a8a5e6bfa95"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B A Q0).",
                        "VernacExtend",
                        "95646bdd6d3cca9d2745a1eb044bb6ede8143eef"
                    ]
                },
                {
                    "command": [
                        "exists Q0; split; Between; Col.",
                        "VernacExtend",
                        "1c5f9d26c5b9035102a18a91ba4b24c39c885e61"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__not_one_side_two_sides B A P Q0) as [_ [_ [R [HCol' HBet]]]]; Col; Cop.",
                        "VernacExtend",
                        "c5924f58b5dc4669cd4c30d253cf7c9067c235ec"
                    ]
                },
                {
                    "command": [
                        "exists R; split; trivial; split; ColR.",
                        "VernacExtend",
                        "3dca6696776ff99b9031f31af236df3986b1ba3f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HR as [R [HR1 [HR2 HR3]]].",
                        "VernacExtend",
                        "5ff04b554b1c257f20e9bcb76605c77f692c9fb9"
                    ]
                },
                {
                    "command": [
                        "assert (P <> R) by (intro; subst; apply HNCol3, HR3).",
                        "VernacExtend",
                        "03826440e502a850306e85d519dc8701840b5849"
                    ]
                },
                {
                    "command": [
                        "exists R; split; auto.",
                        "VernacExtend",
                        "e5c78d8345b588d288c86a8621ad56b76f1fc15d"
                    ]
                },
                {
                    "command": [
                        "apply out321__inangle; auto.",
                        "VernacExtend",
                        "e64362360b6cae184105f7a3dac144d66e532ec3"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with P; trivial.",
                        "VernacExtend",
                        "e6523d3eda40513cc27af8ccfde408d7ccb09804"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with Q0; trivial.",
                        "VernacExtend",
                        "3f151a01a1070f2eda965f783b83778a67b73fed"
                    ]
                },
                {
                    "command": [
                        "apply one_side_not_col124 in HOS.",
                        "VernacExtend",
                        "2a0523a1e90fad23bcc6c6916debb2f009f8ccbb"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, out_one_side; Col.",
                        "VernacExtend",
                        "06d5cb70a26bc0ad1488afc69f1e0c48a10c8f44"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, bet_out; auto.",
                        "VernacExtend",
                        "9aba55c0c4537576e8c38045aea94b98aba9917b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_not_par_same_side B P Q P P C) as [Q0 [HCol1 HOS]]; Col.",
                        "VernacExtend",
                        "c6032fbbc54976c2698545d27fb5b861372fabf6"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_3, coplanar_trans_1 with A; Cop.",
                        "VernacExtend",
                        "4206748e9722eb3cf14da27f793067a7cceb6056"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := os_distincts B P C Q0 HOS); spliter; clean.",
                        "VernacExtend",
                        "0321169e655553b80d22aaeb679e66b1ba32268f"
                    ]
                },
                {
                    "command": [
                        "destruct (one_side_dec B C P Q0).",
                        "VernacExtend",
                        "18bca853ff9b4fa5c843d992b61b9161ee9362f4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HIn' : InAngle Q0 C B P) by (apply os2__inangle; assumption).",
                        "VernacExtend",
                        "ed88f0bb5deac82ae48f51d111eebb0abe2779b6"
                    ]
                },
                {
                    "command": [
                        "exists Q0; split; Col.",
                        "VernacExtend",
                        "3746e5656a63158504ff8655a097a4da62da38c2"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, in_angle_trans with P; trivial.",
                        "VernacExtend",
                        "ef3df06ff776302ac34fc812010b95b086d6fe71"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, HIn.",
                        "VernacExtend",
                        "1b798a135094a1cd76100690fc9f3eaea7404f2d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HR : exists R, Bet P R Q0 /\\ Col P Q R /\\ Col B C R).",
                        "VernacExtend",
                        "5b2c03434f069a789213a10fe64af82e8bdfde36"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C Q0).",
                        "VernacExtend",
                        "23bc08cd6a095d92613d433651160118efb6f4ee"
                    ]
                },
                {
                    "command": [
                        "exists Q0; split; Between; Col.",
                        "VernacExtend",
                        "1c5f9d26c5b9035102a18a91ba4b24c39c885e61"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__not_one_side_two_sides B C P Q0) as [_ [_ [R [HCol' HBet]]]]; Col; Cop.",
                        "VernacExtend",
                        "a688757d2b53a825caf9a97da3820802dccea939"
                    ]
                },
                {
                    "command": [
                        "exists R; split; trivial; split; ColR.",
                        "VernacExtend",
                        "3dca6696776ff99b9031f31af236df3986b1ba3f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HR as [R [HR1 [HR2 HR3]]].",
                        "VernacExtend",
                        "5ff04b554b1c257f20e9bcb76605c77f692c9fb9"
                    ]
                },
                {
                    "command": [
                        "assert (P <> R) by (intro; subst; apply HNCol3, HR3).",
                        "VernacExtend",
                        "03826440e502a850306e85d519dc8701840b5849"
                    ]
                },
                {
                    "command": [
                        "exists R; split; auto.",
                        "VernacExtend",
                        "e5c78d8345b588d288c86a8621ad56b76f1fc15d"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, out321__inangle; auto.",
                        "VernacExtend",
                        "253c09b338602ac5c9168a44ae7b186f666efed2"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with P; trivial.",
                        "VernacExtend",
                        "e6523d3eda40513cc27af8ccfde408d7ccb09804"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with Q0; trivial.",
                        "VernacExtend",
                        "3f151a01a1070f2eda965f783b83778a67b73fed"
                    ]
                },
                {
                    "command": [
                        "apply one_side_not_col124 in HOS.",
                        "VernacExtend",
                        "2a0523a1e90fad23bcc6c6916debb2f009f8ccbb"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, out_one_side; Col.",
                        "VernacExtend",
                        "06d5cb70a26bc0ad1488afc69f1e0c48a10c8f44"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, bet_out; auto.",
                        "VernacExtend",
                        "9aba55c0c4537576e8c38045aea94b98aba9917b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_inangle2__out",
            "line_nb": 10083,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HNBet HP HQ HCol.",
                        "VernacExtend",
                        "efc9df9566ced43e95c0ff122479e4b373395c0b"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := inangle_distincts A B C P HP); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
                        "VernacExtend",
                        "469d5bb39bc9adbc9bbfce8f012028952ec0a2e1"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C).",
                        "VernacExtend",
                        "7b10dd9c6b7260f86668772ddd2589811597a7f0"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A C) by (apply not_bet_out; assumption).",
                        "VernacExtend",
                        "807e7ad81cd65ebb011e59401c5e6f8a63b54ba6"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with A; [apply l6_6|]; apply out_in_angle_out with C; auto.",
                        "VernacExtend",
                        "f5b7a2ba58902b8ac872d5d4bf386db10ee131bb"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B A P) as [HCol1|HNCol1].",
                        "VernacExtend",
                        "08837d435ed5c23f620be2aad965f6d7ad52ee33"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with A; [apply l6_6|]; apply col_in_angle_out with C; ColR.",
                        "VernacExtend",
                        "2c71af3d23388b77c8207133fe90dd2a179f36de"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with A; trivial.",
                        "VernacExtend",
                        "f99c9b9e3fedcf7c716071d6aebf71369f67bd29"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with C; [|apply one_side_symmetry]; apply invert_one_side, in_angle_one_side; Col.",
                        "VernacExtend",
                        "18663180b8a5c332176672921835958814f9d352"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol1; ColR.",
                        "VernacExtend",
                        "db4c88af58e53c21b69c0295f95e83a9658421f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle2__lea",
            "line_nb": 10095,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HP HQ.",
                        "VernacExtend",
                        "4684d7b66b413903e844d9b5b63caf24886990cc"
                    ]
                },
                {
                    "command": [
                        "assert (HP' := l11_24 P A B C HP).",
                        "VernacExtend",
                        "6333c29b0653793e238b769e8d474d7ddb3354e1"
                    ]
                },
                {
                    "command": [
                        "assert (HQ' := l11_24 Q A B C HQ).",
                        "VernacExtend",
                        "695f94c89a9ba6267d5dcc61824105eb8008d930"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := inangle_distincts A B C P HP); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
                        "VernacExtend",
                        "469d5bb39bc9adbc9bbfce8f012028952ec0a2e1"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [HCol|HNCol].",
                        "VernacExtend",
                        "3e9dd15d3bbd59e77870202ff8b14e82f103a816"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (bet_dec A B C).",
                        "VernacExtend",
                        "c15fc78159b7b131f2e6c9b46dc7f34d22b444d4"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_2; auto.",
                        "VernacExtend",
                        "56ded40783ae3142836c891eb28367d2183e2280"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; auto.",
                        "VernacExtend",
                        "1bc9cbb01a81accf0a6e86f7a986e940ca618888"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A C) by (apply not_bet_out; assumption).",
                        "VernacExtend",
                        "807e7ad81cd65ebb011e59401c5e6f8a63b54ba6"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with A; [apply l6_6|]; apply out_in_angle_out with C; auto.",
                        "VernacExtend",
                        "f5b7a2ba58902b8ac872d5d4bf386db10ee131bb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B P Q) as [HCol1|HNCol1].",
                        "VernacExtend",
                        "ca1c74530d002f02707568710f923acacd8e54e4"
                    ]
                },
                {
                    "command": [
                        "apply l11_31_1; auto; apply col_inangle2__out with A C; auto.",
                        "VernacExtend",
                        "0bb2e70c9c6d2407b02cab563a6deab5acdaded7"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol; Col.",
                        "VernacExtend",
                        "bc1ad9e50076fe7ff6cb940cf13b0eb1e0e75e49"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B A P) as [HCol2|HNCol2].",
                        "VernacExtend",
                        "e2e8a1c9868596e53b4760ea9eeccd49e6107b9a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A P) by (apply col_in_angle_out with C; auto; intro; apply HNCol; Col).",
                        "VernacExtend",
                        "f82f86c0a994ec5407155cfdff7435d931cbd65a"
                    ]
                },
                {
                    "command": [
                        "exists Q; split; trivial.",
                        "VernacExtend",
                        "514d7bec862b6879d802b34feca5bf1511cc1e90"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A Q A Q; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "5226f7e61aed49ee7cc4f60fdac60b49a92695eb"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C P) as [HCol3|HNCol3].",
                        "VernacExtend",
                        "8c5c376af216e5e66bd080af3e87ce3642eb43df"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C P).",
                        "VernacExtend",
                        "d417c9377b54580b2d819740333c1df684f964e6"
                    ]
                },
                {
                    "command": [
                        "apply col_in_angle_out with A; auto; intro; apply HNCol; Col.",
                        "VernacExtend",
                        "d61754ad17e0886a96fa771b1ce580299d257c8e"
                    ]
                },
                {
                    "command": [
                        "apply lea_right_comm.",
                        "VernacExtend",
                        "e0d7607e49a0d5880afb60733de3de3a5dafb459"
                    ]
                },
                {
                    "command": [
                        "exists Q; split; trivial.",
                        "VernacExtend",
                        "514d7bec862b6879d802b34feca5bf1511cc1e90"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with C Q C Q; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "4d3209290997ed1da1d3bc4780571975e8872dee"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B A Q) as [HCol4|HNCol4].",
                        "VernacExtend",
                        "50beffbb33a1ef624d2d4857b7519d2769b19015"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A Q) by (apply col_in_angle_out with C; auto; intro; apply HNCol; Col).",
                        "VernacExtend",
                        "2f6335b1c07c3e07e6581992d318d521fb682288"
                    ]
                },
                {
                    "command": [
                        "apply lea_left_comm.",
                        "VernacExtend",
                        "ec98640628879e019e32000f9c43f96769a60abf"
                    ]
                },
                {
                    "command": [
                        "exists P; split; trivial.",
                        "VernacExtend",
                        "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A P A P; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "562032e46ef772f1651a4cfe96894dcc79aa3f2f"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C Q) as [HCol5|HNCol5].",
                        "VernacExtend",
                        "02455e1446ffefc2fb2c08c72fd13ad901509f59"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C Q).",
                        "VernacExtend",
                        "f5a9f4f30f29c589e47f037ac3c558fc4550052c"
                    ]
                },
                {
                    "command": [
                        "apply col_in_angle_out with A; auto; intro; apply HNCol; Col.",
                        "VernacExtend",
                        "d61754ad17e0886a96fa771b1ce580299d257c8e"
                    ]
                },
                {
                    "command": [
                        "apply lea_comm.",
                        "VernacExtend",
                        "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
                    ]
                },
                {
                    "command": [
                        "exists P; split; trivial.",
                        "VernacExtend",
                        "4eb67bb36cad1c4968cd35e40355d0b7e6abe4ab"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with C P C P; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "41a63715d405841096f734b8ba64f92d846be065"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__one_or_two_sides B P A Q) as [HOS|HTS]; Col.",
                        "VernacExtend",
                        "279b6fc800c9e101692f12992bdefed9e32d1881"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_2, coplanar_trans_1 with C; Cop; Col.",
                        "VernacExtend",
                        "c6b873075fe933660ee25cc65dbebeb1b3bb0fbc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply lea_trans with P B C; [|apply lea_comm]; apply inangle__lea; trivial.",
                        "VernacExtend",
                        "4489f3ff0467c6ebb1bee930796b059821327f85"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; apply invert_one_side.",
                        "VernacExtend",
                        "e832dce3b6b1d73bdf67ffb2c9ab20e682ddd47d"
                    ]
                },
                {
                    "command": [
                        "exists A; split; Side; apply in_angle_two_sides; Col.",
                        "VernacExtend",
                        "617236a7c03f9d24ac9e3373a9915aa3f8495078"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with A; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
                        "VernacExtend",
                        "89110ca43293b3acc709e36b2aba66b7b68d9e94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply lea_trans with A B P; [apply lea_right_comm|]; apply inangle__lea; trivial.",
                        "VernacExtend",
                        "d59680c4e0247c42766eb85588d342f90c7efa63"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; trivial.",
                        "VernacExtend",
                        "b71637a86c609ccc3b0970f7cc85fec916a5d3c1"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, one_side_transitivity with C; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
                        "VernacExtend",
                        "2eb25470e581485dc0cad225c0ffcba51fa7d56c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_inangle_per__acute",
            "line_nb": 10156,
            "steps": [
                {
                    "command": [
                        "intros A B C P HPer HP1 HP2.",
                        "VernacExtend",
                        "fe4b0eb676fcc0850212986e5d6f22e2781e60c4"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := inangle_distincts A B C P HP1); spliter; clean.",
                        "VernacExtend",
                        "38e3b75eda0146d9189ab46267966e25de32b94d"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col A B C) by (apply per_not_col; auto).",
                        "VernacExtend",
                        "e2c4d407264512f878f53e1ae6abef1beff45317"
                    ]
                },
                {
                    "command": [
                        "exists A, B, C; split; trivial.",
                        "VernacExtend",
                        "fa7cfc46900328fc7c9d20013fedaaa13f13f5a0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inangle__lea, HP1.",
                        "VernacExtend",
                        "726ebf14d50eede9c6033452c7f79594ef807ecf"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "assert (Per A B P) by (apply l11_17 with A B C, conga_sym; trivial).",
                        "VernacExtend",
                        "67e8c67295c0d0a6fa4126d882669c831ff400a1"
                    ]
                },
                {
                    "command": [
                        "apply HNCol, col_permutation_1, cop_per2__col with P; Cop.",
                        "VernacExtend",
                        "c3c137809f7be752a914a897c37229202e0da48a"
                    ]
                },
                {
                    "command": [
                        "apply l11_17 with A B P; trivial.",
                        "VernacExtend",
                        "dd3b19b7916b9f48822b97ac76525fc30c65675f"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm, HP2.",
                        "VernacExtend",
                        "ac2565d9bc053da1faffda1797fcd7296a33e795"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_inangle2_per__acute",
            "line_nb": 10169,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q HPer HP1 HP2 HQ.",
                        "VernacExtend",
                        "0b2e710358b5761f44958fc914355ba2c1048a55"
                    ]
                },
                {
                    "command": [
                        "assert (HP' := l11_24 P A B C HP1).",
                        "VernacExtend",
                        "7d05985b8fb7bbd68c3fe35cd5fef8d75aa19f51"
                    ]
                },
                {
                    "command": [
                        "assert (HQ' := l11_24 Q A B C HQ).",
                        "VernacExtend",
                        "695f94c89a9ba6267d5dcc61824105eb8008d930"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := inangle_distincts A B C P HP1); assert (Hd' := inangle_distincts A B C Q HQ); spliter; clean.",
                        "VernacExtend",
                        "b42a152fb3490c94e0dbdc32098babe082a6eb05"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col A B C) by (apply per_not_col; auto).",
                        "VernacExtend",
                        "e2c4d407264512f878f53e1ae6abef1beff45317"
                    ]
                },
                {
                    "command": [
                        "assert (HAcute : Acute A B P) by (apply conga_inangle_per__acute with C; assumption).",
                        "VernacExtend",
                        "004566d616da54accb733df79a5f68a7b128ea85"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol1 : ~ Col P B A).",
                        "VernacExtend",
                        "1a1f425d39019180a772a9d41a98d2901d988551"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (Col P B C) by (apply (col_conga_col P B A); assumption).",
                        "VernacExtend",
                        "5c73382924259904015ff83ec8382538b3c334ac"
                    ]
                },
                {
                    "command": [
                        "apply HNCol; ColR.",
                        "VernacExtend",
                        "4d3843a49841e9758fac66d12e304c8d115992d6"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol2 : ~ Col P B C) by (apply (ncol_conga_ncol P B A); assumption).",
                        "VernacExtend",
                        "52427238f61456e6670fc9193c270b9ee9b24882"
                    ]
                },
                {
                    "command": [
                        "assert (~ Bet A B C) by (intro; apply HNCol; Col).",
                        "VernacExtend",
                        "9948675729c0e306a4612638cbc59e41163747e4"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B A Q).",
                        "VernacExtend",
                        "532c540895553d71b65999843b78b8f787edd9c0"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A Q) by (apply col_in_angle_out with C; Col).",
                        "VernacExtend",
                        "af89120c7682aadd9f042c1077fe2bc9760abc3e"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute A B P); trivial.",
                        "VernacExtend",
                        "f0b645a4b5bfb9494968cd7a30ab219ff711ad55"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A P P A; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "d8fd50417d49021191d670807d29ad5848116c7c"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl; auto.",
                        "VernacExtend",
                        "df9b6043ebd1492b46b4fc504cdbe598621cd514"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C Q).",
                        "VernacExtend",
                        "de770b67ff210e2731fbf01f45ee2650a6fd7fc5"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C Q) by (apply col_in_angle_out with A; Between; Col).",
                        "VernacExtend",
                        "f55fb3f963d5ac8989079830fa911a0f3734add7"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute A B P); trivial.",
                        "VernacExtend",
                        "f0b645a4b5bfb9494968cd7a30ab219ff711ad55"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A P P C; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "4b952e00c9d9576580500e26292f46bbb3ad105e"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm, HP2.",
                        "VernacExtend",
                        "650c5275b64674a8ac3d734d9f538c2419bc07bd"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B P Q).",
                        "VernacExtend",
                        "0e54161a8e92fa7898f5cd75b816f2de1b4f9a70"
                    ]
                },
                {
                    "command": [
                        "apply out__acute, col_inangle2__out with A C; assumption.",
                        "VernacExtend",
                        "62202c3e546ea2071722571af793034aef63214d"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__one_or_two_sides B P A Q) as [HOS|HTS]; Col.",
                        "VernacExtend",
                        "279b6fc800c9e101692f12992bdefed9e32d1881"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_2, coplanar_trans_1 with C; Cop; Col.",
                        "VernacExtend",
                        "c6b873075fe933660ee25cc65dbebeb1b3bb0fbc"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply acute_lea_acute with P B C.",
                        "VernacExtend",
                        "288e0893493124dc054e5fd6d4abf5c562ba4bb7"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute A B P); try (apply conga_left_comm); assumption.",
                        "VernacExtend",
                        "fa67a85ce992097b6a507d228f8b90c204ad6cee"
                    ]
                },
                {
                    "command": [
                        "exists Q; split; [|apply conga_refl; auto].",
                        "VernacExtend",
                        "1709a7dd159762bb3644ad17e165cedf1513a56e"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; apply invert_one_side.",
                        "VernacExtend",
                        "e832dce3b6b1d73bdf67ffb2c9ab20e682ddd47d"
                    ]
                },
                {
                    "command": [
                        "exists A; split; Side; apply in_angle_two_sides; Col.",
                        "VernacExtend",
                        "617236a7c03f9d24ac9e3373a9915aa3f8495078"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with A; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
                        "VernacExtend",
                        "89110ca43293b3acc709e36b2aba66b7b68d9e94"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply acute_lea_acute with A B P; trivial.",
                        "VernacExtend",
                        "8f0dcb05f5c3821cd1f2d820087dc0ccf37eae12"
                    ]
                },
                {
                    "command": [
                        "apply lea_comm.",
                        "VernacExtend",
                        "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
                    ]
                },
                {
                    "command": [
                        "exists Q; split; [|apply conga_pseudo_refl; auto].",
                        "VernacExtend",
                        "ce346f1700a707e54a00b7ab4fcbe0d9f304d9a7"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; trivial.",
                        "VernacExtend",
                        "b71637a86c609ccc3b0970f7cc85fec916a5d3c1"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, one_side_transitivity with C; [|apply one_side_symmetry]; apply in_angle_one_side; Col.",
                        "VernacExtend",
                        "2eb25470e581485dc0cad225c0ffcba51fa7d56c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_os__out",
            "line_nb": 10299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(HH:= conga_cop__or_out_ts A O B C).",
                        "VernacExtend",
                        "9cf183fecc3dd91815caad9e0bcb3ba5db660b97"
                    ]
                },
                {
                    "command": [
                        "induction HH; Cop.",
                        "VernacExtend",
                        "7bf5fcf5fd1371eb101420de0db0c47f3801c319"
                    ]
                },
                {
                    "command": [
                        "apply invert_two_sides in H1.",
                        "VernacExtend",
                        "e4723713e38ac97c4109431d883d174585922a2f"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in H1.",
                        "VernacExtend",
                        "64060b6af01da38bce432bcff79d23a639e8f84c"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ex_suppa",
            "line_nb": 10307,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B A B) as [A' []].",
                        "VernacExtend",
                        "fff9e5b9d85d2193d50b65cc19d2b3ad47bb947a"
                    ]
                },
                {
                    "command": [
                        "exists C, B, A'.",
                        "VernacExtend",
                        "6791865988a868e05f376d34b79e5395b85d05ff"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_distincts",
            "line_nb": 10317,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 A'.",
                        "VernacExtend",
                        "0ffef9276c4b593db9887d80dd7b468c3faad229"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H1; spliter.",
                        "VernacExtend",
                        "834f87d399cec51eec090ba3f60d4341804ae08a"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_right_comm",
            "line_nb": 10324,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 A'.",
                        "VernacExtend",
                        "0ffef9276c4b593db9887d80dd7b468c3faad229"
                    ]
                },
                {
                    "command": [
                        "exists A'.",
                        "VernacExtend",
                        "1babc641ccb33afa456d76507d6a9aceb19c654a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm, H1.",
                        "VernacExtend",
                        "c59a7ecfc37bfcee530458fb22d344c34604b71a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_left_comm",
            "line_nb": 10333,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 A'.",
                        "VernacExtend",
                        "0ffef9276c4b593db9887d80dd7b468c3faad229"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H1.",
                        "VernacExtend",
                        "2d57e33a154cd5abf672b4c4afa2e60e65f87a7d"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction C B C B) as [C' []].",
                        "VernacExtend",
                        "2dbebb88f87a1a60d7125c8e716a95ab02aa77f7"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with C B A'; trivial.",
                        "VernacExtend",
                        "4c065655dc908c77697aa26bd1faea1221f60c52"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm, l11_14; Between.",
                        "VernacExtend",
                        "65a0c2feee108a82572ab997e798166f752a522a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_comm",
            "line_nb": 10347,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply suppa_left_comm, suppa_right_comm, H.",
                        "VernacExtend",
                        "1e039c432dee4725c5af1e20df3e9eb08e5e5e0b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_sym",
            "line_nb": 10351,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 A'.",
                        "VernacExtend",
                        "0ffef9276c4b593db9887d80dd7b468c3faad229"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H1; spliter.",
                        "VernacExtend",
                        "834f87d399cec51eec090ba3f60d4341804ae08a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction D E D E) as [D' []].",
                        "VernacExtend",
                        "fb3a9cb11d9832c92f154655e19f86c2c3f4d98c"
                    ]
                },
                {
                    "command": [
                        "exists D'.",
                        "VernacExtend",
                        "df6eb3da32dce2b909580514bdf7e8956c2b026e"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply conga_right_comm, l11_13 with A' D; Between.",
                        "VernacExtend",
                        "56bba27fbf385d8a7076bba8d63acbdeb05302d0"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym, conga_right_comm, H1.",
                        "VernacExtend",
                        "022c7147940027c23e25abb03730baafc263796b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga2_suppa__suppa",
            "line_nb": 10364,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (SuppA A B C D' E' F').",
                        "VernacExtend",
                        "200a86f968bac3c925cb30de4888da8af802398b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold SuppA in *; spliter.",
                        "VernacExtend",
                        "c80a6e4fea0effd209c2837a48d6e74c6af0cef0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 A0.",
                        "VernacExtend",
                        "95abaf72ad1e1fdbc1b4980ddc3c3df06c9d4da4"
                    ]
                },
                {
                    "command": [
                        "exists A0.",
                        "VernacExtend",
                        "d1e78844214f389a204e3a2c9ee10f01755394b7"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with D E F; [apply conga_sym|]; assumption.",
                        "VernacExtend",
                        "0c270038ca6ba101ba853e12de0a69d901fcf680"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply suppa_sym.",
                        "VernacExtend",
                        "b87b8d594d7b747417909923d6742c97a8e8c967"
                    ]
                },
                {
                    "command": [
                        "apply suppa_sym in H2.",
                        "VernacExtend",
                        "4d4b1dc4acac1b45adc55239cc5377b9c9cfd968"
                    ]
                },
                {
                    "command": [
                        "unfold SuppA in H2; spliter.",
                        "VernacExtend",
                        "298396447986fc56c70b0c5b0d67dfce5b2c9fb6"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 D0.",
                        "VernacExtend",
                        "018b581b421193d39ab5582113065bdaac1bac7b"
                    ]
                },
                {
                    "command": [
                        "exists D0.",
                        "VernacExtend",
                        "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with A B C; [apply conga_sym|]; assumption.",
                        "VernacExtend",
                        "848c6cf444ca6ecd49a0d5305e8619625a53e6fc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa2__conga456",
            "line_nb": 10384,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 A'.",
                        "VernacExtend",
                        "b19ea0ae3f7c88386cb571c421190d71eb01a47f"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 A''.",
                        "VernacExtend",
                        "290524c27e67a53e35aab9ddf77de7c33e4c886c"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with C B A'; trivial.",
                        "VernacExtend",
                        "4c065655dc908c77697aa26bd1faea1221f60c52"
                    ]
                },
                {
                    "command": [
                        "apply conga_trans with C B A''; [|apply conga_sym, H4].",
                        "VernacExtend",
                        "8f5536419f1f7ac7973df40f7c8a733c97fcd743"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H3.",
                        "VernacExtend",
                        "5da341328fc3fdddba1adccf6aa48f15c181abfc"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H4.",
                        "VernacExtend",
                        "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply out2__conga.",
                        "VernacExtend",
                        "c1ea59b8b4879707463eec489350ba6d8db25284"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with A; Between.",
                        "VernacExtend",
                        "393a4938baa29bae6ecb8d9d0bc55b84c692a904"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa2__conga123",
            "line_nb": 10398,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (suppa2__conga456 D E F); apply suppa_sym; assumption.",
                        "VernacExtend",
                        "829cf7fb583f709ba77b1e5199aa256ab1265ce3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_out__suppa",
            "line_nb": 10402,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply l11_21_b; trivial.",
                        "VernacExtend",
                        "fb6c9859c865472773ee6f2741b1969e90d8f99f"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bet_suppa__out",
            "line_nb": 10410,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := H0).",
                        "VernacExtend",
                        "c69a123d85c581178d0b425115b3140d85d1b81f"
                    ]
                },
                {
                    "command": [
                        "apply suppa_distincts in Hd; spliter.",
                        "VernacExtend",
                        "704fd96b9eb18c22dd5cfaa8370463ff11753944"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a C B C).",
                        "VernacExtend",
                        "718f7206a2d0df66f25a8aceb6a0db1265ae0cb5"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "apply (suppa2__conga456 A B C); trivial.",
                        "VernacExtend",
                        "bd1a6f2c018732073216cb1bae2d91e7dd854702"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply conga_refl; auto.",
                        "VernacExtend",
                        "726097dd72623b98840271b6a4d826176b3d1e91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_suppa__bet",
            "line_nb": 10422,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B A B) as [B' []].",
                        "VernacExtend",
                        "9011ef652445c6e723daaa28811cadd3d491e655"
                    ]
                },
                {
                    "command": [
                        "apply (bet_conga__bet A B B'); trivial.",
                        "VernacExtend",
                        "48a5b0688e0edf5c4f8a63dba2dabe4c46f3933a"
                    ]
                },
                {
                    "command": [
                        "apply (suppa2__conga456 A B C); trivial.",
                        "VernacExtend",
                        "bd1a6f2c018732073216cb1bae2d91e7dd854702"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply suppa_sym, bet_out__suppa; auto.",
                        "VernacExtend",
                        "f9cbc83d0b93369446a8af8c6d8910558b2034a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per_suppa__per",
            "line_nb": 10430,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 A'.",
                        "VernacExtend",
                        "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
                    ]
                },
                {
                    "command": [
                        "apply (l11_17 C B A'); [|apply conga_sym, H2].",
                        "VernacExtend",
                        "d1d6252ff4bd2f8252b96b32067ba9f2665b5134"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H2; spliter.",
                        "VernacExtend",
                        "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
                    ]
                },
                {
                    "command": [
                        "apply per_col with A; Perp; Col.",
                        "VernacExtend",
                        "9c9af859092dee66cb72f43e185168f48ee6a2ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "per2__suppa",
            "line_nb": 10438,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_suppa A B C) as [D' [E' [F']]]; auto.",
                        "VernacExtend",
                        "43daadf100e8530ee4d6a25ab93dcc6762f5b8db"
                    ]
                },
                {
                    "command": [
                        "apply (conga2_suppa__suppa A B C D' E' F'); try apply conga_refl; auto.",
                        "VernacExtend",
                        "21509c395ad90fefff39a1f24993e0a4c167162f"
                    ]
                },
                {
                    "command": [
                        "assert (Hd := H5).",
                        "VernacExtend",
                        "0df3e18e47e8862afe0ff3fabf32c459b2ee4e81"
                    ]
                },
                {
                    "command": [
                        "apply suppa_distincts in Hd; spliter.",
                        "VernacExtend",
                        "704fd96b9eb18c22dd5cfaa8370463ff11753944"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto.",
                        "VernacExtend",
                        "f55656560cb5b4267b2671cabb23ed36e27b289e"
                    ]
                },
                {
                    "command": [
                        "apply (per_suppa__per A B C); assumption.",
                        "VernacExtend",
                        "f1302aa8d59ce8c32ccffffdc52baf3d9fb74ecd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa__per",
            "line_nb": 10447,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H0 A'.",
                        "VernacExtend",
                        "0ffef9276c4b593db9887d80dd7b468c3faad229"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, l11_18_2 with A'; trivial.",
                        "VernacExtend",
                        "a4fdf1ea0fcc2f21094f6f7a9161c312d09d71b9"
                    ]
                },
                {
                    "command": [
                        "apply conga_left_comm, H1.",
                        "VernacExtend",
                        "c59a7ecfc37bfcee530458fb22d344c34604b71a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_suppa__obtuse",
            "line_nb": 10454,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 A'.",
                        "VernacExtend",
                        "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
                    ]
                },
                {
                    "command": [
                        "apply (conga_obtuse__obtuse C B A'); [|apply conga_sym, H2].",
                        "VernacExtend",
                        "44ff07424a0fdaa3ad72e45d357cbfdb87889260"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H2; spliter.",
                        "VernacExtend",
                        "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
                    ]
                },
                {
                    "command": [
                        "apply obtuse_sym, (acute_bet__obtuse A); auto.",
                        "VernacExtend",
                        "3483bc6f9794f1e846a2e0f25f801fd5349f396c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "obtuse_suppa__acute",
            "line_nb": 10462,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 A'.",
                        "VernacExtend",
                        "da32462b2051bd6dfeaf21383701f2cdb5ac5c59"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute C B A'); [|apply conga_sym, H2].",
                        "VernacExtend",
                        "24dffacdd9cba7b1470f6fb00a8bf0a9c0e53bd1"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H2; spliter.",
                        "VernacExtend",
                        "136ff3c6464fc5e04859ad9c8892f1ba1f327393"
                    ]
                },
                {
                    "command": [
                        "apply acute_sym, (bet_obtuse__acute A); auto.",
                        "VernacExtend",
                        "54e84a6ef23b527bc968d3414fb747ab377ede24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lea_suppa2__lea",
            "line_nb": 10470,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 A0.",
                        "VernacExtend",
                        "12454b2d2269dd43ac16d85d7cebae9334a337bf"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 D0.",
                        "VernacExtend",
                        "6e8402b8d350f91f3b5d6be641ed001f8faeb387"
                    ]
                },
                {
                    "command": [
                        "apply (l11_30 F E D0 C B A0); [|apply conga_sym; assumption..].",
                        "VernacExtend",
                        "fd482d8dee42b05f9072ab60f703814142880561"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H4.",
                        "VernacExtend",
                        "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H5.",
                        "VernacExtend",
                        "b63f087782dc2c27491bf135c4ca03e3e273c464"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply lea_comm, l11_36 with D A; Between.",
                        "VernacExtend",
                        "f10871b9a444fe9e5e6ce4fd585061adf557df74"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lta_suppa2__lta",
            "line_nb": 10481,
            "steps": [
                {
                    "command": [
                        "unfold SuppA.",
                        "VernacExtend",
                        "f11b75e4aef748c4da10d48087a2392925a12e86"
                    ]
                },
                {
                    "command": [
                        "intros; spliter.",
                        "VernacExtend",
                        "1ac3850ad2e6d3896d3279bf17b506c8871e6477"
                    ]
                },
                {
                    "command": [
                        "ex_and H3 A0.",
                        "VernacExtend",
                        "12454b2d2269dd43ac16d85d7cebae9334a337bf"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 D0.",
                        "VernacExtend",
                        "6e8402b8d350f91f3b5d6be641ed001f8faeb387"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta F E D0 C B A0); [apply conga_sym; assumption..|].",
                        "VernacExtend",
                        "06fa52cb6d6453a2b4b5fa6f8ad174784ed7a308"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H4.",
                        "VernacExtend",
                        "6587850bd6e7ad5d1f03c3a7377bbf745c5f4c49"
                    ]
                },
                {
                    "command": [
                        "apply conga_distinct in H5.",
                        "VernacExtend",
                        "b63f087782dc2c27491bf135c4ca03e3e273c464"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply lta_comm, bet2_lta__lta with A D; Between.",
                        "VernacExtend",
                        "d243ac1ae5707f52f2c56b642895a4bf70e0ab26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "suppa_dec",
            "line_nb": 10492,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "right; intros []; auto.",
                        "VernacExtend",
                        "74ce6151f62d564cc1f912194f1129658a5e6c20"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points B C).",
                        "VernacExtend",
                        "5a5afdeceafc19c18a920ee30f3166fbe576500d"
                    ]
                },
                {
                    "command": [
                        "right; intro Habs; apply suppa_distincts in Habs; spliter; auto.",
                        "VernacExtend",
                        "5ba8c02b9caa16a099370f084387ecf14d30904b"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_suppa A B C) as [D' [E' [F']]]; auto.",
                        "VernacExtend",
                        "43daadf100e8530ee4d6a25ab93dcc6762f5b8db"
                    ]
                },
                {
                    "command": [
                        "induction (conga_dec D' E' F' D E F).",
                        "VernacExtend",
                        "963597eaa7566d377107f6ec91a4ba3d93f6a068"
                    ]
                },
                {
                    "command": [
                        "left; apply (conga2_suppa__suppa A B C D' E' F'); try apply conga_refl; auto.",
                        "VernacExtend",
                        "fb3feee224935f14880cb4726b1138711bcdfc2c"
                    ]
                },
                {
                    "command": [
                        "right; intro; apply H2, (suppa2__conga456 A B C); assumption.",
                        "VernacExtend",
                        "95173c56977a82712f37b155f1b678c044e4bea4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga__or_out_ts",
            "line_nb": 10711,
            "steps": [
                {
                    "command": [
                        "intros A B C C'.",
                        "VernacExtend",
                        "afb2f8551fb2c8b3788a1f733a5bc6a1e929d0eb"
                    ]
                },
                {
                    "command": [
                        "apply conga_cop__or_out_ts, all_coplanar.",
                        "VernacExtend",
                        "e0062720408cae78b85b2601397610ee37b0495f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga_out_reflectl__out",
            "line_nb": 10715,
            "steps": [
                {
                    "command": [
                        "intros A B C P T T' H.",
                        "VernacExtend",
                        "4b043a81e46ff318ed754aba97c8d7cba8cb76b7"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := all_coplanar A B C P).",
                        "VernacExtend",
                        "0c07ea99c339e994a78407e7151cb320a31d7132"
                    ]
                },
                {
                    "command": [
                        "apply conga_cop_out_reflectl__out; assumption.",
                        "VernacExtend",
                        "b05e33b33bfc67cb48d95672fa5e2aa8e743b83d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_conga_reflectl__col",
            "line_nb": 10720,
            "steps": [
                {
                    "command": [
                        "intros A B C P T T' H.",
                        "VernacExtend",
                        "4b043a81e46ff318ed754aba97c8d7cba8cb76b7"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := all_coplanar A B C P).",
                        "VernacExtend",
                        "0c07ea99c339e994a78407e7151cb320a31d7132"
                    ]
                },
                {
                    "command": [
                        "apply col_conga_cop_reflectl__col; assumption.",
                        "VernacExtend",
                        "e3e3dc8845939bb1287d826393da067995fe9b32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "conga2__col",
            "line_nb": 10725,
            "steps": [
                {
                    "command": [
                        "intros A B C P P' H H1 H2.",
                        "VernacExtend",
                        "30d3ec53767a09e38831ddc0657d8fe96443d5f1"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := all_coplanar A B P P').",
                        "VernacExtend",
                        "4204d71158aa0c84965cf984cd370f6f97a8df87"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := all_coplanar B C P P').",
                        "VernacExtend",
                        "f5a8ffe07033cea63f3793f891c2d6b22bcca6df"
                    ]
                },
                {
                    "command": [
                        "apply conga2_cop2__col with A C; assumption.",
                        "VernacExtend",
                        "ce4d716bcb8379dcf2327e9eb4f0bf144abc96d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inangle__ex_col_inangle",
            "line_nb": 10731,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cop_inangle__ex_col_inangle; [assumption..|].",
                        "VernacExtend",
                        "652c81e94a6718b07f4d3aee88c12d0384593ea7"
                    ]
                },
                {
                    "command": [
                        "apply all_coplanar.",
                        "VernacExtend",
                        "034a4dfc295ed5a6bcc0689a3b1acb8bc51da2a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acute_perp__one_side",
            "line_nb": 10736,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply acute_cop_perp__one_side; [assumption..|].",
                        "VernacExtend",
                        "6524f7d36ab4c4185bff838b953a58241fecec11"
                    ]
                },
                {
                    "command": [
                        "apply all_coplanar.",
                        "VernacExtend",
                        "034a4dfc295ed5a6bcc0689a3b1acb8bc51da2a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}