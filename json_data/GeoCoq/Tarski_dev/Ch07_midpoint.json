{
    "filename": "Tarski_dev/Ch07_midpoint.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch06_out_lines.",
            "VernacRequire",
            "d71f386f2cd0fbafa86c11d7a7f2a33f3a92c69e"
        ],
        [
            "Require Export GeoCoq.Tarski_dev.Tactics.ColR.",
            "VernacRequire",
            "dcf99a864dd74cf6ef49e6d2de660005b0bc370a"
        ],
        [
            "Ltac not_exist_hyp_comm A B := not_exist_hyp (A<>B);not_exist_hyp (B<>A).",
            "VernacExtend",
            "e803866bd63e1e91ebcd0dead3201d59b0ca4295"
        ],
        [
            "Ltac not_exist_hyp2 A B C D := first [not_exist_hyp_comm A B | not_exist_hyp_comm C D].",
            "VernacExtend",
            "b9b2be4aa20a002c18e1f3dcb89114efa1e70377"
        ],
        [
            "Ltac not_exist_hyp3 A B C D E F := first [not_exist_hyp_comm A B | not_exist_hyp_comm C D | not_exist_hyp_comm E F].",
            "VernacExtend",
            "8f7744aba7c6f6a2f080e05d8e2353aa46834b24"
        ],
        [
            "Ltac assert_diffs := repeat match goal with | H:(~Col ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp3 X1 X2 X1 X3 X2 X3; assert (h := not_col_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:(~Bet ?X1 ?X2 ?X3) |- _ => let h := fresh in not_exist_hyp2 X1 X2 X2 X3; assert (h := not_bet_distincts X1 X2 X3 H);decompose [and] h;clear h;clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq12__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq21__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?B <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq23__neq A B C H H2);clean_reap_hyps | H:Bet ?A ?B ?C, H2 : ?C <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm A C); assert (T:= bet_neq32__neq A B C H H2);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?B <> ?A |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= cong_diff_2 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?C <> ?D |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_3 A B C D H2 H);clean_reap_hyps | H:Cong ?A ?B ?C ?D, H2 : ?D <> ?C |-_ => let T:= fresh in (not_exist_hyp_comm A B); assert (T:= cong_diff_4 A B C D H2 H);clean_reap_hyps | H:Le ?A ?B ?C ?D, H2 : ?A <> ?B |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= le_diff A B C D H2 H);clean_reap_hyps | H:Lt ?A ?B ?C ?D |-_ => let T:= fresh in (not_exist_hyp_comm C D); assert (T:= lt_diff A B C D H);clean_reap_hyps | H:Out ?A ?B ?C |- _ => let T:= fresh in (not_exist_hyp2 A B A C); assert (T:= out_distinct A B C H); decompose [and] T;clear T;clean_reap_hyps end.",
            "VernacExtend",
            "74f75c99c3fbeca6dfc4a532886733e56e263273"
        ],
        [
            "Ltac ColR := let tpoint := constr:(Tpoint) in let col := constr:(Col) in treat_equalities; assert_cols; assert_diffs; try (solve [Col]); Col_refl tpoint col.",
            "VernacExtend",
            "d62923859746db039aa976a7dc7e9dae03a1931a"
        ],
        [
            "Section T7_1.",
            "VernacBeginSection",
            "36520ea33e084edbb0cc580005407bf875c0693a"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma midpoint_dec : forall I A B, Midpoint I A B \\/ ~ Midpoint I A B.",
            "VernacStartTheoremProof",
            "27c34a3958ee47389c2d204e4f1d8397d5ea7dcf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "elim (bet_dec A I B);intro; elim (cong_dec A I I B);intro; tauto.",
            "VernacExtend",
            "53dc777a7c71000d799f3e8590067339b503ae68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_midpoint_id : forall A B, Midpoint A A B -> A = B.",
            "VernacStartTheoremProof",
            "53a1b477e7d471f5d5d0a8f253263557b00e6282"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint in H.",
            "VernacExtend",
            "c36b2a6dac3a427ab99d151105242184ce83b07f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "treat_equalities;reflexivity.",
            "VernacExtend",
            "0cfaec79bf9653b13a0f8e9d5ea53b4e6ed3553a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_midpoint_id_2 : forall A B, Midpoint A B A -> A=B.",
            "VernacStartTheoremProof",
            "a013a49419e35da1c70e48aeb49b5bd5209182e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_identity in H0.",
            "VernacExtend",
            "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_2 : forall M A B, Midpoint M A B -> Midpoint M B A.",
            "VernacStartTheoremProof",
            "09eb147e214768f0327d96f755ad5e140ee6fa8a"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_3 : forall M A, Midpoint M A A -> M=A.",
            "VernacStartTheoremProof",
            "cb61cac4c1c6e015ef2b2a43d1ea44ea33aa6eb0"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros;spliter;repeat split;Between;Cong.",
            "VernacExtend",
            "ec097c101c9ebe25a197fe63774578605bee2299"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_3_2 : forall A, Midpoint A A A.",
            "VernacStartTheoremProof",
            "aeeb74a94f74aa6ce959919977f821013bf50183"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros;repeat split;Between;Cong.",
            "VernacExtend",
            "c2398669965eaf4e745db95ec26a415d3e083dae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma symmetric_point_construction : forall P A, exists P', Midpoint A P P'.",
            "VernacStartTheoremProof",
            "474757a079b93a082003aa4cc3d70e91dd8c7845"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong P A E P A.",
            "VernacExtend",
            "dfe9dbcc9861d1906ac621e24a808fcf75728659"
        ],
        [
            "exists E.",
            "VernacExtend",
            "c73d01b1c43419f5d15b43f4417f5bebb5434a17"
        ],
        [
            "split;Cong;Between.",
            "VernacExtend",
            "673057eda89cf0f0da6fc1413bb11d184811bcd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma symmetric_point_uniqueness : forall A P P1 P2, Midpoint P A P1 -> Midpoint P A P2 -> P1=P2.",
            "VernacStartTheoremProof",
            "56378eed44b9d2b674a95268f73eb95ea5c9cd2a"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "elim (eq_dec_points A P); intros.",
            "VernacExtend",
            "06458089152732ac7f1b761834e00d983c8a1b48"
        ],
        [
            "treat_equalities;auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "apply (construction_uniqueness A P A P);Cong.",
            "VernacExtend",
            "d4c44cb6f080d800351517172029d1ffe5386c04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_9 : forall P Q A X, Midpoint A P X -> Midpoint A Q X -> P=Q.",
            "VernacStartTheoremProof",
            "015022f9d51ec56fc5abb4b14b63b5e4d6764fa1"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (eq_dec_points A X).",
            "VernacExtend",
            "f0dfcb2e07469b66b3c4a70125bac07472563157"
        ],
        [
            "treat_equalities;reflexivity.",
            "VernacExtend",
            "0cfaec79bf9653b13a0f8e9d5ea53b4e6ed3553a"
        ],
        [
            "apply (construction_uniqueness X A X A);Cong;Between.",
            "VernacExtend",
            "48c763b476994e9e913dac1b495f646491e5427a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_9_bis : forall P Q A X, Midpoint A P X -> Midpoint A X Q -> P=Q.",
            "VernacStartTheoremProof",
            "9471c1eb7ed3a5aeafcd87a93033c1e144324737"
        ],
        [
            "intros; apply l7_9 with A X; unfold Midpoint in *; split; spliter; Cong; Between.",
            "VernacExtend",
            "f97092d7f4c57328f5e1f16115083d0ba9d5a085"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_13 : forall A P Q P' Q', Midpoint A P' P -> Midpoint A Q' Q -> Cong P Q P' Q'.",
            "VernacStartTheoremProof",
            "30f94a617415006995d1aafbfde9162eff318c9e"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction (eq_dec_points P A).",
            "VernacExtend",
            "50be2f8fa7b00849bb696c0b635a4c5ef3faa7ec"
        ],
        [
            "treat_equalities;Cong.",
            "VernacExtend",
            "3008ea797afa9551cbe2f0c6fa3d7ef0d856cdc4"
        ],
        [
            "prolong P' P X Q A.",
            "VernacExtend",
            "a8e8335da890d035b9fa2a2dae3a95dc5ad5c54f"
        ],
        [
            "prolong X P' X' Q A.",
            "VernacExtend",
            "9b34aae077028c63257a28a1b34f0f8f8c24c474"
        ],
        [
            "prolong Q' Q Y P A.",
            "VernacExtend",
            "b2fbb4661525e288b4aee301844dd743a59d3c95"
        ],
        [
            "prolong Y Q' Y' P A.",
            "VernacExtend",
            "c359da11d66bd9e3d548dfca9b2f078ae92d3e31"
        ],
        [
            "assert (Bet Y A Q') by eBetween.",
            "VernacExtend",
            "c3bed32a1c430ffd158d8de226f788bddb93cf32"
        ],
        [
            "assert (Bet P' A X) by eBetween.",
            "VernacExtend",
            "40a61a8fe537bd0acb75ded058da7f87401f3525"
        ],
        [
            "assert (Bet A P X) by eBetween.",
            "VernacExtend",
            "45756e7fbddc84d306a0bef4db46c84c8eb72bd7"
        ],
        [
            "assert(Bet Y Q A) by eBetween.",
            "VernacExtend",
            "5e93fc9f38779829ff236b671058ff66352df1b7"
        ],
        [
            "assert (Bet A Q' Y') by eBetween.",
            "VernacExtend",
            "8694508955831a3247561859c881bf6ce81eb138"
        ],
        [
            "assert (Bet X' P' A) by eBetween.",
            "VernacExtend",
            "bbbe506cd7af594bd4b54dc7dd4d8362d2357f4e"
        ],
        [
            "assert(Bet X A X') by eBetween.",
            "VernacExtend",
            "8fe146f298bdaf781e4b4d835759f4d1ea65db26"
        ],
        [
            "assert(Bet Y A Y') by eBetween.",
            "VernacExtend",
            "37426a331a5fd3c1659a547cf0c8873068dbb527"
        ],
        [
            "assert (Cong A X Y A) by (eapply l2_11;eCong).",
            "VernacExtend",
            "9a532b0e91eb131897bf1175e13ae99997b620b4"
        ],
        [
            "assert (Cong A Y' X' A).",
            "VernacExtend",
            "097ec4c86f90ac3f5e889dec7d08b6bc130f2536"
        ],
        [
            "apply l2_11 with Q' P'; Between.",
            "VernacExtend",
            "05b99253074a3f1c6aa0ec18293a2cd942d980d1"
        ],
        [
            "apply cong_transitivity with A Q; Cong.",
            "VernacExtend",
            "d7ccdbb995b19b56fb80330482ae1321c2aa4398"
        ],
        [
            "apply cong_transitivity with A P; Cong.",
            "VernacExtend",
            "74e0dae50e5029588aa3234d3bfa61fe18524d09"
        ],
        [
            "assert (Cong A Y A Y').",
            "VernacExtend",
            "4173d3692371e16456db614232f5cd66ba531fe2"
        ],
        [
            "apply (l2_11 A Q Y _ Q' Y'); Between; Cong.",
            "VernacExtend",
            "17eecfa0668eb7abaf584cd820300c27695094b3"
        ],
        [
            "apply cong_transitivity with A P; Cong.",
            "VernacExtend",
            "74e0dae50e5029588aa3234d3bfa61fe18524d09"
        ],
        [
            "assert (Cong X A Y' A) by (apply cong_transitivity with A Y; Cong).",
            "VernacExtend",
            "283e7dded3afaeae6972801bb9667f0023727962"
        ],
        [
            "assert (Cong A X' A Y) by (apply cong_transitivity with A Y'; Cong).",
            "VernacExtend",
            "148f931f781453631c310fb359763e4d12b05b42"
        ],
        [
            "assert (FSC X A X' Y' Y' A Y X).",
            "VernacExtend",
            "de5276b637910e4ea2da09ceb9513aa302f93972"
        ],
        [
            "unfold FSC;repeat split; Cong.",
            "VernacExtend",
            "a5c3058eadd2a9e06c7d91b2499d04a299d5e7db"
        ],
        [
            "apply bet_col;auto.",
            "VernacExtend",
            "bca2bb2beeef1094fd544d8db1bcc6d66e6c13f0"
        ],
        [
            "eapply (l2_11 X A X' Y' A Y);Between.",
            "VernacExtend",
            "bfb07d3505a4bae35dfad6e2024c080fb8c09997"
        ],
        [
            "assert (A <> X).",
            "VernacExtend",
            "f20baa2493b8cedf3316cb584589265841fa797d"
        ],
        [
            "eapply bet_neq12__neq.",
            "VernacExtend",
            "9016336bd9184f63fa1e97385a2ef27e37337ced"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Cong X' Y' Y X) by eauto using l4_16.",
            "VernacExtend",
            "62c74901533e2b91952031a6bc819f0878834e77"
        ],
        [
            "assert (Cong A X A X') by (apply cong_transitivity with A Y; Cong).",
            "VernacExtend",
            "bb4ac69d1cd0eb17e4b70d6586510b68698a616f"
        ],
        [
            "assert (IFSC Y Q A X Y' Q' A X') by (unfold IFSC, FSC in *;spliter;repeat split;Between; Cong).",
            "VernacExtend",
            "199c5104b57500aff2dfe554692e13fb85141b8c"
        ],
        [
            "assert (Cong Q X Q' X') by eauto using l4_2.",
            "VernacExtend",
            "0a6a63f2e787a5c05032d485b319e41fb1cb91cc"
        ],
        [
            "assert (IFSC X P A Q X' P' A Q') by (unfold IFSC;repeat split;Between;Cong).",
            "VernacExtend",
            "a050f845b5d4b530cfcc47c7a90ac2e5ea74a38c"
        ],
        [
            "eauto using l4_2.",
            "VernacExtend",
            "ca06fd69bc8c8ce7c61405162f6a9b2d969f13e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_15 : forall P Q R P' Q' R' A, Midpoint A P P' -> Midpoint A Q Q' -> Midpoint A R R' -> Bet P Q R -> Bet P' Q' R'.",
            "VernacStartTheoremProof",
            "f03615216a80aaca1ce57ddf5ac3c432bfd8035d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply l4_6.",
            "VernacExtend",
            "62770152ecd0f2c44f2bafff0e2374cdc14cbea6"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_16 : forall P Q R S P' Q' R' S' A, Midpoint A P P' -> Midpoint A Q Q' -> Midpoint A R R' -> Midpoint A S S' -> Cong P Q R S -> Cong P' Q' R' S'.",
            "VernacStartTheoremProof",
            "534ae909602a102d6ccc5cce407cee34bcb5e7ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong P Q P' Q').",
            "VernacExtend",
            "0e626c9203c01c1f6193b444885782d2a68c6bea"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert (Cong R S R' S').",
            "VernacExtend",
            "9a40e4e799ed966c8eb06de6f95eaf9707760ac8"
        ],
        [
            "eapply l7_13.",
            "VernacExtend",
            "eaad75af84ce3bd37445fa6a66076c6dda0b158f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply cong_transitivity with P Q; Cong.",
            "VernacExtend",
            "8ad2ad9544ce71b9f8a30d08bbcf4b2e95ae19d0"
        ],
        [
            "apply cong_transitivity with R S; Cong.",
            "VernacExtend",
            "18010825851b9f9f9707edc26fc264abf55760cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma symmetry_preserves_midpoint : forall A B C D E F Z, Midpoint Z A D -> Midpoint Z B E -> Midpoint Z C F -> Midpoint B A C -> Midpoint E D F.",
            "VernacStartTheoremProof",
            "f8ad9ca4a6ce3b6a31912d28e46fbc486d754aee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "unfold Midpoint in H2.",
            "VernacExtend",
            "63fd5243094f3b803f67a96ed5401ef20db7ee32"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l7_15;eauto.",
            "VernacExtend",
            "7083b53d71c16ef418bb93449e114a4dde854dff"
        ],
        [
            "eapply l7_16;eauto.",
            "VernacExtend",
            "7806ac31864b818099c1f964d55382f2cc387746"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T7_1.",
            "VernacEndSegment",
            "9b3788f5ad396c4ceb10397cb61e5e782a3d49f8"
        ],
        [
            "Hint Resolve l7_13 : cong.",
            "VernacHints",
            "d388a7afc99aa27550248945dd6d88efcdb1d760"
        ],
        [
            "Hint Resolve l7_2 l7_3_2 : midpoint.",
            "VernacHints",
            "d480aa1cb71fa8a58fb9a5c5d01b8df4b64803c9"
        ],
        [
            "Ltac Midpoint := auto with midpoint.",
            "VernacExtend",
            "13de0405fdbf5aa4759773bcd82bb746533d178c"
        ],
        [
            "Section T7_2.",
            "VernacBeginSection",
            "afa9da04e7a1e45cf4d82326f0d5f04712619e76"
        ],
        [
            "Context {Tn:Tarski_neutral_dimensionless}.",
            "VernacContext",
            "d071d04f0f53217838bf153979d6ed7a67fa6af9"
        ],
        [
            "Context {TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality Tn}.",
            "VernacContext",
            "d28e65e9757967c81056cdb1c48d716e95dcbebc"
        ],
        [
            "Lemma Mid_cases : forall A B C, Midpoint A B C \\/ Midpoint A C B -> Midpoint A B C.",
            "VernacStartTheoremProof",
            "9c7384aa7f0b5254d032f655291e0106d98582ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [or] H; Midpoint.",
            "VernacExtend",
            "b5b1b04ccc45cab6d92f4a1dcc27a92681dc2787"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Mid_perm : forall A B C, Midpoint A B C -> Midpoint A B C /\\ Midpoint A C B.",
            "VernacStartTheoremProof",
            "b7f534e2104a1d9fcc9b456692120e67c4cc39ac"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Between; Cong.",
            "VernacExtend",
            "15a9387370927b31481a4fd44beaf3d15836b154"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_17 : forall P P' A B, Midpoint A P P' -> Midpoint B P P' -> A=B.",
            "VernacStartTheoremProof",
            "11d5ddc33c396a6219a58a96b1fcdb6abce60ef8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Cong P B P' B).",
            "VernacExtend",
            "43172f4d2558f57ad338c21f433fe9ff8f241a91"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert (exists B', Midpoint A B B') by (apply symmetric_point_construction).",
            "VernacExtend",
            "4ef5a8dc7b369a39b785d131bb3df1e1f7506a3e"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "assert (Cong P' B P x) by eauto with midpoint cong.",
            "VernacExtend",
            "48aac1a152e0e8d7f338304a68cb1956bff5feb7"
        ],
        [
            "assert (Cong P B P x) by (apply cong_transitivity with P' B; Cong).",
            "VernacExtend",
            "b9ec22c1a0d3faebfa2a40dc1858f9dab0beccd5"
        ],
        [
            "assert (Cong P B P' x) by eauto with midpoint cong.",
            "VernacExtend",
            "41d5e842e879bdd2764a2a9a7c002f8edce96b65"
        ],
        [
            "assert (Cong P' B P' x) by (apply cong_transitivity with P x; Cong; apply cong_transitivity with P B; Cong).",
            "VernacExtend",
            "71c7f20cf3d473868b69e4afe56499a07e6063c0"
        ],
        [
            "assert (Bet P B P') by (unfold Midpoint in *;spliter;assumption).",
            "VernacExtend",
            "4314adb6aaaf6c4a1c8a382b9403f3f7ca9463e0"
        ],
        [
            "assert (B=x) by (apply (l4_19 P P' B x);Between).",
            "VernacExtend",
            "0ebb5f422526b7da82155f089be0a9322869402d"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "apply l7_3.",
            "VernacExtend",
            "e0ed8044d8d76b674bae6c3d6c16560c62b151be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_17_bis : forall P P' A B, Midpoint A P P' -> Midpoint B P' P -> A=B.",
            "VernacStartTheoremProof",
            "94b9924bb800a7dbed636af9d1b5743a8a1c1463"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l7_17 with P P'; Midpoint.",
            "VernacExtend",
            "cd78f80c7a781187ab8943c3c7957559a30201d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_20 : forall M A B, Col A M B -> Cong M A M B -> A=B \\/ Midpoint M A B.",
            "VernacStartTheoremProof",
            "d1ca504b1c76903a82dd0d6c4f51bef33df11d11"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Cong A B B B) by (apply (l4_3 A B M B B M);Between;Cong).",
            "VernacExtend",
            "8c180649d59b6dc0047920193a3281efa71e1459"
        ],
        [
            "treat_equalities;auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "assert (Cong B A A A) by (apply (l4_3 B A M A A M);Cong;Between).",
            "VernacExtend",
            "89b5714a4948158f021a8bc4a246d9bf1bc48db1"
        ],
        [
            "treat_equalities;auto.",
            "VernacExtend",
            "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_20_bis : forall M A B, A<>B -> Col A M B -> Cong M A M B -> Midpoint M A B.",
            "VernacStartTheoremProof",
            "4b876176fab66237a3fea7615b12d7b206b73676"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (l7_20 M A B H0 H1);intuition.",
            "VernacExtend",
            "a699d08a2c0fdcefbbf3d39f53fee8c0e712197f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_col_mid : forall A B C, A <> C -> Col A B C -> Cong A B B C -> Midpoint B A C.",
            "VernacStartTheoremProof",
            "b14ebcb234993000e6a75a91462baf57a1883352"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l7_20 in H0.",
            "VernacExtend",
            "0ceca6f3b7599fe4af28675da85fe4596beab72e"
        ],
        [
            "intuition subst.",
            "VernacExtend",
            "ccadf6961ec7900268e1cf542f4e33b3d5608f18"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_21 : forall A B C D P, ~ Col A B C -> B<>D -> Cong A B C D -> Cong B C D A -> Col A P C -> Col B P D -> Midpoint P A C /\\ Midpoint P B D.",
            "VernacStartTheoremProof",
            "cc9610d61d7b5003bb3b4ab83bcd0be82a0c9986"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (exists P', Cong_3 B D P D B P').",
            "VernacExtend",
            "596e9d08983f661a761a7173baa32e0af3cc5f8a"
        ],
        [
            "eapply l4_14.",
            "VernacExtend",
            "2e64bbe24e459931cc8d7fc2f79c92c3988d36d9"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert (Col D B x) by (apply l4_13 with B D P;Col).",
            "VernacExtend",
            "44cc133bba14c0abdecc343e7bb01bf339ef737a"
        ],
        [
            "assert (FSC B D P A D B x C).",
            "VernacExtend",
            "ad0badfc69c03ff0f6d1602c4b543bcdbab6c68e"
        ],
        [
            "unfold FSC.",
            "VernacExtend",
            "d005f9205539e89bf245b71bab47bc97d7daa39f"
        ],
        [
            "unfold Cong_3 in *.",
            "VernacExtend",
            "81846649e3ee6af32dc9d86caa3a4bf892f50899"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Cong; Col.",
            "VernacExtend",
            "4cf2599d9e5b9d1e5ab1378907f08d9875ca2b69"
        ],
        [
            "assert (FSC B D P C D B x A).",
            "VernacExtend",
            "c2885c4c1398e5809d172a282ea5fdba313b784a"
        ],
        [
            "unfold FSC.",
            "VernacExtend",
            "d005f9205539e89bf245b71bab47bc97d7daa39f"
        ],
        [
            "unfold Cong_3 in *.",
            "VernacExtend",
            "81846649e3ee6af32dc9d86caa3a4bf892f50899"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; Col; Cong.",
            "VernacExtend",
            "5002713d0c7266c62584bed984ddcf6d6c219419"
        ],
        [
            "assert (Cong P A x C) by (eauto using l4_16).",
            "VernacExtend",
            "886a33069c0fec587c7a298628854e4dd9fe0daf"
        ],
        [
            "assert (Cong P C x A) by (eauto using l4_16).",
            "VernacExtend",
            "86d03ff7c1378000bcf4316f0f654c89186e417e"
        ],
        [
            "assert (Cong_3 A P C C x A) by (unfold Cong_3;repeat split; Cong).",
            "VernacExtend",
            "1f475b48188a5dfd24c7154247737a7e7861def5"
        ],
        [
            "assert (Col C x A) by (eauto using l4_13).",
            "VernacExtend",
            "cc51dd2a9b60ed68fd6cdfada6b305396da1edf5"
        ],
        [
            "assert (P=x).",
            "VernacExtend",
            "759eaef4629ab80b663d310aa6186bffd977823c"
        ],
        [
            "unfold FSC in *.",
            "VernacExtend",
            "d09d5060f593848cb940d5ddaa188bd46c0d9914"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply (l6_21 A C B D); Col.",
            "VernacExtend",
            "2c7901f8b3fae3c52a623253265d120d2b9c0cd1"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "unfold Cong_3 in *;spliter.",
            "VernacExtend",
            "62adb5ac05639cc6a6cbf6f81c918bd7ece2f904"
        ],
        [
            "split;apply l7_20_bis;Col;Cong.",
            "VernacExtend",
            "077c5c9141c4d8cf1056d0100395ba7b6bd2d2e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_22_aux : forall A1 A2 B1 B2 C M1 M2, Bet A1 C A2 -> Bet B1 C B2 -> Cong C A1 C B1 -> Cong C A2 C B2 -> Midpoint M1 A1 B1 -> Midpoint M2 A2 B2 -> Le C A1 C A2 -> Bet M1 C M2.",
            "VernacStartTheoremProof",
            "8d682a2ea85d3e0d466695f57c6d510848991978"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_dec_points A2 C).",
            "VernacExtend",
            "fcf351be7683c7e8a3de18a18f796810a79c6bf4"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply le_zero in H5.",
            "VernacExtend",
            "325dbe0a301369a19405e27b663ba2f3e4908eb1"
        ],
        [
            "subst A2.",
            "VernacExtend",
            "66d509d5ebb2941d35c8d41559b8858a7821e948"
        ],
        [
            "apply cong_reverse_identity in H1.",
            "VernacExtend",
            "79f9d59ffec23fee386ce2ebe18d9d2c28d23330"
        ],
        [
            "subst B1.",
            "VernacExtend",
            "516706f29f936291cd75f4587ae5dd4b4cca4eb4"
        ],
        [
            "apply cong_reverse_identity in H2.",
            "VernacExtend",
            "1fbd37577d0525de361ce4b96ca7f55c2884ba7f"
        ],
        [
            "subst B2.",
            "VernacExtend",
            "5c0f92e01ff72e2aef7182ee21d0caa4abfb3ec9"
        ],
        [
            "apply l7_3 in H4.",
            "VernacExtend",
            "22eadbdaeb52e0a9fb5ae6e5c52ea502fa94ba1a"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "assert (exists A, Midpoint C A2 A).",
            "VernacExtend",
            "9604a718039f348f393517545ea07974c2e65ad8"
        ],
        [
            "apply symmetric_point_construction.",
            "VernacExtend",
            "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "assert (exists B, Midpoint C B2 B).",
            "VernacExtend",
            "d3c39d0f3691b68d5851d43835a0fc2d99015d18"
        ],
        [
            "apply symmetric_point_construction.",
            "VernacExtend",
            "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
        ],
        [
            "induction H8.",
            "VernacExtend",
            "f75c0ebaad012d498c67533d1044a3b37b773c12"
        ],
        [
            "assert (exists M, Midpoint C M2 M).",
            "VernacExtend",
            "7a0c66610135190c42b8ef9946b46a0e5a4a5562"
        ],
        [
            "apply symmetric_point_construction.",
            "VernacExtend",
            "0e736e1cb621ad02a9cdd97f5d4140f372fe8c7e"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "assert(Midpoint x1 x x0).",
            "VernacExtend",
            "3aa1e02b4c0fef0f89b6178805ae1b2fdf2eb9c0"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply l7_15.",
            "VernacExtend",
            "2a2083f4fb502cad0c6f5400d3b09cedf4ae5171"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l7_16.",
            "VernacExtend",
            "6eaff32315bcf11730d79451b7c237bd5472b01a"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Le C A1 C x).",
            "VernacExtend",
            "06a4b6f48bdaebd2f1cf253ede2424b75fa79a66"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet C A1 x).",
            "VernacExtend",
            "f8dd2b4e8cb72347d63c19472f7b0ebf17ebaa3f"
        ],
        [
            "induction (eq_dec_points A1 C).",
            "VernacExtend",
            "18d73c40b7c198ca1487bd3857c7e604e40cfa6e"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "eapply l6_13_1.",
            "VernacExtend",
            "35cc9a48e715f79b63b843076b85c8d786f00f02"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst x.",
            "VernacExtend",
            "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
        ],
        [
            "apply le_zero in H11.",
            "VernacExtend",
            "eec5c2f2b6f87c435ce9944b1d81b40d5635a3ad"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption; intro.",
            "VernacExtend",
            "0f138b7c765e870f4a13081d5e5291de746f3e54"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Le C B1 C x0).",
            "VernacExtend",
            "354e56814a321b82032e20a0ff2d6010c301ecf1"
        ],
        [
            "eapply l5_6.",
            "VernacExtend",
            "4f736f2e0b4bffbe674a8d7924c46d0a2ce35d41"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H16.",
            "VernacExtend",
            "c3830f315eb3969a45c3c330bda53baa880ca696"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "2:apply H15.",
            "VernacExtend",
            "281f23547589894246231487ac1ed3030b6f95d8"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Bet C B1 x0).",
            "VernacExtend",
            "fff8766eacea281e4e9588e2136006f7f64f1e54"
        ],
        [
            "induction (eq_dec_points B1 C).",
            "VernacExtend",
            "339e4911b37805f7d72f1ee0302177881a5928bb"
        ],
        [
            "subst B1.",
            "VernacExtend",
            "516706f29f936291cd75f4587ae5dd4b4cca4eb4"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply cong_reverse_identity in H1.",
            "VernacExtend",
            "79f9d59ffec23fee386ce2ebe18d9d2c28d23330"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "induction (eq_dec_points x0 C).",
            "VernacExtend",
            "0671f8928468bb07bf3dca41068139b2d807ef9e"
        ],
        [
            "subst x0.",
            "VernacExtend",
            "7f80304cc4342916667b94e1d535d0a72ca10dd6"
        ],
        [
            "apply le_zero in H13.",
            "VernacExtend",
            "c378ab4853d45a5fe1c1c452f7db75d280dfca7f"
        ],
        [
            "subst B1.",
            "VernacExtend",
            "516706f29f936291cd75f4587ae5dd4b4cca4eb4"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "induction (eq_dec_points B2 C).",
            "VernacExtend",
            "63339efab0f189e19c97b40e9fb1047d1d9d0811"
        ],
        [
            "subst B2.",
            "VernacExtend",
            "5c0f92e01ff72e2aef7182ee21d0caa4abfb3ec9"
        ],
        [
            "apply cong_symmetry in H2.",
            "VernacExtend",
            "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
        ],
        [
            "eapply cong_reverse_identity in H2.",
            "VernacExtend",
            "f403b83a0b8e29e4734360c2f1ae6b4f33971a79"
        ],
        [
            "subst A2.",
            "VernacExtend",
            "66d509d5ebb2941d35c8d41559b8858a7821e948"
        ],
        [
            "apply le_zero in H5.",
            "VernacExtend",
            "325dbe0a301369a19405e27b663ba2f3e4908eb1"
        ],
        [
            "subst A1.",
            "VernacExtend",
            "cb7e9fc0bbe5e3cc649f179aef17a762b99ea3cc"
        ],
        [
            "apply cong_reverse_identity in H1.",
            "VernacExtend",
            "79f9d59ffec23fee386ce2ebe18d9d2c28d23330"
        ],
        [
            "subst B1.",
            "VernacExtend",
            "516706f29f936291cd75f4587ae5dd4b4cca4eb4"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "eapply l6_13_1.",
            "VernacExtend",
            "35cc9a48e715f79b63b843076b85c8d786f00f02"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "2:apply between_symmetry.",
            "VernacExtend",
            "7663dacfa46fab493adbddaf03267feac59c249a"
        ],
        [
            "2:apply H0.",
            "VernacExtend",
            "539859fd72cef949665d709c1a8478cfcd29621e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "unfold Midpoint in H8.",
            "VernacExtend",
            "569725b56dab13fb5d90ef771528ef18f1e7892b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (exists Q, Bet x1 Q C /\\ Bet A1 Q B1).",
            "VernacExtend",
            "c3c20c95dfc1b4135e457284f9330421ec4a658a"
        ],
        [
            "eapply l3_17.",
            "VernacExtend",
            "5a9204bf12e810952957de6ac76efe20e1c29988"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H12.",
            "VernacExtend",
            "5a745b26a30edb1cd58baf290f56d389ba5cf959"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "unfold Midpoint in H10.",
            "VernacExtend",
            "3784d6af68eb15bde27bacdd48e0f292ac33e525"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H15 Q.",
            "VernacExtend",
            "afbc30826795bc34353d0712b2c3312b3a393adc"
        ],
        [
            "assert (IFSC x A1 C x1 x0 B1 C x1).",
            "VernacExtend",
            "e575191b237cb74ff9b74ce986f66e11b2b15bc1"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_right_commutativity.",
            "VernacExtend",
            "e44c95a2f4522c8adbb415103d5c418dd61a1d01"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_reflexivity.",
            "VernacExtend",
            "236fa27122827457037214e7d2415ccb75b4f751"
        ],
        [
            "assert (Cong A1 x1 B1 x1).",
            "VernacExtend",
            "d8c2e1dcb22c42d8a35a1306a86b1ddadfa6779c"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H17.",
            "VernacExtend",
            "5149175ad108a77a0cb03fa2454f8b83234fdf51"
        ],
        [
            "assert (Cong Q A1 Q B1).",
            "VernacExtend",
            "e7d24da0588d2107dec4658745909060731c0a92"
        ],
        [
            "induction(eq_dec_points C x1).",
            "VernacExtend",
            "a1c06531e52313bb444734192feca23e0c14a485"
        ],
        [
            "subst x1.",
            "VernacExtend",
            "2d7bc84791156fc4894f666cc4412061db4fb7af"
        ],
        [
            "apply between_identity in H15.",
            "VernacExtend",
            "53d64778642396df1906db3a501b237063d3e8d1"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Midpoint Q A1 B1).",
            "VernacExtend",
            "4dbee320d03046218284ce8a41f412ad64f7e0dc"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Q=M1).",
            "VernacExtend",
            "59b0bf099d663c593b763dc083aa533bfa1b9aa7"
        ],
        [
            "eapply l7_17.",
            "VernacExtend",
            "c7057dfe48651bbdd72b2f5e97664cc1776cf682"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "unfold Midpoint in H9.",
            "VernacExtend",
            "26448f0da5472e4b3aa44a6fc2ac073f642fe950"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_22 : forall A1 A2 B1 B2 C M1 M2, Bet A1 C A2 -> Bet B1 C B2 -> Cong C A1 C B1 -> Cong C A2 C B2 -> Midpoint M1 A1 B1 -> Midpoint M2 A2 B2 -> Bet M1 C M2.",
            "VernacStartTheoremProof",
            "a00ef55d215fadb6f016ed078a1473b24fbadfeb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Le C A1 C A2 \\/ Le C A2 C A1).",
            "VernacExtend",
            "2daf8eb98b37506801592cd6a94a36cc56d89706"
        ],
        [
            "eapply le_cases.",
            "VernacExtend",
            "97f452554850955682efe2021fde2db07bca7ae8"
        ],
        [
            "induction H5.",
            "VernacExtend",
            "95b234133c893feab1fa02ba35d711b8dc2279bb"
        ],
        [
            "eapply l7_22_aux.",
            "VernacExtend",
            "c5ac76beb6068d751993b56f6d760440f89aa2fd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply l7_22_aux.",
            "VernacExtend",
            "c5ac76beb6068d751993b56f6d760440f89aa2fd"
        ],
        [
            "7:apply H5.",
            "VernacExtend",
            "e987fd3223bb8fc122833b520908ee60c6796820"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "5:apply H3.",
            "VernacExtend",
            "421414d696f47255553ab5e19ab16f25d963b2d4"
        ],
        [
            "4:apply H4.",
            "VernacExtend",
            "8e0c992cbf8a7744c3a7afec1a0c56ffe133bfbe"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet_col1 : forall A B C D, Bet A B D -> Bet A C D -> Col A B C.",
            "VernacStartTheoremProof",
            "1882699e0bc0a42aa8b5edafb97aa9b803f39066"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Bet A B C \\/ Bet A C B).",
            "VernacExtend",
            "2043d7ad4aa8b38f3c8a857f16b1dc88d577c52c"
        ],
        [
            "eapply l5_3.",
            "VernacExtend",
            "6e4d952100996ece911a798103627c0e66be9c4a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l7_25 : forall A B C, Cong C A C B -> exists X, Midpoint X A B.",
            "VernacStartTheoremProof",
            "bf37094c973737921a850c40025d56a392a5e6fc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(col_dec A B C).",
            "VernacExtend",
            "a308b0a7aa87a8d722d63307a143a32131516309"
        ],
        [
            "assert(A = B \\/ Midpoint C A B).",
            "VernacExtend",
            "5359c9980cd407bfa34ec8b8668fa431d0b32baa"
        ],
        [
            "apply l7_20.",
            "VernacExtend",
            "3b73585582868bb9b4c2dad1562d5367cd9e19b1"
        ],
        [
            "unfold Col in *.",
            "VernacExtend",
            "b8dcb059e766a010119f4520b6c91219bda87c65"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "apply l7_3_2.",
            "VernacExtend",
            "5641bc5af04a7d045c3262eb7834ebac786414e2"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (exists P, Bet C A P /\\ A<>P).",
            "VernacExtend",
            "7d9c38437c59ef4ac93a05d03ce9600e4e155424"
        ],
        [
            "apply point_construction_different.",
            "VernacExtend",
            "de967b1eea8e153d0cc2188f5304bd3338d458d8"
        ],
        [
            "ex_and H1 P.",
            "VernacExtend",
            "2491f1de767c76e71d90a75e1f7989ca267540e3"
        ],
        [
            "prolong C B Q A P.",
            "VernacExtend",
            "a56fe214e44a02ef7fec57d718717fee98aac474"
        ],
        [
            "assert (exists R, Bet A R Q /\\ Bet B R P).",
            "VernacExtend",
            "0f804bcd5f7d5160d8af3de15e072d3f700c212e"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H5 R.",
            "VernacExtend",
            "2fe0e57c7fd24e462f4e549ff0d573a1ff4fb63c"
        ],
        [
            "assert (exists X, Bet A X B /\\ Bet R X C).",
            "VernacExtend",
            "6aa989a977408a88efe129716088b1cf041dbdba"
        ],
        [
            "eapply inner_pasch.",
            "VernacExtend",
            "2491468edcc4b7a4623bbe793e22c87079925618"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H7 X.",
            "VernacExtend",
            "206dfdda24059546be9ddea54a1071bc6485bd1a"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_left_commutativity.",
            "VernacExtend",
            "929cbef25c9234253c2c6321d3d485d09f8d66f6"
        ],
        [
            "cut(Cong R A R B).",
            "VernacExtend",
            "30499968e37fe755f6198f9fd25514eeb343940d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points R C).",
            "VernacExtend",
            "a9f1988d3d250a8c098b7ddc9bb36b65a42efaab"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "assert (C = X).",
            "VernacExtend",
            "d6e602ee952f5d67a8333c99bf942ded85516fb1"
        ],
        [
            "apply between_identity.",
            "VernacExtend",
            "be5bd53a9ca348add08532749a790ae2927c0f7e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l4_17.",
            "VernacExtend",
            "2705cf27be4831a7b49105d1a09eadc1aa97c9b0"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (OFSC C A P B C B Q A).",
            "VernacExtend",
            "8bd5c092d031d74129e3161b89e64933b418cbc2"
        ],
        [
            "unfold OFSC.",
            "VernacExtend",
            "492752124a3e0e575422433695b3cbf9807f06bc"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "assert (Cong P B Q A).",
            "VernacExtend",
            "06e1daf72b4cb5dd9679871c4b76778621ab4365"
        ],
        [
            "eapply five_segment_with_def.",
            "VernacExtend",
            "ae363f51f3370e7c192354099ac43ac5f16e52c8"
        ],
        [
            "eapply H9.",
            "VernacExtend",
            "525e7af5c06d53e0a211a0e1a7801c66150a0f0c"
        ],
        [
            "unfold Col in H0.",
            "VernacExtend",
            "05e20572842b5f6fa671fda6d87d6784bb278582"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "assert (exists R', Bet A R' Q /\\ Cong_3 B R P A R' Q).",
            "VernacExtend",
            "6a36f14403ff64904876e271f91986228a250cfe"
        ],
        [
            "eapply l4_5.",
            "VernacExtend",
            "196fce7d79d663a9d2d592b184f440682c9cfb90"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H11 R'.",
            "VernacExtend",
            "bdd69091f9b6ea05eb316aff1d0f9007f2c666f2"
        ],
        [
            "assert (IFSC B R P A A R' Q B).",
            "VernacExtend",
            "77d6344e4cc29524a2b3d1363dfeda42b6e2cd13"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Cong_3 in H12.",
            "VernacExtend",
            "8da6a28920b2c74baf5645a267f8a41373612d21"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (IFSC B R P Q A R' Q P).",
            "VernacExtend",
            "0f15dc448c5f7aeb09be38329c98f16af32e612f"
        ],
        [
            "unfold IFSC.",
            "VernacExtend",
            "60753f7f761ae39d00e6454af135b7cb414ef7a5"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Cong_3 in H12.",
            "VernacExtend",
            "8da6a28920b2c74baf5645a267f8a41373612d21"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "assert (Cong R A R' B).",
            "VernacExtend",
            "687a0f77ff00c152b5ad8838782e87fa10616db1"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H13.",
            "VernacExtend",
            "9696b87ee384fc17e17e6c753b792801086b845d"
        ],
        [
            "assert (Cong R Q R' P).",
            "VernacExtend",
            "52c9515ceb4d3ec3d9c5a12bc2492493ad976ab0"
        ],
        [
            "eapply l4_2.",
            "VernacExtend",
            "73b1d36af97a4f210a8d10c6fb013c3ec8ad6cd2"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "assert (Cong_3 A R Q B R' P).",
            "VernacExtend",
            "0b170df660752d3ffe0f5bd736228870dad21a55"
        ],
        [
            "unfold Cong_3.",
            "VernacExtend",
            "f5f1db9d08b9a2715bf9f408af8cf93a751994f8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (Col B R' P).",
            "VernacExtend",
            "aff70d6f64d37b857572475c69829ca635dd876d"
        ],
        [
            "eapply l4_13.",
            "VernacExtend",
            "695b06d1653089f0bd9b393f19c71c964fc57533"
        ],
        [
            "2:apply H17.",
            "VernacExtend",
            "a530cf6f258798a8ceb4107c3c89a1d53d07741d"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut(R=R').",
            "VernacExtend",
            "50c77ba0f1e7f3b89e4ab80a0635a544c95d5abf"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (B <> P).",
            "VernacExtend",
            "071de7574839baf9590f111c5e6834c84589113e"
        ],
        [
            "unfold IFSC, OFSC, Cong_3 in *.",
            "VernacExtend",
            "f5dd888482344f2222320a4cdd6eeaaaec30c979"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply between_identity in H14.",
            "VernacExtend",
            "dd40eb6ccf09ca19ddea163c0fb0f12e6ce4aa92"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "apply cong_reverse_identity in H12.",
            "VernacExtend",
            "ff7b3ddd4f14b133d0531c369bc508d648f21bf0"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "apply cong_reverse_identity in H32.",
            "VernacExtend",
            "1d7b2390ef3ed1b0757a4096a94c346f9e707e40"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply between_identity in H5.",
            "VernacExtend",
            "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (A <> Q).",
            "VernacExtend",
            "d7bc2b8a7c98968dfaebb987c51a0a4bf2348967"
        ],
        [
            "unfold IFSC, OFSC, Cong_3 in *.",
            "VernacExtend",
            "f5dd888482344f2222320a4cdd6eeaaaec30c979"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_reverse_identity in H20.",
            "VernacExtend",
            "42dcd9f92c604a8eee6661ff6d30a995311b7061"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply H19.",
            "VernacExtend",
            "844a617dcb898e89e0b6b4e5100f8edce39e2d13"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert(B <> Q).",
            "VernacExtend",
            "f2d0296ec739e4ffa59c72cec7847db94d0d0d41"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "apply cong_symmetry in H4.",
            "VernacExtend",
            "407c5032376f0943449d5c071d34954b55b363cd"
        ],
        [
            "apply cong_identity in H4.",
            "VernacExtend",
            "19f99238f21195f2ac23b5943e4c5a9cb147daaa"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (B <> R).",
            "VernacExtend",
            "d080aae81f744e330a70a14046d64a173dd34205"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Cong_3, IFSC, OFSC in *.",
            "VernacExtend",
            "3323df7c4ceb8f0cc33a1d2d6ccbd0f5388ebcd6"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst R.",
            "VernacExtend",
            "1bf9ae22b4f8fd877091cb0a1538b2b75fe2c221"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "assert (Col B A C).",
            "VernacExtend",
            "3ecd681bcb9400ef96c73db1a4d5de37a6591cd3"
        ],
        [
            "apply col_transitivity_1 with X; Col.",
            "VernacExtend",
            "72361623c2164e962dce85fb6fce170741b043db"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply cong_symmetry in H12.",
            "VernacExtend",
            "b3d192819f9b3ba2b48386d6f091462a6931ab8c"
        ],
        [
            "apply cong_identity in H12.",
            "VernacExtend",
            "f0a1ea8a2b56c6dac33ed921b0bf50396bea19ef"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "clean_duplicated_hyps.",
            "VernacExtend",
            "a57d89098f9c8297e7d23a96a3d1bd41c0672502"
        ],
        [
            "assert (Bet B A C \\/ Bet B C A).",
            "VernacExtend",
            "19f6a6cb08980b7dd8b70a97af908596e054804d"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "2:apply between_symmetry.",
            "VernacExtend",
            "7663dacfa46fab493adbddaf03267feac59c249a"
        ],
        [
            "2:apply H5.",
            "VernacExtend",
            "42fd69307b59659a584caffc20da7549c0e12154"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H9.",
            "VernacExtend",
            "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply (l6_21 A Q B P R R' ).",
            "VernacExtend",
            "d79ea1939ad4c2e45db73c9f87d5ff6380b98719"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Col in H23.",
            "VernacExtend",
            "445e1e2cebd06d97a56eac8fb8de7aa6335dc0b4"
        ],
        [
            "induction H23.",
            "VernacExtend",
            "55be330158135fc79c0c124dd41fa354b08ab3f1"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply outer_transitivity_between2.",
            "VernacExtend",
            "c0cb5f967ed0b308bbfebb5eba00251d4d20cba5"
        ],
        [
            "apply H23.",
            "VernacExtend",
            "d34df99b2b5b447f79550e9588c123c430c9557d"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "rewrite H24.",
            "VernacExtend",
            "a059b35243bc579ebe53ce4e82cd90de2e51e749"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H23.",
            "VernacExtend",
            "55be330158135fc79c0c124dd41fa354b08ab3f1"
        ],
        [
            "assert(Bet B A C \\/ Bet B C A).",
            "VernacExtend",
            "19f6a6cb08980b7dd8b70a97af908596e054804d"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "2:apply H23.",
            "VernacExtend",
            "fcebc5e71db3d5c69cef4ceea82c9bd114d2fee2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H21.",
            "VernacExtend",
            "36b37af04ba5a6c29b8e8ce4f4b7717028c02ecc"
        ],
        [
            "rewrite H24.",
            "VernacExtend",
            "a059b35243bc579ebe53ce4e82cd90de2e51e749"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "induction H24.",
            "VernacExtend",
            "4b53c0e981df91ae7f029ab819891ce11adbc255"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H23.",
            "VernacExtend",
            "d34df99b2b5b447f79550e9588c123c430c9557d"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "unfold Col in H18.",
            "VernacExtend",
            "c763ba49d903df6a5fd81151cf0e6fa872d90cfb"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H18.",
            "VernacExtend",
            "7bbf355687300a34f66e498f1b2f8404b15f47f9"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_distinct_1 : forall I A B, A<>B -> Midpoint I A B -> I<>A /\\ I<>B.",
            "VernacStartTheoremProof",
            "d748b05fcd0e01a3fe20726d72b9e53ffd784e7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "decompose [and] H0.",
            "VernacExtend",
            "1aa36d00d381c76b80e6e3615ccfd96c3bb86b5f"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intro;subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "decompose [and] H0.",
            "VernacExtend",
            "1aa36d00d381c76b80e6e3615ccfd96c3bb86b5f"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_distinct_2 : forall I A B, I<>A -> Midpoint I A B -> A<>B /\\ I<>B.",
            "VernacStartTheoremProof",
            "b072bc7f14639bb6aa9ce1affaec4c60310569e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Midpoint in *;spliter.",
            "VernacExtend",
            "94cfb4754c2f0312d41786041551ef933e840506"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_distinct_1 in H0.",
            "VernacExtend",
            "8792f87d605d76529058e7ddc62f365f484c1174"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_distinct_3 : forall I A B, I<>B -> Midpoint I A B -> A<>B /\\ I<>A.",
            "VernacStartTheoremProof",
            "89fa7e281c8cada209888952a237db8432a3aec5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Midpoint in *;spliter.",
            "VernacExtend",
            "94cfb4754c2f0312d41786041551ef933e840506"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_distinct_1 in H0.",
            "VernacExtend",
            "8792f87d605d76529058e7ddc62f365f484c1174"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_def : forall A B C, Bet A B C -> Cong A B B C -> Midpoint B A C.",
            "VernacStartTheoremProof",
            "d318974e755eece98ee0f65e90e9cf900fd09e9e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split;assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_bet : forall A B C, Midpoint B A C -> Bet A B C.",
            "VernacStartTheoremProof",
            "94e2324f18c63feef8a636f83dd08b1df9b3ba94"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_col : forall A M B, Midpoint M A B -> Col M A B.",
            "VernacStartTheoremProof",
            "ea4840ee60f83ed7391f4ca05d133bb5a283ff38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "right;right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "apply midpoint_bet.",
            "VernacExtend",
            "a349dc09e4c6302d6f25689cdf50363339f6914f"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_cong : forall A B C, Midpoint B A C -> Cong A B B C.",
            "VernacStartTheoremProof",
            "6f27b25df4e2a3446de605f9da71cff07517ed49"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_not_midpoint : forall I A B, A<>B -> Midpoint I A B -> ~ Midpoint B A I.",
            "VernacStartTheoremProof",
            "6a91b574e44f8f9a8b04f1c68aeef3ae69903665"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (I<>B).",
            "VernacExtend",
            "8e5c335109fe602968e8e8dac811c3d25edc875e"
        ],
        [
            "apply midpoint_distinct_1 in H0.",
            "VernacExtend",
            "8792f87d605d76529058e7ddc62f365f484c1174"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply midpoint_bet in H0.",
            "VernacExtend",
            "8f1e5f1749e13c761052013dc728998902b8a467"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply midpoint_bet in H2.",
            "VernacExtend",
            "726a6bc59fe72909cf96c570ab8f45b14c24dbf9"
        ],
        [
            "assert (I=B).",
            "VernacExtend",
            "e09d2db591f13a9b583651aa03f92eada25cb744"
        ],
        [
            "apply between_symmetry in H0.",
            "VernacExtend",
            "a0e7a4f76aeb15a77991bb75b7ee9e2f630dc179"
        ],
        [
            "apply between_symmetry in H2.",
            "VernacExtend",
            "82e5e2fbe276a306de228d8330d10477bfcaa001"
        ],
        [
            "eapply between_equality.",
            "VernacExtend",
            "f6eab7092a0cbfa35ed1e7c12decb1268c29ef6e"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swap_diff : forall (A B : Tpoint), A<>B -> B<>A.",
            "VernacStartTheoremProof",
            "29515e75b579114a845dcfd4466178472c4decec"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cong_half_1 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Cong A B A' B' -> Cong A M A' M'.",
            "VernacStartTheoremProof",
            "cdc7e9cf17dcb1f52d6d86a20f10c0aa676130c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(exists M'', Bet A' M'' B' /\\ Cong_3 A M B A' M'' B').",
            "VernacExtend",
            "b21c7ba50303f13fb6cea8ee5e4a60d04ebb5a61"
        ],
        [
            "eapply l4_5.",
            "VernacExtend",
            "196fce7d79d663a9d2d592b184f440682c9cfb90"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "ex_and H4 M''.",
            "VernacExtend",
            "6755e66c0e4958e227c9e613350be073bef8de4a"
        ],
        [
            "assert (Midpoint M'' A' B').",
            "VernacExtend",
            "72fb2191cdcb01bb3c229f432b15054c1105b616"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Cong_3 in H5.",
            "VernacExtend",
            "566e4f6a6dc2f2978ee64b990c70718ceab1c39f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(M'=M'').",
            "VernacExtend",
            "d26868300f1b2823d7dedc2ff77a5115274e4b02"
        ],
        [
            "eapply l7_17; unfold Midpoint; split.",
            "VernacExtend",
            "c96be1a797825b3369884e48273a5382d5bf3e80"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "unfold Midpoint in H6.",
            "VernacExtend",
            "19ae208b0699306165f85453009fe751d462e13d"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst M''.",
            "VernacExtend",
            "b8a4c3530303a16bd5beffc99b20b5a8efc4f7d8"
        ],
        [
            "unfold Cong_3 in H5.",
            "VernacExtend",
            "566e4f6a6dc2f2978ee64b990c70718ceab1c39f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_cong_half_2 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Cong A B A' B' -> Cong B M B' M'.",
            "VernacStartTheoremProof",
            "b9bdaab6870532c3d991ad52af095ce2c0d00307"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cong_cong_half_1 with A A'.",
            "VernacExtend",
            "6f05f70f07a197cc7111ed100999f52a65765c27"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Midpoint.",
            "VernacExtend",
            "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_mid2__cong : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Cong A M A' M' -> Cong A B A' B'.",
            "VernacStartTheoremProof",
            "073331c382a51c50618d991892ca34411686431f"
        ],
        [
            "intros A M B A' M' B' HM HM' HCong.",
            "VernacExtend",
            "9486fc07aed08e6c6569b649ee928303c7a489c8"
        ],
        [
            "destruct HM.",
            "VernacExtend",
            "f10d6721177b30d370a912f82697bc054259c496"
        ],
        [
            "destruct HM'.",
            "VernacExtend",
            "7d7025223a42ec3fab690a93aab330f1e232135d"
        ],
        [
            "apply (l2_11 _ M _ _ M'); auto.",
            "VernacExtend",
            "952274897c0f954e2b83b9f812a8a8b268fd7177"
        ],
        [
            "apply (cong_transitivity _ _ A' M'); auto.",
            "VernacExtend",
            "0523a5a65485744b57c5480e04de67c09819d29f"
        ],
        [
            "apply (cong_transitivity _ _ A M); Cong.",
            "VernacExtend",
            "ebc11795431639fbc7957ab7fd1793886797ca4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid__lt : forall A M B, A <> B -> Midpoint M A B -> Lt A M A B.",
            "VernacStartTheoremProof",
            "65d3b064d2c54d19afe23a088a90262103394628"
        ],
        [
            "intros A M B HAB HM.",
            "VernacExtend",
            "28a21a26f1aeff44b64f25fe972656f41b8c8b4d"
        ],
        [
            "destruct (midpoint_distinct_1 M A B HAB HM) as [HMA HMB].",
            "VernacExtend",
            "d6b05143240b9c0ef5f9ebe4f95a16fc314d5079"
        ],
        [
            "destruct HM.",
            "VernacExtend",
            "f10d6721177b30d370a912f82697bc054259c496"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists M; Cong.",
            "VernacExtend",
            "70c03ed489767941e5b390c1f27535aa3c273ba3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HMB, between_cong with A; auto.",
            "VernacExtend",
            "3e5e29837df192a00ebe1e279d8c37b2524aad56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_mid2__le13 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Le A M A' M' -> Le A B A' B'.",
            "VernacStartTheoremProof",
            "062a54a14127dab1065871a7eda1d88f30cd6c39"
        ],
        [
            "intros A M B A' M' B' HM HM' Hle.",
            "VernacExtend",
            "69db32d4a1db6582910c54d1dbcf978cd25937cc"
        ],
        [
            "destruct HM.",
            "VernacExtend",
            "f10d6721177b30d370a912f82697bc054259c496"
        ],
        [
            "destruct HM'.",
            "VernacExtend",
            "7d7025223a42ec3fab690a93aab330f1e232135d"
        ],
        [
            "apply (bet2_le2__le1346 _ M _ _ M'); auto.",
            "VernacExtend",
            "f00c3d8461f7113953ab490f1c20f8b332ca4af1"
        ],
        [
            "apply (l5_6 A M A' M'); auto.",
            "VernacExtend",
            "bbb5591d3d27d6f96d7660b479c1845610e3f814"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_mid2__le12 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Le A B A' B' -> Le A M A' M'.",
            "VernacStartTheoremProof",
            "bad899221d7ffebee4bbb54aa33ba1375455308f"
        ],
        [
            "intros A M B A' M' B' HM HM' Hle.",
            "VernacExtend",
            "69db32d4a1db6582910c54d1dbcf978cd25937cc"
        ],
        [
            "elim(le_cases A M A' M'); auto.",
            "VernacExtend",
            "ce9ca6aafe4f99fa8792e859b62c0e75a72df0ab"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(Le A' B' A B) by (apply (le_mid2__le13 _ M' _ _ M); auto).",
            "VernacExtend",
            "311094b82ff18aa2c1c34d81885f07fd5cfd6001"
        ],
        [
            "apply cong__le.",
            "VernacExtend",
            "511026a3058ae165352f779a3da72228df9e8798"
        ],
        [
            "apply (cong_cong_half_1 _ _ B _ _ B'); auto.",
            "VernacExtend",
            "6c3ced9cdfec986b1ab738abe52fe47df09bd1ff"
        ],
        [
            "apply le_anti_symmetry; auto.",
            "VernacExtend",
            "fdde1aa33953b3956e47c148e865d4bc4b7fb673"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_mid2__lt13 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Lt A M A' M' -> Lt A B A' B'.",
            "VernacStartTheoremProof",
            "80747fd917a062f71115539001b9b087793475e4"
        ],
        [
            "intros A M B A' M' B' HM HM' [HLe HNcong].",
            "VernacExtend",
            "91e9dad4ade98d1c29c1886798551ebf29b1ce99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply le_mid2__le13 with M M'; trivial.",
            "VernacExtend",
            "60ce30800d4f00e9414116d6ae77e49528619da0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNcong, cong_cong_half_1 with B B'; trivial.",
            "VernacExtend",
            "3437e9c7c3943da2e580bedafdf4b8d6b0edaefa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_mid2__lt12 : forall A M B A' M' B', Midpoint M A B -> Midpoint M' A' B' -> Lt A B A' B' -> Lt A M A' M'.",
            "VernacStartTheoremProof",
            "0624c0e6b6a4da63341b968bdc5ca0654293aa8e"
        ],
        [
            "intros A M B A' M' B' HM HM' [HLe HNcong].",
            "VernacExtend",
            "91e9dad4ade98d1c29c1886798551ebf29b1ce99"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply le_mid2__le12 with B B'; trivial.",
            "VernacExtend",
            "c35cf114459e76380bc2b1b23cf62b12cdbd35c2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNcong, cong_mid2__cong with M M'; trivial.",
            "VernacExtend",
            "0d6a93c22573ac5bca66a2ac823f4380fff611c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma midpoint_preserves_out : forall A B C A' B' C' M, Out A B C -> Midpoint M A A' -> Midpoint M B B' -> Midpoint M C C' -> Out A' B' C'.",
            "VernacStartTheoremProof",
            "671d6474e5c2d9fa512ac234d4862779d3386ff6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Out in H.",
            "VernacExtend",
            "2a6e95e33b87a9d203b1ce4beb1c89cfa1d3bd35"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst B'.",
            "VernacExtend",
            "8cde9e92b7e45a08022881a785185790cfb3adef"
        ],
        [
            "assert (A = B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst C'.",
            "VernacExtend",
            "641f43beaceb9cbde65fa2cdce099829a2d37dd2"
        ],
        [
            "assert (A = C).",
            "VernacExtend",
            "69410b0918a7eb7f11f148e0f8bcaee1841cf29a"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply (l7_15 A B C A' B' C' M); assumption.",
            "VernacExtend",
            "6a44b2bd7ba6f49990b8b117954fb93a5747ab10"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply (l7_15 A C B A' C' B' M); assumption.",
            "VernacExtend",
            "0f138fa5dd7bd2418ecf233c704b82c5269b9cc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong_bet : forall A B C D, Col A B D -> Cong A B C D -> Bet A C B -> Bet C A D \\/ Bet C B D.",
            "VernacStartTheoremProof",
            "dd51de13eb642d103996afe3b5ba8f5612493ac5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong B A D1 B C.",
            "VernacExtend",
            "193a636bda50a02047a4fb48d92ab624745f9ee6"
        ],
        [
            "prolong A B D2 A C.",
            "VernacExtend",
            "7a5e0506cf14b5a530b30f8b50cb00760062d8d1"
        ],
        [
            "assert(Cong A B C D1).",
            "VernacExtend",
            "7c3c3a0aab80df9cd5900be82c46ee84400e1cda"
        ],
        [
            "eapply (l2_11 A C B C A D1).",
            "VernacExtend",
            "c172dd4e3c2d6947a6caec53ea1fa678716c2794"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(D = D1 \\/ Midpoint C D D1).",
            "VernacExtend",
            "b3a3349cfaf97ec6b3d05b741a7ca8e5518baad8"
        ],
        [
            "eapply l7_20.",
            "VernacExtend",
            "70911807aab4eb241715fb7911ea258aa583b4e2"
        ],
        [
            "apply bet_col in H1.",
            "VernacExtend",
            "a2df73c12da0945abb7fcb44c42a80cc1010d0a4"
        ],
        [
            "apply bet_col in H2.",
            "VernacExtend",
            "9fc17029d3eefc0e630566187caadc0de84647d5"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H0.",
            "VernacExtend",
            "d8ce644abbee23c3210e33341966fbe878d3f7b4"
        ],
        [
            "apply cong_identity in H0.",
            "VernacExtend",
            "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "eapply (col3 A B); Col.",
            "VernacExtend",
            "d10516134859faa51aaa89eb5c946f2dde991b8f"
        ],
        [
            "eCong.",
            "VernacExtend",
            "84bb4359fc111f7c15598d389f718fd44888b13e"
        ],
        [
            "induction H7.",
            "VernacExtend",
            "ce73f2beff07726769c2166719babbb972bc5e72"
        ],
        [
            "subst D1.",
            "VernacExtend",
            "c78cd8a458242e49d0b165b815a0cd659cabe63a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Cong B A C D2).",
            "VernacExtend",
            "c6cca22b0348f1b9621e5b3210e1faae292e61cb"
        ],
        [
            "eapply (l2_11 B C A C B D2).",
            "VernacExtend",
            "14caac2d8319dd7e7d4df131e4b471b1783279d0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cong_pseudo_reflexivity.",
            "VernacExtend",
            "487306551e28f43f75beffe7e8fa32f00c95dd25"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(Midpoint C D2 D1).",
            "VernacExtend",
            "67badcb03aef4518818474bd8106ba4abc7e6e3b"
        ],
        [
            "unfold Midpoint.",
            "VernacExtend",
            "d350b286cf39edbcae8e5847c5efeb3115a22560"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H0.",
            "VernacExtend",
            "d8ce644abbee23c3210e33341966fbe878d3f7b4"
        ],
        [
            "apply cong_identity in H0.",
            "VernacExtend",
            "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "apply is_midpoint_id in H7.",
            "VernacExtend",
            "c3eb4753392a00f72917c339fc47e55bcf93608c"
        ],
        [
            "subst D1.",
            "VernacExtend",
            "c78cd8a458242e49d0b165b815a0cd659cabe63a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "induction(eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply cong_identity in H3.",
            "VernacExtend",
            "66e848f8fbf6e4694366f8121b8567650ff35782"
        ],
        [
            "subst D1.",
            "VernacExtend",
            "c78cd8a458242e49d0b165b815a0cd659cabe63a"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert(Bet D1 C B).",
            "VernacExtend",
            "2ce2def28630d8b4049d27c88bf36c78b57af4d1"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "assert(Bet C B D2).",
            "VernacExtend",
            "b5fcc590f04650bcc0b4770d2e57020c792bc6c6"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "eapply (outer_transitivity_between).",
            "VernacExtend",
            "9550a76bc44beb2c34ef76033ba85cd61e83295b"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold Midpoint in H7.",
            "VernacExtend",
            "40ef67613e9b7d3172e16d1281138862d2fe119b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply cong_symmetry.",
            "VernacExtend",
            "fd7deccdff88159fd858cdfb08d0ec6336440378"
        ],
        [
            "apply cong_commutativity.",
            "VernacExtend",
            "f9aaaf4e990e42548d094910d661343457891a5f"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "eapply cong_transitivity.",
            "VernacExtend",
            "99678d0c23f143de076a065c43c15805aaae09ae"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "assert(D = D2).",
            "VernacExtend",
            "676df49763cc3a00d83955d5f35bf00c9d3ece09"
        ],
        [
            "eapply symmetric_point_uniqueness.",
            "VernacExtend",
            "f04f67e3d67e351fa52f10a828f05b2965bc1d63"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply l7_2.",
            "VernacExtend",
            "43229a619938fa96f6132d12b6f260b53b3e4d30"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst D2.",
            "VernacExtend",
            "ee571fb9c1c339b9a1f01b74694ace0b52f0d077"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply between_exchange3.",
            "VernacExtend",
            "841864cb322cdd888ae581ca252274dbd065274f"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong2_bet1 : forall A B C D, Col A B D -> Bet A C B -> Cong A B C D -> Cong A C B D -> Bet C B D.",
            "VernacStartTheoremProof",
            "f9dfc2756872a1b52eff1ed4c39786d685e1bf23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A C).",
            "VernacExtend",
            "bda996de19e922f2f3aa46630bed62394edd5e36"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply cong_symmetry in H2.",
            "VernacExtend",
            "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert(HH:=col_cong_bet A B C D H H1 H0).",
            "VernacExtend",
            "883d0feb7ac60300523184f2854d17b2501f5edf"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assert(A = D /\\ B = C).",
            "VernacExtend",
            "4a645ec799a6d3800b80022a168c8188df538603"
        ],
        [
            "eapply bet_cong_eq.",
            "VernacExtend",
            "d917ea42a23db3709611d94aeb277adf630e2d69"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong2_bet2 : forall A B C D, Col A B D -> Bet A C B -> Cong A B C D -> Cong A D B C -> Bet C A D.",
            "VernacStartTheoremProof",
            "937faa36fc1fb9437a6a51e1e53ed42aad416407"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply cong_identity in H2.",
            "VernacExtend",
            "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert(HH:=col_cong_bet A B C D H H1 H0).",
            "VernacExtend",
            "883d0feb7ac60300523184f2854d17b2501f5edf"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(C = A /\\ D = B).",
            "VernacExtend",
            "d9b965d585ee42914bd0e96d4d44e50bc3c35efe"
        ],
        [
            "eapply bet_cong_eq.",
            "VernacExtend",
            "d917ea42a23db3709611d94aeb277adf630e2d69"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong2_bet3 : forall A B C D, Col A B D -> Bet A B C -> Cong A B C D -> Cong A C B D -> Bet B C D.",
            "VernacStartTheoremProof",
            "1e99eee8510fc7cd9127e51a505d8e468fc3439a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "eapply (col_cong2_bet2 _ A).",
            "VernacExtend",
            "860385722ea58a8c5740f9e0dd83ecdbf27cf560"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_cong2_bet4 : forall A B C D, Col A B C -> Bet A B D -> Cong A B C D -> Cong A D B C -> Bet B D C.",
            "VernacStartTheoremProof",
            "537701bfefd840999b5bbc23678035b16a18ea65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction(eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply cong_symmetry in H1.",
            "VernacExtend",
            "534756e210e3cbc7f53391a0447a3fed3127ac47"
        ],
        [
            "apply cong_identity in H1.",
            "VernacExtend",
            "afb1f7bf499b438f5747233f4604e9bbca4717f6"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply (col_cong2_bet1 A D B C).",
            "VernacExtend",
            "7a28bb742afe5c280bd6c0239e29c4e2f97967fd"
        ],
        [
            "apply bet_col in H0.",
            "VernacExtend",
            "6a0b23454f2414aae26bf642795e229b7ee01883"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_bet2_cong1 : forall A B C D, Col A B D -> Bet A C B -> Cong A B C D -> Bet C B D -> Cong A C D B.",
            "VernacStartTheoremProof",
            "68639b17207a98349b86869048e389e8ebebcd55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (l4_3 A C B D B C); Between; Cong.",
            "VernacExtend",
            "e57fe99887efe789fa5da1a9b148561ad8d053b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_bet2_cong2 : forall A B C D, Col A B D -> Bet A C B -> Cong A B C D -> Bet C A D -> Cong D A B C.",
            "VernacStartTheoremProof",
            "8f293e87d1a2fecc2c8fe77bf3e9389860fea56a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (l4_3 D A C B C A); Between; Cong.",
            "VernacExtend",
            "3c9bbe5a465c9bdf3376e1a6be171c0021419ee5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_lt2__lt : forall O o A B a b : Tpoint, Bet a o b -> Bet A O B -> Lt o a O A -> Lt o b O B -> Lt a b A B.",
            "VernacStartTheoremProof",
            "f8b4a4ce0771d273e6e03f14dcec992b607f2b6d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Lt.",
            "VernacExtend",
            "e062c7d5bbdfa989efba9384984df0b938075397"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Lt in *.",
            "VernacExtend",
            "b03fc162fe9749f680ef59b515b09543fa81f42f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply(bet2_le2__le O o A B a b); auto.",
            "VernacExtend",
            "4a222cf55b56824563884fcd0fa19a1a70a6d997"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction(eq_dec_points O A).",
            "VernacExtend",
            "584d1912a7329855d0d00725109ae979c232911a"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "unfold Lt in H1.",
            "VernacExtend",
            "22286967f954a7ff2a0d1c4494aca69d2441eb03"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply le_zero in H0.",
            "VernacExtend",
            "b1937195308a15be11a69cfa200e2f8b57ee5edc"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "induction(eq_dec_points O B).",
            "VernacExtend",
            "363ff8a694d7336d4a5183cffb7252c78982e105"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "unfold Lt in H2.",
            "VernacExtend",
            "f705219f7c6666f54d995798440ff395e6be2629"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply le_zero in H0.",
            "VernacExtend",
            "b1937195308a15be11a69cfa200e2f8b57ee5edc"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply cong_trivial_identity.",
            "VernacExtend",
            "f4bbb0a1e0930fe7ef43b986e32f0f1fb4e52495"
        ],
        [
            "unfold Lt in *.",
            "VernacExtend",
            "b03fc162fe9749f680ef59b515b09543fa81f42f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold Le in H1.",
            "VernacExtend",
            "6cd2227623c08cff1e0ec3f130e1bec87efe13a3"
        ],
        [
            "ex_and H1 a'.",
            "VernacExtend",
            "232910b1fb44d86517ee96b293a8cec50241eb6e"
        ],
        [
            "unfold Le in H2.",
            "VernacExtend",
            "f9c2a5ece9753e53054a554285050cb1cce7acc3"
        ],
        [
            "ex_and H2 b'.",
            "VernacExtend",
            "21a2ffc3d646ae4781607647952b05a87dfb7e17"
        ],
        [
            "assert(Bet a' O b').",
            "VernacExtend",
            "5a268ba7268d4703bea0588fd58008095f6bf7d6"
        ],
        [
            "apply between_inner_transitivity with B.",
            "VernacExtend",
            "95e125db01f1ef36880f60e0d36272d350d079e5"
        ],
        [
            "apply between_exchange3 with A.",
            "VernacExtend",
            "8f704859445ac4841da2fd0370c5f6847115e895"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "assert(Cong a b a' b').",
            "VernacExtend",
            "18335a6c0342aaa6e87064b8da89c61859fd6884"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (l2_11 a o b a' O b'); Cong.",
            "VernacExtend",
            "59d873dec01eaf0202da763b40b409f935ead93f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Cong a' b' A B) by (apply cong_transitivity with a b; Cong).",
            "VernacExtend",
            "468e4e790b2dac6f0c9ebec7f100b004396cfa56"
        ],
        [
            "assert(Bet A b' B) by eBetween.",
            "VernacExtend",
            "155befa1bb70d17442d2e365a7c9b4eece4b08ce"
        ],
        [
            "induction(eq_dec_points A a').",
            "VernacExtend",
            "cb374185724a398c36641138ab772e2a895b8285"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert(b'=B \\/ Midpoint A b' B).",
            "VernacExtend",
            "b10fe660cde63769091843592058f97df5ebe379"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l7_20.",
            "VernacExtend",
            "3b73585582868bb9b4c2dad1562d5367cd9e19b1"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(b' = B).",
            "VernacExtend",
            "6ca9f38d8ef299cbd6908138da82e3afa6f55572"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (between_cong A).",
            "VernacExtend",
            "386045530074800544630cefd1f106e7ecbb57d8"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; tauto.",
            "VernacExtend",
            "06979756cb69520699861cde13274cba808a0d2c"
        ],
        [
            "assert(Bet B a' A) by eBetween.",
            "VernacExtend",
            "15e0a79f9fe4fee49aee12087c7521dafb3ab7cd"
        ],
        [
            "induction(eq_dec_points B b').",
            "VernacExtend",
            "3d822cc1212a07518db2d4fcf8a295dfe7153b42"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert(a'=A \\/ Midpoint B a' A).",
            "VernacExtend",
            "f228be5a3bc9c0b8f3fa2602aeddd046dea73131"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l7_20.",
            "VernacExtend",
            "3b73585582868bb9b4c2dad1562d5367cd9e19b1"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "unfold Midpoint in *.",
            "VernacExtend",
            "96a5efb4a181faf4935f491277c735ec4dda2ab1"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(a' = A).",
            "VernacExtend",
            "77b8e09515bb22d6f7e290c169228ce551f06a7c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (between_cong B).",
            "VernacExtend",
            "1f2e07879c745eebe72e087a22ee26e2d5265893"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; tauto.",
            "VernacExtend",
            "06979756cb69520699861cde13274cba808a0d2c"
        ],
        [
            "assert(Bet a' A b' \\/ Bet a' B b').",
            "VernacExtend",
            "6317bed6e4ae698f44d201dbf184132c5d0ec7ca"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(col_cong_bet A B a' b').",
            "VernacExtend",
            "97c2105bc507d2193a891a26136778a82ace02c0"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "induction H17.",
            "VernacExtend",
            "2977e3960b70522e0ed3a31c2c6c69020169dc90"
        ],
        [
            "assert(A = a').",
            "VernacExtend",
            "98eceb793a9d8c37c50ab0f57f8aa4b9a56e4ae9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(between_equality _ _ b').",
            "VernacExtend",
            "564bccec7780a59eb48ff42eb74e32755df35e60"
        ],
        [
            "apply between_exchange4 with O.",
            "VernacExtend",
            "29a2395571b1663efde01aa99643c216f9c599e4"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply between_inner_transitivity with B.",
            "VernacExtend",
            "95e125db01f1ef36880f60e0d36272d350d079e5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; tauto.",
            "VernacExtend",
            "06979756cb69520699861cde13274cba808a0d2c"
        ],
        [
            "assert(b' = B).",
            "VernacExtend",
            "6ca9f38d8ef299cbd6908138da82e3afa6f55572"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply(between_equality _ _ a').",
            "VernacExtend",
            "5c89aa72c1938828a952d5597e46c634207d4827"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply between_exchange4 with O.",
            "VernacExtend",
            "29a2395571b1663efde01aa99643c216f9c599e4"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "apply between_inner_transitivity with A.",
            "VernacExtend",
            "f43a237de63ea2167179cea9d0cba91e1f34c087"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "Between.",
            "VernacExtend",
            "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "treat_equalities; tauto.",
            "VernacExtend",
            "06979756cb69520699861cde13274cba808a0d2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bet2_lt_le__lt : forall O o A B a b : Tpoint, Bet a o b -> Bet A O B -> Cong o a O A -> Lt o b O B -> Lt a b A B.",
            "VernacStartTheoremProof",
            "1805257ed153c8d3b6b5718bb141c0245eb089b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Lt.",
            "VernacExtend",
            "e062c7d5bbdfa989efba9384984df0b938075397"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Lt in *.",
            "VernacExtend",
            "b03fc162fe9749f680ef59b515b09543fa81f42f"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(Le o a O A).",
            "VernacExtend",
            "613f93b8bb014d67459d6cfd01a11e828cea7dc7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Le.",
            "VernacExtend",
            "b0e93c3e8b5b9e2c0757a2374735748dd578e05c"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "split; Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply(bet2_le2__le O o A B a b); auto.",
            "VernacExtend",
            "4a222cf55b56824563884fcd0fa19a1a70a6d997"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HH:=segment_construction A O o b).",
            "VernacExtend",
            "9e5289fcd5609dfa8233f5c8149134110e478dea"
        ],
        [
            "ex_and HH b'.",
            "VernacExtend",
            "1987270e669bf3daeb41366233ae79fc0664e643"
        ],
        [
            "unfold Lt in H2.",
            "VernacExtend",
            "f705219f7c6666f54d995798440ff395e6be2629"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply(l4_3_1 a o b A O B H H0 ); Cong.",
            "VernacExtend",
            "f972fcfce8fdad2626414f7ab4bf17035505ab04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T7_2.",
            "VernacEndSegment",
            "24ce0a6f623e1b9d07329093893770cad0968d78"
        ],
        [
            "Hint Resolve midpoint_bet : between.",
            "VernacHints",
            "ba7eecf0f977e0edc45fb0c50768d129f1540d6f"
        ],
        [
            "Hint Resolve midpoint_col : col.",
            "VernacHints",
            "d5ffedfc3b3417be53173257ef38bf7b5726c579"
        ],
        [
            "Hint Resolve midpoint_cong : cong.",
            "VernacHints",
            "832d314109da9d2a4b3bf7163fec60f79cd9926d"
        ]
    ],
    "proofs": [
        {
            "name": "midpoint_dec",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "elim (bet_dec A I B);intro; elim (cong_dec A I I B);intro; tauto.",
                        "VernacExtend",
                        "53dc777a7c71000d799f3e8590067339b503ae68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_midpoint_id",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H.",
                        "VernacExtend",
                        "c36b2a6dac3a427ab99d151105242184ce83b07f"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "treat_equalities;reflexivity.",
                        "VernacExtend",
                        "0cfaec79bf9653b13a0f8e9d5ea53b4e6ed3553a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_midpoint_id_2",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H0.",
                        "VernacExtend",
                        "06da6d5985b2574f6403b0c555d2dac33b2c0b4d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_2",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_3",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros;spliter;repeat split;Between;Cong.",
                        "VernacExtend",
                        "ec097c101c9ebe25a197fe63774578605bee2299"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_3_2",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros;repeat split;Between;Cong.",
                        "VernacExtend",
                        "c2398669965eaf4e745db95ec26a415d3e083dae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symmetric_point_construction",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "prolong P A E P A.",
                        "VernacExtend",
                        "dfe9dbcc9861d1906ac621e24a808fcf75728659"
                    ]
                },
                {
                    "command": [
                        "exists E.",
                        "VernacExtend",
                        "c73d01b1c43419f5d15b43f4417f5bebb5434a17"
                    ]
                },
                {
                    "command": [
                        "split;Cong;Between.",
                        "VernacExtend",
                        "673057eda89cf0f0da6fc1413bb11d184811bcd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symmetric_point_uniqueness",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A P); intros.",
                        "VernacExtend",
                        "06458089152732ac7f1b761834e00d983c8a1b48"
                    ]
                },
                {
                    "command": [
                        "treat_equalities;auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "apply (construction_uniqueness A P A P);Cong.",
                        "VernacExtend",
                        "d4c44cb6f080d800351517172029d1ffe5386c04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_9",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A X).",
                        "VernacExtend",
                        "f0dfcb2e07469b66b3c4a70125bac07472563157"
                    ]
                },
                {
                    "command": [
                        "treat_equalities;reflexivity.",
                        "VernacExtend",
                        "0cfaec79bf9653b13a0f8e9d5ea53b4e6ed3553a"
                    ]
                },
                {
                    "command": [
                        "apply (construction_uniqueness X A X A);Cong;Between.",
                        "VernacExtend",
                        "48c763b476994e9e913dac1b495f646491e5427a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_9_bis",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros; apply l7_9 with A X; unfold Midpoint in *; split; spliter; Cong; Between.",
                        "VernacExtend",
                        "f97092d7f4c57328f5e1f16115083d0ba9d5a085"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symmetry_preserves_midpoint",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in H2.",
                        "VernacExtend",
                        "63fd5243094f3b803f67a96ed5401ef20db7ee32"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply l7_15;eauto.",
                        "VernacExtend",
                        "7083b53d71c16ef418bb93449e114a4dde854dff"
                    ]
                },
                {
                    "command": [
                        "eapply l7_16;eauto.",
                        "VernacExtend",
                        "7806ac31864b818099c1f964d55382f2cc387746"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Mid_cases",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H; Midpoint.",
                        "VernacExtend",
                        "b5b1b04ccc45cab6d92f4a1dcc27a92681dc2787"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Mid_perm",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Between; Cong.",
                        "VernacExtend",
                        "15a9387370927b31481a4fd44beaf3d15836b154"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_17",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P B P' B).",
                        "VernacExtend",
                        "43172f4d2558f57ad338c21f433fe9ff8f241a91"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "assert (exists B', Midpoint A B B') by (apply symmetric_point_construction).",
                        "VernacExtend",
                        "4ef5a8dc7b369a39b785d131bb3df1e1f7506a3e"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P' B P x) by eauto with midpoint cong.",
                        "VernacExtend",
                        "48aac1a152e0e8d7f338304a68cb1956bff5feb7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P B P x) by (apply cong_transitivity with P' B; Cong).",
                        "VernacExtend",
                        "b9ec22c1a0d3faebfa2a40dc1858f9dab0beccd5"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P B P' x) by eauto with midpoint cong.",
                        "VernacExtend",
                        "41d5e842e879bdd2764a2a9a7c002f8edce96b65"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P' B P' x) by (apply cong_transitivity with P x; Cong; apply cong_transitivity with P B; Cong).",
                        "VernacExtend",
                        "71c7f20cf3d473868b69e4afe56499a07e6063c0"
                    ]
                },
                {
                    "command": [
                        "assert (Bet P B P') by (unfold Midpoint in *;spliter;assumption).",
                        "VernacExtend",
                        "4314adb6aaaf6c4a1c8a382b9403f3f7ca9463e0"
                    ]
                },
                {
                    "command": [
                        "assert (B=x) by (apply (l4_19 P P' B x);Between).",
                        "VernacExtend",
                        "0ebb5f422526b7da82155f089be0a9322869402d"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "apply l7_3.",
                        "VernacExtend",
                        "e0ed8044d8d76b674bae6c3d6c16560c62b151be"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_17_bis",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l7_17 with P P'; Midpoint.",
                        "VernacExtend",
                        "cd78f80c7a781187ab8943c3c7957559a30201d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_20",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A B B B) by (apply (l4_3 A B M B B M);Between;Cong).",
                        "VernacExtend",
                        "8c180649d59b6dc0047920193a3281efa71e1459"
                    ]
                },
                {
                    "command": [
                        "treat_equalities;auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B A A A) by (apply (l4_3 B A M A A M);Cong;Between).",
                        "VernacExtend",
                        "89b5714a4948158f021a8bc4a246d9bf1bc48db1"
                    ]
                },
                {
                    "command": [
                        "treat_equalities;auto.",
                        "VernacExtend",
                        "650d2a0e9e8b6b119396cfa376ed700d1e1536f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_20_bis",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (l7_20 M A B H0 H1);intuition.",
                        "VernacExtend",
                        "a699d08a2c0fdcefbbf3d39f53fee8c0e712197f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_col_mid",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l7_20 in H0.",
                        "VernacExtend",
                        "0ceca6f3b7599fe4af28675da85fe4596beab72e"
                    ]
                },
                {
                    "command": [
                        "intuition subst.",
                        "VernacExtend",
                        "ccadf6961ec7900268e1cf542f4e33b3d5608f18"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l7_21",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (exists P', Cong_3 B D P D B P').",
                        "VernacExtend",
                        "596e9d08983f661a761a7173baa32e0af3cc5f8a"
                    ]
                },
                {
                    "command": [
                        "eapply l4_14.",
                        "VernacExtend",
                        "2e64bbe24e459931cc8d7fc2f79c92c3988d36d9"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "induction H9.",
                        "VernacExtend",
                        "c0333214b640d0b2d924b3dafb6c15f0e4ac7102"
                    ]
                },
                {
                    "command": [
                        "assert (Col D B x) by (apply l4_13 with B D P;Col).",
                        "VernacExtend",
                        "44cc133bba14c0abdecc343e7bb01bf339ef737a"
                    ]
                },
                {
                    "command": [
                        "assert (FSC B D P A D B x C).",
                        "VernacExtend",
                        "ad0badfc69c03ff0f6d1602c4b543bcdbab6c68e"
                    ]
                },
                {
                    "command": [
                        "unfold FSC.",
                        "VernacExtend",
                        "d005f9205539e89bf245b71bab47bc97d7daa39f"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3 in *.",
                        "VernacExtend",
                        "81846649e3ee6af32dc9d86caa3a4bf892f50899"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong; Col.",
                        "VernacExtend",
                        "4cf2599d9e5b9d1e5ab1378907f08d9875ca2b69"
                    ]
                },
                {
                    "command": [
                        "assert (FSC B D P C D B x A).",
                        "VernacExtend",
                        "c2885c4c1398e5809d172a282ea5fdba313b784a"
                    ]
                },
                {
                    "command": [
                        "unfold FSC.",
                        "VernacExtend",
                        "d005f9205539e89bf245b71bab47bc97d7daa39f"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3 in *.",
                        "VernacExtend",
                        "81846649e3ee6af32dc9d86caa3a4bf892f50899"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; Cong.",
                        "VernacExtend",
                        "5002713d0c7266c62584bed984ddcf6d6c219419"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P A x C) by (eauto using l4_16).",
                        "VernacExtend",
                        "886a33069c0fec587c7a298628854e4dd9fe0daf"
                    ]
                },
                {
                    "command": [
                        "assert (Cong P C x A) by (eauto using l4_16).",
                        "VernacExtend",
                        "86d03ff7c1378000bcf4316f0f654c89186e417e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong_3 A P C C x A) by (unfold Cong_3;repeat split; Cong).",
                        "VernacExtend",
                        "1f475b48188a5dfd24c7154247737a7e7861def5"
                    ]
                },
                {
                    "command": [
                        "assert (Col C x A) by (eauto using l4_13).",
                        "VernacExtend",
                        "cc51dd2a9b60ed68fd6cdfada6b305396da1edf5"
                    ]
                },
                {
                    "command": [
                        "assert (P=x).",
                        "VernacExtend",
                        "759eaef4629ab80b663d310aa6186bffd977823c"
                    ]
                },
                {
                    "command": [
                        "unfold FSC in *.",
                        "VernacExtend",
                        "d09d5060f593848cb940d5ddaa188bd46c0d9914"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply (l6_21 A C B D); Col.",
                        "VernacExtend",
                        "2c7901f8b3fae3c52a623253265d120d2b9c0cd1"
                    ]
                },
                {
                    "command": [
                        "subst x.",
                        "VernacExtend",
                        "76c28b0a6a4a7c1568fa30e26ee411c5e5d54968"
                    ]
                },
                {
                    "command": [
                        "unfold Cong_3 in *;spliter.",
                        "VernacExtend",
                        "62adb5ac05639cc6a6cbf6f81c918bd7ece2f904"
                    ]
                },
                {
                    "command": [
                        "split;apply l7_20_bis;Col;Cong.",
                        "VernacExtend",
                        "077c5c9141c4d8cf1056d0100395ba7b6bd2d2e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_distinct_1",
            "line_nb": 743,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H0.",
                        "VernacExtend",
                        "1aa36d00d381c76b80e6e3615ccfd96c3bb86b5f"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intro;subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *.",
                        "VernacExtend",
                        "96a5efb4a181faf4935f491277c735ec4dda2ab1"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H0.",
                        "VernacExtend",
                        "1aa36d00d381c76b80e6e3615ccfd96c3bb86b5f"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_distinct_2",
            "line_nb": 758,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A<>B).",
                        "VernacExtend",
                        "054074d1c4aab44077b809892d45c03b9ae82923"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *;spliter.",
                        "VernacExtend",
                        "94cfb4754c2f0312d41786041551ef933e840506"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_distinct_1 in H0.",
                        "VernacExtend",
                        "8792f87d605d76529058e7ddc62f365f484c1174"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_distinct_3",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A<>B).",
                        "VernacExtend",
                        "054074d1c4aab44077b809892d45c03b9ae82923"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint in *;spliter.",
                        "VernacExtend",
                        "94cfb4754c2f0312d41786041551ef933e840506"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_distinct_1 in H0.",
                        "VernacExtend",
                        "8792f87d605d76529058e7ddc62f365f484c1174"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_def",
            "line_nb": 784,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "split;assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_bet",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_col",
            "line_nb": 796,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "right;right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "apply midpoint_bet.",
                        "VernacExtend",
                        "a349dc09e4c6302d6f25689cdf50363339f6914f"
                    ]
                },
                {
                    "command": [
                        "apply l7_2.",
                        "VernacExtend",
                        "43229a619938fa96f6132d12b6f260b53b3e4d30"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "midpoint_cong",
            "line_nb": 804,
            "steps": [
                {
                    "command": [
                        "unfold Midpoint.",
                        "VernacExtend",
                        "d350b286cf39edbcae8e5847c5efeb3115a22560"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swap_diff",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_cong_half_2",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cong_cong_half_1 with A A'.",
                        "VernacExtend",
                        "6f05f70f07a197cc7111ed100999f52a65765c27"
                    ]
                },
                {
                    "command": [
                        "Midpoint.",
                        "VernacExtend",
                        "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
                    ]
                },
                {
                    "command": [
                        "Midpoint.",
                        "VernacExtend",
                        "9f117bd6e8b8f1d2f6cb6921f9ca524a08dc0202"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_mid2__cong",
            "line_nb": 872,
            "steps": [
                {
                    "command": [
                        "intros A M B A' M' B' HM HM' HCong.",
                        "VernacExtend",
                        "9486fc07aed08e6c6569b649ee928303c7a489c8"
                    ]
                },
                {
                    "command": [
                        "destruct HM.",
                        "VernacExtend",
                        "f10d6721177b30d370a912f82697bc054259c496"
                    ]
                },
                {
                    "command": [
                        "destruct HM'.",
                        "VernacExtend",
                        "7d7025223a42ec3fab690a93aab330f1e232135d"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ M _ _ M'); auto.",
                        "VernacExtend",
                        "952274897c0f954e2b83b9f812a8a8b268fd7177"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ A' M'); auto.",
                        "VernacExtend",
                        "0523a5a65485744b57c5480e04de67c09819d29f"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ A M); Cong.",
                        "VernacExtend",
                        "ebc11795431639fbc7957ab7fd1793886797ca4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid__lt",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "intros A M B HAB HM.",
                        "VernacExtend",
                        "28a21a26f1aeff44b64f25fe972656f41b8c8b4d"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_distinct_1 M A B HAB HM) as [HMA HMB].",
                        "VernacExtend",
                        "d6b05143240b9c0ef5f9ebe4f95a16fc314d5079"
                    ]
                },
                {
                    "command": [
                        "destruct HM.",
                        "VernacExtend",
                        "f10d6721177b30d370a912f82697bc054259c496"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists M; Cong.",
                        "VernacExtend",
                        "70c03ed489767941e5b390c1f27535aa3c273ba3"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HMB, between_cong with A; auto.",
                        "VernacExtend",
                        "3e5e29837df192a00ebe1e279d8c37b2524aad56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mid2__le13",
            "line_nb": 889,
            "steps": [
                {
                    "command": [
                        "intros A M B A' M' B' HM HM' Hle.",
                        "VernacExtend",
                        "69db32d4a1db6582910c54d1dbcf978cd25937cc"
                    ]
                },
                {
                    "command": [
                        "destruct HM.",
                        "VernacExtend",
                        "f10d6721177b30d370a912f82697bc054259c496"
                    ]
                },
                {
                    "command": [
                        "destruct HM'.",
                        "VernacExtend",
                        "7d7025223a42ec3fab690a93aab330f1e232135d"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le1346 _ M _ _ M'); auto.",
                        "VernacExtend",
                        "f00c3d8461f7113953ab490f1c20f8b332ca4af1"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 A M A' M'); auto.",
                        "VernacExtend",
                        "bbb5591d3d27d6f96d7660b479c1845610e3f814"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mid2__le12",
            "line_nb": 896,
            "steps": [
                {
                    "command": [
                        "intros A M B A' M' B' HM HM' Hle.",
                        "VernacExtend",
                        "69db32d4a1db6582910c54d1dbcf978cd25937cc"
                    ]
                },
                {
                    "command": [
                        "elim(le_cases A M A' M'); auto.",
                        "VernacExtend",
                        "ce9ca6aafe4f99fa8792e859b62c0e75a72df0ab"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(Le A' B' A B) by (apply (le_mid2__le13 _ M' _ _ M); auto).",
                        "VernacExtend",
                        "311094b82ff18aa2c1c34d81885f07fd5cfd6001"
                    ]
                },
                {
                    "command": [
                        "apply cong__le.",
                        "VernacExtend",
                        "511026a3058ae165352f779a3da72228df9e8798"
                    ]
                },
                {
                    "command": [
                        "apply (cong_cong_half_1 _ _ B _ _ B'); auto.",
                        "VernacExtend",
                        "6c3ced9cdfec986b1ab738abe52fe47df09bd1ff"
                    ]
                },
                {
                    "command": [
                        "apply le_anti_symmetry; auto.",
                        "VernacExtend",
                        "fdde1aa33953b3956e47c148e865d4bc4b7fb673"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mid2__lt13",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "intros A M B A' M' B' HM HM' [HLe HNcong].",
                        "VernacExtend",
                        "91e9dad4ade98d1c29c1886798551ebf29b1ce99"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply le_mid2__le13 with M M'; trivial.",
                        "VernacExtend",
                        "60ce30800d4f00e9414116d6ae77e49528619da0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNcong, cong_cong_half_1 with B B'; trivial.",
                        "VernacExtend",
                        "3437e9c7c3943da2e580bedafdf4b8d6b0edaefa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mid2__lt12",
            "line_nb": 912,
            "steps": [
                {
                    "command": [
                        "intros A M B A' M' B' HM HM' [HLe HNcong].",
                        "VernacExtend",
                        "91e9dad4ade98d1c29c1886798551ebf29b1ce99"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply le_mid2__le12 with B B'; trivial.",
                        "VernacExtend",
                        "c35cf114459e76380bc2b1b23cf62b12cdbd35c2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply HNcong, cong_mid2__cong with M M'; trivial.",
                        "VernacExtend",
                        "0d6a93c22573ac5bca66a2ac823f4380fff611c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cong2_bet1",
            "line_nb": 1036,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A C).",
                        "VernacExtend",
                        "bda996de19e922f2f3aa46630bed62394edd5e36"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H2.",
                        "VernacExtend",
                        "cd5c67a02896239e1d533dd9cadb2d78ff09019b"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H2.",
                        "VernacExtend",
                        "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=col_cong_bet A B C D H H1 H0).",
                        "VernacExtend",
                        "883d0feb7ac60300523184f2854d17b2501f5edf"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "assert(A = D /\\ B = C).",
                        "VernacExtend",
                        "4a645ec799a6d3800b80022a168c8188df538603"
                    ]
                },
                {
                    "command": [
                        "eapply bet_cong_eq.",
                        "VernacExtend",
                        "d917ea42a23db3709611d94aeb277adf630e2d69"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "eBetween.",
                        "VernacExtend",
                        "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cong2_bet2",
            "line_nb": 1057,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points B C).",
                        "VernacExtend",
                        "5a5afdeceafc19c18a920ee30f3166fbe576500d"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H2.",
                        "VernacExtend",
                        "c6d3a4f3c034ec60d4afa854492daac57842cc7c"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=col_cong_bet A B C D H H1 H0).",
                        "VernacExtend",
                        "883d0feb7ac60300523184f2854d17b2501f5edf"
                    ]
                },
                {
                    "command": [
                        "induction HH.",
                        "VernacExtend",
                        "1e97a27b456167214a13cc00f52556b8b06289c7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(C = A /\\ D = B).",
                        "VernacExtend",
                        "d9b965d585ee42914bd0e96d4d44e50bc3c35efe"
                    ]
                },
                {
                    "command": [
                        "eapply bet_cong_eq.",
                        "VernacExtend",
                        "d917ea42a23db3709611d94aeb277adf630e2d69"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "eBetween.",
                        "VernacExtend",
                        "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cong2_bet3",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H1.",
                        "VernacExtend",
                        "534756e210e3cbc7f53391a0447a3fed3127ac47"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H1.",
                        "VernacExtend",
                        "afb1f7bf499b438f5747233f4604e9bbca4717f6"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "eapply (col_cong2_bet2 _ A).",
                        "VernacExtend",
                        "860385722ea58a8c5740f9e0dd83ecdbf27cf560"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H0.",
                        "VernacExtend",
                        "6a0b23454f2414aae26bf642795e229b7ee01883"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_cong2_bet4",
            "line_nb": 1092,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction(eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply cong_symmetry in H1.",
                        "VernacExtend",
                        "534756e210e3cbc7f53391a0447a3fed3127ac47"
                    ]
                },
                {
                    "command": [
                        "apply cong_identity in H1.",
                        "VernacExtend",
                        "afb1f7bf499b438f5747233f4604e9bbca4717f6"
                    ]
                },
                {
                    "command": [
                        "subst D.",
                        "VernacExtend",
                        "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
                    ]
                },
                {
                    "command": [
                        "Between.",
                        "VernacExtend",
                        "88a845b6dcd1b885edf5ca6925c47a8a43fa26f0"
                    ]
                },
                {
                    "command": [
                        "apply (col_cong2_bet1 A D B C).",
                        "VernacExtend",
                        "7a28bb742afe5c280bd6c0239e29c4e2f97967fd"
                    ]
                },
                {
                    "command": [
                        "apply bet_col in H0.",
                        "VernacExtend",
                        "6a0b23454f2414aae26bf642795e229b7ee01883"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_bet2_cong1",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (l4_3 A C B D B C); Between; Cong.",
                        "VernacExtend",
                        "e57fe99887efe789fa5da1a9b148561ad8d053b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_bet2_cong2",
            "line_nb": 1111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (l4_3 D A C B C A); Between; Cong.",
                        "VernacExtend",
                        "3c9bbe5a465c9bdf3376e1a6be171c0021419ee5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}