{
    "filename": "Meta_theory/Parallel_postulates/bachmann_s_lotschnittaxiom_weak_triangle_circumscription_principle.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.perp_bisect.",
            "VernacRequire",
            "65d2293994b95e0348a36e61d0e32a2815273c43"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section bachmann_s_lotschnittaxiom_weak_triangle_circumscription_principle.",
            "VernacBeginSection",
            "ea535b7f79bb4c2789cac10bd4ecae1eb5d94aac"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma bachmann_s_lotschnittaxiom__weak_triangle_circumscription_principle : bachmann_s_lotschnittaxiom -> weak_triangle_circumscription_principle.",
            "VernacStartTheoremProof",
            "8cc1846fcaedfb0ae5864f9485a7d555c6668e45"
        ],
        [
            "intro bla.",
            "VernacExtend",
            "990294c9efe224362b19628d57b39dff06b5e8de"
        ],
        [
            "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
            "VernacExtend",
            "eeceb336b5f61452b510e071123981b174b278b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear bla; intros HP A B C A1 A2 B1 B2 HNC HPer.",
            "VernacExtend",
            "77a4858d9e7ae30c1ed3c735c4cd4ffa917bbce1"
        ],
        [
            "intros HPerpB1 HPerpB2 HCop1 HCop2 HCop3 HCop4.",
            "VernacExtend",
            "8586c7202283ec0f7a2caf1c584ea6353c85831c"
        ],
        [
            "destruct (perp_bisect_perp _ _ _ _ HPerpB1) as [A3 [HA [_ [HCol1 [HCol2 _]]]]].",
            "VernacExtend",
            "4fea9edde1ebb5206eebea35aad2b1d07f7edd15"
        ],
        [
            "destruct (perp_bisect_perp _ _ _ _ HPerpB2) as [B3 [HB [_ [HCol3 [HCol4 _]]]]].",
            "VernacExtend",
            "eb1dd102a53fce237e75017318de568951a2fc01"
        ],
        [
            "assert (Coplanar A B C A3) by (apply col_cop2__cop with A1 A2; Col; Cop).",
            "VernacExtend",
            "402e79dc2739e34ea0db6da36a5301c8b8d38474"
        ],
        [
            "assert (Coplanar A B C B3) by (apply col_cop2__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "559af0015af6441cfd9eb8a836f8e5f30f3dcf4a"
        ],
        [
            "destruct (HP B C A C A1 A2 B1 B2 C A3 B3) as [I [? ?]]; try (exists I; Col); try solve[apply perp_right_comm; apply per_perp; assert_diffs; Perp]; try solve[apply perp_sym; apply perp_bisect_perp; auto]; Col; try CopR.",
            "VernacExtend",
            "7d86c89bc00bace2d42c2409564886f6e61564f0"
        ],
        [
            "assert (C <> A3).",
            "VernacExtend",
            "a7922dfbc4550ba6611a389a7085a1b9c677fdb1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HC' := HPerpB1).",
            "VernacExtend",
            "eca77f2d40ea4555966dc17c773e7b2abe670387"
        ],
        [
            "destruct HC' as [[[C' [HMid HCol]] _] _].",
            "VernacExtend",
            "4ac730b1d8df9494d5b23131e82fa08c1082d9bb"
        ],
        [
            "intro; treat_equalities; assert_diffs.",
            "VernacExtend",
            "c082b4d9521f556a73371b47f8df14e245ed047e"
        ],
        [
            "assert (C = C'); [|treat_equalities; auto].",
            "VernacExtend",
            "a50f6c9d85e239593a952ed6df96fbaf02f198b6"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ (perp_bisect_perp _ _ _ _ HPerpB1)); intro HNC'; [apply l6_21 with A1 A2 B C|apply l6_21 with A1 A2 C B]; Col.",
            "VernacExtend",
            "033057fed7cf8f5fd961c0d6ad9d8acd438e1818"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (C <> B3).",
            "VernacExtend",
            "35c54a3a1ab367ac59569246bfe86e5dc00e025a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HC' := HPerpB2).",
            "VernacExtend",
            "e5741bde29d7a1f322c3ac61c62a2b8d0a66ee52"
        ],
        [
            "destruct HC' as [[[C' [HMid HCol]] _] _].",
            "VernacExtend",
            "4ac730b1d8df9494d5b23131e82fa08c1082d9bb"
        ],
        [
            "intro; treat_equalities; assert_diffs.",
            "VernacExtend",
            "c082b4d9521f556a73371b47f8df14e245ed047e"
        ],
        [
            "assert (C = C'); [|treat_equalities; auto].",
            "VernacExtend",
            "a50f6c9d85e239593a952ed6df96fbaf02f198b6"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ (perp_bisect_perp _ _ _ _ HPerpB2)); intro HNC'; [apply l6_21 with B1 B2 A C|apply l6_21 with B1 B2 C A]; Col.",
            "VernacExtend",
            "7e9b0f65e79cd2fba523ba4cc5f7e0bcba394ce6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro; apply HNC; ColR.",
            "VernacExtend",
            "93bec63f6e69b6ed77f652450ad909f20aabd709"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
            "VernacExtend",
            "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
        ],
        [
            "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HNCop1 HCop2 HCop3 HCop4 HNC1.",
            "VernacExtend",
            "79b57b44476ea1bbec62defc88663f06de02e38b"
        ],
        [
            "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
            "VernacExtend",
            "9bec8f0e8521ceca901fae40ac6469ef544062f1"
        ],
        [
            "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
            "VernacExtend",
            "c757a39cfe66960ecef61367b62095979a944db5"
        ],
        [
            "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
            "VernacExtend",
            "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
        ],
        [
            "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
            "VernacExtend",
            "e60d4499ae289aa605d1029bace0dcb39c241e8e"
        ],
        [
            "assert (Coplanar IAB IAC IBD A1) by Cop.",
            "VernacExtend",
            "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
        ],
        [
            "assert (Coplanar IAB IAC IBD A2) by Cop.",
            "VernacExtend",
            "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
        ],
        [
            "assert (Coplanar IAB IAC IBD B1) by Cop.",
            "VernacExtend",
            "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
        ],
        [
            "assert (Coplanar IAB IAC IBD B2) by Cop.",
            "VernacExtend",
            "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
        ],
        [
            "assert (HNC2 : ~ Col A1 A2 D1).",
            "VernacExtend",
            "fa882c959e7f093688e209ec9d7f84c3faa804a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "425f2301965c637306f14143ff55a6aab6c1d161"
        ],
        [
            "apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC3 : ~ Col B1 B2 C1).",
            "VernacExtend",
            "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "941bea5c3d45063ad7d06e5d4e5762a389668539"
        ],
        [
            "apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HParA : Par_strict A1 A2 D1 D2).",
            "VernacExtend",
            "0bf9a3440419caddb17e2ac8901bbebfc6583563"
        ],
        [
            "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
        ],
        [
            "assert (HParB : Par_strict B1 B2 C1 C2).",
            "VernacExtend",
            "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
        ],
        [
            "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
        ],
        [
            "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
            "VernacExtend",
            "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
        ],
        [
            "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
            "VernacExtend",
            "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
        ],
        [
            "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
            "VernacExtend",
            "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
        ],
        [
            "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
            "VernacExtend",
            "be13fb9878af74fa32659f3bef1eb292da0269ff"
        ],
        [
            "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
            "VernacExtend",
            "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
        ],
        [
            "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
            "VernacExtend",
            "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
        ],
        [
            "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
            "VernacExtend",
            "81204629d103933fb479ad2a2f593f031128e0e5"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
            "VernacExtend",
            "c36af9c44ca705c4e53d6c9d30d4e17125055066"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
            "VernacExtend",
            "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
        ],
        [
            "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
            "VernacExtend",
            "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
        ],
        [
            "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
            "VernacExtend",
            "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
        ],
        [
            "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
            "VernacExtend",
            "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
        ],
        [
            "exists I.",
            "VernacExtend",
            "aa4c5aa62c2901539f544753fb6f8678477a222b"
        ],
        [
            "split; assert_diffs; ColR.",
            "VernacExtend",
            "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End bachmann_s_lotschnittaxiom_weak_triangle_circumscription_principle.",
            "VernacEndSegment",
            "c0cbbd9d2248e9562f1ce976ff06d5e7618916a1"
        ]
    ],
    "proofs": [
        {
            "name": "bachmann_s_lotschnittaxiom__weak_triangle_circumscription_principle",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro bla.",
                        "VernacExtend",
                        "990294c9efe224362b19628d57b39dff06b5e8de"
                    ]
                },
                {
                    "command": [
                        "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
                        "VernacExtend",
                        "eeceb336b5f61452b510e071123981b174b278b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear bla; intros HP A B C A1 A2 B1 B2 HNC HPer.",
                        "VernacExtend",
                        "77a4858d9e7ae30c1ed3c735c4cd4ffa917bbce1"
                    ]
                },
                {
                    "command": [
                        "intros HPerpB1 HPerpB2 HCop1 HCop2 HCop3 HCop4.",
                        "VernacExtend",
                        "8586c7202283ec0f7a2caf1c584ea6353c85831c"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_bisect_perp _ _ _ _ HPerpB1) as [A3 [HA [_ [HCol1 [HCol2 _]]]]].",
                        "VernacExtend",
                        "4fea9edde1ebb5206eebea35aad2b1d07f7edd15"
                    ]
                },
                {
                    "command": [
                        "destruct (perp_bisect_perp _ _ _ _ HPerpB2) as [B3 [HB [_ [HCol3 [HCol4 _]]]]].",
                        "VernacExtend",
                        "eb1dd102a53fce237e75017318de568951a2fc01"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B C A3) by (apply col_cop2__cop with A1 A2; Col; Cop).",
                        "VernacExtend",
                        "402e79dc2739e34ea0db6da36a5301c8b8d38474"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B C B3) by (apply col_cop2__cop with B1 B2; Col; Cop).",
                        "VernacExtend",
                        "559af0015af6441cfd9eb8a836f8e5f30f3dcf4a"
                    ]
                },
                {
                    "command": [
                        "destruct (HP B C A C A1 A2 B1 B2 C A3 B3) as [I [? ?]]; try (exists I; Col); try solve[apply perp_right_comm; apply per_perp; assert_diffs; Perp]; try solve[apply perp_sym; apply perp_bisect_perp; auto]; Col; try CopR.",
                        "VernacExtend",
                        "7d86c89bc00bace2d42c2409564886f6e61564f0"
                    ]
                },
                {
                    "command": [
                        "assert (C <> A3).",
                        "VernacExtend",
                        "a7922dfbc4550ba6611a389a7085a1b9c677fdb1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HC' := HPerpB1).",
                        "VernacExtend",
                        "eca77f2d40ea4555966dc17c773e7b2abe670387"
                    ]
                },
                {
                    "command": [
                        "destruct HC' as [[[C' [HMid HCol]] _] _].",
                        "VernacExtend",
                        "4ac730b1d8df9494d5b23131e82fa08c1082d9bb"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; assert_diffs.",
                        "VernacExtend",
                        "c082b4d9521f556a73371b47f8df14e245ed047e"
                    ]
                },
                {
                    "command": [
                        "assert (C = C'); [|treat_equalities; auto].",
                        "VernacExtend",
                        "a50f6c9d85e239593a952ed6df96fbaf02f198b6"
                    ]
                },
                {
                    "command": [
                        "elim (perp_not_col2 _ _ _ _ (perp_bisect_perp _ _ _ _ HPerpB1)); intro HNC'; [apply l6_21 with A1 A2 B C|apply l6_21 with A1 A2 C B]; Col.",
                        "VernacExtend",
                        "033057fed7cf8f5fd961c0d6ad9d8acd438e1818"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (C <> B3).",
                        "VernacExtend",
                        "35c54a3a1ab367ac59569246bfe86e5dc00e025a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HC' := HPerpB2).",
                        "VernacExtend",
                        "e5741bde29d7a1f322c3ac61c62a2b8d0a66ee52"
                    ]
                },
                {
                    "command": [
                        "destruct HC' as [[[C' [HMid HCol]] _] _].",
                        "VernacExtend",
                        "4ac730b1d8df9494d5b23131e82fa08c1082d9bb"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; assert_diffs.",
                        "VernacExtend",
                        "c082b4d9521f556a73371b47f8df14e245ed047e"
                    ]
                },
                {
                    "command": [
                        "assert (C = C'); [|treat_equalities; auto].",
                        "VernacExtend",
                        "a50f6c9d85e239593a952ed6df96fbaf02f198b6"
                    ]
                },
                {
                    "command": [
                        "elim (perp_not_col2 _ _ _ _ (perp_bisect_perp _ _ _ _ HPerpB2)); intro HNC'; [apply l6_21 with B1 B2 A C|apply l6_21 with B1 B2 C A]; Col.",
                        "VernacExtend",
                        "7e9b0f65e79cd2fba523ba4cc5f7e0bcba394ce6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNC; ColR.",
                        "VernacExtend",
                        "93bec63f6e69b6ed77f652450ad909f20aabd709"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
                        "VernacExtend",
                        "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
                    ]
                },
                {
                    "command": [
                        "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HNCop1 HCop2 HCop3 HCop4 HNC1.",
                        "VernacExtend",
                        "79b57b44476ea1bbec62defc88663f06de02e38b"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9bec8f0e8521ceca901fae40ac6469ef544062f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "c757a39cfe66960ecef61367b62095979a944db5"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "e60d4499ae289aa605d1029bace0dcb39c241e8e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A1) by Cop.",
                        "VernacExtend",
                        "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A2) by Cop.",
                        "VernacExtend",
                        "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B1) by Cop.",
                        "VernacExtend",
                        "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B2) by Cop.",
                        "VernacExtend",
                        "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A1 A2 D1).",
                        "VernacExtend",
                        "fa882c959e7f093688e209ec9d7f84c3faa804a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "425f2301965c637306f14143ff55a6aab6c1d161"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC3 : ~ Col B1 B2 C1).",
                        "VernacExtend",
                        "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "941bea5c3d45063ad7d06e5d4e5762a389668539"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HParA : Par_strict A1 A2 D1 D2).",
                        "VernacExtend",
                        "0bf9a3440419caddb17e2ac8901bbebfc6583563"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
                    ]
                },
                {
                    "command": [
                        "assert (HParB : Par_strict B1 B2 C1 C2).",
                        "VernacExtend",
                        "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
                        "VernacExtend",
                        "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
                        "VernacExtend",
                        "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
                    ]
                },
                {
                    "command": [
                        "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
                    ]
                },
                {
                    "command": [
                        "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
                        "VernacExtend",
                        "be13fb9878af74fa32659f3bef1eb292da0269ff"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
                        "VernacExtend",
                        "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
                        "VernacExtend",
                        "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
                    ]
                },
                {
                    "command": [
                        "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
                        "VernacExtend",
                        "81204629d103933fb479ad2a2f593f031128e0e5"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
                        "VernacExtend",
                        "c36af9c44ca705c4e53d6c9d30d4e17125055066"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
                        "VernacExtend",
                        "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
                        "VernacExtend",
                        "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
                        "VernacExtend",
                        "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
                        "VernacExtend",
                        "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
                    ]
                },
                {
                    "command": [
                        "exists I.",
                        "VernacExtend",
                        "aa4c5aa62c2901539f544753fb6f8678477a222b"
                    ]
                },
                {
                    "command": [
                        "split; assert_diffs; ColR.",
                        "VernacExtend",
                        "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}