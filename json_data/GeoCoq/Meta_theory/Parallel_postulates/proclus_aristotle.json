{
    "filename": "Meta_theory/Parallel_postulates/proclus_aristotle.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Export GeoCoq.Meta_theory.Parallel_postulates.proclus_SPP.",
            "VernacRequire",
            "2e7bf0f22fe96612299ac220cc8c52262f6c9f66"
        ],
        [
            "Require Export GeoCoq.Meta_theory.Parallel_postulates.SPP_tarski.",
            "VernacRequire",
            "e4bf9cb1f06e2bd72ea8d5ac6661ae6295408657"
        ],
        [
            "Require Export GeoCoq.Meta_theory.Parallel_postulates.tarski_playfair.",
            "VernacRequire",
            "e339c2ea1016b5f3cbec4b3ec8e31664c0edfa2f"
        ],
        [
            "Require Export GeoCoq.Meta_theory.Parallel_postulates.playfair_alternate_interior_angles.",
            "VernacRequire",
            "7c1a7ff226508495c336393b9c5affd3b67acf5f"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section proclus_aristotle.",
            "VernacBeginSection",
            "fcd7df9dc6f5173e20330e71f48134f4285d4729"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma proclus__aristotle : proclus_postulate -> aristotle_s_axiom.",
            "VernacStartTheoremProof",
            "e8fa3d766bd99b606d6958f5628fd346ebf48ba3"
        ],
        [
            "intros proclus P Q A B C HNCol Hacute.",
            "VernacExtend",
            "c990768102df4931393b29d2c00eaaa867ae3cfc"
        ],
        [
            "assert(HD0 := l10_15 B A B C).",
            "VernacExtend",
            "7d926c6b80cd1b0760803a53e0a0bcf366349b5f"
        ],
        [
            "destruct HD0 as [D0 []]; Col.",
            "VernacExtend",
            "732744439fca6758fbd8b73513c9dafd2dbb4bc1"
        ],
        [
            "assert(HD := segment_construction B D0 P Q).",
            "VernacExtend",
            "9c595f3323efcbcac38f7f0de2082e74a7b1633c"
        ],
        [
            "destruct HD as [D []].",
            "VernacExtend",
            "290f6f3da41e1cf6cae2ba75f3e2b3ffc39a076d"
        ],
        [
            "assert(HNCol1 : ~ Col B A D0) by (apply perp_not_col; auto).",
            "VernacExtend",
            "a6d8dd6550b5964780623b3c07b952f9dc84c59d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(D<>B) by (intro;Between).",
            "VernacExtend",
            "5b142b5dd89b08828237f6e91e0a851e3a6d5e56"
        ],
        [
            "assert(~ Col D B A) by (intro; apply HNCol1; ColR).",
            "VernacExtend",
            "b98c8526781182af11b9fcfd1373ca58438e8a12"
        ],
        [
            "assert(HY0 := l10_15 D B D A).",
            "VernacExtend",
            "e1aaa599555d9792f5ebad458cd2535c407c02d8"
        ],
        [
            "destruct HY0 as [Y0 [HPerp HOS]]; Col.",
            "VernacExtend",
            "b877c43f005e8502ea322c3f07b0c0bd97a67380"
        ],
        [
            "assert(Perp B A B D) by (apply (perp_col1 _ _ _ D0); Perp; Col).",
            "VernacExtend",
            "7be16687c83dffa05261ff17a0a5cd24babe4c18"
        ],
        [
            "assert(HPar : Par B A Y0 D).",
            "VernacExtend",
            "7f8520abf5a3093206e297ab4a8c28aef6d2062a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (l12_9 _ _ _ _ D B); Perp; Cop.",
            "VernacExtend",
            "4407f3574a8fbeac8fbeba5d6bf62fa1169c76c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HY := proclus B A Y0 D B C).",
            "VernacExtend",
            "1cf6ed24c4252bf19dc2057ab82ae668f14bdd92"
        ],
        [
            "destruct HY as [Y []]; Col.",
            "VernacExtend",
            "725e2370ad42f8c0a09cb637a3d4bc722d4b1b1f"
        ],
        [
            "assert (Coplanar B A C D0) by Cop.",
            "VernacExtend",
            "6877c979f1c7f9685d8ff7d96a0943b35f5ae68c"
        ],
        [
            "assert (Coplanar A C B D) by (assert_diffs; assert_cols; apply col2_cop__cop with B D0; Col; Cop).",
            "VernacExtend",
            "84b4dd3bf66ce26151edaea5c88b4e44c8fed9dd"
        ],
        [
            "assert (Coplanar D B A Y0) by Cop.",
            "VernacExtend",
            "080a7ca577c64873442f0cc31ce392a1fd25bd41"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ D) in HPar; Col.",
            "VernacExtend",
            "99ece0da2cc6a1673351010b16ef5c628320a980"
        ],
        [
            "assert(~ Col Y B A) by (apply (par_not_col Y0 D); Col; Par).",
            "VernacExtend",
            "5f5d0b075639f10689cf26294492752b5f56bd06"
        ],
        [
            "assert(HX := l8_18_existence A B Y).",
            "VernacExtend",
            "a3de19b1cbf92aabf0a4b7191eb0d645d722bc5f"
        ],
        [
            "destruct HX as [X []]; Col.",
            "VernacExtend",
            "5ef8d62d523e7d0b9031e37d4af6f5f1553df2cd"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "assert(OS B A C D).",
            "VernacExtend",
            "c1fd480791edb834c7299d5107066c1366c99c6a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (one_side_transitivity _ _ _ D0); auto.",
            "VernacExtend",
            "0b9615fbd9e3fcc59fad646aa709eb512696b9d5"
        ],
        [
            "apply out_one_side; Col.",
            "VernacExtend",
            "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
        ],
        [
            "apply bet_out; Between.",
            "VernacExtend",
            "a53328ff9618e56bf07e5e99b92030d37b76bae5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Hlta : LtA A B C A B D).",
            "VernacExtend",
            "da52383ed5a5b9af9f1a2ed2eb76e497b82a6f10"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct Hacute as [A' [B' [C' [HPer Hlta]]]].",
            "VernacExtend",
            "37036ce8a0a0b8d78c31d9b1e30ba00c9270b8d2"
        ],
        [
            "apply (conga_preserves_lta A B C A' B' C'); try (apply conga_refl); auto.",
            "VernacExtend",
            "2a62c248fab514c6a241ee6c988a97e017a08bce"
        ],
        [
            "destruct Hlta.",
            "VernacExtend",
            "2d5c7bffac11c9727d73763d626c4b570b23b647"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "apply perp_per_2; auto.",
            "VernacExtend",
            "ce73316dda57149f341db74d2f4483c17f80ce14"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HNCol2 : ~ Col B C D).",
            "VernacExtend",
            "2f9481550600758ed2fcc25071744daacdc33b3c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(bet_dec C B D).",
            "VernacExtend",
            "15366524dd876c355019f54c6995dcb8de1b473e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(~ OS B A C D); auto.",
            "VernacExtend",
            "209672375124b9103d2355c9c181c90179d6468b"
        ],
        [
            "apply l9_9.",
            "VernacExtend",
            "34ba4dbe01ab43e518f21b6fe3a2bcb607bf609c"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct Hlta as [_ HNConga].",
            "VernacExtend",
            "1939b3e5aea595b55340a5e07d1a667102258fcf"
        ],
        [
            "apply HNConga.",
            "VernacExtend",
            "db79d2a26988c613b5f6dc1b1ff43767127d134a"
        ],
        [
            "apply (out_conga A B C A B C); try (apply out_trivial); CongA.",
            "VernacExtend",
            "2d850fef0ce4d49675ee5ddf930c9b9a6933aaf9"
        ],
        [
            "apply not_bet_out; Col.",
            "VernacExtend",
            "3501e9718b4b6683af553ccb7072173b48c26cd1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Y<>D) by (intro; subst Y; Col).",
            "VernacExtend",
            "ce21a2877419d90bd8acc60971a3025db41878de"
        ],
        [
            "assert(OS B A C D).",
            "VernacExtend",
            "c1fd480791edb834c7299d5107066c1366c99c6a"
        ],
        [
            "apply (one_side_transitivity _ _ _ D0); auto; apply out_one_side; Col; apply bet_out; auto.",
            "VernacExtend",
            "6757872b24884f8706f8cb009a4738616d4ea58a"
        ],
        [
            "assert(Par_strict B D X Y).",
            "VernacExtend",
            "dee09c79f91bf9b89a404801372591a520a66991"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ Y); Col.",
            "VernacExtend",
            "a0a709647499daf6c5a9fb484e49ce29a91c4887"
        ],
        [
            "apply (l12_9 _ _ _ _ B A); Perp; Cop.",
            "VernacExtend",
            "eb19e9c32298774532d9aa14192524a88ae5f2de"
        ],
        [
            "assert (Coplanar B A C D0) by Cop.",
            "VernacExtend",
            "6877c979f1c7f9685d8ff7d96a0943b35f5ae68c"
        ],
        [
            "assert (Coplanar A C B D) by (assert_diffs; assert_cols; apply col2_cop__cop with B D0; Col; Cop).",
            "VernacExtend",
            "84b4dd3bf66ce26151edaea5c88b4e44c8fed9dd"
        ],
        [
            "apply coplanar_perm_12, col2_cop__cop with B C; Col; Cop.",
            "VernacExtend",
            "9af84ea4a8a017b259e6ad98c3b99327be9a572d"
        ],
        [
            "intro; assert(Col B C D); Col; ColR.",
            "VernacExtend",
            "9047ec932ce82fade86b2dfc7900c81336e7bb6e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(InAngle C A B D) by (apply lea_in_angle; Lea; CongA; Side).",
            "VernacExtend",
            "85a14c34aca7b336f15d79ec5d8f3b5d8ea0ad8c"
        ],
        [
            "assert(Out B C Y).",
            "VernacExtend",
            "4c73106ac7364f2d8546cfc80c0f2d729b61a101"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (col_one_side_out _ A); Col.",
            "VernacExtend",
            "d2c43ee097c4b52c54a24a3013ebd77593661c63"
        ],
        [
            "apply (one_side_transitivity _ _ _ D); auto.",
            "VernacExtend",
            "34270d29405a6ce570669be081871423d3b6f2fd"
        ],
        [
            "apply l12_6.",
            "VernacExtend",
            "c0d0336f1c22c26db46a4e28dbcac4182527f3a2"
        ],
        [
            "apply (par_strict_col_par_strict _ _ _ Y0); Par; Col.",
            "VernacExtend",
            "d3c4417df5d6c559155f3fed67f89ff86a0f39bf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Out B A X).",
            "VernacExtend",
            "585baeec191b81f51bf09fc16f91de3438ff7fef"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (col_one_side_out _ D); Col.",
            "VernacExtend",
            "082a5240f5750bb1b77c3435c42d61362cdc7585"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "apply (one_side_transitivity _ _ _ Y).",
            "VernacExtend",
            "f5ddb375476ef30aa5c375e46812f533bb646cac"
        ],
        [
            "apply l12_6; auto.",
            "VernacExtend",
            "5fb0a84af5ba2a452acc9fc48390f3e1ed4bcd3f"
        ],
        [
            "apply (one_side_transitivity _ _ _ C).",
            "VernacExtend",
            "6a3d52881f855d0d252eb07a41194b9410f8a0f6"
        ],
        [
            "apply out_one_side; try (apply l6_6); Col.",
            "VernacExtend",
            "25edbf4c30edf0ecad3cba34b41ee32094b1878c"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply in_angle_one_side; try (apply l11_24); Col.",
            "VernacExtend",
            "bfea01c42cfbff2e68729c6b0c9a29fee14cdfcf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Per B X Y).",
            "VernacExtend",
            "bbf52475b042db732dbe4d2e28c7629531467ac1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (~ Col B D X) by (apply (par_strict_not_col_1 _ _ _ Y); auto).",
            "VernacExtend",
            "1172ad4d2b8f1516523bcfabb9c1b4ea0b8331d8"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply perp_per_1; auto.",
            "VernacExtend",
            "ab41a784695be3bdb5373292a6707ab942d76fb5"
        ],
        [
            "apply perp_left_comm.",
            "VernacExtend",
            "efa78a8865c34786daf878cacea01a7abf0ecfe8"
        ],
        [
            "apply (perp_col _ A); Col; Perp.",
            "VernacExtend",
            "ceba33dff91beebb3557c1139ed17106a25e353b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Cong B D X Y).",
            "VernacExtend",
            "3634d7a75a8ff1418d18d1d69fe2f46542a3a92a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HAAS := l11_50_2 B Y D Y B X).",
            "VernacExtend",
            "14b96cb903fff297b38fc0a484fc86593937d124"
        ],
        [
            "destruct HAAS; Cong.",
            "VernacExtend",
            "830889b0d11f63151ba291be568959893ed21b1d"
        ],
        [
            "apply not_col_permutation_5; apply (par_strict_not_col_4 _ _ X); auto.",
            "VernacExtend",
            "b0a3044d3cbacaf96469f1613d805abae9d3a548"
        ],
        [
            "apply l11_16; Perp; apply perp_per_2; auto; apply (perp_col _ Y0); Col; Perp.",
            "VernacExtend",
            "9ae9b9082f2fa6f91a5b2c27fa0d26cc83899843"
        ],
        [
            "apply conga_comm.",
            "VernacExtend",
            "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
        ],
        [
            "apply proclus_s_postulate_implies_strong_parallel_postulate in proclus.",
            "VernacExtend",
            "59586d4be8c081be7747ed2978a4cc247ef60b22"
        ],
        [
            "apply strong_parallel_postulate_implies_tarski_s_euclid in proclus.",
            "VernacExtend",
            "6c2a0ed399ced35c4b3c1e5cfff214f26fa54e99"
        ],
        [
            "apply tarski_s_euclid_implies_playfair in proclus.",
            "VernacExtend",
            "ded9a5f2076afd65fd4679e978d6938a84ebc211"
        ],
        [
            "apply playfair__alternate_interior in proclus.",
            "VernacExtend",
            "43296fadbc0cde05209789bce3529a2283026b9c"
        ],
        [
            "rename proclus into aia.",
            "VernacExtend",
            "1ed384c092615165cda86aa9d6e09dbe8d1a186b"
        ],
        [
            "apply aia.",
            "VernacExtend",
            "2f51a5a7bb6005e0ef00509a2b51030d601ec810"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply (l9_8_2 _ _ A).",
            "VernacExtend",
            "f9d90133b70f811fe73b7aa21557089bae8439cd"
        ],
        [
            "apply (col_preserves_two_sides C B); Col; apply in_angle_two_sides; Col.",
            "VernacExtend",
            "6e94a57833384ac6b649527c05ca4fa25aef76e6"
        ],
        [
            "apply invert_one_side; apply out_one_side; Col.",
            "VernacExtend",
            "54ba2022abe7fb35727727dc8308d69a7f125c9c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply par_left_comm.",
            "VernacExtend",
            "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
        ],
        [
            "apply (par_col_par _ _ _ A); Col.",
            "VernacExtend",
            "22e18c997b2acf7e6b06dfcbbabf95edf3afd39c"
        ],
        [
            "apply (par_col_par_2 _ Y0); Col.",
            "VernacExtend",
            "be59d991656c6f6d981c539400422a9b673d4fff"
        ],
        [
            "apply par_strict_par; Par.",
            "VernacExtend",
            "bd274e9937037de1b933d92ccea05ef478ca75e2"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "repeat (split; auto).",
            "VernacExtend",
            "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (l5_6 P Q B D); Cong.",
            "VernacExtend",
            "5e597573d358e8d904464d8d141f8cc960bd1616"
        ],
        [
            "apply le_right_comm.",
            "VernacExtend",
            "53069d9e13cef25115227cddb6ac5ee74a06e4d4"
        ],
        [
            "exists D0.",
            "VernacExtend",
            "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
        ],
        [
            "split; Between; Cong.",
            "VernacExtend",
            "84b13e7bfb7c22f942f13ff4c2e58c3fba58eb9e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(D0=B); auto.",
            "VernacExtend",
            "a904cbca875a50c04e178c184221b596a79c254d"
        ],
        [
            "apply (between_cong D B D0); Between.",
            "VernacExtend",
            "78383a80f4416b405fc8f7d1988c36978ec72fb5"
        ],
        [
            "apply (cong_transitivity _ _ P Q).",
            "VernacExtend",
            "46e914ac228ea42eead33f6810072b8713f94775"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply (cong_transitivity _ _ X Y); Cong.",
            "VernacExtend",
            "efb694b2d0847fc52847c64642da00c49f49e802"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End proclus_aristotle.",
            "VernacEndSegment",
            "d25771e7125402b19410b497b527df2f35ae458d"
        ]
    ],
    "proofs": [
        {
            "name": "proclus__aristotle",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros proclus P Q A B C HNCol Hacute.",
                        "VernacExtend",
                        "c990768102df4931393b29d2c00eaaa867ae3cfc"
                    ]
                },
                {
                    "command": [
                        "assert(HD0 := l10_15 B A B C).",
                        "VernacExtend",
                        "7d926c6b80cd1b0760803a53e0a0bcf366349b5f"
                    ]
                },
                {
                    "command": [
                        "destruct HD0 as [D0 []]; Col.",
                        "VernacExtend",
                        "732744439fca6758fbd8b73513c9dafd2dbb4bc1"
                    ]
                },
                {
                    "command": [
                        "assert(HD := segment_construction B D0 P Q).",
                        "VernacExtend",
                        "9c595f3323efcbcac38f7f0de2082e74a7b1633c"
                    ]
                },
                {
                    "command": [
                        "destruct HD as [D []].",
                        "VernacExtend",
                        "290f6f3da41e1cf6cae2ba75f3e2b3ffc39a076d"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol1 : ~ Col B A D0) by (apply perp_not_col; auto).",
                        "VernacExtend",
                        "a6d8dd6550b5964780623b3c07b952f9dc84c59d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(D<>B) by (intro;Between).",
                        "VernacExtend",
                        "5b142b5dd89b08828237f6e91e0a851e3a6d5e56"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col D B A) by (intro; apply HNCol1; ColR).",
                        "VernacExtend",
                        "b98c8526781182af11b9fcfd1373ca58438e8a12"
                    ]
                },
                {
                    "command": [
                        "assert(HY0 := l10_15 D B D A).",
                        "VernacExtend",
                        "e1aaa599555d9792f5ebad458cd2535c407c02d8"
                    ]
                },
                {
                    "command": [
                        "destruct HY0 as [Y0 [HPerp HOS]]; Col.",
                        "VernacExtend",
                        "b877c43f005e8502ea322c3f07b0c0bd97a67380"
                    ]
                },
                {
                    "command": [
                        "assert(Perp B A B D) by (apply (perp_col1 _ _ _ D0); Perp; Col).",
                        "VernacExtend",
                        "7be16687c83dffa05261ff17a0a5cd24babe4c18"
                    ]
                },
                {
                    "command": [
                        "assert(HPar : Par B A Y0 D).",
                        "VernacExtend",
                        "7f8520abf5a3093206e297ab4a8c28aef6d2062a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (l12_9 _ _ _ _ D B); Perp; Cop.",
                        "VernacExtend",
                        "4407f3574a8fbeac8fbeba5d6bf62fa1169c76c7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(HY := proclus B A Y0 D B C).",
                        "VernacExtend",
                        "1cf6ed24c4252bf19dc2057ab82ae668f14bdd92"
                    ]
                },
                {
                    "command": [
                        "destruct HY as [Y []]; Col.",
                        "VernacExtend",
                        "725e2370ad42f8c0a09cb637a3d4bc722d4b1b1f"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar B A C D0) by Cop.",
                        "VernacExtend",
                        "6877c979f1c7f9685d8ff7d96a0943b35f5ae68c"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A C B D) by (assert_diffs; assert_cols; apply col2_cop__cop with B D0; Col; Cop).",
                        "VernacExtend",
                        "84b4dd3bf66ce26151edaea5c88b4e44c8fed9dd"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar D B A Y0) by Cop.",
                        "VernacExtend",
                        "080a7ca577c64873442f0cc31ce392a1fd25bd41"
                    ]
                },
                {
                    "command": [
                        "CopR.",
                        "VernacExtend",
                        "7b1654670373807fcd176fc85962d78f62c8c69b"
                    ]
                },
                {
                    "command": [
                        "apply (par_not_col_strict _ _ _ _ D) in HPar; Col.",
                        "VernacExtend",
                        "99ece0da2cc6a1673351010b16ef5c628320a980"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col Y B A) by (apply (par_not_col Y0 D); Col; Par).",
                        "VernacExtend",
                        "5f5d0b075639f10689cf26294492752b5f56bd06"
                    ]
                },
                {
                    "command": [
                        "assert(HX := l8_18_existence A B Y).",
                        "VernacExtend",
                        "a3de19b1cbf92aabf0a4b7191eb0d645d722bc5f"
                    ]
                },
                {
                    "command": [
                        "destruct HX as [X []]; Col.",
                        "VernacExtend",
                        "5ef8d62d523e7d0b9031e37d4af6f5f1553df2cd"
                    ]
                },
                {
                    "command": [
                        "exists X.",
                        "VernacExtend",
                        "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
                    ]
                },
                {
                    "command": [
                        "exists Y.",
                        "VernacExtend",
                        "49394996b896109363dce3db54779891f7a20742"
                    ]
                },
                {
                    "command": [
                        "assert(OS B A C D).",
                        "VernacExtend",
                        "c1fd480791edb834c7299d5107066c1366c99c6a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ D0); auto.",
                        "VernacExtend",
                        "0b9615fbd9e3fcc59fad646aa709eb512696b9d5"
                    ]
                },
                {
                    "command": [
                        "apply out_one_side; Col.",
                        "VernacExtend",
                        "1d7069c5cdecce022c6850f0e1213a9b1a9203a3"
                    ]
                },
                {
                    "command": [
                        "apply bet_out; Between.",
                        "VernacExtend",
                        "a53328ff9618e56bf07e5e99b92030d37b76bae5"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(Hlta : LtA A B C A B D).",
                        "VernacExtend",
                        "da52383ed5a5b9af9f1a2ed2eb76e497b82a6f10"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct Hacute as [A' [B' [C' [HPer Hlta]]]].",
                        "VernacExtend",
                        "37036ce8a0a0b8d78c31d9b1e30ba00c9270b8d2"
                    ]
                },
                {
                    "command": [
                        "apply (conga_preserves_lta A B C A' B' C'); try (apply conga_refl); auto.",
                        "VernacExtend",
                        "2a62c248fab514c6a241ee6c988a97e017a08bce"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta.",
                        "VernacExtend",
                        "2d5c7bffac11c9727d73763d626c4b570b23b647"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; auto.",
                        "VernacExtend",
                        "f55656560cb5b4267b2671cabb23ed36e27b289e"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; auto.",
                        "VernacExtend",
                        "ce73316dda57149f341db74d2f4483c17f80ce14"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol2 : ~ Col B C D).",
                        "VernacExtend",
                        "2f9481550600758ed2fcc25071744daacdc33b3c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec C B D).",
                        "VernacExtend",
                        "15366524dd876c355019f54c6995dcb8de1b473e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(~ OS B A C D); auto.",
                        "VernacExtend",
                        "209672375124b9103d2355c9c181c90179d6468b"
                    ]
                },
                {
                    "command": [
                        "apply l9_9.",
                        "VernacExtend",
                        "34ba4dbe01ab43e518f21b6fe3a2bcb607bf609c"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct Hlta as [_ HNConga].",
                        "VernacExtend",
                        "1939b3e5aea595b55340a5e07d1a667102258fcf"
                    ]
                },
                {
                    "command": [
                        "apply HNConga.",
                        "VernacExtend",
                        "db79d2a26988c613b5f6dc1b1ff43767127d134a"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga A B C A B C); try (apply out_trivial); CongA.",
                        "VernacExtend",
                        "2d850fef0ce4d49675ee5ddf930c9b9a6933aaf9"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out; Col.",
                        "VernacExtend",
                        "3501e9718b4b6683af553ccb7072173b48c26cd1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Y<>D) by (intro; subst Y; Col).",
                        "VernacExtend",
                        "ce21a2877419d90bd8acc60971a3025db41878de"
                    ]
                },
                {
                    "command": [
                        "assert(OS B A C D).",
                        "VernacExtend",
                        "c1fd480791edb834c7299d5107066c1366c99c6a"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ D0); auto; apply out_one_side; Col; apply bet_out; auto.",
                        "VernacExtend",
                        "6757872b24884f8706f8cb009a4738616d4ea58a"
                    ]
                },
                {
                    "command": [
                        "assert(Par_strict B D X Y).",
                        "VernacExtend",
                        "dee09c79f91bf9b89a404801372591a520a66991"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (par_not_col_strict _ _ _ _ Y); Col.",
                        "VernacExtend",
                        "a0a709647499daf6c5a9fb484e49ce29a91c4887"
                    ]
                },
                {
                    "command": [
                        "apply (l12_9 _ _ _ _ B A); Perp; Cop.",
                        "VernacExtend",
                        "eb19e9c32298774532d9aa14192524a88ae5f2de"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar B A C D0) by Cop.",
                        "VernacExtend",
                        "6877c979f1c7f9685d8ff7d96a0943b35f5ae68c"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A C B D) by (assert_diffs; assert_cols; apply col2_cop__cop with B D0; Col; Cop).",
                        "VernacExtend",
                        "84b4dd3bf66ce26151edaea5c88b4e44c8fed9dd"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col2_cop__cop with B C; Col; Cop.",
                        "VernacExtend",
                        "9af84ea4a8a017b259e6ad98c3b99327be9a572d"
                    ]
                },
                {
                    "command": [
                        "intro; assert(Col B C D); Col; ColR.",
                        "VernacExtend",
                        "9047ec932ce82fade86b2dfc7900c81336e7bb6e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(InAngle C A B D) by (apply lea_in_angle; Lea; CongA; Side).",
                        "VernacExtend",
                        "85a14c34aca7b336f15d79ec5d8f3b5d8ea0ad8c"
                    ]
                },
                {
                    "command": [
                        "assert(Out B C Y).",
                        "VernacExtend",
                        "4c73106ac7364f2d8546cfc80c0f2d729b61a101"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ A); Col.",
                        "VernacExtend",
                        "d2c43ee097c4b52c54a24a3013ebd77593661c63"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ D); auto.",
                        "VernacExtend",
                        "34270d29405a6ce570669be081871423d3b6f2fd"
                    ]
                },
                {
                    "command": [
                        "apply l12_6.",
                        "VernacExtend",
                        "c0d0336f1c22c26db46a4e28dbcac4182527f3a2"
                    ]
                },
                {
                    "command": [
                        "apply (par_strict_col_par_strict _ _ _ Y0); Par; Col.",
                        "VernacExtend",
                        "d3c4417df5d6c559155f3fed67f89ff86a0f39bf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(Out B A X).",
                        "VernacExtend",
                        "585baeec191b81f51bf09fc16f91de3438ff7fef"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ D); Col.",
                        "VernacExtend",
                        "082a5240f5750bb1b77c3435c42d61362cdc7585"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry.",
                        "VernacExtend",
                        "e5557f90c70cace73e26d7184e8ac12051fe7563"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ Y).",
                        "VernacExtend",
                        "f5ddb375476ef30aa5c375e46812f533bb646cac"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; auto.",
                        "VernacExtend",
                        "5fb0a84af5ba2a452acc9fc48390f3e1ed4bcd3f"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ C).",
                        "VernacExtend",
                        "6a3d52881f855d0d252eb07a41194b9410f8a0f6"
                    ]
                },
                {
                    "command": [
                        "apply out_one_side; try (apply l6_6); Col.",
                        "VernacExtend",
                        "25edbf4c30edf0ecad3cba34b41ee32094b1878c"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_one_side; try (apply l11_24); Col.",
                        "VernacExtend",
                        "bfea01c42cfbff2e68729c6b0c9a29fee14cdfcf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(Per B X Y).",
                        "VernacExtend",
                        "bbf52475b042db732dbe4d2e28c7629531467ac1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B D X) by (apply (par_strict_not_col_1 _ _ _ Y); auto).",
                        "VernacExtend",
                        "1172ad4d2b8f1516523bcfabb9c1b4ea0b8331d8"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; auto.",
                        "VernacExtend",
                        "ab41a784695be3bdb5373292a6707ab942d76fb5"
                    ]
                },
                {
                    "command": [
                        "apply perp_left_comm.",
                        "VernacExtend",
                        "efa78a8865c34786daf878cacea01a7abf0ecfe8"
                    ]
                },
                {
                    "command": [
                        "apply (perp_col _ A); Col; Perp.",
                        "VernacExtend",
                        "ceba33dff91beebb3557c1139ed17106a25e353b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(Cong B D X Y).",
                        "VernacExtend",
                        "3634d7a75a8ff1418d18d1d69fe2f46542a3a92a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HAAS := l11_50_2 B Y D Y B X).",
                        "VernacExtend",
                        "14b96cb903fff297b38fc0a484fc86593937d124"
                    ]
                },
                {
                    "command": [
                        "destruct HAAS; Cong.",
                        "VernacExtend",
                        "830889b0d11f63151ba291be568959893ed21b1d"
                    ]
                },
                {
                    "command": [
                        "apply not_col_permutation_5; apply (par_strict_not_col_4 _ _ X); auto.",
                        "VernacExtend",
                        "b0a3044d3cbacaf96469f1613d805abae9d3a548"
                    ]
                },
                {
                    "command": [
                        "apply l11_16; Perp; apply perp_per_2; auto; apply (perp_col _ Y0); Col; Perp.",
                        "VernacExtend",
                        "9ae9b9082f2fa6f91a5b2c27fa0d26cc83899843"
                    ]
                },
                {
                    "command": [
                        "apply conga_comm.",
                        "VernacExtend",
                        "8a9528ae55bbd37bdeb0d7641cf2d9b61df978f1"
                    ]
                },
                {
                    "command": [
                        "apply proclus_s_postulate_implies_strong_parallel_postulate in proclus.",
                        "VernacExtend",
                        "59586d4be8c081be7747ed2978a4cc247ef60b22"
                    ]
                },
                {
                    "command": [
                        "apply strong_parallel_postulate_implies_tarski_s_euclid in proclus.",
                        "VernacExtend",
                        "6c2a0ed399ced35c4b3c1e5cfff214f26fa54e99"
                    ]
                },
                {
                    "command": [
                        "apply tarski_s_euclid_implies_playfair in proclus.",
                        "VernacExtend",
                        "ded9a5f2076afd65fd4679e978d6938a84ebc211"
                    ]
                },
                {
                    "command": [
                        "apply playfair__alternate_interior in proclus.",
                        "VernacExtend",
                        "43296fadbc0cde05209789bce3529a2283026b9c"
                    ]
                },
                {
                    "command": [
                        "rename proclus into aia.",
                        "VernacExtend",
                        "1ed384c092615165cda86aa9d6e09dbe8d1a186b"
                    ]
                },
                {
                    "command": [
                        "apply aia.",
                        "VernacExtend",
                        "2f51a5a7bb6005e0ef00509a2b51030d601ec810"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l9_2.",
                        "VernacExtend",
                        "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
                    ]
                },
                {
                    "command": [
                        "apply (l9_8_2 _ _ A).",
                        "VernacExtend",
                        "f9d90133b70f811fe73b7aa21557089bae8439cd"
                    ]
                },
                {
                    "command": [
                        "apply (col_preserves_two_sides C B); Col; apply in_angle_two_sides; Col.",
                        "VernacExtend",
                        "6e94a57833384ac6b649527c05ca4fa25aef76e6"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side; apply out_one_side; Col.",
                        "VernacExtend",
                        "54ba2022abe7fb35727727dc8308d69a7f125c9c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply par_left_comm.",
                        "VernacExtend",
                        "84929f4178a7ac53d8c182ac718edc2b3b6999ef"
                    ]
                },
                {
                    "command": [
                        "apply (par_col_par _ _ _ A); Col.",
                        "VernacExtend",
                        "22e18c997b2acf7e6b06dfcbbabf95edf3afd39c"
                    ]
                },
                {
                    "command": [
                        "apply (par_col_par_2 _ Y0); Col.",
                        "VernacExtend",
                        "be59d991656c6f6d981c539400422a9b673d4fff"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_par; Par.",
                        "VernacExtend",
                        "bd274e9937037de1b933d92ccea05ef478ca75e2"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "repeat (split; auto).",
                        "VernacExtend",
                        "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 P Q B D); Cong.",
                        "VernacExtend",
                        "5e597573d358e8d904464d8d141f8cc960bd1616"
                    ]
                },
                {
                    "command": [
                        "apply le_right_comm.",
                        "VernacExtend",
                        "53069d9e13cef25115227cddb6ac5ee74a06e4d4"
                    ]
                },
                {
                    "command": [
                        "exists D0.",
                        "VernacExtend",
                        "4f10b5915670a2a6d65c56aa2114c8a09d10889b"
                    ]
                },
                {
                    "command": [
                        "split; Between; Cong.",
                        "VernacExtend",
                        "84b13e7bfb7c22f942f13ff4c2e58c3fba58eb9e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert(D0=B); auto.",
                        "VernacExtend",
                        "a904cbca875a50c04e178c184221b596a79c254d"
                    ]
                },
                {
                    "command": [
                        "apply (between_cong D B D0); Between.",
                        "VernacExtend",
                        "78383a80f4416b405fc8f7d1988c36978ec72fb5"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ P Q).",
                        "VernacExtend",
                        "46e914ac228ea42eead33f6810072b8713f94775"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ X Y); Cong.",
                        "VernacExtend",
                        "efb694b2d0847fc52847c64642da00c49f49e802"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}