{
    "filename": "Meta_theory/Parallel_postulates/universal_posidonius_postulate_par_perp_perp.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.rah_thales_postulate.",
            "VernacRequire",
            "837a233e4ce30b39d7cb839e3757d0d6cb1e79eb"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.thales_converse_postulate_weak_triangle_circumscription_principle.",
            "VernacRequire",
            "4b1315ad4b9385b3856d022d9cc1bb4aa25c59a0"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.thales_postulate_thales_converse_postulate.",
            "VernacRequire",
            "7e50931d8f1aaa26c149f0539b8a9a05574dfe80"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.",
            "VernacRequire",
            "d3a11e1e562ccf35a4522cde221978cbccbb3c02"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.saccheri.",
            "VernacRequire",
            "7f4ea2c902af7c230435bbab1ce2ec0513b4262b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section universal_posidonius_postulate_perpendicular_transversal_postulate.",
            "VernacBeginSection",
            "955dea9de2e725a508da86939165c1d181cfb308"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma universal_posidonius_postulate__perpendicular_transversal_postulate : universal_posidonius_postulate -> perpendicular_transversal_postulate.",
            "VernacStartTheoremProof",
            "cdfe2855cf11d72514ec7a476edf20f750049797"
        ],
        [
            "intros HP A B C D P Q HPar HPerp1 HCop.",
            "VernacExtend",
            "18cc4fd28f2287deacf8c3cb07be7b43bef725dd"
        ],
        [
            "elim HPar; intro HParS; [|destruct HParS as [_ [_ [HC1 HC2]]]; assert_diffs; apply perp_sym; apply perp_col0 with A B; Col; ColR].",
            "VernacExtend",
            "439253645cbbf7744c6db9047ace7406f9156bce"
        ],
        [
            "assert (H := HPerp1); destruct H as [R HR]; apply perp_in_col in HR; destruct HR as [HC1 HC2].",
            "VernacExtend",
            "f456ee509bbaa77c16cc88b05e8e8ab108e1652b"
        ],
        [
            "assert (HEF : exists E F, Col A B E /\\ Col C D F /\\ Perp A B E F /\\ E <> R).",
            "VernacExtend",
            "e74650b3a725a902611dfbe47d03672e984647f9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (l8_18_existence A B C) as [E1 [HC3 HPerp2]]; [apply par_strict_not_col_1 with D; Par|].",
            "VernacExtend",
            "cc3fd1f222dc2c9914f84c1badb8b3b3173f9afb"
        ],
        [
            "destruct (l8_18_existence A B D) as [E2 [HC4 HPerp3]]; [apply par_strict_not_col_1 with C; Par|].",
            "VernacExtend",
            "3c72d2cb97d9d96cc04bbabe59e55ad6cfcd4d82"
        ],
        [
            "elim (eq_dec_points E1 R); intro; treat_equalities; [|exists E1, C; repeat (split; Col; Perp)].",
            "VernacExtend",
            "411f97773a0e2ce44ca10fbedc073edfda5cfc49"
        ],
        [
            "elim (eq_dec_points E1 E2); intro; treat_equalities; [|exists E2, D; repeat (split; Col; Perp)].",
            "VernacExtend",
            "806ca32fdf1fd03313e674b1a494c0271fc4ac83"
        ],
        [
            "assert (HC4 : Col E1 C D) by (apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop).",
            "VernacExtend",
            "5b6aac88729ad23acc74324fcfea129d9919f7b3"
        ],
        [
            "destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists E1; Col.",
            "VernacExtend",
            "0ddeff19388ca0d40f413c1868a19a527fd3e280"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HEF as [E [F [HC3 [HC4 [HPerp2 HD1]]]]].",
            "VernacExtend",
            "ef9a03da8e07143a846de619c649032d332a784b"
        ],
        [
            "assert (HGH : exists G H, Col A B G /\\ Col C D H /\\ Perp A B G H /\\ E <> G /\\ F <> H).",
            "VernacExtend",
            "5102df305304802947d215c478ae372510328ddc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (l8_18_existence A B C) as [E1 [HC5 HPerp3]]; [apply par_strict_not_col_1 with D; Par|].",
            "VernacExtend",
            "c658663a900575c35b8b1b6c28b7843c8b4a2fd1"
        ],
        [
            "destruct (l8_18_existence A B D) as [E2 [HC6 HPerp4]]; [apply par_strict_not_col_1 with C; Par|].",
            "VernacExtend",
            "2f20311305516ee4389fe77c52e242529f1dc6c3"
        ],
        [
            "elim (eq_dec_points E1 E); intro HD; treat_equalities; [|exists E1, C; repeat (split; Col; Perp); intro; treat_equalities; apply HD; apply l6_21 with A B F E; assert_diffs; Col; [elim (perp_not_col2 _ _ _ _ HPerp2); Col| apply cop_perp2__col with A B; Perp]]; Cop.",
            "VernacExtend",
            "984b98360373acb11ec5d4efb9b6b2202779a0c6"
        ],
        [
            "elim (eq_dec_points E1 E2); intro HD'; treat_equalities; [assert (HC7 : Col E1 C D) by (apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop); destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists E1; Col|].",
            "VernacExtend",
            "1dace4cfec5f45080b91974192fbcd2847d3f538"
        ],
        [
            "exists E2, D; repeat (split; Col; Perp); intro; treat_equalities; apply HD'.",
            "VernacExtend",
            "22f700755c55e10d141ce59dab89210825eb7490"
        ],
        [
            "apply l6_21 with A B F E1; assert_diffs; Col; [elim (perp_not_col2 _ _ _ _ HPerp2); Col|apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop].",
            "VernacExtend",
            "b5f153f743d802829e90d4f47d259481ab6fe241"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HGH as [G [H [HC5 [HC6 [HPerp3 [HD2 HD3]]]]]].",
            "VernacExtend",
            "a00356194741024fe0b228905c7b95ee6f510200"
        ],
        [
            "assert (HSacc1 : Saccheri E F H G).",
            "VernacExtend",
            "613e46db5d67d3c48620a5b2c847688e3ac137ff"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; [apply perp_per_1; apply perp_col0 with A B; Perp|].",
            "VernacExtend",
            "02ec7da511de1792dc08f61c0b21a8691e16a2e0"
        ],
        [
            "split; [apply perp_per_1; apply perp_sym; apply perp_col0 with A B; Perp|].",
            "VernacExtend",
            "a618ac7031f6950bbc0f699ee1860fd8d654d0c1"
        ],
        [
            "split; [assert (Cong E F G H); Cong; apply HP with A B C D; Col|].",
            "VernacExtend",
            "e13e5365b2c67f8f8a4e98d3b731e46ed2227847"
        ],
        [
            "apply l12_6; apply par_strict_col2_par_strict with C D; Col.",
            "VernacExtend",
            "75f8307f0b295105418d232cf59fb53460ee2b19"
        ],
        [
            "apply par_strict_symmetry; apply par_strict_col2_par_strict with A B; Col; Par.",
            "VernacExtend",
            "14f9c2a4de08a4843e00eeeec57f73ba0ec47626"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (midpoint_existence E G) as [M1 HMid1].",
            "VernacExtend",
            "d546334b1ba189adfd32770b439aa0c194e96b58"
        ],
        [
            "destruct (midpoint_existence F H) as [M2 HMid2].",
            "VernacExtend",
            "acf78bfac3473e2654ca9956afdfdfc256aa1913"
        ],
        [
            "assert (HLamb := mid2_sac__lam6521 _ _ _ _ _ _ HSacc1 HMid2 HMid1).",
            "VernacExtend",
            "26089ecf7648f5f07e2d5b869aa3ce433cbd5a8f"
        ],
        [
            "assert (HSacc2 : Saccheri E F M2 M1).",
            "VernacExtend",
            "fc8fa41c6ff74b907dbd08d01d7e596bdd31d9d5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; [unfold Lambert in *; spliter; Perp|].",
            "VernacExtend",
            "6ca696a5efb2623e5a5231868bacc05ec4c0cf2d"
        ],
        [
            "split; [unfold Lambert in *; spliter; Perp|].",
            "VernacExtend",
            "6ca696a5efb2623e5a5231868bacc05ec4c0cf2d"
        ],
        [
            "assert (HCong : Cong E F M1 M2); [|split; Cong].",
            "VernacExtend",
            "fea4cc74f69e580a3f9f07aee1e1404e1f99a046"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply HP with A B C D; Col; try solve [assert_diffs; assert_cols; ColR].",
            "VernacExtend",
            "aefc5d94348d05b6006915b590eb27d70095b77d"
        ],
        [
            "apply perp_sym; apply perp_col0 with E M1; try solve [assert_diffs; assert_cols; Col; ColR].",
            "VernacExtend",
            "d15413e172eac94c495a9512292506030f5fc53e"
        ],
        [
            "apply per_perp; unfold Lambert in *; spliter; Perp.",
            "VernacExtend",
            "a2fad16aeda68fb0ff4779a17f0cc6f1474838a9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l12_6; apply par_strict_col2_par_strict with C D; Col; try solve [assert_diffs; assert_cols; Col; ColR].",
            "VernacExtend",
            "e5d0cb6af27363459a919d38cb6dc23822fd620b"
        ],
        [
            "apply par_strict_symmetry; apply par_strict_col2_par_strict with A B; Col; Par; assert_diffs; assert_cols; Col; ColR.",
            "VernacExtend",
            "ada42e801014e53972d65cb432d7aa48e7b18653"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HRAH : postulate_of_right_saccheri_quadrilaterals) by (apply per_sac__rah with M1 M2 F E; try apply sac_perm; unfold Lambert in *; spliter; auto).",
            "VernacExtend",
            "7828cafaa75de767315fb892978a6b5215f1251c"
        ],
        [
            "assert (HP' : forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
            "VernacExtend",
            "058e3eb87a08ea93e1d544094652292798080e8b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "cut bachmann_s_lotschnittaxiom.",
            "VernacExtend",
            "df88cf99742de0008e5d84232538c4fded97f642"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear HP; clear dependent P; clear dependent Q; clear dependent R.",
            "VernacExtend",
            "f5816a02226e4bae48f1dcffe6d0f9899a8fc2dc"
        ],
        [
            "intros bla A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
            "VernacExtend",
            "2e85a4783902129e6f57a97451d54ada04d137b9"
        ],
        [
            "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC1.",
            "VernacExtend",
            "1fcea4dadcfb163923c835bbada7608593e15524"
        ],
        [
            "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
            "VernacExtend",
            "9bec8f0e8521ceca901fae40ac6469ef544062f1"
        ],
        [
            "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
            "VernacExtend",
            "c757a39cfe66960ecef61367b62095979a944db5"
        ],
        [
            "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
            "VernacExtend",
            "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
        ],
        [
            "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
            "VernacExtend",
            "e60d4499ae289aa605d1029bace0dcb39c241e8e"
        ],
        [
            "assert (Coplanar IAB IAC IBD A1) by Cop.",
            "VernacExtend",
            "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
        ],
        [
            "assert (Coplanar IAB IAC IBD A2) by Cop.",
            "VernacExtend",
            "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
        ],
        [
            "assert (Coplanar IAB IAC IBD B1) by Cop.",
            "VernacExtend",
            "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
        ],
        [
            "assert (Coplanar IAB IAC IBD B2) by Cop.",
            "VernacExtend",
            "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
        ],
        [
            "assert (HNC2 : ~ Col A1 A2 D1).",
            "VernacExtend",
            "fa882c959e7f093688e209ec9d7f84c3faa804a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "425f2301965c637306f14143ff55a6aab6c1d161"
        ],
        [
            "apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC3 : ~ Col B1 B2 C1).",
            "VernacExtend",
            "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "941bea5c3d45063ad7d06e5d4e5762a389668539"
        ],
        [
            "apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HParA : Par_strict A1 A2 D1 D2).",
            "VernacExtend",
            "0bf9a3440419caddb17e2ac8901bbebfc6583563"
        ],
        [
            "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
        ],
        [
            "assert (HParB : Par_strict B1 B2 C1 C2).",
            "VernacExtend",
            "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
        ],
        [
            "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
        ],
        [
            "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
            "VernacExtend",
            "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
        ],
        [
            "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
            "VernacExtend",
            "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
        ],
        [
            "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
            "VernacExtend",
            "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
        ],
        [
            "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
            "VernacExtend",
            "be13fb9878af74fa32659f3bef1eb292da0269ff"
        ],
        [
            "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
            "VernacExtend",
            "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
        ],
        [
            "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
            "VernacExtend",
            "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
        ],
        [
            "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
            "VernacExtend",
            "81204629d103933fb479ad2a2f593f031128e0e5"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
            "VernacExtend",
            "c36af9c44ca705c4e53d6c9d30d4e17125055066"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
            "VernacExtend",
            "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
        ],
        [
            "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
            "VernacExtend",
            "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
        ],
        [
            "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
            "VernacExtend",
            "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
        ],
        [
            "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
            "VernacExtend",
            "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
        ],
        [
            "exists I.",
            "VernacExtend",
            "aa4c5aa62c2901539f544753fb6f8678477a222b"
        ],
        [
            "split; assert_diffs; ColR.",
            "VernacExtend",
            "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom.",
            "VernacExtend",
            "06042f8659144083b710b0d90fcab95c30b24582"
        ],
        [
            "apply thales_converse_postulate__weak_triangle_circumscription_principle.",
            "VernacExtend",
            "f26ca9c77d308e2af2de5ffd5542067737fda5d0"
        ],
        [
            "apply thales_postulate__thales_converse_postulate.",
            "VernacExtend",
            "4f8935932141d3a6dd9ebd4c3f78597d08c6e574"
        ],
        [
            "apply rah__thales_postulate; assumption.",
            "VernacExtend",
            "688ef322303d74b4f655e0a6cfd7c15c869132a7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC : ~ Col E R F).",
            "VernacExtend",
            "ce0368f8ed643e66ee0237745d1ea3b0a4a28d05"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; intro; destruct HParS as [_ [_ [_ HF]]]; apply HF; exists F; split; Col; ColR.",
            "VernacExtend",
            "7d043b271f5ccc4b60efe5c789706c93656ed779"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (~ Col C D R).",
            "VernacExtend",
            "ffd67295185392d29fa90136067a18bf6ada9343"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs; intro; destruct HParS as [_ [_ [_ HF]]]; apply HF; exists R; split; Col; ColR.",
            "VernacExtend",
            "1535c320daca67c8675c9b1b62155622d6d8b199"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Col E R A) by (assert_diffs; ColR).",
            "VernacExtend",
            "0b37d60356159e86a0793a24ca7d837de7309ce4"
        ],
        [
            "assert (Coplanar E R F A) by Cop.",
            "VernacExtend",
            "b9f972f78121243a5606a465941a8f79b9ab8940"
        ],
        [
            "assert (Col E R B) by (assert_diffs; ColR).",
            "VernacExtend",
            "607c6cfd4511dbe052f4265d3c38946f57de81e5"
        ],
        [
            "assert (Coplanar E R F B) by Cop.",
            "VernacExtend",
            "a0491ac3dbf49ab50f1eec364303f19de9b815f5"
        ],
        [
            "assert (~ Col A B F) by (assert_diffs; intro; apply HNC; ColR).",
            "VernacExtend",
            "7895c32b9fabeae30b5c7df2918d1e5690dd7ffe"
        ],
        [
            "assert (Coplanar A B F C) by (assert_diffs; apply col2_cop__cop with C D; try (apply pars__coplanar); Col).",
            "VernacExtend",
            "989624b160bacd2d088977b88b5a8723465a87dc"
        ],
        [
            "assert (Coplanar A B F D) by (assert_diffs; apply col2_cop__cop with C D; try (apply pars__coplanar); Col).",
            "VernacExtend",
            "6c27577aa01cbd36b863dbe460d9f20ab9557acb"
        ],
        [
            "assert (Coplanar C D R P) by (assert_diffs; apply col2_cop__cop with P Q; Col; Cop).",
            "VernacExtend",
            "a095e7f7b82214846f2b52419756b8393b50f06a"
        ],
        [
            "assert (Coplanar C D R Q) by (assert_diffs; apply col2_cop__cop with P Q; Col; Cop).",
            "VernacExtend",
            "d100c4d169b637e69afd3f4d232dc70bb8f1bc9c"
        ],
        [
            "assert (Coplanar A B Q F) by CopR.",
            "VernacExtend",
            "904a4e4aa15be2efa26f5426533fcb450d70c02b"
        ],
        [
            "assert (Coplanar E R F P) by CopR.",
            "VernacExtend",
            "c28376134402038f85aea072af765a34fa8ada4c"
        ],
        [
            "assert (Coplanar E R F Q) by CopR.",
            "VernacExtend",
            "d1c8d400e85865bc4fe1ef59987543a37b8f6677"
        ],
        [
            "assert (Coplanar E R F C) by CopR.",
            "VernacExtend",
            "d6ba16c4dba5039146be6bd34b58ead0e5a246b8"
        ],
        [
            "assert (Coplanar E R F D) by CopR.",
            "VernacExtend",
            "3f8b897cfbd11b4a9d2f870cd7d351e7a7922e00"
        ],
        [
            "assert (Coplanar A B Q E) by Cop.",
            "VernacExtend",
            "31f3db941e7e2daee0f271917038c16e48d91708"
        ],
        [
            "destruct (HP' A B E F P Q C D E R F) as [S [HC7 HC8]]; Col; [apply perp_col0 with F M2; try (apply perp_sym; apply per_perp); try solve [assert_diffs; assert_cols; Col; ColR]; rewrite (lam_per__rah M1 _ _ _); try apply lam_perm; assumption|].",
            "VernacExtend",
            "cc0f85f15c4961317a9d71e23543f1630e20d3d0"
        ],
        [
            "assert (HSacc3 : Saccheri E F S R).",
            "VernacExtend",
            "eb257e4e5a896adddb638ea976dfdf57ca9addcb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; [apply perp_per_1; apply perp_col0 with A B; Perp|].",
            "VernacExtend",
            "02ec7da511de1792dc08f61c0b21a8691e16a2e0"
        ],
        [
            "split; [apply perp_per_1; apply perp_col0 with P Q; try apply perp_col0 with A B; Perp; intro; treat_equalities; destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists S; Col|].",
            "VernacExtend",
            "baecf2ec9880d526cc7d729d3f5a233bfdd37290"
        ],
        [
            "split; [assert (Cong E F R S); Cong; apply HP with A B C D; Col; apply perp_col0 with P Q; Perp; intro; treat_equalities; destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists R; Col|].",
            "VernacExtend",
            "61b216980acfa76c4f6f6af59d8529bcf6db6dc8"
        ],
        [
            "apply l12_6; apply par_strict_col2_par_strict with C D; Col; try solve [assert_diffs; assert_cols; Col; ColR]; try apply par_strict_symmetry; try apply par_strict_col2_par_strict with A B; Col; Par.",
            "VernacExtend",
            "0e84d14ebfb8423f4f6575149d171f5bd232a3da"
        ],
        [
            "intro; treat_equalities; assert (HC8 : Col E P Q) by (apply col_cop2_perp2__col with F A B; Col; Perp; Cop).",
            "VernacExtend",
            "0b995ff4ba5b085d7b03a87be09437f5f91ecd10"
        ],
        [
            "apply HD1; elim (perp_not_col2 _ _ _ _ HPerp2); intro; [apply l6_21 with A B E F|apply l6_21 with A B F E]; assert_diffs; Col; try ColR.",
            "VernacExtend",
            "c61f4054343ee16c58ad86db7dad4536c57a7891"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply perp_col0 with S R; try solve [assert_diffs; assert_cols; Col; ColR].",
            "VernacExtend",
            "68c971b8baa8f1aff33b256c8d28f707658f5987"
        ],
        [
            "apply perp_col0 with F S; try solve [assert_diffs; assert_cols; Col; ColR].",
            "VernacExtend",
            "8b9077092083549c061c9a3343dfc9887642cb3b"
        ],
        [
            "apply per_perp; try solve[apply sac_distincts in HSacc3; spliter; auto].",
            "VernacExtend",
            "c830afe901030d955a251789d6fd54d31a3190c3"
        ],
        [
            "apply l8_2; apply HRAH with E; apply sac_perm; assumption.",
            "VernacExtend",
            "269fae9ba1a9d4d50e443437027b5f23d188a59d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End universal_posidonius_postulate_perpendicular_transversal_postulate.",
            "VernacEndSegment",
            "90c2bf356a9071b40a6aa0c55b11e0ad25094a5e"
        ]
    ],
    "proofs": [
        {
            "name": "universal_posidonius_postulate__perpendicular_transversal_postulate",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros HP A B C D P Q HPar HPerp1 HCop.",
                        "VernacExtend",
                        "18cc4fd28f2287deacf8c3cb07be7b43bef725dd"
                    ]
                },
                {
                    "command": [
                        "elim HPar; intro HParS; [|destruct HParS as [_ [_ [HC1 HC2]]]; assert_diffs; apply perp_sym; apply perp_col0 with A B; Col; ColR].",
                        "VernacExtend",
                        "439253645cbbf7744c6db9047ace7406f9156bce"
                    ]
                },
                {
                    "command": [
                        "assert (H := HPerp1); destruct H as [R HR]; apply perp_in_col in HR; destruct HR as [HC1 HC2].",
                        "VernacExtend",
                        "f456ee509bbaa77c16cc88b05e8e8ab108e1652b"
                    ]
                },
                {
                    "command": [
                        "assert (HEF : exists E F, Col A B E /\\ Col C D F /\\ Perp A B E F /\\ E <> R).",
                        "VernacExtend",
                        "e74650b3a725a902611dfbe47d03672e984647f9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B C) as [E1 [HC3 HPerp2]]; [apply par_strict_not_col_1 with D; Par|].",
                        "VernacExtend",
                        "cc3fd1f222dc2c9914f84c1badb8b3b3173f9afb"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B D) as [E2 [HC4 HPerp3]]; [apply par_strict_not_col_1 with C; Par|].",
                        "VernacExtend",
                        "3c72d2cb97d9d96cc04bbabe59e55ad6cfcd4d82"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points E1 R); intro; treat_equalities; [|exists E1, C; repeat (split; Col; Perp)].",
                        "VernacExtend",
                        "411f97773a0e2ce44ca10fbedc073edfda5cfc49"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points E1 E2); intro; treat_equalities; [|exists E2, D; repeat (split; Col; Perp)].",
                        "VernacExtend",
                        "806ca32fdf1fd03313e674b1a494c0271fc4ac83"
                    ]
                },
                {
                    "command": [
                        "assert (HC4 : Col E1 C D) by (apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop).",
                        "VernacExtend",
                        "5b6aac88729ad23acc74324fcfea129d9919f7b3"
                    ]
                },
                {
                    "command": [
                        "destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists E1; Col.",
                        "VernacExtend",
                        "0ddeff19388ca0d40f413c1868a19a527fd3e280"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HEF as [E [F [HC3 [HC4 [HPerp2 HD1]]]]].",
                        "VernacExtend",
                        "ef9a03da8e07143a846de619c649032d332a784b"
                    ]
                },
                {
                    "command": [
                        "assert (HGH : exists G H, Col A B G /\\ Col C D H /\\ Perp A B G H /\\ E <> G /\\ F <> H).",
                        "VernacExtend",
                        "5102df305304802947d215c478ae372510328ddc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B C) as [E1 [HC5 HPerp3]]; [apply par_strict_not_col_1 with D; Par|].",
                        "VernacExtend",
                        "c658663a900575c35b8b1b6c28b7843c8b4a2fd1"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A B D) as [E2 [HC6 HPerp4]]; [apply par_strict_not_col_1 with C; Par|].",
                        "VernacExtend",
                        "2f20311305516ee4389fe77c52e242529f1dc6c3"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points E1 E); intro HD; treat_equalities; [|exists E1, C; repeat (split; Col; Perp); intro; treat_equalities; apply HD; apply l6_21 with A B F E; assert_diffs; Col; [elim (perp_not_col2 _ _ _ _ HPerp2); Col| apply cop_perp2__col with A B; Perp]]; Cop.",
                        "VernacExtend",
                        "984b98360373acb11ec5d4efb9b6b2202779a0c6"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points E1 E2); intro HD'; treat_equalities; [assert (HC7 : Col E1 C D) by (apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop); destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists E1; Col|].",
                        "VernacExtend",
                        "1dace4cfec5f45080b91974192fbcd2847d3f538"
                    ]
                },
                {
                    "command": [
                        "exists E2, D; repeat (split; Col; Perp); intro; treat_equalities; apply HD'.",
                        "VernacExtend",
                        "22f700755c55e10d141ce59dab89210825eb7490"
                    ]
                },
                {
                    "command": [
                        "apply l6_21 with A B F E1; assert_diffs; Col; [elim (perp_not_col2 _ _ _ _ HPerp2); Col|apply cop_perp2__col with A B; Perp; apply par__coplanar in HPar; Cop].",
                        "VernacExtend",
                        "b5f153f743d802829e90d4f47d259481ab6fe241"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HGH as [G [H [HC5 [HC6 [HPerp3 [HD2 HD3]]]]]].",
                        "VernacExtend",
                        "a00356194741024fe0b228905c7b95ee6f510200"
                    ]
                },
                {
                    "command": [
                        "assert (HSacc1 : Saccheri E F H G).",
                        "VernacExtend",
                        "613e46db5d67d3c48620a5b2c847688e3ac137ff"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; [apply perp_per_1; apply perp_col0 with A B; Perp|].",
                        "VernacExtend",
                        "02ec7da511de1792dc08f61c0b21a8691e16a2e0"
                    ]
                },
                {
                    "command": [
                        "split; [apply perp_per_1; apply perp_sym; apply perp_col0 with A B; Perp|].",
                        "VernacExtend",
                        "a618ac7031f6950bbc0f699ee1860fd8d654d0c1"
                    ]
                },
                {
                    "command": [
                        "split; [assert (Cong E F G H); Cong; apply HP with A B C D; Col|].",
                        "VernacExtend",
                        "e13e5365b2c67f8f8a4e98d3b731e46ed2227847"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; apply par_strict_col2_par_strict with C D; Col.",
                        "VernacExtend",
                        "75f8307f0b295105418d232cf59fb53460ee2b19"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_symmetry; apply par_strict_col2_par_strict with A B; Col; Par.",
                        "VernacExtend",
                        "14f9c2a4de08a4843e00eeeec57f73ba0ec47626"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence E G) as [M1 HMid1].",
                        "VernacExtend",
                        "d546334b1ba189adfd32770b439aa0c194e96b58"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence F H) as [M2 HMid2].",
                        "VernacExtend",
                        "acf78bfac3473e2654ca9956afdfdfc256aa1913"
                    ]
                },
                {
                    "command": [
                        "assert (HLamb := mid2_sac__lam6521 _ _ _ _ _ _ HSacc1 HMid2 HMid1).",
                        "VernacExtend",
                        "26089ecf7648f5f07e2d5b869aa3ce433cbd5a8f"
                    ]
                },
                {
                    "command": [
                        "assert (HSacc2 : Saccheri E F M2 M1).",
                        "VernacExtend",
                        "fc8fa41c6ff74b907dbd08d01d7e596bdd31d9d5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; [unfold Lambert in *; spliter; Perp|].",
                        "VernacExtend",
                        "6ca696a5efb2623e5a5231868bacc05ec4c0cf2d"
                    ]
                },
                {
                    "command": [
                        "split; [unfold Lambert in *; spliter; Perp|].",
                        "VernacExtend",
                        "6ca696a5efb2623e5a5231868bacc05ec4c0cf2d"
                    ]
                },
                {
                    "command": [
                        "assert (HCong : Cong E F M1 M2); [|split; Cong].",
                        "VernacExtend",
                        "fea4cc74f69e580a3f9f07aee1e1404e1f99a046"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply HP with A B C D; Col; try solve [assert_diffs; assert_cols; ColR].",
                        "VernacExtend",
                        "aefc5d94348d05b6006915b590eb27d70095b77d"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym; apply perp_col0 with E M1; try solve [assert_diffs; assert_cols; Col; ColR].",
                        "VernacExtend",
                        "d15413e172eac94c495a9512292506030f5fc53e"
                    ]
                },
                {
                    "command": [
                        "apply per_perp; unfold Lambert in *; spliter; Perp.",
                        "VernacExtend",
                        "a2fad16aeda68fb0ff4779a17f0cc6f1474838a9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; apply par_strict_col2_par_strict with C D; Col; try solve [assert_diffs; assert_cols; Col; ColR].",
                        "VernacExtend",
                        "e5d0cb6af27363459a919d38cb6dc23822fd620b"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_symmetry; apply par_strict_col2_par_strict with A B; Col; Par; assert_diffs; assert_cols; Col; ColR.",
                        "VernacExtend",
                        "ada42e801014e53972d65cb432d7aa48e7b18653"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HRAH : postulate_of_right_saccheri_quadrilaterals) by (apply per_sac__rah with M1 M2 F E; try apply sac_perm; unfold Lambert in *; spliter; auto).",
                        "VernacExtend",
                        "7828cafaa75de767315fb892978a6b5215f1251c"
                    ]
                },
                {
                    "command": [
                        "assert (HP' : forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
                        "VernacExtend",
                        "058e3eb87a08ea93e1d544094652292798080e8b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "cut bachmann_s_lotschnittaxiom.",
                        "VernacExtend",
                        "df88cf99742de0008e5d84232538c4fded97f642"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear HP; clear dependent P; clear dependent Q; clear dependent R.",
                        "VernacExtend",
                        "f5816a02226e4bae48f1dcffe6d0f9899a8fc2dc"
                    ]
                },
                {
                    "command": [
                        "intros bla A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
                        "VernacExtend",
                        "2e85a4783902129e6f57a97451d54ada04d137b9"
                    ]
                },
                {
                    "command": [
                        "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC1.",
                        "VernacExtend",
                        "1fcea4dadcfb163923c835bbada7608593e15524"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9bec8f0e8521ceca901fae40ac6469ef544062f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "c757a39cfe66960ecef61367b62095979a944db5"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "e60d4499ae289aa605d1029bace0dcb39c241e8e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A1) by Cop.",
                        "VernacExtend",
                        "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A2) by Cop.",
                        "VernacExtend",
                        "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B1) by Cop.",
                        "VernacExtend",
                        "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B2) by Cop.",
                        "VernacExtend",
                        "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A1 A2 D1).",
                        "VernacExtend",
                        "fa882c959e7f093688e209ec9d7f84c3faa804a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "425f2301965c637306f14143ff55a6aab6c1d161"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC3 : ~ Col B1 B2 C1).",
                        "VernacExtend",
                        "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "941bea5c3d45063ad7d06e5d4e5762a389668539"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HParA : Par_strict A1 A2 D1 D2).",
                        "VernacExtend",
                        "0bf9a3440419caddb17e2ac8901bbebfc6583563"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
                    ]
                },
                {
                    "command": [
                        "assert (HParB : Par_strict B1 B2 C1 C2).",
                        "VernacExtend",
                        "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
                        "VernacExtend",
                        "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
                        "VernacExtend",
                        "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
                    ]
                },
                {
                    "command": [
                        "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
                    ]
                },
                {
                    "command": [
                        "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
                        "VernacExtend",
                        "be13fb9878af74fa32659f3bef1eb292da0269ff"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
                        "VernacExtend",
                        "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
                        "VernacExtend",
                        "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
                    ]
                },
                {
                    "command": [
                        "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
                        "VernacExtend",
                        "81204629d103933fb479ad2a2f593f031128e0e5"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
                        "VernacExtend",
                        "c36af9c44ca705c4e53d6c9d30d4e17125055066"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
                        "VernacExtend",
                        "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
                        "VernacExtend",
                        "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
                        "VernacExtend",
                        "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
                        "VernacExtend",
                        "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
                    ]
                },
                {
                    "command": [
                        "exists I.",
                        "VernacExtend",
                        "aa4c5aa62c2901539f544753fb6f8678477a222b"
                    ]
                },
                {
                    "command": [
                        "split; assert_diffs; ColR.",
                        "VernacExtend",
                        "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom.",
                        "VernacExtend",
                        "06042f8659144083b710b0d90fcab95c30b24582"
                    ]
                },
                {
                    "command": [
                        "apply thales_converse_postulate__weak_triangle_circumscription_principle.",
                        "VernacExtend",
                        "f26ca9c77d308e2af2de5ffd5542067737fda5d0"
                    ]
                },
                {
                    "command": [
                        "apply thales_postulate__thales_converse_postulate.",
                        "VernacExtend",
                        "4f8935932141d3a6dd9ebd4c3f78597d08c6e574"
                    ]
                },
                {
                    "command": [
                        "apply rah__thales_postulate; assumption.",
                        "VernacExtend",
                        "688ef322303d74b4f655e0a6cfd7c15c869132a7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col E R F).",
                        "VernacExtend",
                        "ce0368f8ed643e66ee0237745d1ea3b0a4a28d05"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; intro; destruct HParS as [_ [_ [_ HF]]]; apply HF; exists F; split; Col; ColR.",
                        "VernacExtend",
                        "7d043b271f5ccc4b60efe5c789706c93656ed779"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C D R).",
                        "VernacExtend",
                        "ffd67295185392d29fa90136067a18bf6ada9343"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; intro; destruct HParS as [_ [_ [_ HF]]]; apply HF; exists R; split; Col; ColR.",
                        "VernacExtend",
                        "1535c320daca67c8675c9b1b62155622d6d8b199"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Col E R A) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "0b37d60356159e86a0793a24ca7d837de7309ce4"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F A) by Cop.",
                        "VernacExtend",
                        "b9f972f78121243a5606a465941a8f79b9ab8940"
                    ]
                },
                {
                    "command": [
                        "assert (Col E R B) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "607c6cfd4511dbe052f4265d3c38946f57de81e5"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F B) by Cop.",
                        "VernacExtend",
                        "a0491ac3dbf49ab50f1eec364303f19de9b815f5"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B F) by (assert_diffs; intro; apply HNC; ColR).",
                        "VernacExtend",
                        "7895c32b9fabeae30b5c7df2918d1e5690dd7ffe"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B F C) by (assert_diffs; apply col2_cop__cop with C D; try (apply pars__coplanar); Col).",
                        "VernacExtend",
                        "989624b160bacd2d088977b88b5a8723465a87dc"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B F D) by (assert_diffs; apply col2_cop__cop with C D; try (apply pars__coplanar); Col).",
                        "VernacExtend",
                        "6c27577aa01cbd36b863dbe460d9f20ab9557acb"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D R P) by (assert_diffs; apply col2_cop__cop with P Q; Col; Cop).",
                        "VernacExtend",
                        "a095e7f7b82214846f2b52419756b8393b50f06a"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D R Q) by (assert_diffs; apply col2_cop__cop with P Q; Col; Cop).",
                        "VernacExtend",
                        "d100c4d169b637e69afd3f4d232dc70bb8f1bc9c"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B Q F) by CopR.",
                        "VernacExtend",
                        "904a4e4aa15be2efa26f5426533fcb450d70c02b"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F P) by CopR.",
                        "VernacExtend",
                        "c28376134402038f85aea072af765a34fa8ada4c"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F Q) by CopR.",
                        "VernacExtend",
                        "d1c8d400e85865bc4fe1ef59987543a37b8f6677"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F C) by CopR.",
                        "VernacExtend",
                        "d6ba16c4dba5039146be6bd34b58ead0e5a246b8"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E R F D) by CopR.",
                        "VernacExtend",
                        "3f8b897cfbd11b4a9d2f870cd7d351e7a7922e00"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B Q E) by Cop.",
                        "VernacExtend",
                        "31f3db941e7e2daee0f271917038c16e48d91708"
                    ]
                },
                {
                    "command": [
                        "destruct (HP' A B E F P Q C D E R F) as [S [HC7 HC8]]; Col; [apply perp_col0 with F M2; try (apply perp_sym; apply per_perp); try solve [assert_diffs; assert_cols; Col; ColR]; rewrite (lam_per__rah M1 _ _ _); try apply lam_perm; assumption|].",
                        "VernacExtend",
                        "cc0f85f15c4961317a9d71e23543f1630e20d3d0"
                    ]
                },
                {
                    "command": [
                        "assert (HSacc3 : Saccheri E F S R).",
                        "VernacExtend",
                        "eb257e4e5a896adddb638ea976dfdf57ca9addcb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; [apply perp_per_1; apply perp_col0 with A B; Perp|].",
                        "VernacExtend",
                        "02ec7da511de1792dc08f61c0b21a8691e16a2e0"
                    ]
                },
                {
                    "command": [
                        "split; [apply perp_per_1; apply perp_col0 with P Q; try apply perp_col0 with A B; Perp; intro; treat_equalities; destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists S; Col|].",
                        "VernacExtend",
                        "baecf2ec9880d526cc7d729d3f5a233bfdd37290"
                    ]
                },
                {
                    "command": [
                        "split; [assert (Cong E F R S); Cong; apply HP with A B C D; Col; apply perp_col0 with P Q; Perp; intro; treat_equalities; destruct HParS as [_ [_ [_ HF]]]; exfalso; apply HF; exists R; Col|].",
                        "VernacExtend",
                        "61b216980acfa76c4f6f6af59d8529bcf6db6dc8"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; apply par_strict_col2_par_strict with C D; Col; try solve [assert_diffs; assert_cols; Col; ColR]; try apply par_strict_symmetry; try apply par_strict_col2_par_strict with A B; Col; Par.",
                        "VernacExtend",
                        "0e84d14ebfb8423f4f6575149d171f5bd232a3da"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; assert (HC8 : Col E P Q) by (apply col_cop2_perp2__col with F A B; Col; Perp; Cop).",
                        "VernacExtend",
                        "0b995ff4ba5b085d7b03a87be09437f5f91ecd10"
                    ]
                },
                {
                    "command": [
                        "apply HD1; elim (perp_not_col2 _ _ _ _ HPerp2); intro; [apply l6_21 with A B E F|apply l6_21 with A B F E]; assert_diffs; Col; try ColR.",
                        "VernacExtend",
                        "c61f4054343ee16c58ad86db7dad4536c57a7891"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with S R; try solve [assert_diffs; assert_cols; Col; ColR].",
                        "VernacExtend",
                        "68c971b8baa8f1aff33b256c8d28f707658f5987"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with F S; try solve [assert_diffs; assert_cols; Col; ColR].",
                        "VernacExtend",
                        "8b9077092083549c061c9a3343dfc9887642cb3b"
                    ]
                },
                {
                    "command": [
                        "apply per_perp; try solve[apply sac_distincts in HSacc3; spliter; auto].",
                        "VernacExtend",
                        "c830afe901030d955a251789d6fd54d31a3190c3"
                    ]
                },
                {
                    "command": [
                        "apply l8_2; apply HRAH with E; apply sac_perm; assumption.",
                        "VernacExtend",
                        "269fae9ba1a9d4d50e443437027b5f23d188a59d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}