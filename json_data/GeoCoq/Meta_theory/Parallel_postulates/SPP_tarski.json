{
    "filename": "Meta_theory/Parallel_postulates/SPP_tarski.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.tarski_s_euclid_remove_degenerated_cases.",
            "VernacRequire",
            "c4a3e621f9db67626d77985647185065e086bdc4"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section SPP_tarski.",
            "VernacBeginSection",
            "426d8b775919f96107b58e3a58eec498e38f3254"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma impossible_case_5 : forall P Q R S T U I, BetS P T Q -> BetS R T S -> BetS Q U R -> ~ Col P Q S -> ~ Col P R U -> Par P R Q S -> Par P S Q R -> Bet S Q I -> Bet U I P -> False.",
            "VernacStartTheoremProof",
            "5b693dc8aa35574c0b389386a36f1f3b4fcfe95f"
        ],
        [
            "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HSQI HPUI.",
            "VernacExtend",
            "716c6db3ebf9c054f9f9973602fee232957ed902"
        ],
        [
            "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
            "VernacExtend",
            "72646675144fa32d619bc079d6f44aa444801a8e"
        ],
        [
            "assert (HTS : TS Q S P U) by (assert_diffs; spliter; assert_cols; repeat split; Col; try (exists I; Col; Between); intro; apply HNC'; ColR).",
            "VernacExtend",
            "4687bd3967d544752b1a57a942d8180d76320308"
        ],
        [
            "apply l9_9 in HTS; apply HTS.",
            "VernacExtend",
            "458ebf04a92a2e3f0acb2b4b414e490336fb330f"
        ],
        [
            "apply one_side_transitivity with R.",
            "VernacExtend",
            "61e1b7af9a9c422a53a4d3b9ee7546561f95b3d7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l12_6; apply par_not_col_strict with P; Col; Par.",
            "VernacExtend",
            "d391a949b150701f281d1d062f9eea12dab1b104"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HQS : Q <> S) by (assert_diffs; assumption).",
            "VernacExtend",
            "ddcfcdeca13983588c0f5221d8dbe96afef05f9d"
        ],
        [
            "assert (HQSQ : Col Q S Q) by Col.",
            "VernacExtend",
            "c9be4f46d3c8ae25569a3d0ba2bf87c1c5c37b96"
        ],
        [
            "assert (HRUQ : Col R U Q) by (spliter; assert_cols; Col).",
            "VernacExtend",
            "fbed379bd471d2c713f99c5484cd020f6d457553"
        ],
        [
            "rewrite (l9_19 Q S R U Q HQSQ HRUQ).",
            "VernacExtend",
            "240b54c59031c2a90e242773b2c47dc83d5849cb"
        ],
        [
            "split; spliter; try (intro; apply HNC; assert_cols; ColR); repeat split; Between.",
            "VernacExtend",
            "4c5feec756e0d6f01112534a663f84a56d80b6e7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma impossible_case_6 : forall P Q R S T U I, BetS P T Q -> BetS R T S -> BetS Q U R -> ~ Col P Q S -> ~ Col P R U -> Par P R Q S -> Par P S Q R -> Bet S Q I -> Bet I P U -> False.",
            "VernacStartTheoremProof",
            "9e8ebfd3bb61103b5f7fb506bd59f77d6145c455"
        ],
        [
            "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HSQI HPUI.",
            "VernacExtend",
            "716c6db3ebf9c054f9f9973602fee232957ed902"
        ],
        [
            "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
            "VernacExtend",
            "72646675144fa32d619bc079d6f44aa444801a8e"
        ],
        [
            "apply between_symmetry in HPUI.",
            "VernacExtend",
            "1352d9308b8191f5c904e7751f00ed571635cb29"
        ],
        [
            "destruct (inner_pasch S U I Q P HSQI HPUI) as [J [HBet1 HBet2]].",
            "VernacExtend",
            "62e43cbf79579008061e2a8f8d0e09c4f0668d9c"
        ],
        [
            "assert (HParS : Par_strict P S Q U).",
            "VernacExtend",
            "9d3f52a11419369a7a789ee67035c15334ac01f6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_not_col_strict with R.",
            "VernacExtend",
            "27f5b519b2b7aa81e2767b553470be4a0c4f65b6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "spliter; assert_cols.",
            "VernacExtend",
            "2f0e635d703c67f3a72089b4946d710c0c4d5ead"
        ],
        [
            "apply par_col_par with R; Par.",
            "VernacExtend",
            "c29f9978191f0e0d82cafd8e5c54d82c123999c0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "spliter; assert_cols; ColR.",
            "VernacExtend",
            "99bd4dd45362b182c38684f1710dbc27aa05da39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; apply HNC.",
            "VernacExtend",
            "2527c124b321c6be26e5ab0506d7a2f78bb0616e"
        ],
        [
            "spliter; assert_cols; ColR.",
            "VernacExtend",
            "99bd4dd45362b182c38684f1710dbc27aa05da39"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply HParS; exists J; assert_cols; Col.",
            "VernacExtend",
            "3a3f7c54cf3a6dfa49a6e602d468343ae29812c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma impossible_case_7 : forall P Q R S T U I, BetS P T Q -> BetS R T S -> BetS Q U R -> ~ Col P Q S -> ~ Col P R U -> Par P R Q S -> Par P S Q R -> Col P U I -> Bet Q I S -> False.",
            "VernacStartTheoremProof",
            "48097828c5323de39d08b671be91323b2b5781fd"
        ],
        [
            "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HPUI HSQI.",
            "VernacExtend",
            "3afccf98b2eb63aca2422fe607a8af4245868660"
        ],
        [
            "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
            "VernacExtend",
            "72646675144fa32d619bc079d6f44aa444801a8e"
        ],
        [
            "elim (eq_dec_points I S); intro HIS; treat_equalities.",
            "VernacExtend",
            "4e0f19ea3f559ac7d52ac150888046b52b6019cb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HParS : Par_strict Q R P I) by (apply par_not_col_strict with P; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR).",
            "VernacExtend",
            "9a0b52907d67fc9dc79cab3fca6a45d6375a679e"
        ],
        [
            "apply HParS; exists U; spliter; assert_cols; Col.",
            "VernacExtend",
            "6ac75fc22966980d4fde3cf668c5376b801fe15e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HTS : TS P U Q S) by (assert_diffs; spliter; assert_cols; repeat split; Col; try (exists I; Col; Between); intro; apply HNC; ColR).",
            "VernacExtend",
            "894c182610006845e9b009a54aef0103e8b6345e"
        ],
        [
            "apply l9_9 in HTS; apply HTS.",
            "VernacExtend",
            "458ebf04a92a2e3f0acb2b4b414e490336fb330f"
        ],
        [
            "exists R; split.",
            "VernacExtend",
            "63bef3d051765425ebbbd7f09556207cef7d9110"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "spliter; assert_diffs; assert_cols.",
            "VernacExtend",
            "3bad04b77bb9f231a8f058d1df9473b010960772"
        ],
        [
            "split; try (intro; apply HNC; ColR).",
            "VernacExtend",
            "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
        ],
        [
            "split; try (intro; apply HNC; ColR).",
            "VernacExtend",
            "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
        ],
        [
            "exists U; Col; Between.",
            "VernacExtend",
            "9beee5ecdfc6898170242c494e05aa03b4123246"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HPTQ as [HPTQ HDiff1].",
            "VernacExtend",
            "a6311103d7c295dcd01be8058ec41c14681afcdd"
        ],
        [
            "destruct HQUR as [HQUR HDiff2].",
            "VernacExtend",
            "0734433fbb57b91913265e074f6449180acba889"
        ],
        [
            "apply between_symmetry in HQUR.",
            "VernacExtend",
            "a3d995ae17a55149c357438ce5f5cb08ba8ea910"
        ],
        [
            "destruct (inner_pasch R P Q U T HQUR HPTQ) as [J [HPJU HRJT]].",
            "VernacExtend",
            "50b5e6010296993e8b612ea7d2fdbc93e8bc0575"
        ],
        [
            "assert (HRJS : Bet R J S) by (spliter; eBetween).",
            "VernacExtend",
            "c3a2c4d37173eb360e3298f0595a702e6dbfe00d"
        ],
        [
            "spliter; assert_diffs; assert_cols.",
            "VernacExtend",
            "3bad04b77bb9f231a8f058d1df9473b010960772"
        ],
        [
            "split; try (intro; apply HNC; ColR).",
            "VernacExtend",
            "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
        ],
        [
            "split; try (intro; apply HNC; ColR).",
            "VernacExtend",
            "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
        ],
        [
            "exists J; split; Col; Between.",
            "VernacExtend",
            "7087033e482045641d203b2c2ac25f1d6c45ecd3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma impossible_case_8 : forall P Q R S T U I, BetS P T Q -> BetS R T S -> BetS Q U R -> ~ Col P Q S -> ~ Col P R U -> Par P R Q S -> Par P S Q R -> Col P U I -> Bet I S Q -> False.",
            "VernacStartTheoremProof",
            "843e79e0b57b4a365da426b2a2fa08262e793f1b"
        ],
        [
            "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HPUI HSQI.",
            "VernacExtend",
            "3afccf98b2eb63aca2422fe607a8af4245868660"
        ],
        [
            "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
            "VernacExtend",
            "72646675144fa32d619bc079d6f44aa444801a8e"
        ],
        [
            "elim HPUI; clear HPUI; intro HPUI.",
            "VernacExtend",
            "e140fadb9a3ab56cae2df8baa49128f5ad95f452"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Par_strict P S Q R) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
            "VernacExtend",
            "437378f1b5a286f6ade43420121283e3584b7b1e"
        ],
        [
            "apply between_symmetry in HSQI.",
            "VernacExtend",
            "48b725c6c4ff612f39ddc2362da74751dc685bd5"
        ],
        [
            "destruct (inner_pasch P Q I U S HPUI HSQI) as [J [HQJU HPJS]]; exists J.",
            "VernacExtend",
            "7e4a28162b458c41c1c436dbb6ce3184dcd70283"
        ],
        [
            "spliter; assert_diffs; assert_cols; split; Col; ColR.",
            "VernacExtend",
            "babc92ae5a6716eae8fe83bd77f0158d3e812eea"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HPUI; clear HPUI; intro HPUI.",
            "VernacExtend",
            "e140fadb9a3ab56cae2df8baa49128f5ad95f452"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Par_strict P S Q R) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
            "VernacExtend",
            "437378f1b5a286f6ade43420121283e3584b7b1e"
        ],
        [
            "apply between_symmetry in HSQI.",
            "VernacExtend",
            "48b725c6c4ff612f39ddc2362da74751dc685bd5"
        ],
        [
            "destruct (outer_pasch U Q I P S HPUI HSQI) as [J [HQJU HPSJ]]; exists J.",
            "VernacExtend",
            "c9620f87c7e3878f7865535db63ece6d281adb06"
        ],
        [
            "spliter; assert_diffs; assert_cols; split; Col; ColR.",
            "VernacExtend",
            "babc92ae5a6716eae8fe83bd77f0158d3e812eea"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : Par_strict P R Q S) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
            "VernacExtend",
            "b716fa04aad99d7491828154fe620da4067d24ba"
        ],
        [
            "destruct HQUR as [HQUR HDiff].",
            "VernacExtend",
            "6a597bf44693506bdf9912b6e92a8fbbd3faddbc"
        ],
        [
            "destruct (outer_pasch Q I U R P HQUR HPUI) as [J [HQJI HRPJ]]; exists J.",
            "VernacExtend",
            "7629c236201ac0a422a776148b469c7f5d84b908"
        ],
        [
            "spliter; assert_diffs; assert_cols; split; Col.",
            "VernacExtend",
            "e99a8e4d0fb806bc822535fca96de3c9537246a6"
        ],
        [
            "elim (eq_dec_points Q I); intro HQI; treat_equalities; Col; ColR.",
            "VernacExtend",
            "3a8980e155a333122d42a42567413950601b07af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma strong_parallel_postulate_implies_tarski_s_euclid_aux : strong_parallel_postulate -> (forall A B C D T, A <> B -> A <> C -> A <> D -> A <> T -> B <> C -> B <> D -> B <> T -> C <> D -> C <> T -> D <> T -> ~ Col A B C -> Bet A D T -> Bet B D C -> exists B', exists B'', exists MB, exists X, Bet A B X /\\ Par_strict B C T X /\\ BetS B MB T /\\ BetS B' MB B'' /\\ Cong B MB T MB /\\ Cong B' MB B'' MB /\\ Col B B' D /\\ Bet B'' T X /\\ B <> B' /\\ B'' <> T).",
            "VernacStartTheoremProof",
            "43ea3b2c831b4526d800fc910230a3ad054b5d73"
        ],
        [
            "intros HSPP A B C D T HAB HAC HAD HAT HBC HBD HBT HCD HCT HDT HABC HADT HBDC.",
            "VernacExtend",
            "bae539de62fe260536662fb0bdb076aad1a9b9ff"
        ],
        [
            "destruct (symmetric_point_construction D B) as [B' HB'].",
            "VernacExtend",
            "9d59685b74da65e79f9beeba2d85f8ddd642f519"
        ],
        [
            "destruct (midpoint_distinct_2 B D B' HBD HB') as [HB'D HBB'].",
            "VernacExtend",
            "c8746c40e1e966765cac9a5051d6c9338868ae4f"
        ],
        [
            "destruct HB' as [HBDB' HCong1].",
            "VernacExtend",
            "2fb691535928950cb8ef5c241b4b760abf7987a9"
        ],
        [
            "apply between_symmetry in HADT.",
            "VernacExtend",
            "e22f031ffcde1116723e6515ba23aed4a317c453"
        ],
        [
            "apply between_symmetry in HBDB'.",
            "VernacExtend",
            "7370729d8f0937cdc9962d01d8689873f9e4cfbe"
        ],
        [
            "destruct (outer_pasch T B' D A B HADT HBDB') as [B''' [HTB'''B' HABB''']].",
            "VernacExtend",
            "ec16ad22be515964851bc2d978e10cdd0d917269"
        ],
        [
            "destruct (midpoint_existence B T) as [MB HMB].",
            "VernacExtend",
            "c75232767885025c555f9f2f992956070b53544a"
        ],
        [
            "destruct (midpoint_distinct_1 MB B T HBT HMB) as [HBMB HMBT].",
            "VernacExtend",
            "97b34a9d239a6a760a049ed6bc087b9227ca7d85"
        ],
        [
            "destruct HMB as [HBMBT HCong2].",
            "VernacExtend",
            "10c7e0df2098d9cd421f713f2f5f0b6538613c16"
        ],
        [
            "destruct (symmetric_point_construction B' MB) as [B'' HB''].",
            "VernacExtend",
            "4a4c01e697a01b0ad90752425935d5f0d27f7e0c"
        ],
        [
            "assert (HB'MB : MB <> B').",
            "VernacExtend",
            "fdda09a6a9bb6338f35047c38077c60a93cf823a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : ~ Col B' D MB) by (intro; apply HABC; assert_cols; ColR).",
            "VernacExtend",
            "b902b996bbc78d38a48ef46ce00bbe1acf610c93"
        ],
        [
            "intro; treat_equalities; apply H; Col.",
            "VernacExtend",
            "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (midpoint_distinct_2 MB B' B'' HB'MB HB'') as [HB'B'' HB''MB].",
            "VernacExtend",
            "c387630d037cd1974699fc9dab89807326ce188c"
        ],
        [
            "destruct HB'' as [HB'MBB'' HCong3].",
            "VernacExtend",
            "4028863890228701973e018667769077afdde37e"
        ],
        [
            "assert (H1 : BetS B MB T) by (repeat split; Between).",
            "VernacExtend",
            "feec160be7755b49fd10252a810d411598f797d7"
        ],
        [
            "assert (H2 : BetS B' MB B'') by (repeat split; Between).",
            "VernacExtend",
            "2427cc0c9529113b01601cc27055eb48794f2424"
        ],
        [
            "assert (HB'T : B' <> T).",
            "VernacExtend",
            "6e65bcb460c16860856531eb2694d184694a01a4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : ~ Col B B' T) by (intro; apply HABC; assert_cols; ColR).",
            "VernacExtend",
            "1a8a7eac72c22ae647e423a69ff95862eec888da"
        ],
        [
            "intro; treat_equalities; apply H; Col.",
            "VernacExtend",
            "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HB'B''' : B' <> B''').",
            "VernacExtend",
            "15691047ffaacca79b8fc2c8fb6b721d3f6b5127"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : ~ Col A B B') by (intro; apply HABC; assert_cols; ColR).",
            "VernacExtend",
            "9dd81cdf8cd213c730226492e5269c4744fae653"
        ],
        [
            "intro; treat_equalities; apply H; Col.",
            "VernacExtend",
            "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HB'''T : B''' <> T).",
            "VernacExtend",
            "4360f153d499635e301b41e9b6c94497bf4e1d82"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : ~ Col A B T) by (intro; apply HABC; assert_cols; ColR).",
            "VernacExtend",
            "5fdfea936ea2a4b65cd0f8b9c2e19f48ce72c03b"
        ],
        [
            "intro; treat_equalities; apply H; Col.",
            "VernacExtend",
            "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (H3 : BetS T B''' B') by (repeat split; Between).",
            "VernacExtend",
            "a32e7cb9be1ade18a9fb1f00ad57d7547a9e6fbe"
        ],
        [
            "assert (H4 : ~ Col B T B'') by (intro; apply HABC; assert_cols; ColR).",
            "VernacExtend",
            "cfbdff9e60a98628d1b8dc10c9bff7877c8bbe02"
        ],
        [
            "assert (H5 : Cong B MB T MB) by Cong.",
            "VernacExtend",
            "6d09aaf5ed0cc58259e0af2cbc9869549c39a279"
        ],
        [
            "assert (H6 : Cong B' MB B'' MB) by Cong.",
            "VernacExtend",
            "d499fa93fbf4b75b27ad22870a7555d01f248d6f"
        ],
        [
            "destruct (HSPP B T B' B'' MB B''') as [X [HBetS HX]]; Col; Cop; try (intro; apply H4; assert_diffs; assert_cols; ColR).",
            "VernacExtend",
            "644c3d5c9317dc44a735f9599b583aad5d9fb9ab"
        ],
        [
            "assert (HNC : ~ Col B B' B''') by (intro; assert_diffs; assert_cols; apply H4; ColR).",
            "VernacExtend",
            "9b4e2eb38c00cdba606b4e92a1811503e39e2c4d"
        ],
        [
            "assert (HPar1 : Par B B' T B'') by (unfold BetS in *; spliter; apply l12_17 with MB; try split; Col).",
            "VernacExtend",
            "3ba3b9492d98309335381b0f1cbe350def0853be"
        ],
        [
            "assert (HPar2 : Par B B'' T B') by (unfold BetS in *; spliter; assert_diffs; apply l12_17 with MB; try split; Between; Cong).",
            "VernacExtend",
            "7c9cef2d5f07d25f90d9c438ace8940083af094a"
        ],
        [
            "elim HBetS; clear HBetS; intro HBetS.",
            "VernacExtend",
            "1b9c2ce49d299a46b6de5a9ec01c8b826af28435"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HX; clear HX; intro HX.",
            "VernacExtend",
            "6b338a851062a626000d4a3f48dbc469df9898ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : BetS B'' T X).",
            "VernacExtend",
            "4d4e8199ceac138b5e6516e6cde449a03e1e78f6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; try (intro; treat_equalities); Col.",
            "VernacExtend",
            "c088138795b331459d344a0691762596dd2b8aa2"
        ],
        [
            "apply H4; assert_diffs; assert_cols; ColR.",
            "VernacExtend",
            "8c39383ef2d9951e6f7251fd2de220080196e253"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear HBetS; rename H into HBetS.",
            "VernacExtend",
            "b6a80537d57c0f87e3e90600b302fe2e7c2a6cb4"
        ],
        [
            "assert (H : BetS B B''' X).",
            "VernacExtend",
            "b5f5e0b83f02a3d5079d5a5ffad522a2c295a526"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; try (intro; treat_equalities); Col; unfold BetS in *; spliter; apply H4; assert_diffs; assert_cols; ColR.",
            "VernacExtend",
            "361732bcc90113f1ba3225252b3d94fab26f9a09"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "clear HX; rename H into HX.",
            "VernacExtend",
            "13f1992079ccfdd2aed5398380fb7e08700e14e8"
        ],
        [
            "apply BetSEq in HBetS; destruct HBetS as [HB''TX [HB''T [HB''X HBTX]]].",
            "VernacExtend",
            "72b486bbea909a111c76c616d2b17e36b6f9a93e"
        ],
        [
            "exists B'; exists B''; exists MB; exists X.",
            "VernacExtend",
            "25f9a48cc1a73bb9dca47ba17a311230b901a3da"
        ],
        [
            "split; unfold BetS in HX; spliter; eBetween.",
            "VernacExtend",
            "44ebd27caae9b6682c9e60872fae91c6d0007227"
        ],
        [
            "assert (HPar : Par B' B B'' T) by (apply l12_17 with MB; try split; Between; Cong).",
            "VernacExtend",
            "47803fc06f2914f2826b8dca358ba1d33b38ca88"
        ],
        [
            "assert (HPar' : Par B C B'' T) by (apply par_symmetry; apply par_col_par with B'; Par; assert_cols; ColR).",
            "VernacExtend",
            "97e0b09494645278cee7900a71eda88ec5a2851a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_not_col_strict with T; Col.",
            "VernacExtend",
            "a31c1631151d9abc96b375322e0a892f20586406"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_col_par with B''; Par.",
            "VernacExtend",
            "29cf7088a77679b97a7f208c79ef083137fd6c4f"
        ],
        [
            "assert_cols; ColR.",
            "VernacExtend",
            "dcd52a43783682cf5a688003361ca2c9539a8678"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; apply HABC; assert_cols; ColR.",
            "VernacExtend",
            "fb1b754bb617d2dd360832f791310f696aee6655"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat (split; try assumption); unfold BetS in *; spliter; assert_cols; Col.",
            "VernacExtend",
            "840d3d701de6f63200cf3a638b930beaa3502980"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HX; clear HX; intro HX.",
            "VernacExtend",
            "6b338a851062a626000d4a3f48dbc469df9898ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply impossible_case_5 with B T B' B'' MB B''' X; spliter; assumption.",
            "VernacExtend",
            "3f61ff0c050a30e33cde5b149be8677b4ce6427e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply impossible_case_6 with B T B' B'' MB B''' X; spliter; assumption.",
            "VernacExtend",
            "ae0078a3a35240a7ea97f2124a91d99d19664d9d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim HBetS; clear HBetS; intro HBetS.",
            "VernacExtend",
            "1b9c2ce49d299a46b6de5a9ec01c8b826af28435"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply impossible_case_7 with B T B' B'' MB B''' X; spliter; assumption.",
            "VernacExtend",
            "b72ea8d08dc3b31cbfa24f98f91b6089aa9aa526"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exfalso; apply impossible_case_8 with B T B' B'' MB B''' X; spliter; assumption.",
            "VernacExtend",
            "44e2e3ecae599670e25feafbd3b7f48d4ea325af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma strong_parallel_postulate_implies_tarski_s_euclid : strong_parallel_postulate -> tarski_s_parallel_postulate.",
            "VernacStartTheoremProof",
            "a73d4592f34807836f1be9806a1fd1d101293cf0"
        ],
        [
            "unfold tarski_s_parallel_postulate.",
            "VernacExtend",
            "8a2a6e351107e83ae56436a24ff6e3de68149110"
        ],
        [
            "intro HSPP; apply tarski_s_euclid_remove_degenerated_cases.",
            "VernacExtend",
            "6b8eb6876817355ee371fe82733cc23334f80f55"
        ],
        [
            "intros A B C D T HAB HAC HAD HAT HBC HBD HBT HCD HCT HDT HABC HADT HBDC.",
            "VernacExtend",
            "b8394491b9430cd37bf7ab7a671159e7171d195a"
        ],
        [
            "destruct (strong_parallel_postulate_implies_tarski_s_euclid_aux HSPP A B C D T) as [B' [B'' [MB [X [HABX [HPar' [HBet1 [HBet2 [HCong1 [HCong2 [HBB'D [HB''TX [HBB' HB''T]]]]]]]]]]]]]; destruct (strong_parallel_postulate_implies_tarski_s_euclid_aux HSPP A C B D T) as [C' [C'' [MC [Y [HACY [HPar [HBet3 [HBet4 [HCong3 [HCong4 [HCC'D [HC''TY [HCC' HC''T]]]]]]]]]]]]]; Between; Col.",
            "VernacExtend",
            "c9f8e8a567587aaf5d33b728cf19e570fb4c3bc9"
        ],
        [
            "clear HBet3; clear HBet4; clear HCong3; clear HCong4; clear MC; clear HC''TY; clear HC''T; clear HPar'.",
            "VernacExtend",
            "ad80517fba183bab7a9a2079b5ada26b1ff16e01"
        ],
        [
            "exists X; exists Y; repeat split; try assumption.",
            "VernacExtend",
            "f17173f0beff64a81b77796295aeb4fdeef66b6e"
        ],
        [
            "elim (col_dec X T Y); intro HXTY.",
            "VernacExtend",
            "c9391e5eba02f1da5f1cb5508b89066237e4b89e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply between_symmetry in HACY.",
            "VernacExtend",
            "2ff61a2db2efdb48f66cd1ab267136b68dfc1a91"
        ],
        [
            "assert (HU := outer_pasch Y B C A D HACY HBDC); destruct HU as [U [HYUB HADU]].",
            "VernacExtend",
            "eac08b0d07392f97eab8554cbf05aadab058ddce"
        ],
        [
            "apply between_symmetry in HABX.",
            "VernacExtend",
            "9badddb4e58d60812e3dad734198ee847a45bcca"
        ],
        [
            "assert (HV := outer_pasch X Y B A U HABX HYUB); destruct HV as [V [HXVY HAUV]].",
            "VernacExtend",
            "ffea4d298432cf5b5bd550b425fe4b22ba99702f"
        ],
        [
            "assert (HAX : A <> X) by (intro; treat_equalities; Col).",
            "VernacExtend",
            "8e5d09b3f8558cd6cd5689a444181350a5475a2d"
        ],
        [
            "assert (HAY : A <> Y) by (intro; treat_equalities; Col).",
            "VernacExtend",
            "4edfcdc38e9c4ba288ade250480d5d4ed83f58d4"
        ],
        [
            "assert (HAXY : ~ Col A X Y) by (intro; assert_cols; apply HABC; ColR).",
            "VernacExtend",
            "586108a84004d6444d777783ddea9ab1b716f6ef"
        ],
        [
            "assert (HAU : A <> U) by (intro; treat_equalities; Col).",
            "VernacExtend",
            "e91564694fa36a0cc340c26adb66ed586fb26c02"
        ],
        [
            "assert (HEq : T = V) by (assert_cols; apply l6_21 with X Y A D; Col; ColR); subst; assumption.",
            "VernacExtend",
            "04b6587d7046130a37486c082c582f4fb72414d1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HNC : ~ Col T B'' Y) by (intro; apply HXTY; unfold BetS in *; spliter; assert_cols; ColR).",
            "VernacExtend",
            "da9bea1c45a03b8e32eea0c550feddc30e28f10d"
        ],
        [
            "assert (HCop : Coplanar T B B'' Y).",
            "VernacExtend",
            "537ddad921d34988d0089d86f70fb9b73cf66acb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply coplanar_pseudo_trans with A B C; assert_cols; Cop.",
            "VernacExtend",
            "895422b4e6e60a9459784fd7cabcbe62c51e51b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists D; assert_cols; Col5.",
            "VernacExtend",
            "458597881e3deaf8bb5a04abb5243bf57b5326a3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HABD : ~ Col D A B) by (intro; assert_cols; apply HABC; ColR).",
            "VernacExtend",
            "9175f788be13504cf26dd1890097a84b3ed19304"
        ],
        [
            "apply coplanar_trans_1 with D; [Cop..|].",
            "VernacExtend",
            "9d77ad3e9522f2250d01aac8d71f825dc9678d6b"
        ],
        [
            "apply ts__coplanar.",
            "VernacExtend",
            "ea333d8a36209399710d6a631650997349e505a7"
        ],
        [
            "apply l9_8_2 with X.",
            "VernacExtend",
            "585746f0f282d8112b6d11e93b7ed0b3aa627ede"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HAX : A <> X) by (intro; treat_equalities; apply HABC; Col).",
            "VernacExtend",
            "401faeffdea6cb1c44c0b3de8130d1479d1dce2c"
        ],
        [
            "split; try (intro; assert_cols; apply HABC; ColR).",
            "VernacExtend",
            "c507003c9784a41e3c916d79fe152b8b1b893ecf"
        ],
        [
            "split; try (intro; assert_cols; apply HABC; ColR).",
            "VernacExtend",
            "c507003c9784a41e3c916d79fe152b8b1b893ecf"
        ],
        [
            "exists T; split; Col; Between.",
            "VernacExtend",
            "ccb7ff6e3a9d260819945a20ac60826905e74980"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "assert (HADA : Col A D A) by Col.",
            "VernacExtend",
            "dee54c183094b74ba9f289f46f675960e1565efa"
        ],
        [
            "assert (HXBA : Col X B A) by (assert_cols; Col).",
            "VernacExtend",
            "a40aadef12ea4ec04765cbcca760e18dd9b33822"
        ],
        [
            "rewrite (l9_19 A D X B A HADA HXBA).",
            "VernacExtend",
            "22945ba6524f86955b3e4826c64d85446317c613"
        ],
        [
            "assert (HAX : A <> X) by (intro; treat_equalities; apply HABC; Col).",
            "VernacExtend",
            "401faeffdea6cb1c44c0b3de8130d1479d1dce2c"
        ],
        [
            "split; try (intro; assert_cols; apply HABC; ColR); split; auto.",
            "VernacExtend",
            "419935910f8af4d267a3310e204873c4092d2d67"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (HSPP T B B'' B' MB Y) as [I [HCol1 HCol2]]; Cong; try (unfold BetS in *; spliter; repeat (split; try Between)).",
            "VernacExtend",
            "098396c300494b8b81e7bafa49e7216174d347eb"
        ],
        [
            "exfalso; apply HPar; exists I; split; Col.",
            "VernacExtend",
            "7af95bb2dcb8f3d3617866d89410ba9a4a52b461"
        ],
        [
            "elim (eq_dec_points I B); intro HBI; subst; Col.",
            "VernacExtend",
            "5a09e5cdfd61e8a498ebb823e9f8efa0d4abd0ea"
        ],
        [
            "unfold BetS in *; spliter; assert_cols; ColR.",
            "VernacExtend",
            "1b3b54ca10c9b881b63876577133a1621a2a3bdc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SPP_tarski.",
            "VernacEndSegment",
            "f2ecf7830c63701635decd1eb0f85c1e94276c53"
        ]
    ],
    "proofs": [
        {
            "name": "impossible_case_5",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HSQI HPUI.",
                        "VernacExtend",
                        "716c6db3ebf9c054f9f9973602fee232957ed902"
                    ]
                },
                {
                    "command": [
                        "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
                        "VernacExtend",
                        "72646675144fa32d619bc079d6f44aa444801a8e"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS Q S P U) by (assert_diffs; spliter; assert_cols; repeat split; Col; try (exists I; Col; Between); intro; apply HNC'; ColR).",
                        "VernacExtend",
                        "4687bd3967d544752b1a57a942d8180d76320308"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in HTS; apply HTS.",
                        "VernacExtend",
                        "458ebf04a92a2e3f0acb2b4b414e490336fb330f"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with R.",
                        "VernacExtend",
                        "61e1b7af9a9c422a53a4d3b9ee7546561f95b3d7"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; apply par_not_col_strict with P; Col; Par.",
                        "VernacExtend",
                        "d391a949b150701f281d1d062f9eea12dab1b104"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HQS : Q <> S) by (assert_diffs; assumption).",
                        "VernacExtend",
                        "ddcfcdeca13983588c0f5221d8dbe96afef05f9d"
                    ]
                },
                {
                    "command": [
                        "assert (HQSQ : Col Q S Q) by Col.",
                        "VernacExtend",
                        "c9be4f46d3c8ae25569a3d0ba2bf87c1c5c37b96"
                    ]
                },
                {
                    "command": [
                        "assert (HRUQ : Col R U Q) by (spliter; assert_cols; Col).",
                        "VernacExtend",
                        "fbed379bd471d2c713f99c5484cd020f6d457553"
                    ]
                },
                {
                    "command": [
                        "rewrite (l9_19 Q S R U Q HQSQ HRUQ).",
                        "VernacExtend",
                        "240b54c59031c2a90e242773b2c47dc83d5849cb"
                    ]
                },
                {
                    "command": [
                        "split; spliter; try (intro; apply HNC; assert_cols; ColR); repeat split; Between.",
                        "VernacExtend",
                        "4c5feec756e0d6f01112534a663f84a56d80b6e7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impossible_case_7",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HPUI HSQI.",
                        "VernacExtend",
                        "3afccf98b2eb63aca2422fe607a8af4245868660"
                    ]
                },
                {
                    "command": [
                        "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
                        "VernacExtend",
                        "72646675144fa32d619bc079d6f44aa444801a8e"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points I S); intro HIS; treat_equalities.",
                        "VernacExtend",
                        "4e0f19ea3f559ac7d52ac150888046b52b6019cb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HParS : Par_strict Q R P I) by (apply par_not_col_strict with P; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR).",
                        "VernacExtend",
                        "9a0b52907d67fc9dc79cab3fca6a45d6375a679e"
                    ]
                },
                {
                    "command": [
                        "apply HParS; exists U; spliter; assert_cols; Col.",
                        "VernacExtend",
                        "6ac75fc22966980d4fde3cf668c5376b801fe15e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS P U Q S) by (assert_diffs; spliter; assert_cols; repeat split; Col; try (exists I; Col; Between); intro; apply HNC; ColR).",
                        "VernacExtend",
                        "894c182610006845e9b009a54aef0103e8b6345e"
                    ]
                },
                {
                    "command": [
                        "apply l9_9 in HTS; apply HTS.",
                        "VernacExtend",
                        "458ebf04a92a2e3f0acb2b4b414e490336fb330f"
                    ]
                },
                {
                    "command": [
                        "exists R; split.",
                        "VernacExtend",
                        "63bef3d051765425ebbbd7f09556207cef7d9110"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; assert_cols.",
                        "VernacExtend",
                        "3bad04b77bb9f231a8f058d1df9473b010960772"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
                    ]
                },
                {
                    "command": [
                        "exists U; Col; Between.",
                        "VernacExtend",
                        "9beee5ecdfc6898170242c494e05aa03b4123246"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HPTQ as [HPTQ HDiff1].",
                        "VernacExtend",
                        "a6311103d7c295dcd01be8058ec41c14681afcdd"
                    ]
                },
                {
                    "command": [
                        "destruct HQUR as [HQUR HDiff2].",
                        "VernacExtend",
                        "0734433fbb57b91913265e074f6449180acba889"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HQUR.",
                        "VernacExtend",
                        "a3d995ae17a55149c357438ce5f5cb08ba8ea910"
                    ]
                },
                {
                    "command": [
                        "destruct (inner_pasch R P Q U T HQUR HPTQ) as [J [HPJU HRJT]].",
                        "VernacExtend",
                        "50b5e6010296993e8b612ea7d2fdbc93e8bc0575"
                    ]
                },
                {
                    "command": [
                        "assert (HRJS : Bet R J S) by (spliter; eBetween).",
                        "VernacExtend",
                        "c3a2c4d37173eb360e3298f0595a702e6dbfe00d"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; assert_cols.",
                        "VernacExtend",
                        "3bad04b77bb9f231a8f058d1df9473b010960772"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; apply HNC; ColR).",
                        "VernacExtend",
                        "19d403117f06eafa9419fd08c98ba3fb74ae11d1"
                    ]
                },
                {
                    "command": [
                        "exists J; split; Col; Between.",
                        "VernacExtend",
                        "7087033e482045641d203b2c2ac25f1d6c45ecd3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impossible_case_8",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros P Q R S T U I HPTQ HRTS HQUR HNC HNC' HPar1 HPar2 HPUI HSQI.",
                        "VernacExtend",
                        "3afccf98b2eb63aca2422fe607a8af4245868660"
                    ]
                },
                {
                    "command": [
                        "apply BetSEq in HPTQ; apply BetSEq in HRTS; apply BetSEq in HQUR.",
                        "VernacExtend",
                        "72646675144fa32d619bc079d6f44aa444801a8e"
                    ]
                },
                {
                    "command": [
                        "elim HPUI; clear HPUI; intro HPUI.",
                        "VernacExtend",
                        "e140fadb9a3ab56cae2df8baa49128f5ad95f452"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : Par_strict P S Q R) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
                        "VernacExtend",
                        "437378f1b5a286f6ade43420121283e3584b7b1e"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HSQI.",
                        "VernacExtend",
                        "48b725c6c4ff612f39ddc2362da74751dc685bd5"
                    ]
                },
                {
                    "command": [
                        "destruct (inner_pasch P Q I U S HPUI HSQI) as [J [HQJU HPJS]]; exists J.",
                        "VernacExtend",
                        "7e4a28162b458c41c1c436dbb6ce3184dcd70283"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; assert_cols; split; Col; ColR.",
                        "VernacExtend",
                        "babc92ae5a6716eae8fe83bd77f0158d3e812eea"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HPUI; clear HPUI; intro HPUI.",
                        "VernacExtend",
                        "e140fadb9a3ab56cae2df8baa49128f5ad95f452"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : Par_strict P S Q R) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
                        "VernacExtend",
                        "437378f1b5a286f6ade43420121283e3584b7b1e"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HSQI.",
                        "VernacExtend",
                        "48b725c6c4ff612f39ddc2362da74751dc685bd5"
                    ]
                },
                {
                    "command": [
                        "destruct (outer_pasch U Q I P S HPUI HSQI) as [J [HQJU HPSJ]]; exists J.",
                        "VernacExtend",
                        "c9620f87c7e3878f7865535db63ece6d281adb06"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; assert_cols; split; Col; ColR.",
                        "VernacExtend",
                        "babc92ae5a6716eae8fe83bd77f0158d3e812eea"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : Par_strict P R Q S) by (apply par_not_col_strict with Q; Col; Par; unfold BetS in *; spliter; assert_cols; intro; apply HNC'; ColR); apply H.",
                        "VernacExtend",
                        "b716fa04aad99d7491828154fe620da4067d24ba"
                    ]
                },
                {
                    "command": [
                        "destruct HQUR as [HQUR HDiff].",
                        "VernacExtend",
                        "6a597bf44693506bdf9912b6e92a8fbbd3faddbc"
                    ]
                },
                {
                    "command": [
                        "destruct (outer_pasch Q I U R P HQUR HPUI) as [J [HQJI HRPJ]]; exists J.",
                        "VernacExtend",
                        "7629c236201ac0a422a776148b469c7f5d84b908"
                    ]
                },
                {
                    "command": [
                        "spliter; assert_diffs; assert_cols; split; Col.",
                        "VernacExtend",
                        "e99a8e4d0fb806bc822535fca96de3c9537246a6"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points Q I); intro HQI; treat_equalities; Col; ColR.",
                        "VernacExtend",
                        "3a8980e155a333122d42a42567413950601b07af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strong_parallel_postulate_implies_tarski_s_euclid_aux",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros HSPP A B C D T HAB HAC HAD HAT HBC HBD HBT HCD HCT HDT HABC HADT HBDC.",
                        "VernacExtend",
                        "bae539de62fe260536662fb0bdb076aad1a9b9ff"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction D B) as [B' HB'].",
                        "VernacExtend",
                        "9d59685b74da65e79f9beeba2d85f8ddd642f519"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_distinct_2 B D B' HBD HB') as [HB'D HBB'].",
                        "VernacExtend",
                        "c8746c40e1e966765cac9a5051d6c9338868ae4f"
                    ]
                },
                {
                    "command": [
                        "destruct HB' as [HBDB' HCong1].",
                        "VernacExtend",
                        "2fb691535928950cb8ef5c241b4b760abf7987a9"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HADT.",
                        "VernacExtend",
                        "e22f031ffcde1116723e6515ba23aed4a317c453"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HBDB'.",
                        "VernacExtend",
                        "7370729d8f0937cdc9962d01d8689873f9e4cfbe"
                    ]
                },
                {
                    "command": [
                        "destruct (outer_pasch T B' D A B HADT HBDB') as [B''' [HTB'''B' HABB''']].",
                        "VernacExtend",
                        "ec16ad22be515964851bc2d978e10cdd0d917269"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence B T) as [MB HMB].",
                        "VernacExtend",
                        "c75232767885025c555f9f2f992956070b53544a"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_distinct_1 MB B T HBT HMB) as [HBMB HMBT].",
                        "VernacExtend",
                        "97b34a9d239a6a760a049ed6bc087b9227ca7d85"
                    ]
                },
                {
                    "command": [
                        "destruct HMB as [HBMBT HCong2].",
                        "VernacExtend",
                        "10c7e0df2098d9cd421f713f2f5f0b6538613c16"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction B' MB) as [B'' HB''].",
                        "VernacExtend",
                        "4a4c01e697a01b0ad90752425935d5f0d27f7e0c"
                    ]
                },
                {
                    "command": [
                        "assert (HB'MB : MB <> B').",
                        "VernacExtend",
                        "fdda09a6a9bb6338f35047c38077c60a93cf823a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ Col B' D MB) by (intro; apply HABC; assert_cols; ColR).",
                        "VernacExtend",
                        "b902b996bbc78d38a48ef46ce00bbe1acf610c93"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply H; Col.",
                        "VernacExtend",
                        "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_distinct_2 MB B' B'' HB'MB HB'') as [HB'B'' HB''MB].",
                        "VernacExtend",
                        "c387630d037cd1974699fc9dab89807326ce188c"
                    ]
                },
                {
                    "command": [
                        "destruct HB'' as [HB'MBB'' HCong3].",
                        "VernacExtend",
                        "4028863890228701973e018667769077afdde37e"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : BetS B MB T) by (repeat split; Between).",
                        "VernacExtend",
                        "feec160be7755b49fd10252a810d411598f797d7"
                    ]
                },
                {
                    "command": [
                        "assert (H2 : BetS B' MB B'') by (repeat split; Between).",
                        "VernacExtend",
                        "2427cc0c9529113b01601cc27055eb48794f2424"
                    ]
                },
                {
                    "command": [
                        "assert (HB'T : B' <> T).",
                        "VernacExtend",
                        "6e65bcb460c16860856531eb2694d184694a01a4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ Col B B' T) by (intro; apply HABC; assert_cols; ColR).",
                        "VernacExtend",
                        "1a8a7eac72c22ae647e423a69ff95862eec888da"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply H; Col.",
                        "VernacExtend",
                        "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HB'B''' : B' <> B''').",
                        "VernacExtend",
                        "15691047ffaacca79b8fc2c8fb6b721d3f6b5127"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ Col A B B') by (intro; apply HABC; assert_cols; ColR).",
                        "VernacExtend",
                        "9dd81cdf8cd213c730226492e5269c4744fae653"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply H; Col.",
                        "VernacExtend",
                        "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HB'''T : B''' <> T).",
                        "VernacExtend",
                        "4360f153d499635e301b41e9b6c94497bf4e1d82"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : ~ Col A B T) by (intro; apply HABC; assert_cols; ColR).",
                        "VernacExtend",
                        "5fdfea936ea2a4b65cd0f8b9c2e19f48ce72c03b"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply H; Col.",
                        "VernacExtend",
                        "2a7b57c77ba5bf7bfb3a76a22a6d59322573a56b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : BetS T B''' B') by (repeat split; Between).",
                        "VernacExtend",
                        "a32e7cb9be1ade18a9fb1f00ad57d7547a9e6fbe"
                    ]
                },
                {
                    "command": [
                        "assert (H4 : ~ Col B T B'') by (intro; apply HABC; assert_cols; ColR).",
                        "VernacExtend",
                        "cfbdff9e60a98628d1b8dc10c9bff7877c8bbe02"
                    ]
                },
                {
                    "command": [
                        "assert (H5 : Cong B MB T MB) by Cong.",
                        "VernacExtend",
                        "6d09aaf5ed0cc58259e0af2cbc9869549c39a279"
                    ]
                },
                {
                    "command": [
                        "assert (H6 : Cong B' MB B'' MB) by Cong.",
                        "VernacExtend",
                        "d499fa93fbf4b75b27ad22870a7555d01f248d6f"
                    ]
                },
                {
                    "command": [
                        "destruct (HSPP B T B' B'' MB B''') as [X [HBetS HX]]; Col; Cop; try (intro; apply H4; assert_diffs; assert_cols; ColR).",
                        "VernacExtend",
                        "644c3d5c9317dc44a735f9599b583aad5d9fb9ab"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col B B' B''') by (intro; assert_diffs; assert_cols; apply H4; ColR).",
                        "VernacExtend",
                        "9b4e2eb38c00cdba606b4e92a1811503e39e2c4d"
                    ]
                },
                {
                    "command": [
                        "assert (HPar1 : Par B B' T B'') by (unfold BetS in *; spliter; apply l12_17 with MB; try split; Col).",
                        "VernacExtend",
                        "3ba3b9492d98309335381b0f1cbe350def0853be"
                    ]
                },
                {
                    "command": [
                        "assert (HPar2 : Par B B'' T B') by (unfold BetS in *; spliter; assert_diffs; apply l12_17 with MB; try split; Between; Cong).",
                        "VernacExtend",
                        "7c9cef2d5f07d25f90d9c438ace8940083af094a"
                    ]
                },
                {
                    "command": [
                        "elim HBetS; clear HBetS; intro HBetS.",
                        "VernacExtend",
                        "1b9c2ce49d299a46b6de5a9ec01c8b826af28435"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HX; clear HX; intro HX.",
                        "VernacExtend",
                        "6b338a851062a626000d4a3f48dbc469df9898ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (H : BetS B'' T X).",
                        "VernacExtend",
                        "4d4e8199ceac138b5e6516e6cde449a03e1e78f6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat split; try (intro; treat_equalities); Col.",
                        "VernacExtend",
                        "c088138795b331459d344a0691762596dd2b8aa2"
                    ]
                },
                {
                    "command": [
                        "apply H4; assert_diffs; assert_cols; ColR.",
                        "VernacExtend",
                        "8c39383ef2d9951e6f7251fd2de220080196e253"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "clear HBetS; rename H into HBetS.",
                        "VernacExtend",
                        "b6a80537d57c0f87e3e90600b302fe2e7c2a6cb4"
                    ]
                },
                {
                    "command": [
                        "assert (H : BetS B B''' X).",
                        "VernacExtend",
                        "b5f5e0b83f02a3d5079d5a5ffad522a2c295a526"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat split; try (intro; treat_equalities); Col; unfold BetS in *; spliter; apply H4; assert_diffs; assert_cols; ColR.",
                        "VernacExtend",
                        "361732bcc90113f1ba3225252b3d94fab26f9a09"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "clear HX; rename H into HX.",
                        "VernacExtend",
                        "13f1992079ccfdd2aed5398380fb7e08700e14e8"
                    ]
                },
                {
                    "command": [
                        "apply BetSEq in HBetS; destruct HBetS as [HB''TX [HB''T [HB''X HBTX]]].",
                        "VernacExtend",
                        "72b486bbea909a111c76c616d2b17e36b6f9a93e"
                    ]
                },
                {
                    "command": [
                        "exists B'; exists B''; exists MB; exists X.",
                        "VernacExtend",
                        "25f9a48cc1a73bb9dca47ba17a311230b901a3da"
                    ]
                },
                {
                    "command": [
                        "split; unfold BetS in HX; spliter; eBetween.",
                        "VernacExtend",
                        "44ebd27caae9b6682c9e60872fae91c6d0007227"
                    ]
                },
                {
                    "command": [
                        "assert (HPar : Par B' B B'' T) by (apply l12_17 with MB; try split; Between; Cong).",
                        "VernacExtend",
                        "47803fc06f2914f2826b8dca358ba1d33b38ca88"
                    ]
                },
                {
                    "command": [
                        "assert (HPar' : Par B C B'' T) by (apply par_symmetry; apply par_col_par with B'; Par; assert_cols; ColR).",
                        "VernacExtend",
                        "97e0b09494645278cee7900a71eda88ec5a2851a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with T; Col.",
                        "VernacExtend",
                        "a31c1631151d9abc96b375322e0a892f20586406"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_col_par with B''; Par.",
                        "VernacExtend",
                        "29cf7088a77679b97a7f208c79ef083137fd6c4f"
                    ]
                },
                {
                    "command": [
                        "assert_cols; ColR.",
                        "VernacExtend",
                        "dcd52a43783682cf5a688003361ca2c9539a8678"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; apply HABC; assert_cols; ColR.",
                        "VernacExtend",
                        "fb1b754bb617d2dd360832f791310f696aee6655"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat (split; try assumption); unfold BetS in *; spliter; assert_cols; Col.",
                        "VernacExtend",
                        "840d3d701de6f63200cf3a638b930beaa3502980"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HX; clear HX; intro HX.",
                        "VernacExtend",
                        "6b338a851062a626000d4a3f48dbc469df9898ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply impossible_case_5 with B T B' B'' MB B''' X; spliter; assumption.",
                        "VernacExtend",
                        "3f61ff0c050a30e33cde5b149be8677b4ce6427e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply impossible_case_6 with B T B' B'' MB B''' X; spliter; assumption.",
                        "VernacExtend",
                        "ae0078a3a35240a7ea97f2124a91d99d19664d9d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim HBetS; clear HBetS; intro HBetS.",
                        "VernacExtend",
                        "1b9c2ce49d299a46b6de5a9ec01c8b826af28435"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply impossible_case_7 with B T B' B'' MB B''' X; spliter; assumption.",
                        "VernacExtend",
                        "b72ea8d08dc3b31cbfa24f98f91b6089aa9aa526"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply impossible_case_8 with B T B' B'' MB B''' X; spliter; assumption.",
                        "VernacExtend",
                        "44e2e3ecae599670e25feafbd3b7f48d4ea325af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strong_parallel_postulate_implies_tarski_s_euclid",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "unfold tarski_s_parallel_postulate.",
                        "VernacExtend",
                        "8a2a6e351107e83ae56436a24ff6e3de68149110"
                    ]
                },
                {
                    "command": [
                        "intro HSPP; apply tarski_s_euclid_remove_degenerated_cases.",
                        "VernacExtend",
                        "6b8eb6876817355ee371fe82733cc23334f80f55"
                    ]
                },
                {
                    "command": [
                        "intros A B C D T HAB HAC HAD HAT HBC HBD HBT HCD HCT HDT HABC HADT HBDC.",
                        "VernacExtend",
                        "b8394491b9430cd37bf7ab7a671159e7171d195a"
                    ]
                },
                {
                    "command": [
                        "destruct (strong_parallel_postulate_implies_tarski_s_euclid_aux HSPP A B C D T) as [B' [B'' [MB [X [HABX [HPar' [HBet1 [HBet2 [HCong1 [HCong2 [HBB'D [HB''TX [HBB' HB''T]]]]]]]]]]]]]; destruct (strong_parallel_postulate_implies_tarski_s_euclid_aux HSPP A C B D T) as [C' [C'' [MC [Y [HACY [HPar [HBet3 [HBet4 [HCong3 [HCong4 [HCC'D [HC''TY [HCC' HC''T]]]]]]]]]]]]]; Between; Col.",
                        "VernacExtend",
                        "c9f8e8a567587aaf5d33b728cf19e570fb4c3bc9"
                    ]
                },
                {
                    "command": [
                        "clear HBet3; clear HBet4; clear HCong3; clear HCong4; clear MC; clear HC''TY; clear HC''T; clear HPar'.",
                        "VernacExtend",
                        "ad80517fba183bab7a9a2079b5ada26b1ff16e01"
                    ]
                },
                {
                    "command": [
                        "exists X; exists Y; repeat split; try assumption.",
                        "VernacExtend",
                        "f17173f0beff64a81b77796295aeb4fdeef66b6e"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec X T Y); intro HXTY.",
                        "VernacExtend",
                        "c9391e5eba02f1da5f1cb5508b89066237e4b89e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HACY.",
                        "VernacExtend",
                        "2ff61a2db2efdb48f66cd1ab267136b68dfc1a91"
                    ]
                },
                {
                    "command": [
                        "assert (HU := outer_pasch Y B C A D HACY HBDC); destruct HU as [U [HYUB HADU]].",
                        "VernacExtend",
                        "eac08b0d07392f97eab8554cbf05aadab058ddce"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry in HABX.",
                        "VernacExtend",
                        "9badddb4e58d60812e3dad734198ee847a45bcca"
                    ]
                },
                {
                    "command": [
                        "assert (HV := outer_pasch X Y B A U HABX HYUB); destruct HV as [V [HXVY HAUV]].",
                        "VernacExtend",
                        "ffea4d298432cf5b5bd550b425fe4b22ba99702f"
                    ]
                },
                {
                    "command": [
                        "assert (HAX : A <> X) by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "8e5d09b3f8558cd6cd5689a444181350a5475a2d"
                    ]
                },
                {
                    "command": [
                        "assert (HAY : A <> Y) by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "4edfcdc38e9c4ba288ade250480d5d4ed83f58d4"
                    ]
                },
                {
                    "command": [
                        "assert (HAXY : ~ Col A X Y) by (intro; assert_cols; apply HABC; ColR).",
                        "VernacExtend",
                        "586108a84004d6444d777783ddea9ab1b716f6ef"
                    ]
                },
                {
                    "command": [
                        "assert (HAU : A <> U) by (intro; treat_equalities; Col).",
                        "VernacExtend",
                        "e91564694fa36a0cc340c26adb66ed586fb26c02"
                    ]
                },
                {
                    "command": [
                        "assert (HEq : T = V) by (assert_cols; apply l6_21 with X Y A D; Col; ColR); subst; assumption.",
                        "VernacExtend",
                        "04b6587d7046130a37486c082c582f4fb72414d1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HNC : ~ Col T B'' Y) by (intro; apply HXTY; unfold BetS in *; spliter; assert_cols; ColR).",
                        "VernacExtend",
                        "da9bea1c45a03b8e32eea0c550feddc30e28f10d"
                    ]
                },
                {
                    "command": [
                        "assert (HCop : Coplanar T B B'' Y).",
                        "VernacExtend",
                        "537ddad921d34988d0089d86f70fb9b73cf66acb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with A B C; assert_cols; Cop.",
                        "VernacExtend",
                        "895422b4e6e60a9459784fd7cabcbe62c51e51b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists D; assert_cols; Col5.",
                        "VernacExtend",
                        "458597881e3deaf8bb5a04abb5243bf57b5326a3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HABD : ~ Col D A B) by (intro; assert_cols; apply HABC; ColR).",
                        "VernacExtend",
                        "9175f788be13504cf26dd1890097a84b3ed19304"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_trans_1 with D; [Cop..|].",
                        "VernacExtend",
                        "9d77ad3e9522f2250d01aac8d71f825dc9678d6b"
                    ]
                },
                {
                    "command": [
                        "apply ts__coplanar.",
                        "VernacExtend",
                        "ea333d8a36209399710d6a631650997349e505a7"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with X.",
                        "VernacExtend",
                        "585746f0f282d8112b6d11e93b7ed0b3aa627ede"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (HAX : A <> X) by (intro; treat_equalities; apply HABC; Col).",
                        "VernacExtend",
                        "401faeffdea6cb1c44c0b3de8130d1479d1dce2c"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; assert_cols; apply HABC; ColR).",
                        "VernacExtend",
                        "c507003c9784a41e3c916d79fe152b8b1b893ecf"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; assert_cols; apply HABC; ColR).",
                        "VernacExtend",
                        "c507003c9784a41e3c916d79fe152b8b1b893ecf"
                    ]
                },
                {
                    "command": [
                        "exists T; split; Col; Between.",
                        "VernacExtend",
                        "ccb7ff6e3a9d260819945a20ac60826905e74980"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "assert (HADA : Col A D A) by Col.",
                        "VernacExtend",
                        "dee54c183094b74ba9f289f46f675960e1565efa"
                    ]
                },
                {
                    "command": [
                        "assert (HXBA : Col X B A) by (assert_cols; Col).",
                        "VernacExtend",
                        "a40aadef12ea4ec04765cbcca760e18dd9b33822"
                    ]
                },
                {
                    "command": [
                        "rewrite (l9_19 A D X B A HADA HXBA).",
                        "VernacExtend",
                        "22945ba6524f86955b3e4826c64d85446317c613"
                    ]
                },
                {
                    "command": [
                        "assert (HAX : A <> X) by (intro; treat_equalities; apply HABC; Col).",
                        "VernacExtend",
                        "401faeffdea6cb1c44c0b3de8130d1479d1dce2c"
                    ]
                },
                {
                    "command": [
                        "split; try (intro; assert_cols; apply HABC; ColR); split; auto.",
                        "VernacExtend",
                        "419935910f8af4d267a3310e204873c4092d2d67"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (HSPP T B B'' B' MB Y) as [I [HCol1 HCol2]]; Cong; try (unfold BetS in *; spliter; repeat (split; try Between)).",
                        "VernacExtend",
                        "098396c300494b8b81e7bafa49e7216174d347eb"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HPar; exists I; split; Col.",
                        "VernacExtend",
                        "7af95bb2dcb8f3d3617866d89410ba9a4a52b461"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points I B); intro HBI; subst; Col.",
                        "VernacExtend",
                        "5a09e5cdfd61e8a498ebb823e9f8efa0d4abd0ea"
                    ]
                },
                {
                    "command": [
                        "unfold BetS in *; spliter; assert_cols; ColR.",
                        "VernacExtend",
                        "1b3b54ca10c9b881b63876577133a1621a2a3bdc"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}