{
    "filename": "Meta_theory/Parallel_postulates/par_perp_2_par_par_perp_perp.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section par_perp_2_par_par_perp_perp.",
            "VernacBeginSection",
            "e5e32b6cedb0b6de47d5e20665da34f26fbc47db"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma par_perp_2_par_implies_par_perp_perp : postulate_of_parallelism_of_perpendicular_transversals -> perpendicular_transversal_postulate.",
            "VernacStartTheoremProof",
            "f55cc92c83cf57a6d9b15b4a744b836938558717"
        ],
        [
            "intros HPPP A B C D P Q HPar HPerp HCop.",
            "VernacExtend",
            "c9d2f2e147165382dd0ce60b5e7031c848cf5a1d"
        ],
        [
            "elim HPar; clear HPar; intro HPar; [|spliter; apply perp_col2 with A B; auto; ColR].",
            "VernacExtend",
            "abda1aa6a7bb58fcbafee6c30d2f698acb402689"
        ],
        [
            "assert (HX := HPerp); destruct HX as [X HX].",
            "VernacExtend",
            "3ba08df04138832b1d7e55e6904f11f5c48c2900"
        ],
        [
            "elim (col_dec C D X); intro HCDX.",
            "VernacExtend",
            "c642b5a7f9b79b33c5c4c25d761929e3ba0c3cd9"
        ],
        [
            "exfalso; apply HPar; exists X; unfold Perp_at in HX; spliter; Col.",
            "VernacExtend",
            "ee27751c63d07d068998a13d739bd871c42a5550"
        ],
        [
            "assert (HY := l8_18_existence C D X HCDX); destruct HY as [Y [HCDY HPerp']].",
            "VernacExtend",
            "dc7bff58ceaf1cf025c66c00395a9e09458ca6ee"
        ],
        [
            "assert (HPar' : Par P Q X Y).",
            "VernacExtend",
            "43f111c628d3a38565955a90a2e25fe037a7bc44"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HX as [_ [_ [HCol [ ]]]]; assert_diffs.",
            "VernacExtend",
            "0fb8d4fec05c5803bcce621aac7546e4e40f7e0e"
        ],
        [
            "assert (Coplanar C D X A) by (apply col2_cop__cop with A B; Col; apply pars__coplanar; Par).",
            "VernacExtend",
            "a78cb5ceedf7247d25b7606d9feeff079a88eeec"
        ],
        [
            "assert (Coplanar C D X B) by (apply col2_cop__cop with A B; Col; apply pars__coplanar; Par).",
            "VernacExtend",
            "ad8ff3a43334bbf12d39bf2f12eaf986e0adcc8d"
        ],
        [
            "assert (Coplanar C D X P) by (apply col2_cop__cop with P Q; Col; apply perp__coplanar; Perp).",
            "VernacExtend",
            "d315a3563ea325af5cfcf035b13c1c36c9c418bb"
        ],
        [
            "assert (Coplanar C D X Q) by (apply col2_cop__cop with P Q; Col; apply perp__coplanar; Perp).",
            "VernacExtend",
            "7920083835fb5fb2182a73a5fa51cb931d0be23e"
        ],
        [
            "assert (Coplanar C D X Y) by Cop.",
            "VernacExtend",
            "baacd31d6da1e3b4a8d67cd10503241328bd7b2b"
        ],
        [
            "apply HPPP with A B C D; Perp; try solve [left; auto]; try solve [apply col2_cop__cop with P Q; Col; Cop]; CopR.",
            "VernacExtend",
            "ee0a774e0a442722f02db65b48301056e74d8527"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim HPar'; clear HPar'; intro HPar'.",
            "VernacExtend",
            "34f2ab446e3ce945301a65cc9cefacbc1811296a"
        ],
        [
            "exfalso; apply HPar'; exists X; unfold Perp_at in HX; spliter; Col.",
            "VernacExtend",
            "7d7fc949eea86e2a03e5c7fecca1a35d19f5f048"
        ],
        [
            "destruct HPar' as [HPQ [HXY [HCol1 HCol2]]].",
            "VernacExtend",
            "37680108258993f0fe9b04a224c4567aa571a111"
        ],
        [
            "apply perp_sym; apply perp_col2 with X Y; Col; Perp.",
            "VernacExtend",
            "1ae96687c5861e5e801ae783d627a5ae446fb23b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End par_perp_2_par_par_perp_perp.",
            "VernacEndSegment",
            "c9a4ce2ae45cca84d063f5532466f91e9d259237"
        ]
    ],
    "proofs": [
        {
            "name": "par_perp_2_par_implies_par_perp_perp",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros HPPP A B C D P Q HPar HPerp HCop.",
                        "VernacExtend",
                        "c9d2f2e147165382dd0ce60b5e7031c848cf5a1d"
                    ]
                },
                {
                    "command": [
                        "elim HPar; clear HPar; intro HPar; [|spliter; apply perp_col2 with A B; auto; ColR].",
                        "VernacExtend",
                        "abda1aa6a7bb58fcbafee6c30d2f698acb402689"
                    ]
                },
                {
                    "command": [
                        "assert (HX := HPerp); destruct HX as [X HX].",
                        "VernacExtend",
                        "3ba08df04138832b1d7e55e6904f11f5c48c2900"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec C D X); intro HCDX.",
                        "VernacExtend",
                        "c642b5a7f9b79b33c5c4c25d761929e3ba0c3cd9"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HPar; exists X; unfold Perp_at in HX; spliter; Col.",
                        "VernacExtend",
                        "ee27751c63d07d068998a13d739bd871c42a5550"
                    ]
                },
                {
                    "command": [
                        "assert (HY := l8_18_existence C D X HCDX); destruct HY as [Y [HCDY HPerp']].",
                        "VernacExtend",
                        "dc7bff58ceaf1cf025c66c00395a9e09458ca6ee"
                    ]
                },
                {
                    "command": [
                        "assert (HPar' : Par P Q X Y).",
                        "VernacExtend",
                        "43f111c628d3a38565955a90a2e25fe037a7bc44"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HX as [_ [_ [HCol [ ]]]]; assert_diffs.",
                        "VernacExtend",
                        "0fb8d4fec05c5803bcce621aac7546e4e40f7e0e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D X A) by (apply col2_cop__cop with A B; Col; apply pars__coplanar; Par).",
                        "VernacExtend",
                        "a78cb5ceedf7247d25b7606d9feeff079a88eeec"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D X B) by (apply col2_cop__cop with A B; Col; apply pars__coplanar; Par).",
                        "VernacExtend",
                        "ad8ff3a43334bbf12d39bf2f12eaf986e0adcc8d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D X P) by (apply col2_cop__cop with P Q; Col; apply perp__coplanar; Perp).",
                        "VernacExtend",
                        "d315a3563ea325af5cfcf035b13c1c36c9c418bb"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D X Q) by (apply col2_cop__cop with P Q; Col; apply perp__coplanar; Perp).",
                        "VernacExtend",
                        "7920083835fb5fb2182a73a5fa51cb931d0be23e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar C D X Y) by Cop.",
                        "VernacExtend",
                        "baacd31d6da1e3b4a8d67cd10503241328bd7b2b"
                    ]
                },
                {
                    "command": [
                        "apply HPPP with A B C D; Perp; try solve [left; auto]; try solve [apply col2_cop__cop with P Q; Col; Cop]; CopR.",
                        "VernacExtend",
                        "ee0a774e0a442722f02db65b48301056e74d8527"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "elim HPar'; clear HPar'; intro HPar'.",
                        "VernacExtend",
                        "34f2ab446e3ce945301a65cc9cefacbc1811296a"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply HPar'; exists X; unfold Perp_at in HX; spliter; Col.",
                        "VernacExtend",
                        "7d7fc949eea86e2a03e5c7fecca1a35d19f5f048"
                    ]
                },
                {
                    "command": [
                        "destruct HPar' as [HPQ [HXY [HCol1 HCol2]]].",
                        "VernacExtend",
                        "37680108258993f0fe9b04a224c4567aa571a111"
                    ]
                },
                {
                    "command": [
                        "apply perp_sym; apply perp_col2 with X Y; Col; Perp.",
                        "VernacExtend",
                        "1ae96687c5861e5e801ae783d627a5ae446fb23b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}