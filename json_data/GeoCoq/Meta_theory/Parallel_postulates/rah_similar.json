{
    "filename": "Meta_theory/Parallel_postulates/rah_similar.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.saccheri.",
            "VernacRequire",
            "7f4ea2c902af7c230435bbab1ce2ec0513b4262b"
        ],
        [
            "Section rah_similar.",
            "VernacBeginSection",
            "9981d2bf7d44e32e4331923d2e0e0288625a92c2"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma rah__similar : postulate_of_right_saccheri_quadrilaterals -> postulate_of_existence_of_similar_triangles.",
            "VernacStartTheoremProof",
            "798a7c4bd41240a55cc177d2b38cfc0bb0e62328"
        ],
        [
            "intro rah.",
            "VernacExtend",
            "03ffadc61eb43b20382744fdfd5c2140d84524b0"
        ],
        [
            "destruct lower_dim_ex as [A [B0 [C]]].",
            "VernacExtend",
            "a3a0731f906eb145b08a91e8d2498969b3222ddc"
        ],
        [
            "assert(~ Col A B0 C) by (unfold Col; assumption).",
            "VernacExtend",
            "d761f41bac48fe5d8f5d72ab4926916bcfebb889"
        ],
        [
            "destruct (l10_15 C A C B0) as [B []]; Col.",
            "VernacExtend",
            "ef0976bb2d551c3f4d018aa2df4bc6f1c887338e"
        ],
        [
            "assert(HNCol1 : ~ Col C A B) by (apply (one_side_not_col123 _ _ _ B0); Side).",
            "VernacExtend",
            "5f552758723eddeede5149b69ab1d5694f624954"
        ],
        [
            "assert(Per A C B) by Perp.",
            "VernacExtend",
            "f180a7d02536a41e8b7e4a5d15144a09739e2763"
        ],
        [
            "destruct (symmetric_point_construction A B) as [B'].",
            "VernacExtend",
            "032286d4fac9e8ac1831639d11e3a23d65280e6d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HNCol2 : ~ Col A C B') by (intro; apply HNCol1; ColR).",
            "VernacExtend",
            "42be9484ab622bf9029c8d56cbbda7c155f23b93"
        ],
        [
            "assert(HNCol3 : ~ Col B B' C) by (intro; apply HNCol2; ColR).",
            "VernacExtend",
            "7d1f61d77b8c6ea487bac250459610666a707742"
        ],
        [
            "destruct (l8_18_existence A C B') as [C' []]; auto.",
            "VernacExtend",
            "b4503e9ba7b6834e7c9c1af38e4a585303ab9822"
        ],
        [
            "exists A; exists B; exists C; exists A; exists B'; exists C'.",
            "VernacExtend",
            "602d4ea11378c7e39e6cdc68be22dba4a9c52155"
        ],
        [
            "assert(Par_strict B C B' C').",
            "VernacExtend",
            "01c5ccd798cc8fc930219585024092d0b5b3ca2c"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ B'); Col; apply (l12_9 _ _ _ _ A C); Perp; Cop.",
            "VernacExtend",
            "ce508b6999fa80ae440489357fc11786d03a8b42"
        ],
        [
            "assert(HNCol4 : ~ Col B C C') by (apply (par_strict_not_col_4 _ _ B'); auto).",
            "VernacExtend",
            "aa54da973a1c0d61bcdff2606ca502e93dc7386a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Bet A C C').",
            "VernacExtend",
            "c46b57ccc270cb3662b59a6ba83dcece1e272a9e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (col_two_sides_bet _ B); Col.",
            "VernacExtend",
            "414dd4c74c3217a14511f73dd2043f1fc29d89f8"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply (l9_8_2 _ _ B').",
            "VernacExtend",
            "051a76294f4fe43ee0df50b94c1f413c78ce335b"
        ],
        [
            "repeat split; Col; exists B; split; Col; Between.",
            "VernacExtend",
            "52ee2a521a48031329fa706a77e217e52446c1ca"
        ],
        [
            "apply l12_6; Par.",
            "VernacExtend",
            "db15b9b88aced19da35d6effbc9d671fce787e7b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(A <> C') by (intro; treat_equalities; auto).",
            "VernacExtend",
            "a799f801acd1e3ee5a7adf2056d5776dcdeb1719"
        ],
        [
            "assert(Per B' C' A) by (apply perp_per_1; auto; apply (perp_col1 _ _ _ C); Col; Perp).",
            "VernacExtend",
            "f46e7411a8240018bb3d662ea3eb6c047a3751a0"
        ],
        [
            "assert(CongA B C A B' C' A) by (apply l11_16; Perp).",
            "VernacExtend",
            "e7ab345e91adc6e7fdc84da7f885afde7d4ebcd7"
        ],
        [
            "assert(CongA C A B C' A B').",
            "VernacExtend",
            "7794dfcf0399e5914a1469bde9602eb32ff1b7ba"
        ],
        [
            "apply (out_conga C A B C A B); try (apply out_trivial); CongA; apply bet_out; Between.",
            "VernacExtend",
            "d9b8c22ab0c554a9ed9c854a7b6566c06100b79b"
        ],
        [
            "split; Col; split.",
            "VernacExtend",
            "eaa37b8c8c91c1c61105a8bc16e0a7610871747e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd(B = B'); auto.",
            "VernacExtend",
            "526ead72ace2efde591cce72d3a5d45cc02df1db"
        ],
        [
            "apply (between_cong A); Between.",
            "VernacExtend",
            "04c30433a32f6d246e30e8e2ae1d506be0efd826"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; [|repeat (split; auto)].",
            "VernacExtend",
            "5429aa3f57024f2dc2337c23a1527a2a009fa0b0"
        ],
        [
            "apply (sams2_suma2__conga456 C A B _ _ _ _ _ _ B C A).",
            "VernacExtend",
            "d939e4d1c0b81c085c8d00ac9f4fa78dffdd5660"
        ],
        [
            "SumA.",
            "VernacExtend",
            "e576e22573e8857551ca3fd93c9b7fdec34b13b8"
        ],
        [
            "apply (conga2_sams__sams C' A B' A B' C'); CongA; SumA.",
            "VernacExtend",
            "d5b256d1bc73c6089d31bd52896fc961f9c2ead0"
        ],
        [
            "apply t22_12__rah; Perp.",
            "VernacExtend",
            "9794cb17b6ba43442a5ad83d488f7b21c6b5a96e"
        ],
        [
            "apply (conga3_suma__suma C' A B' A B' C' B' C' A); CongA; apply t22_12__rah; auto.",
            "VernacExtend",
            "7f3c7f783e103c4e261e2cfee28d51ea8e14e4b3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End rah_similar.",
            "VernacEndSegment",
            "4ad55a325708d135cae2701c99e76cf3ea47b818"
        ]
    ],
    "proofs": [
        {
            "name": "rah__similar",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intro rah.",
                        "VernacExtend",
                        "03ffadc61eb43b20382744fdfd5c2140d84524b0"
                    ]
                },
                {
                    "command": [
                        "destruct lower_dim_ex as [A [B0 [C]]].",
                        "VernacExtend",
                        "a3a0731f906eb145b08a91e8d2498969b3222ddc"
                    ]
                },
                {
                    "command": [
                        "assert(~ Col A B0 C) by (unfold Col; assumption).",
                        "VernacExtend",
                        "d761f41bac48fe5d8f5d72ab4926916bcfebb889"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 C A C B0) as [B []]; Col.",
                        "VernacExtend",
                        "ef0976bb2d551c3f4d018aa2df4bc6f1c887338e"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol1 : ~ Col C A B) by (apply (one_side_not_col123 _ _ _ B0); Side).",
                        "VernacExtend",
                        "5f552758723eddeede5149b69ab1d5694f624954"
                    ]
                },
                {
                    "command": [
                        "assert(Per A C B) by Perp.",
                        "VernacExtend",
                        "f180a7d02536a41e8b7e4a5d15144a09739e2763"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction A B) as [B'].",
                        "VernacExtend",
                        "032286d4fac9e8ac1831639d11e3a23d65280e6d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol2 : ~ Col A C B') by (intro; apply HNCol1; ColR).",
                        "VernacExtend",
                        "42be9484ab622bf9029c8d56cbbda7c155f23b93"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol3 : ~ Col B B' C) by (intro; apply HNCol2; ColR).",
                        "VernacExtend",
                        "7d1f61d77b8c6ea487bac250459610666a707742"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A C B') as [C' []]; auto.",
                        "VernacExtend",
                        "b4503e9ba7b6834e7c9c1af38e4a585303ab9822"
                    ]
                },
                {
                    "command": [
                        "exists A; exists B; exists C; exists A; exists B'; exists C'.",
                        "VernacExtend",
                        "602d4ea11378c7e39e6cdc68be22dba4a9c52155"
                    ]
                },
                {
                    "command": [
                        "assert(Par_strict B C B' C').",
                        "VernacExtend",
                        "01c5ccd798cc8fc930219585024092d0b5b3ca2c"
                    ]
                },
                {
                    "command": [
                        "apply (par_not_col_strict _ _ _ _ B'); Col; apply (l12_9 _ _ _ _ A C); Perp; Cop.",
                        "VernacExtend",
                        "ce508b6999fa80ae440489357fc11786d03a8b42"
                    ]
                },
                {
                    "command": [
                        "assert(HNCol4 : ~ Col B C C') by (apply (par_strict_not_col_4 _ _ B'); auto).",
                        "VernacExtend",
                        "aa54da973a1c0d61bcdff2606ca502e93dc7386a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A C C').",
                        "VernacExtend",
                        "c46b57ccc270cb3662b59a6ba83dcece1e272a9e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (col_two_sides_bet _ B); Col.",
                        "VernacExtend",
                        "414dd4c74c3217a14511f73dd2043f1fc29d89f8"
                    ]
                },
                {
                    "command": [
                        "apply l9_2.",
                        "VernacExtend",
                        "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
                    ]
                },
                {
                    "command": [
                        "apply (l9_8_2 _ _ B').",
                        "VernacExtend",
                        "051a76294f4fe43ee0df50b94c1f413c78ce335b"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; exists B; split; Col; Between.",
                        "VernacExtend",
                        "52ee2a521a48031329fa706a77e217e52446c1ca"
                    ]
                },
                {
                    "command": [
                        "apply l12_6; Par.",
                        "VernacExtend",
                        "db15b9b88aced19da35d6effbc9d671fce787e7b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(A <> C') by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "a799f801acd1e3ee5a7adf2056d5776dcdeb1719"
                    ]
                },
                {
                    "command": [
                        "assert(Per B' C' A) by (apply perp_per_1; auto; apply (perp_col1 _ _ _ C); Col; Perp).",
                        "VernacExtend",
                        "f46e7411a8240018bb3d662ea3eb6c047a3751a0"
                    ]
                },
                {
                    "command": [
                        "assert(CongA B C A B' C' A) by (apply l11_16; Perp).",
                        "VernacExtend",
                        "e7ab345e91adc6e7fdc84da7f885afde7d4ebcd7"
                    ]
                },
                {
                    "command": [
                        "assert(CongA C A B C' A B').",
                        "VernacExtend",
                        "7794dfcf0399e5914a1469bde9602eb32ff1b7ba"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga C A B C A B); try (apply out_trivial); CongA; apply bet_out; Between.",
                        "VernacExtend",
                        "d9b8c22ab0c554a9ed9c854a7b6566c06100b79b"
                    ]
                },
                {
                    "command": [
                        "split; Col; split.",
                        "VernacExtend",
                        "eaa37b8c8c91c1c61105a8bc16e0a7610871747e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "absurd(B = B'); auto.",
                        "VernacExtend",
                        "526ead72ace2efde591cce72d3a5d45cc02df1db"
                    ]
                },
                {
                    "command": [
                        "apply (between_cong A); Between.",
                        "VernacExtend",
                        "04c30433a32f6d246e30e8e2ae1d506be0efd826"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; [|repeat (split; auto)].",
                        "VernacExtend",
                        "5429aa3f57024f2dc2337c23a1527a2a009fa0b0"
                    ]
                },
                {
                    "command": [
                        "apply (sams2_suma2__conga456 C A B _ _ _ _ _ _ B C A).",
                        "VernacExtend",
                        "d939e4d1c0b81c085c8d00ac9f4fa78dffdd5660"
                    ]
                },
                {
                    "command": [
                        "SumA.",
                        "VernacExtend",
                        "e576e22573e8857551ca3fd93c9b7fdec34b13b8"
                    ]
                },
                {
                    "command": [
                        "apply (conga2_sams__sams C' A B' A B' C'); CongA; SumA.",
                        "VernacExtend",
                        "d5b256d1bc73c6089d31bd52896fc961f9c2ead0"
                    ]
                },
                {
                    "command": [
                        "apply t22_12__rah; Perp.",
                        "VernacExtend",
                        "9794cb17b6ba43442a5ad83d488f7b21c6b5a96e"
                    ]
                },
                {
                    "command": [
                        "apply (conga3_suma__suma C' A B' A B' C' B' C' A); CongA; apply t22_12__rah; auto.",
                        "VernacExtend",
                        "7f3c7f783e103c4e261e2cfee28d51ea8e14e4b3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}