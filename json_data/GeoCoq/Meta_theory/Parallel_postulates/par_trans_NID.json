{
    "filename": "Meta_theory/Parallel_postulates/par_trans_NID.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section par_trans_NID.",
            "VernacBeginSection",
            "f8fdf45c2866b70bcef53a7c0afa7e21b53c3340"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma par_dec_NID : decidability_of_parallelism <-> decidability_of_not_intersection.",
            "VernacStartTheoremProof",
            "f8bf0678ee22f33663923a35712f521ae305a83b"
        ],
        [
            "split; intros Hdec A B C D; destruct (cop_dec A B C D) as [|HNCop].",
            "VernacExtend",
            "464c712f90a825d7fcf1d5c9875272c7a1678f09"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (Hdec A B C D) as [[HParS|Heq]|HNPar].",
            "VernacExtend",
            "68adb546fe3f9fe185c28082a152b085b55c05d6"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; unfold Par_strict in HParS; spliter; assumption.",
            "VernacExtend",
            "dab3e755de9fc8d9983989dde9240f26f515f3a2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; intro Habs; apply Habs; exists B; spliter; Col.",
            "VernacExtend",
            "d83fa1c4ef6b8c5667ea49dc11302f2ce80be5fa"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; intro Habs.",
            "VernacExtend",
            "2c9f55454354c19a04ccdbc05aecfd2d2db97354"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "apply Habs; exists C; subst; split; Col.",
            "VernacExtend",
            "58e011e657e313aef98015d667cf332d62cc9ae4"
        ],
        [
            "destruct (eq_dec_points C D).",
            "VernacExtend",
            "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
        ],
        [
            "apply Habs; exists A; subst; split; Col.",
            "VernacExtend",
            "d51d67cf27d08854923a3d2d4a93ced90f95eeb4"
        ],
        [
            "apply HNPar; left; unfold Par_strict; repeat split; assumption.",
            "VernacExtend",
            "b85acd5566ed26cf54f5f68a049e5659474c9449"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; intros [I []]; apply HNCop; exists I; left; split; Col.",
            "VernacExtend",
            "ab8b42bfe67da60e2b905f0cba13ab39c6dfbeec"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "right; subst; intro; assert_diffs; auto.",
            "VernacExtend",
            "13c596bd4c52904cebd2eb4489174ca0c901c5bd"
        ],
        [
            "destruct (eq_dec_points C D).",
            "VernacExtend",
            "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
        ],
        [
            "right; subst; intro; assert_diffs; auto.",
            "VernacExtend",
            "13c596bd4c52904cebd2eb4489174ca0c901c5bd"
        ],
        [
            "destruct (col_dec A C D).",
            "VernacExtend",
            "3d62ff2c8ef6ea45164730e47d07d8ded7841905"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (col_dec B C D).",
            "VernacExtend",
            "b5609dbd60c0edb8690914f41fca3c26d92184d5"
        ],
        [
            "left; right; repeat split; assumption.",
            "VernacExtend",
            "affee97dcad389503f299adbf1cefe8b65ebdd6f"
        ],
        [
            "right; intros [[_ [_ [_ Habs]]]|].",
            "VernacExtend",
            "869dd96dd9feff121f25a10ad8168f29fe922aff"
        ],
        [
            "apply Habs; exists A; split; Col.",
            "VernacExtend",
            "6067f538bbcef68f1765f4ae2704d6b6bb4619c0"
        ],
        [
            "spliter; auto.",
            "VernacExtend",
            "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (Hdec A B C D) as [HPar|HNPar].",
            "VernacExtend",
            "52aacbf6729a6a0c11cf0a9d419b37ce62f3c928"
        ],
        [
            "left; left; repeat split; assumption.",
            "VernacExtend",
            "60063b3a53af7f2a9cdfa77b3aebecaa4dbffa8d"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros [HParS|Heq].",
            "VernacExtend",
            "f2766047b7b74aed62b6db1da275c455b91871df"
        ],
        [
            "apply HNPar; unfold Par_strict in HParS; spliter; assumption.",
            "VernacExtend",
            "34f38a121ddb6a997d9161302960a3f3ab1d88f0"
        ],
        [
            "spliter; auto.",
            "VernacExtend",
            "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; intro HPar; apply HNCop, par__coplanar, HPar.",
            "VernacExtend",
            "b3431bddd068be63b680fff6554e0de42d88958e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_trans__par_dec : postulate_of_transitivity_of_parallelism -> decidability_of_parallelism.",
            "VernacStartTheoremProof",
            "54731c42ef756a8d8c7096d63225c3320ba3c88a"
        ],
        [
            "intros HTP A B C D.",
            "VernacExtend",
            "8479983196a62b3305b45ecd605f4e29fced8628"
        ],
        [
            "elim (eq_dec_points A B); intro HAB; [treat_equalities; right; intro; assert_diffs; intuition|].",
            "VernacExtend",
            "1885c7cca05cc0399cd401e7206700d0f93d8c7b"
        ],
        [
            "elim (eq_dec_points C D); intro HCD; [treat_equalities; right; intro; assert_diffs; intuition|].",
            "VernacExtend",
            "633e2bd8e33f9e72754fd55f229e5e06f8fef1ba"
        ],
        [
            "destruct (parallel_existence1 A B C HAB) as [D' HPar].",
            "VernacExtend",
            "07a9905f18849bc32b1ef27eac37f028cf701753"
        ],
        [
            "elim (col_dec C D D'); intro HCol; [left; apply par_col_par with D'; Par; Col| right; intro; apply HCol; apply par_id_3; apply HTP with A B; Par].",
            "VernacExtend",
            "651543b9c516a94f0596665554b622e9672136d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_int : forall A B C, Col A B C <-> ~ (~ Bet A B C /\\ ~ Bet B C A /\\ ~ Bet C A B).",
            "VernacStartTheoremProof",
            "04a9419c8e665cee586aec9aa88274ca1cc08b31"
        ],
        [
            "intros A B C; unfold Col.",
            "VernacExtend",
            "a9cc2f34382d7cb7621b05aa98ff1ad31c7f3160"
        ],
        [
            "induction (bet_dec A B C); induction (bet_dec B C A); induction (bet_dec C A B); intuition.",
            "VernacExtend",
            "365a8797d8758ad3b8fdf5d3cae854a604b67f6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition playfair_ter := forall A1 A2 B1 B2 C1 C2 P, A1 <> A2 -> B1 <> B2 -> C1 <> C2 -> Col P B1 B2 -> Col P C1 C2 -> ~ (Col A1 B1 B2 /\\ Col A2 B1 B2) -> ~ (Col A1 C1 C2 /\\ Col A2 C1 C2) -> ~ (Col C1 B1 B2 /\\ Col C2 B1 B2) -> (exists I, ~ (~ (Col A1 A2 I /\\ Col B1 B2 I) /\\ ~ (Col A1 B1 I /\\ Col A2 B2 I) /\\ ~ (Col A1 B2 I /\\ Col A2 B1 I))) -> (exists I, ~ (~ (Col A1 A2 I /\\ Col C1 C2 I) /\\ ~ (Col A1 C1 I /\\ Col A2 C2 I) /\\ ~ (Col A1 C2 I /\\ Col A2 C1 I))) -> ~ (~ (exists I, Col I A1 A2 /\\ Col I B1 B2) /\\ ~ (exists I, Col I A1 A2 /\\ Col I C1 C2)).",
            "VernacDefinition",
            "2a4a77a1b779699bc242a06d9134699034a8df8f"
        ],
        [
            "Definition playfair_quater_qf A1 A2 B1 B2 C1 C2 P := A1 <> A2 /\\ B1 <> B2 /\\ C1 <> C2 /\\ Col P B1 B2 /\\ Col P C1 C2 /\\ ~ (Col A1 B1 B2 /\\ Col A2 B1 B2) /\\ ~ (Col A1 C1 C2 /\\ Col A2 C1 C2) /\\ ~ (Col C1 B1 B2 /\\ Col C2 B1 B2) /\\ (exists I, ~ (~ (Col A1 A2 I /\\ Col B1 B2 I) /\\ ~ (Col A1 B1 I /\\ Col A2 B2 I) /\\ ~ (Col A1 B2 I /\\ Col A2 B1 I))) /\\ (exists I, ~ (~ (Col A1 A2 I /\\ Col C1 C2 I) /\\ ~ (Col A1 C1 I /\\ Col A2 C2 I) /\\ ~ (Col A1 C2 I /\\ Col A2 C1 I))) /\\ ~ (exists I, Col I A1 A2 /\\ Col I B1 B2) /\\ ~ (exists I, Col I A1 A2 /\\ Col I C1 C2).",
            "VernacDefinition",
            "32d6ff4af75b4989a951afd9ee6182b7f7af3702"
        ],
        [
            "Definition playfair_quater := ~ exists A1 A2 B1 B2 C1 C2 P, playfair_quater_qf A1 A2 B1 B2 C1 C2 P.",
            "VernacDefinition",
            "b8eaceea6e614e0432721f317964d7658e90b9d4"
        ],
        [
            "Lemma playfair__playfair_ter : playfair_s_postulate -> playfair_ter.",
            "VernacStartTheoremProof",
            "a72f317580fc02d7ab53845b2959f952696a1ebf"
        ],
        [
            "intros HP A1 A2 B1 B2 C1 C2 P HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAB HIAC.",
            "VernacExtend",
            "4b10c96acb7e63dbcbe11a5a44df88c60fc6d23a"
        ],
        [
            "intros [HAB HAC].",
            "VernacExtend",
            "5c86e49a5ef113da2087731f607bb2f6e8852d5f"
        ],
        [
            "apply HNC3.",
            "VernacExtend",
            "adcdc25ca8406e88f2ed0abaf041fbb76a5643e4"
        ],
        [
            "apply (HP A1 A2 B1 B2 C1 C2 P); Col; left; repeat (split; Col).",
            "VernacExtend",
            "e08fa2a2640944e96dbe859530f2ec445ee6b484"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HIAB as [IAB HIAB]; exists IAB.",
            "VernacExtend",
            "6157b613a0046f9a923a287de119353e61c9b8c0"
        ],
        [
            "clear HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAC HAB HAC P C1 C2.",
            "VernacExtend",
            "a099e2185bc5ed72872b0318449ba7d9be9ce768"
        ],
        [
            "induction (col_dec A1 A2 IAB); induction (col_dec B1 B2 IAB); try solve [left; Col]; induction (col_dec A1 B1 IAB); induction (col_dec A2 B2 IAB); try solve [right; left; Col]; induction (col_dec A1 B2 IAB); induction (col_dec A2 B1 IAB); try solve [right; right; Col]; exfalso; apply HIAB; intuition.",
            "VernacExtend",
            "374158fceb97989ae5d8c23df8cc239281a3d3ad"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HIAC as [IAC HIAC]; exists IAC.",
            "VernacExtend",
            "ba2576e4b1410d9f36d74bc271742d6a29f602d5"
        ],
        [
            "clear HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAB HAB HAC P B1 B2.",
            "VernacExtend",
            "b52f1590e6b3afa3f63817b467b4ad53885fda54"
        ],
        [
            "induction (col_dec A1 A2 IAC); induction (col_dec C1 C2 IAC); try solve [left; Col]; induction (col_dec A1 C1 IAC); induction (col_dec A2 C2 IAC); try solve [right; left; Col]; induction (col_dec A1 C2 IAC); induction (col_dec A2 C1 IAC); try solve [right; right; Col]; exfalso; apply HIAC; intuition.",
            "VernacExtend",
            "160f796235c093105aaaa0971937c6cb7d2ce300"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma playfair__playfair_quater : playfair_s_postulate -> playfair_quater.",
            "VernacStartTheoremProof",
            "c0bfb6b948b62f2d4c144388d013f158a4ec5883"
        ],
        [
            "intro HP; intro HPQ; destruct HPQ as [A1 [A2 [B1 [B2 [C1 [C2 [P HPQ]]]]]]].",
            "VernacExtend",
            "9f5c6ed79a28b479c9f6c7d2290411987341563d"
        ],
        [
            "assert (H:= HP A1 A2 B1 B2 C1 C2 P); clear HP.",
            "VernacExtend",
            "9111c6e707513ee6c07ddc55ec8c57cd7f0f5911"
        ],
        [
            "destruct HPQ as [HD1 [HD2 [HD3 [HC1 [HC2 [HNC1 [HNC2 [HNC3 HPQ]]]]]]]].",
            "VernacExtend",
            "13f4b43fa780f1c7b2acb83682d7de269e7409db"
        ],
        [
            "destruct HPQ as [HIAB [HIAC [HNI1 HNI2]]].",
            "VernacExtend",
            "dadcad859a45e1d06c6cecafdf5b8bcd5597b018"
        ],
        [
            "apply HNC3; apply H; clear H; Col; left; repeat (split; try assumption); auto.",
            "VernacExtend",
            "31b5919c8b58d7d86b2a24043d11219b90259897"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HIAB as [IAB HIAB]; exists IAB.",
            "VernacExtend",
            "6157b613a0046f9a923a287de119353e61c9b8c0"
        ],
        [
            "clear HD1 HD2 HD3 HC1 HC2 HNC1 HNC2 HNC3 HIAC HNI1 HNI2 P C1 C2.",
            "VernacExtend",
            "b9657bf51e551b9815410a1077dec892284ed924"
        ],
        [
            "induction (col_dec A1 A2 IAB); induction (col_dec B1 B2 IAB); try solve [left; Col]; induction (col_dec A1 B1 IAB); induction (col_dec A2 B2 IAB); try solve [right; left; Col]; induction (col_dec A1 B2 IAB); induction (col_dec A2 B1 IAB); try solve [right; right; Col]; exfalso; apply HIAB; intuition.",
            "VernacExtend",
            "374158fceb97989ae5d8c23df8cc239281a3d3ad"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HIAC as [IAC HIAC]; exists IAC.",
            "VernacExtend",
            "ba2576e4b1410d9f36d74bc271742d6a29f602d5"
        ],
        [
            "clear HD1 HD2 HD3 HC1 HC2 HNC1 HNC2 HNC3 HIAB HNI1 HNI2 P B1 B2.",
            "VernacExtend",
            "e659cca76741604762848e9f7d76e1f3420e5a5d"
        ],
        [
            "induction (col_dec A1 A2 IAC); induction (col_dec C1 C2 IAC); try solve [left; Col]; induction (col_dec A1 C1 IAC); induction (col_dec A2 C2 IAC); try solve [right; left; Col]; induction (col_dec A1 C2 IAC); induction (col_dec A2 C1 IAC); try solve [right; right; Col]; exfalso; apply HIAC; intuition.",
            "VernacExtend",
            "160f796235c093105aaaa0971937c6cb7d2ce300"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma playfair_ter__playfair : playfair_ter -> playfair_s_postulate.",
            "VernacStartTheoremProof",
            "abca5e3f9dbe63598fce1c6693c30707a3557124"
        ],
        [
            "intros HP A1 A2 B1 B2 C1 C2 P HPar1 HP1 HPar2 HP2.",
            "VernacExtend",
            "8d4a18df5d7a0268f4a52c402bea65920ba6c282"
        ],
        [
            "elim (col_dec A1 B1 B2); intro HNC1.",
            "VernacExtend",
            "135dbe39d8df806ba81c74d81de113d6255eded0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A1) in HPar1; Col.",
            "VernacExtend",
            "35881b50320ddb4bdaeb69efaecbb34880d1f935"
        ],
        [
            "destruct HPar1 as [HC1 HC2]; clear HNC1.",
            "VernacExtend",
            "4f746a28cd35e8187df82371e579967d162a652d"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar2; spliter; try split; ColR.",
            "VernacExtend",
            "867ea6d5193b95828d186720894459dcaf382651"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (col_dec A1 C1 C2); intro HNC2.",
            "VernacExtend",
            "ea6d8e2e50b547206039ea646842e1a25adea3b6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A1) in HPar2; Col.",
            "VernacExtend",
            "9ac093161034ea3e4a68ddd07b1d46f27cd0bc2a"
        ],
        [
            "destruct HPar2 as [HC1 HC2]; clear HNC2.",
            "VernacExtend",
            "aa3304b6fbbc830e6f93d10027e7a0fe5b9262b4"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar1; spliter; try split; ColR.",
            "VernacExtend",
            "9ac0f9c313298b3aca3125bcb766cbd2f629d762"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (H : ~ ~ (Col C1 B1 B2 /\\ Col C2 B1 B2) -> Col C1 B1 B2 /\\ Col C2 B1 B2); [induction (col_dec C1 B1 B2); induction (col_dec C2 B1 B2); intuition| apply H; clear H; intro HNC3; apply (HP A1 A2 B1 B2 C1 C2 P); try solve [assert_diffs; Col]; try (intros [HC1 HC2]; intuition)].",
            "VernacExtend",
            "986ae4c6caa9bdfff77f41885455396b199f3201"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_symmetry in HPar1.",
            "VernacExtend",
            "556818992b761b5d267d1d74316ff246fee6de07"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ A1) in HPar1; Col.",
            "VernacExtend",
            "c74f5345abf4ca077f0cfca523e3b3d82c280d57"
        ],
        [
            "destruct HPar1 as [_ [_ [[IAB HIAB] _]]].",
            "VernacExtend",
            "d6ad756638eeb55ad879a1586c07a135693df8e5"
        ],
        [
            "exists IAB; intros [HIAB1 [HIAB2 HIAB3]].",
            "VernacExtend",
            "2517dfdc35713e011d9f6ccf8b90af7d45c0dcf4"
        ],
        [
            "elim HIAB; clear HIAB; intro HIAB; [apply HIAB1|]; try solve [spliter; split; Col].",
            "VernacExtend",
            "d2191dc27cfc32e051309f4ab7920addcf34295c"
        ],
        [
            "elim HIAB; clear HIAB; intro HIAB; [apply HIAB2|apply HIAB3]; spliter; split; Col.",
            "VernacExtend",
            "5d2debc9dc6f8da8cb4050a05ad83ffe775897bb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_symmetry in HPar2.",
            "VernacExtend",
            "6a3108e6c5fc93c579fc2430d872dca3b7f88c00"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ A1) in HPar2; Col.",
            "VernacExtend",
            "cdaa19048a1d06ac9a121b818438beb12ad5a207"
        ],
        [
            "destruct HPar2 as [_ [_ [[IAC HIAC] _]]].",
            "VernacExtend",
            "38f210783048d23792cce5147a9409d7b16ff1da"
        ],
        [
            "exists IAC; intros [HIAC1 [HIAC2 HIAC3]].",
            "VernacExtend",
            "98c33cfd684ea28f283fe41f1e169ddb35d24eaf"
        ],
        [
            "elim HIAC; clear HIAC; intro HIAC; [apply HIAC1|]; try solve [spliter; split; Col].",
            "VernacExtend",
            "d817e88b4d147297a5421bebdd523cbeea96e8f8"
        ],
        [
            "elim HIAC; clear HIAC; intro HIAC; [apply HIAC2|apply HIAC3]; spliter; split; Col.",
            "VernacExtend",
            "8768824e79cdd01e39303b4144ef070f267968a8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_symmetry in HPar1; apply par_symmetry in HPar2.",
            "VernacExtend",
            "d713d3929fc038fa99a22376bec3a34d6817eefc"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ A1) in HPar1; Col.",
            "VernacExtend",
            "c74f5345abf4ca077f0cfca523e3b3d82c280d57"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ A1) in HPar2; Col.",
            "VernacExtend",
            "cdaa19048a1d06ac9a121b818438beb12ad5a207"
        ],
        [
            "destruct HPar1 as [_ [_ [_ HI1]]]; destruct HPar2 as [_ [_ [_ HI2]]].",
            "VernacExtend",
            "9e6733f982628443d062ba825f0e85f9aec21b15"
        ],
        [
            "split; intros [I [HC1 HC2]]; [apply HI1| apply HI2]; exists I; Col.",
            "VernacExtend",
            "5a5ffb429d1d410c56e3c615ba7ce7dd6e925f9f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_ex_forall_not_7 : forall (T : Type) (P : T -> T -> T -> T -> T -> T -> T -> Prop), ~(exists x1 : T, exists x2 : T, exists x3 : T, exists x4 : T, exists x5 : T, exists x6 : T, exists x7 :T, P x1 x2 x3 x4 x5 x6 x7) <-> forall x1 : T, forall x2 : T, forall x3 : T, forall x4 : T, forall x5 : T, forall x6 : T, forall x7 : T, ~ P x1 x2 x3 x4 x5 x6 x7.",
            "VernacStartTheoremProof",
            "1764a19947525bc566fece74afb9508463a4b209"
        ],
        [
            "intros; split; intro H1; intros; intro H2; [apply H1; exists x1, x2, x3, x4, x5, x6, x7; auto|].",
            "VernacExtend",
            "9b067c4d30c1a236a0891a4a0cdc04be5e214743"
        ],
        [
            "destruct H2 as [x1 [x2 [x3 [x4 [x5 [x6 [x7 H2]]]]]]].",
            "VernacExtend",
            "1b6fdbef72c55d1df9c24802ca5586d4ff9c77c4"
        ],
        [
            "apply (H1 x1 x2 x3 x4 x5 x6 x7); auto.",
            "VernacExtend",
            "e19b4d955633997b2b89d5273cd62cbbf027e21c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma playfair_quater__playfair : playfair_quater -> playfair_s_postulate.",
            "VernacStartTheoremProof",
            "f5768806b6164a6f836231f62d79455745242747"
        ],
        [
            "intros HP A1 A2 B1 B2 C1 C2 P HPar1 HP1 HPar2 HP2.",
            "VernacExtend",
            "8d4a18df5d7a0268f4a52c402bea65920ba6c282"
        ],
        [
            "assert (H : playfair_quater <-> forall A1 A2 B1 B2 C1 C2 P, ~ playfair_quater_qf A1 A2 B1 B2 C1 C2 P) by (apply not_ex_forall_not_7).",
            "VernacExtend",
            "036e7bf16d2859d133c98a48b7da788341a9c596"
        ],
        [
            "rewrite H in HP; clear H.",
            "VernacExtend",
            "842995546fe616dc1f4420bd7465ca37cb224660"
        ],
        [
            "assert (H : Col C1 B1 B2 /\\ Col C2 B1 B2 <-> ~ ~ (Col C1 B1 B2 /\\ Col C2 B1 B2)) by (induction (col_dec C1 B1 B2); induction (col_dec C2 B1 B2); tauto).",
            "VernacExtend",
            "71eeea3ae624ddae87b60ef61aafbf821d3478a5"
        ],
        [
            "apply H; clear H; intro HNC; apply (HP A1 A2 B1 B2 C1 C2 P).",
            "VernacExtend",
            "896f5d23d20186a933a6e4191e6cee6b2daecad0"
        ],
        [
            "repeat try (split; [assert_diffs; assumption|]).",
            "VernacExtend",
            "7d41045ec002fa95919eb78017cd3c994d35e132"
        ],
        [
            "assert (HNC1 : ~ Col A1 B1 B2).",
            "VernacExtend",
            "ed1988a6526ce2d0c02ae350acd202731bd3849a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A1) in HPar1; Col; spliter.",
            "VernacExtend",
            "c945d60f6989d514e4a77fd7ab9fd63af20dda88"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar2; spliter; try ColR.",
            "VernacExtend",
            "8425cb5194c7accedc1bc6f09a512f6b61fc0b25"
        ],
        [
            "apply HNC; split; ColR.",
            "VernacExtend",
            "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC2 : ~ Col A2 B1 B2).",
            "VernacExtend",
            "aa48b69588cea3b5f9b5beb7070bf9765e26cd5d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A2) in HPar1; Col; spliter.",
            "VernacExtend",
            "f339ab2e0013a5f04aaa0468b493cb7fb828d59d"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar2; spliter; try ColR.",
            "VernacExtend",
            "8425cb5194c7accedc1bc6f09a512f6b61fc0b25"
        ],
        [
            "apply HNC; split; ColR.",
            "VernacExtend",
            "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC3 : ~ Col A1 C1 C2).",
            "VernacExtend",
            "a7f6e60d8a742bd1df951984e3d37885bf3620aa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A1) in HPar2; Col; spliter.",
            "VernacExtend",
            "e12c110fcd32f718894680fef6a960f71fda01d4"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar1; spliter; try ColR.",
            "VernacExtend",
            "a02927e8a69100ec64eaccca8f6f81109e7db7e2"
        ],
        [
            "apply HNC; split; ColR.",
            "VernacExtend",
            "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC4 : ~ Col A2 C1 C2).",
            "VernacExtend",
            "d6de88c0e52de0099364e76f1f6e28e8ef97f9fe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (HA : A1 <> A2) by (assert_diffs; auto).",
            "VernacExtend",
            "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
        ],
        [
            "assert (HB : B1 <> B2) by (assert_diffs; auto).",
            "VernacExtend",
            "c53fdbf037502f8f1456277b2b3f6942651923db"
        ],
        [
            "assert (HC : C1 <> C2) by (assert_diffs; auto).",
            "VernacExtend",
            "54fb174a0abb3632422b2a30907072b69d370ce6"
        ],
        [
            "apply (not_strict_par _ _ _ _ A2) in HPar2; Col; spliter.",
            "VernacExtend",
            "c47616c05b821407d8ef5558c2691bfb39b52c73"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HPar1; spliter; try ColR.",
            "VernacExtend",
            "a02927e8a69100ec64eaccca8f6f81109e7db7e2"
        ],
        [
            "apply HNC; split; ColR.",
            "VernacExtend",
            "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply par_symmetry in HPar1; apply (par_not_col_strict _ _ _ _ A1) in HPar1; Col; apply par_strict_symmetry in HPar1; destruct HPar1 as [_ [_ [HCop1 HPar1]]].",
            "VernacExtend",
            "04b2ea56532f5f7fa3c23092e745df0894365674"
        ],
        [
            "apply par_symmetry in HPar2; apply (par_not_col_strict _ _ _ _ A1) in HPar2; Col; apply par_strict_symmetry in HPar2; destruct HPar2 as [_ [_ [HCop2 HPar2]]].",
            "VernacExtend",
            "7a2deec72a40b06b1993cba291d97fc25e622aa0"
        ],
        [
            "repeat (split; try tauto).",
            "VernacExtend",
            "b9c79dc2020ea869f8585e920bfa1b1550a71354"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HCop1 as [IAB HIAB].",
            "VernacExtend",
            "5c02d83391fb2017bb6745c35552f67bf854aee5"
        ],
        [
            "exists IAB; intros [HIAB1 [HIAB2 HIAB3]].",
            "VernacExtend",
            "2517dfdc35713e011d9f6ccf8b90af7d45c0dcf4"
        ],
        [
            "elim HIAB; clear HIAB; intro HIAB; [apply HIAB1|]; try solve [spliter; split; Col].",
            "VernacExtend",
            "d2191dc27cfc32e051309f4ab7920addcf34295c"
        ],
        [
            "elim HIAB; clear HIAB; intro HIAB; [apply HIAB2|apply HIAB3]; spliter; split; Col.",
            "VernacExtend",
            "5d2debc9dc6f8da8cb4050a05ad83ffe775897bb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct HCop2 as [IAC HIAC].",
            "VernacExtend",
            "846af9db18d95b941e0183b779203dff4c67c84f"
        ],
        [
            "exists IAC; intros [HIAC1 [HIAC2 HIAC3]].",
            "VernacExtend",
            "98c33cfd684ea28f283fe41f1e169ddb35d24eaf"
        ],
        [
            "elim HIAC; clear HIAC; intro HIAC; [apply HIAC1|]; try solve [spliter; split; Col].",
            "VernacExtend",
            "d817e88b4d147297a5421bebdd523cbeea96e8f8"
        ],
        [
            "elim HIAC; clear HIAC; intro HIAC; [apply HIAC2|apply HIAC3]; spliter; split; Col.",
            "VernacExtend",
            "8768824e79cdd01e39303b4144ef070f267968a8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End par_trans_NID.",
            "VernacEndSegment",
            "bae76338278095887666231486f80ebc22d81786"
        ]
    ],
    "proofs": [
        {
            "name": "par_dec_NID",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "split; intros Hdec A B C D; destruct (cop_dec A B C D) as [|HNCop].",
                        "VernacExtend",
                        "464c712f90a825d7fcf1d5c9875272c7a1678f09"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (Hdec A B C D) as [[HParS|Heq]|HNPar].",
                        "VernacExtend",
                        "68adb546fe3f9fe185c28082a152b085b55c05d6"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; unfold Par_strict in HParS; spliter; assumption.",
                        "VernacExtend",
                        "dab3e755de9fc8d9983989dde9240f26f515f3a2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right; intro Habs; apply Habs; exists B; spliter; Col.",
                        "VernacExtend",
                        "d83fa1c4ef6b8c5667ea49dc11302f2ce80be5fa"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right; intro Habs.",
                        "VernacExtend",
                        "2c9f55454354c19a04ccdbc05aecfd2d2db97354"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "apply Habs; exists C; subst; split; Col.",
                        "VernacExtend",
                        "58e011e657e313aef98015d667cf332d62cc9ae4"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points C D).",
                        "VernacExtend",
                        "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
                    ]
                },
                {
                    "command": [
                        "apply Habs; exists A; subst; split; Col.",
                        "VernacExtend",
                        "d51d67cf27d08854923a3d2d4a93ced90f95eeb4"
                    ]
                },
                {
                    "command": [
                        "apply HNPar; left; unfold Par_strict; repeat split; assumption.",
                        "VernacExtend",
                        "b85acd5566ed26cf54f5f68a049e5659474c9449"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left; intros [I []]; apply HNCop; exists I; left; split; Col.",
                        "VernacExtend",
                        "ab8b42bfe67da60e2b905f0cba13ab39c6dfbeec"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "right; subst; intro; assert_diffs; auto.",
                        "VernacExtend",
                        "13c596bd4c52904cebd2eb4489174ca0c901c5bd"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points C D).",
                        "VernacExtend",
                        "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
                    ]
                },
                {
                    "command": [
                        "right; subst; intro; assert_diffs; auto.",
                        "VernacExtend",
                        "13c596bd4c52904cebd2eb4489174ca0c901c5bd"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A C D).",
                        "VernacExtend",
                        "3d62ff2c8ef6ea45164730e47d07d8ded7841905"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C D).",
                        "VernacExtend",
                        "b5609dbd60c0edb8690914f41fca3c26d92184d5"
                    ]
                },
                {
                    "command": [
                        "left; right; repeat split; assumption.",
                        "VernacExtend",
                        "affee97dcad389503f299adbf1cefe8b65ebdd6f"
                    ]
                },
                {
                    "command": [
                        "right; intros [[_ [_ [_ Habs]]]|].",
                        "VernacExtend",
                        "869dd96dd9feff121f25a10ad8168f29fe922aff"
                    ]
                },
                {
                    "command": [
                        "apply Habs; exists A; split; Col.",
                        "VernacExtend",
                        "6067f538bbcef68f1765f4ae2704d6b6bb4619c0"
                    ]
                },
                {
                    "command": [
                        "spliter; auto.",
                        "VernacExtend",
                        "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (Hdec A B C D) as [HPar|HNPar].",
                        "VernacExtend",
                        "52aacbf6729a6a0c11cf0a9d419b37ce62f3c928"
                    ]
                },
                {
                    "command": [
                        "left; left; repeat split; assumption.",
                        "VernacExtend",
                        "60063b3a53af7f2a9cdfa77b3aebecaa4dbffa8d"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros [HParS|Heq].",
                        "VernacExtend",
                        "f2766047b7b74aed62b6db1da275c455b91871df"
                    ]
                },
                {
                    "command": [
                        "apply HNPar; unfold Par_strict in HParS; spliter; assumption.",
                        "VernacExtend",
                        "34f38a121ddb6a997d9161302960a3f3ab1d88f0"
                    ]
                },
                {
                    "command": [
                        "spliter; auto.",
                        "VernacExtend",
                        "c2cac3bb1b1323a9bafc5ba97aed0b93f6b14d28"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; intro HPar; apply HNCop, par__coplanar, HPar.",
                        "VernacExtend",
                        "b3431bddd068be63b680fff6554e0de42d88958e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_trans__par_dec",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros HTP A B C D.",
                        "VernacExtend",
                        "8479983196a62b3305b45ecd605f4e29fced8628"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A B); intro HAB; [treat_equalities; right; intro; assert_diffs; intuition|].",
                        "VernacExtend",
                        "1885c7cca05cc0399cd401e7206700d0f93d8c7b"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points C D); intro HCD; [treat_equalities; right; intro; assert_diffs; intuition|].",
                        "VernacExtend",
                        "633e2bd8e33f9e72754fd55f229e5e06f8fef1ba"
                    ]
                },
                {
                    "command": [
                        "destruct (parallel_existence1 A B C HAB) as [D' HPar].",
                        "VernacExtend",
                        "07a9905f18849bc32b1ef27eac37f028cf701753"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec C D D'); intro HCol; [left; apply par_col_par with D'; Par; Col| right; intro; apply HCol; apply par_id_3; apply HTP with A B; Par].",
                        "VernacExtend",
                        "651543b9c516a94f0596665554b622e9672136d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_int",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros A B C; unfold Col.",
                        "VernacExtend",
                        "a9cc2f34382d7cb7621b05aa98ff1ad31c7f3160"
                    ]
                },
                {
                    "command": [
                        "induction (bet_dec A B C); induction (bet_dec B C A); induction (bet_dec C A B); intuition.",
                        "VernacExtend",
                        "365a8797d8758ad3b8fdf5d3cae854a604b67f6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "playfair__playfair_ter",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros HP A1 A2 B1 B2 C1 C2 P HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAB HIAC.",
                        "VernacExtend",
                        "4b10c96acb7e63dbcbe11a5a44df88c60fc6d23a"
                    ]
                },
                {
                    "command": [
                        "intros [HAB HAC].",
                        "VernacExtend",
                        "5c86e49a5ef113da2087731f607bb2f6e8852d5f"
                    ]
                },
                {
                    "command": [
                        "apply HNC3.",
                        "VernacExtend",
                        "adcdc25ca8406e88f2ed0abaf041fbb76a5643e4"
                    ]
                },
                {
                    "command": [
                        "apply (HP A1 A2 B1 B2 C1 C2 P); Col; left; repeat (split; Col).",
                        "VernacExtend",
                        "e08fa2a2640944e96dbe859530f2ec445ee6b484"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HIAB as [IAB HIAB]; exists IAB.",
                        "VernacExtend",
                        "6157b613a0046f9a923a287de119353e61c9b8c0"
                    ]
                },
                {
                    "command": [
                        "clear HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAC HAB HAC P C1 C2.",
                        "VernacExtend",
                        "a099e2185bc5ed72872b0318449ba7d9be9ce768"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A1 A2 IAB); induction (col_dec B1 B2 IAB); try solve [left; Col]; induction (col_dec A1 B1 IAB); induction (col_dec A2 B2 IAB); try solve [right; left; Col]; induction (col_dec A1 B2 IAB); induction (col_dec A2 B1 IAB); try solve [right; right; Col]; exfalso; apply HIAB; intuition.",
                        "VernacExtend",
                        "374158fceb97989ae5d8c23df8cc239281a3d3ad"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HIAC as [IAC HIAC]; exists IAC.",
                        "VernacExtend",
                        "ba2576e4b1410d9f36d74bc271742d6a29f602d5"
                    ]
                },
                {
                    "command": [
                        "clear HA HB HC HP1 HP2 HNC1 HNC2 HNC3 HIAB HAB HAC P B1 B2.",
                        "VernacExtend",
                        "b52f1590e6b3afa3f63817b467b4ad53885fda54"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A1 A2 IAC); induction (col_dec C1 C2 IAC); try solve [left; Col]; induction (col_dec A1 C1 IAC); induction (col_dec A2 C2 IAC); try solve [right; left; Col]; induction (col_dec A1 C2 IAC); induction (col_dec A2 C1 IAC); try solve [right; right; Col]; exfalso; apply HIAC; intuition.",
                        "VernacExtend",
                        "160f796235c093105aaaa0971937c6cb7d2ce300"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "playfair__playfair_quater",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intro HP; intro HPQ; destruct HPQ as [A1 [A2 [B1 [B2 [C1 [C2 [P HPQ]]]]]]].",
                        "VernacExtend",
                        "9f5c6ed79a28b479c9f6c7d2290411987341563d"
                    ]
                },
                {
                    "command": [
                        "assert (H:= HP A1 A2 B1 B2 C1 C2 P); clear HP.",
                        "VernacExtend",
                        "9111c6e707513ee6c07ddc55ec8c57cd7f0f5911"
                    ]
                },
                {
                    "command": [
                        "destruct HPQ as [HD1 [HD2 [HD3 [HC1 [HC2 [HNC1 [HNC2 [HNC3 HPQ]]]]]]]].",
                        "VernacExtend",
                        "13f4b43fa780f1c7b2acb83682d7de269e7409db"
                    ]
                },
                {
                    "command": [
                        "destruct HPQ as [HIAB [HIAC [HNI1 HNI2]]].",
                        "VernacExtend",
                        "dadcad859a45e1d06c6cecafdf5b8bcd5597b018"
                    ]
                },
                {
                    "command": [
                        "apply HNC3; apply H; clear H; Col; left; repeat (split; try assumption); auto.",
                        "VernacExtend",
                        "31b5919c8b58d7d86b2a24043d11219b90259897"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HIAB as [IAB HIAB]; exists IAB.",
                        "VernacExtend",
                        "6157b613a0046f9a923a287de119353e61c9b8c0"
                    ]
                },
                {
                    "command": [
                        "clear HD1 HD2 HD3 HC1 HC2 HNC1 HNC2 HNC3 HIAC HNI1 HNI2 P C1 C2.",
                        "VernacExtend",
                        "b9657bf51e551b9815410a1077dec892284ed924"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A1 A2 IAB); induction (col_dec B1 B2 IAB); try solve [left; Col]; induction (col_dec A1 B1 IAB); induction (col_dec A2 B2 IAB); try solve [right; left; Col]; induction (col_dec A1 B2 IAB); induction (col_dec A2 B1 IAB); try solve [right; right; Col]; exfalso; apply HIAB; intuition.",
                        "VernacExtend",
                        "374158fceb97989ae5d8c23df8cc239281a3d3ad"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HIAC as [IAC HIAC]; exists IAC.",
                        "VernacExtend",
                        "ba2576e4b1410d9f36d74bc271742d6a29f602d5"
                    ]
                },
                {
                    "command": [
                        "clear HD1 HD2 HD3 HC1 HC2 HNC1 HNC2 HNC3 HIAB HNI1 HNI2 P B1 B2.",
                        "VernacExtend",
                        "e659cca76741604762848e9f7d76e1f3420e5a5d"
                    ]
                },
                {
                    "command": [
                        "induction (col_dec A1 A2 IAC); induction (col_dec C1 C2 IAC); try solve [left; Col]; induction (col_dec A1 C1 IAC); induction (col_dec A2 C2 IAC); try solve [right; left; Col]; induction (col_dec A1 C2 IAC); induction (col_dec A2 C1 IAC); try solve [right; right; Col]; exfalso; apply HIAC; intuition.",
                        "VernacExtend",
                        "160f796235c093105aaaa0971937c6cb7d2ce300"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_ex_forall_not_7",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros; split; intro H1; intros; intro H2; [apply H1; exists x1, x2, x3, x4, x5, x6, x7; auto|].",
                        "VernacExtend",
                        "9b067c4d30c1a236a0891a4a0cdc04be5e214743"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [x1 [x2 [x3 [x4 [x5 [x6 [x7 H2]]]]]]].",
                        "VernacExtend",
                        "1b6fdbef72c55d1df9c24802ca5586d4ff9c77c4"
                    ]
                },
                {
                    "command": [
                        "apply (H1 x1 x2 x3 x4 x5 x6 x7); auto.",
                        "VernacExtend",
                        "e19b4d955633997b2b89d5273cd62cbbf027e21c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "playfair_quater__playfair",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros HP A1 A2 B1 B2 C1 C2 P HPar1 HP1 HPar2 HP2.",
                        "VernacExtend",
                        "8d4a18df5d7a0268f4a52c402bea65920ba6c282"
                    ]
                },
                {
                    "command": [
                        "assert (H : playfair_quater <-> forall A1 A2 B1 B2 C1 C2 P, ~ playfair_quater_qf A1 A2 B1 B2 C1 C2 P) by (apply not_ex_forall_not_7).",
                        "VernacExtend",
                        "036e7bf16d2859d133c98a48b7da788341a9c596"
                    ]
                },
                {
                    "command": [
                        "rewrite H in HP; clear H.",
                        "VernacExtend",
                        "842995546fe616dc1f4420bd7465ca37cb224660"
                    ]
                },
                {
                    "command": [
                        "assert (H : Col C1 B1 B2 /\\ Col C2 B1 B2 <-> ~ ~ (Col C1 B1 B2 /\\ Col C2 B1 B2)) by (induction (col_dec C1 B1 B2); induction (col_dec C2 B1 B2); tauto).",
                        "VernacExtend",
                        "71eeea3ae624ddae87b60ef61aafbf821d3478a5"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intro HNC; apply (HP A1 A2 B1 B2 C1 C2 P).",
                        "VernacExtend",
                        "896f5d23d20186a933a6e4191e6cee6b2daecad0"
                    ]
                },
                {
                    "command": [
                        "repeat try (split; [assert_diffs; assumption|]).",
                        "VernacExtend",
                        "7d41045ec002fa95919eb78017cd3c994d35e132"
                    ]
                },
                {
                    "command": [
                        "assert (HNC1 : ~ Col A1 B1 B2).",
                        "VernacExtend",
                        "ed1988a6526ce2d0c02ae350acd202731bd3849a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (HA : A1 <> A2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
                    ]
                },
                {
                    "command": [
                        "assert (HB : B1 <> B2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "c53fdbf037502f8f1456277b2b3f6942651923db"
                    ]
                },
                {
                    "command": [
                        "assert (HC : C1 <> C2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "54fb174a0abb3632422b2a30907072b69d370ce6"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ A1) in HPar1; Col; spliter.",
                        "VernacExtend",
                        "c945d60f6989d514e4a77fd7ab9fd63af20dda88"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HPar2; spliter; try ColR.",
                        "VernacExtend",
                        "8425cb5194c7accedc1bc6f09a512f6b61fc0b25"
                    ]
                },
                {
                    "command": [
                        "apply HNC; split; ColR.",
                        "VernacExtend",
                        "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A2 B1 B2).",
                        "VernacExtend",
                        "aa48b69588cea3b5f9b5beb7070bf9765e26cd5d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (HA : A1 <> A2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
                    ]
                },
                {
                    "command": [
                        "assert (HB : B1 <> B2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "c53fdbf037502f8f1456277b2b3f6942651923db"
                    ]
                },
                {
                    "command": [
                        "assert (HC : C1 <> C2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "54fb174a0abb3632422b2a30907072b69d370ce6"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ A2) in HPar1; Col; spliter.",
                        "VernacExtend",
                        "f339ab2e0013a5f04aaa0468b493cb7fb828d59d"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HPar2; spliter; try ColR.",
                        "VernacExtend",
                        "8425cb5194c7accedc1bc6f09a512f6b61fc0b25"
                    ]
                },
                {
                    "command": [
                        "apply HNC; split; ColR.",
                        "VernacExtend",
                        "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC3 : ~ Col A1 C1 C2).",
                        "VernacExtend",
                        "a7f6e60d8a742bd1df951984e3d37885bf3620aa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (HA : A1 <> A2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
                    ]
                },
                {
                    "command": [
                        "assert (HB : B1 <> B2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "c53fdbf037502f8f1456277b2b3f6942651923db"
                    ]
                },
                {
                    "command": [
                        "assert (HC : C1 <> C2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "54fb174a0abb3632422b2a30907072b69d370ce6"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ A1) in HPar2; Col; spliter.",
                        "VernacExtend",
                        "e12c110fcd32f718894680fef6a960f71fda01d4"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HPar1; spliter; try ColR.",
                        "VernacExtend",
                        "a02927e8a69100ec64eaccca8f6f81109e7db7e2"
                    ]
                },
                {
                    "command": [
                        "apply HNC; split; ColR.",
                        "VernacExtend",
                        "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC4 : ~ Col A2 C1 C2).",
                        "VernacExtend",
                        "d6de88c0e52de0099364e76f1f6e28e8ef97f9fe"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (HA : A1 <> A2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2a80f7ed7c392e3b9b966ed20950aaac23dea8ef"
                    ]
                },
                {
                    "command": [
                        "assert (HB : B1 <> B2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "c53fdbf037502f8f1456277b2b3f6942651923db"
                    ]
                },
                {
                    "command": [
                        "assert (HC : C1 <> C2) by (assert_diffs; auto).",
                        "VernacExtend",
                        "54fb174a0abb3632422b2a30907072b69d370ce6"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ A2) in HPar2; Col; spliter.",
                        "VernacExtend",
                        "c47616c05b821407d8ef5558c2691bfb39b52c73"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HPar1; spliter; try ColR.",
                        "VernacExtend",
                        "a02927e8a69100ec64eaccca8f6f81109e7db7e2"
                    ]
                },
                {
                    "command": [
                        "apply HNC; split; ColR.",
                        "VernacExtend",
                        "415d7a9d179e9e38f1a11cfb989b400cf51a7906"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry in HPar1; apply (par_not_col_strict _ _ _ _ A1) in HPar1; Col; apply par_strict_symmetry in HPar1; destruct HPar1 as [_ [_ [HCop1 HPar1]]].",
                        "VernacExtend",
                        "04b2ea56532f5f7fa3c23092e745df0894365674"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry in HPar2; apply (par_not_col_strict _ _ _ _ A1) in HPar2; Col; apply par_strict_symmetry in HPar2; destruct HPar2 as [_ [_ [HCop2 HPar2]]].",
                        "VernacExtend",
                        "7a2deec72a40b06b1993cba291d97fc25e622aa0"
                    ]
                },
                {
                    "command": [
                        "repeat (split; try tauto).",
                        "VernacExtend",
                        "b9c79dc2020ea869f8585e920bfa1b1550a71354"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HCop1 as [IAB HIAB].",
                        "VernacExtend",
                        "5c02d83391fb2017bb6745c35552f67bf854aee5"
                    ]
                },
                {
                    "command": [
                        "exists IAB; intros [HIAB1 [HIAB2 HIAB3]].",
                        "VernacExtend",
                        "2517dfdc35713e011d9f6ccf8b90af7d45c0dcf4"
                    ]
                },
                {
                    "command": [
                        "elim HIAB; clear HIAB; intro HIAB; [apply HIAB1|]; try solve [spliter; split; Col].",
                        "VernacExtend",
                        "d2191dc27cfc32e051309f4ab7920addcf34295c"
                    ]
                },
                {
                    "command": [
                        "elim HIAB; clear HIAB; intro HIAB; [apply HIAB2|apply HIAB3]; spliter; split; Col.",
                        "VernacExtend",
                        "5d2debc9dc6f8da8cb4050a05ad83ffe775897bb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct HCop2 as [IAC HIAC].",
                        "VernacExtend",
                        "846af9db18d95b941e0183b779203dff4c67c84f"
                    ]
                },
                {
                    "command": [
                        "exists IAC; intros [HIAC1 [HIAC2 HIAC3]].",
                        "VernacExtend",
                        "98c33cfd684ea28f283fe41f1e169ddb35d24eaf"
                    ]
                },
                {
                    "command": [
                        "elim HIAC; clear HIAC; intro HIAC; [apply HIAC1|]; try solve [spliter; split; Col].",
                        "VernacExtend",
                        "d817e88b4d147297a5421bebdd523cbeea96e8f8"
                    ]
                },
                {
                    "command": [
                        "elim HIAC; clear HIAC; intro HIAC; [apply HIAC2|apply HIAC3]; spliter; split; Col.",
                        "VernacExtend",
                        "8768824e79cdd01e39303b4144ef070f267968a8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}