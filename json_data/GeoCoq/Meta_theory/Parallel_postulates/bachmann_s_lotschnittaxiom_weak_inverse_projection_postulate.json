{
    "filename": "Meta_theory/Parallel_postulates/bachmann_s_lotschnittaxiom_weak_inverse_projection_postulate.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.suma.",
            "VernacRequire",
            "d2192c30d59bff3f952029b5d7f08161afc2f55b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section bachmann_s_lotschnittaxiom_weak_inverse_projection_postulate.",
            "VernacBeginSection",
            "8f49609adc29655989cdf933e9b720eb9b7edfbe"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma bachmann_s_lotschnittaxiom__weak_inverse_projection_postulate : bachmann_s_lotschnittaxiom -> weak_inverse_projection_postulate.",
            "VernacStartTheoremProof",
            "aae5bcb272439dc458634c2362814a6188cba37a"
        ],
        [
            "intro bla.",
            "VernacExtend",
            "990294c9efe224362b19628d57b39dff06b5e8de"
        ],
        [
            "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
            "VernacExtend",
            "eeceb336b5f61452b510e071123981b174b278b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear bla; intro lotschnitt.",
            "VernacExtend",
            "358b0c013c9f8c090f3fa8115d9a1f87a0b87d84"
        ],
        [
            "intros A B C D E F P Q HAcute HPer HSuma HOut HPQ HPerP HCop.",
            "VernacExtend",
            "ce90f9af698b1820ecaf49c7b5405ca3158bd39f"
        ],
        [
            "suma.assert_diffs.",
            "VernacExtend",
            "2af484ad15d938c812014136cf23670dbe3133f0"
        ],
        [
            "assert (HNCol : ~ Col A B C).",
            "VernacExtend",
            "b97ecdaa626a6737043c5f4e28952f4464e2831b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HCol.",
            "VernacExtend",
            "7339a24608f9044c1539af209f14a20bfa73ed6f"
        ],
        [
            "apply (per_not_col D E F); auto.",
            "VernacExtend",
            "5328b416f8e6cc1b90fc85f49050263bd4e4d744"
        ],
        [
            "apply (col2_suma__col A B C A B C); assumption.",
            "VernacExtend",
            "4386a56745775fe9de164b53bf563d37496af406"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNCol1 : ~ Col B C P) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "3bd0965149f4ab55e91e222322854ebf00432374"
        ],
        [
            "destruct (l10_6_existence_spec B C P) as [P' HP']; trivial.",
            "VernacExtend",
            "31836d7d3d9415eb40e0a2814ff0a52117d96de2"
        ],
        [
            "assert (HP'1 : Reflect P P' B C) by (apply is_image_is_image_spec; auto).",
            "VernacExtend",
            "2ab66647496b14397e9034d0f3291082ed515f58"
        ],
        [
            "assert (HNCol2 : ~ Col B C P') by (apply osym_not_col with P; trivial).",
            "VernacExtend",
            "76313ace86182484386f9c675d05ab49d7093fba"
        ],
        [
            "destruct (l10_6_existence_spec B C Q) as [Q' HQ']; trivial.",
            "VernacExtend",
            "b128faf57231de3db7c32b2235d7cc138f1eed09"
        ],
        [
            "assert (HQ'1 : Reflect Q Q' B C) by (apply is_image_is_image_spec; auto).",
            "VernacExtend",
            "b66b89ac1305d7983e89a8a79bf3455b989af44b"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (P' <> Q').",
            "VernacExtend",
            "638ed31de6854234d7a94ce022037e1d8209530f"
        ],
        [
            "intro; subst Q'; assert (P = Q) by (apply (l10_2_uniqueness B C P'); assumption); auto.",
            "VernacExtend",
            "1f40fd4926459a97097cd2c0e2f707281648b8c1"
        ],
        [
            "apply l6_6 in HOut.",
            "VernacExtend",
            "2b0b4ff0de20edd0cb9a056a9dc49cda7d8e3a42"
        ],
        [
            "assert (HCongA : CongA C B P' A B C).",
            "VernacExtend",
            "ee0eb9d3a2e74d18030924bcaa9c6e01c6cbc889"
        ],
        [
            "apply out_conga with C P' P C; try (apply out_trivial); auto.",
            "VernacExtend",
            "0afda05e9f2a101a1190d876b1b075cee8434d39"
        ],
        [
            "apply conga_sym, conga_left_comm, reflectl__conga; auto.",
            "VernacExtend",
            "be2bd4ff01cb5bd2f24d8fd6e25cde907a590def"
        ],
        [
            "apply is_image_spec_rev, HP'.",
            "VernacExtend",
            "b31fd0213e3093772bd9c4482a509e6473c6fa38"
        ],
        [
            "assert (HTS : TS B C P P').",
            "VernacExtend",
            "dc7c57802a43f07d98209d99a21c2c9d5136fe0b"
        ],
        [
            "repeat split; Col; destruct HP' as [[X [HX1 HX2]] _]; exists X; split; Col; Between.",
            "VernacExtend",
            "675a894732f3cacafc5004e2a6996da80a583ce5"
        ],
        [
            "assert (HPer1 : Per A B P').",
            "VernacExtend",
            "a043f71f65ca5796490f7a57cd3c96787d0f46c6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l11_17 with D E F; trivial.",
            "VernacExtend",
            "f529ae3e935133cc6013599fd4bc5214e6362e73"
        ],
        [
            "apply (suma2__conga A B C A B C); trivial.",
            "VernacExtend",
            "e0521f889afaff37cc213bb32582c4a6c3797e03"
        ],
        [
            "apply conga3_suma__suma with A B C C B P' A B P'; CongA.",
            "VernacExtend",
            "442649d0a3afd86109f36ec86ec45dacb3cb7909"
        ],
        [
            "exists P'; assert_diffs; repeat (split; CongA).",
            "VernacExtend",
            "1eb4d2b7dee64da627ffa34d912938b1bcb555fb"
        ],
        [
            "apply l9_9, l9_5 with P B; Col.",
            "VernacExtend",
            "01cb2e021aa1c1808c37b2b68f965f1a1e14f566"
        ],
        [
            "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
            "VernacExtend",
            "54dccd31df2b511716f61c9d57adbb1501fb7679"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNCol3 : ~ Col A B P') by (apply per_not_col; auto).",
            "VernacExtend",
            "7ca4b059237dc259d537430b4919f9affbf9c901"
        ],
        [
            "assert (HNCol4 : ~ Col B P' P) by (intro; apply HNCol3; ColR).",
            "VernacExtend",
            "3e42d723aaa102236d7f3a2a019ee5b61841a845"
        ],
        [
            "assert (HPerp1 : Perp A B B P') by (apply per_perp; auto).",
            "VernacExtend",
            "d60e836931d080aefcfc2b62ecab789720d80d60"
        ],
        [
            "assert (HPerp2 : Perp A B P Q) by (apply perp_left_comm, perp_col with P; Col; apply per_perp; auto).",
            "VernacExtend",
            "428390a89e4cb436b1346d5c108ac9c361e2e3a6"
        ],
        [
            "assert (HPerp3 : Perp B P' P' Q').",
            "VernacExtend",
            "50df244a36075199fe0325307c35d56ea2eead1a"
        ],
        [
            "apply per_perp; auto; apply image_spec_preserves_per with B P Q B C; trivial; apply col__refl; Col.",
            "VernacExtend",
            "9540883ed87e050fbbf9299da3df01aa0b20f360"
        ],
        [
            "assert (HNCol5 : ~ Col P' P Q).",
            "VernacExtend",
            "8d5165bf2e813829716235e3ba9ae4a95f61be69"
        ],
        [
            "apply (par_not_col B P'); Col.",
            "VernacExtend",
            "b938bb60513c8e072b6d23bd9cc42b46a929a7ce"
        ],
        [
            "apply par_not_col_strict with P; Col.",
            "VernacExtend",
            "cf9cb034a96d6a9e4bd3d43c8656f0c6065c8b51"
        ],
        [
            "apply l12_9 with A B; Perp; Cop.",
            "VernacExtend",
            "bbbdc6d4243b23db19b528963b3f976e1cf5623e"
        ],
        [
            "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
            "VernacExtend",
            "54dccd31df2b511716f61c9d57adbb1501fb7679"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "assert (HI := HPerp2); destruct HI as [I [_ [_ [HCol1 [HCol2 _]]]]].",
            "VernacExtend",
            "c879d89f8263c1117fdf27d57037d72a742c0895"
        ],
        [
            "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
            "VernacExtend",
            "54dccd31df2b511716f61c9d57adbb1501fb7679"
        ],
        [
            "assert (Coplanar P C A B) by Cop.",
            "VernacExtend",
            "c078b5f006aa3efbd8ca1fd1be06c7b6eead1a36"
        ],
        [
            "assert (Coplanar Q Q' B C) by Cop.",
            "VernacExtend",
            "75f8114a92f866a20bfee201677b5a95bc09dd1a"
        ],
        [
            "destruct (lotschnitt A B B P' P Q P' Q' B P P') as [Y [HY1 HY2]]; Col; try CopR.",
            "VernacExtend",
            "2fdbf0738882ea1f7f2fd603491e4900ca374ff6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (col_dec B C Q); intro; [|CopR].",
            "VernacExtend",
            "cd9d38beb928db31ea14e1ddd1e8a021afdc3b6b"
        ],
        [
            "assert (Q = Q'); [|treat_equalities; CopR].",
            "VernacExtend",
            "66f2185ed1b447d63d04ddbac1fba401fdbb0e7a"
        ],
        [
            "apply col_image_spec__eq with B C; Col.",
            "VernacExtend",
            "3a972f5f56e1dba7c1f0565e11248a2c8ab32b5d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists Y; split; trivial.",
            "VernacExtend",
            "5a2458d8cc486439a6cfb65b52251a6f4038c808"
        ],
        [
            "apply col_one_side_out with A.",
            "VernacExtend",
            "f9c5109ad4ac8dbe2582b0c9239abb9170370327"
        ],
        [
            "apply col_permutation_1, intersection_with_image_gen with P Q P' Q'; Col.",
            "VernacExtend",
            "7849208b06935748a9b17aa10e2eab382f4c6c1f"
        ],
        [
            "apply invert_one_side, one_side_transitivity with P'.",
            "VernacExtend",
            "9c802041fa6c757bc1a5d0c062b4def953131a0c"
        ],
        [
            "apply cop__not_two_sides_one_side; Col.",
            "VernacExtend",
            "b422124bd5e28ed9ebe738a1aa6cb907c680ad63"
        ],
        [
            "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
            "VernacExtend",
            "54dccd31df2b511716f61c9d57adbb1501fb7679"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "apply (conga_sams_nos__nts A B C A B C P'); SumA.",
            "VernacExtend",
            "67115e768ea01b2abf1b4759f428dcae71b841aa"
        ],
        [
            "apply l9_9, l9_5 with P B; Col.",
            "VernacExtend",
            "01cb2e021aa1c1808c37b2b68f965f1a1e14f566"
        ],
        [
            "apply l12_6, par_strict_col_par_strict with Q'; Col.",
            "VernacExtend",
            "8dfc427bae7bc2f071c1dba91e6d9068c46cb3c1"
        ],
        [
            "intro; subst; apply HNCol5; Col.",
            "VernacExtend",
            "0b746b5d25eca69fb7c2bc3c254dd38d44e371d2"
        ],
        [
            "apply par_not_col_strict with P'; Col.",
            "VernacExtend",
            "1cc795875da561d453b6bec36028761d99430b21"
        ],
        [
            "apply l12_9 with B P'; Perp; Cop.",
            "VernacExtend",
            "8751c3ca24603ba9853ffd353ebd3241de1a197f"
        ],
        [
            "elim (col_dec B C Q); intro; [|CopR].",
            "VernacExtend",
            "cd9d38beb928db31ea14e1ddd1e8a021afdc3b6b"
        ],
        [
            "assert (Q = Q'); [|treat_equalities; CopR].",
            "VernacExtend",
            "66f2185ed1b447d63d04ddbac1fba401fdbb0e7a"
        ],
        [
            "apply col_image_spec__eq with B C; Col.",
            "VernacExtend",
            "3a972f5f56e1dba7c1f0565e11248a2c8ab32b5d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
            "VernacExtend",
            "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
        ],
        [
            "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HNCop1 HCop2 HCop3 HCop4 HNC1.",
            "VernacExtend",
            "79b57b44476ea1bbec62defc88663f06de02e38b"
        ],
        [
            "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
            "VernacExtend",
            "9bec8f0e8521ceca901fae40ac6469ef544062f1"
        ],
        [
            "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
            "VernacExtend",
            "c757a39cfe66960ecef61367b62095979a944db5"
        ],
        [
            "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
            "VernacExtend",
            "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
        ],
        [
            "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
            "VernacExtend",
            "e60d4499ae289aa605d1029bace0dcb39c241e8e"
        ],
        [
            "assert (Coplanar IAB IAC IBD A1) by Cop.",
            "VernacExtend",
            "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
        ],
        [
            "assert (Coplanar IAB IAC IBD A2) by Cop.",
            "VernacExtend",
            "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
        ],
        [
            "assert (Coplanar IAB IAC IBD B1) by Cop.",
            "VernacExtend",
            "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
        ],
        [
            "assert (Coplanar IAB IAC IBD B2) by Cop.",
            "VernacExtend",
            "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
        ],
        [
            "assert (HNC2 : ~ Col A1 A2 D1).",
            "VernacExtend",
            "fa882c959e7f093688e209ec9d7f84c3faa804a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "425f2301965c637306f14143ff55a6aab6c1d161"
        ],
        [
            "apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC3 : ~ Col B1 B2 C1).",
            "VernacExtend",
            "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "941bea5c3d45063ad7d06e5d4e5762a389668539"
        ],
        [
            "apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HParA : Par_strict A1 A2 D1 D2).",
            "VernacExtend",
            "0bf9a3440419caddb17e2ac8901bbebfc6583563"
        ],
        [
            "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
        ],
        [
            "assert (HParB : Par_strict B1 B2 C1 C2).",
            "VernacExtend",
            "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
        ],
        [
            "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
        ],
        [
            "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
            "VernacExtend",
            "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
        ],
        [
            "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
            "VernacExtend",
            "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
        ],
        [
            "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
            "VernacExtend",
            "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
        ],
        [
            "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
            "VernacExtend",
            "be13fb9878af74fa32659f3bef1eb292da0269ff"
        ],
        [
            "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
            "VernacExtend",
            "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
        ],
        [
            "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
            "VernacExtend",
            "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
        ],
        [
            "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
            "VernacExtend",
            "81204629d103933fb479ad2a2f593f031128e0e5"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
            "VernacExtend",
            "c36af9c44ca705c4e53d6c9d30d4e17125055066"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
            "VernacExtend",
            "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
        ],
        [
            "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
            "VernacExtend",
            "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
        ],
        [
            "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
            "VernacExtend",
            "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
        ],
        [
            "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
            "VernacExtend",
            "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
        ],
        [
            "exists I.",
            "VernacExtend",
            "aa4c5aa62c2901539f544753fb6f8678477a222b"
        ],
        [
            "split; assert_diffs; ColR.",
            "VernacExtend",
            "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End bachmann_s_lotschnittaxiom_weak_inverse_projection_postulate.",
            "VernacEndSegment",
            "99b27c475b921f3119dbd5aedb447ca08312b05d"
        ]
    ],
    "proofs": [
        {
            "name": "bachmann_s_lotschnittaxiom__weak_inverse_projection_postulate",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro bla.",
                        "VernacExtend",
                        "990294c9efe224362b19628d57b39dff06b5e8de"
                    ]
                },
                {
                    "command": [
                        "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
                        "VernacExtend",
                        "eeceb336b5f61452b510e071123981b174b278b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear bla; intro lotschnitt.",
                        "VernacExtend",
                        "358b0c013c9f8c090f3fa8115d9a1f87a0b87d84"
                    ]
                },
                {
                    "command": [
                        "intros A B C D E F P Q HAcute HPer HSuma HOut HPQ HPerP HCop.",
                        "VernacExtend",
                        "ce90f9af698b1820ecaf49c7b5405ca3158bd39f"
                    ]
                },
                {
                    "command": [
                        "suma.assert_diffs.",
                        "VernacExtend",
                        "2af484ad15d938c812014136cf23670dbe3133f0"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col A B C).",
                        "VernacExtend",
                        "b97ecdaa626a6737043c5f4e28952f4464e2831b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HCol.",
                        "VernacExtend",
                        "7339a24608f9044c1539af209f14a20bfa73ed6f"
                    ]
                },
                {
                    "command": [
                        "apply (per_not_col D E F); auto.",
                        "VernacExtend",
                        "5328b416f8e6cc1b90fc85f49050263bd4e4d744"
                    ]
                },
                {
                    "command": [
                        "apply (col2_suma__col A B C A B C); assumption.",
                        "VernacExtend",
                        "4386a56745775fe9de164b53bf563d37496af406"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol1 : ~ Col B C P) by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "3bd0965149f4ab55e91e222322854ebf00432374"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_6_existence_spec B C P) as [P' HP']; trivial.",
                        "VernacExtend",
                        "31836d7d3d9415eb40e0a2814ff0a52117d96de2"
                    ]
                },
                {
                    "command": [
                        "assert (HP'1 : Reflect P P' B C) by (apply is_image_is_image_spec; auto).",
                        "VernacExtend",
                        "2ab66647496b14397e9034d0f3291082ed515f58"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol2 : ~ Col B C P') by (apply osym_not_col with P; trivial).",
                        "VernacExtend",
                        "76313ace86182484386f9c675d05ab49d7093fba"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_6_existence_spec B C Q) as [Q' HQ']; trivial.",
                        "VernacExtend",
                        "b128faf57231de3db7c32b2235d7cc138f1eed09"
                    ]
                },
                {
                    "command": [
                        "assert (HQ'1 : Reflect Q Q' B C) by (apply is_image_is_image_spec; auto).",
                        "VernacExtend",
                        "b66b89ac1305d7983e89a8a79bf3455b989af44b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (P' <> Q').",
                        "VernacExtend",
                        "638ed31de6854234d7a94ce022037e1d8209530f"
                    ]
                },
                {
                    "command": [
                        "intro; subst Q'; assert (P = Q) by (apply (l10_2_uniqueness B C P'); assumption); auto.",
                        "VernacExtend",
                        "1f40fd4926459a97097cd2c0e2f707281648b8c1"
                    ]
                },
                {
                    "command": [
                        "apply l6_6 in HOut.",
                        "VernacExtend",
                        "2b0b4ff0de20edd0cb9a056a9dc49cda7d8e3a42"
                    ]
                },
                {
                    "command": [
                        "assert (HCongA : CongA C B P' A B C).",
                        "VernacExtend",
                        "ee0eb9d3a2e74d18030924bcaa9c6e01c6cbc889"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with C P' P C; try (apply out_trivial); auto.",
                        "VernacExtend",
                        "0afda05e9f2a101a1190d876b1b075cee8434d39"
                    ]
                },
                {
                    "command": [
                        "apply conga_sym, conga_left_comm, reflectl__conga; auto.",
                        "VernacExtend",
                        "be2bd4ff01cb5bd2f24d8fd6e25cde907a590def"
                    ]
                },
                {
                    "command": [
                        "apply is_image_spec_rev, HP'.",
                        "VernacExtend",
                        "b31fd0213e3093772bd9c4482a509e6473c6fa38"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS B C P P').",
                        "VernacExtend",
                        "dc7c57802a43f07d98209d99a21c2c9d5136fe0b"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; destruct HP' as [[X [HX1 HX2]] _]; exists X; split; Col; Between.",
                        "VernacExtend",
                        "675a894732f3cacafc5004e2a6996da80a583ce5"
                    ]
                },
                {
                    "command": [
                        "assert (HPer1 : Per A B P').",
                        "VernacExtend",
                        "a043f71f65ca5796490f7a57cd3c96787d0f46c6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l11_17 with D E F; trivial.",
                        "VernacExtend",
                        "f529ae3e935133cc6013599fd4bc5214e6362e73"
                    ]
                },
                {
                    "command": [
                        "apply (suma2__conga A B C A B C); trivial.",
                        "VernacExtend",
                        "e0521f889afaff37cc213bb32582c4a6c3797e03"
                    ]
                },
                {
                    "command": [
                        "apply conga3_suma__suma with A B C C B P' A B P'; CongA.",
                        "VernacExtend",
                        "442649d0a3afd86109f36ec86ec45dacb3cb7909"
                    ]
                },
                {
                    "command": [
                        "exists P'; assert_diffs; repeat (split; CongA).",
                        "VernacExtend",
                        "1eb4d2b7dee64da627ffa34d912938b1bcb555fb"
                    ]
                },
                {
                    "command": [
                        "apply l9_9, l9_5 with P B; Col.",
                        "VernacExtend",
                        "01cb2e021aa1c1808c37b2b68f965f1a1e14f566"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
                        "VernacExtend",
                        "54dccd31df2b511716f61c9d57adbb1501fb7679"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col A B P') by (apply per_not_col; auto).",
                        "VernacExtend",
                        "7ca4b059237dc259d537430b4919f9affbf9c901"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol4 : ~ Col B P' P) by (intro; apply HNCol3; ColR).",
                        "VernacExtend",
                        "3e42d723aaa102236d7f3a2a019ee5b61841a845"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp1 : Perp A B B P') by (apply per_perp; auto).",
                        "VernacExtend",
                        "d60e836931d080aefcfc2b62ecab789720d80d60"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp2 : Perp A B P Q) by (apply perp_left_comm, perp_col with P; Col; apply per_perp; auto).",
                        "VernacExtend",
                        "428390a89e4cb436b1346d5c108ac9c361e2e3a6"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp3 : Perp B P' P' Q').",
                        "VernacExtend",
                        "50df244a36075199fe0325307c35d56ea2eead1a"
                    ]
                },
                {
                    "command": [
                        "apply per_perp; auto; apply image_spec_preserves_per with B P Q B C; trivial; apply col__refl; Col.",
                        "VernacExtend",
                        "9540883ed87e050fbbf9299da3df01aa0b20f360"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol5 : ~ Col P' P Q).",
                        "VernacExtend",
                        "8d5165bf2e813829716235e3ba9ae4a95f61be69"
                    ]
                },
                {
                    "command": [
                        "apply (par_not_col B P'); Col.",
                        "VernacExtend",
                        "b938bb60513c8e072b6d23bd9cc42b46a929a7ce"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with P; Col.",
                        "VernacExtend",
                        "cf9cb034a96d6a9e4bd3d43c8656f0c6065c8b51"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with A B; Perp; Cop.",
                        "VernacExtend",
                        "bbbdc6d4243b23db19b528963b3f976e1cf5623e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
                        "VernacExtend",
                        "54dccd31df2b511716f61c9d57adbb1501fb7679"
                    ]
                },
                {
                    "command": [
                        "CopR.",
                        "VernacExtend",
                        "7b1654670373807fcd176fc85962d78f62c8c69b"
                    ]
                },
                {
                    "command": [
                        "assert (HI := HPerp2); destruct HI as [I [_ [_ [HCol1 [HCol2 _]]]]].",
                        "VernacExtend",
                        "c879d89f8263c1117fdf27d57037d72a742c0895"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
                        "VernacExtend",
                        "54dccd31df2b511716f61c9d57adbb1501fb7679"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P C A B) by Cop.",
                        "VernacExtend",
                        "c078b5f006aa3efbd8ca1fd1be06c7b6eead1a36"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar Q Q' B C) by Cop.",
                        "VernacExtend",
                        "75f8114a92f866a20bfee201677b5a95bc09dd1a"
                    ]
                },
                {
                    "command": [
                        "destruct (lotschnitt A B B P' P Q P' Q' B P P') as [Y [HY1 HY2]]; Col; try CopR.",
                        "VernacExtend",
                        "2fdbf0738882ea1f7f2fd603491e4900ca374ff6"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec B C Q); intro; [|CopR].",
                        "VernacExtend",
                        "cd9d38beb928db31ea14e1ddd1e8a021afdc3b6b"
                    ]
                },
                {
                    "command": [
                        "assert (Q = Q'); [|treat_equalities; CopR].",
                        "VernacExtend",
                        "66f2185ed1b447d63d04ddbac1fba401fdbb0e7a"
                    ]
                },
                {
                    "command": [
                        "apply col_image_spec__eq with B C; Col.",
                        "VernacExtend",
                        "3a972f5f56e1dba7c1f0565e11248a2c8ab32b5d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists Y; split; trivial.",
                        "VernacExtend",
                        "5a2458d8cc486439a6cfb65b52251a6f4038c808"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with A.",
                        "VernacExtend",
                        "f9c5109ad4ac8dbe2582b0c9239abb9170370327"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1, intersection_with_image_gen with P Q P' Q'; Col.",
                        "VernacExtend",
                        "7849208b06935748a9b17aa10e2eab382f4c6c1f"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, one_side_transitivity with P'.",
                        "VernacExtend",
                        "9c802041fa6c757bc1a5d0c062b4def953131a0c"
                    ]
                },
                {
                    "command": [
                        "apply cop__not_two_sides_one_side; Col.",
                        "VernacExtend",
                        "b422124bd5e28ed9ebe738a1aa6cb907c680ad63"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P' C A B) by (apply col2_cop__cop with P B; Col; Cop).",
                        "VernacExtend",
                        "54dccd31df2b511716f61c9d57adbb1501fb7679"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "apply (conga_sams_nos__nts A B C A B C P'); SumA.",
                        "VernacExtend",
                        "67115e768ea01b2abf1b4759f428dcae71b841aa"
                    ]
                },
                {
                    "command": [
                        "apply l9_9, l9_5 with P B; Col.",
                        "VernacExtend",
                        "01cb2e021aa1c1808c37b2b68f965f1a1e14f566"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_strict_col_par_strict with Q'; Col.",
                        "VernacExtend",
                        "8dfc427bae7bc2f071c1dba91e6d9068c46cb3c1"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply HNCol5; Col.",
                        "VernacExtend",
                        "0b746b5d25eca69fb7c2bc3c254dd38d44e371d2"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with P'; Col.",
                        "VernacExtend",
                        "1cc795875da561d453b6bec36028761d99430b21"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with B P'; Perp; Cop.",
                        "VernacExtend",
                        "8751c3ca24603ba9853ffd353ebd3241de1a197f"
                    ]
                },
                {
                    "command": [
                        "elim (col_dec B C Q); intro; [|CopR].",
                        "VernacExtend",
                        "cd9d38beb928db31ea14e1ddd1e8a021afdc3b6b"
                    ]
                },
                {
                    "command": [
                        "assert (Q = Q'); [|treat_equalities; CopR].",
                        "VernacExtend",
                        "66f2185ed1b447d63d04ddbac1fba401fdbb0e7a"
                    ]
                },
                {
                    "command": [
                        "apply col_image_spec__eq with B C; Col.",
                        "VernacExtend",
                        "3a972f5f56e1dba7c1f0565e11248a2c8ab32b5d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
                        "VernacExtend",
                        "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
                    ]
                },
                {
                    "command": [
                        "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HNCop1 HCop2 HCop3 HCop4 HNC1.",
                        "VernacExtend",
                        "79b57b44476ea1bbec62defc88663f06de02e38b"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9bec8f0e8521ceca901fae40ac6469ef544062f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "c757a39cfe66960ecef61367b62095979a944db5"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "e60d4499ae289aa605d1029bace0dcb39c241e8e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A1) by Cop.",
                        "VernacExtend",
                        "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A2) by Cop.",
                        "VernacExtend",
                        "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B1) by Cop.",
                        "VernacExtend",
                        "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B2) by Cop.",
                        "VernacExtend",
                        "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A1 A2 D1).",
                        "VernacExtend",
                        "fa882c959e7f093688e209ec9d7f84c3faa804a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "425f2301965c637306f14143ff55a6aab6c1d161"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC3 : ~ Col B1 B2 C1).",
                        "VernacExtend",
                        "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "941bea5c3d45063ad7d06e5d4e5762a389668539"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HParA : Par_strict A1 A2 D1 D2).",
                        "VernacExtend",
                        "0bf9a3440419caddb17e2ac8901bbebfc6583563"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
                    ]
                },
                {
                    "command": [
                        "assert (HParB : Par_strict B1 B2 C1 C2).",
                        "VernacExtend",
                        "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
                        "VernacExtend",
                        "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
                        "VernacExtend",
                        "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
                    ]
                },
                {
                    "command": [
                        "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
                    ]
                },
                {
                    "command": [
                        "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
                        "VernacExtend",
                        "be13fb9878af74fa32659f3bef1eb292da0269ff"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 C1 C2 IAC) as [P1 [HC1P1 [HC2P1 [HPP1 HCP1]]]]; Col.",
                        "VernacExtend",
                        "f21f9f9adcc56ec80208ae9da0c37c87e3a7708c"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 D1 D2 IBD) as [R1 [HD1R1 [HD2R1 [HRR1 HDR1]]]]; Col.",
                        "VernacExtend",
                        "bd2f80a845aeafd19dc3c40c3f35bf4905f12a9f"
                    ]
                },
                {
                    "command": [
                        "destruct (bla IAC IAB IBD P1 R1) as [I [HI1 HI2]]; auto.",
                        "VernacExtend",
                        "81204629d103933fb479ad2a2f593f031128e0e5"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
                        "VernacExtend",
                        "c36af9c44ca705c4e53d6c9d30d4e17125055066"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with C1 C2; Col; Perp.",
                        "VernacExtend",
                        "0f55d15ecb5abf5cf87381b3dfa44a670e6f0c9e"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with B1 B2; Col; apply perp_sym; apply perp_col2 with D1 D2; Col; Perp.",
                        "VernacExtend",
                        "80a5446efd5d63593d2bd22ad2ee4a99a9b94049"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with C1 C2; Col; CopR.",
                        "VernacExtend",
                        "2abd20bc8624bd34f2f15a22a73d7d1c08856f8a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with D1 D2; Col; CopR.",
                        "VernacExtend",
                        "24a5b2f48911d33f3fb81ea1f01ce4a359345db2"
                    ]
                },
                {
                    "command": [
                        "exists I.",
                        "VernacExtend",
                        "aa4c5aa62c2901539f544753fb6f8678477a222b"
                    ]
                },
                {
                    "command": [
                        "split; assert_diffs; ColR.",
                        "VernacExtend",
                        "da3a3224a9e90086f1d060d2bd92a1cd3b90d911"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}