{
    "filename": "Meta_theory/Parallel_postulates/weak_inverse_projection_postulate_bachmann_s_lotschnittaxiom.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.suma.",
            "VernacRequire",
            "d2192c30d59bff3f952029b5d7f08161afc2f55b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section weak_inverse_projection_postulate_bachmann_s_lotschnittaxiom.",
            "VernacBeginSection",
            "7b265ab9710177c1f7f02b11b1b6fbb014ad344a"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma weak_inverse_projection_postulate__bachmann_s_lotschnittaxiom : weak_inverse_projection_postulate -> bachmann_s_lotschnittaxiom.",
            "VernacStartTheoremProof",
            "ba66b6e5bda76e4d705b636780a7d740cf54d00c"
        ],
        [
            "intro hrap.",
            "VernacExtend",
            "fcce8a008886d27a84d03a0dd831fb17d05857cd"
        ],
        [
            "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
            "VernacExtend",
            "eeceb336b5f61452b510e071123981b174b278b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear hrap; intro lotschnitt.",
            "VernacExtend",
            "e85badc9a8ac6b82d04e33a0c5247d04693d7eee"
        ],
        [
            "intros P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.",
            "VernacExtend",
            "00a3c2053db85489f34a57e59b8ba5881da46334"
        ],
        [
            "destruct (eq_dec_points P P1).",
            "VernacExtend",
            "99a1e4df503113bcf8eaf26aca0bf98a2124c883"
        ],
        [
            "subst; exists R; Col.",
            "VernacExtend",
            "8a1727ad94cc74a1049150bf00549453890432bf"
        ],
        [
            "destruct (eq_dec_points R R1).",
            "VernacExtend",
            "6bb218a3fef4e1ffe2fd1fba2abc0a1a655c5ea9"
        ],
        [
            "subst; exists P; Col.",
            "VernacExtend",
            "870e7bea814c636bb1b36096d57b80212a4b6da8"
        ],
        [
            "assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).",
            "VernacExtend",
            "06a77aa3cefe1a6833178279ed140e40e300052b"
        ],
        [
            "destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.",
            "VernacExtend",
            "71e346f2aec1da13a05f05e0eab18ee8cf65e884"
        ],
        [
            "exists S; auto.",
            "VernacExtend",
            "e98c2727e2c2387d5f68f2cfb7d45bec552d4aec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
            "VernacExtend",
            "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
        ],
        [
            "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC1.",
            "VernacExtend",
            "1fcea4dadcfb163923c835bbada7608593e15524"
        ],
        [
            "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
            "VernacExtend",
            "9bec8f0e8521ceca901fae40ac6469ef544062f1"
        ],
        [
            "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
            "VernacExtend",
            "c757a39cfe66960ecef61367b62095979a944db5"
        ],
        [
            "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
            "VernacExtend",
            "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
        ],
        [
            "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
            "VernacExtend",
            "e60d4499ae289aa605d1029bace0dcb39c241e8e"
        ],
        [
            "assert (Coplanar IAB IAC IBD A1) by Cop.",
            "VernacExtend",
            "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
        ],
        [
            "assert (Coplanar IAB IAC IBD A2) by Cop.",
            "VernacExtend",
            "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
        ],
        [
            "assert (Coplanar IAB IAC IBD B1) by Cop.",
            "VernacExtend",
            "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
        ],
        [
            "assert (Coplanar IAB IAC IBD B2) by Cop.",
            "VernacExtend",
            "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
        ],
        [
            "assert (HNC2 : ~ Col A1 A2 D1).",
            "VernacExtend",
            "fa882c959e7f093688e209ec9d7f84c3faa804a5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "425f2301965c637306f14143ff55a6aab6c1d161"
        ],
        [
            "apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNC3 : ~ Col B1 B2 C1).",
            "VernacExtend",
            "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
            "VernacExtend",
            "941bea5c3d45063ad7d06e5d4e5762a389668539"
        ],
        [
            "apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HParA : Par_strict A1 A2 D1 D2).",
            "VernacExtend",
            "0bf9a3440419caddb17e2ac8901bbebfc6583563"
        ],
        [
            "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
            "VernacExtend",
            "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
        ],
        [
            "assert (HParB : Par_strict B1 B2 C1 C2).",
            "VernacExtend",
            "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
        ],
        [
            "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
            "VernacExtend",
            "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
        ],
        [
            "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
            "VernacExtend",
            "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
        ],
        [
            "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
            "VernacExtend",
            "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
        ],
        [
            "assert (HNCol5 : ~ Col IAB C1 C2) by (apply par_not_col with B1 B2; Par; ColR).",
            "VernacExtend",
            "4145d3f264a680830320f17b4bf616b4349f7daa"
        ],
        [
            "assert (HNCol6 : ~ Col IAB D1 D2) by (apply par_not_col with A1 A2; Par; ColR).",
            "VernacExtend",
            "955c6a5cd3a91230c9d2f37eeda93c469bb9f7e3"
        ],
        [
            "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
            "VernacExtend",
            "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
        ],
        [
            "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
            "VernacExtend",
            "be13fb9878af74fa32659f3bef1eb292da0269ff"
        ],
        [
            "rename IAB into Q; rename IAC into P; rename IBD into R.",
            "VernacExtend",
            "80b6622a758e9445ad0024a99e33ed8932796c1f"
        ],
        [
            "assert (Per P Q R).",
            "VernacExtend",
            "8b73808ec4433a9173addf22b4cde3a6b197f8a8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
            "VernacExtend",
            "c36af9c44ca705c4e53d6c9d30d4e17125055066"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNCol7 : ~ Col P Q R) by (apply per_not_col; trivial).",
            "VernacExtend",
            "6e681b3e6b739e3da6b317aadb9477f9dca1106f"
        ],
        [
            "destruct (angle_bisector P Q R) as [M [HM1 HM2]]; auto.",
            "VernacExtend",
            "5f2f41b75c676df04130de3d6beebeae20d9ab8e"
        ],
        [
            "assert (HSuma : SumA P Q M P Q M P Q R).",
            "VernacExtend",
            "74be75ff57b5e07a220a45931495eaf144c2cfd4"
        ],
        [
            "assert_diffs; apply conga3_suma__suma with P Q M M Q R P Q R; CongA; SumA.",
            "VernacExtend",
            "313024b7239e100ad933a3b35adf0f957a5cf542"
        ],
        [
            "assert (HAcute : Acute P Q M).",
            "VernacExtend",
            "3aec9750b1440c91951451c05be21981b6f0b3ee"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply nbet_sams_suma__acute with P Q R; auto.",
            "VernacExtend",
            "a3f3876bc8bb304b1fcf47e70b28b158d14303f4"
        ],
        [
            "intro HBet; apply HNCol7; Col.",
            "VernacExtend",
            "5ba0f45eaa5c71bb363863cd02996ccf76d6a81a"
        ],
        [
            "destruct (sams_dec P Q M P Q M); trivial.",
            "VernacExtend",
            "ac92d6d47ad569fcf4aa6ea3df64392ea5b102ba"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "exfalso; apply (lea__nlta P Q M P Q R).",
            "VernacExtend",
            "69c412038df7e3e3dd2969402dde6232a0e0d852"
        ],
        [
            "exists M; split; CongA.",
            "VernacExtend",
            "f866952fdfabd4c26967dd0d52961df296016036"
        ],
        [
            "apply obtuse_per__lta; trivial.",
            "VernacExtend",
            "7cdd25b126f09b39cb8ad3d0ba6509f96465a0b5"
        ],
        [
            "apply nsams__obtuse; auto.",
            "VernacExtend",
            "8fbbe3e644aab35d8c9daf8d815d8611a8fe0835"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HC3 : exists C3, Col C1 C2 C3 /\\ OS P Q R C3).",
            "VernacExtend",
            "e5c1d5fc94b4a382942799d2520b5bb63a84f31d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (diff_col_ex3 C1 C2 P) as [C0]; Col; spliter.",
            "VernacExtend",
            "06faa4e523c5ace8d7c67a937d1e08d4b233d33e"
        ],
        [
            "destruct (cop_not_par_same_side P Q C0 P P R) as [C3 []]; Col.",
            "VernacExtend",
            "0a7ad1877fd09683ace8322253d1ff5127d44e0f"
        ],
        [
            "intro; apply HNCol5; ColR.",
            "VernacExtend",
            "bc515e81a57958c7b05d6978aa8cdcdb2e63679a"
        ],
        [
            "assert (Coplanar P Q R C0); [|Cop].",
            "VernacExtend",
            "013ccfff5630d7c2c913aa3ae2721b90d4d97b4e"
        ],
        [
            "assert_diffs; apply col_cop2__cop with C1 C2; Col; Cop.",
            "VernacExtend",
            "8b3f7ed1773915c75a0fe2f501ac285b30d297f1"
        ],
        [
            "exists C3; split; trivial; ColR.",
            "VernacExtend",
            "a23df857f4aba72e30ecc6526c8fa9516194a37c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HC3 as [C3 [HCol7 HOS1]].",
            "VernacExtend",
            "7c9ad0c4989d03cb42c413ab5ce2a4b121b4c7cd"
        ],
        [
            "destruct (hrap P Q M P Q R P C3) as [S [HS1 HS2]]; trivial.",
            "VernacExtend",
            "2d85073624af4bc8ce0742ec6156775b00c26724"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert (HP := HPerpAC); destruct HP as [P' [_ [_ [HP1 [HP2 HP3]]]]].",
            "VernacExtend",
            "5f77b53ebd1d590f79aeb64d45d10a81300db3b7"
        ],
        [
            "assert (P = P'); [|treat_equalities; apply HP3; Col].",
            "VernacExtend",
            "2462c37854e233fe664dc9b6bca34377c1d8beb3"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ HPerpAC); intro; assert_diffs; [apply l6_21 with A1 A2 C1 C2|apply l6_21 with A1 A2 C2 C1]; Col.",
            "VernacExtend",
            "0ee942b4b57f07cdfac1933bc9c9b2815d449eb3"
        ],
        [
            "assert (Coplanar P Q R M) by Cop.",
            "VernacExtend",
            "773fe5c6b9a8bee93324204d1599bedf7c997d96"
        ],
        [
            "assert (Coplanar P Q R C3); [|CopR].",
            "VernacExtend",
            "f96f78cde4a2492545067fee5507b23d6efbd186"
        ],
        [
            "assert_diffs; apply col_cop2__cop with C1 C2; Col; Cop.",
            "VernacExtend",
            "8b3f7ed1773915c75a0fe2f501ac285b30d297f1"
        ],
        [
            "assert (HD3 : exists D3, Col D1 D2 D3 /\\ OS R Q P D3).",
            "VernacExtend",
            "2b979deb1143fb23a1cd0f9ebf39472be04baf63"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (diff_col_ex3 D1 D2 R) as [D0]; Col; spliter.",
            "VernacExtend",
            "0fa473961fbdaaf72b04ec110aac85360e8a204a"
        ],
        [
            "destruct (cop_not_par_same_side R Q D0 R R P) as [D3 []]; Col.",
            "VernacExtend",
            "6d0f0b24865b91e59774dfdc45aa4362b4b9c5e8"
        ],
        [
            "intro; apply HNCol6; ColR.",
            "VernacExtend",
            "3a093a94ddc2990038208085261aa1982be466bb"
        ],
        [
            "assert (Coplanar P Q R D0); [|CopR].",
            "VernacExtend",
            "1acfbced68e06067bc9a17bec4eb51027bf84afc"
        ],
        [
            "assert_diffs; apply col_cop2__cop with D1 D2; Col; Cop.",
            "VernacExtend",
            "74bf16a84e0623692fcfdeb0d3618b2cf263213a"
        ],
        [
            "exists D3; split; trivial; ColR.",
            "VernacExtend",
            "2e42c5e79e1ef48290eac04cca1a39b1b764e236"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HD3 as [D3 [HCol8 HOS2]].",
            "VernacExtend",
            "8335970dad831ae1ae6c5ca9863cb8e059d8759c"
        ],
        [
            "destruct (hrap R Q M R Q P R D3) as [T [HT1 HT2]]; Perp.",
            "VernacExtend",
            "8b1744043d1340b6667afd63bf90f13585d44c4c"
        ],
        [
            "apply (acute_conga__acute P Q M); CongA.",
            "VernacExtend",
            "bb669a9b792b7a8697eae8de3ecd2db524947ac2"
        ],
        [
            "assert_diffs; apply conga3_suma__suma with P Q M P Q M P Q R; CongA.",
            "VernacExtend",
            "d0e66030a9fc9be8487e224a7e345d217f100351"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert (HP := HPerpBD); destruct HP as [R' [_ [_ [HR1 [HR2 HR3]]]]].",
            "VernacExtend",
            "c6802f47f01ef027f8543f22cd2f83a0cfb1ac33"
        ],
        [
            "assert (R = R'); [|treat_equalities; apply HR3; Col].",
            "VernacExtend",
            "d152596fad2f21d6cda88e531da204d0ecbb272b"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ HPerpBD); intro; assert_diffs; [apply l6_21 with B1 B2 D1 D2|apply l6_21 with B1 B2 D2 D1]; Col.",
            "VernacExtend",
            "c4120ae26bb99e8f25dcc0e301996907d1bfc5a8"
        ],
        [
            "assert (Coplanar P Q R M) by Cop.",
            "VernacExtend",
            "773fe5c6b9a8bee93324204d1599bedf7c997d96"
        ],
        [
            "assert (Coplanar P Q R D3); [|CopR].",
            "VernacExtend",
            "fdb0eb0db45224678b1a123f2651c1eff40313f0"
        ],
        [
            "assert_diffs; apply col_cop2__cop with D1 D2; Col; Cop.",
            "VernacExtend",
            "74bf16a84e0623692fcfdeb0d3618b2cf263213a"
        ],
        [
            "assert (HOut : Out Q S T) by (apply l6_7 with M; trivial; apply l6_6; assumption).",
            "VernacExtend",
            "5c6c9f224659b85e00ad6f2dd9694b55413fa6ea"
        ],
        [
            "assert (HCol9 : Col C1 C2 S) by (assert_diffs; ColR).",
            "VernacExtend",
            "9c2b63dbc4351ebffa5f5912566d0982119ef782"
        ],
        [
            "assert (HCol10 : Col D1 D2 T) by (assert_diffs; ColR).",
            "VernacExtend",
            "64ee8d974c2cb0c77188ac8e30d42c50d674c626"
        ],
        [
            "destruct (col_dec C1 C2 T).",
            "VernacExtend",
            "23096961c58e1b34e8d6fa3ec2c784fef6df4d7b"
        ],
        [
            "exists T; Col.",
            "VernacExtend",
            "318128c485906f715edda44550fa4b8b411423de"
        ],
        [
            "destruct (col_dec D1 D2 S).",
            "VernacExtend",
            "2156d0af3cfbd104f52ce429485ffce61e75b148"
        ],
        [
            "exists S; Col.",
            "VernacExtend",
            "51a5433bce21fadf01476159b7f51eba4d3e4f70"
        ],
        [
            "destruct HOut as [HSQ [HTQ [HBet|HBet]]].",
            "VernacExtend",
            "6e2693cb4c2364ead15c9fe6f0b15e404c9dd671"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (HTS : TS C1 C2 R T).",
            "VernacExtend",
            "fd5acc75f833fba7bf655bba94b8a560edf87b38"
        ],
        [
            "apply l9_8_2 with Q.",
            "VernacExtend",
            "b6a0f09e93ed16cf38ce72cd3d87943b81e7d667"
        ],
        [
            "repeat split; Col; exists S; Col.",
            "VernacExtend",
            "c5d49ec1e0b19e02714abd0810a5eec93cabf254"
        ],
        [
            "apply l12_6, par_strict_col2_par_strict with B1 B2; Par; Col.",
            "VernacExtend",
            "76225615442417c564b87b1e8d48ee326bf6c5e5"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct HTS as [_ [_ [I [HI1 HI2]]]].",
            "VernacExtend",
            "c486d21c3b8fa109e51705bd6bdbc7587c318663"
        ],
        [
            "exists I; split; ColR.",
            "VernacExtend",
            "0d488901878d712390e4e5a30bba560d27830331"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (HTS : TS D1 D2 P S).",
            "VernacExtend",
            "7f19adac0fb039cfc68cb016f6862933d5991c0e"
        ],
        [
            "apply l9_8_2 with Q.",
            "VernacExtend",
            "b6a0f09e93ed16cf38ce72cd3d87943b81e7d667"
        ],
        [
            "repeat split; Col; exists T; Col.",
            "VernacExtend",
            "56873457924e99775636655f4ebc878e6bf6ea13"
        ],
        [
            "apply l12_6, par_strict_col2_par_strict with A1 A2; Par; Col.",
            "VernacExtend",
            "237659ba237535895dd499d64187b661bf8504b9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct HTS as [_ [_ [I [HI1 HI2]]]].",
            "VernacExtend",
            "c486d21c3b8fa109e51705bd6bdbc7587c318663"
        ],
        [
            "exists I; split; ColR.",
            "VernacExtend",
            "0d488901878d712390e4e5a30bba560d27830331"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End weak_inverse_projection_postulate_bachmann_s_lotschnittaxiom.",
            "VernacEndSegment",
            "098a251f8ac04eb6cffedb9e37861ef3f4bb4048"
        ]
    ],
    "proofs": [
        {
            "name": "weak_inverse_projection_postulate__bachmann_s_lotschnittaxiom",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro hrap.",
                        "VernacExtend",
                        "fcce8a008886d27a84d03a0dd831fb17d05857cd"
                    ]
                },
                {
                    "command": [
                        "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
                        "VernacExtend",
                        "eeceb336b5f61452b510e071123981b174b278b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear hrap; intro lotschnitt.",
                        "VernacExtend",
                        "e85badc9a8ac6b82d04e33a0c5247d04693d7eee"
                    ]
                },
                {
                    "command": [
                        "intros P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.",
                        "VernacExtend",
                        "00a3c2053db85489f34a57e59b8ba5881da46334"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points P P1).",
                        "VernacExtend",
                        "99a1e4df503113bcf8eaf26aca0bf98a2124c883"
                    ]
                },
                {
                    "command": [
                        "subst; exists R; Col.",
                        "VernacExtend",
                        "8a1727ad94cc74a1049150bf00549453890432bf"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points R R1).",
                        "VernacExtend",
                        "6bb218a3fef4e1ffe2fd1fba2abc0a1a655c5ea9"
                    ]
                },
                {
                    "command": [
                        "subst; exists P; Col.",
                        "VernacExtend",
                        "870e7bea814c636bb1b36096d57b80212a4b6da8"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).",
                        "VernacExtend",
                        "06a77aa3cefe1a6833178279ed140e40e300052b"
                    ]
                },
                {
                    "command": [
                        "destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.",
                        "VernacExtend",
                        "71e346f2aec1da13a05f05e0eab18ee8cf65e884"
                    ]
                },
                {
                    "command": [
                        "exists S; auto.",
                        "VernacExtend",
                        "e98c2727e2c2387d5f68f2cfb7d45bec552d4aec"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerpAB HPerpAC HPerpBD.",
                        "VernacExtend",
                        "1e23b4316ab9d3d2f12afca2b9ead5e8e7909c94"
                    ]
                },
                {
                    "command": [
                        "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC1.",
                        "VernacExtend",
                        "1fcea4dadcfb163923c835bbada7608593e15524"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9bec8f0e8521ceca901fae40ac6469ef544062f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "c757a39cfe66960ecef61367b62095979a944db5"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "98de1ccc710a0107c8d7406592ac16b0b2e55d18"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IBD B2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "e60d4499ae289aa605d1029bace0dcb39c241e8e"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A1) by Cop.",
                        "VernacExtend",
                        "6e273b2e2a7762ff2278d5aab575d1a088cfcbd9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD A2) by Cop.",
                        "VernacExtend",
                        "d90d892731684e8c88a5eade0e3bcbd9b5e4780d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B1) by Cop.",
                        "VernacExtend",
                        "3b8a23a33c03d95b0462e883b8f7a3ac775e42c4"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD B2) by Cop.",
                        "VernacExtend",
                        "e1b13f43b42cf625f5ee2b0d59d70ae94aecb000"
                    ]
                },
                {
                    "command": [
                        "assert (HNC2 : ~ Col A1 A2 D1).",
                        "VernacExtend",
                        "fa882c959e7f093688e209ec9d7f84c3faa804a5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with D2; apply par_not_col_strict with IBD; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "425f2301965c637306f14143ff55a6aab6c1d161"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "1d2d48424e6dc9a88eb8c37d00ff97923084e60a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNC3 : ~ Col B1 B2 C1).",
                        "VernacExtend",
                        "b60f16d3ac1b0882d760ade9f1061a5a30c4efaa"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with C2; apply par_not_col_strict with IAC; Col; try (intro; apply HNC1; assert_diffs; ColR).",
                        "VernacExtend",
                        "941bea5c3d45063ad7d06e5d4e5762a389668539"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "d71197c9fd8c35495ec93bdcea178844b65b9b0f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HParA : Par_strict A1 A2 D1 D2).",
                        "VernacExtend",
                        "0bf9a3440419caddb17e2ac8901bbebfc6583563"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with D1; Col; apply l12_9 with B1 B2; Perp; CopR.",
                        "VernacExtend",
                        "3c335d26a04dd086a118974f1f5d31eb6c28b7fd"
                    ]
                },
                {
                    "command": [
                        "assert (HParB : Par_strict B1 B2 C1 C2).",
                        "VernacExtend",
                        "0ee205255f74a9bd71e4384dcc0a21532bfcd388"
                    ]
                },
                {
                    "command": [
                        "apply par_not_col_strict with C1; Col; apply l12_9 with A1 A2; Perp; CopR.",
                        "VernacExtend",
                        "5cffea95d935ed00437ad41e6032e0a7a3d95dd1"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col IAC B1 B2) by (apply par_not_col with C1 C2; Par; ColR).",
                        "VernacExtend",
                        "be3578c62b40ffc89db9b6e8553afbf1e1f3297a"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol4 : ~ Col IBD A1 A2) by (apply par_not_col with D1 D2; Par; ColR).",
                        "VernacExtend",
                        "54cc1b06c4c565ee5941d0f0fae985c19f004a2e"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol5 : ~ Col IAB C1 C2) by (apply par_not_col with B1 B2; Par; ColR).",
                        "VernacExtend",
                        "4145d3f264a680830320f17b4bf616b4349f7daa"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol6 : ~ Col IAB D1 D2) by (apply par_not_col with A1 A2; Par; ColR).",
                        "VernacExtend",
                        "955c6a5cd3a91230c9d2f37eeda93c469bb9f7e3"
                    ]
                },
                {
                    "command": [
                        "assert (HPQ : IAC <> IAB) by (assert_diffs; auto).",
                        "VernacExtend",
                        "2e4df155f8f23c70aa1fcd7cb74b8a4d2428fb00"
                    ]
                },
                {
                    "command": [
                        "assert (HQR : IAB <> IBD) by (assert_diffs; auto).",
                        "VernacExtend",
                        "be13fb9878af74fa32659f3bef1eb292da0269ff"
                    ]
                },
                {
                    "command": [
                        "rename IAB into Q; rename IAC into P; rename IBD into R.",
                        "VernacExtend",
                        "80b6622a758e9445ad0024a99e33ed8932796c1f"
                    ]
                },
                {
                    "command": [
                        "assert (Per P Q R).",
                        "VernacExtend",
                        "8b73808ec4433a9173addf22b4cde3a6b197f8a8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; apply perp_col2 with A1 A2; Col; apply perp_sym; apply perp_col2 with B1 B2; Col; Perp.",
                        "VernacExtend",
                        "c36af9c44ca705c4e53d6c9d30d4e17125055066"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol7 : ~ Col P Q R) by (apply per_not_col; trivial).",
                        "VernacExtend",
                        "6e681b3e6b739e3da6b317aadb9477f9dca1106f"
                    ]
                },
                {
                    "command": [
                        "destruct (angle_bisector P Q R) as [M [HM1 HM2]]; auto.",
                        "VernacExtend",
                        "5f2f41b75c676df04130de3d6beebeae20d9ab8e"
                    ]
                },
                {
                    "command": [
                        "assert (HSuma : SumA P Q M P Q M P Q R).",
                        "VernacExtend",
                        "74be75ff57b5e07a220a45931495eaf144c2cfd4"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply conga3_suma__suma with P Q M M Q R P Q R; CongA; SumA.",
                        "VernacExtend",
                        "313024b7239e100ad933a3b35adf0f957a5cf542"
                    ]
                },
                {
                    "command": [
                        "assert (HAcute : Acute P Q M).",
                        "VernacExtend",
                        "3aec9750b1440c91951451c05be21981b6f0b3ee"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply nbet_sams_suma__acute with P Q R; auto.",
                        "VernacExtend",
                        "a3f3876bc8bb304b1fcf47e70b28b158d14303f4"
                    ]
                },
                {
                    "command": [
                        "intro HBet; apply HNCol7; Col.",
                        "VernacExtend",
                        "5ba0f45eaa5c71bb363863cd02996ccf76d6a81a"
                    ]
                },
                {
                    "command": [
                        "destruct (sams_dec P Q M P Q M); trivial.",
                        "VernacExtend",
                        "ac92d6d47ad569fcf4aa6ea3df64392ea5b102ba"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply (lea__nlta P Q M P Q R).",
                        "VernacExtend",
                        "69c412038df7e3e3dd2969402dde6232a0e0d852"
                    ]
                },
                {
                    "command": [
                        "exists M; split; CongA.",
                        "VernacExtend",
                        "f866952fdfabd4c26967dd0d52961df296016036"
                    ]
                },
                {
                    "command": [
                        "apply obtuse_per__lta; trivial.",
                        "VernacExtend",
                        "7cdd25b126f09b39cb8ad3d0ba6509f96465a0b5"
                    ]
                },
                {
                    "command": [
                        "apply nsams__obtuse; auto.",
                        "VernacExtend",
                        "8fbbe3e644aab35d8c9daf8d815d8611a8fe0835"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HC3 : exists C3, Col C1 C2 C3 /\\ OS P Q R C3).",
                        "VernacExtend",
                        "e5c1d5fc94b4a382942799d2520b5bb63a84f31d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 C1 C2 P) as [C0]; Col; spliter.",
                        "VernacExtend",
                        "06faa4e523c5ace8d7c67a937d1e08d4b233d33e"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_not_par_same_side P Q C0 P P R) as [C3 []]; Col.",
                        "VernacExtend",
                        "0a7ad1877fd09683ace8322253d1ff5127d44e0f"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol5; ColR.",
                        "VernacExtend",
                        "bc515e81a57958c7b05d6978aa8cdcdb2e63679a"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R C0); [|Cop].",
                        "VernacExtend",
                        "013ccfff5630d7c2c913aa3ae2721b90d4d97b4e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with C1 C2; Col; Cop.",
                        "VernacExtend",
                        "8b3f7ed1773915c75a0fe2f501ac285b30d297f1"
                    ]
                },
                {
                    "command": [
                        "exists C3; split; trivial; ColR.",
                        "VernacExtend",
                        "a23df857f4aba72e30ecc6526c8fa9516194a37c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HC3 as [C3 [HCol7 HOS1]].",
                        "VernacExtend",
                        "7c9ad0c4989d03cb42c413ab5ce2a4b121b4c7cd"
                    ]
                },
                {
                    "command": [
                        "destruct (hrap P Q M P Q R P C3) as [S [HS1 HS2]]; trivial.",
                        "VernacExtend",
                        "2d85073624af4bc8ce0742ec6156775b00c26724"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "assert (HP := HPerpAC); destruct HP as [P' [_ [_ [HP1 [HP2 HP3]]]]].",
                        "VernacExtend",
                        "5f77b53ebd1d590f79aeb64d45d10a81300db3b7"
                    ]
                },
                {
                    "command": [
                        "assert (P = P'); [|treat_equalities; apply HP3; Col].",
                        "VernacExtend",
                        "2462c37854e233fe664dc9b6bca34377c1d8beb3"
                    ]
                },
                {
                    "command": [
                        "elim (perp_not_col2 _ _ _ _ HPerpAC); intro; assert_diffs; [apply l6_21 with A1 A2 C1 C2|apply l6_21 with A1 A2 C2 C1]; Col.",
                        "VernacExtend",
                        "0ee942b4b57f07cdfac1933bc9c9b2815d449eb3"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R M) by Cop.",
                        "VernacExtend",
                        "773fe5c6b9a8bee93324204d1599bedf7c997d96"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R C3); [|CopR].",
                        "VernacExtend",
                        "f96f78cde4a2492545067fee5507b23d6efbd186"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with C1 C2; Col; Cop.",
                        "VernacExtend",
                        "8b3f7ed1773915c75a0fe2f501ac285b30d297f1"
                    ]
                },
                {
                    "command": [
                        "assert (HD3 : exists D3, Col D1 D2 D3 /\\ OS R Q P D3).",
                        "VernacExtend",
                        "2b979deb1143fb23a1cd0f9ebf39472be04baf63"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (diff_col_ex3 D1 D2 R) as [D0]; Col; spliter.",
                        "VernacExtend",
                        "0fa473961fbdaaf72b04ec110aac85360e8a204a"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_not_par_same_side R Q D0 R R P) as [D3 []]; Col.",
                        "VernacExtend",
                        "6d0f0b24865b91e59774dfdc45aa4362b4b9c5e8"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol6; ColR.",
                        "VernacExtend",
                        "3a093a94ddc2990038208085261aa1982be466bb"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R D0); [|CopR].",
                        "VernacExtend",
                        "1acfbced68e06067bc9a17bec4eb51027bf84afc"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with D1 D2; Col; Cop.",
                        "VernacExtend",
                        "74bf16a84e0623692fcfdeb0d3618b2cf263213a"
                    ]
                },
                {
                    "command": [
                        "exists D3; split; trivial; ColR.",
                        "VernacExtend",
                        "2e42c5e79e1ef48290eac04cca1a39b1b764e236"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HD3 as [D3 [HCol8 HOS2]].",
                        "VernacExtend",
                        "8335970dad831ae1ae6c5ca9863cb8e059d8759c"
                    ]
                },
                {
                    "command": [
                        "destruct (hrap R Q M R Q P R D3) as [T [HT1 HT2]]; Perp.",
                        "VernacExtend",
                        "8b1744043d1340b6667afd63bf90f13585d44c4c"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute P Q M); CongA.",
                        "VernacExtend",
                        "bb669a9b792b7a8697eae8de3ecd2db524947ac2"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply conga3_suma__suma with P Q M P Q M P Q R; CongA.",
                        "VernacExtend",
                        "d0e66030a9fc9be8487e224a7e345d217f100351"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "assert (HP := HPerpBD); destruct HP as [R' [_ [_ [HR1 [HR2 HR3]]]]].",
                        "VernacExtend",
                        "c6802f47f01ef027f8543f22cd2f83a0cfb1ac33"
                    ]
                },
                {
                    "command": [
                        "assert (R = R'); [|treat_equalities; apply HR3; Col].",
                        "VernacExtend",
                        "d152596fad2f21d6cda88e531da204d0ecbb272b"
                    ]
                },
                {
                    "command": [
                        "elim (perp_not_col2 _ _ _ _ HPerpBD); intro; assert_diffs; [apply l6_21 with B1 B2 D1 D2|apply l6_21 with B1 B2 D2 D1]; Col.",
                        "VernacExtend",
                        "c4120ae26bb99e8f25dcc0e301996907d1bfc5a8"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R M) by Cop.",
                        "VernacExtend",
                        "773fe5c6b9a8bee93324204d1599bedf7c997d96"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar P Q R D3); [|CopR].",
                        "VernacExtend",
                        "fdb0eb0db45224678b1a123f2651c1eff40313f0"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply col_cop2__cop with D1 D2; Col; Cop.",
                        "VernacExtend",
                        "74bf16a84e0623692fcfdeb0d3618b2cf263213a"
                    ]
                },
                {
                    "command": [
                        "assert (HOut : Out Q S T) by (apply l6_7 with M; trivial; apply l6_6; assumption).",
                        "VernacExtend",
                        "5c6c9f224659b85e00ad6f2dd9694b55413fa6ea"
                    ]
                },
                {
                    "command": [
                        "assert (HCol9 : Col C1 C2 S) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9c2b63dbc4351ebffa5f5912566d0982119ef782"
                    ]
                },
                {
                    "command": [
                        "assert (HCol10 : Col D1 D2 T) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "64ee8d974c2cb0c77188ac8e30d42c50d674c626"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec C1 C2 T).",
                        "VernacExtend",
                        "23096961c58e1b34e8d6fa3ec2c784fef6df4d7b"
                    ]
                },
                {
                    "command": [
                        "exists T; Col.",
                        "VernacExtend",
                        "318128c485906f715edda44550fa4b8b411423de"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec D1 D2 S).",
                        "VernacExtend",
                        "2156d0af3cfbd104f52ce429485ffce61e75b148"
                    ]
                },
                {
                    "command": [
                        "exists S; Col.",
                        "VernacExtend",
                        "51a5433bce21fadf01476159b7f51eba4d3e4f70"
                    ]
                },
                {
                    "command": [
                        "destruct HOut as [HSQ [HTQ [HBet|HBet]]].",
                        "VernacExtend",
                        "6e2693cb4c2364ead15c9fe6f0b15e404c9dd671"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS C1 C2 R T).",
                        "VernacExtend",
                        "fd5acc75f833fba7bf655bba94b8a560edf87b38"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with Q.",
                        "VernacExtend",
                        "b6a0f09e93ed16cf38ce72cd3d87943b81e7d667"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; exists S; Col.",
                        "VernacExtend",
                        "c5d49ec1e0b19e02714abd0810a5eec93cabf254"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_strict_col2_par_strict with B1 B2; Par; Col.",
                        "VernacExtend",
                        "76225615442417c564b87b1e8d48ee326bf6c5e5"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct HTS as [_ [_ [I [HI1 HI2]]]].",
                        "VernacExtend",
                        "c486d21c3b8fa109e51705bd6bdbc7587c318663"
                    ]
                },
                {
                    "command": [
                        "exists I; split; ColR.",
                        "VernacExtend",
                        "0d488901878d712390e4e5a30bba560d27830331"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TS D1 D2 P S).",
                        "VernacExtend",
                        "7f19adac0fb039cfc68cb016f6862933d5991c0e"
                    ]
                },
                {
                    "command": [
                        "apply l9_8_2 with Q.",
                        "VernacExtend",
                        "b6a0f09e93ed16cf38ce72cd3d87943b81e7d667"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col; exists T; Col.",
                        "VernacExtend",
                        "56873457924e99775636655f4ebc878e6bf6ea13"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_strict_col2_par_strict with A1 A2; Par; Col.",
                        "VernacExtend",
                        "237659ba237535895dd499d64187b661bf8504b9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct HTS as [_ [_ [I [HI1 HI2]]]].",
                        "VernacExtend",
                        "c486d21c3b8fa109e51705bd6bdbc7587c318663"
                    ]
                },
                {
                    "command": [
                        "exists I; split; ColR.",
                        "VernacExtend",
                        "0d488901878d712390e4e5a30bba560d27830331"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}