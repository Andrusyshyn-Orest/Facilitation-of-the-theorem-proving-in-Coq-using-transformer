{
    "filename": "Meta_theory/Parallel_postulates/weak_tarski_s_parallel_postulate_weak_inverse_projection_postulate.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.suma.",
            "VernacRequire",
            "d2192c30d59bff3f952029b5d7f08161afc2f55b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel.",
            "VernacRequire",
            "5991b999496c8ab182b50b358d0c9b4e247ca365"
        ],
        [
            "Section weak_tarski_s_parallel_postulate_weak_inverse_projection_postulate.",
            "VernacBeginSection",
            "1665f0cf2e7ca03ef1a69988859aaa0fe0aa9b52"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma weak_tarski_s_parallel_postulate__weak_inverse_projection_postulate_aux : weak_tarski_s_parallel_postulate -> forall A B C P T, Per A B C -> InAngle T A B C -> P <> T -> CongA P B A P B C -> Per B P T -> Coplanar A B C P -> (exists X, Out B A X /\\ Col T P X) \\/ (exists Y, Out B C Y /\\ Col T P Y).",
            "VernacStartTheoremProof",
            "f731950e37441797f3d1ffd9a1333d515a65f5ba"
        ],
        [
            "intros tora A B C P T HPer HInAngle HPT HCongA HPerP HCop.",
            "VernacExtend",
            "3ae10770dc978cb1db63dfad99bf798e3b718d6b"
        ],
        [
            "assert (HIn : InAngle P A B C) by (apply conga_cop_inangle_per2__inangle with T; assumption).",
            "VernacExtend",
            "2a733fb521a6be3419ce8a4fd896a5bd28fd0443"
        ],
        [
            "assert (HAcute : Acute P B A) by (apply acute_sym, conga_inangle_per__acute with C; assumption).",
            "VernacExtend",
            "c890229598a88d0f8098857f35cd859206adf3b1"
        ],
        [
            "assert (HAcute' : Acute P B C) by (apply (acute_conga__acute P B A); assumption).",
            "VernacExtend",
            "6723cf29a0d6751a2d9501ef8583e618bd4faf46"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HPerp : Perp B P P T) by (apply per_perp; auto).",
            "VernacExtend",
            "aac5d4a6033ac4c595e93a9897a44bcd0f56e911"
        ],
        [
            "assert (HNCol : ~ Col A B C) by (apply per_not_col; auto).",
            "VernacExtend",
            "e2c4d407264512f878f53e1ae6abef1beff45317"
        ],
        [
            "assert (HNCol1 : ~ Col B P T) by (apply per_not_col; auto).",
            "VernacExtend",
            "57b6804c397bc8da16f0a0203903c9a74979f8e1"
        ],
        [
            "destruct (col_dec A B T).",
            "VernacExtend",
            "1089aeee0dccc76c13775741f027507ac1c1e167"
        ],
        [
            "left; exists T; split; Col.",
            "VernacExtend",
            "e17ca73fdd95efcbeca1d745520e868cfa53e446"
        ],
        [
            "apply l6_6, acute_col_perp__out_1 with P; Col.",
            "VernacExtend",
            "910bd33bf683c96f188b606d1cfe8da47a232a0d"
        ],
        [
            "destruct (tora A B C T) as [U [V [HU [HV HUTV]]]]; trivial.",
            "VernacExtend",
            "9982daa7b6abe12ddce9e1245bf9b7332636a547"
        ],
        [
            "destruct (col_dec P T U) as [HCol|HNCol2].",
            "VernacExtend",
            "f0cd299d9d8e9e9f363fdcd858c0562c93584c04"
        ],
        [
            "left; exists U; split; Col.",
            "VernacExtend",
            "aef5eddd67e7ad57c51bc481713fb696dc91d2fc"
        ],
        [
            "destruct (col_dec P T V) as [HCol|HNCol3].",
            "VernacExtend",
            "68b406c3cc9e77ddc6eb65734773f31f6e776a44"
        ],
        [
            "right; exists V; split; Col.",
            "VernacExtend",
            "8763bfb288a09386de5dd0ae1d9ff06a76ca26b0"
        ],
        [
            "destruct (cop__one_or_two_sides P T B U) as [HTS|HOS]; Col.",
            "VernacExtend",
            "96e12dbbeae647a3989b0f7c1abff5865fd1d035"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Coplanar A B C P) by Cop.",
            "VernacExtend",
            "00a9a78fd77fe641f53f2667c0d516853fffd657"
        ],
        [
            "assert (Coplanar A B C T) by Cop.",
            "VernacExtend",
            "5ee143506412968a46ac8d74222cd273873e5050"
        ],
        [
            "assert (Coplanar A B U C) by (apply col__coplanar; assert_cols; Col).",
            "VernacExtend",
            "7ca04327e9d0de87a64b6404acf82151c21a1493"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HTS as [_ [_ [X [HX1 HX2]]]].",
            "VernacExtend",
            "adda9999d9d4a8e8536cd95b5661dffc76c3db75"
        ],
        [
            "left; exists X; split; Col.",
            "VernacExtend",
            "3cf5eaacdd234e948d8c660803e65fe32309cea0"
        ],
        [
            "apply l6_7 with U; auto.",
            "VernacExtend",
            "c5b5febcbdb0414b16ff5d04504e36dbe19644ce"
        ],
        [
            "assert_diffs; apply l6_6, bet_out; auto.",
            "VernacExtend",
            "ec7809da3fdb491b7fda61483694e594edae4c35"
        ],
        [
            "intro; subst; apply HNCol1, HX1.",
            "VernacExtend",
            "34cabfc225af16fb9d5fd22e0c7c78870bd29117"
        ],
        [
            "assert (HTS : TS P T B V).",
            "VernacExtend",
            "03456b49cf3bd52331d1a726382b4ad934a47c71"
        ],
        [
            "apply l9_8_2 with U; Side.",
            "VernacExtend",
            "0af6eaf204ef29979e136c1b2d6a81c0cd980351"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exists T; repeat split; Col.",
            "VernacExtend",
            "1e38da4a20f49bba7262accd6a66db0a54100f51"
        ],
        [
            "destruct HTS as [_ [_ [Y [HY1 HY2]]]].",
            "VernacExtend",
            "3e5dbbaab819a728f6dab24f2ca3aab435250e10"
        ],
        [
            "right; exists Y; split; Col.",
            "VernacExtend",
            "c46483956b5d7fd664a90064dffc6f19bb36cab4"
        ],
        [
            "apply l6_7 with V; auto.",
            "VernacExtend",
            "f77724165f2527e1de3c97e4721652d2042cf878"
        ],
        [
            "assert_diffs; apply l6_6, bet_out; auto.",
            "VernacExtend",
            "ec7809da3fdb491b7fda61483694e594edae4c35"
        ],
        [
            "intro; subst; apply HNCol1, HY1.",
            "VernacExtend",
            "94bded7dbbe17fcba3f8d84457b4aed450ba889c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_tarski_s_parallel_postulate__weak_inverse_projection_postulate : weak_tarski_s_parallel_postulate -> weak_inverse_projection_postulate.",
            "VernacStartTheoremProof",
            "49108acb918f08527cea59eaf45bda1fdf45328c"
        ],
        [
            "intro wtpp.",
            "VernacExtend",
            "5358e0def604acf5af4384ae14aac9cbcf5c5909"
        ],
        [
            "cut (forall A B C P T, Per A B C -> InAngle T A B C -> P <> T -> CongA P B A P B C -> Coplanar A B C P -> Per B P T -> exists X Y, Out B A X /\\ Col T P X /\\ Out B C Y /\\ Col T P Y).",
            "VernacExtend",
            "237d1d4b7cae9ff8f1ab26995e6f71d66f6c7271"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros rabp A B C D E F P Q HAcute HPerE HSuma HOut HPQ HPerP HCop.",
            "VernacExtend",
            "03b62f61397bb2ecae9a5358e80dbeaa69966585"
        ],
        [
            "assert (HNCol1 : ~ Col A B C).",
            "VernacExtend",
            "07ee2c7c508cbd9318934b476a1ec2ecb73a8233"
        ],
        [
            "intro; suma.assert_diffs; apply (per_not_col D E F); auto.",
            "VernacExtend",
            "c25ac9d8cc9811981d4379627f2762dc61cfd6d2"
        ],
        [
            "apply (col2_suma__col A B C A B C); assumption.",
            "VernacExtend",
            "4386a56745775fe9de164b53bf563d37496af406"
        ],
        [
            "assert (HNCol2 : ~ Col B P Q) by (assert_diffs; apply per_not_col; auto).",
            "VernacExtend",
            "8edcc7d20770225cdbbdda95ba60730c0aeae19c"
        ],
        [
            "assert (HCongA : CongA A B C P B C).",
            "VernacExtend",
            "fc36688005d5939f22d8b8dbe3bccbddc4ad5ac6"
        ],
        [
            "assert_diffs; apply out_conga with A C A C; try (apply out_trivial); CongA.",
            "VernacExtend",
            "63070fe05e7acfc1dfdfdff33a781ea7ddbe9c36"
        ],
        [
            "assert (HNCol3 : ~ Col P B C) by (apply (ncol_conga_ncol A B C); assumption).",
            "VernacExtend",
            "8fe7b9b7e71e041bcdf569db7521ff71e4b5cde7"
        ],
        [
            "assert (HPerp : Perp B P P Q) by (apply per_perp; assert_diffs; auto).",
            "VernacExtend",
            "178e65fead4497949024eee071236e0c7ac97460"
        ],
        [
            "apply suma_left_comm in HSuma.",
            "VernacExtend",
            "66060f385e8ee32c0afd0713939752e3c41386a9"
        ],
        [
            "destruct HSuma as [J [HJ1 [HJ2 [HJ3 HJ4]]]].",
            "VernacExtend",
            "0f22567d3e7686cd0110e7450d7c7bd22c594103"
        ],
        [
            "assert (HQ' : exists Q', P <> Q' /\\ Col P Q Q' /\\ InAngle Q' C B P).",
            "VernacExtend",
            "1d25c6f097f69d5c7eb77060953ebdee793f47ac"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (cop_not_par_same_side B P Q P P C) as [Q0 [HCol HOS]]; Col.",
            "VernacExtend",
            "14cf7eda022ca612ef1d807627e45963cc785c4d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Coplanar A B P C) by Cop.",
            "VernacExtend",
            "d9951f3e5bc2e0c97cbc043db75f120c8a735890"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (one_side_dec B C P Q0).",
            "VernacExtend",
            "18bca853ff9b4fa5c843d992b61b9161ee9362f4"
        ],
        [
            "exists Q0; assert_diffs; split; auto; split; Col.",
            "VernacExtend",
            "df6c03df4fbe2021b89eb85f5844f5754135b988"
        ],
        [
            "apply os2__inangle; assumption.",
            "VernacExtend",
            "9aacc21328d676590b2b0cf56ae8862dc535dc86"
        ],
        [
            "assert (HQ' : exists Q', Col P Q Q' /\\ Col B C Q').",
            "VernacExtend",
            "c15bd568c214341b967acf51d78c783ad4f6ff3a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (col_dec B C Q0).",
            "VernacExtend",
            "23bc08cd6a095d92613d433651160118efb6f4ee"
        ],
        [
            "exists Q0; Col.",
            "VernacExtend",
            "60def6abb77b4b1e26749bab875a001fd8f72a69"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (cop__not_one_side_two_sides B C P Q0) as [_ [_ [Q' [HCol' HBet]]]]; Col; Cop.",
            "VernacExtend",
            "cd47fcb2c8dc62edb96652cb8340f8f8cf6da8a3"
        ],
        [
            "exists Q'; split; ColR.",
            "VernacExtend",
            "62036731dc97e25be5b723a63e1d3556f8908a5a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HQ' as [Q' [HCol1 HCol2]].",
            "VernacExtend",
            "fa06dc3de05e2e5817dfa73aa8421c2f9df60ca5"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert (P <> Q') by (intro; subst; apply HNCol3; Col).",
            "VernacExtend",
            "b1871a6802084b627ca2a350896267a320aebe16"
        ],
        [
            "split; auto; split; Col.",
            "VernacExtend",
            "93a5008c361273915a8eb9735ecf4b892162c329"
        ],
        [
            "apply out321__inangle; auto.",
            "VernacExtend",
            "e64362360b6cae184105f7a3dac144d66e532ec3"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "apply l6_6, (acute_col_perp__out_1 P); Col.",
            "VernacExtend",
            "21368bcc60a12d11cec202b1f4ef79e33c1ebf34"
        ],
        [
            "apply (acute_conga__acute A B C); assumption.",
            "VernacExtend",
            "e25ebc19232514d0d78e3b222d65c96d95b46228"
        ],
        [
            "apply perp_col1 with Q; auto.",
            "VernacExtend",
            "0f31d4df9f6a9ec9778bb3333a74db24d30aead7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HQ' as [Q' [HPQ' [HCol HInangle]]].",
            "VernacExtend",
            "09ae3198c4f423a8e14be820a56c03c4cffaad36"
        ],
        [
            "assert (HInangle' : InAngle Q' C B J).",
            "VernacExtend",
            "d8abd16af224758fe2642eb53b09a7310b0ebe93"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply in_angle_trans with P; trivial.",
            "VernacExtend",
            "887c7d40d08aabd4edb23f65a92bc650ee7006c6"
        ],
        [
            "apply l11_25 with A C J; try (apply out_trivial; assert_diffs; auto); [|apply l6_6; assumption].",
            "VernacExtend",
            "157bbfd58e9b583f5ec104401747a827da57d3aa"
        ],
        [
            "apply os_ts__inangle.",
            "VernacExtend",
            "822564770c8073d1ed68ee0caf3438f69841968b"
        ],
        [
            "assert (~ Col A B J) by (apply (ncol_conga_ncol A B C); CongA).",
            "VernacExtend",
            "c6b7df56d61852a32cdf58aa833491eef7baaa36"
        ],
        [
            "assert_diffs; apply cop__not_one_side_two_sides; Col; Cop.",
            "VernacExtend",
            "056284fae0576b648318fe568fbcf250781cc454"
        ],
        [
            "assert (~ Col C B J).",
            "VernacExtend",
            "4c8af79de9ef38c3e854e28f76d62385a9383c2e"
        ],
        [
            "apply (ncol_conga_ncol D E F); CongA; assert_diffs; apply per_not_col; auto.",
            "VernacExtend",
            "e065ea44c695f131cbfbfd72957b587146f250c8"
        ],
        [
            "apply invert_one_side, one_side_symmetry, cop__not_two_sides_one_side; Col.",
            "VernacExtend",
            "66679128606f31b98905ebafda279ea6fe17eb7e"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "apply conga_sams_nos__nts with A B C; SumA.",
            "VernacExtend",
            "5916983bf0acebcc7a1cc7840e7447d293a14105"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (rabp C B J P Q') as [Y [_ [HY1 [HY2 _]]]]; trivial.",
            "VernacExtend",
            "5f390fe8365c28cc1059ffc476ba75fd9668e5a1"
        ],
        [
            "apply (l11_17 D E F); CongA.",
            "VernacExtend",
            "8904020d6dcbb7f0858e63bc7c93d9d6951cf01b"
        ],
        [
            "assert_diffs; apply out_conga with A C A J; try (apply out_trivial); CongA.",
            "VernacExtend",
            "10f145c725f76509bc0e0832090a5ae48d046ab6"
        ],
        [
            "assert (Coplanar A B P C) by Cop.",
            "VernacExtend",
            "d9951f3e5bc2e0c97cbc043db75f120c8a735890"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "apply per_col with Q; auto.",
            "VernacExtend",
            "3bdbc933ec085aeee9e86da7a7694e7e420b293c"
        ],
        [
            "exists Y; split; ColR.",
            "VernacExtend",
            "57da9dd04337910b8a24e2db67ebc859f077d76d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A B C P T HPer HInAngle HPT HCongA HCop HPerP.",
            "VernacExtend",
            "153eb7e8711145f4fb7e25b65afbd54f15d0504f"
        ],
        [
            "assert (HNOut : ~ Out B A C) by (intro; assert_diffs; apply (per_not_col A B C); Col).",
            "VernacExtend",
            "2f112e36fe02f78694892d5b193307def9e9609b"
        ],
        [
            "assert (HPerp : Perp B P P T) by (assert_diffs; apply per_perp; auto).",
            "VernacExtend",
            "6aa5fb835085314d34c0717e8271510c91440ec5"
        ],
        [
            "destruct (weak_tarski_s_parallel_postulate__weak_inverse_projection_postulate_aux wtpp A B C P T) as [[X [HX1 HX2]]|[Y [HY1 HY2]]]; trivial.",
            "VernacExtend",
            "d36ef4869bf9c894fa199eeb1d1c3c197007fc11"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (symmetric_point_construction X P) as [Y HY].",
            "VernacExtend",
            "cb5cbcff859f57356fd60d4f27ab750dbcb11379"
        ],
        [
            "assert (X <> Y).",
            "VernacExtend",
            "b84dc18dd0f142a773e181451bb0c75f076f9262"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "apply HNOut, l6_7 with P; trivial.",
            "VernacExtend",
            "6240de939b7d8f0343a6dc26bc9363ddd1e7ee62"
        ],
        [
            "apply (l11_21_a P B A); trivial.",
            "VernacExtend",
            "34abc91b7f659399029d53d91700f73a5f8b5b36"
        ],
        [
            "apply l6_6, HX1.",
            "VernacExtend",
            "2db52a7d5b094fa67cbf3210e602e21d50f80a24"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out B C Y).",
            "VernacExtend",
            "4c73106ac7364f2d8546cfc80c0f2d729b61a101"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply conga_cop_out_reflectl__out with A P X; trivial.",
            "VernacExtend",
            "18fa372bef617450c4c58aecb798535a55e945bf"
        ],
        [
            "apply l10_4_spec; split.",
            "VernacExtend",
            "27538bd4c9d7722ef92da7aa398b9e10408d7f3b"
        ],
        [
            "exists P; Col.",
            "VernacExtend",
            "c0a97381d2ad1b86b8f82dd9fe3e405733422552"
        ],
        [
            "left; apply perp_col2_bis with P T; ColR.",
            "VernacExtend",
            "9c97b61b9f70248f47ad38a526cbdedea33e7349"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists X, Y; repeat (split; try ColR).",
            "VernacExtend",
            "09711f50d87340a7e6e5eb279fe9d37a01a2348c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (symmetric_point_construction Y P) as [X HX].",
            "VernacExtend",
            "7d89be2a84e855db415fed9e89551c3329a62664"
        ],
        [
            "assert (X <> Y).",
            "VernacExtend",
            "b84dc18dd0f142a773e181451bb0c75f076f9262"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "apply HNOut, l6_7 with P; apply l6_6; trivial.",
            "VernacExtend",
            "2988394dc2cf88a06d8bc6c37c5fe975910dcca2"
        ],
        [
            "apply (l11_21_a P B C); CongA.",
            "VernacExtend",
            "85d7167e631b90cdb12c7fd1baf9334f29ee8646"
        ],
        [
            "apply l6_6, HY1.",
            "VernacExtend",
            "640f93f388326f0a20485c73a9a77867895bef26"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out B A X).",
            "VernacExtend",
            "585baeec191b81f51bf09fc16f91de3438ff7fef"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply conga_cop_out_reflectl__out with C P Y; CongA; Cop.",
            "VernacExtend",
            "4e4ec8f04c36537ff0a56f77be16fb2f34cea18a"
        ],
        [
            "intro HOut; apply HNOut, l6_6, HOut.",
            "VernacExtend",
            "7023f284152993eab30ca058d06a39576a7daef2"
        ],
        [
            "apply l10_4_spec; split.",
            "VernacExtend",
            "27538bd4c9d7722ef92da7aa398b9e10408d7f3b"
        ],
        [
            "exists P; Col.",
            "VernacExtend",
            "c0a97381d2ad1b86b8f82dd9fe3e405733422552"
        ],
        [
            "left; apply perp_col2_bis with P T; try ColR.",
            "VernacExtend",
            "c33952e7e1448eb99069a4ad73aa8fc0c3013ca3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists X, Y; repeat (split; try ColR).",
            "VernacExtend",
            "09711f50d87340a7e6e5eb279fe9d37a01a2348c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End weak_tarski_s_parallel_postulate_weak_inverse_projection_postulate.",
            "VernacEndSegment",
            "3fee8ae1a48fe345ff84a91dca3c0415c7033ffc"
        ]
    ],
    "proofs": [
        {
            "name": "weak_tarski_s_parallel_postulate__weak_inverse_projection_postulate",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intro wtpp.",
                        "VernacExtend",
                        "5358e0def604acf5af4384ae14aac9cbcf5c5909"
                    ]
                },
                {
                    "command": [
                        "cut (forall A B C P T, Per A B C -> InAngle T A B C -> P <> T -> CongA P B A P B C -> Coplanar A B C P -> Per B P T -> exists X Y, Out B A X /\\ Col T P X /\\ Out B C Y /\\ Col T P Y).",
                        "VernacExtend",
                        "237d1d4b7cae9ff8f1ab26995e6f71d66f6c7271"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros rabp A B C D E F P Q HAcute HPerE HSuma HOut HPQ HPerP HCop.",
                        "VernacExtend",
                        "03b62f61397bb2ecae9a5358e80dbeaa69966585"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol1 : ~ Col A B C).",
                        "VernacExtend",
                        "07ee2c7c508cbd9318934b476a1ec2ecb73a8233"
                    ]
                },
                {
                    "command": [
                        "intro; suma.assert_diffs; apply (per_not_col D E F); auto.",
                        "VernacExtend",
                        "c25ac9d8cc9811981d4379627f2762dc61cfd6d2"
                    ]
                },
                {
                    "command": [
                        "apply (col2_suma__col A B C A B C); assumption.",
                        "VernacExtend",
                        "4386a56745775fe9de164b53bf563d37496af406"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol2 : ~ Col B P Q) by (assert_diffs; apply per_not_col; auto).",
                        "VernacExtend",
                        "8edcc7d20770225cdbbdda95ba60730c0aeae19c"
                    ]
                },
                {
                    "command": [
                        "assert (HCongA : CongA A B C P B C).",
                        "VernacExtend",
                        "fc36688005d5939f22d8b8dbe3bccbddc4ad5ac6"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply out_conga with A C A C; try (apply out_trivial); CongA.",
                        "VernacExtend",
                        "63070fe05e7acfc1dfdfdff33a781ea7ddbe9c36"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol3 : ~ Col P B C) by (apply (ncol_conga_ncol A B C); assumption).",
                        "VernacExtend",
                        "8fe7b9b7e71e041bcdf569db7521ff71e4b5cde7"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp : Perp B P P Q) by (apply per_perp; assert_diffs; auto).",
                        "VernacExtend",
                        "178e65fead4497949024eee071236e0c7ac97460"
                    ]
                },
                {
                    "command": [
                        "apply suma_left_comm in HSuma.",
                        "VernacExtend",
                        "66060f385e8ee32c0afd0713939752e3c41386a9"
                    ]
                },
                {
                    "command": [
                        "destruct HSuma as [J [HJ1 [HJ2 [HJ3 HJ4]]]].",
                        "VernacExtend",
                        "0f22567d3e7686cd0110e7450d7c7bd22c594103"
                    ]
                },
                {
                    "command": [
                        "assert (HQ' : exists Q', P <> Q' /\\ Col P Q Q' /\\ InAngle Q' C B P).",
                        "VernacExtend",
                        "1d25c6f097f69d5c7eb77060953ebdee793f47ac"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_not_par_same_side B P Q P P C) as [Q0 [HCol HOS]]; Col.",
                        "VernacExtend",
                        "14cf7eda022ca612ef1d807627e45963cc785c4d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B P C) by Cop.",
                        "VernacExtend",
                        "d9951f3e5bc2e0c97cbc043db75f120c8a735890"
                    ]
                },
                {
                    "command": [
                        "CopR.",
                        "VernacExtend",
                        "7b1654670373807fcd176fc85962d78f62c8c69b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (one_side_dec B C P Q0).",
                        "VernacExtend",
                        "18bca853ff9b4fa5c843d992b61b9161ee9362f4"
                    ]
                },
                {
                    "command": [
                        "exists Q0; assert_diffs; split; auto; split; Col.",
                        "VernacExtend",
                        "df6c03df4fbe2021b89eb85f5844f5754135b988"
                    ]
                },
                {
                    "command": [
                        "apply os2__inangle; assumption.",
                        "VernacExtend",
                        "9aacc21328d676590b2b0cf56ae8862dc535dc86"
                    ]
                },
                {
                    "command": [
                        "assert (HQ' : exists Q', Col P Q Q' /\\ Col B C Q').",
                        "VernacExtend",
                        "c15bd568c214341b967acf51d78c783ad4f6ff3a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec B C Q0).",
                        "VernacExtend",
                        "23bc08cd6a095d92613d433651160118efb6f4ee"
                    ]
                },
                {
                    "command": [
                        "exists Q0; Col.",
                        "VernacExtend",
                        "60def6abb77b4b1e26749bab875a001fd8f72a69"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__not_one_side_two_sides B C P Q0) as [_ [_ [Q' [HCol' HBet]]]]; Col; Cop.",
                        "VernacExtend",
                        "cd47fcb2c8dc62edb96652cb8340f8f8cf6da8a3"
                    ]
                },
                {
                    "command": [
                        "exists Q'; split; ColR.",
                        "VernacExtend",
                        "62036731dc97e25be5b723a63e1d3556f8908a5a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HQ' as [Q' [HCol1 HCol2]].",
                        "VernacExtend",
                        "fa06dc3de05e2e5817dfa73aa8421c2f9df60ca5"
                    ]
                },
                {
                    "command": [
                        "exists Q'.",
                        "VernacExtend",
                        "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
                    ]
                },
                {
                    "command": [
                        "assert (P <> Q') by (intro; subst; apply HNCol3; Col).",
                        "VernacExtend",
                        "b1871a6802084b627ca2a350896267a320aebe16"
                    ]
                },
                {
                    "command": [
                        "split; auto; split; Col.",
                        "VernacExtend",
                        "93a5008c361273915a8eb9735ecf4b892162c329"
                    ]
                },
                {
                    "command": [
                        "apply out321__inangle; auto.",
                        "VernacExtend",
                        "e64362360b6cae184105f7a3dac144d66e532ec3"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, (acute_col_perp__out_1 P); Col.",
                        "VernacExtend",
                        "21368bcc60a12d11cec202b1f4ef79e33c1ebf34"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute A B C); assumption.",
                        "VernacExtend",
                        "e25ebc19232514d0d78e3b222d65c96d95b46228"
                    ]
                },
                {
                    "command": [
                        "apply perp_col1 with Q; auto.",
                        "VernacExtend",
                        "0f31d4df9f6a9ec9778bb3333a74db24d30aead7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HQ' as [Q' [HPQ' [HCol HInangle]]].",
                        "VernacExtend",
                        "09ae3198c4f423a8e14be820a56c03c4cffaad36"
                    ]
                },
                {
                    "command": [
                        "assert (HInangle' : InAngle Q' C B J).",
                        "VernacExtend",
                        "d8abd16af224758fe2642eb53b09a7310b0ebe93"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_trans with P; trivial.",
                        "VernacExtend",
                        "887c7d40d08aabd4edb23f65a92bc650ee7006c6"
                    ]
                },
                {
                    "command": [
                        "apply l11_25 with A C J; try (apply out_trivial; assert_diffs; auto); [|apply l6_6; assumption].",
                        "VernacExtend",
                        "157bbfd58e9b583f5ec104401747a827da57d3aa"
                    ]
                },
                {
                    "command": [
                        "apply os_ts__inangle.",
                        "VernacExtend",
                        "822564770c8073d1ed68ee0caf3438f69841968b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B J) by (apply (ncol_conga_ncol A B C); CongA).",
                        "VernacExtend",
                        "c6b7df56d61852a32cdf58aa833491eef7baaa36"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply cop__not_one_side_two_sides; Col; Cop.",
                        "VernacExtend",
                        "056284fae0576b648318fe568fbcf250781cc454"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col C B J).",
                        "VernacExtend",
                        "4c8af79de9ef38c3e854e28f76d62385a9383c2e"
                    ]
                },
                {
                    "command": [
                        "apply (ncol_conga_ncol D E F); CongA; assert_diffs; apply per_not_col; auto.",
                        "VernacExtend",
                        "e065ea44c695f131cbfbfd72957b587146f250c8"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side, one_side_symmetry, cop__not_two_sides_one_side; Col.",
                        "VernacExtend",
                        "66679128606f31b98905ebafda279ea6fe17eb7e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "apply conga_sams_nos__nts with A B C; SumA.",
                        "VernacExtend",
                        "5916983bf0acebcc7a1cc7840e7447d293a14105"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (rabp C B J P Q') as [Y [_ [HY1 [HY2 _]]]]; trivial.",
                        "VernacExtend",
                        "5f390fe8365c28cc1059ffc476ba75fd9668e5a1"
                    ]
                },
                {
                    "command": [
                        "apply (l11_17 D E F); CongA.",
                        "VernacExtend",
                        "8904020d6dcbb7f0858e63bc7c93d9d6951cf01b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply out_conga with A C A J; try (apply out_trivial); CongA.",
                        "VernacExtend",
                        "10f145c725f76509bc0e0832090a5ae48d046ab6"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar A B P C) by Cop.",
                        "VernacExtend",
                        "d9951f3e5bc2e0c97cbc043db75f120c8a735890"
                    ]
                },
                {
                    "command": [
                        "CopR.",
                        "VernacExtend",
                        "7b1654670373807fcd176fc85962d78f62c8c69b"
                    ]
                },
                {
                    "command": [
                        "apply per_col with Q; auto.",
                        "VernacExtend",
                        "3bdbc933ec085aeee9e86da7a7694e7e420b293c"
                    ]
                },
                {
                    "command": [
                        "exists Y; split; ColR.",
                        "VernacExtend",
                        "57da9dd04337910b8a24e2db67ebc859f077d76d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A B C P T HPer HInAngle HPT HCongA HCop HPerP.",
                        "VernacExtend",
                        "153eb7e8711145f4fb7e25b65afbd54f15d0504f"
                    ]
                },
                {
                    "command": [
                        "assert (HNOut : ~ Out B A C) by (intro; assert_diffs; apply (per_not_col A B C); Col).",
                        "VernacExtend",
                        "2f112e36fe02f78694892d5b193307def9e9609b"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp : Perp B P P T) by (assert_diffs; apply per_perp; auto).",
                        "VernacExtend",
                        "6aa5fb835085314d34c0717e8271510c91440ec5"
                    ]
                },
                {
                    "command": [
                        "destruct (weak_tarski_s_parallel_postulate__weak_inverse_projection_postulate_aux wtpp A B C P T) as [[X [HX1 HX2]]|[Y [HY1 HY2]]]; trivial.",
                        "VernacExtend",
                        "d36ef4869bf9c894fa199eeb1d1c3c197007fc11"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction X P) as [Y HY].",
                        "VernacExtend",
                        "cb5cbcff859f57356fd60d4f27ab750dbcb11379"
                    ]
                },
                {
                    "command": [
                        "assert (X <> Y).",
                        "VernacExtend",
                        "b84dc18dd0f142a773e181451bb0c75f076f9262"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "apply HNOut, l6_7 with P; trivial.",
                        "VernacExtend",
                        "6240de939b7d8f0343a6dc26bc9363ddd1e7ee62"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a P B A); trivial.",
                        "VernacExtend",
                        "34abc91b7f659399029d53d91700f73a5f8b5b36"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, HX1.",
                        "VernacExtend",
                        "2db52a7d5b094fa67cbf3210e602e21d50f80a24"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out B C Y).",
                        "VernacExtend",
                        "4c73106ac7364f2d8546cfc80c0f2d729b61a101"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply conga_cop_out_reflectl__out with A P X; trivial.",
                        "VernacExtend",
                        "18fa372bef617450c4c58aecb798535a55e945bf"
                    ]
                },
                {
                    "command": [
                        "apply l10_4_spec; split.",
                        "VernacExtend",
                        "27538bd4c9d7722ef92da7aa398b9e10408d7f3b"
                    ]
                },
                {
                    "command": [
                        "exists P; Col.",
                        "VernacExtend",
                        "c0a97381d2ad1b86b8f82dd9fe3e405733422552"
                    ]
                },
                {
                    "command": [
                        "left; apply perp_col2_bis with P T; ColR.",
                        "VernacExtend",
                        "9c97b61b9f70248f47ad38a526cbdedea33e7349"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists X, Y; repeat (split; try ColR).",
                        "VernacExtend",
                        "09711f50d87340a7e6e5eb279fe9d37a01a2348c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction Y P) as [X HX].",
                        "VernacExtend",
                        "7d89be2a84e855db415fed9e89551c3329a62664"
                    ]
                },
                {
                    "command": [
                        "assert (X <> Y).",
                        "VernacExtend",
                        "b84dc18dd0f142a773e181451bb0c75f076f9262"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "apply HNOut, l6_7 with P; apply l6_6; trivial.",
                        "VernacExtend",
                        "2988394dc2cf88a06d8bc6c37c5fe975910dcca2"
                    ]
                },
                {
                    "command": [
                        "apply (l11_21_a P B C); CongA.",
                        "VernacExtend",
                        "85d7167e631b90cdb12c7fd1baf9334f29ee8646"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, HY1.",
                        "VernacExtend",
                        "640f93f388326f0a20485c73a9a77867895bef26"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out B A X).",
                        "VernacExtend",
                        "585baeec191b81f51bf09fc16f91de3438ff7fef"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply conga_cop_out_reflectl__out with C P Y; CongA; Cop.",
                        "VernacExtend",
                        "4e4ec8f04c36537ff0a56f77be16fb2f34cea18a"
                    ]
                },
                {
                    "command": [
                        "intro HOut; apply HNOut, l6_6, HOut.",
                        "VernacExtend",
                        "7023f284152993eab30ca058d06a39576a7daef2"
                    ]
                },
                {
                    "command": [
                        "apply l10_4_spec; split.",
                        "VernacExtend",
                        "27538bd4c9d7722ef92da7aa398b9e10408d7f3b"
                    ]
                },
                {
                    "command": [
                        "exists P; Col.",
                        "VernacExtend",
                        "c0a97381d2ad1b86b8f82dd9fe3e405733422552"
                    ]
                },
                {
                    "command": [
                        "left; apply perp_col2_bis with P T; try ColR.",
                        "VernacExtend",
                        "c33952e7e1448eb99069a4ad73aa8fc0c3013ca3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists X, Y; repeat (split; try ColR).",
                        "VernacExtend",
                        "09711f50d87340a7e6e5eb279fe9d37a01a2348c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}