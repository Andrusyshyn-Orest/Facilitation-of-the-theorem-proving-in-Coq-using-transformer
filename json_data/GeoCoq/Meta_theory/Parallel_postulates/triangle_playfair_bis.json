{
    "filename": "Meta_theory/Parallel_postulates/triangle_playfair_bis.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.suma.",
            "VernacRequire",
            "d2192c30d59bff3f952029b5d7f08161afc2f55b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch13_1.",
            "VernacRequire",
            "47dcc16f1dfddcd1d3cb74ef6d75a8d70ab03305"
        ],
        [
            "Section triangle_playfair_bis.",
            "VernacBeginSection",
            "70d63790a12e32e4fb9ab092be8544fef4fbe871"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma legendre_aux1 : greenberg_s_axiom -> triangle_postulate -> forall A1 A2 B1 B2 C1 C2 P, Perp2 A1 A2 B1 B2 P -> ~ Col A1 A2 P -> Col P B1 B2 -> Coplanar A1 A2 B1 B2 -> Par A1 A2 C1 C2 -> Col P C1 C2 -> ~ TS B1 B2 A1 C1 -> Col C1 B1 B2.",
            "VernacStartTheoremProof",
            "d3cf0e41d22e67747629eca3ce09f93a5a550bd9"
        ],
        [
            "intros greenberg triangle.",
            "VernacExtend",
            "9cd57ec0b1caf460a48fb5112d41577ad3b6ebb2"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 P HPerp2 HNC HPB HCop HParAC HPC HNts.",
            "VernacExtend",
            "9179acee5dae73d6a43504edeed468ec6a0bd0c9"
        ],
        [
            "assert(HParAB : Par A1 A2 B1 B2).",
            "VernacExtend",
            "50c1dcd5c2ff54d703e2183bef493d374a9eefd4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Par_strict A1 A2 B1 B2); [|Par].",
            "VernacExtend",
            "658f2a6cabb0fcdb3ced36792e5cba3ee63b29bc"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ P); Col.",
            "VernacExtend",
            "b0c685ba16094fc335618944d9738faa90ca87d4"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "destruct HPerp2 as [X [Y [HCol1 [HPerp1 HPerp2]]]].",
            "VernacExtend",
            "23980ab03bbe34e018faa2532adadcfa521f7e8d"
        ],
        [
            "assert (HI1 := HPerp1); assert (HI2 := HPerp2).",
            "VernacExtend",
            "0ca0deb88c40dd77fbe6d87961682becfe2da921"
        ],
        [
            "destruct HI1 as [I1 H1]; destruct HI2 as [I2 H2].",
            "VernacExtend",
            "00bf122556990564b466d23127a26574953d60ab"
        ],
        [
            "apply perp_in_col in H1; apply perp_in_col in H2.",
            "VernacExtend",
            "e1e13b29ace5198b94a104d651c35bf523f988b5"
        ],
        [
            "destruct H1 as [HCol2 HCol3]; destruct H2 as [HCol4 HCol5].",
            "VernacExtend",
            "9cdc2c20e831e0bdee0172ea42a8c225be66475d"
        ],
        [
            "assert (P = I2); [|treat_equalities; rename I1 into R].",
            "VernacExtend",
            "1fbc2c2326ae27d797efc6044825a8b14836e9e5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ (perp_sym _ _ _ _ HPerp2)); intro; [apply l6_21 with B1 B2 X Y|apply l6_21 with B1 B2 Y X]; assert_diffs; Col.",
            "VernacExtend",
            "417aa434b216f4996bb70d1f41dcda00b66d5ed6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points P R); intro HNE; treat_equalities; [exfalso; Col|].",
            "VernacExtend",
            "de8b188a936669e05fe88bdbd7aed62ff033a267"
        ],
        [
            "apply (l12_9 _ _ _ _ X Y); Perp; apply coplanar_perm_16; apply col2_cop__cop with P R; try solve [assert_diffs; ColR]; apply coplanar_perm_2; [apply col_cop__cop with A2|apply col_cop__cop with A1| apply col_cop__cop with A2|apply col_cop__cop with A1]; Col; try solve [assert_diffs; auto]; apply coplanar_perm_16; [apply col_cop__cop with B2|apply col_cop__cop with B2| apply col_cop__cop with B1|apply col_cop__cop with B1]; assert_diffs; Col; Cop.",
            "VernacExtend",
            "8b0a80b471b510443f2d2fbab00e6acae5214183"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim(col_dec P A1 A2).",
            "VernacExtend",
            "c32a003e21302937ce08d0fe1371d28be6fa3252"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HConf.",
            "VernacExtend",
            "de7e47b96e863ab7ec905eef72dc158fa5e6ea06"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HParAB; Col.",
            "VernacExtend",
            "629f66583fc7881236c49ee685040845c98084dd"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HParAC; Col.",
            "VernacExtend",
            "1b5562344a6cf5204bb4807241a1902bb21f7a04"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply(col3 A1 A2); auto.",
            "VernacExtend",
            "b26df8b0286a874edb4185a595a1164eecdeacde"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HStrict.",
            "VernacExtend",
            "d0690c8e2adead28211c41a3cd7127aee48bec96"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ P) in HParAB; Col.",
            "VernacExtend",
            "3a4e0537163157abac8699da55ee428eb73288dd"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ P) in HParAC; Col.",
            "VernacExtend",
            "c6bcf83a8c568de7bdda191fecfdd589e8346949"
        ],
        [
            "elim(col_dec C1 B1 B2); auto.",
            "VernacExtend",
            "cecd23f0d8beb108673cf24c343720815fa01672"
        ],
        [
            "intro HC1NotB.",
            "VernacExtend",
            "c1f71432ef2715de90532d0ac7af123adb0c9ff1"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(P<>C1) by (intro; subst C1; Col).",
            "VernacExtend",
            "e3943f21fc7351319172722693c5c135fa395692"
        ],
        [
            "destruct HPerp2 as [P1 [P2 [HP [HPerpAP HPerpBP]]]].",
            "VernacExtend",
            "dc45f9ef633ca9e9a1120699dc432677ba6fc8f0"
        ],
        [
            "assert(HQ := HPerpAP); auto.",
            "VernacExtend",
            "68dd1052d25ddcf9a8c8ad480657d55563ea08dc"
        ],
        [
            "destruct HQ as [Q [_ [_ [HQP[HQA _]]]]].",
            "VernacExtend",
            "23800e8d67bc8badebd75b0f7a8bcaa5ed0643d8"
        ],
        [
            "assert(HP' := HPerpBP); auto.",
            "VernacExtend",
            "0830b18edda1fedb7a43013f21bbdb69a91d7514"
        ],
        [
            "destruct HP' as [P' HPerpP].",
            "VernacExtend",
            "179d38244ca7545b28ab5d6f0bd7c7a6429a2edc"
        ],
        [
            "assert(P'=P) by (apply (l8_14_2_1b _ P1 P2 B1 B2); Col).",
            "VernacExtend",
            "f223e9e484c85be166c043b7d10776fb3797222f"
        ],
        [
            "subst P'.",
            "VernacExtend",
            "788ca68a1c074388b4eb3ba6bead0c21b3bb98d4"
        ],
        [
            "destruct HPerpP as [_ [_ [HPP _]]].",
            "VernacExtend",
            "8c8d58df05d6e21ea14e482ec8ab3378dba664cb"
        ],
        [
            "assert(P<>Q) by (intro; subst Q; auto).",
            "VernacExtend",
            "d4f6ee591fa81a1daf637bd5909528c08ec7ec1c"
        ],
        [
            "apply (perp_col0 _ _ _ _ P Q) in HPerpAP; Col.",
            "VernacExtend",
            "238f49a5e977b1a6a2c93ee2219c66e30dd3e615"
        ],
        [
            "apply (perp_col0 _ _ _ _ P Q) in HPerpBP; Col.",
            "VernacExtend",
            "930766469a3576fe9af10ad694f7cb658aea6df2"
        ],
        [
            "clear dependent P1.",
            "VernacExtend",
            "8458f2f714f0a5eae9c16441a5a9ffb2787c5c60"
        ],
        [
            "clear dependent P2.",
            "VernacExtend",
            "e4cbc17aa6888f0510f63c29a4dab547f5c2241d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(Hos : OS B1 B2 Q C1).",
            "VernacExtend",
            "75ccb2fb781e226464fc1852f5649ffb1a8d1e1e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (one_side_transitivity _ _ _ A1).",
            "VernacExtend",
            "139ed88d37ae2f0be6b476512184e380f6b73d55"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim(eq_dec_points A1 Q).",
            "VernacExtend",
            "900053751e5d1892bb40a7a7153fdd9292656043"
        ],
        [
            "intro; subst A1; apply one_side_reflexivity; auto; apply (par_strict_not_col_2 A2); Par.",
            "VernacExtend",
            "53b9774a1bd052c3b7aac5625cd473585dca3238"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply l12_6.",
            "VernacExtend",
            "c0d0336f1c22c26db46a4e28dbcac4182527f3a2"
        ],
        [
            "apply par_strict_right_comm.",
            "VernacExtend",
            "b3461cfadff067d77e96949ad9fd609f64829366"
        ],
        [
            "apply (par_strict_col_par_strict _ _ _ A2); Col; Par.",
            "VernacExtend",
            "6e29a5dc07957c3e9a6d0c87c5f063f3db83b4e3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply cop__not_two_sides_one_side; Col.",
            "VernacExtend",
            "b422124bd5e28ed9ebe738a1aa6cb907c680ad63"
        ],
        [
            "assert (Coplanar A1 A2 P B1) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "6507e82f78787aee735a5e50a18dd39b6a62812f"
        ],
        [
            "assert (Coplanar A1 A2 P B2) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "79f03443d708c816e1f85a22a67fb087376b471c"
        ],
        [
            "assert (Coplanar A1 A2 C1 C2) by (apply pars__coplanar; auto).",
            "VernacExtend",
            "ae49bfe9714238cf5301c3aadcc99fe23d47301e"
        ],
        [
            "assert (Coplanar A1 A2 P C1) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "e9babcb439ecdc66d38afbeb5336b24632e17349"
        ],
        [
            "assert (Coplanar A1 A2 P C2) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "519d7ca22099b7a58839249d42d7b10f94f123e5"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "apply (par_strict_not_col_2 A2); Par.",
            "VernacExtend",
            "cde814fee45558dca4a052af4e813f6768d0462d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(~ Col Q C1 P) by (apply (par_not_col A1 A2); auto; apply (par_strict_col_par_strict _ _ _ C2); Col).",
            "VernacExtend",
            "a7e861e7503dc95dfa274f98646d4102ddb1ad47"
        ],
        [
            "assert(~ Col B1 B2 Q) by (apply (one_side_not_col123 _ _ _ C1); auto).",
            "VernacExtend",
            "637d56aa6b3750a37dd296a2795abdfd8723daa8"
        ],
        [
            "assert(HB3 : exists B3, Col B1 B2 B3 /\\ OS P Q C1 B3).",
            "VernacExtend",
            "1aef2c5c52654ea0fa117913ba031e76c0536654"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Coplanar A1 A2 P B1) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "6507e82f78787aee735a5e50a18dd39b6a62812f"
        ],
        [
            "assert (Coplanar A1 A2 P B2) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "79f03443d708c816e1f85a22a67fb087376b471c"
        ],
        [
            "assert (Coplanar A1 A2 C1 C2) by (apply pars__coplanar; auto).",
            "VernacExtend",
            "ae49bfe9714238cf5301c3aadcc99fe23d47301e"
        ],
        [
            "assert (Coplanar A1 A2 P C1) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "e9babcb439ecdc66d38afbeb5336b24632e17349"
        ],
        [
            "assert (Coplanar A1 A2 P C2) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "519d7ca22099b7a58839249d42d7b10f94f123e5"
        ],
        [
            "assert (Coplanar A1 A2 P Q) by Cop.",
            "VernacExtend",
            "e6975fd5d5fa84db646e67f52a881d7d25eef956"
        ],
        [
            "assert (Coplanar B1 B2 P Q) by Cop.",
            "VernacExtend",
            "dcb578066fd1a97f1507cb03776310a6f31c1447"
        ],
        [
            "elim(col_dec P Q B1).",
            "VernacExtend",
            "b5d4e81a29cb0a94d01aa6adacbce079f41666bb"
        ],
        [
            "2: intro; apply (cop_not_par_same_side _ _ _ _ P); Col.",
            "VernacExtend",
            "3106a5e68fded75ffde5e6df84ddd319d756ee02"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HB3 := cop_not_par_same_side P Q B2 B1 P C1).",
            "VernacExtend",
            "594642ecdbcd80821537e29e4481c04a0445ec00"
        ],
        [
            "destruct HB3 as [B3 []]; Col.",
            "VernacExtend",
            "8558fd7ed8bde1d5783f463c111762631599666f"
        ],
        [
            "intro; assert(Col B1 B2 Q); Col; ColR.",
            "VernacExtend",
            "bd2314d5e25599aaccc5f1accd2707c77f22976c"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "exists B3; split; Col.",
            "VernacExtend",
            "54ec1a02c24ac4b1626e69af4af786e0f562b913"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HB3 as [B3 []].",
            "VernacExtend",
            "2ea5a3d648060b4b027f2ec5fbfbc09f8d534bf5"
        ],
        [
            "assert(HB4 := symmetric_point_construction B3 P).",
            "VernacExtend",
            "9f0ef5b37556d6a8bca4d4cb302878d5f5a00880"
        ],
        [
            "destruct HB4 as [B4].",
            "VernacExtend",
            "1699d889bb68abe71cb9684c54093bae57e77f7f"
        ],
        [
            "assert(~ Col P Q B3) by (apply (one_side_not_col123 _ _ _ C1); Side).",
            "VernacExtend",
            "c89c403ba20b09910907fce3ec5af3bac30f8269"
        ],
        [
            "assert(HA3 : exists A3, Col A1 A2 A3 /\\ OS P Q C1 A3).",
            "VernacExtend",
            "633c907a677f81e99171f20cb8583b56f6dacf41"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Coplanar A1 A2 P B1) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "6507e82f78787aee735a5e50a18dd39b6a62812f"
        ],
        [
            "assert (Coplanar A1 A2 P B2) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "79f03443d708c816e1f85a22a67fb087376b471c"
        ],
        [
            "assert (Coplanar A1 A2 C1 C2) by (apply pars__coplanar; auto).",
            "VernacExtend",
            "ae49bfe9714238cf5301c3aadcc99fe23d47301e"
        ],
        [
            "assert (Coplanar A1 A2 P C1) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "e9babcb439ecdc66d38afbeb5336b24632e17349"
        ],
        [
            "assert (Coplanar A1 A2 P C2) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "519d7ca22099b7a58839249d42d7b10f94f123e5"
        ],
        [
            "assert (Coplanar A1 A2 P Q) by Cop.",
            "VernacExtend",
            "e6975fd5d5fa84db646e67f52a881d7d25eef956"
        ],
        [
            "assert (Coplanar B1 B2 P Q) by Cop.",
            "VernacExtend",
            "dcb578066fd1a97f1507cb03776310a6f31c1447"
        ],
        [
            "elim(col_dec P Q A1).",
            "VernacExtend",
            "be886565dc9d016f6d66b5ffa854f6243b8971b5"
        ],
        [
            "2: intro; apply (cop_not_par_same_side _ _ _ _ Q); Col.",
            "VernacExtend",
            "2ddecc34f1299523c59a441fe3a0cad0381a83e7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert(HA3 := cop_not_par_same_side P Q A2 A1 Q C1).",
            "VernacExtend",
            "a58c96e8b14a5282fc85bd932706efc3050b9f30"
        ],
        [
            "destruct HA3 as [A3 []]; Col.",
            "VernacExtend",
            "d091cd0dd756bd72029c157ad5509a895fb6ce2f"
        ],
        [
            "intro; apply HStrict; ColR.",
            "VernacExtend",
            "c441111fe39f8d34fe533bc81d036830c69d1a1b"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "exists A3; split; Col.",
            "VernacExtend",
            "ec9ff7d218091fd6002aae20f5117db69e27e042"
        ],
        [
            "CopR.",
            "VernacExtend",
            "7b1654670373807fcd176fc85962d78f62c8c69b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HA3 as [A3 []].",
            "VernacExtend",
            "bd6ac8374b3655f3ef3d24314338741aaaa8d5d3"
        ],
        [
            "assert(~ Col P Q A3) by (apply (one_side_not_col123 _ _ _ C1); Side).",
            "VernacExtend",
            "0ee9433a3e7bb21cc089ca5cfa3a854c824ccec5"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HInAngle : InAngle C1 Q P B3).",
            "VernacExtend",
            "db4d26648770db7123ca5879741858c15fa3bbbb"
        ],
        [
            "apply os2__inangle; Side; apply (col2_os__os B1 B2); Col.",
            "VernacExtend",
            "252222027269962262ca09ed3c3d725c7d74cc9b"
        ],
        [
            "assert(LtA B3 P C1 B3 P Q).",
            "VernacExtend",
            "a26959a3d886611a9cbff805a17c0b5334e5d2a3"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists C1; split; try (apply l11_24); CongA.",
            "VernacExtend",
            "255bc6e9002d12c5e4e1ad8e21d855cce892db3d"
        ],
        [
            "intro HConga.",
            "VernacExtend",
            "eceae29380bb0709d9de139a3e86565e7b2d62a3"
        ],
        [
            "apply conga_cop__or_out_ts in HConga.",
            "VernacExtend",
            "182de38160d3b98452049d6d273507dee25cfa78"
        ],
        [
            "destruct HConga as [Habs|Habs].",
            "VernacExtend",
            "e089cabc4931145dd58fb132dc4b3c5d4806e50b"
        ],
        [
            "assert_cols; Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "apply l9_9 in Habs.",
            "VernacExtend",
            "4395662865441788c3efe309a4495f63e539ec6e"
        ],
        [
            "apply Habs.",
            "VernacExtend",
            "50c6517b7b2948658a6294e812c8a67cddbfbe7c"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "apply (col2_os__os B1 B2); Col.",
            "VernacExtend",
            "9f178814ce3a44f47a2a2c6a77f96b27274caee5"
        ],
        [
            "assert (Coplanar A1 A2 P B1) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "6507e82f78787aee735a5e50a18dd39b6a62812f"
        ],
        [
            "assert (Coplanar A1 A2 P B2) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "79f03443d708c816e1f85a22a67fb087376b471c"
        ],
        [
            "assert (Coplanar A1 A2 C1 C2) by (apply pars__coplanar; auto).",
            "VernacExtend",
            "ae49bfe9714238cf5301c3aadcc99fe23d47301e"
        ],
        [
            "assert (Coplanar A1 A2 P C1) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "e9babcb439ecdc66d38afbeb5336b24632e17349"
        ],
        [
            "assert (Coplanar A1 A2 P C2) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "519d7ca22099b7a58839249d42d7b10f94f123e5"
        ],
        [
            "assert (Coplanar A1 A2 P Q) by Cop.",
            "VernacExtend",
            "e6975fd5d5fa84db646e67f52a881d7d25eef956"
        ],
        [
            "assert (Coplanar B1 B2 P Q) by Cop.",
            "VernacExtend",
            "dcb578066fd1a97f1507cb03776310a6f31c1447"
        ],
        [
            "apply coplanar_perm_16, col2_cop__cop with B1 B2; Col; CopR.",
            "VernacExtend",
            "dccdc381016609e362b3b42843744a9a73ddea5f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Acute B3 P C1).",
            "VernacExtend",
            "ec58e5bcdfd3218fcaa7cee66d30891519531890"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B3.",
            "VernacExtend",
            "fe903a7b7954068c1e30ab31c0b0ac45726c3d1c"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply perp_per_2; auto.",
            "VernacExtend",
            "ce73316dda57149f341db74d2f4483c17f80ce14"
        ],
        [
            "apply (perp_col2 B1 B2); Col.",
            "VernacExtend",
            "1703e6d5124a735fe565c3ecc10b8deafe6d0003"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HR:= greenberg P Q A3 B3 P C1).",
            "VernacExtend",
            "84dfd72d32cfd57db4dc445ff90a130be6d41e5b"
        ],
        [
            "destruct HR as [R []]; auto.",
            "VernacExtend",
            "12ff714772e12806a82e218cbb09fa098c2578d7"
        ],
        [
            "intro; assert_cols; apply HC1NotB; ColR.",
            "VernacExtend",
            "5f43b4ec34e4fe3cf6a610e48ce067343c2469bd"
        ],
        [
            "apply perp_per_1; auto; apply (perp_col2_bis _ _ _ _ A1 A2); Perp; ColR.",
            "VernacExtend",
            "70bb3b221edc7256463c205af7cc99a8686aeb7d"
        ],
        [
            "assert(P<>R) by (intro; subst R; assert_cols; Col).",
            "VernacExtend",
            "699cb19086f0e6f7b634cdd19b9f2359cdbf3690"
        ],
        [
            "assert(OS P Q R A3) by (apply invert_one_side; apply out_one_side; Col).",
            "VernacExtend",
            "afb7ea8dfc1211692742048a988bb50ca8a1ff8a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(OS P C1 R Q).",
            "VernacExtend",
            "458dc3bc993615f92b595d5bdf12a6b9b1952b43"
        ],
        [
            "apply l12_6; apply (par_strict_col4__par_strict C1 C2 A1 A2); Col; Par; ColR.",
            "VernacExtend",
            "eafebb3d567181eae34b5a590dbe99b7fa0d4b6d"
        ],
        [
            "assert(Hsuma1 := ex_suma B4 P R P R Q).",
            "VernacExtend",
            "5dc592e8bae7caa8268a8de902c84c223e3dfeec"
        ],
        [
            "destruct Hsuma1 as [A [B [C Hsuma1]]]; auto.",
            "VernacExtend",
            "1b7ac51fe2ca5240014a8b26847f3f1032d209a1"
        ],
        [
            "assert(Htri : TriSumA R Q P A B C).",
            "VernacExtend",
            "8bf7885f9720ba76090b1c98db386d9aee2bb9b7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists B4.",
            "VernacExtend",
            "15a1118622613c9cac19ca0d658e87d61da572f8"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "exists R.",
            "VernacExtend",
            "6be16195e61cf6042a202f52c388c0dc69db4ce9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (conga3_suma__suma B4 P Q Q P R B4 P R); try (apply conga_refl; auto).",
            "VernacExtend",
            "a37f4e2028626fbdf021520a97eb482e5a0a2308"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists R.",
            "VernacExtend",
            "6be16195e61cf6042a202f52c388c0dc69db4ce9"
        ],
        [
            "repeat (split; CongA).",
            "VernacExtend",
            "006de4386a8a98f40359e65232525963a6158a92"
        ],
        [
            "apply l9_9.",
            "VernacExtend",
            "34ba4dbe01ab43e518f21b6fe3a2bcb607bf609c"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply (l9_8_2 _ _ B3).",
            "VernacExtend",
            "e6adbac0dd2db55db48502ee067078b7cdc5b3a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro; assert(Col P Q B3); Col; ColR.",
            "VernacExtend",
            "e6ba186f79ab3e9d3d8af65f98f5b7d41eaebde3"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split; Col; Between.",
            "VernacExtend",
            "e86ac9d8ea65eac9435668a5e919a638ea212d43"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (one_side_transitivity _ _ _ A3); Side.",
            "VernacExtend",
            "b613a50b38ad575507f3b7dcf6b369b2deb86651"
        ],
        [
            "apply (one_side_transitivity _ _ _ C1); Side.",
            "VernacExtend",
            "9b86a0069efb190f47be48bf424d5d923c778f14"
        ],
        [
            "assert (Coplanar P Q R C1) by (apply os__coplanar, one_side_transitivity with A3; Side).",
            "VernacExtend",
            "1bae3a6c913b0527fa0557d537f8731957146602"
        ],
        [
            "assert (Coplanar A1 A2 P B1) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "6507e82f78787aee735a5e50a18dd39b6a62812f"
        ],
        [
            "assert (Coplanar A1 A2 P B2) by (apply col2_cop__cop with B1 B2; Col; Cop).",
            "VernacExtend",
            "79f03443d708c816e1f85a22a67fb087376b471c"
        ],
        [
            "assert (Coplanar A1 A2 C1 C2) by (apply pars__coplanar; auto).",
            "VernacExtend",
            "ae49bfe9714238cf5301c3aadcc99fe23d47301e"
        ],
        [
            "assert (Coplanar A1 A2 P C1) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "e9babcb439ecdc66d38afbeb5336b24632e17349"
        ],
        [
            "assert (Coplanar A1 A2 P C2) by (apply col2_cop__cop with C1 C2; Col; Cop).",
            "VernacExtend",
            "519d7ca22099b7a58839249d42d7b10f94f123e5"
        ],
        [
            "assert (Coplanar A1 A2 P Q) by Cop.",
            "VernacExtend",
            "e6975fd5d5fa84db646e67f52a881d7d25eef956"
        ],
        [
            "assert (Coplanar B1 B2 P Q) by Cop.",
            "VernacExtend",
            "dcb578066fd1a97f1507cb03776310a6f31c1447"
        ],
        [
            "apply coplanar_perm_16.",
            "VernacExtend",
            "22da60fbc52cb05f1aed1508726aaf2287d875fe"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ (perp_sym _ _ _ _ HPerpBP)); intro; [apply col2_cop__cop with P B1|apply col2_cop__cop with P B2]; assert_diffs; Col; try ColR; CopR.",
            "VernacExtend",
            "1088dfb87e951a3657151e1e7f1c19511fa01bad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l11_16; auto.",
            "VernacExtend",
            "f55656560cb5b4267b2671cabb23ed36e27b289e"
        ],
        [
            "apply perp_per_2; auto; apply (perp_col2 B1 B2); Col; ColR.",
            "VernacExtend",
            "14fde3ef9a017fecceba9a6d3752906007a57f8e"
        ],
        [
            "apply perp_per_1; auto; apply (perp_col2 A1 A2); Col; ColR.",
            "VernacExtend",
            "2a8371c124b61d55f8cc7fb7f402e99c99e70c7d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Hsuma2 := ex_suma B4 P R C1 P B3).",
            "VernacExtend",
            "a281e9b0c83c9d4ce1d7120c7b93a8c3fdbb6084"
        ],
        [
            "destruct Hsuma2 as [D [E [F Hsuma2]]]; auto.",
            "VernacExtend",
            "4d401c4ca08b3fd2c45c7b58eba4e8a75f79996d"
        ],
        [
            "assert(~ Col R P B4).",
            "VernacExtend",
            "ca1c74e0af1790cb79067da42deee524f1808609"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (par_not_col A1 A2); auto.",
            "VernacExtend",
            "37a6d0be3e61fbf88824c84cf1dc26a443c098f6"
        ],
        [
            "apply (par_strict_col2_par_strict _ _ B1 B2); auto; ColR.",
            "VernacExtend",
            "d3e76ec27d787b891069db3fe855505d9633503a"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(~ OS P R B4 B3).",
            "VernacExtend",
            "3cb47a8f798250999cb25bd0bffae5a62b8e6f32"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l9_9.",
            "VernacExtend",
            "34ba4dbe01ab43e518f21b6fe3a2bcb607bf609c"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "intro; assert(Col R P B4); Col; ColR.",
            "VernacExtend",
            "63e8aa2d3f190716a9d8fc0a2fdb5b62b8a1159c"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split; Col; Between.",
            "VernacExtend",
            "e86ac9d8ea65eac9435668a5e919a638ea212d43"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Hsuma3 : SumA B4 P R R P B3 B4 P B3) by (exists B3; repeat (split; CongA); Cop).",
            "VernacExtend",
            "060ad98c6bca0ffe5b6cc478ef7e7e611a749871"
        ],
        [
            "assert(Hsams3 : SAMS B4 P R R P B3).",
            "VernacExtend",
            "86f45b25d0ee5cccd64f0530241130131b35b0f2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "right; intro; assert_cols; Col.",
            "VernacExtend",
            "0d49498a1bdd26f8657f75387bec469f59503735"
        ],
        [
            "exists B3; repeat (split; CongA); Cop.",
            "VernacExtend",
            "1f38effbb563f1bd334bf78af86fe89b40a3dbee"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "destruct Habs as [_ [Habs]].",
            "VernacExtend",
            "285d9154f69a1d6dd1be970845ddcfbd43a4f207"
        ],
        [
            "assert_cols; Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(LeA C1 P B3 R P B3).",
            "VernacExtend",
            "2899d920c416b4b832738a7b3d4e9c64f0d838b2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "split; CongA.",
            "VernacExtend",
            "f1940d5b20061dd2e7fa58c66bc8e0fa54c8db24"
        ],
        [
            "apply os_ts__inangle.",
            "VernacExtend",
            "822564770c8073d1ed68ee0caf3438f69841968b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "apply (l9_8_2 _ _ Q); Side.",
            "VernacExtend",
            "cc139cb6c949e722ba1045b84b240cc70c613941"
        ],
        [
            "apply invert_two_sides; apply in_angle_two_sides; Col.",
            "VernacExtend",
            "f74b881d249288e7a2f9a2b0fdc4e2d55c97c845"
        ],
        [
            "intro; apply HC1NotB; ColR.",
            "VernacExtend",
            "9a5e749635132fe1b194ef4f480a8ba124494a1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (one_side_transitivity _ _ _ Q); apply (col2_os__os B1 B2); Col.",
            "VernacExtend",
            "3504810609fcac3d057c801229a5fe8f13701f17"
        ],
        [
            "apply l12_6.",
            "VernacExtend",
            "c0d0336f1c22c26db46a4e28dbcac4182527f3a2"
        ],
        [
            "apply (par_strict_col2_par_strict _ _ A1 A2); Col; Par.",
            "VernacExtend",
            "1d179ee5e2592bb46be1f5edc96e2d25dcd6c79c"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(Habs : LtA A B C B4 P B3).",
            "VernacExtend",
            "e2a3228b505c755b065c1bfcc0192d0bf8753a49"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (lea456789_lta__lta _ _ _ D E F).",
            "VernacExtend",
            "43394a1a071cd6a8426fce66e09fc97fc4d2ee7c"
        ],
        [
            "2: apply (sams_lea2_suma2__lea B4 P R C1 P B3 _ _ _ B4 P R R P B3); Lea.",
            "VernacExtend",
            "e3530333ea1e18ceab6768fe530e27ca7c02fe5a"
        ],
        [
            "apply (sams_lea_lta456_suma2__lta B4 P R P R Q _ _ _ B4 P R C1 P B3); Lea.",
            "VernacExtend",
            "31cdc51df26e61a3b58d80528656b19a1cd6f4aa"
        ],
        [
            "apply lta_right_comm; auto.",
            "VernacExtend",
            "cb86294eeeb1f6442a54513746f2f378ac3b31bd"
        ],
        [
            "apply (sams_lea2__sams _ _ _ _ _ _ B4 P R R P B3); Lea.",
            "VernacExtend",
            "d5637a06c6735488a923a74a7b2d89f614e85ccd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Habs as [_ Habs].",
            "VernacExtend",
            "88e3d050669ea5ccdb72bf177f431029d003775a"
        ],
        [
            "apply Habs.",
            "VernacExtend",
            "50c6517b7b2948658a6294e812c8a67cddbfbe7c"
        ],
        [
            "apply suma_distincts in Hsuma1.",
            "VernacExtend",
            "7d5b4ad46e51b24b2b9f09f5c9bf295f828fd961"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply conga_line; Between.",
            "VernacExtend",
            "4147f32d0c463d889b951f5e126cf5519e28a4dd"
        ],
        [
            "apply (triangle R Q P); auto.",
            "VernacExtend",
            "de025fb2195057d49c79bc445dd5fc60517d10dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma legendre_aux2 : greenberg_s_axiom -> triangle_postulate -> forall A1 A2 B1 B2 C1 C2 P, Perp2 A1 A2 B1 B2 P -> ~ Col A1 A2 P -> Col P B1 B2 -> Coplanar A1 A2 B1 B2 -> Par A1 A2 C1 C2 -> Col P C1 C2 -> Col C1 B1 B2.",
            "VernacStartTheoremProof",
            "d2dcd355d55a228ee5184e7072d4110aeb064322"
        ],
        [
            "intros greenberg triangle.",
            "VernacExtend",
            "9cd57ec0b1caf460a48fb5112d41577ad3b6ebb2"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 P HPerp2 HNC HPB HCop HParAC HPC.",
            "VernacExtend",
            "7f3c85b64db9ce6f48a779c045f2b7fa9c02aae7"
        ],
        [
            "assert(HParAB : Par A1 A2 B1 B2).",
            "VernacExtend",
            "50c1dcd5c2ff54d703e2183bef493d374a9eefd4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (Par_strict A1 A2 B1 B2); [|Par].",
            "VernacExtend",
            "658f2a6cabb0fcdb3ced36792e5cba3ee63b29bc"
        ],
        [
            "apply (par_not_col_strict _ _ _ _ P); Col.",
            "VernacExtend",
            "b0c685ba16094fc335618944d9738faa90ca87d4"
        ],
        [
            "apply par_symmetry.",
            "VernacExtend",
            "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
        ],
        [
            "destruct HPerp2 as [X [Y [HCol1 [HPerp1 HPerp2]]]].",
            "VernacExtend",
            "23980ab03bbe34e018faa2532adadcfa521f7e8d"
        ],
        [
            "assert (HI1 := HPerp1); assert (HI2 := HPerp2).",
            "VernacExtend",
            "0ca0deb88c40dd77fbe6d87961682becfe2da921"
        ],
        [
            "destruct HI1 as [I1 H1]; destruct HI2 as [I2 H2].",
            "VernacExtend",
            "00bf122556990564b466d23127a26574953d60ab"
        ],
        [
            "apply perp_in_col in H1; apply perp_in_col in H2.",
            "VernacExtend",
            "e1e13b29ace5198b94a104d651c35bf523f988b5"
        ],
        [
            "destruct H1 as [HCol2 HCol3]; destruct H2 as [HCol4 HCol5].",
            "VernacExtend",
            "9cdc2c20e831e0bdee0172ea42a8c225be66475d"
        ],
        [
            "assert (P = I2); [|treat_equalities; rename I1 into R].",
            "VernacExtend",
            "1fbc2c2326ae27d797efc6044825a8b14836e9e5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "elim (perp_not_col2 _ _ _ _ (perp_sym _ _ _ _ HPerp2)); intro; [apply l6_21 with B1 B2 X Y|apply l6_21 with B1 B2 Y X]; assert_diffs; Col.",
            "VernacExtend",
            "417aa434b216f4996bb70d1f41dcda00b66d5ed6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim (eq_dec_points P R); intro HNE; treat_equalities; [exfalso; Col|].",
            "VernacExtend",
            "de8b188a936669e05fe88bdbd7aed62ff033a267"
        ],
        [
            "apply (l12_9 _ _ _ _ X Y); Perp; apply coplanar_perm_16; apply col2_cop__cop with P R; try solve [assert_diffs; ColR]; apply coplanar_perm_2; [apply col_cop__cop with A2|apply col_cop__cop with A1| apply col_cop__cop with A2|apply col_cop__cop with A1]; Col; try solve [assert_diffs; auto]; apply coplanar_perm_16; [apply col_cop__cop with B2|apply col_cop__cop with B2| apply col_cop__cop with B1|apply col_cop__cop with B1]; assert_diffs; Col; Cop.",
            "VernacExtend",
            "8b0a80b471b510443f2d2fbab00e6acae5214183"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "elim(col_dec P A1 A2).",
            "VernacExtend",
            "c32a003e21302937ce08d0fe1371d28be6fa3252"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HConf.",
            "VernacExtend",
            "de7e47b96e863ab7ec905eef72dc158fa5e6ea06"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HParAB; Col.",
            "VernacExtend",
            "629f66583fc7881236c49ee685040845c98084dd"
        ],
        [
            "apply (not_strict_par _ _ _ _ P) in HParAC; Col.",
            "VernacExtend",
            "1b5562344a6cf5204bb4807241a1902bb21f7a04"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply(col3 A1 A2); auto.",
            "VernacExtend",
            "b26df8b0286a874edb4185a595a1164eecdeacde"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HStrict.",
            "VernacExtend",
            "d0690c8e2adead28211c41a3cd7127aee48bec96"
        ],
        [
            "elim(two_sides_dec B1 B2 A1 C1).",
            "VernacExtend",
            "3d62ddc76e17b97cd5364f18623515411970dbdc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro Hts.",
            "VernacExtend",
            "ea07a65e4d996b2230d342211a09b59edf626dd6"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert(HC1NotB : ~ Col C1 B1 B2) by (destruct Hts as [_ []]; auto).",
            "VernacExtend",
            "0d9e30b0dbcb6a41bdd2c336d45e52dfe0c26864"
        ],
        [
            "assert(C1<>P) by (intro; subst C1; Col).",
            "VernacExtend",
            "0ae07f83b3b0c1e71415c3c1890b3d559dd815a0"
        ],
        [
            "assert(HC3 := (symmetric_point_construction C1 P)).",
            "VernacExtend",
            "c5916bbae078aa2299968c88d866878cae74fc7f"
        ],
        [
            "destruct HC3 as [C3].",
            "VernacExtend",
            "9b2c658677e7bde63379ea7fe9c61c457204c100"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert(HC3NotB : ~ Col C3 B1 B2) by (intro; apply HC1NotB; ColR).",
            "VernacExtend",
            "70f12d6e20d79ea3ceb2cedad7b1110b0a8e8413"
        ],
        [
            "apply HC3NotB.",
            "VernacExtend",
            "8487b6e02ea5d779a75f29ffae8590521da3fe84"
        ],
        [
            "apply (legendre_aux1 greenberg triangle A1 A2 _ _ _ C1 P); Col.",
            "VernacExtend",
            "435631017b942ebcce587f6206d0276102ff29f8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply par_right_comm.",
            "VernacExtend",
            "abcb445c72d51a2b7a6af88c5b139a8f9d39ae53"
        ],
        [
            "apply (par_col_par _ _ _ P); Col.",
            "VernacExtend",
            "26ea5d423d085f12f03d508d979679fbaabd8050"
        ],
        [
            "apply (par_col_par _ _ _ C2); Col.",
            "VernacExtend",
            "e46e848de62afb35a0c1a1a289b45d0e5178af00"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l9_9_bis.",
            "VernacExtend",
            "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
        ],
        [
            "exists C1.",
            "VernacExtend",
            "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
        ],
        [
            "repeat (split; auto).",
            "VernacExtend",
            "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split; Between.",
            "VernacExtend",
            "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (legendre_aux1 greenberg triangle A1 A2 _ _ _ C2 P); auto.",
            "VernacExtend",
            "c93880fb1522e247a0d71bedce870b24c89b63af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triangle__playfair_bis : greenberg_s_axiom -> triangle_postulate -> alternative_playfair_s_postulate.",
            "VernacStartTheoremProof",
            "51cdda8f022a50c8f2e5951d53ba132d0b820262"
        ],
        [
            "intros greenberg triangle.",
            "VernacExtend",
            "9cd57ec0b1caf460a48fb5112d41577ad3b6ebb2"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 P.",
            "VernacExtend",
            "d1bb9646100df2f6ed0e6921dc9f9950679d1d32"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (legendre_aux2 greenberg triangle A1 A2 _ _ _ C2 P); auto.",
            "VernacExtend",
            "963743c9f33b89867608ccb4615cde8a088ac975"
        ],
        [
            "apply (legendre_aux2 greenberg triangle A1 A2 _ _ _ C1 P); Par; Col.",
            "VernacExtend",
            "4ac2b0b8b60f5a982625b17c9d1f764f9e7d8735"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End triangle_playfair_bis.",
            "VernacEndSegment",
            "39d8f7ff06a9489151f0ff20f2568626489c36d6"
        ]
    ],
    "proofs": [
        {
            "name": "legendre_aux2",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros greenberg triangle.",
                        "VernacExtend",
                        "9cd57ec0b1caf460a48fb5112d41577ad3b6ebb2"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 P HPerp2 HNC HPB HCop HParAC HPC.",
                        "VernacExtend",
                        "7f3c85b64db9ce6f48a779c045f2b7fa9c02aae7"
                    ]
                },
                {
                    "command": [
                        "assert(HParAB : Par A1 A2 B1 B2).",
                        "VernacExtend",
                        "50c1dcd5c2ff54d703e2183bef493d374a9eefd4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (Par_strict A1 A2 B1 B2); [|Par].",
                        "VernacExtend",
                        "658f2a6cabb0fcdb3ced36792e5cba3ee63b29bc"
                    ]
                },
                {
                    "command": [
                        "apply (par_not_col_strict _ _ _ _ P); Col.",
                        "VernacExtend",
                        "b0c685ba16094fc335618944d9738faa90ca87d4"
                    ]
                },
                {
                    "command": [
                        "apply par_symmetry.",
                        "VernacExtend",
                        "4d21b73127c23e34c10e80aaca8f5d1bf288407e"
                    ]
                },
                {
                    "command": [
                        "destruct HPerp2 as [X [Y [HCol1 [HPerp1 HPerp2]]]].",
                        "VernacExtend",
                        "23980ab03bbe34e018faa2532adadcfa521f7e8d"
                    ]
                },
                {
                    "command": [
                        "assert (HI1 := HPerp1); assert (HI2 := HPerp2).",
                        "VernacExtend",
                        "0ca0deb88c40dd77fbe6d87961682becfe2da921"
                    ]
                },
                {
                    "command": [
                        "destruct HI1 as [I1 H1]; destruct HI2 as [I2 H2].",
                        "VernacExtend",
                        "00bf122556990564b466d23127a26574953d60ab"
                    ]
                },
                {
                    "command": [
                        "apply perp_in_col in H1; apply perp_in_col in H2.",
                        "VernacExtend",
                        "e1e13b29ace5198b94a104d651c35bf523f988b5"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [HCol2 HCol3]; destruct H2 as [HCol4 HCol5].",
                        "VernacExtend",
                        "9cdc2c20e831e0bdee0172ea42a8c225be66475d"
                    ]
                },
                {
                    "command": [
                        "assert (P = I2); [|treat_equalities; rename I1 into R].",
                        "VernacExtend",
                        "1fbc2c2326ae27d797efc6044825a8b14836e9e5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "elim (perp_not_col2 _ _ _ _ (perp_sym _ _ _ _ HPerp2)); intro; [apply l6_21 with B1 B2 X Y|apply l6_21 with B1 B2 Y X]; assert_diffs; Col.",
                        "VernacExtend",
                        "417aa434b216f4996bb70d1f41dcda00b66d5ed6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points P R); intro HNE; treat_equalities; [exfalso; Col|].",
                        "VernacExtend",
                        "de8b188a936669e05fe88bdbd7aed62ff033a267"
                    ]
                },
                {
                    "command": [
                        "apply (l12_9 _ _ _ _ X Y); Perp; apply coplanar_perm_16; apply col2_cop__cop with P R; try solve [assert_diffs; ColR]; apply coplanar_perm_2; [apply col_cop__cop with A2|apply col_cop__cop with A1| apply col_cop__cop with A2|apply col_cop__cop with A1]; Col; try solve [assert_diffs; auto]; apply coplanar_perm_16; [apply col_cop__cop with B2|apply col_cop__cop with B2| apply col_cop__cop with B1|apply col_cop__cop with B1]; assert_diffs; Col; Cop.",
                        "VernacExtend",
                        "8b0a80b471b510443f2d2fbab00e6acae5214183"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "elim(col_dec P A1 A2).",
                        "VernacExtend",
                        "c32a003e21302937ce08d0fe1371d28be6fa3252"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HConf.",
                        "VernacExtend",
                        "de7e47b96e863ab7ec905eef72dc158fa5e6ea06"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HParAB; Col.",
                        "VernacExtend",
                        "629f66583fc7881236c49ee685040845c98084dd"
                    ]
                },
                {
                    "command": [
                        "apply (not_strict_par _ _ _ _ P) in HParAC; Col.",
                        "VernacExtend",
                        "1b5562344a6cf5204bb4807241a1902bb21f7a04"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply(col3 A1 A2); auto.",
                        "VernacExtend",
                        "b26df8b0286a874edb4185a595a1164eecdeacde"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HStrict.",
                        "VernacExtend",
                        "d0690c8e2adead28211c41a3cd7127aee48bec96"
                    ]
                },
                {
                    "command": [
                        "elim(two_sides_dec B1 B2 A1 C1).",
                        "VernacExtend",
                        "3d62ddc76e17b97cd5364f18623515411970dbdc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro Hts.",
                        "VernacExtend",
                        "ea07a65e4d996b2230d342211a09b59edf626dd6"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert(HC1NotB : ~ Col C1 B1 B2) by (destruct Hts as [_ []]; auto).",
                        "VernacExtend",
                        "0d9e30b0dbcb6a41bdd2c336d45e52dfe0c26864"
                    ]
                },
                {
                    "command": [
                        "assert(C1<>P) by (intro; subst C1; Col).",
                        "VernacExtend",
                        "0ae07f83b3b0c1e71415c3c1890b3d559dd815a0"
                    ]
                },
                {
                    "command": [
                        "assert(HC3 := (symmetric_point_construction C1 P)).",
                        "VernacExtend",
                        "c5916bbae078aa2299968c88d866878cae74fc7f"
                    ]
                },
                {
                    "command": [
                        "destruct HC3 as [C3].",
                        "VernacExtend",
                        "9b2c658677e7bde63379ea7fe9c61c457204c100"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert(HC3NotB : ~ Col C3 B1 B2) by (intro; apply HC1NotB; ColR).",
                        "VernacExtend",
                        "70f12d6e20d79ea3ceb2cedad7b1110b0a8e8413"
                    ]
                },
                {
                    "command": [
                        "apply HC3NotB.",
                        "VernacExtend",
                        "8487b6e02ea5d779a75f29ffae8590521da3fe84"
                    ]
                },
                {
                    "command": [
                        "apply (legendre_aux1 greenberg triangle A1 A2 _ _ _ C1 P); Col.",
                        "VernacExtend",
                        "435631017b942ebcce587f6206d0276102ff29f8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply par_right_comm.",
                        "VernacExtend",
                        "abcb445c72d51a2b7a6af88c5b139a8f9d39ae53"
                    ]
                },
                {
                    "command": [
                        "apply (par_col_par _ _ _ P); Col.",
                        "VernacExtend",
                        "26ea5d423d085f12f03d508d979679fbaabd8050"
                    ]
                },
                {
                    "command": [
                        "apply (par_col_par _ _ _ C2); Col.",
                        "VernacExtend",
                        "e46e848de62afb35a0c1a1a289b45d0e5178af00"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l9_9_bis.",
                        "VernacExtend",
                        "e78b3dd8a641e3c3a564db1eb086d4adb4c9caab"
                    ]
                },
                {
                    "command": [
                        "exists C1.",
                        "VernacExtend",
                        "6b3e31ba68ca68fab316e7788b99a3a5566fdfbf"
                    ]
                },
                {
                    "command": [
                        "repeat (split; auto).",
                        "VernacExtend",
                        "fbc5463ee8164c7d7a0414a82c6ea4aa4f8c6b04"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "split; Between.",
                        "VernacExtend",
                        "4159a0cd017baa789638a654e86c0bfb8f4fcb11"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply (legendre_aux1 greenberg triangle A1 A2 _ _ _ C2 P); auto.",
                        "VernacExtend",
                        "c93880fb1522e247a0d71bedce870b24c89b63af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triangle__playfair_bis",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros greenberg triangle.",
                        "VernacExtend",
                        "9cd57ec0b1caf460a48fb5112d41577ad3b6ebb2"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 P.",
                        "VernacExtend",
                        "d1bb9646100df2f6ed0e6921dc9f9950679d1d32"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (legendre_aux2 greenberg triangle A1 A2 _ _ _ C2 P); auto.",
                        "VernacExtend",
                        "963743c9f33b89867608ccb4615cde8a088ac975"
                    ]
                },
                {
                    "command": [
                        "apply (legendre_aux2 greenberg triangle A1 A2 _ _ _ C1 P); Par; Col.",
                        "VernacExtend",
                        "4ac2b0b8b60f5a982625b17c9d1f764f9e7d8735"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}