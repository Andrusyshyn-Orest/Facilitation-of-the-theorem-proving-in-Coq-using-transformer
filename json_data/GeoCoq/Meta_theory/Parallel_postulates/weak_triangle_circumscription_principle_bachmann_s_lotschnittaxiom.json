{
    "filename": "Meta_theory/Parallel_postulates/weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch13_1.",
            "VernacRequire",
            "47dcc16f1dfddcd1d3cb74ef6d75a8d70ab03305"
        ],
        [
            "Section weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.",
            "VernacBeginSection",
            "c6b448f261c695f58184fcf014ab98d1307d7e47"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom : weak_triangle_circumscription_principle -> bachmann_s_lotschnittaxiom.",
            "VernacStartTheoremProof",
            "f05250974250ea57c4c5a1e9582c17f175c7cc25"
        ],
        [
            "intro HP.",
            "VernacExtend",
            "6862bd7ae05de72632887e57f731f07f22fd6080"
        ],
        [
            "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
            "VernacExtend",
            "eeceb336b5f61452b510e071123981b174b278b1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.",
            "VernacExtend",
            "1ccb18e3a8accc8c56a1d4d9f53bdc9b1f776d85"
        ],
        [
            "destruct (eq_dec_points P P1).",
            "VernacExtend",
            "99a1e4df503113bcf8eaf26aca0bf98a2124c883"
        ],
        [
            "subst; exists R; Col.",
            "VernacExtend",
            "8a1727ad94cc74a1049150bf00549453890432bf"
        ],
        [
            "destruct (eq_dec_points R R1).",
            "VernacExtend",
            "6bb218a3fef4e1ffe2fd1fba2abc0a1a655c5ea9"
        ],
        [
            "subst; exists P; Col.",
            "VernacExtend",
            "870e7bea814c636bb1b36096d57b80212a4b6da8"
        ],
        [
            "assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).",
            "VernacExtend",
            "06a77aa3cefe1a6833178279ed140e40e300052b"
        ],
        [
            "destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.",
            "VernacExtend",
            "71e346f2aec1da13a05f05e0eab18ee8cf65e884"
        ],
        [
            "exists S; auto.",
            "VernacExtend",
            "e98c2727e2c2387d5f68f2cfb7d45bec552d4aec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.",
            "VernacExtend",
            "c110789d4141b2153fdb3b0f1cbe29f4f32242cb"
        ],
        [
            "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.",
            "VernacExtend",
            "685721601dc6e3376b1b91f6e8a33ab4458b2936"
        ],
        [
            "destruct (symmetric_point_construction IAB IAC) as [E HE].",
            "VernacExtend",
            "941ac035d687f488be40f78028aee6cad495404f"
        ],
        [
            "destruct (symmetric_point_construction IAB IBD) as [F HF].",
            "VernacExtend",
            "b2a69e093bb4efd2b269b144f33b8983bd871dd6"
        ],
        [
            "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
            "VernacExtend",
            "9bec8f0e8521ceca901fae40ac6469ef544062f1"
        ],
        [
            "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
            "VernacExtend",
            "c757a39cfe66960ecef61367b62095979a944db5"
        ],
        [
            "assert (HPerp4 : Perp E IAB IAB F).",
            "VernacExtend",
            "d5786401d175a7736049438166dab540b6cf2416"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert (E <> IAB).",
            "VernacExtend",
            "d2f88a693131bf373edc103ea8677ea9e0b8923f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply HNC; Col.",
            "VernacExtend",
            "dd957572d032bdf33e116c8c1213b4a9c74e1d14"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (IAB <> F).",
            "VernacExtend",
            "4aa3d6b0fafbf55543ee2cbc1a97a3052cc1f68b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities; apply HNC; Col.",
            "VernacExtend",
            "dd957572d032bdf33e116c8c1213b4a9c74e1d14"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply perp_col0 with B1 B2; try (apply perp_col0 with A1 A2); Col; assert_diffs; assert_cols; ColR.",
            "VernacExtend",
            "dbf37a57d745c9fb360344bf2192eed437fdfcbd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Coplanar IAB IAC IBD E) by Cop.",
            "VernacExtend",
            "5413ac22a1273ee5bf58865b878031b06d436c1d"
        ],
        [
            "assert (Coplanar IAB IAC IBD F) by Cop.",
            "VernacExtend",
            "9121032b6a65dcf143a9aacb99a67c1f8804fa9a"
        ],
        [
            "assert (Coplanar E F IAB D1) by CopR.",
            "VernacExtend",
            "3fbab076d6d2ec6a72c55daacb77e4a14e11aaaf"
        ],
        [
            "assert (Coplanar E F IAB D2) by CopR.",
            "VernacExtend",
            "45558fceec8d75b4daa0cc303f7cdab3e0861c63"
        ],
        [
            "assert (Coplanar E F IAB C1) by CopR.",
            "VernacExtend",
            "cca0aadd88288794c2fbf7fc0d9b9f7913c14d63"
        ],
        [
            "assert (Coplanar E F IAB C2) by CopR.",
            "VernacExtend",
            "8da515923d52b876e8b5068a458e51136127e836"
        ],
        [
            "destruct (HP E F IAB D1 D2 C1 C2) as [I [HC7 HC8]]; auto; try (exists I; Col); try (apply not_col_permutation_1; apply perp_not_col); try apply perp_per_1; try solve[assert_diffs; Perp]; split; [|assert_diffs| |assert_diffs]; auto; split; [exists IBD; split; Col| |exists IAC; split; Col|]; left; [apply perp_col0 with B1 B2|apply perp_col0 with A1 A2]; assert_diffs; Col; ColR.",
            "VernacExtend",
            "4ede402429293bcffda68735e8cfa14bd063f388"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End weak_triangle_circumscription_principle_bachmann_s_lotschnittaxiom.",
            "VernacEndSegment",
            "d1b1c17de82f567e204c7124006c69d62f76a59e"
        ]
    ],
    "proofs": [
        {
            "name": "weak_triangle_circumscription_principle__bachmann_s_lotschnittaxiom",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intro HP.",
                        "VernacExtend",
                        "6862bd7ae05de72632887e57f731f07f22fd6080"
                    ]
                },
                {
                    "command": [
                        "cut (forall A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD, Perp A1 A2 B1 B2 -> Perp A1 A2 C1 C2 -> Perp B1 B2 D1 D2 -> Col A1 A2 IAB -> Col B1 B2 IAB -> Col A1 A2 IAC -> Col C1 C2 IAC -> Col B1 B2 IBD -> Col D1 D2 IBD -> Coplanar IAB IAC IBD C1 -> Coplanar IAB IAC IBD C2 -> Coplanar IAB IAC IBD D1 -> Coplanar IAB IAC IBD D2 -> ~ Col IAB IAC IBD -> exists I, Col C1 C2 I /\\ Col D1 D2 I).",
                        "VernacExtend",
                        "eeceb336b5f61452b510e071123981b174b278b1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros lotschnitt P Q R P1 R1 HPQ HQR HPerQ HPerP HPerR HCop1 HCop2.",
                        "VernacExtend",
                        "1ccb18e3a8accc8c56a1d4d9f53bdc9b1f776d85"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points P P1).",
                        "VernacExtend",
                        "99a1e4df503113bcf8eaf26aca0bf98a2124c883"
                    ]
                },
                {
                    "command": [
                        "subst; exists R; Col.",
                        "VernacExtend",
                        "8a1727ad94cc74a1049150bf00549453890432bf"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points R R1).",
                        "VernacExtend",
                        "6bb218a3fef4e1ffe2fd1fba2abc0a1a655c5ea9"
                    ]
                },
                {
                    "command": [
                        "subst; exists P; Col.",
                        "VernacExtend",
                        "870e7bea814c636bb1b36096d57b80212a4b6da8"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col P Q R) by (apply per_not_col; auto).",
                        "VernacExtend",
                        "06a77aa3cefe1a6833178279ed140e40e300052b"
                    ]
                },
                {
                    "command": [
                        "destruct (lotschnitt P Q Q R P P1 R R1 Q P R) as [S [HS1 HS2]]; Col; Perp; Cop.",
                        "VernacExtend",
                        "71e346f2aec1da13a05f05e0eab18ee8cf65e884"
                    ]
                },
                {
                    "command": [
                        "exists S; auto.",
                        "VernacExtend",
                        "e98c2727e2c2387d5f68f2cfb7d45bec552d4aec"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A1 A2 B1 B2 C1 C2 D1 D2 IAB IAC IBD HPerp1 HPerp2 HPerp3.",
                        "VernacExtend",
                        "c110789d4141b2153fdb3b0f1cbe29f4f32242cb"
                    ]
                },
                {
                    "command": [
                        "intros HCol1 HCol2 HCol3 HCol4 HCol5 HCol6 HCop1 HCop2 HCop3 HCop4 HNC.",
                        "VernacExtend",
                        "685721601dc6e3376b1b91f6e8a33ab4458b2936"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction IAB IAC) as [E HE].",
                        "VernacExtend",
                        "941ac035d687f488be40f78028aee6cad495404f"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction IAB IBD) as [F HF].",
                        "VernacExtend",
                        "b2a69e093bb4efd2b269b144f33b8983bd871dd6"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A1) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "9bec8f0e8521ceca901fae40ac6469ef544062f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col IAB IAC A2) by (assert_diffs; ColR).",
                        "VernacExtend",
                        "c757a39cfe66960ecef61367b62095979a944db5"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp4 : Perp E IAB IAB F).",
                        "VernacExtend",
                        "d5786401d175a7736049438166dab540b6cf2416"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert (E <> IAB).",
                        "VernacExtend",
                        "d2f88a693131bf373edc103ea8677ea9e0b8923f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HNC; Col.",
                        "VernacExtend",
                        "dd957572d032bdf33e116c8c1213b4a9c74e1d14"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (IAB <> F).",
                        "VernacExtend",
                        "4aa3d6b0fafbf55543ee2cbc1a97a3052cc1f68b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HNC; Col.",
                        "VernacExtend",
                        "dd957572d032bdf33e116c8c1213b4a9c74e1d14"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply perp_col0 with B1 B2; try (apply perp_col0 with A1 A2); Col; assert_diffs; assert_cols; ColR.",
                        "VernacExtend",
                        "dbf37a57d745c9fb360344bf2192eed437fdfcbd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD E) by Cop.",
                        "VernacExtend",
                        "5413ac22a1273ee5bf58865b878031b06d436c1d"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar IAB IAC IBD F) by Cop.",
                        "VernacExtend",
                        "9121032b6a65dcf143a9aacb99a67c1f8804fa9a"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E F IAB D1) by CopR.",
                        "VernacExtend",
                        "3fbab076d6d2ec6a72c55daacb77e4a14e11aaaf"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E F IAB D2) by CopR.",
                        "VernacExtend",
                        "45558fceec8d75b4daa0cc303f7cdab3e0861c63"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E F IAB C1) by CopR.",
                        "VernacExtend",
                        "cca0aadd88288794c2fbf7fc0d9b9f7913c14d63"
                    ]
                },
                {
                    "command": [
                        "assert (Coplanar E F IAB C2) by CopR.",
                        "VernacExtend",
                        "8da515923d52b876e8b5068a458e51136127e836"
                    ]
                },
                {
                    "command": [
                        "destruct (HP E F IAB D1 D2 C1 C2) as [I [HC7 HC8]]; auto; try (exists I; Col); try (apply not_col_permutation_1; apply perp_not_col); try apply perp_per_1; try solve[assert_diffs; Perp]; split; [|assert_diffs| |assert_diffs]; auto; split; [exists IBD; split; Col| |exists IAC; split; Col|]; left; [apply perp_col0 with B1 B2|apply perp_col0 with A1 A2]; assert_diffs; Col; ColR.",
                        "VernacExtend",
                        "4ede402429293bcffda68735e8cfa14bd063f388"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}