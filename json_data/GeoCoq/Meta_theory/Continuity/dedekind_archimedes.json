{
    "filename": "Meta_theory/Continuity/dedekind_archimedes.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch07_midpoint.",
            "VernacRequire",
            "fe71b15a2aa4a1112f3d450dbaebc127f908fd64"
        ],
        [
            "Section Dedekind_archimedes.",
            "VernacBeginSection",
            "cbe2719cee6ff853733279a014c3276d10e436e2"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma archimedes_aux : (forall A B C, Out A B C -> Reach A B A C) -> archimedes_axiom.",
            "VernacStartTheoremProof",
            "d80c1b0403b54be2fc07194b748b37acf13490a7"
        ],
        [
            "intros Haux A B C D HAB.",
            "VernacExtend",
            "96ae0f1122e263094bc36661b3eec6069a1fac77"
        ],
        [
            "destruct (eq_dec_points C D).",
            "VernacExtend",
            "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
        ],
        [
            "subst; exists B.",
            "VernacExtend",
            "81167d3b7ddb44fabec200b6cad246187b55e438"
        ],
        [
            "split; Le.",
            "VernacExtend",
            "9e7957392f4ee59e6a826cdb295756cd16f8b1b7"
        ],
        [
            "apply grad_init.",
            "VernacExtend",
            "fb84e8461073b25dbe4de06c9273074af06635e8"
        ],
        [
            "destruct (segment_construction_3 A B C D) as [E [HOut HCong]]; auto.",
            "VernacExtend",
            "8b014b407445d81f0a990b46824cfdd9c38f84cd"
        ],
        [
            "destruct (Haux A B E HOut) as [B' [HGrad HLe]]; trivial.",
            "VernacExtend",
            "d89aa4ae2b91248fad8d6d5f63629660309cca02"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply le_transitivity with A E; Le.",
            "VernacExtend",
            "c1daf00e03cac0279003e2c5367dbf1a232c7cde"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dedekind__archimedes : (forall A B C D, ~ ~ Reach A B C D -> Reach A B C D) -> dedekind_s_axiom -> archimedes_axiom.",
            "VernacStartTheoremProof",
            "4a966f937759c9d122aafad00047ce016aa7b648"
        ],
        [
            "intros Hstab dedekind.",
            "VernacExtend",
            "75f450e898383204d8ffa4ee51f1ef078c5bceca"
        ],
        [
            "apply archimedes_aux.",
            "VernacExtend",
            "2df7e2442876aac4f55c2815c31b962e4c5fb4e1"
        ],
        [
            "intros A B C HOut.",
            "VernacExtend",
            "91bd270515e41a8fea7c8ec4d3b0fcb7b510ec09"
        ],
        [
            "apply Hstab.",
            "VernacExtend",
            "019da384d43a4f26655fd0e8abefc42891ac6f01"
        ],
        [
            "intro HNReach.",
            "VernacExtend",
            "9a52ba4758aa8051d55de408aa54be9642a273ef"
        ],
        [
            "assert (HX : exists X, forall P Q, (Out A B P /\\ ~ ~ Reach A B A P) -> (Out A B Q /\\ ~ Reach A B A Q) -> Bet P X Q).",
            "VernacExtend",
            "35fa238a3221b16e2a7dfe1d4d3c08a8717ef58c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply dedekind.",
            "VernacExtend",
            "b9f071da47ca15dec5f800bb2ab0aef95cb6998e"
        ],
        [
            "exists A.",
            "VernacExtend",
            "162619f50efefbe299e58fc25ef1f54fa5097d87"
        ],
        [
            "intros X Y [HXOut HX] [HYOut HY].",
            "VernacExtend",
            "c8ac4b11647e63d04dc1b2c3ea3c893a7a421753"
        ],
        [
            "assert (HOut' : Out A X Y) by (apply l6_7 with B; [apply l6_6|]; trivial).",
            "VernacExtend",
            "4b413e0bf728f7ef7a449f453dc84985ab2b127e"
        ],
        [
            "destruct (HOut') as [_ [_ [|Habs]]]; trivial.",
            "VernacExtend",
            "b7d3f62dbe0b91963c8039f64b55e71afc246366"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply HX; clear HX.",
            "VernacExtend",
            "32054232ef7de428ecc1ff2b54e0e4deb2a2e5bf"
        ],
        [
            "intro HX.",
            "VernacExtend",
            "781474c837c0d061c6e87c4c3bd7dbda802eb383"
        ],
        [
            "apply HY.",
            "VernacExtend",
            "bbd3bb49ac0e9c5846e5280af012cd6f11c4b226"
        ],
        [
            "destruct HX as [B' [HGrad HLe]].",
            "VernacExtend",
            "805ea45a6ead40c471ee1653936d46da202e9acb"
        ],
        [
            "exists B'; split; trivial.",
            "VernacExtend",
            "8c91830a66dc0c8b7b2c9b319094e8407a517674"
        ],
        [
            "apply le_transitivity with A X; Le.",
            "VernacExtend",
            "63e68b840b6dfd1b543a24cf0f2f616989c313c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HX as [X HX].",
            "VernacExtend",
            "4bcfde6cab6c0b3081cab6608cf5ac349739cd1f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HGrad := grad_init A B).",
            "VernacExtend",
            "a0906c62dfce8bdb7bb8240862f9a8e1a8b42796"
        ],
        [
            "assert (HBet : Bet B X C).",
            "VernacExtend",
            "a93244c1ad427255fd6bd4b2de9b595cfa6b573c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply HX; split; trivial.",
            "VernacExtend",
            "d9feccdbd32dd79cbe43cfbb79a48efe32162b4b"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "intro HAbs; apply HAbs.",
            "VernacExtend",
            "8cb2e6c6e6ef6ba6d4e1e4a5f11f3266fe3cbff2"
        ],
        [
            "exists B; split; Le.",
            "VernacExtend",
            "8e0cf1c9b6cdde48ea5b4890682490e0521a3819"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Out A B X) by (apply out_bet_out_1 with C; auto).",
            "VernacExtend",
            "b82d631396b62e56839b9ab1db704f1d8dd245ef"
        ],
        [
            "destruct HOut as [_ [_ [HBet2|HBet2]]]; [|exfalso; apply HNReach; exists B; split; Le].",
            "VernacExtend",
            "c272118f8fdb704ec57767d20de3a95f3276c166"
        ],
        [
            "absurd (~ Reach A B A X).",
            "VernacExtend",
            "b8b13f873b1ece6e862acb204978dc2ca85d0d29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HAbs.",
            "VernacExtend",
            "12830f92cb599db56ce7bbe6f397f7c1cc001cfe"
        ],
        [
            "destruct (eq_dec_points X B).",
            "VernacExtend",
            "9f8796d57f0721ba1e1d81ecdfd22e598b0b835d"
        ],
        [
            "subst; apply HAbs; exists B; split; Le.",
            "VernacExtend",
            "1e7d642e911d1173e671ade81eb42581aa41d2f7"
        ],
        [
            "destruct (le_cases X A A B) as [HLe|HLe].",
            "VernacExtend",
            "6da7ee2e6f2cb4c7354f7e08f0593d607567961e"
        ],
        [
            "apply HAbs; exists B; split; Le.",
            "VernacExtend",
            "f514e159b2410f5c404c245c4ef03b983107fdd4"
        ],
        [
            "assert (Bet A B X) by (apply l6_13_1; Le).",
            "VernacExtend",
            "299744c758e65d38fe2fe045d3c19828dede96c4"
        ],
        [
            "destruct HLe as [X0 [HBet1 HCong]].",
            "VernacExtend",
            "70373a6fa077ca9bfa5530a9bc3ee526182eaae3"
        ],
        [
            "absurd (~ Reach A B A X0).",
            "VernacExtend",
            "29d1bd3976d6a25d90d566cd00cd6ba3b8cb3870"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HNReach0.",
            "VernacExtend",
            "0ffc498e39f0a6623c462e274ff0c7f151b39deb"
        ],
        [
            "assert (HXOut : Out X X0 B).",
            "VernacExtend",
            "4de89f9784138fb5372068590573bb59ba8e73ae"
        ],
        [
            "apply l6_7 with A; [|apply l6_6]; apply bet_out; Between.",
            "VernacExtend",
            "3c416703d557722c15dbec80c7fd9d98369afbdb"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "destruct (le_cases X B X X0) as [HLe|HLe].",
            "VernacExtend",
            "97c45a34aed840c4c1dca71b82052554ed1cd974"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply HNReach0; exists B; split; trivial.",
            "VernacExtend",
            "5f177c41bdd2960140328d8fea2af370a2b40369"
        ],
        [
            "exists X0; split; Cong.",
            "VernacExtend",
            "6b4825b93ba2007e221964b00c8bd655d5645af2"
        ],
        [
            "apply between_inner_transitivity with X; Between.",
            "VernacExtend",
            "dffd2f2dace354d3d73b0c8eac68943be9f6bd13"
        ],
        [
            "apply between_symmetry, l6_13_1; trivial.",
            "VernacExtend",
            "3dab89b7ad876d91ac954ba0ceb806cd3da56355"
        ],
        [
            "apply l6_6; trivial.",
            "VernacExtend",
            "24379c6cad4d7686c4b2144edcd5eb0b6393c194"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "absurd (X = X0).",
            "VernacExtend",
            "0340270175227f039e8096e9231979d63ae67ddc"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "apply between_equality with B.",
            "VernacExtend",
            "1f95f969e843bf03179666655d313416a13d24c5"
        ],
        [
            "apply l6_13_1; trivial.",
            "VernacExtend",
            "24e16c1a89a00f4ca8f8b097916063aed2377185"
        ],
        [
            "apply between_symmetry, HX; split; trivial.",
            "VernacExtend",
            "a39fbbdd01477b7d2c9a72835c848c43075c3c9e"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "intro HN; apply HN; exists B; split; Le.",
            "VernacExtend",
            "53b973b6dd5031707c4bea10be04a89f10edcb66"
        ],
        [
            "apply l6_7 with X; trivial.",
            "VernacExtend",
            "4b2bd48ac55665f9d8be8902246d55cc3b04c6a2"
        ],
        [
            "apply l6_6, bet_out; Between.",
            "VernacExtend",
            "e48c89461a054d05adcf99e9dffbfdfd5f8627ff"
        ],
        [
            "intro; subst X0; apply HNReach0.",
            "VernacExtend",
            "bb99d961efcf3e01269df2a08812bde4a598a835"
        ],
        [
            "exists B; split; Le.",
            "VernacExtend",
            "8e0cf1c9b6cdde48ea5b4890682490e0521a3819"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intro HReach.",
            "VernacExtend",
            "4fee92d85036069de29954c9d03372cbfd121783"
        ],
        [
            "destruct HReach as [B' [HGrad' HLe]].",
            "VernacExtend",
            "c5d4f2bff14b0935e4e97d8bab3f16bafd750051"
        ],
        [
            "destruct (segment_construction A B' A B) as [B1' [HBet' HCong']].",
            "VernacExtend",
            "af928b0c8cdcc0b41f8b3508c12886f52bbdbd04"
        ],
        [
            "apply HAbs; exists B1'; split.",
            "VernacExtend",
            "207e4a05ebd93e28529823f45328058da2af579b"
        ],
        [
            "apply grad_stab with B'; Cong.",
            "VernacExtend",
            "7d27bbf91886e458224b550055c42f2cfd6c0baa"
        ],
        [
            "apply bet2_le2__le1346 with X0 B'; Le; Between.",
            "VernacExtend",
            "fd157851c57ce5f19f8bec78e72c6072bf3b6940"
        ],
        [
            "apply cong__le, cong_transitivity with A B; Cong.",
            "VernacExtend",
            "3a968968b2b2fdfde9ec7480e6779b92cbc5bcc0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HReach.",
            "VernacExtend",
            "4fee92d85036069de29954c9d03372cbfd121783"
        ],
        [
            "destruct (segment_construction_3 X C A B) as [X1 [HOut' HCong]]; auto.",
            "VernacExtend",
            "98927fdcae430249974d53d4880b7ddfe68537df"
        ],
        [
            "intro; subst; contradiction.",
            "VernacExtend",
            "a5535a6023463d3d85055daaff8967c421149c00"
        ],
        [
            "assert (HBet1 : Bet A X X1).",
            "VernacExtend",
            "0eaf4f203046aa206c965d4a808849c1396b5e71"
        ],
        [
            "apply between_symmetry, bet_out__bet with C; eBetween.",
            "VernacExtend",
            "2febade60252dc4697c6399f3f4285303622f94d"
        ],
        [
            "apply (not_bet_and_out X1 X C).",
            "VernacExtend",
            "8e75c3cb9ecff32a0b61905f5c8e1f7909df96ec"
        ],
        [
            "split; [|apply l6_6; trivial].",
            "VernacExtend",
            "708157e97aedb7ed3857663187f81352c282cff0"
        ],
        [
            "apply HX; split; trivial; [| |apply bet_out; auto].",
            "VernacExtend",
            "cc3d06df8248571c421f504dc8221191088c4884"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l6_7 with X; trivial.",
            "VernacExtend",
            "4b2bd48ac55665f9d8be8902246d55cc3b04c6a2"
        ],
        [
            "assert_diffs; apply bet_out; auto.",
            "VernacExtend",
            "2ba9e92280c91b1ffcaaee0dcf389dd9876f2154"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HReach as [B' [HGrad' HLe]].",
            "VernacExtend",
            "c5d4f2bff14b0935e4e97d8bab3f16bafd750051"
        ],
        [
            "destruct (segment_construction A B' A B) as [B1' [HBet' HCong']].",
            "VernacExtend",
            "af928b0c8cdcc0b41f8b3508c12886f52bbdbd04"
        ],
        [
            "intro HAbs; apply HAbs.",
            "VernacExtend",
            "8cb2e6c6e6ef6ba6d4e1e4a5f11f3266fe3cbff2"
        ],
        [
            "exists B1'; split.",
            "VernacExtend",
            "ffe3ea50d823955cb40a8a13f24ebada99d1ef37"
        ],
        [
            "apply grad_stab with B'; Cong.",
            "VernacExtend",
            "7d27bbf91886e458224b550055c42f2cfd6c0baa"
        ],
        [
            "apply bet2_le2__le1346 with X B'; Le.",
            "VernacExtend",
            "2209cc59a5a2e0ceac6eaeac48b5dc0f2100b504"
        ],
        [
            "apply cong__le, cong_transitivity with A B; Cong.",
            "VernacExtend",
            "3a968968b2b2fdfde9ec7480e6779b92cbc5bcc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Dedekind_archimedes.",
            "VernacEndSegment",
            "b642bcede8e87d45f0ef77f9fc086cad75d73b10"
        ]
    ],
    "proofs": [
        {
            "name": "archimedes_aux",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros Haux A B C D HAB.",
                        "VernacExtend",
                        "96ae0f1122e263094bc36661b3eec6069a1fac77"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points C D).",
                        "VernacExtend",
                        "65d1b9f6554e8d6fe3aa7af69e9c40062843dd2f"
                    ]
                },
                {
                    "command": [
                        "subst; exists B.",
                        "VernacExtend",
                        "81167d3b7ddb44fabec200b6cad246187b55e438"
                    ]
                },
                {
                    "command": [
                        "split; Le.",
                        "VernacExtend",
                        "9e7957392f4ee59e6a826cdb295756cd16f8b1b7"
                    ]
                },
                {
                    "command": [
                        "apply grad_init.",
                        "VernacExtend",
                        "fb84e8461073b25dbe4de06c9273074af06635e8"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction_3 A B C D) as [E [HOut HCong]]; auto.",
                        "VernacExtend",
                        "8b014b407445d81f0a990b46824cfdd9c38f84cd"
                    ]
                },
                {
                    "command": [
                        "destruct (Haux A B E HOut) as [B' [HGrad HLe]]; trivial.",
                        "VernacExtend",
                        "d89aa4ae2b91248fad8d6d5f63629660309cca02"
                    ]
                },
                {
                    "command": [
                        "exists B'.",
                        "VernacExtend",
                        "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with A E; Le.",
                        "VernacExtend",
                        "c1daf00e03cac0279003e2c5367dbf1a232c7cde"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dedekind__archimedes",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros Hstab dedekind.",
                        "VernacExtend",
                        "75f450e898383204d8ffa4ee51f1ef078c5bceca"
                    ]
                },
                {
                    "command": [
                        "apply archimedes_aux.",
                        "VernacExtend",
                        "2df7e2442876aac4f55c2815c31b962e4c5fb4e1"
                    ]
                },
                {
                    "command": [
                        "intros A B C HOut.",
                        "VernacExtend",
                        "91bd270515e41a8fea7c8ec4d3b0fcb7b510ec09"
                    ]
                },
                {
                    "command": [
                        "apply Hstab.",
                        "VernacExtend",
                        "019da384d43a4f26655fd0e8abefc42891ac6f01"
                    ]
                },
                {
                    "command": [
                        "intro HNReach.",
                        "VernacExtend",
                        "9a52ba4758aa8051d55de408aa54be9642a273ef"
                    ]
                },
                {
                    "command": [
                        "assert (HX : exists X, forall P Q, (Out A B P /\\ ~ ~ Reach A B A P) -> (Out A B Q /\\ ~ Reach A B A Q) -> Bet P X Q).",
                        "VernacExtend",
                        "35fa238a3221b16e2a7dfe1d4d3c08a8717ef58c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply dedekind.",
                        "VernacExtend",
                        "b9f071da47ca15dec5f800bb2ab0aef95cb6998e"
                    ]
                },
                {
                    "command": [
                        "exists A.",
                        "VernacExtend",
                        "162619f50efefbe299e58fc25ef1f54fa5097d87"
                    ]
                },
                {
                    "command": [
                        "intros X Y [HXOut HX] [HYOut HY].",
                        "VernacExtend",
                        "c8ac4b11647e63d04dc1b2c3ea3c893a7a421753"
                    ]
                },
                {
                    "command": [
                        "assert (HOut' : Out A X Y) by (apply l6_7 with B; [apply l6_6|]; trivial).",
                        "VernacExtend",
                        "4b413e0bf728f7ef7a449f453dc84985ab2b127e"
                    ]
                },
                {
                    "command": [
                        "destruct (HOut') as [_ [_ [|Habs]]]; trivial.",
                        "VernacExtend",
                        "b7d3f62dbe0b91963c8039f64b55e71afc246366"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply HX; clear HX.",
                        "VernacExtend",
                        "32054232ef7de428ecc1ff2b54e0e4deb2a2e5bf"
                    ]
                },
                {
                    "command": [
                        "intro HX.",
                        "VernacExtend",
                        "781474c837c0d061c6e87c4c3bd7dbda802eb383"
                    ]
                },
                {
                    "command": [
                        "apply HY.",
                        "VernacExtend",
                        "bbd3bb49ac0e9c5846e5280af012cd6f11c4b226"
                    ]
                },
                {
                    "command": [
                        "destruct HX as [B' [HGrad HLe]].",
                        "VernacExtend",
                        "805ea45a6ead40c471ee1653936d46da202e9acb"
                    ]
                },
                {
                    "command": [
                        "exists B'; split; trivial.",
                        "VernacExtend",
                        "8c91830a66dc0c8b7b2c9b319094e8407a517674"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with A X; Le.",
                        "VernacExtend",
                        "63e68b840b6dfd1b543a24cf0f2f616989c313c9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HX as [X HX].",
                        "VernacExtend",
                        "4bcfde6cab6c0b3081cab6608cf5ac349739cd1f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HGrad := grad_init A B).",
                        "VernacExtend",
                        "a0906c62dfce8bdb7bb8240862f9a8e1a8b42796"
                    ]
                },
                {
                    "command": [
                        "assert (HBet : Bet B X C).",
                        "VernacExtend",
                        "a93244c1ad427255fd6bd4b2de9b595cfa6b573c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply HX; split; trivial.",
                        "VernacExtend",
                        "d9feccdbd32dd79cbe43cfbb79a48efe32162b4b"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "intro HAbs; apply HAbs.",
                        "VernacExtend",
                        "8cb2e6c6e6ef6ba6d4e1e4a5f11f3266fe3cbff2"
                    ]
                },
                {
                    "command": [
                        "exists B; split; Le.",
                        "VernacExtend",
                        "8e0cf1c9b6cdde48ea5b4890682490e0521a3819"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Out A B X) by (apply out_bet_out_1 with C; auto).",
                        "VernacExtend",
                        "b82d631396b62e56839b9ab1db704f1d8dd245ef"
                    ]
                },
                {
                    "command": [
                        "destruct HOut as [_ [_ [HBet2|HBet2]]]; [|exfalso; apply HNReach; exists B; split; Le].",
                        "VernacExtend",
                        "c272118f8fdb704ec57767d20de3a95f3276c166"
                    ]
                },
                {
                    "command": [
                        "absurd (~ Reach A B A X).",
                        "VernacExtend",
                        "b8b13f873b1ece6e862acb204978dc2ca85d0d29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro HAbs.",
                        "VernacExtend",
                        "12830f92cb599db56ce7bbe6f397f7c1cc001cfe"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points X B).",
                        "VernacExtend",
                        "9f8796d57f0721ba1e1d81ecdfd22e598b0b835d"
                    ]
                },
                {
                    "command": [
                        "subst; apply HAbs; exists B; split; Le.",
                        "VernacExtend",
                        "1e7d642e911d1173e671ade81eb42581aa41d2f7"
                    ]
                },
                {
                    "command": [
                        "destruct (le_cases X A A B) as [HLe|HLe].",
                        "VernacExtend",
                        "6da7ee2e6f2cb4c7354f7e08f0593d607567961e"
                    ]
                },
                {
                    "command": [
                        "apply HAbs; exists B; split; Le.",
                        "VernacExtend",
                        "f514e159b2410f5c404c245c4ef03b983107fdd4"
                    ]
                },
                {
                    "command": [
                        "assert (Bet A B X) by (apply l6_13_1; Le).",
                        "VernacExtend",
                        "299744c758e65d38fe2fe045d3c19828dede96c4"
                    ]
                },
                {
                    "command": [
                        "destruct HLe as [X0 [HBet1 HCong]].",
                        "VernacExtend",
                        "70373a6fa077ca9bfa5530a9bc3ee526182eaae3"
                    ]
                },
                {
                    "command": [
                        "absurd (~ Reach A B A X0).",
                        "VernacExtend",
                        "29d1bd3976d6a25d90d566cd00cd6ba3b8cb3870"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HNReach0.",
                        "VernacExtend",
                        "0ffc498e39f0a6623c462e274ff0c7f151b39deb"
                    ]
                },
                {
                    "command": [
                        "assert (HXOut : Out X X0 B).",
                        "VernacExtend",
                        "4de89f9784138fb5372068590573bb59ba8e73ae"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with A; [|apply l6_6]; apply bet_out; Between.",
                        "VernacExtend",
                        "3c416703d557722c15dbec80c7fd9d98369afbdb"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "destruct (le_cases X B X X0) as [HLe|HLe].",
                        "VernacExtend",
                        "97c45a34aed840c4c1dca71b82052554ed1cd974"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply HNReach0; exists B; split; trivial.",
                        "VernacExtend",
                        "5f177c41bdd2960140328d8fea2af370a2b40369"
                    ]
                },
                {
                    "command": [
                        "exists X0; split; Cong.",
                        "VernacExtend",
                        "6b4825b93ba2007e221964b00c8bd655d5645af2"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with X; Between.",
                        "VernacExtend",
                        "dffd2f2dace354d3d73b0c8eac68943be9f6bd13"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, l6_13_1; trivial.",
                        "VernacExtend",
                        "3dab89b7ad876d91ac954ba0ceb806cd3da56355"
                    ]
                },
                {
                    "command": [
                        "apply l6_6; trivial.",
                        "VernacExtend",
                        "24379c6cad4d7686c4b2144edcd5eb0b6393c194"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "absurd (X = X0).",
                        "VernacExtend",
                        "0340270175227f039e8096e9231979d63ae67ddc"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "apply between_equality with B.",
                        "VernacExtend",
                        "1f95f969e843bf03179666655d313416a13d24c5"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1; trivial.",
                        "VernacExtend",
                        "24e16c1a89a00f4ca8f8b097916063aed2377185"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, HX; split; trivial.",
                        "VernacExtend",
                        "a39fbbdd01477b7d2c9a72835c848c43075c3c9e"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "intro HN; apply HN; exists B; split; Le.",
                        "VernacExtend",
                        "53b973b6dd5031707c4bea10be04a89f10edcb66"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with X; trivial.",
                        "VernacExtend",
                        "4b2bd48ac55665f9d8be8902246d55cc3b04c6a2"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, bet_out; Between.",
                        "VernacExtend",
                        "e48c89461a054d05adcf99e9dffbfdfd5f8627ff"
                    ]
                },
                {
                    "command": [
                        "intro; subst X0; apply HNReach0.",
                        "VernacExtend",
                        "bb99d961efcf3e01269df2a08812bde4a598a835"
                    ]
                },
                {
                    "command": [
                        "exists B; split; Le.",
                        "VernacExtend",
                        "8e0cf1c9b6cdde48ea5b4890682490e0521a3819"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intro HReach.",
                        "VernacExtend",
                        "4fee92d85036069de29954c9d03372cbfd121783"
                    ]
                },
                {
                    "command": [
                        "destruct HReach as [B' [HGrad' HLe]].",
                        "VernacExtend",
                        "c5d4f2bff14b0935e4e97d8bab3f16bafd750051"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B' A B) as [B1' [HBet' HCong']].",
                        "VernacExtend",
                        "af928b0c8cdcc0b41f8b3508c12886f52bbdbd04"
                    ]
                },
                {
                    "command": [
                        "apply HAbs; exists B1'; split.",
                        "VernacExtend",
                        "207e4a05ebd93e28529823f45328058da2af579b"
                    ]
                },
                {
                    "command": [
                        "apply grad_stab with B'; Cong.",
                        "VernacExtend",
                        "7d27bbf91886e458224b550055c42f2cfd6c0baa"
                    ]
                },
                {
                    "command": [
                        "apply bet2_le2__le1346 with X0 B'; Le; Between.",
                        "VernacExtend",
                        "fd157851c57ce5f19f8bec78e72c6072bf3b6940"
                    ]
                },
                {
                    "command": [
                        "apply cong__le, cong_transitivity with A B; Cong.",
                        "VernacExtend",
                        "3a968968b2b2fdfde9ec7480e6779b92cbc5bcc0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro HReach.",
                        "VernacExtend",
                        "4fee92d85036069de29954c9d03372cbfd121783"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction_3 X C A B) as [X1 [HOut' HCong]]; auto.",
                        "VernacExtend",
                        "98927fdcae430249974d53d4880b7ddfe68537df"
                    ]
                },
                {
                    "command": [
                        "intro; subst; contradiction.",
                        "VernacExtend",
                        "a5535a6023463d3d85055daaff8967c421149c00"
                    ]
                },
                {
                    "command": [
                        "assert (HBet1 : Bet A X X1).",
                        "VernacExtend",
                        "0eaf4f203046aa206c965d4a808849c1396b5e71"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, bet_out__bet with C; eBetween.",
                        "VernacExtend",
                        "2febade60252dc4697c6399f3f4285303622f94d"
                    ]
                },
                {
                    "command": [
                        "apply (not_bet_and_out X1 X C).",
                        "VernacExtend",
                        "8e75c3cb9ecff32a0b61905f5c8e1f7909df96ec"
                    ]
                },
                {
                    "command": [
                        "split; [|apply l6_6; trivial].",
                        "VernacExtend",
                        "708157e97aedb7ed3857663187f81352c282cff0"
                    ]
                },
                {
                    "command": [
                        "apply HX; split; trivial; [| |apply bet_out; auto].",
                        "VernacExtend",
                        "cc3d06df8248571c421f504dc8221191088c4884"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l6_7 with X; trivial.",
                        "VernacExtend",
                        "4b2bd48ac55665f9d8be8902246d55cc3b04c6a2"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply bet_out; auto.",
                        "VernacExtend",
                        "2ba9e92280c91b1ffcaaee0dcf389dd9876f2154"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HReach as [B' [HGrad' HLe]].",
                        "VernacExtend",
                        "c5d4f2bff14b0935e4e97d8bab3f16bafd750051"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B' A B) as [B1' [HBet' HCong']].",
                        "VernacExtend",
                        "af928b0c8cdcc0b41f8b3508c12886f52bbdbd04"
                    ]
                },
                {
                    "command": [
                        "intro HAbs; apply HAbs.",
                        "VernacExtend",
                        "8cb2e6c6e6ef6ba6d4e1e4a5f11f3266fe3cbff2"
                    ]
                },
                {
                    "command": [
                        "exists B1'; split.",
                        "VernacExtend",
                        "ffe3ea50d823955cb40a8a13f24ebada99d1ef37"
                    ]
                },
                {
                    "command": [
                        "apply grad_stab with B'; Cong.",
                        "VernacExtend",
                        "7d27bbf91886e458224b550055c42f2cfd6c0baa"
                    ]
                },
                {
                    "command": [
                        "apply bet2_le2__le1346 with X B'; Le.",
                        "VernacExtend",
                        "2209cc59a5a2e0ceac6eaeac48b5dc0f2100b504"
                    ]
                },
                {
                    "command": [
                        "apply cong__le, cong_transitivity with A B; Cong.",
                        "VernacExtend",
                        "3a968968b2b2fdfde9ec7480e6779b92cbc5bcc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}