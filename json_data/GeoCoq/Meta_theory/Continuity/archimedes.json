{
    "filename": "Meta_theory/Continuity/archimedes.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.saccheri.",
            "VernacRequire",
            "7f4ea2c902af7c230435bbab1ce2ec0513b4262b"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch13_1.",
            "VernacRequire",
            "47dcc16f1dfddcd1d3cb74ef6d75a8d70ab03305"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Continuity.grad.",
            "VernacRequire",
            "a80689feec7a0fc17c0dd960090647e82fca3701"
        ],
        [
            "Section Archimedes.",
            "VernacBeginSection",
            "d1b25fd19fde22991b5c03074e03142e8390d8fa"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma t22_18_aux1 : forall A0 A1 E0 E1 D1 D, Bet A0 D1 A1 -> Cong E0 E1 A1 D1 -> Grad A0 D1 D -> exists A E, Grad2 A0 A1 A E0 E1 E /\\ Cong E0 E A D /\\ Bet A0 D A.",
            "VernacStartTheoremProof",
            "ff696f160008501c39261586a85f37c61bae0c00"
        ],
        [
            "intros A0 A1 E0 E1 D1 D HBet HCong HG.",
            "VernacExtend",
            "e7425d7092f636009895f649640b0d9041f2b969"
        ],
        [
            "induction HG.",
            "VernacExtend",
            "04d2b23b1468b8bb5055485d36e92fc81342c1cb"
        ],
        [
            "exists A1; exists E1; repeat split; auto; apply grad2_init.",
            "VernacExtend",
            "f54c5a88b6c0c2dba5bd172f13150c39af27d884"
        ],
        [
            "rename A into A0.",
            "VernacExtend",
            "a5beeeb83cf1de373fbf603792072fcff69de44c"
        ],
        [
            "rename B into C1.",
            "VernacExtend",
            "fba23b29b9923e9688ebc307f32684667f5ea829"
        ],
        [
            "destruct IHHG as [A [E [HG2 [HCong2 HBet2]]]]; auto.",
            "VernacExtend",
            "531389e3fc4e32737855440b8dc60d4c00f1d25a"
        ],
        [
            "destruct (segment_construction A0 A A0 A1) as [A' [HBet3 HCong3]].",
            "VernacExtend",
            "63a259d23cfcd2f65025ebf216d860aaf2b59e14"
        ],
        [
            "destruct (segment_construction E0 E E0 E1) as [E' [HBet4 HCong4]].",
            "VernacExtend",
            "28b8f0e89eac0fecdcdcb5b758c7ae55805937e6"
        ],
        [
            "exists A'; exists E'.",
            "VernacExtend",
            "a4629fbac6de9d5feae703e11c802445d9137cfa"
        ],
        [
            "assert(HBet5 : Bet A0 C' A').",
            "VernacExtend",
            "54cc66e9c378b6518c3c5ee1f294d455f3f4a640"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert(HBet5 : Bet A0 C A') by eBetween.",
            "VernacExtend",
            "240080a048866c60e571d089dda6c2b94081de3b"
        ],
        [
            "assert(Bet C C' A'); [|eBetween].",
            "VernacExtend",
            "558239d04ca16c0a82c59474a09e245b5c893223"
        ],
        [
            "apply grad2__grad123 in HG2.",
            "VernacExtend",
            "654c242ccfc45974dd56b0863d700b223e93e5be"
        ],
        [
            "apply grad__bet in HG.",
            "VernacExtend",
            "8355ef4487715b5ecc6884cdac19fed7eaf0842f"
        ],
        [
            "apply grad__bet in HG2.",
            "VernacExtend",
            "b348abebdd3fa87fb0d54a0f7921e24c33c40dba"
        ],
        [
            "elim(eq_dec_points A0 C).",
            "VernacExtend",
            "94f72fee710e6531d80887bc903f128d42e6b042"
        ],
        [
            "intro; treat_equalities; Between.",
            "VernacExtend",
            "7cdba8d37d67924d6d740369a0a213db27b5d675"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points C C').",
            "VernacExtend",
            "3f515a33be2d32d321c6adcb487c93c2039a4120"
        ],
        [
            "intro; treat_equalities; Between.",
            "VernacExtend",
            "7cdba8d37d67924d6d740369a0a213db27b5d675"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim(eq_dec_points A' C).",
            "VernacExtend",
            "f355069faa65775381615ac0dc5676399e1939b2"
        ],
        [
            "intro; subst A'; assert (A=C) by (apply (between_equality _ _ A0); Between); treat_equalities; Between.",
            "VernacExtend",
            "f17688d1af1d8f0cdefdcd9473b06f1fbbd8bc22"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "destruct (l6_2 C' A' A0 C); Between.",
            "VernacExtend",
            "6b2e7da80a88e4212ae2e8e6e012cc5634694ca5"
        ],
        [
            "apply (le_transitivity _ _ A A').",
            "VernacExtend",
            "530f23796c77d4af87848faf1470efacefbca076"
        ],
        [
            "apply (l5_6 A0 C1 A0 A1); Cong; exists C1; split; Cong.",
            "VernacExtend",
            "ced6052f118e339b262e06968a3e763d77f7f061"
        ],
        [
            "destruct(l5_12_a C A A'); eBetween.",
            "VernacExtend",
            "bdfd42a743716a40b0a0bfe467368d58b341aa74"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply grad2_stab with A E; Cong.",
            "VernacExtend",
            "d37445def555d9f1752fb84b9d0b94870206fd7f"
        ],
        [
            "assert (HD : Le E0 E1 A A').",
            "VernacExtend",
            "3ceb247a9c9d40494bcca4f9722deb4a7f0b6ac9"
        ],
        [
            "apply (l5_6 E0 E1 A1 A0); Cong; exists C1; split; Between.",
            "VernacExtend",
            "a9894ca8509ee352b83825b4095bd04cf30bf672"
        ],
        [
            "destruct HD as [D [HBet6 HCong6]].",
            "VernacExtend",
            "1caa32bafee2e876b327c96c6adf940a3f6361b6"
        ],
        [
            "apply (cong_transitivity _ _ C D).",
            "VernacExtend",
            "1ec80621d71c6c0364351ccb78753e28175596d6"
        ],
        [
            "apply (l2_11 _ E _ _ A); Cong; eBetween; apply cong_transitivity with E0 E1; trivial.",
            "VernacExtend",
            "ccef1aedf418a4a3eb74ce592dd64db80396ad80"
        ],
        [
            "assert (Bet C D A') by eBetween.",
            "VernacExtend",
            "f61d842219ee230b4e3287a9d90113ff3e621a5c"
        ],
        [
            "apply (l4_3 _ _ A' _ _ C); Cong; eBetween.",
            "VernacExtend",
            "f62b522027a17df29c78891e8fff27f805ada34b"
        ],
        [
            "apply (cong_transitivity _ _ A0 C1); Cong.",
            "VernacExtend",
            "0d7ba950486deefce7993e549a2d9cf68caf7728"
        ],
        [
            "apply cong_left_commutativity; apply (l4_3 _ _ A _ _ A1); Between; Cong.",
            "VernacExtend",
            "952237897078e4ed0227bdddf00fcc7d7f4d0295"
        ],
        [
            "apply cong_transitivity with E0 E1; Cong.",
            "VernacExtend",
            "8ec920434b70b4acd0a882787a0634b2ca3b1dad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_18_aux2 : forall A0 A1 B0 B1 A B E, Saccheri A0 B0 B1 A1 -> Grad2 A0 A1 A B0 B1 E -> Saccheri A0 B0 B A -> Le B0 B B0 E.",
            "VernacStartTheoremProof",
            "70b5fc62d15028914745a65ed58b620a08710dd8"
        ],
        [
            "intros A0 A1 B0 B1 A B E HSac1 HG.",
            "VernacExtend",
            "5900b315a8a52681a86d524e9d176a291fb41eec"
        ],
        [
            "revert B.",
            "VernacExtend",
            "5c9d43f45da1ffaa2f789c7e6157fec6bfffcd04"
        ],
        [
            "induction HG; rename A into A0; rename B into A1; rename D into B0; rename E into B1.",
            "VernacExtend",
            "5185b0db5bfc5d8b3260ee87f2731ea5de6eb5e8"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros B HSac.",
            "VernacExtend",
            "4bb4730108724e8ff73c6fb3688869b4a0cc51dc"
        ],
        [
            "assert(B = B1); [|subst B; Le].",
            "VernacExtend",
            "eb669bd6cda042827fe7e08da5be7700c29dc119"
        ],
        [
            "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac1); unfold Saccheri in *; spliter.",
            "VernacExtend",
            "2edd1aef38edc4472de7ef138b7db279f47764cb"
        ],
        [
            "apply (l6_11_uniqueness A1 A0 B0 B1); Cong; [|apply out_trivial; auto].",
            "VernacExtend",
            "9542d10f678212bb85bbe8ddbc8faf80aa120173"
        ],
        [
            "apply (col_one_side_out _ A0).",
            "VernacExtend",
            "684a431db402ae4a714a77f38eeb496ebe1b3a1d"
        ],
        [
            "apply col_permutation_2, cop_per2__col with A0; Perp.",
            "VernacExtend",
            "58f1e74dd7a90773c794a5a1d42605fea3337db0"
        ],
        [
            "apply coplanar_perm_3, coplanar_trans_1 with B0; Cop.",
            "VernacExtend",
            "6d0547c454d3fb0e384940095058ade49cdbb4f3"
        ],
        [
            "apply not_col_permutation_2, one_side_not_col123 with B1; assumption.",
            "VernacExtend",
            "e18923207c83ba918824fa31629f7bb5d30b0397"
        ],
        [
            "apply (one_side_transitivity _ _ _ B0); Side.",
            "VernacExtend",
            "04745c8d9ab925e52363a908d98134fd0791d14f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rename C into A; rename F into E; rename C' into A'; rename F' into E'.",
            "VernacExtend",
            "9d260202c7ac4f1402ae084d1d5ff3969a3c3596"
        ],
        [
            "intros B' HSac'.",
            "VernacExtend",
            "8149e5c522f98b1378888164bf6fc08e12c4480b"
        ],
        [
            "assert (A0 <> A).",
            "VernacExtend",
            "da41378f029c92cc5993610fe17783b1b0645497"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "assert (A0 = A1) by (apply between_identity, grad__bet, (grad2__grad123 _ _ _ B0 B1 E); auto).",
            "VernacExtend",
            "c394c8e9a0b8c6ec9333d0cbd22e32c194d36f08"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "apply sac_distincts in HSac1; spliter; auto.",
            "VernacExtend",
            "27ae5c008525366184003282aa8d682e4bb8ef10"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HB : exists B, Saccheri A0 B0 B A).",
            "VernacExtend",
            "635c7d9f0ad953f1b68a92736fc0b4c2b31b74e1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "clear dependent A'; clear dependent B'; clear IHHG.",
            "VernacExtend",
            "8e01c3213b63a387cf31b80c7047a7e235ae8469"
        ],
        [
            "apply grad2__grad123 in HG.",
            "VernacExtend",
            "0822959996cea10b6ff8ea8f5dec2f94f836376c"
        ],
        [
            "apply grad__bet in HG.",
            "VernacExtend",
            "8355ef4487715b5ecc6884cdac19fed7eaf0842f"
        ],
        [
            "destruct (l10_15 A0 A1 A B0) as [P [HPerp HOS]]; Col.",
            "VernacExtend",
            "75dbe5e96f31e40c61517d69e9dfe3d8acfdf13e"
        ],
        [
            "assert (HH := sac__ncol124 A0 B0 B1 A1); Col.",
            "VernacExtend",
            "96439abc6c6d699ec730d8783951ab941fedb23c"
        ],
        [
            "destruct (l6_11_existence A A0 B0 P) as [B [HOut Hcong5]].",
            "VernacExtend",
            "2852588888f423e3c4ae8e6983b17c335c09326b"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac1); spliter; auto.",
            "VernacExtend",
            "5d85bf52d12bee23dcb936250087e3e2c82ef8d4"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "unfold Saccheri in *; spliter; assert_diffs.",
            "VernacExtend",
            "af475782e07d3e0c15abbdc549e29fbd4c9d29ed"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (per_col _ _ A1); Col.",
            "VernacExtend",
            "ee9e7ce3d3ec5a9d9929801c914de9e6ef267a81"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply perp_per_2; auto.",
            "VernacExtend",
            "ce73316dda57149f341db74d2f4483c17f80ce14"
        ],
        [
            "apply (perp_col1 _ _ _ P); Col.",
            "VernacExtend",
            "9bfc7545575033855255d8a901c83be329642bd3"
        ],
        [
            "apply perp_comm; apply (perp_col _ A1); Col.",
            "VernacExtend",
            "a87977da077203df7dbd17e75b2ebf96ec7f53fa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply (out_out_one_side _ _ _ P); [|apply l6_6; auto].",
            "VernacExtend",
            "2cb349fe3cfd083dbd5e603b211e1e490bc8ef6f"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply (col_one_side _ A1); Col.",
            "VernacExtend",
            "fd10138452eea7548a6b10f96dbfc5960f589c28"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HB as [B HSac].",
            "VernacExtend",
            "b2567441dbd3f760a1567cb0b9577c8c43ffdce1"
        ],
        [
            "assert (HLe := HSac).",
            "VernacExtend",
            "fcd5fe9d35a3c039faa8b6330b39b53de0d80013"
        ],
        [
            "apply IHHG in HLe; auto.",
            "VernacExtend",
            "f9da5336475ebf9e3d36f27e134ab62c8823ba1a"
        ],
        [
            "clear IHHG.",
            "VernacExtend",
            "a7304be4726915bb939893179c1ef7fd083ebad7"
        ],
        [
            "destruct (segment_construction B0 B E E') as [C [HBet HCong]].",
            "VernacExtend",
            "88c15766492131dacf7a70d349ad3998467848a4"
        ],
        [
            "assert (Cong B0 B1 B B').",
            "VernacExtend",
            "7207670f67e53c1ac968ebc67e63930f6882776b"
        ],
        [
            "apply (cong2_sac2__cong A0 B0 B1 A1 A _ _ A'); auto; [|unfold Saccheri in *; spliter; Cong].",
            "VernacExtend",
            "22b900b4cc24b34396f334527e6b935d36b3be38"
        ],
        [
            "apply cop_sac2__sac with A0 B0; Cop.",
            "VernacExtend",
            "a1b661ed704e546cd1592a053c11ff166c36d348"
        ],
        [
            "intro; treat_equalities; apply sac_distincts in HSac1; spliter; auto.",
            "VernacExtend",
            "f86aeda5361e399899ab2f18371fd49a3f2b28e0"
        ],
        [
            "apply (le_transitivity _ _ B0 C).",
            "VernacExtend",
            "5b68c2d3e24a393c6366b74302eb645a8b1a94e5"
        ],
        [
            "apply (triangle_inequality B0 B B' C); trivial.",
            "VernacExtend",
            "21ff578977a1060495d0f97ef8dfa65e52afbae9"
        ],
        [
            "apply cong_transitivity with E E'; Cong.",
            "VernacExtend",
            "f9be4fe74453a8e72e0ddd6dbf3479e4ed0a3a5b"
        ],
        [
            "apply cong_transitivity with B0 B1; Cong.",
            "VernacExtend",
            "cf39ff6f6880e570142122d763b9dae755a94245"
        ],
        [
            "apply (bet2_le2__le1346 _ B _ _ E); Le.",
            "VernacExtend",
            "77acf5b0d204644509bc5707a7cdb8e619d2a802"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_18 : archimedes_axiom -> forall A0 B0 B1 A1, Saccheri A0 B0 B1 A1 -> ~ Lt B0 B1 A1 A0.",
            "VernacStartTheoremProof",
            "c39e02265307c56a4dd623c81d828d02a46170ee"
        ],
        [
            "intros Harchi A0 B0 B1 A1 HSac.",
            "VernacExtend",
            "b9fbee19943ab1cc71cdd88ef2a906b0cf7e6fdb"
        ],
        [
            "intro Hlt.",
            "VernacExtend",
            "89bc965d9cbbc603093e0bb8e35e9414141fded3"
        ],
        [
            "destruct Hlt as [Hle HNcong].",
            "VernacExtend",
            "aaa77c74cf39fffce28303ff913c16cfd261962e"
        ],
        [
            "destruct Hle as [D1 [Hbet Hcong]].",
            "VernacExtend",
            "cf1d7350cf954768b6e59f9757c792539b4f29c3"
        ],
        [
            "destruct (segment_construction A0 D1 A0 B0) as [C0 [Hbet2 Hcong2]].",
            "VernacExtend",
            "62eab6c01a5856030c28e85f3ff13e45ce397ab7"
        ],
        [
            "destruct (segment_construction A0 C0 A0 B0) as [C [Hbet3 Hcong3]].",
            "VernacExtend",
            "3db35abbf2292415f0b9902a0503c7c81e9359ad"
        ],
        [
            "assert(H : forall D, Grad A0 D1 D -> Lt A0 D A0 C).",
            "VernacExtend",
            "12e116fbe8e2b61f3134bd92d26f074586381030"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros D HG.",
            "VernacExtend",
            "e82b6cc8b0635b296c30e3224ff03d520ed0c31e"
        ],
        [
            "destruct (t22_18_aux1 A0 A1 B0 B1 D1 D) as [A [E [HG2 [Hcong4 Hbet4]]]]; Between.",
            "VernacExtend",
            "174ec638567872ba5362e8efb82057bd8fad35a8"
        ],
        [
            "assert (Hbet5 := grad2__grad123 A0 A1 A B0 B1 E HG2).",
            "VernacExtend",
            "4cbc25265db78c5879973e52fc1b12a71ebce612"
        ],
        [
            "apply grad__bet in Hbet5.",
            "VernacExtend",
            "9f74157ac1f8991625d005b02e8663c01b171a3c"
        ],
        [
            "destruct (l10_15 A0 A1 A B0) as [P [HPerp HOS]].",
            "VernacExtend",
            "e82d326b9bc351466747a093c889a6dc609b5638"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert (H := sac__ncol124 A0 B0 B1 A1); Col.",
            "VernacExtend",
            "0216058ea12e2c9af026d1830bc31f57d4cba82b"
        ],
        [
            "destruct (l6_11_existence A A0 B0 P) as [B [HOut Hcong5]].",
            "VernacExtend",
            "2852588888f423e3c4ae8e6983b17c335c09326b"
        ],
        [
            "assert_diffs; auto.",
            "VernacExtend",
            "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
        ],
        [
            "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac); spliter; auto.",
            "VernacExtend",
            "cc4b7cfc64a19108b9050e330a36bbbfa2338141"
        ],
        [
            "assert(HSac2 : Saccheri A0 B0 B A).",
            "VernacExtend",
            "b6a129f1a8fbe994b2c4ad2510eabb919db5d992"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "unfold Saccheri in *; spliter; assert_diffs; assert(A0 <> A) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "f48b8d45e96c8adfb1822b42b31c886b5e86eced"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (per_col _ _ A1); Col.",
            "VernacExtend",
            "ee9e7ce3d3ec5a9d9929801c914de9e6ef267a81"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply perp_per_2; auto.",
            "VernacExtend",
            "ce73316dda57149f341db74d2f4483c17f80ce14"
        ],
        [
            "apply (perp_col1 _ _ _ P); Col.",
            "VernacExtend",
            "9bfc7545575033855255d8a901c83be329642bd3"
        ],
        [
            "apply perp_comm; apply (perp_col _ A1); Col.",
            "VernacExtend",
            "a87977da077203df7dbd17e75b2ebf96ec7f53fa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply (out_out_one_side _ _ _ P); [|apply l6_6; auto].",
            "VernacExtend",
            "2cb349fe3cfd083dbd5e603b211e1e490bc8ef6f"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply (col_one_side _ A1); Col.",
            "VernacExtend",
            "fd10138452eea7548a6b10f96dbfc5960f589c28"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert(HLe : Le B0 B B0 E) by (apply (t22_18_aux2 A0 A1 B0 B1 A); auto).",
            "VernacExtend",
            "c7bff0311e8a10b06f18497d11f65356f6c1c7c7"
        ],
        [
            "assert (HLe2 : Le B0 B A A0).",
            "VernacExtend",
            "d12b251b1017f3a5662eb5aec6547ca1f517c26c"
        ],
        [
            "apply (le_transitivity _ _ B0 E); auto.",
            "VernacExtend",
            "e68bf6f7b710db4b1ef112c66ccef34b5d016713"
        ],
        [
            "apply (l5_6 A D A A0); Cong.",
            "VernacExtend",
            "a53df61438bb81f92847a329a75db157da9883d5"
        ],
        [
            "destruct (l5_12_a A D A0); Between.",
            "VernacExtend",
            "3ea4c7315678c45a27c60f82c7cba1181f5df6c3"
        ],
        [
            "assert (HLe2' := HLe2).",
            "VernacExtend",
            "260c4358ed53cb0d28cda5fce1be370975f26d9e"
        ],
        [
            "destruct HLe2' as [Q [Hbet6 Hcong6]].",
            "VernacExtend",
            "4a2906ee24f750a019325449f9ee7bd465edb6f5"
        ],
        [
            "apply (le1234_lt__lt _ _ A0 Q).",
            "VernacExtend",
            "0e6bd562c820f44ced98baf14ad40f58b29502fc"
        ],
        [
            "apply (bet2_le2__le1245 _ _ A _ _ A); Between; Le.",
            "VernacExtend",
            "bc271fe882999c515be3265793b799d230733266"
        ],
        [
            "apply (l5_6 B0 B B0 E); Cong.",
            "VernacExtend",
            "77cbb8ee2d6a11c08028394a019e167604bb7fe0"
        ],
        [
            "clear dependent D; clear dependent E.",
            "VernacExtend",
            "52dec2db4652e4420396ad1cfa5d61cb46edb5b6"
        ],
        [
            "destruct (l6_11_existence A0 A0 B0 A) as [B0' [HOut2 Hcong4]]; try (assert_diffs; intro; treat_equalities; auto).",
            "VernacExtend",
            "940b5b18bf96c5c4a2a13947c4efafe715d1f618"
        ],
        [
            "destruct (segment_construction A0 B0' B0 B) as [B' [Hbet7 Hcong7]].",
            "VernacExtend",
            "59cdfc68940fb1789859a8430cb2d5d90a0ad46b"
        ],
        [
            "destruct (segment_construction B0' B' B A) as [A' [Hbet8 Hcong8]].",
            "VernacExtend",
            "9a9bc5815837132d63c4c5a2457543a2c138601e"
        ],
        [
            "assert (Le A0 A A0 A').",
            "VernacExtend",
            "2e07e35016f0a28ed999809d9a58145f7d30c1a0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (segment_construction A0 B0' B0 A) as [B'' [Hbet9 Hcong9]].",
            "VernacExtend",
            "dc762b59b03fd204caa1aa5995ccd1bf9365ea1f"
        ],
        [
            "apply (le_transitivity _ _ A0 B'').",
            "VernacExtend",
            "f452d16ca4032fd52dc7d6f08b9c56a1b8d18b81"
        ],
        [
            "apply (triangle_inequality_2 _ B0 _ _ B0'); Cong.",
            "VernacExtend",
            "ef1e9a43153b18565cd6bde2c038413aeafbac89"
        ],
        [
            "apply (bet2_le2__le1346 _ B0' _ _ B0'); Le.",
            "VernacExtend",
            "523dbc567222a12a66663b3890a97c1c726e9d75"
        ],
        [
            "apply (outer_transitivity_between _ _ B'); auto.",
            "VernacExtend",
            "670bda22897f5619fceee5faeb76f6ebc810d98c"
        ],
        [
            "intro; treat_equalities; apply sac_distincts in HSac2; spliter; auto.",
            "VernacExtend",
            "0f24f9ea0dfe8f92eb7a1fb1b9cf177eda914941"
        ],
        [
            "apply (l5_6 B0 A B0' A'); Cong.",
            "VernacExtend",
            "508168975706ca96f838084331d32baf09a067cd"
        ],
        [
            "apply (triangle_inequality_2 _ B _ _ B'); Cong.",
            "VernacExtend",
            "0a529ffc647c44654bf51c68a6142c4161e7c203"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLe3 : Le B0 B A' B0').",
            "VernacExtend",
            "c204407c8bdf7b22ee52210efe81972a937542df"
        ],
        [
            "apply (l5_6 B0' B' B0' A'); Cong; destruct (l5_12_a B0' B' A'); auto.",
            "VernacExtend",
            "29c94062184699e24aee0f4fd8396b050ac59407"
        ],
        [
            "destruct HLe3 as [Q' [Hbet9 Hcong9]].",
            "VernacExtend",
            "5ec16ccf0a7921cb574167224b3d6b946632ac30"
        ],
        [
            "assert (HBet10 : Bet A0 B0' A').",
            "VernacExtend",
            "70f2b07173a78adb3cba918ca3f05fc88ec20231"
        ],
        [
            "apply sac_distincts in HSac2; spliter; assert_diffs.",
            "VernacExtend",
            "ea920031332bfcb137cf03b6ca9eb4a3da9792b0"
        ],
        [
            "apply (outer_transitivity_between _ _ B'); Between.",
            "VernacExtend",
            "a9679d22ab3ed53c6d1ccdee8f7c23bc930e7e9b"
        ],
        [
            "apply (le1234_lt__lt _ _ A0 Q').",
            "VernacExtend",
            "d77028eda31520afe15770bf33b21fdb2d092451"
        ],
        [
            "apply (bet2_le2__le1245 _ _ A' _ _ A); eBetween.",
            "VernacExtend",
            "d791f25c541df97a23b6f3712629f69d3a87fa0f"
        ],
        [
            "apply cong__le; apply (cong_transitivity _ _ B0 B); Cong.",
            "VernacExtend",
            "018424db5ee00550390f19756d67bd01e471ef2b"
        ],
        [
            "assert (Cong B0' Q' A0 B0).",
            "VernacExtend",
            "ab72aa484a1ea93c8d116f172e2a85623b1fdaad"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (cong_transitivity _ _ A B); Cong.",
            "VernacExtend",
            "47274a49e702326326572f9bcf9547c3950f1186"
        ],
        [
            "apply (cong_transitivity _ _ A' B'); Cong.",
            "VernacExtend",
            "a3f5ebd5abe7e000b083a26d7727cbdb444c97a4"
        ],
        [
            "assert(Hcong10 : Cong B0' B' A' Q') by (apply (cong_transitivity _ _ B0 B); auto).",
            "VernacExtend",
            "d771589625ee02cae30cb57e14fea0e84c69039c"
        ],
        [
            "elim(bet_dec B0' Q' B').",
            "VernacExtend",
            "380960f58e1f0e9c1d1930fcf18e56a5251196c3"
        ],
        [
            "intro; apply (l4_3 _ _ B' _ _ Q'); Cong; eBetween.",
            "VernacExtend",
            "7d6124f9d86c7245a21c84d74d6392ebb70f8284"
        ],
        [
            "intro HNBet.",
            "VernacExtend",
            "41c69df9d629ab5d15019807e428e889d1fbb6ab"
        ],
        [
            "apply sac_distincts in HSac2; spliter; assert_diffs.",
            "VernacExtend",
            "ea920031332bfcb137cf03b6ca9eb4a3da9792b0"
        ],
        [
            "assert (Q' <> B0') by (intro; apply HNBet; Between).",
            "VernacExtend",
            "6d00fc462e5b1d24a1788cb17a5bd006b6a9d35b"
        ],
        [
            "assert (A' <> B0') by (intro; treat_equalities; auto).",
            "VernacExtend",
            "16b9ba48ee99013f5af0338094b0b260aeea3df6"
        ],
        [
            "assert (HOut3 : Out B0' B' Q').",
            "VernacExtend",
            "15eeebbfa25c405722675660d8e1356a7c67d9c4"
        ],
        [
            "apply (l6_7 _ _ A'); [| apply l6_6]; apply bet_out; Between.",
            "VernacExtend",
            "045240578e353a2c41b3b518bcb62b7ab5ace5dd"
        ],
        [
            "assert (Hbet11 : Bet B0' B' Q').",
            "VernacExtend",
            "664459af24616e5c7e8767585272b4a60b0fdc6c"
        ],
        [
            "apply out2__bet; auto.",
            "VernacExtend",
            "6423a45b459a2dce8e62ed4a0370b35cc024a5f6"
        ],
        [
            "apply not_bet_out; Col.",
            "VernacExtend",
            "3501e9718b4b6683af553ccb7072173b48c26cd1"
        ],
        [
            "apply (l2_11 _ B' _ _ Q'); Cong; eBetween.",
            "VernacExtend",
            "9662815019329aa6fa439c24ddc59ceb0214b1ec"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Hbet10 : Bet A0 D1 C) by eBetween.",
            "VernacExtend",
            "02702c76553ca487976a29c1573b6ade6e987c04"
        ],
        [
            "apply (cong2_lt__lt D1 C A0 C); Cong; [split|].",
            "VernacExtend",
            "6150217ec4e21936ec08c88fe8ed6388a1a3d2fe"
        ],
        [
            "destruct (l5_12_a A0 D1 C); auto.",
            "VernacExtend",
            "b9d70201e221c6e870d15fd87bb8bd9cc4640dee"
        ],
        [
            "intro; assert (D1 = A0) by (apply (between_cong C); Between; Cong); treat_equalities; Cong.",
            "VernacExtend",
            "ef9513892c97e32547ba98c91af27f8ee6529c02"
        ],
        [
            "apply (l2_11 _ C0 _ _ B0'); eBetween; apply cong_transitivity with A0 B0; Cong.",
            "VernacExtend",
            "2755ff86ccb15db09e6032f4d09f7313a32468e9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold archimedes_axiom in *.",
            "VernacExtend",
            "cddf27603c0ea08c2b0f9dd8737cdb4c0cbf3715"
        ],
        [
            "specialize Harchi with A0 D1 A0 C.",
            "VernacExtend",
            "7af3b6bbe954586b4f5f7ad3619bd5b1f727e998"
        ],
        [
            "destruct Harchi as [D [HG Hle]].",
            "VernacExtend",
            "8037602c3a3aeeaf98e394c46aa69e4c32a578a4"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "assert(HLt := HG).",
            "VernacExtend",
            "978495c7901ca9b1d5ba890f93e4e460f189f1c5"
        ],
        [
            "apply H in HLt.",
            "VernacExtend",
            "8ef58afec82aa393309a673f90a8868d3236b616"
        ],
        [
            "apply grad__le in HG.",
            "VernacExtend",
            "e121df31913afdf4fb4a37df8bece9428bf37aad"
        ],
        [
            "apply (le__nlt A0 C A0 D); auto.",
            "VernacExtend",
            "3256d356a14f47c669e9cd3144fabb510092bd32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_19 : archimedes_axiom -> forall A B C D, Saccheri A B C D -> ~ Obtuse A B C.",
            "VernacStartTheoremProof",
            "57d4e16296c90873d7348d629b2393910d81b971"
        ],
        [
            "intros archi A B C D HSac HObt.",
            "VernacExtend",
            "fe4b0868aea679a218a8a739b1a91892ec907bb8"
        ],
        [
            "assert (H := t22_18 archi _ _ _ _ (sac_perm _ _ _ _ HSac)).",
            "VernacExtend",
            "d9e5f66769c95431310478abcf142095e7b3f570"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply lt_left_comm; apply <- lt_sac__obtuse; auto.",
            "VernacExtend",
            "d50f90a3c0d7faae8b9dae87000fac29d2cd25ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma archi__obtuse_case_elimination : archimedes_axiom -> ~ hypothesis_of_obtuse_saccheri_quadrilaterals.",
            "VernacStartTheoremProof",
            "a7b33f9e1e127c1b19130aa6e597668ddeb2cc8a"
        ],
        [
            "intros archi obtuse.",
            "VernacExtend",
            "5a84a2cc447e2ff9ee6cb78eb1eb3cb8e5c9f005"
        ],
        [
            "destruct ex_saccheri as [A [B [C [D HSac]]]].",
            "VernacExtend",
            "905d4b4dced81a4a5bdb985503fb61a3a4d95535"
        ],
        [
            "absurd(Obtuse A B C).",
            "VernacExtend",
            "0e9b359c2e1f3cfafbb5e70bd68d62bab64fa041"
        ],
        [
            "apply t22_19 with D; trivial.",
            "VernacExtend",
            "2e24825dff59113c7dcedbd81125f9438e10b223"
        ],
        [
            "apply obtuse with D; trivial.",
            "VernacExtend",
            "99e6d16632ccfe7ae98a019fa81b9f17658d0333"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_23_aux : forall A B C M N L, ~ Col A M N -> Per B C A -> A <> C -> Midpoint M A B -> Per M N A -> Col A C N -> Midpoint M N L -> Bet A N C /\\ Lambert N L B C /\\ Cong B L A N.",
            "VernacStartTheoremProof",
            "11962ccd13195dd5828602597e3927de11022611"
        ],
        [
            "intros A B C M N L HNCol HPerC HAC HM HPerN HColN HN.",
            "VernacExtend",
            "f10aaeb760336b1418c15c7a861cb8afe29b4b07"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HBet : Bet A N C) by (apply per23_preserves_bet with M B; Perp; Col; Between).",
            "VernacExtend",
            "d48f3b03d88a741f596a98ce956d057bd06e1091"
        ],
        [
            "destruct (l11_49 A M N B M L) as [HCong1 [HCongA1 HCongA2]]; auto with cong.",
            "VernacExtend",
            "809f2e41b64c367417d54f7f260e796d42798892"
        ],
        [
            "apply l11_14; Between.",
            "VernacExtend",
            "c65ea70041c734561692dd73c04641732ebaea96"
        ],
        [
            "assert(B <> L) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "a31e8732564cd9ee703a33f7c1ae5de6c2549721"
        ],
        [
            "repeat split; Cong.",
            "VernacExtend",
            "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; treat_equalities; apply HNCol; ColR.",
            "VernacExtend",
            "44f8c9f75d702253dca4a094df5711a50ee356e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; treat_equalities; apply H6.",
            "VernacExtend",
            "90e7b7f7d686e159483a1f057eb7a1ecac9a4e3f"
        ],
        [
            "apply (l6_21 A M N M); Col.",
            "VernacExtend",
            "c3d0f1fcdec8171d7184b6b6cf5cb9e44419b2a9"
        ],
        [
            "apply col_permutation_3, cop_per2__col with A; Col; Cop.",
            "VernacExtend",
            "609bd83aa61a6fd358c2083a82e791b8b7d900ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply per_col with A; Col.",
            "VernacExtend",
            "a907fcc7f364707a1ca10b2ce54bb19f3f573991"
        ],
        [
            "apply l8_2, per_col with M; Col; Perp.",
            "VernacExtend",
            "04ce38e85c0b0da35558c1015fe260bb489c9a57"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l8_2, per_col with A; Col.",
            "VernacExtend",
            "bf328de62362fd454ddfe7568da117bcb1313784"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l11_17 with M N A; auto.",
            "VernacExtend",
            "9a1dc6f21cf5aeccfbbf200570bd1e3f31764625"
        ],
        [
            "apply (out_conga M N A M L B); auto; try (apply out_trivial; auto).",
            "VernacExtend",
            "42e27adf891c276c1d3200d21e71b9f3c2a83310"
        ],
        [
            "apply bet_out; Between.",
            "VernacExtend",
            "a53328ff9618e56bf07e5e99b92030d37b76bae5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply coplanar_perm_16, col_cop__cop with M; Col.",
            "VernacExtend",
            "3c0fc9d5831e9724bf4c203543aa1d99d86d3427"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with A; Col; Cop.",
            "VernacExtend",
            "64d4070abfa9943427cf2fda512442f877ced500"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_23 : ~ hypothesis_of_obtuse_saccheri_quadrilaterals -> forall A B C M N L, ~ Col A M N -> Per B C A -> A <> C -> Midpoint M A B -> Per M N A -> Col A C N -> Midpoint M N L -> Bet A N C /\\ Le N C A N /\\ Le L N B C.",
            "VernacStartTheoremProof",
            "9c86089a90cec8989fc2761fb6d5cd987a3a1d5b"
        ],
        [
            "intros HNob A B C M N L HNCol HPerC HAC HM HPerN HColN HN.",
            "VernacExtend",
            "2ca82f7264a4be802275d3b7e7b5df1ced7da94b"
        ],
        [
            "destruct (t22_23_aux A B C M N L) as [HBet [HLam HCong]]; auto.",
            "VernacExtend",
            "de0dec60a9a45f75139305368c5d5369875b1e94"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert (HLBC : ~ Obtuse L B C) by (intro; apply HNob, (lam_obtuse__oah N L B C); trivial).",
            "VernacExtend",
            "3a1cf8cbf3451a5f4bc6926de4a9ed887f64af2e"
        ],
        [
            "assert (Hos1 : OS N L B C) by (apply lam__os; trivial).",
            "VernacExtend",
            "2ba583319a238dc41be54af68c29abc8c86f95bb"
        ],
        [
            "assert (Hos2 : OS N C B L) by (apply lam__os, lam_perm; trivial).",
            "VernacExtend",
            "889a7afab9981e67a28f8edc368824842d20d927"
        ],
        [
            "unfold Lambert in HLam; spliter.",
            "VernacExtend",
            "1566da249536b1432af8e56d14b8bd91380f229e"
        ],
        [
            "destruct (angle_partition L B C) as [HAcute | [HPer | HObtuse]]; trivial; [ | | exfalso; auto].",
            "VernacExtend",
            "02a62df78c88bfbd106f43421e65331acbccc854"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; apply lt__le; [apply (cong2_lt__lt N C B L); Cong | ].",
            "VernacExtend",
            "99ab7c0718a4f05a88845a331bf5ec43f21471fc"
        ],
        [
            "apply lta_os_per2__lt; Perp; Side; apply lta_left_comm, acute_per__lta; auto.",
            "VernacExtend",
            "35245b798f98ba46b429ce0dace1c82e625c8827"
        ],
        [
            "apply lt_left_comm, lta_os_per2__lt; Side; apply acute_per__lta; auto.",
            "VernacExtend",
            "e23d24499b37b691b340405df0a78e45d8527295"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; apply cong__le; [apply cong_transitivity with B L; trivial | apply cong_left_commutativity]; apply conga_per2_os__cong; Perp; Side; apply l11_16; Perp.",
            "VernacExtend",
            "5efeb55cdbd7d5ab4942268fe91f59b31be40938"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_24_aux : ~ hypothesis_of_obtuse_saccheri_quadrilaterals -> forall A B0 B00 C0 B C E, ~ Col A B0 C0 -> Perp A C0 B0 C0 -> B0 = B00 -> GradExp2 A B0 B B00 C0 E -> Perp A C0 B C -> Col A C0 C -> Le B0 E B C.",
            "VernacStartTheoremProof",
            "32d1c085ba6d926a1bc12b99e8da754e489d7f1c"
        ],
        [
            "intros HNob A B0 B00 C0 B C E HNCol HPerp0 Heq HGE.",
            "VernacExtend",
            "5c0c2dd84f6ff1d375b09379c432ae2631cc2a7c"
        ],
        [
            "revert C.",
            "VernacExtend",
            "f3d763b81721ae85e29e00334720e34f24b17ddc"
        ],
        [
            "induction HGE; rename B into B0; rename D into B00; rename E into C0; subst B00.",
            "VernacExtend",
            "6ab058ad02dee0e934b34ec9184ac5ea33c3e1f8"
        ],
        [
            "intros C HPerp HCol; assert (C = C0) by (apply (l8_18_uniqueness A C0 B0); Col); subst C; Le.",
            "VernacExtend",
            "c1ad0b878510d6b929d81b5ac0db0346b52a3b6f"
        ],
        [
            "rename C into B; rename C' into B'; rename F into E; rename F' into E'.",
            "VernacExtend",
            "c2bc5dbf0134a5669117edfac03c58df54f7f44f"
        ],
        [
            "intros C' HPerp' HCol'.",
            "VernacExtend",
            "07f9835f6cda5b19e26750b0912e177bb8dc9520"
        ],
        [
            "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE.",
            "VernacExtend",
            "f87653e704fe562b822268751ad45d96e2535c9d"
        ],
        [
            "destruct (l8_18_existence A C0 B) as [C [HCol HPerp]].",
            "VernacExtend",
            "1a33561b69b5ec903353c7c8897a18e9694fccf2"
        ],
        [
            "intro; assert_diffs; apply HNCol; ColR.",
            "VernacExtend",
            "a03dc96c5c053be6781752e45c839aef5b86ba17"
        ],
        [
            "assert (HLe : Le B0 E B C) by (apply IHHGE; trivial).",
            "VernacExtend",
            "e3aa95933010767febed056c66b191b6e7e8658a"
        ],
        [
            "clear IHHGE.",
            "VernacExtend",
            "875dead6d56152de69f2b44a438f9bccc6dee23e"
        ],
        [
            "destruct (symmetric_point_construction C B) as [D HD].",
            "VernacExtend",
            "37c048b2f2b6fcb317e2e0dd834569fd2dceb05f"
        ],
        [
            "apply le_transitivity with D C.",
            "VernacExtend",
            "04ba1cc4e643f597ffb2b600782006de5fee899e"
        ],
        [
            "apply bet2_le2__le1346 with E B; Between; apply (l5_6 B0 E B C); auto with cong.",
            "VernacExtend",
            "993c5231b8d9548e93980c32a50482d99a397141"
        ],
        [
            "assert (HAC : A <> C).",
            "VernacExtend",
            "debb1593a4e59ce27a3cf800ade8361206330a1d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; subst C; assert_diffs; assert (A = C0); auto.",
            "VernacExtend",
            "033f9b662f1a8ce516286ae8cd185857ec96fdb5"
        ],
        [
            "apply (l8_18_uniqueness A C0 B0); Col.",
            "VernacExtend",
            "a1f792641278bb92611cd90b261b9e02e005223e"
        ],
        [
            "apply perp_right_comm, perp_col1 with B; Perp; Col.",
            "VernacExtend",
            "f208837ccfde291438f29d2c2be949934f92de1b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HAC' : A <> C').",
            "VernacExtend",
            "b5b59fb7aa38f2a378bc1db332b11f98fc61e0ca"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; subst C'; assert_diffs; assert (A = C0); auto.",
            "VernacExtend",
            "664051e2b5cd2814e54d6b5c9146579d2b0b0ddc"
        ],
        [
            "apply (l8_18_uniqueness A C0 B0); Col.",
            "VernacExtend",
            "a1f792641278bb92611cd90b261b9e02e005223e"
        ],
        [
            "apply perp_right_comm, perp_col1 with B'; Perp; ColR.",
            "VernacExtend",
            "094a4468a7d4c42d3e64704761a9616918a20f8a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HPer : Per A C B) by (apply perp_per_1; auto; apply perp_left_comm, perp_col with C0; trivial).",
            "VernacExtend",
            "d9b811e7d29a83087997a644b574acaf8812d25e"
        ],
        [
            "destruct (t22_23 HNob A B' C' B C D) as [_ []]; Perp; assert_diffs.",
            "VernacExtend",
            "06678485d56d495116f75d39d4a85ecb166b7657"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply per_not_col in HPer; Col.",
            "VernacExtend",
            "8f6f51e0a984c0be7bc404427269475e411de4d5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply perp_per_1; auto; apply perp_col1 with C0; Perp.",
            "VernacExtend",
            "52f9b9e285730cd1e708c4c95b750c3be05aff50"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_24_aux1 : forall A B0 C0 E, ~ Col A B0 C0 -> Perp A C0 B0 C0 -> GradExp B0 C0 E -> exists B C, GradExp2 A B0 B B0 C0 E /\\ Perp A C0 B C /\\ Col A C0 C.",
            "VernacStartTheoremProof",
            "d222695e06a0495f5d0315dd00b590901bf0e3fe"
        ],
        [
            "intros A B0 C0 E HNCol HPerp0 HGE.",
            "VernacExtend",
            "3aac78e3966f0af1624cd88a0672785d0bde8c59"
        ],
        [
            "induction HGE; rename A0 into B0; rename B into C0.",
            "VernacExtend",
            "6ceacdfdd10631ddd51be451cb82344dca938228"
        ],
        [
            "exists B0; exists C0; repeat (split; Col); apply gradexp2_init.",
            "VernacExtend",
            "7ff5455716777558ce94a04a726852f8b38c5aa9"
        ],
        [
            "rename C into E; rename C' into E'.",
            "VernacExtend",
            "95f0b7ea7c963f2a6d589d15370be2d83b700f91"
        ],
        [
            "destruct IHHGE as [B [C [HGE2 [HPerp HCol]]]]; trivial.",
            "VernacExtend",
            "7e38e8b7232b8fad4065f39c2921db02be214c12"
        ],
        [
            "destruct (segment_construction A B A B) as [B' [HBet HCong]].",
            "VernacExtend",
            "24a508b8aa6631102b555d413a2d0527f6912f74"
        ],
        [
            "exists B'.",
            "VernacExtend",
            "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
        ],
        [
            "destruct (l8_18_existence A C0 B') as [C' [HCol' HPerp']].",
            "VernacExtend",
            "83de7a7ed065bffb44df563d2c5a159e170ff73f"
        ],
        [
            "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE2; intro; assert_diffs; apply HNCol; ColR.",
            "VernacExtend",
            "0ebe19c35d4466e5058270e08aa08bb2525825de"
        ],
        [
            "exists C'; repeat (split; trivial); apply gradexp2_stab with B E; Cong.",
            "VernacExtend",
            "b257b20e3848a7787d30bb988ac9e9a433c22db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma t22_24 : archimedes_axiom -> aristotle_s_axiom.",
            "VernacStartTheoremProof",
            "487ed157a3c2e0ad003611c12903c793b79141cc"
        ],
        [
            "intros Harchi P Q D A B0 HNCol HACute0.",
            "VernacExtend",
            "5f4083e339bda24452b0bfd570cb4f7b04950fa4"
        ],
        [
            "destruct (l8_18_existence A D B0) as [C0 [HColD HPerpD]]; Col.",
            "VernacExtend",
            "7a5a85a689abf89c6cb8e8e92035c1eb69a0a07f"
        ],
        [
            "assert (HAC0 : A <> C0) by (intro; subst C0; apply (acute_not_per D A B0); Perp).",
            "VernacExtend",
            "a75036cd590f1b3d52572667fd30439b6ff564aa"
        ],
        [
            "assert (HNCol0 : ~ Col A B0 C0) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "abce235ba89a86384c22f980c242783bb79af406"
        ],
        [
            "assert (HPerp0 := perp_col A D B0 C0 C0 HAC0 HPerpD HColD).",
            "VernacExtend",
            "729b2ef87aebd717f6510e2f6635fe687701cb1d"
        ],
        [
            "elim (eq_dec_points P Q); intro HPQ.",
            "VernacExtend",
            "433f74978c0f8fd0529da8c734280b49b7ad4d6d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst Q; exists C0; exists B0; split; assert_diffs.",
            "VernacExtend",
            "e1d922312b471182598149ed3b9ac2a1955095e8"
        ],
        [
            "apply l6_6, acute_col_perp__out with B0; trivial; apply acute_sym; trivial.",
            "VernacExtend",
            "65a6c10b248ea67f1e797b39c16344dd3233dfa9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "repeat split; Perp; Le.",
            "VernacExtend",
            "149e10a70ade39d2d95e566259a2bb5b6975684e"
        ],
        [
            "intro; treat_equalities; auto.",
            "VernacExtend",
            "49d08658ff9de93b3f407cddb5aac4beb44392c9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (segment_construction P Q P Q) as [Q' [HBetQ HCongQ]].",
            "VernacExtend",
            "97d5fa32f68921b823eee0c19afa9529f1d10755"
        ],
        [
            "destruct (reach__ex_gradexp_le B0 C0 P Q') as [E [HGE HLe]].",
            "VernacExtend",
            "f22f4d6f30176f064cad21dad4793e256d75324f"
        ],
        [
            "assert_diffs; apply Harchi; trivial.",
            "VernacExtend",
            "4d2d31e6b5d10245efb4debb781e9d986c022849"
        ],
        [
            "destruct (t22_24_aux1 A B0 C0 E) as [B [C [HGE2 [HPerp HCol]]]]; trivial.",
            "VernacExtend",
            "ff2c7ea78a72764695f24945e02533a69ea3704e"
        ],
        [
            "assert(HOut : Out A B0 B).",
            "VernacExtend",
            "72e5b4ba17fd6ff022c186d4758e190e3f4093b4"
        ],
        [
            "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE2; assert_diffs; apply bet_out; auto.",
            "VernacExtend",
            "7d3a9014844c4ff2ada7da6bffc12f47e53ac3c6"
        ],
        [
            "assert(HAcute : Acute D A B).",
            "VernacExtend",
            "d08d3527ea2709d3c4733be5d4717ae36c51bc5b"
        ],
        [
            "apply (acute_conga__acute D A B0); trivial.",
            "VernacExtend",
            "b74cc4db130df150432b9c9beacb22f2668f346e"
        ],
        [
            "assert_diffs; apply (out_conga D A B0 D A B0); CongA; apply out_trivial; auto.",
            "VernacExtend",
            "bf4aa54d4f6661b36cb926aaac9f039fc25be5d4"
        ],
        [
            "assert (HAC : A <> C) .",
            "VernacExtend",
            "debb1593a4e59ce27a3cf800ade8361206330a1d"
        ],
        [
            "intro; subst C; assert_diffs; apply (acute_not_per D A B); trivial.",
            "VernacExtend",
            "c6aa4d95d3f0a369d16f4890260121bafad81f1b"
        ],
        [
            "apply perp_per_1; auto; apply perp_col with C0; Col.",
            "VernacExtend",
            "d73347c856df5da62ce7bee73eb27128c7d1d666"
        ],
        [
            "exists C; exists B; split.",
            "VernacExtend",
            "6f7463c6a17c4986eea7a568d2830203520b0d9b"
        ],
        [
            "assert_diffs; apply l6_6, acute_col_perp__out with B; [apply acute_sym; trivial|ColR|apply perp_col with C0; Col].",
            "VernacExtend",
            "e5dcfd93862f06df86c37955203414cbbdbf9ad2"
        ],
        [
            "split; trivial; split.",
            "VernacExtend",
            "4bb1431087a0a1ca27a8f02a93961c6c128a8f5e"
        ],
        [
            "apply perp_per_1; auto; apply perp_left_comm, perp_col with C0; trivial.",
            "VernacExtend",
            "1218866973ef8b470e22e7005e17fef8bd57bc7d"
        ],
        [
            "apply le3456_lt__lt with P Q'.",
            "VernacExtend",
            "3d5ad18e61acfc691d87019462cab040648eccd4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bet__le1213; trivial.",
            "VernacExtend",
            "0b33ae4854fabc825a3488dd265a782eb5bb99e2"
        ],
        [
            "intro; assert (Q = Q'); treat_equalities; auto.",
            "VernacExtend",
            "6e36f6b01f95a77b55a101cd7a543ffb423f365d"
        ],
        [
            "apply between_cong with P; trivial.",
            "VernacExtend",
            "e85cd1b6397dd528ce7a5edcbee604748cc24182"
        ],
        [
            "apply le_transitivity with B0 E; trivial.",
            "VernacExtend",
            "68f49303f2de80dda2ae3c6f097a1d08fe1d0d83"
        ],
        [
            "apply le_right_comm.",
            "VernacExtend",
            "53069d9e13cef25115227cddb6ac5ee74a06e4d4"
        ],
        [
            "apply t22_24_aux with A B0 C0; trivial.",
            "VernacExtend",
            "cae6749bfb6f822c81cea4ddac683d2b31d14d55"
        ],
        [
            "apply archi__obtuse_case_elimination; trivial.",
            "VernacExtend",
            "a729c0d80e5db2c078915ab44b301099442baccc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Archimedes.",
            "VernacEndSegment",
            "44f9b16ab563c625e14bf66ac2157647b94d5dc2"
        ]
    ],
    "proofs": [
        {
            "name": "t22_18_aux1",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros A0 A1 E0 E1 D1 D HBet HCong HG.",
                        "VernacExtend",
                        "e7425d7092f636009895f649640b0d9041f2b969"
                    ]
                },
                {
                    "command": [
                        "induction HG.",
                        "VernacExtend",
                        "04d2b23b1468b8bb5055485d36e92fc81342c1cb"
                    ]
                },
                {
                    "command": [
                        "exists A1; exists E1; repeat split; auto; apply grad2_init.",
                        "VernacExtend",
                        "f54c5a88b6c0c2dba5bd172f13150c39af27d884"
                    ]
                },
                {
                    "command": [
                        "rename A into A0.",
                        "VernacExtend",
                        "a5beeeb83cf1de373fbf603792072fcff69de44c"
                    ]
                },
                {
                    "command": [
                        "rename B into C1.",
                        "VernacExtend",
                        "fba23b29b9923e9688ebc307f32684667f5ea829"
                    ]
                },
                {
                    "command": [
                        "destruct IHHG as [A [E [HG2 [HCong2 HBet2]]]]; auto.",
                        "VernacExtend",
                        "531389e3fc4e32737855440b8dc60d4c00f1d25a"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A0 A A0 A1) as [A' [HBet3 HCong3]].",
                        "VernacExtend",
                        "63a259d23cfcd2f65025ebf216d860aaf2b59e14"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction E0 E E0 E1) as [E' [HBet4 HCong4]].",
                        "VernacExtend",
                        "28b8f0e89eac0fecdcdcb5b758c7ae55805937e6"
                    ]
                },
                {
                    "command": [
                        "exists A'; exists E'.",
                        "VernacExtend",
                        "a4629fbac6de9d5feae703e11c802445d9137cfa"
                    ]
                },
                {
                    "command": [
                        "assert(HBet5 : Bet A0 C' A').",
                        "VernacExtend",
                        "54cc66e9c378b6518c3c5ee1f294d455f3f4a640"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert(HBet5 : Bet A0 C A') by eBetween.",
                        "VernacExtend",
                        "240080a048866c60e571d089dda6c2b94081de3b"
                    ]
                },
                {
                    "command": [
                        "assert(Bet C C' A'); [|eBetween].",
                        "VernacExtend",
                        "558239d04ca16c0a82c59474a09e245b5c893223"
                    ]
                },
                {
                    "command": [
                        "apply grad2__grad123 in HG2.",
                        "VernacExtend",
                        "654c242ccfc45974dd56b0863d700b223e93e5be"
                    ]
                },
                {
                    "command": [
                        "apply grad__bet in HG.",
                        "VernacExtend",
                        "8355ef4487715b5ecc6884cdac19fed7eaf0842f"
                    ]
                },
                {
                    "command": [
                        "apply grad__bet in HG2.",
                        "VernacExtend",
                        "b348abebdd3fa87fb0d54a0f7921e24c33c40dba"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A0 C).",
                        "VernacExtend",
                        "94f72fee710e6531d80887bc903f128d42e6b042"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; Between.",
                        "VernacExtend",
                        "7cdba8d37d67924d6d740369a0a213db27b5d675"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points C C').",
                        "VernacExtend",
                        "3f515a33be2d32d321c6adcb487c93c2039a4120"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; Between.",
                        "VernacExtend",
                        "7cdba8d37d67924d6d740369a0a213db27b5d675"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim(eq_dec_points A' C).",
                        "VernacExtend",
                        "f355069faa65775381615ac0dc5676399e1939b2"
                    ]
                },
                {
                    "command": [
                        "intro; subst A'; assert (A=C) by (apply (between_equality _ _ A0); Between); treat_equalities; Between.",
                        "VernacExtend",
                        "f17688d1af1d8f0cdefdcd9473b06f1fbbd8bc22"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1.",
                        "VernacExtend",
                        "f187cdac6d235e831042e03fa45429cf965f0b0d"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_2 C' A' A0 C); Between.",
                        "VernacExtend",
                        "6b2e7da80a88e4212ae2e8e6e012cc5634694ca5"
                    ]
                },
                {
                    "command": [
                        "apply (le_transitivity _ _ A A').",
                        "VernacExtend",
                        "530f23796c77d4af87848faf1470efacefbca076"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 A0 C1 A0 A1); Cong; exists C1; split; Cong.",
                        "VernacExtend",
                        "ced6052f118e339b262e06968a3e763d77f7f061"
                    ]
                },
                {
                    "command": [
                        "destruct(l5_12_a C A A'); eBetween.",
                        "VernacExtend",
                        "bdfd42a743716a40b0a0bfe467368d58b341aa74"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "apply grad2_stab with A E; Cong.",
                        "VernacExtend",
                        "d37445def555d9f1752fb84b9d0b94870206fd7f"
                    ]
                },
                {
                    "command": [
                        "assert (HD : Le E0 E1 A A').",
                        "VernacExtend",
                        "3ceb247a9c9d40494bcca4f9722deb4a7f0b6ac9"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 E0 E1 A1 A0); Cong; exists C1; split; Between.",
                        "VernacExtend",
                        "a9894ca8509ee352b83825b4095bd04cf30bf672"
                    ]
                },
                {
                    "command": [
                        "destruct HD as [D [HBet6 HCong6]].",
                        "VernacExtend",
                        "1caa32bafee2e876b327c96c6adf940a3f6361b6"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ C D).",
                        "VernacExtend",
                        "1ec80621d71c6c0364351ccb78753e28175596d6"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ E _ _ A); Cong; eBetween; apply cong_transitivity with E0 E1; trivial.",
                        "VernacExtend",
                        "ccef1aedf418a4a3eb74ce592dd64db80396ad80"
                    ]
                },
                {
                    "command": [
                        "assert (Bet C D A') by eBetween.",
                        "VernacExtend",
                        "f61d842219ee230b4e3287a9d90113ff3e621a5c"
                    ]
                },
                {
                    "command": [
                        "apply (l4_3 _ _ A' _ _ C); Cong; eBetween.",
                        "VernacExtend",
                        "f62b522027a17df29c78891e8fff27f805ada34b"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ A0 C1); Cong.",
                        "VernacExtend",
                        "0d7ba950486deefce7993e549a2d9cf68caf7728"
                    ]
                },
                {
                    "command": [
                        "apply cong_left_commutativity; apply (l4_3 _ _ A _ _ A1); Between; Cong.",
                        "VernacExtend",
                        "952237897078e4ed0227bdddf00fcc7d7f4d0295"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with E0 E1; Cong.",
                        "VernacExtend",
                        "8ec920434b70b4acd0a882787a0634b2ca3b1dad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_18_aux2",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros A0 A1 B0 B1 A B E HSac1 HG.",
                        "VernacExtend",
                        "5900b315a8a52681a86d524e9d176a291fb41eec"
                    ]
                },
                {
                    "command": [
                        "revert B.",
                        "VernacExtend",
                        "5c9d43f45da1ffaa2f789c7e6157fec6bfffcd04"
                    ]
                },
                {
                    "command": [
                        "induction HG; rename A into A0; rename B into A1; rename D into B0; rename E into B1.",
                        "VernacExtend",
                        "5185b0db5bfc5d8b3260ee87f2731ea5de6eb5e8"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros B HSac.",
                        "VernacExtend",
                        "4bb4730108724e8ff73c6fb3688869b4a0cc51dc"
                    ]
                },
                {
                    "command": [
                        "assert(B = B1); [|subst B; Le].",
                        "VernacExtend",
                        "eb669bd6cda042827fe7e08da5be7700c29dc119"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac1); unfold Saccheri in *; spliter.",
                        "VernacExtend",
                        "2edd1aef38edc4472de7ef138b7db279f47764cb"
                    ]
                },
                {
                    "command": [
                        "apply (l6_11_uniqueness A1 A0 B0 B1); Cong; [|apply out_trivial; auto].",
                        "VernacExtend",
                        "9542d10f678212bb85bbe8ddbc8faf80aa120173"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side_out _ A0).",
                        "VernacExtend",
                        "684a431db402ae4a714a77f38eeb496ebe1b3a1d"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_2, cop_per2__col with A0; Perp.",
                        "VernacExtend",
                        "58f1e74dd7a90773c794a5a1d42605fea3337db0"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_3, coplanar_trans_1 with B0; Cop.",
                        "VernacExtend",
                        "6d0547c454d3fb0e384940095058ade49cdbb4f3"
                    ]
                },
                {
                    "command": [
                        "apply not_col_permutation_2, one_side_not_col123 with B1; assumption.",
                        "VernacExtend",
                        "e18923207c83ba918824fa31629f7bb5d30b0397"
                    ]
                },
                {
                    "command": [
                        "apply (one_side_transitivity _ _ _ B0); Side.",
                        "VernacExtend",
                        "04745c8d9ab925e52363a908d98134fd0791d14f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rename C into A; rename F into E; rename C' into A'; rename F' into E'.",
                        "VernacExtend",
                        "9d260202c7ac4f1402ae084d1d5ff3969a3c3596"
                    ]
                },
                {
                    "command": [
                        "intros B' HSac'.",
                        "VernacExtend",
                        "8149e5c522f98b1378888164bf6fc08e12c4480b"
                    ]
                },
                {
                    "command": [
                        "assert (A0 <> A).",
                        "VernacExtend",
                        "da41378f029c92cc5993610fe17783b1b0645497"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities.",
                        "VernacExtend",
                        "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
                    ]
                },
                {
                    "command": [
                        "assert (A0 = A1) by (apply between_identity, grad__bet, (grad2__grad123 _ _ _ B0 B1 E); auto).",
                        "VernacExtend",
                        "c394c8e9a0b8c6ec9333d0cbd22e32c194d36f08"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "apply sac_distincts in HSac1; spliter; auto.",
                        "VernacExtend",
                        "27ae5c008525366184003282aa8d682e4bb8ef10"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HB : exists B, Saccheri A0 B0 B A).",
                        "VernacExtend",
                        "635c7d9f0ad953f1b68a92736fc0b4c2b31b74e1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "clear dependent A'; clear dependent B'; clear IHHG.",
                        "VernacExtend",
                        "8e01c3213b63a387cf31b80c7047a7e235ae8469"
                    ]
                },
                {
                    "command": [
                        "apply grad2__grad123 in HG.",
                        "VernacExtend",
                        "0822959996cea10b6ff8ea8f5dec2f94f836376c"
                    ]
                },
                {
                    "command": [
                        "apply grad__bet in HG.",
                        "VernacExtend",
                        "8355ef4487715b5ecc6884cdac19fed7eaf0842f"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A0 A1 A B0) as [P [HPerp HOS]]; Col.",
                        "VernacExtend",
                        "75dbe5e96f31e40c61517d69e9dfe3d8acfdf13e"
                    ]
                },
                {
                    "command": [
                        "assert (HH := sac__ncol124 A0 B0 B1 A1); Col.",
                        "VernacExtend",
                        "96439abc6c6d699ec730d8783951ab941fedb23c"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence A A0 B0 P) as [B [HOut Hcong5]].",
                        "VernacExtend",
                        "2852588888f423e3c4ae8e6983b17c335c09326b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac1); spliter; auto.",
                        "VernacExtend",
                        "5d85bf52d12bee23dcb936250087e3e2c82ef8d4"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "unfold Saccheri in *; spliter; assert_diffs.",
                        "VernacExtend",
                        "af475782e07d3e0c15abbdc549e29fbd4c9d29ed"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (per_col _ _ A1); Col.",
                        "VernacExtend",
                        "ee9e7ce3d3ec5a9d9929801c914de9e6ef267a81"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; auto.",
                        "VernacExtend",
                        "ce73316dda57149f341db74d2f4483c17f80ce14"
                    ]
                },
                {
                    "command": [
                        "apply (perp_col1 _ _ _ P); Col.",
                        "VernacExtend",
                        "9bfc7545575033855255d8a901c83be329642bd3"
                    ]
                },
                {
                    "command": [
                        "apply perp_comm; apply (perp_col _ A1); Col.",
                        "VernacExtend",
                        "a87977da077203df7dbd17e75b2ebf96ec7f53fa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply (out_out_one_side _ _ _ P); [|apply l6_6; auto].",
                        "VernacExtend",
                        "2cb349fe3cfd083dbd5e603b211e1e490bc8ef6f"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side _ A1); Col.",
                        "VernacExtend",
                        "fd10138452eea7548a6b10f96dbfc5960f589c28"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HB as [B HSac].",
                        "VernacExtend",
                        "b2567441dbd3f760a1567cb0b9577c8c43ffdce1"
                    ]
                },
                {
                    "command": [
                        "assert (HLe := HSac).",
                        "VernacExtend",
                        "fcd5fe9d35a3c039faa8b6330b39b53de0d80013"
                    ]
                },
                {
                    "command": [
                        "apply IHHG in HLe; auto.",
                        "VernacExtend",
                        "f9da5336475ebf9e3d36f27e134ab62c8823ba1a"
                    ]
                },
                {
                    "command": [
                        "clear IHHG.",
                        "VernacExtend",
                        "a7304be4726915bb939893179c1ef7fd083ebad7"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction B0 B E E') as [C [HBet HCong]].",
                        "VernacExtend",
                        "88c15766492131dacf7a70d349ad3998467848a4"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B0 B1 B B').",
                        "VernacExtend",
                        "7207670f67e53c1ac968ebc67e63930f6882776b"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_sac2__cong A0 B0 B1 A1 A _ _ A'); auto; [|unfold Saccheri in *; spliter; Cong].",
                        "VernacExtend",
                        "22b900b4cc24b34396f334527e6b935d36b3be38"
                    ]
                },
                {
                    "command": [
                        "apply cop_sac2__sac with A0 B0; Cop.",
                        "VernacExtend",
                        "a1b661ed704e546cd1592a053c11ff166c36d348"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply sac_distincts in HSac1; spliter; auto.",
                        "VernacExtend",
                        "f86aeda5361e399899ab2f18371fd49a3f2b28e0"
                    ]
                },
                {
                    "command": [
                        "apply (le_transitivity _ _ B0 C).",
                        "VernacExtend",
                        "5b68c2d3e24a393c6366b74302eb645a8b1a94e5"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_inequality B0 B B' C); trivial.",
                        "VernacExtend",
                        "21ff578977a1060495d0f97ef8dfa65e52afbae9"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with E E'; Cong.",
                        "VernacExtend",
                        "f9be4fe74453a8e72e0ddd6dbf3479e4ed0a3a5b"
                    ]
                },
                {
                    "command": [
                        "apply cong_transitivity with B0 B1; Cong.",
                        "VernacExtend",
                        "cf39ff6f6880e570142122d763b9dae755a94245"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le1346 _ B _ _ E); Le.",
                        "VernacExtend",
                        "77acf5b0d204644509bc5707a7cdb8e619d2a802"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_18",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros Harchi A0 B0 B1 A1 HSac.",
                        "VernacExtend",
                        "b9fbee19943ab1cc71cdd88ef2a906b0cf7e6fdb"
                    ]
                },
                {
                    "command": [
                        "intro Hlt.",
                        "VernacExtend",
                        "89bc965d9cbbc603093e0bb8e35e9414141fded3"
                    ]
                },
                {
                    "command": [
                        "destruct Hlt as [Hle HNcong].",
                        "VernacExtend",
                        "aaa77c74cf39fffce28303ff913c16cfd261962e"
                    ]
                },
                {
                    "command": [
                        "destruct Hle as [D1 [Hbet Hcong]].",
                        "VernacExtend",
                        "cf1d7350cf954768b6e59f9757c792539b4f29c3"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A0 D1 A0 B0) as [C0 [Hbet2 Hcong2]].",
                        "VernacExtend",
                        "62eab6c01a5856030c28e85f3ff13e45ce397ab7"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A0 C0 A0 B0) as [C [Hbet3 Hcong3]].",
                        "VernacExtend",
                        "3db35abbf2292415f0b9902a0503c7c81e9359ad"
                    ]
                },
                {
                    "command": [
                        "assert(H : forall D, Grad A0 D1 D -> Lt A0 D A0 C).",
                        "VernacExtend",
                        "12e116fbe8e2b61f3134bd92d26f074586381030"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros D HG.",
                        "VernacExtend",
                        "e82b6cc8b0635b296c30e3224ff03d520ed0c31e"
                    ]
                },
                {
                    "command": [
                        "destruct (t22_18_aux1 A0 A1 B0 B1 D1 D) as [A [E [HG2 [Hcong4 Hbet4]]]]; Between.",
                        "VernacExtend",
                        "174ec638567872ba5362e8efb82057bd8fad35a8"
                    ]
                },
                {
                    "command": [
                        "assert (Hbet5 := grad2__grad123 A0 A1 A B0 B1 E HG2).",
                        "VernacExtend",
                        "4cbc25265db78c5879973e52fc1b12a71ebce612"
                    ]
                },
                {
                    "command": [
                        "apply grad__bet in Hbet5.",
                        "VernacExtend",
                        "9f74157ac1f8991625d005b02e8663c01b171a3c"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 A0 A1 A B0) as [P [HPerp HOS]].",
                        "VernacExtend",
                        "e82d326b9bc351466747a093c889a6dc609b5638"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert (H := sac__ncol124 A0 B0 B1 A1); Col.",
                        "VernacExtend",
                        "0216058ea12e2c9af026d1830bc31f57d4cba82b"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence A A0 B0 P) as [B [HOut Hcong5]].",
                        "VernacExtend",
                        "2852588888f423e3c4ae8e6983b17c335c09326b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; auto.",
                        "VernacExtend",
                        "1006e9c64e7ac3294ce0e5234b031708b1ebe9c7"
                    ]
                },
                {
                    "command": [
                        "assert(Hdiff := sac_distincts A0 B0 B1 A1 HSac); spliter; auto.",
                        "VernacExtend",
                        "cc4b7cfc64a19108b9050e330a36bbbfa2338141"
                    ]
                },
                {
                    "command": [
                        "assert(HSac2 : Saccheri A0 B0 B A).",
                        "VernacExtend",
                        "b6a129f1a8fbe994b2c4ad2510eabb919db5d992"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "unfold Saccheri in *; spliter; assert_diffs; assert(A0 <> A) by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "f48b8d45e96c8adfb1822b42b31c886b5e86eced"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (per_col _ _ A1); Col.",
                        "VernacExtend",
                        "ee9e7ce3d3ec5a9d9929801c914de9e6ef267a81"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_2; auto.",
                        "VernacExtend",
                        "ce73316dda57149f341db74d2f4483c17f80ce14"
                    ]
                },
                {
                    "command": [
                        "apply (perp_col1 _ _ _ P); Col.",
                        "VernacExtend",
                        "9bfc7545575033855255d8a901c83be329642bd3"
                    ]
                },
                {
                    "command": [
                        "apply perp_comm; apply (perp_col _ A1); Col.",
                        "VernacExtend",
                        "a87977da077203df7dbd17e75b2ebf96ec7f53fa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply (out_out_one_side _ _ _ P); [|apply l6_6; auto].",
                        "VernacExtend",
                        "2cb349fe3cfd083dbd5e603b211e1e490bc8ef6f"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply (col_one_side _ A1); Col.",
                        "VernacExtend",
                        "fd10138452eea7548a6b10f96dbfc5960f589c28"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert(HLe : Le B0 B B0 E) by (apply (t22_18_aux2 A0 A1 B0 B1 A); auto).",
                        "VernacExtend",
                        "c7bff0311e8a10b06f18497d11f65356f6c1c7c7"
                    ]
                },
                {
                    "command": [
                        "assert (HLe2 : Le B0 B A A0).",
                        "VernacExtend",
                        "d12b251b1017f3a5662eb5aec6547ca1f517c26c"
                    ]
                },
                {
                    "command": [
                        "apply (le_transitivity _ _ B0 E); auto.",
                        "VernacExtend",
                        "e68bf6f7b710db4b1ef112c66ccef34b5d016713"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 A D A A0); Cong.",
                        "VernacExtend",
                        "a53df61438bb81f92847a329a75db157da9883d5"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a A D A0); Between.",
                        "VernacExtend",
                        "3ea4c7315678c45a27c60f82c7cba1181f5df6c3"
                    ]
                },
                {
                    "command": [
                        "assert (HLe2' := HLe2).",
                        "VernacExtend",
                        "260c4358ed53cb0d28cda5fce1be370975f26d9e"
                    ]
                },
                {
                    "command": [
                        "destruct HLe2' as [Q [Hbet6 Hcong6]].",
                        "VernacExtend",
                        "4a2906ee24f750a019325449f9ee7bd465edb6f5"
                    ]
                },
                {
                    "command": [
                        "apply (le1234_lt__lt _ _ A0 Q).",
                        "VernacExtend",
                        "0e6bd562c820f44ced98baf14ad40f58b29502fc"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le1245 _ _ A _ _ A); Between; Le.",
                        "VernacExtend",
                        "bc271fe882999c515be3265793b799d230733266"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 B0 B B0 E); Cong.",
                        "VernacExtend",
                        "77cbb8ee2d6a11c08028394a019e167604bb7fe0"
                    ]
                },
                {
                    "command": [
                        "clear dependent D; clear dependent E.",
                        "VernacExtend",
                        "52dec2db4652e4420396ad1cfa5d61cb46edb5b6"
                    ]
                },
                {
                    "command": [
                        "destruct (l6_11_existence A0 A0 B0 A) as [B0' [HOut2 Hcong4]]; try (assert_diffs; intro; treat_equalities; auto).",
                        "VernacExtend",
                        "940b5b18bf96c5c4a2a13947c4efafe715d1f618"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A0 B0' B0 B) as [B' [Hbet7 Hcong7]].",
                        "VernacExtend",
                        "59cdfc68940fb1789859a8430cb2d5d90a0ad46b"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction B0' B' B A) as [A' [Hbet8 Hcong8]].",
                        "VernacExtend",
                        "9a9bc5815837132d63c4c5a2457543a2c138601e"
                    ]
                },
                {
                    "command": [
                        "assert (Le A0 A A0 A').",
                        "VernacExtend",
                        "2e07e35016f0a28ed999809d9a58145f7d30c1a0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A0 B0' B0 A) as [B'' [Hbet9 Hcong9]].",
                        "VernacExtend",
                        "dc762b59b03fd204caa1aa5995ccd1bf9365ea1f"
                    ]
                },
                {
                    "command": [
                        "apply (le_transitivity _ _ A0 B'').",
                        "VernacExtend",
                        "f452d16ca4032fd52dc7d6f08b9c56a1b8d18b81"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_inequality_2 _ B0 _ _ B0'); Cong.",
                        "VernacExtend",
                        "ef1e9a43153b18565cd6bde2c038413aeafbac89"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le1346 _ B0' _ _ B0'); Le.",
                        "VernacExtend",
                        "523dbc567222a12a66663b3890a97c1c726e9d75"
                    ]
                },
                {
                    "command": [
                        "apply (outer_transitivity_between _ _ B'); auto.",
                        "VernacExtend",
                        "670bda22897f5619fceee5faeb76f6ebc810d98c"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply sac_distincts in HSac2; spliter; auto.",
                        "VernacExtend",
                        "0f24f9ea0dfe8f92eb7a1fb1b9cf177eda914941"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 B0 A B0' A'); Cong.",
                        "VernacExtend",
                        "508168975706ca96f838084331d32baf09a067cd"
                    ]
                },
                {
                    "command": [
                        "apply (triangle_inequality_2 _ B _ _ B'); Cong.",
                        "VernacExtend",
                        "0a529ffc647c44654bf51c68a6142c4161e7c203"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HLe3 : Le B0 B A' B0').",
                        "VernacExtend",
                        "c204407c8bdf7b22ee52210efe81972a937542df"
                    ]
                },
                {
                    "command": [
                        "apply (l5_6 B0' B' B0' A'); Cong; destruct (l5_12_a B0' B' A'); auto.",
                        "VernacExtend",
                        "29c94062184699e24aee0f4fd8396b050ac59407"
                    ]
                },
                {
                    "command": [
                        "destruct HLe3 as [Q' [Hbet9 Hcong9]].",
                        "VernacExtend",
                        "5ec16ccf0a7921cb574167224b3d6b946632ac30"
                    ]
                },
                {
                    "command": [
                        "assert (HBet10 : Bet A0 B0' A').",
                        "VernacExtend",
                        "70f2b07173a78adb3cba918ca3f05fc88ec20231"
                    ]
                },
                {
                    "command": [
                        "apply sac_distincts in HSac2; spliter; assert_diffs.",
                        "VernacExtend",
                        "ea920031332bfcb137cf03b6ca9eb4a3da9792b0"
                    ]
                },
                {
                    "command": [
                        "apply (outer_transitivity_between _ _ B'); Between.",
                        "VernacExtend",
                        "a9679d22ab3ed53c6d1ccdee8f7c23bc930e7e9b"
                    ]
                },
                {
                    "command": [
                        "apply (le1234_lt__lt _ _ A0 Q').",
                        "VernacExtend",
                        "d77028eda31520afe15770bf33b21fdb2d092451"
                    ]
                },
                {
                    "command": [
                        "apply (bet2_le2__le1245 _ _ A' _ _ A); eBetween.",
                        "VernacExtend",
                        "d791f25c541df97a23b6f3712629f69d3a87fa0f"
                    ]
                },
                {
                    "command": [
                        "apply cong__le; apply (cong_transitivity _ _ B0 B); Cong.",
                        "VernacExtend",
                        "018424db5ee00550390f19756d67bd01e471ef2b"
                    ]
                },
                {
                    "command": [
                        "assert (Cong B0' Q' A0 B0).",
                        "VernacExtend",
                        "ab72aa484a1ea93c8d116f172e2a85623b1fdaad"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ A B); Cong.",
                        "VernacExtend",
                        "47274a49e702326326572f9bcf9547c3950f1186"
                    ]
                },
                {
                    "command": [
                        "apply (cong_transitivity _ _ A' B'); Cong.",
                        "VernacExtend",
                        "a3f5ebd5abe7e000b083a26d7727cbdb444c97a4"
                    ]
                },
                {
                    "command": [
                        "assert(Hcong10 : Cong B0' B' A' Q') by (apply (cong_transitivity _ _ B0 B); auto).",
                        "VernacExtend",
                        "d771589625ee02cae30cb57e14fea0e84c69039c"
                    ]
                },
                {
                    "command": [
                        "elim(bet_dec B0' Q' B').",
                        "VernacExtend",
                        "380960f58e1f0e9c1d1930fcf18e56a5251196c3"
                    ]
                },
                {
                    "command": [
                        "intro; apply (l4_3 _ _ B' _ _ Q'); Cong; eBetween.",
                        "VernacExtend",
                        "7d6124f9d86c7245a21c84d74d6392ebb70f8284"
                    ]
                },
                {
                    "command": [
                        "intro HNBet.",
                        "VernacExtend",
                        "41c69df9d629ab5d15019807e428e889d1fbb6ab"
                    ]
                },
                {
                    "command": [
                        "apply sac_distincts in HSac2; spliter; assert_diffs.",
                        "VernacExtend",
                        "ea920031332bfcb137cf03b6ca9eb4a3da9792b0"
                    ]
                },
                {
                    "command": [
                        "assert (Q' <> B0') by (intro; apply HNBet; Between).",
                        "VernacExtend",
                        "6d00fc462e5b1d24a1788cb17a5bd006b6a9d35b"
                    ]
                },
                {
                    "command": [
                        "assert (A' <> B0') by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "16b9ba48ee99013f5af0338094b0b260aeea3df6"
                    ]
                },
                {
                    "command": [
                        "assert (HOut3 : Out B0' B' Q').",
                        "VernacExtend",
                        "15eeebbfa25c405722675660d8e1356a7c67d9c4"
                    ]
                },
                {
                    "command": [
                        "apply (l6_7 _ _ A'); [| apply l6_6]; apply bet_out; Between.",
                        "VernacExtend",
                        "045240578e353a2c41b3b518bcb62b7ab5ace5dd"
                    ]
                },
                {
                    "command": [
                        "assert (Hbet11 : Bet B0' B' Q').",
                        "VernacExtend",
                        "664459af24616e5c7e8767585272b4a60b0fdc6c"
                    ]
                },
                {
                    "command": [
                        "apply out2__bet; auto.",
                        "VernacExtend",
                        "6423a45b459a2dce8e62ed4a0370b35cc024a5f6"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_out; Col.",
                        "VernacExtend",
                        "3501e9718b4b6683af553ccb7072173b48c26cd1"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ B' _ _ Q'); Cong; eBetween.",
                        "VernacExtend",
                        "9662815019329aa6fa439c24ddc59ceb0214b1ec"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Hbet10 : Bet A0 D1 C) by eBetween.",
                        "VernacExtend",
                        "02702c76553ca487976a29c1573b6ade6e987c04"
                    ]
                },
                {
                    "command": [
                        "apply (cong2_lt__lt D1 C A0 C); Cong; [split|].",
                        "VernacExtend",
                        "6150217ec4e21936ec08c88fe8ed6388a1a3d2fe"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_12_a A0 D1 C); auto.",
                        "VernacExtend",
                        "b9d70201e221c6e870d15fd87bb8bd9cc4640dee"
                    ]
                },
                {
                    "command": [
                        "intro; assert (D1 = A0) by (apply (between_cong C); Between; Cong); treat_equalities; Cong.",
                        "VernacExtend",
                        "ef9513892c97e32547ba98c91af27f8ee6529c02"
                    ]
                },
                {
                    "command": [
                        "apply (l2_11 _ C0 _ _ B0'); eBetween; apply cong_transitivity with A0 B0; Cong.",
                        "VernacExtend",
                        "2755ff86ccb15db09e6032f4d09f7313a32468e9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold archimedes_axiom in *.",
                        "VernacExtend",
                        "cddf27603c0ea08c2b0f9dd8737cdb4c0cbf3715"
                    ]
                },
                {
                    "command": [
                        "specialize Harchi with A0 D1 A0 C.",
                        "VernacExtend",
                        "7af3b6bbe954586b4f5f7ad3619bd5b1f727e998"
                    ]
                },
                {
                    "command": [
                        "destruct Harchi as [D [HG Hle]].",
                        "VernacExtend",
                        "8037602c3a3aeeaf98e394c46aa69e4c32a578a4"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "assert(HLt := HG).",
                        "VernacExtend",
                        "978495c7901ca9b1d5ba890f93e4e460f189f1c5"
                    ]
                },
                {
                    "command": [
                        "apply H in HLt.",
                        "VernacExtend",
                        "8ef58afec82aa393309a673f90a8868d3236b616"
                    ]
                },
                {
                    "command": [
                        "apply grad__le in HG.",
                        "VernacExtend",
                        "e121df31913afdf4fb4a37df8bece9428bf37aad"
                    ]
                },
                {
                    "command": [
                        "apply (le__nlt A0 C A0 D); auto.",
                        "VernacExtend",
                        "3256d356a14f47c669e9cd3144fabb510092bd32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_19",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "intros archi A B C D HSac HObt.",
                        "VernacExtend",
                        "fe4b0868aea679a218a8a739b1a91892ec907bb8"
                    ]
                },
                {
                    "command": [
                        "assert (H := t22_18 archi _ _ _ _ (sac_perm _ _ _ _ HSac)).",
                        "VernacExtend",
                        "d9e5f66769c95431310478abcf142095e7b3f570"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply lt_left_comm; apply <- lt_sac__obtuse; auto.",
                        "VernacExtend",
                        "d50f90a3c0d7faae8b9dae87000fac29d2cd25ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "archi__obtuse_case_elimination",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "intros archi obtuse.",
                        "VernacExtend",
                        "5a84a2cc447e2ff9ee6cb78eb1eb3cb8e5c9f005"
                    ]
                },
                {
                    "command": [
                        "destruct ex_saccheri as [A [B [C [D HSac]]]].",
                        "VernacExtend",
                        "905d4b4dced81a4a5bdb985503fb61a3a4d95535"
                    ]
                },
                {
                    "command": [
                        "absurd(Obtuse A B C).",
                        "VernacExtend",
                        "0e9b359c2e1f3cfafbb5e70bd68d62bab64fa041"
                    ]
                },
                {
                    "command": [
                        "apply t22_19 with D; trivial.",
                        "VernacExtend",
                        "2e24825dff59113c7dcedbd81125f9438e10b223"
                    ]
                },
                {
                    "command": [
                        "apply obtuse with D; trivial.",
                        "VernacExtend",
                        "99e6d16632ccfe7ae98a019fa81b9f17658d0333"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_23_aux",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros A B C M N L HNCol HPerC HAC HM HPerN HColN HN.",
                        "VernacExtend",
                        "f10aaeb760336b1418c15c7a861cb8afe29b4b07"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HBet : Bet A N C) by (apply per23_preserves_bet with M B; Perp; Col; Between).",
                        "VernacExtend",
                        "d48f3b03d88a741f596a98ce956d057bd06e1091"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_49 A M N B M L) as [HCong1 [HCongA1 HCongA2]]; auto with cong.",
                        "VernacExtend",
                        "809f2e41b64c367417d54f7f260e796d42798892"
                    ]
                },
                {
                    "command": [
                        "apply l11_14; Between.",
                        "VernacExtend",
                        "c65ea70041c734561692dd73c04641732ebaea96"
                    ]
                },
                {
                    "command": [
                        "assert(B <> L) by (intro; treat_equalities; auto).",
                        "VernacExtend",
                        "a31e8732564cd9ee703a33f7c1ae5de6c2549721"
                    ]
                },
                {
                    "command": [
                        "repeat split; Cong.",
                        "VernacExtend",
                        "ec8f370e0576f6cb30131105b6e9f74e7f035f5d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply HNCol; ColR.",
                        "VernacExtend",
                        "44f8c9f75d702253dca4a094df5711a50ee356e2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; apply H6.",
                        "VernacExtend",
                        "90e7b7f7d686e159483a1f057eb7a1ecac9a4e3f"
                    ]
                },
                {
                    "command": [
                        "apply (l6_21 A M N M); Col.",
                        "VernacExtend",
                        "c3d0f1fcdec8171d7184b6b6cf5cb9e44419b2a9"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_3, cop_per2__col with A; Col; Cop.",
                        "VernacExtend",
                        "609bd83aa61a6fd358c2083a82e791b8b7d900ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply per_col with A; Col.",
                        "VernacExtend",
                        "a907fcc7f364707a1ca10b2ce54bb19f3f573991"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, per_col with M; Col; Perp.",
                        "VernacExtend",
                        "04ce38e85c0b0da35558c1015fe260bb489c9a57"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, per_col with A; Col.",
                        "VernacExtend",
                        "bf328de62362fd454ddfe7568da117bcb1313784"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l11_17 with M N A; auto.",
                        "VernacExtend",
                        "9a1dc6f21cf5aeccfbbf200570bd1e3f31764625"
                    ]
                },
                {
                    "command": [
                        "apply (out_conga M N A M L B); auto; try (apply out_trivial; auto).",
                        "VernacExtend",
                        "42e27adf891c276c1d3200d21e71b9f3c2a83310"
                    ]
                },
                {
                    "command": [
                        "apply bet_out; Between.",
                        "VernacExtend",
                        "a53328ff9618e56bf07e5e99b92030d37b76bae5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_16, col_cop__cop with M; Col.",
                        "VernacExtend",
                        "3c0fc9d5831e9724bf4c203543aa1d99d86d3427"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col_cop__cop with A; Col; Cop.",
                        "VernacExtend",
                        "64d4070abfa9943427cf2fda512442f877ced500"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_23",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros HNob A B C M N L HNCol HPerC HAC HM HPerN HColN HN.",
                        "VernacExtend",
                        "2ca82f7264a4be802275d3b7e7b5df1ced7da94b"
                    ]
                },
                {
                    "command": [
                        "destruct (t22_23_aux A B C M N L) as [HBet [HLam HCong]]; auto.",
                        "VernacExtend",
                        "de0dec60a9a45f75139305368c5d5369875b1e94"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "assert (HLBC : ~ Obtuse L B C) by (intro; apply HNob, (lam_obtuse__oah N L B C); trivial).",
                        "VernacExtend",
                        "3a1cf8cbf3451a5f4bc6926de4a9ed887f64af2e"
                    ]
                },
                {
                    "command": [
                        "assert (Hos1 : OS N L B C) by (apply lam__os; trivial).",
                        "VernacExtend",
                        "2ba583319a238dc41be54af68c29abc8c86f95bb"
                    ]
                },
                {
                    "command": [
                        "assert (Hos2 : OS N C B L) by (apply lam__os, lam_perm; trivial).",
                        "VernacExtend",
                        "889a7afab9981e67a28f8edc368824842d20d927"
                    ]
                },
                {
                    "command": [
                        "unfold Lambert in HLam; spliter.",
                        "VernacExtend",
                        "1566da249536b1432af8e56d14b8bd91380f229e"
                    ]
                },
                {
                    "command": [
                        "destruct (angle_partition L B C) as [HAcute | [HPer | HObtuse]]; trivial; [ | | exfalso; auto].",
                        "VernacExtend",
                        "02a62df78c88bfbd106f43421e65331acbccc854"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; apply lt__le; [apply (cong2_lt__lt N C B L); Cong | ].",
                        "VernacExtend",
                        "99ab7c0718a4f05a88845a331bf5ec43f21471fc"
                    ]
                },
                {
                    "command": [
                        "apply lta_os_per2__lt; Perp; Side; apply lta_left_comm, acute_per__lta; auto.",
                        "VernacExtend",
                        "35245b798f98ba46b429ce0dace1c82e625c8827"
                    ]
                },
                {
                    "command": [
                        "apply lt_left_comm, lta_os_per2__lt; Side; apply acute_per__lta; auto.",
                        "VernacExtend",
                        "e23d24499b37b691b340405df0a78e45d8527295"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; apply cong__le; [apply cong_transitivity with B L; trivial | apply cong_left_commutativity]; apply conga_per2_os__cong; Perp; Side; apply l11_16; Perp.",
                        "VernacExtend",
                        "5efeb55cdbd7d5ab4942268fe91f59b31be40938"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_24_aux",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "intros HNob A B0 B00 C0 B C E HNCol HPerp0 Heq HGE.",
                        "VernacExtend",
                        "5c0c2dd84f6ff1d375b09379c432ae2631cc2a7c"
                    ]
                },
                {
                    "command": [
                        "revert C.",
                        "VernacExtend",
                        "f3d763b81721ae85e29e00334720e34f24b17ddc"
                    ]
                },
                {
                    "command": [
                        "induction HGE; rename B into B0; rename D into B00; rename E into C0; subst B00.",
                        "VernacExtend",
                        "6ab058ad02dee0e934b34ec9184ac5ea33c3e1f8"
                    ]
                },
                {
                    "command": [
                        "intros C HPerp HCol; assert (C = C0) by (apply (l8_18_uniqueness A C0 B0); Col); subst C; Le.",
                        "VernacExtend",
                        "c1ad0b878510d6b929d81b5ac0db0346b52a3b6f"
                    ]
                },
                {
                    "command": [
                        "rename C into B; rename C' into B'; rename F into E; rename F' into E'.",
                        "VernacExtend",
                        "c2bc5dbf0134a5669117edfac03c58df54f7f44f"
                    ]
                },
                {
                    "command": [
                        "intros C' HPerp' HCol'.",
                        "VernacExtend",
                        "07f9835f6cda5b19e26750b0912e177bb8dc9520"
                    ]
                },
                {
                    "command": [
                        "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE.",
                        "VernacExtend",
                        "f87653e704fe562b822268751ad45d96e2535c9d"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A C0 B) as [C [HCol HPerp]].",
                        "VernacExtend",
                        "1a33561b69b5ec903353c7c8897a18e9694fccf2"
                    ]
                },
                {
                    "command": [
                        "intro; assert_diffs; apply HNCol; ColR.",
                        "VernacExtend",
                        "a03dc96c5c053be6781752e45c839aef5b86ba17"
                    ]
                },
                {
                    "command": [
                        "assert (HLe : Le B0 E B C) by (apply IHHGE; trivial).",
                        "VernacExtend",
                        "e3aa95933010767febed056c66b191b6e7e8658a"
                    ]
                },
                {
                    "command": [
                        "clear IHHGE.",
                        "VernacExtend",
                        "875dead6d56152de69f2b44a438f9bccc6dee23e"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction C B) as [D HD].",
                        "VernacExtend",
                        "37c048b2f2b6fcb317e2e0dd834569fd2dceb05f"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with D C.",
                        "VernacExtend",
                        "04ba1cc4e643f597ffb2b600782006de5fee899e"
                    ]
                },
                {
                    "command": [
                        "apply bet2_le2__le1346 with E B; Between; apply (l5_6 B0 E B C); auto with cong.",
                        "VernacExtend",
                        "993c5231b8d9548e93980c32a50482d99a397141"
                    ]
                },
                {
                    "command": [
                        "assert (HAC : A <> C).",
                        "VernacExtend",
                        "debb1593a4e59ce27a3cf800ade8361206330a1d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; subst C; assert_diffs; assert (A = C0); auto.",
                        "VernacExtend",
                        "033f9b662f1a8ce516286ae8cd185857ec96fdb5"
                    ]
                },
                {
                    "command": [
                        "apply (l8_18_uniqueness A C0 B0); Col.",
                        "VernacExtend",
                        "a1f792641278bb92611cd90b261b9e02e005223e"
                    ]
                },
                {
                    "command": [
                        "apply perp_right_comm, perp_col1 with B; Perp; Col.",
                        "VernacExtend",
                        "f208837ccfde291438f29d2c2be949934f92de1b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HAC' : A <> C').",
                        "VernacExtend",
                        "b5b59fb7aa38f2a378bc1db332b11f98fc61e0ca"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; subst C'; assert_diffs; assert (A = C0); auto.",
                        "VernacExtend",
                        "664051e2b5cd2814e54d6b5c9146579d2b0b0ddc"
                    ]
                },
                {
                    "command": [
                        "apply (l8_18_uniqueness A C0 B0); Col.",
                        "VernacExtend",
                        "a1f792641278bb92611cd90b261b9e02e005223e"
                    ]
                },
                {
                    "command": [
                        "apply perp_right_comm, perp_col1 with B'; Perp; ColR.",
                        "VernacExtend",
                        "094a4468a7d4c42d3e64704761a9616918a20f8a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HPer : Per A C B) by (apply perp_per_1; auto; apply perp_left_comm, perp_col with C0; trivial).",
                        "VernacExtend",
                        "d9b811e7d29a83087997a644b574acaf8812d25e"
                    ]
                },
                {
                    "command": [
                        "destruct (t22_23 HNob A B' C' B C D) as [_ []]; Perp; assert_diffs.",
                        "VernacExtend",
                        "06678485d56d495116f75d39d4a85ecb166b7657"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply per_not_col in HPer; Col.",
                        "VernacExtend",
                        "8f6f51e0a984c0be7bc404427269475e411de4d5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; auto; apply perp_col1 with C0; Perp.",
                        "VernacExtend",
                        "52f9b9e285730cd1e708c4c95b750c3be05aff50"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_24_aux1",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "intros A B0 C0 E HNCol HPerp0 HGE.",
                        "VernacExtend",
                        "3aac78e3966f0af1624cd88a0672785d0bde8c59"
                    ]
                },
                {
                    "command": [
                        "induction HGE; rename A0 into B0; rename B into C0.",
                        "VernacExtend",
                        "6ceacdfdd10631ddd51be451cb82344dca938228"
                    ]
                },
                {
                    "command": [
                        "exists B0; exists C0; repeat (split; Col); apply gradexp2_init.",
                        "VernacExtend",
                        "7ff5455716777558ce94a04a726852f8b38c5aa9"
                    ]
                },
                {
                    "command": [
                        "rename C into E; rename C' into E'.",
                        "VernacExtend",
                        "95f0b7ea7c963f2a6d589d15370be2d83b700f91"
                    ]
                },
                {
                    "command": [
                        "destruct IHHGE as [B [C [HGE2 [HPerp HCol]]]]; trivial.",
                        "VernacExtend",
                        "7e38e8b7232b8fad4065f39c2921db02be214c12"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B A B) as [B' [HBet HCong]].",
                        "VernacExtend",
                        "24a508b8aa6631102b555d413a2d0527f6912f74"
                    ]
                },
                {
                    "command": [
                        "exists B'.",
                        "VernacExtend",
                        "bcb20d6cf63fc499dc5f940bb4e74610c8e37255"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A C0 B') as [C' [HCol' HPerp']].",
                        "VernacExtend",
                        "83de7a7ed065bffb44df563d2c5a159e170ff73f"
                    ]
                },
                {
                    "command": [
                        "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE2; intro; assert_diffs; apply HNCol; ColR.",
                        "VernacExtend",
                        "0ebe19c35d4466e5058270e08aa08bb2525825de"
                    ]
                },
                {
                    "command": [
                        "exists C'; repeat (split; trivial); apply gradexp2_stab with B E; Cong.",
                        "VernacExtend",
                        "b257b20e3848a7787d30bb988ac9e9a433c22db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "t22_24",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intros Harchi P Q D A B0 HNCol HACute0.",
                        "VernacExtend",
                        "5f4083e339bda24452b0bfd570cb4f7b04950fa4"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence A D B0) as [C0 [HColD HPerpD]]; Col.",
                        "VernacExtend",
                        "7a5a85a689abf89c6cb8e8e92035c1eb69a0a07f"
                    ]
                },
                {
                    "command": [
                        "assert (HAC0 : A <> C0) by (intro; subst C0; apply (acute_not_per D A B0); Perp).",
                        "VernacExtend",
                        "a75036cd590f1b3d52572667fd30439b6ff564aa"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol0 : ~ Col A B0 C0) by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "abce235ba89a86384c22f980c242783bb79af406"
                    ]
                },
                {
                    "command": [
                        "assert (HPerp0 := perp_col A D B0 C0 C0 HAC0 HPerpD HColD).",
                        "VernacExtend",
                        "729b2ef87aebd717f6510e2f6635fe687701cb1d"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points P Q); intro HPQ.",
                        "VernacExtend",
                        "433f74978c0f8fd0529da8c734280b49b7ad4d6d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst Q; exists C0; exists B0; split; assert_diffs.",
                        "VernacExtend",
                        "e1d922312b471182598149ed3b9ac2a1955095e8"
                    ]
                },
                {
                    "command": [
                        "apply l6_6, acute_col_perp__out with B0; trivial; apply acute_sym; trivial.",
                        "VernacExtend",
                        "65a6c10b248ea67f1e797b39c16344dd3233dfa9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "repeat split; Perp; Le.",
                        "VernacExtend",
                        "149e10a70ade39d2d95e566259a2bb5b6975684e"
                    ]
                },
                {
                    "command": [
                        "intro; treat_equalities; auto.",
                        "VernacExtend",
                        "49d08658ff9de93b3f407cddb5aac4beb44392c9"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction P Q P Q) as [Q' [HBetQ HCongQ]].",
                        "VernacExtend",
                        "97d5fa32f68921b823eee0c19afa9529f1d10755"
                    ]
                },
                {
                    "command": [
                        "destruct (reach__ex_gradexp_le B0 C0 P Q') as [E [HGE HLe]].",
                        "VernacExtend",
                        "f22f4d6f30176f064cad21dad4793e256d75324f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply Harchi; trivial.",
                        "VernacExtend",
                        "4d2d31e6b5d10245efb4debb781e9d986c022849"
                    ]
                },
                {
                    "command": [
                        "destruct (t22_24_aux1 A B0 C0 E) as [B [C [HGE2 [HPerp HCol]]]]; trivial.",
                        "VernacExtend",
                        "ff2c7ea78a72764695f24945e02533a69ea3704e"
                    ]
                },
                {
                    "command": [
                        "assert(HOut : Out A B0 B).",
                        "VernacExtend",
                        "72e5b4ba17fd6ff022c186d4758e190e3f4093b4"
                    ]
                },
                {
                    "command": [
                        "apply gradexp2__gradexp123, gradexp__grad, grad__bet in HGE2; assert_diffs; apply bet_out; auto.",
                        "VernacExtend",
                        "7d3a9014844c4ff2ada7da6bffc12f47e53ac3c6"
                    ]
                },
                {
                    "command": [
                        "assert(HAcute : Acute D A B).",
                        "VernacExtend",
                        "d08d3527ea2709d3c4733be5d4717ae36c51bc5b"
                    ]
                },
                {
                    "command": [
                        "apply (acute_conga__acute D A B0); trivial.",
                        "VernacExtend",
                        "b74cc4db130df150432b9c9beacb22f2668f346e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply (out_conga D A B0 D A B0); CongA; apply out_trivial; auto.",
                        "VernacExtend",
                        "bf4aa54d4f6661b36cb926aaac9f039fc25be5d4"
                    ]
                },
                {
                    "command": [
                        "assert (HAC : A <> C) .",
                        "VernacExtend",
                        "debb1593a4e59ce27a3cf800ade8361206330a1d"
                    ]
                },
                {
                    "command": [
                        "intro; subst C; assert_diffs; apply (acute_not_per D A B); trivial.",
                        "VernacExtend",
                        "c6aa4d95d3f0a369d16f4890260121bafad81f1b"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; auto; apply perp_col with C0; Col.",
                        "VernacExtend",
                        "d73347c856df5da62ce7bee73eb27128c7d1d666"
                    ]
                },
                {
                    "command": [
                        "exists C; exists B; split.",
                        "VernacExtend",
                        "6f7463c6a17c4986eea7a568d2830203520b0d9b"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply l6_6, acute_col_perp__out with B; [apply acute_sym; trivial|ColR|apply perp_col with C0; Col].",
                        "VernacExtend",
                        "e5dcfd93862f06df86c37955203414cbbdbf9ad2"
                    ]
                },
                {
                    "command": [
                        "split; trivial; split.",
                        "VernacExtend",
                        "4bb1431087a0a1ca27a8f02a93961c6c128a8f5e"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1; auto; apply perp_left_comm, perp_col with C0; trivial.",
                        "VernacExtend",
                        "1218866973ef8b470e22e7005e17fef8bd57bc7d"
                    ]
                },
                {
                    "command": [
                        "apply le3456_lt__lt with P Q'.",
                        "VernacExtend",
                        "3d5ad18e61acfc691d87019462cab040648eccd4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bet__le1213; trivial.",
                        "VernacExtend",
                        "0b33ae4854fabc825a3488dd265a782eb5bb99e2"
                    ]
                },
                {
                    "command": [
                        "intro; assert (Q = Q'); treat_equalities; auto.",
                        "VernacExtend",
                        "6e36f6b01f95a77b55a101cd7a543ffb423f365d"
                    ]
                },
                {
                    "command": [
                        "apply between_cong with P; trivial.",
                        "VernacExtend",
                        "e85cd1b6397dd528ce7a5edcbee604748cc24182"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with B0 E; trivial.",
                        "VernacExtend",
                        "68f49303f2de80dda2ae3c6f097a1d08fe1d0d83"
                    ]
                },
                {
                    "command": [
                        "apply le_right_comm.",
                        "VernacExtend",
                        "53069d9e13cef25115227cddb6ac5ee74a06e4d4"
                    ]
                },
                {
                    "command": [
                        "apply t22_24_aux with A B0 C0; trivial.",
                        "VernacExtend",
                        "cae6749bfb6f822c81cea4ddac683d2b31d14d55"
                    ]
                },
                {
                    "command": [
                        "apply archi__obtuse_case_elimination; trivial.",
                        "VernacExtend",
                        "a729c0d80e5db2c078915ab44b301099442baccc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}