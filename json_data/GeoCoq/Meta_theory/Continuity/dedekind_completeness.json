{
    "filename": "Meta_theory/Continuity/dedekind_completeness.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Continuity.completeness.",
            "VernacRequire",
            "4beb38cfade93ebbcdd50a2d8fb3b671164ceef6"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Continuity.grad.",
            "VernacRequire",
            "a80689feec7a0fc17c0dd960090647e82fca3701"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Ch08_orthogonality.",
            "VernacRequire",
            "dfbd4eb962acbac876dfad59f560d08207413235"
        ],
        [
            "Section Line_extension.",
            "VernacBeginSection",
            "5abeef43e8483877fd5d415bda9b2b6d5214d71c"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma line_extension_symmetry : forall {Tm : Tarski_neutral_dimensionless} (f : @Tpoint Tn -> @Tpoint Tm) P Q, line_extension f P Q -> line_extension f Q P.",
            "VernacStartTheoremProof",
            "63adc4382e40dcb79df1504d1b7271b7c4523093"
        ],
        [
            "intros Tm f P Q [HPQ [fInj [fBet fCong]]].",
            "VernacExtend",
            "868934c0ebade884bd9ceec54dbc722b24880400"
        ],
        [
            "repeat split; auto; intro; intros; [apply fInj|apply fBet|apply fCong]; Col.",
            "VernacExtend",
            "1870c56af260e51f429266341dccd6cd8745f17b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma line_extension_stability : forall {Tm: Tarski_neutral_dimensionless} (f : @Tpoint Tn -> @Tpoint Tm) P Q R, Col P Q R -> P <> R -> line_extension f P Q -> line_extension f P R.",
            "VernacStartTheoremProof",
            "b19a26b95b09c35aa2bc5daceb95dd455684efe5"
        ],
        [
            "intros Tm f P Q R HCol HPR [HPQ [fInj [fBet fCong]]].",
            "VernacExtend",
            "c95537ba4f2d1f4793e2c3528657fc49ed20e4c4"
        ],
        [
            "repeat split; auto; intro; intros; [apply fInj|apply fBet|apply fCong]; trivial; apply col_transitivity_1 with R; Col.",
            "VernacExtend",
            "3259ffab3d699653270ce487ee9cc62e5d31337d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma line_extension_reverse_bet : forall {Tm: Tarski_neutral_dimensionless} {Tm2: Tarski_neutral_dimensionless_with_decidable_point_equality Tm} (f : @Tpoint Tn -> @Tpoint Tm) P Q, line_extension f P Q -> forall A B C, Col P Q A -> Col P Q B -> Col P Q C -> Bet (f A) (f B) (f C) -> Bet A B C.",
            "VernacStartTheoremProof",
            "dadd6e5866363021edeaac7b2bfbe9493c7bb796"
        ],
        [
            "intros Tm Tm2 f P Q [HPQ [fInj [fBet fCong]]] A B C HA HB HC HBet.",
            "VernacExtend",
            "30bced2d067475338a80fabce3ff75763dc17ca5"
        ],
        [
            "destruct (eq_dec_points (f A) (f B)) as [Heq|Hdiff].",
            "VernacExtend",
            "f009d2acae5d9e4e8c4afe51ca18e573b920d36c"
        ],
        [
            "apply fInj in Heq; subst; Between.",
            "VernacExtend",
            "bcb0653b2095daaee92537a4eb2ed1454c8aab05"
        ],
        [
            "assert (A <> B) by (intro; subst; auto).",
            "VernacExtend",
            "5feca701a85f05571d071066efa19d040ba9e0ae"
        ],
        [
            "destruct (segment_construction A B B C) as [D [HD1 HD2]].",
            "VernacExtend",
            "4aa572d44c9ef9d50bede195042c9e50f8a05f74"
        ],
        [
            "assert (C = D); [|subst; auto].",
            "VernacExtend",
            "d60f697cb54e828ed8bd2016e1393b27602f271c"
        ],
        [
            "assert (Col P Q D) by (apply (colx A B); Col).",
            "VernacExtend",
            "a51f7978c7cb03cc4eea9590919612d5228aed9a"
        ],
        [
            "apply fInj; trivial.",
            "VernacExtend",
            "fa8ac0faa3d50c898f5dfdddc35411cdfe9cbde0"
        ],
        [
            "apply between_cong_3 with (f A) (f B); Cong.",
            "VernacExtend",
            "ae264975ab7cfa3dddf1092a7434a806b3e9b95c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pres_bet_line__col : forall {Tm: Tarski_neutral_dimensionless} f (P Q : @Tpoint Tn), P <> Q -> pres_bet_line f P Q -> forall A B C, Col P Q A -> Col P Q B -> Col P Q C -> Col (f A) (f B) (f C).",
            "VernacStartTheoremProof",
            "6418077d53540e2bcb6e64f09741826bcd7022aa"
        ],
        [
            "intros Tm f P Q HPQ fBet A B C HA HB HC.",
            "VernacExtend",
            "a5e76167398b64b5b4f4abef5ca89ffa14000fad"
        ],
        [
            "destruct (col3 P Q A B C) as [HBet|[HBet|HBet]]; trivial; apply fBet in HBet; Col.",
            "VernacExtend",
            "5ad06a6bb07bdc278dfe97117c438de6365af2e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Line_extension.",
            "VernacEndSegment",
            "9a57775f941cc8347f1c4d559a866404243ef29c"
        ],
        [
            "Section Completeness.",
            "VernacBeginSection",
            "1d5a4aa9df7ed935664df07bbdcf1c2cf3a10ac3"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma extension_grad : forall {Tm: Tarski_neutral_dimensionless} {Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm} P Q (f : @Tpoint Tn -> @Tpoint Tm), line_extension f P Q -> forall A B X, Col P Q A -> Col P Q B -> Grad (f A) (f B) X -> exists C, Col P Q C /\\ Grad A B C /\\ f C = X.",
            "VernacStartTheoremProof",
            "65f06fab36cd51fbee44311bac5b97ad311bbc19"
        ],
        [
            "intros Tm Tm2 P Q f [HPQ [fInj [fBet fCong]]] A B X HA HB HGrad.",
            "VernacExtend",
            "73e1f4bd46753b79f8e13d253333cb4beb863040"
        ],
        [
            "destruct (eq_dec_points A B).",
            "VernacExtend",
            "60f36dd855347a4a1ea828b2e7a944ccf5699007"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply grad112__eq in HGrad; subst X.",
            "VernacExtend",
            "4c724c882b80d58438918cadd918d9bc14533a27"
        ],
        [
            "exists A; repeat split; [assumption|constructor].",
            "VernacExtend",
            "4598d8e888d4dbc9766b60fab35c02e8cb03dc6b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "remember (f A) as A0.",
            "VernacExtend",
            "00fb408158719953d973e2e9f03005d5f6882ba0"
        ],
        [
            "remember (f B) as B0.",
            "VernacExtend",
            "adf4528b7e4c602b80bde1417c89bf63c663b12f"
        ],
        [
            "induction HGrad.",
            "VernacExtend",
            "84125e218497266fb0da8aa34e7f68e1f1c9b1f5"
        ],
        [
            "exists B; repeat split; auto; constructor.",
            "VernacExtend",
            "9441e0bc6830bdac47e5473b5c1fe73db93f8254"
        ],
        [
            "rename C into X, C' into X'.",
            "VernacExtend",
            "2839202bd91f2371dc08a5e7d4286db8b1c031d8"
        ],
        [
            "destruct IHHGrad as [C [HC1 [HC2 HC3]]]; trivial.",
            "VernacExtend",
            "7ab84cf140ee2469e35c7978415005b0d497ba5b"
        ],
        [
            "assert (A0 <> X).",
            "VernacExtend",
            "ba92dce1da4473777f018547dd37f61523646ba4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; subst X.",
            "VernacExtend",
            "5c9425a8bdb5f8751f389f50ee4a6647674ff40c"
        ],
        [
            "assert (A = C) by (apply fInj; auto; congruence).",
            "VernacExtend",
            "6fa2aeb904db3b3a31c44cb8c23529e567251857"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply grad121__eq in HGrad.",
            "VernacExtend",
            "4f884acc4b108796447dcd5ac1927e9a7876b6d6"
        ],
        [
            "apply fInj in HGrad; auto.",
            "VernacExtend",
            "b31757d291f066ee86639471a7819dd024201346"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (segment_construction A C A B) as [C' [HC'1 HC'2]].",
            "VernacExtend",
            "2bb2c7afc4484a074e976ed1d3e2e48f26efc935"
        ],
        [
            "exists C'.",
            "VernacExtend",
            "d0fa3e885e03cae8c7137bda75bba029f8227667"
        ],
        [
            "assert (Col P Q C').",
            "VernacExtend",
            "951c29aef52e0b7905d94428c29a9b4eecb8cfb3"
        ],
        [
            "apply (colx A C); Col; apply grad_neq__neq13 with B; auto.",
            "VernacExtend",
            "5ef737ecc8954d1b505cd6945e22a9a1f5f1fcea"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "apply grad_stab with C; Cong.",
            "VernacExtend",
            "718c88b9e212f209093b6918c8381d49df783c33"
        ],
        [
            "apply (construction_uniqueness A0 X A0 B0); Cong; subst; auto.",
            "VernacExtend",
            "fd7242c57b5b46f5f4330dc376732bf248c91388"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_gradexp : forall {Tm: Tarski_neutral_dimensionless} {Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm} P Q (f : @Tpoint Tn -> @Tpoint Tm), line_extension f P Q -> forall A B X, Col P Q A -> Col P Q B -> GradExp (f A) X (f B) -> exists C, Col P Q C /\\ GradExp A C B /\\ f C = X.",
            "VernacStartTheoremProof",
            "b594da60eba439b3cad67433557fa1db34de6015"
        ],
        [
            "intros Tm Tm2 P Q f [HPQ [fInj [fBet fCong]]] A B X HA HB.",
            "VernacExtend",
            "ff41d8d0c53a5a6cb61406a00026d76b3ef17a9e"
        ],
        [
            "remember (f A) as A'.",
            "VernacExtend",
            "9fbf97c4b64556719c7c0ceb8cb6205e8e54bbed"
        ],
        [
            "remember (f B) as B'.",
            "VernacExtend",
            "41ac50df16f7f6edf3a2ff7a62a72fb4fc86ec5c"
        ],
        [
            "rewrite gradexp__gradexpinv.",
            "VernacExtend",
            "55a2ed169934475b2706e0d11ac4869748a7ad81"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "exists B; repeat split; auto; constructor.",
            "VernacExtend",
            "9441e0bc6830bdac47e5473b5c1fe73db93f8254"
        ],
        [
            "destruct IHGradExpInv as [C' [HCol []]]; auto.",
            "VernacExtend",
            "03983e4c7f3ce2ad2ad332d1d5702426903edcc7"
        ],
        [
            "destruct (midpoint_existence A C') as [M []].",
            "VernacExtend",
            "7c6965fe6f4eeec7519e4baa5c4b28cd1c20753e"
        ],
        [
            "assert (Col P Q M).",
            "VernacExtend",
            "b64a67d08a65681461db196b4c2e140271d2be6f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (eq_dec_points A C').",
            "VernacExtend",
            "75d7d24ca6e7d5d874d77a7c48b31a4d32b1dee9"
        ],
        [
            "treat_equalities; assumption.",
            "VernacExtend",
            "1de2a51775ad72f97b3cb8e5d10010adcfc011d7"
        ],
        [
            "apply colx with A C'; Col.",
            "VernacExtend",
            "e2bac16c7f8906149857fa26fc1257276a6e8906"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists M; repeat split; trivial.",
            "VernacExtend",
            "793f1fe5403a216a91ec570a1e62917e5d628ea2"
        ],
        [
            "rewrite gradexp__gradexpinv.",
            "VernacExtend",
            "55a2ed169934475b2706e0d11ac4869748a7ad81"
        ],
        [
            "apply gradexpinv_stab with C'; trivial.",
            "VernacExtend",
            "3202a82585a6d05027a3d185775babd9bc47409a"
        ],
        [
            "rewrite <- gradexp__gradexpinv; assumption.",
            "VernacExtend",
            "30f9bccd81236ad845f3acd9de1d07e37e6e3165"
        ],
        [
            "apply l7_17 with A0 B0; split; trivial; subst; [apply fBet|apply fCong]; assumption.",
            "VernacExtend",
            "15628a6aa1ff32219ede61a76a6fd846f9834d54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_image_density_aux : forall {Tm: Tarski_neutral_dimensionless} {Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm} P Q (f : @Tpoint Tn -> @Tpoint Tm), @archimedes_axiom Tm -> line_extension f P Q -> forall A B, A <> B -> Lt (f P) (f Q) A B -> Bet (f P) (f Q) A -> Bet (f P) A B -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B.",
            "VernacStartTheoremProof",
            "734679938cd782eb5ca4894dbde02cf610517a6d"
        ],
        [
            "intros Tm Tm2 P Q f archi fLineExt A B HAB HLt HBet1 HBet2.",
            "VernacExtend",
            "c3d09f358a74fe04cc6862e4be0e02f2135885ba"
        ],
        [
            "cut (exists C, Grad (f P) (f Q) C /\\ Bet A C B /\\ C <> A /\\ C <> B).",
            "VernacExtend",
            "caccfa342f4e8ebebf50892e0ba176c642c5976f"
        ],
        [
            "intros [C [HC1 [HC2 [HC3 HC4]]]].",
            "VernacExtend",
            "53c4b8fc10433b3e01dcd37c0fdfa8c45aa685ac"
        ],
        [
            "destruct (extension_grad P Q f fLineExt P Q C) as [X]; Col.",
            "VernacExtend",
            "4da9cf1485dea01e6f24f8e455b73175d39b34da"
        ],
        [
            "exists X; spliter; subst; auto.",
            "VernacExtend",
            "8c3df62208c66e521aa8102f0af500120363baa8"
        ],
        [
            "assert (Hdiff : f P <> f Q).",
            "VernacExtend",
            "fcd0aee6f05b176820c68d9de856ddb7cdefc8c0"
        ],
        [
            "intro; destruct fLineExt as [HPQ [fInj]]; apply HPQ, fInj; Col.",
            "VernacExtend",
            "1476da03a9d17eff8d6974171e845291b53f9e21"
        ],
        [
            "destruct (reach__grad_min (f P) (f Q) A) as [D [E [HD1 [HD2 [HE1 [HE2 [HDE1 HDE2]]]]]]]; auto.",
            "VernacExtend",
            "5790379c0b20142ef7b6e2a656def2268f639f8d"
        ],
        [
            "assert (Bet D A E) by (apply (between_exchange3 (f P)); assumption).",
            "VernacExtend",
            "977e5aaf0deaf7b0716c8aa205bcab46e659b02f"
        ],
        [
            "assert (Le A E D E) by Le.",
            "VernacExtend",
            "f8a21dcf13ed1d83dd9d77aa32becdeea215ecb0"
        ],
        [
            "exists E; repeat split; auto.",
            "VernacExtend",
            "c6fee258b094f68b0a5d800ca7763427cb47ec0e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply grad_stab with D; assumption.",
            "VernacExtend",
            "b5f2c84141607e11cba7818bb5530da0b858259a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (eq_dec_points A D).",
            "VernacExtend",
            "a14f532fa76bc67f93b9d41b1a0891202083bd65"
        ],
        [
            "subst D; apply l6_2 with (f P); Between; apply bet_neq12__neq with (f Q); assumption.",
            "VernacExtend",
            "598cf8579c35c346465c67919a3dc4e08ebcaad9"
        ],
        [
            "apply l6_2 with D; Between.",
            "VernacExtend",
            "c66ca47e32bcd667108002297bf6705eba64c602"
        ],
        [
            "apply between_symmetry, (between_exchange3 (f P)); assumption.",
            "VernacExtend",
            "31b6a04e64752ecc2046180af2557adb541bda15"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply le_transitivity with D E; trivial.",
            "VernacExtend",
            "f39660e4b53771a50babe4cbef53917630b1d8cb"
        ],
        [
            "apply le_transitivity with (f P) (f Q); Le.",
            "VernacExtend",
            "14eed02a81c31081fdfd29ee33a6fcc1cbfabbb2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro; subst E.",
            "VernacExtend",
            "234204eebf9bbec00cb1bd72e38255ad3219bb4e"
        ],
        [
            "apply lt__nle in HLt.",
            "VernacExtend",
            "96641bba2ecf3a961b71cc7865e9951dc1ff826c"
        ],
        [
            "apply HLt, le_transitivity with D B; Le.",
            "VernacExtend",
            "ce1c05754ad6d36ebc9f17b98e2f58ca93147949"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_image_density_aux2 : forall {Tm: Tarski_neutral_dimensionless} {Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm} P Q (f : @Tpoint Tn -> @Tpoint Tm), @archimedes_axiom Tm -> line_extension f P Q -> forall A B, A <> B -> Col (f P) (f Q) A -> Col (f P) (f Q) B -> Lt (f P) (f Q) A B -> Bet (f P) A B -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B.",
            "VernacStartTheoremProof",
            "420144e96560dce44eeec210a15540ffce2266a4"
        ],
        [
            "assert (Haux := line_extension_symmetry).",
            "VernacExtend",
            "0b46d6f668deed7fa5a4a30cd2372441d3e27bcd"
        ],
        [
            "intros Tm Tm2 P Q f archi fLineExt A B HAB HColA HColB HLt HBet.",
            "VernacExtend",
            "f2b4901e7a446645224457039b8461ccaee049eb"
        ],
        [
            "assert (Hf' := fLineExt); destruct Hf' as [HPQ [fInj [fBet fCong]]].",
            "VernacExtend",
            "aabc66dcbfff4b68a52ab094da584f1385cabac1"
        ],
        [
            "destruct (eq_dec_points (f P) A).",
            "VernacExtend",
            "a3c83ec1327195f458776b91bd6a037293293c27"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert (f P <> f Q) by (intro; apply HPQ, fInj; Col).",
            "VernacExtend",
            "c55e795c130b1a8d849b8d5a6c73b36768f0301d"
        ],
        [
            "destruct (or_bet_out (f Q) (f P) B) as [HBet|[HOut|]]; [..|exfalso; Col].",
            "VernacExtend",
            "596b452a35ca12438cc7f4d570fa64254620e790"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (segment_construction Q P P Q) as [Q' []].",
            "VernacExtend",
            "3476b024dc0db7ccc10e791c4105ee28b4bf4e25"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert (HBet' : Bet (f Q) (f P) (f Q')) by (apply fBet; Col).",
            "VernacExtend",
            "8dbe8884cec52a84d18655bacb22294bb2d08abd"
        ],
        [
            "assert (HCong' : Cong (f P) (f Q') (f P) (f Q)) by (apply fCong; Col).",
            "VernacExtend",
            "32091e788fa3dbe6e9a092beb21cdf5647abb1d0"
        ],
        [
            "assert (f P <> f Q').",
            "VernacExtend",
            "4683ac03f47b8b4ac1eced5ba07c2f891e7fe3e3"
        ],
        [
            "intro; assert (P = Q') by (apply fInj; Col); assert_diffs; auto.",
            "VernacExtend",
            "e4e5e85d8089ffd81bfaea93987d3975d5a706a8"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "apply l6_2 with (f Q); Between.",
            "VernacExtend",
            "63d4d432a7c8ed5030260bb168217820b6ad3e83"
        ],
        [
            "apply le_transitivity with (f P) (f Q); Le.",
            "VernacExtend",
            "14eed02a81c31081fdfd29ee33a6fcc1cbfabbb2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro; subst; destruct HLt; Cong.",
            "VernacExtend",
            "f912c5d0b023c25e86995fe60f6f33732c0246da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists Q; repeat split; Col.",
            "VernacExtend",
            "9a2b0be665fe84b87ab1ecda5df275da992c311e"
        ],
        [
            "apply l6_13_1; Le.",
            "VernacExtend",
            "8a195fd8fd80c73d5b11cf9abbda4796d9e40267"
        ],
        [
            "intro; subst; destruct HLt; Cong.",
            "VernacExtend",
            "f912c5d0b023c25e86995fe60f6f33732c0246da"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HColA as [|[|]].",
            "VernacExtend",
            "d4a9f3d7c28e3afa4dca99dc54fe16e95e138844"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (extension_image_density_aux P Q); trivial.",
            "VernacExtend",
            "c5f186ba0dcc6a44999db8d1d75a7d11de5f6103"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (eq_dec_points (f Q) A).",
            "VernacExtend",
            "948b5ebeeb70bdaae28120e4921b762a42b69dff"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "destruct (segment_construction P Q P Q) as [Q' []].",
            "VernacExtend",
            "9767d33139b4155056278e8a20ab1dd100fa96e3"
        ],
        [
            "exists Q'.",
            "VernacExtend",
            "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
        ],
        [
            "assert (HBet' : Bet (f P) (f Q) (f Q')) by (apply fBet; Col).",
            "VernacExtend",
            "7e77c7bf04c53ec992bfba36efd194da919d5047"
        ],
        [
            "assert (HCong' : Cong (f Q) (f Q') (f P) (f Q)) by (apply fCong; Col).",
            "VernacExtend",
            "c196c69ecefc71ccad889ec86e4ce8e8ad010c60"
        ],
        [
            "assert (f Q <> f Q') by (assert_diffs; auto).",
            "VernacExtend",
            "5cfff0134090d8e255b859322a6e3e198d4f82c0"
        ],
        [
            "assert (HLt2 : Lt (f Q) (f Q') (f Q) B) by (apply (cong2_lt__lt (f P) (f Q) (f Q) B); Cong).",
            "VernacExtend",
            "b0be22b0a6e90c283babbd927c45cd6e7a62fdc0"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "apply l6_13_1; Le; apply l6_2 with (f P); Between.",
            "VernacExtend",
            "55e195f43893d004279ed10fe820897abe89736f"
        ],
        [
            "intro; subst; destruct HLt2; Cong.",
            "VernacExtend",
            "a0ba7949d0b9e53ca073d7d1752a76499e569213"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "assert (HLt2 : Lt A (f Q) A B) by (apply le1234_lt__lt with (f P) (f Q); Le).",
            "VernacExtend",
            "8dde7f3b0a0cf5afbebde7120718c245fee2ce52"
        ],
        [
            "repeat split; Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "apply l6_13_1; Le; apply l6_2 with (f P); Between.",
            "VernacExtend",
            "55e195f43893d004279ed10fe820897abe89736f"
        ],
        [
            "intro; subst; destruct HLt2; Cong.",
            "VernacExtend",
            "a0ba7949d0b9e53ca073d7d1752a76499e569213"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply line_extension_symmetry in fLineExt.",
            "VernacExtend",
            "c33572991b90e4c89ef7278e3834cf3702078fd4"
        ],
        [
            "destruct (extension_image_density_aux Q P f archi fLineExt A B) as [X]; Between.",
            "VernacExtend",
            "8c8de9e2f77b0ed9dfc4a2132ad483b514e68adc"
        ],
        [
            "apply lt_left_comm, HLt.",
            "VernacExtend",
            "e6e1a9b8b7b492cb60893679919c5c50610e17d4"
        ],
        [
            "apply outer_transitivity_between2 with (f P); Between.",
            "VernacExtend",
            "a28bb94a34d1193adeff8a222bddaeb6422f5e3f"
        ],
        [
            "spliter; exists X; repeat split; Col.",
            "VernacExtend",
            "1351af331195f6d4688388f93625a2d12c09aa66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_image_density : forall {Tm: Tarski_neutral_dimensionless} {Tm2 : Tarski_neutral_dimensionless_with_decidable_point_equality Tm} P Q (f : @Tpoint Tn -> @Tpoint Tm), @archimedes_axiom Tm -> line_extension f P Q -> forall A B, Col (f P) (f Q) A -> Col (f P) (f Q) B -> A <> B -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B.",
            "VernacStartTheoremProof",
            "83ff464c2f433b5b7f6d8447c9d09345dd4ed20f"
        ],
        [
            "intros Tm Tm2 P Q f archi fLineExt A B HA HB HAB.",
            "VernacExtend",
            "73202c6334624b84aab8fe610379ae816db60ea6"
        ],
        [
            "assert (Hf' := fLineExt); destruct Hf' as [HPQ [fInj [fBet fCong]]].",
            "VernacExtend",
            "aabc66dcbfff4b68a52ab094da584f1385cabac1"
        ],
        [
            "assert (f P <> f Q).",
            "VernacExtend",
            "b493d717e9c1626fe35060ebf63c199d54b85ab6"
        ],
        [
            "intro; apply HPQ, fInj; Col.",
            "VernacExtend",
            "5c67d77cba58c88d02bd749c8e378ba6108ecf86"
        ],
        [
            "destruct (reach__ex_gradexp_lt (f P) (f Q) A B) as [fQ' [HGrad' HLt]]; auto.",
            "VernacExtend",
            "576d2a3d3becf6f937388e2486ace95a24d85852"
        ],
        [
            "destruct (extension_gradexp P Q f fLineExt P Q fQ') as [Q' [HCol [HGrad]]]; Col.",
            "VernacExtend",
            "8b7dc7a4d2ecb29c06cd3d784a1f0c471d4c3609"
        ],
        [
            "subst fQ'.",
            "VernacExtend",
            "70fb2501fbc377fa93455a6ad3c9cd71ede3c08f"
        ],
        [
            "apply gradexp__grad in HGrad; apply gradexp__grad in HGrad'.",
            "VernacExtend",
            "c9c4bcd0ea881bae3e549372501f3b1432c5e877"
        ],
        [
            "assert (HPQ' : P <> Q').",
            "VernacExtend",
            "766623b586df0c9001cc6ec231c863c4ddcd0c3d"
        ],
        [
            "intro; subst; apply grad112__eq in HGrad; auto.",
            "VernacExtend",
            "8ec2673d37a8f59d3b6207de1e71202dca53ea82"
        ],
        [
            "assert (fLineExt' : line_extension f P Q').",
            "VernacExtend",
            "8bccc1180e24bfe8032de593b09703feb2e49535"
        ],
        [
            "apply line_extension_stability with Q; auto.",
            "VernacExtend",
            "3ebf32af9826e87eff09953b2776971648c2a674"
        ],
        [
            "assert (HCols : Col (f P) (f Q') A /\\ Col (f P) (f Q') B /\\ Col (f P) A B).",
            "VernacExtend",
            "4de57f7981d6c979f53fd88ae89082d62fb53e6d"
        ],
        [
            "split; [|split]; apply col_transitivity_1 with (f Q); Col.",
            "VernacExtend",
            "5d87e83fd7639aa5a2103f855b42d8df76c3d960"
        ],
        [
            "destruct HCols as [HA' [HB' Hdij]].",
            "VernacExtend",
            "5aab4024ba8165cbc80bafa6f888adabe8b7ceef"
        ],
        [
            "assert (HColX : forall X, Col P Q' X -> Col P Q X).",
            "VernacExtend",
            "6973fc36f6d3d566e70f7e9ac8ed3eccab408f6e"
        ],
        [
            "intros; apply col_transitivity_1 with Q'; Col.",
            "VernacExtend",
            "8557e98fc909f8b39c069404e870e179985073d0"
        ],
        [
            "assert (HH : Bet (f P) A B -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B).",
            "VernacExtend",
            "c1a1c0d0d6cc3bd45f76f9aae365a1cc5dd6cbfe"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HBet.",
            "VernacExtend",
            "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
        ],
        [
            "destruct (extension_image_density_aux2 P Q' f archi fLineExt' A B) as [X]; auto.",
            "VernacExtend",
            "ae47247ed4cc8958d008f37b05aaf6369abc69a4"
        ],
        [
            "exists X; spliter; repeat split; auto.",
            "VernacExtend",
            "9ecf4778e5a79d072853106a4dac25174ee08933"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HH' : Bet (f P) B A -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B).",
            "VernacExtend",
            "4393fca02a27146ad88ceb081905fe5b9370663e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro HBet.",
            "VernacExtend",
            "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
        ],
        [
            "destruct (extension_image_density_aux2 P Q' f archi fLineExt' B A) as [X [HX1 [HX2 []]]]; auto.",
            "VernacExtend",
            "a0274d544386f455ec15f167cac03f12c1b3d6f1"
        ],
        [
            "apply lt_right_comm, HLt.",
            "VernacExtend",
            "82a3cf149fe2bafa5bc41ddc35e7a0de3af31e16"
        ],
        [
            "exists X; repeat split; Between.",
            "VernacExtend",
            "806d369b8cb88fd9a3e7f791022c88e1c1e515fb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hdij as [|[|]].",
            "VernacExtend",
            "0815fb333e998e6a13b1536725a3d746870ac69a"
        ],
        [
            "apply HH; trivial.",
            "VernacExtend",
            "fef19c25a956ba37570ba98ca682b5c4b020eb9b"
        ],
        [
            "apply HH'; Between.",
            "VernacExtend",
            "84d7b674bdd5b36d5e56de929f637ba7e78fa8e1"
        ],
        [
            "destruct (eq_dec_points (f P) A).",
            "VernacExtend",
            "a3c83ec1327195f458776b91bd6a037293293c27"
        ],
        [
            "subst; apply HH; Between.",
            "VernacExtend",
            "bd8f0dd9c726041bf2f1330e9a7fa9d8eb27a549"
        ],
        [
            "destruct (eq_dec_points (f P) B).",
            "VernacExtend",
            "4f3a05312772762c6e1e3a2d020ce4a4d1182c59"
        ],
        [
            "subst; apply HH'; Between.",
            "VernacExtend",
            "c0d54361c337243cd7446343bfb6360efaca82c8"
        ],
        [
            "exists P; repeat split; finish.",
            "VernacExtend",
            "a2b0bee691a5102d1a7ce784d850ed1d31ebfe20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dedekind__completeness : dedekind_s_axiom -> line_completeness.",
            "VernacStartTheoremProof",
            "7da1112897078888a4cf6af1edf0ae3a40c5d251"
        ],
        [
            "intros dedekind Tm Tm2 P Q f archi fLineExt A HA.",
            "VernacExtend",
            "d921dc9a3b84263b10e6e7f20b65f9b69be0e6f3"
        ],
        [
            "destruct (eq_dec_points (f P) A).",
            "VernacExtend",
            "a3c83ec1327195f458776b91bd6a037293293c27"
        ],
        [
            "subst; exists P; split; Col.",
            "VernacExtend",
            "547a0d81def6e64833598b9ee1eff22c47187843"
        ],
        [
            "destruct (dedekind (fun X => Col P Q X /\\ Bet (f P) (f X) A) (fun X => Col P Q X /\\ Bet (f P) A (f X))) as [B HB].",
            "VernacExtend",
            "f5399a3c5dd6e4019b4cd6c6846bdba12ae4d4dd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "intros X Y [] [].",
            "VernacExtend",
            "91f0728bd0a29d1a30338559330a764056a384cb"
        ],
        [
            "apply (line_extension_reverse_bet f P Q); Col.",
            "VernacExtend",
            "42196eead2582e6adc29ab78402f55e26fc80a1b"
        ],
        [
            "eBetween.",
            "VernacExtend",
            "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "assert (HR : exists R, Col P Q R /\\ Bet (f P) A (f R)).",
            "VernacExtend",
            "06f3912f8ab305f83a40e478da3da2d2425fb13c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct (segment_construction (f P) A (f P) A) as [A' []].",
            "VernacExtend",
            "dec73cc9634e11919ad64f1653b5c8c9b17fab79"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (extension_image_density P Q f archi fLineExt A A') as [R [HR1 [HR2 []]]]; Col.",
            "VernacExtend",
            "04717a61f53c8292adf46a6d8e7fdb515b2e00a3"
        ],
        [
            "apply col_transitivity_1 with A; Col.",
            "VernacExtend",
            "6e8d2759f3304da97db70ada1a78e6dcd2fb704c"
        ],
        [
            "exists R; split; eBetween.",
            "VernacExtend",
            "6483ba8d70a9308762cc312173f0f0f44107a0c1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HR as [R []].",
            "VernacExtend",
            "655bf05b0be77dae2e567f5e2597f5d92c801d7e"
        ],
        [
            "assert (HBet : Bet P B R).",
            "VernacExtend",
            "0214f4619f9ae83059901e9ca32165d9f6b5342a"
        ],
        [
            "apply HB; split; finish; eBetween.",
            "VernacExtend",
            "d1673796e087b9a88412ed65bdab178ef49ad94b"
        ],
        [
            "assert (Col P Q B).",
            "VernacExtend",
            "0702be5003a81b08086e92db92ba285985aece22"
        ],
        [
            "apply col_transitivity_1 with R; Col; intro; treat_equalities; auto.",
            "VernacExtend",
            "2148831a20dca2a13b2e248e6612fc38496c4c2b"
        ],
        [
            "destruct (eq_dec_points (f B) A); [split; assumption|].",
            "VernacExtend",
            "b34e26ca31411c9c6a324373cca28c3360382d30"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert (Hf := fLineExt).",
            "VernacExtend",
            "988c9d52e4a106b408f037bcc6cc064fb930ffb7"
        ],
        [
            "destruct Hf as [HPQ [finj [fBet fCong]]].",
            "VernacExtend",
            "67dc46c16f49c26eb7b22915a6943173e994f16f"
        ],
        [
            "destruct (extension_image_density P Q f archi fLineExt A (f B)) as [X [HX1 [HX2 [HX3 Habs]]]]; auto.",
            "VernacExtend",
            "a51af3f3f3e2019f78e344e3ce87d2f6cfa51c4e"
        ],
        [
            "apply (pres_bet_line__col f P Q); Col.",
            "VernacExtend",
            "51459e41f6fe888a2e15717cf9d854ef8c3534cb"
        ],
        [
            "destruct (l5_3 (f P) A (f B) (f R)); auto; [apply fBet; Col|apply Habs..].",
            "VernacExtend",
            "2d36bfc9e9b9be7be6665ceddf431b0c50b12600"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply between_equality with (f P).",
            "VernacExtend",
            "c033d53686fbed4858cd12439574639e9a736e11"
        ],
        [
            "apply between_symmetry, fBet, HB; try split; Col; Between.",
            "VernacExtend",
            "be4e5d51e4eebaace5a8c44899ac09832149e119"
        ],
        [
            "apply between_inner_transitivity with (f B); assumption.",
            "VernacExtend",
            "7f7f6fb4e58b389ff6800b502c432cdacbb2b812"
        ],
        [
            "clear dependent R; eBetween.",
            "VernacExtend",
            "0c0a158e962cbc5d3cc38b41e193569e6c660c56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply between_equality with (f P).",
            "VernacExtend",
            "c033d53686fbed4858cd12439574639e9a736e11"
        ],
        [
            "clear dependent R; eBetween.",
            "VernacExtend",
            "0c0a158e962cbc5d3cc38b41e193569e6c660c56"
        ],
        [
            "apply between_exchange3 with (f R).",
            "VernacExtend",
            "7481399155b2f2d288b34ac195a363329d66eddf"
        ],
        [
            "apply between_symmetry, fBet; Col; apply HB; split; Col; eBetween.",
            "VernacExtend",
            "e117425df1ba9a62378334ddbdc07302ddd2c9e2"
        ],
        [
            "apply bet3__bet with A (f B); finish.",
            "VernacExtend",
            "0a81dc7e892f5dfc8e3cef6231b57293e292f57e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Completeness.",
            "VernacEndSegment",
            "b964826d1e476128b764f30d73ad96dd38e644d5"
        ]
    ],
    "proofs": [
        {
            "name": "line_extension_symmetry",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros Tm f P Q [HPQ [fInj [fBet fCong]]].",
                        "VernacExtend",
                        "868934c0ebade884bd9ceec54dbc722b24880400"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto; intro; intros; [apply fInj|apply fBet|apply fCong]; Col.",
                        "VernacExtend",
                        "1870c56af260e51f429266341dccd6cd8745f17b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "line_extension_stability",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros Tm f P Q R HCol HPR [HPQ [fInj [fBet fCong]]].",
                        "VernacExtend",
                        "c95537ba4f2d1f4793e2c3528657fc49ed20e4c4"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto; intro; intros; [apply fInj|apply fBet|apply fCong]; trivial; apply col_transitivity_1 with R; Col.",
                        "VernacExtend",
                        "3259ffab3d699653270ce487ee9cc62e5d31337d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "line_extension_reverse_bet",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros Tm Tm2 f P Q [HPQ [fInj [fBet fCong]]] A B C HA HB HC HBet.",
                        "VernacExtend",
                        "30bced2d067475338a80fabce3ff75763dc17ca5"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f A) (f B)) as [Heq|Hdiff].",
                        "VernacExtend",
                        "f009d2acae5d9e4e8c4afe51ca18e573b920d36c"
                    ]
                },
                {
                    "command": [
                        "apply fInj in Heq; subst; Between.",
                        "VernacExtend",
                        "bcb0653b2095daaee92537a4eb2ed1454c8aab05"
                    ]
                },
                {
                    "command": [
                        "assert (A <> B) by (intro; subst; auto).",
                        "VernacExtend",
                        "5feca701a85f05571d071066efa19d040ba9e0ae"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A B B C) as [D [HD1 HD2]].",
                        "VernacExtend",
                        "4aa572d44c9ef9d50bede195042c9e50f8a05f74"
                    ]
                },
                {
                    "command": [
                        "assert (C = D); [|subst; auto].",
                        "VernacExtend",
                        "d60f697cb54e828ed8bd2016e1393b27602f271c"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q D) by (apply (colx A B); Col).",
                        "VernacExtend",
                        "a51f7978c7cb03cc4eea9590919612d5228aed9a"
                    ]
                },
                {
                    "command": [
                        "apply fInj; trivial.",
                        "VernacExtend",
                        "fa8ac0faa3d50c898f5dfdddc35411cdfe9cbde0"
                    ]
                },
                {
                    "command": [
                        "apply between_cong_3 with (f A) (f B); Cong.",
                        "VernacExtend",
                        "ae264975ab7cfa3dddf1092a7434a806b3e9b95c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pres_bet_line__col",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros Tm f P Q HPQ fBet A B C HA HB HC.",
                        "VernacExtend",
                        "a5e76167398b64b5b4f4abef5ca89ffa14000fad"
                    ]
                },
                {
                    "command": [
                        "destruct (col3 P Q A B C) as [HBet|[HBet|HBet]]; trivial; apply fBet in HBet; Col.",
                        "VernacExtend",
                        "5ad06a6bb07bdc278dfe97117c438de6365af2e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_grad",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros Tm Tm2 P Q f [HPQ [fInj [fBet fCong]]] A B X HA HB HGrad.",
                        "VernacExtend",
                        "73e1f4bd46753b79f8e13d253333cb4beb863040"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B).",
                        "VernacExtend",
                        "60f36dd855347a4a1ea828b2e7a944ccf5699007"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "apply grad112__eq in HGrad; subst X.",
                        "VernacExtend",
                        "4c724c882b80d58438918cadd918d9bc14533a27"
                    ]
                },
                {
                    "command": [
                        "exists A; repeat split; [assumption|constructor].",
                        "VernacExtend",
                        "4598d8e888d4dbc9766b60fab35c02e8cb03dc6b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "remember (f A) as A0.",
                        "VernacExtend",
                        "00fb408158719953d973e2e9f03005d5f6882ba0"
                    ]
                },
                {
                    "command": [
                        "remember (f B) as B0.",
                        "VernacExtend",
                        "adf4528b7e4c602b80bde1417c89bf63c663b12f"
                    ]
                },
                {
                    "command": [
                        "induction HGrad.",
                        "VernacExtend",
                        "84125e218497266fb0da8aa34e7f68e1f1c9b1f5"
                    ]
                },
                {
                    "command": [
                        "exists B; repeat split; auto; constructor.",
                        "VernacExtend",
                        "9441e0bc6830bdac47e5473b5c1fe73db93f8254"
                    ]
                },
                {
                    "command": [
                        "rename C into X, C' into X'.",
                        "VernacExtend",
                        "2839202bd91f2371dc08a5e7d4286db8b1c031d8"
                    ]
                },
                {
                    "command": [
                        "destruct IHHGrad as [C [HC1 [HC2 HC3]]]; trivial.",
                        "VernacExtend",
                        "7ab84cf140ee2469e35c7978415005b0d497ba5b"
                    ]
                },
                {
                    "command": [
                        "assert (A0 <> X).",
                        "VernacExtend",
                        "ba92dce1da4473777f018547dd37f61523646ba4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; subst X.",
                        "VernacExtend",
                        "5c9425a8bdb5f8751f389f50ee4a6647674ff40c"
                    ]
                },
                {
                    "command": [
                        "assert (A = C) by (apply fInj; auto; congruence).",
                        "VernacExtend",
                        "6fa2aeb904db3b3a31c44cb8c23529e567251857"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply grad121__eq in HGrad.",
                        "VernacExtend",
                        "4f884acc4b108796447dcd5ac1927e9a7876b6d6"
                    ]
                },
                {
                    "command": [
                        "apply fInj in HGrad; auto.",
                        "VernacExtend",
                        "b31757d291f066ee86639471a7819dd024201346"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A C A B) as [C' [HC'1 HC'2]].",
                        "VernacExtend",
                        "2bb2c7afc4484a074e976ed1d3e2e48f26efc935"
                    ]
                },
                {
                    "command": [
                        "exists C'.",
                        "VernacExtend",
                        "d0fa3e885e03cae8c7137bda75bba029f8227667"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q C').",
                        "VernacExtend",
                        "951c29aef52e0b7905d94428c29a9b4eecb8cfb3"
                    ]
                },
                {
                    "command": [
                        "apply (colx A C); Col; apply grad_neq__neq13 with B; auto.",
                        "VernacExtend",
                        "5ef737ecc8954d1b505cd6945e22a9a1f5f1fcea"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "apply grad_stab with C; Cong.",
                        "VernacExtend",
                        "718c88b9e212f209093b6918c8381d49df783c33"
                    ]
                },
                {
                    "command": [
                        "apply (construction_uniqueness A0 X A0 B0); Cong; subst; auto.",
                        "VernacExtend",
                        "fd7242c57b5b46f5f4330dc376732bf248c91388"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_gradexp",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros Tm Tm2 P Q f [HPQ [fInj [fBet fCong]]] A B X HA HB.",
                        "VernacExtend",
                        "ff41d8d0c53a5a6cb61406a00026d76b3ef17a9e"
                    ]
                },
                {
                    "command": [
                        "remember (f A) as A'.",
                        "VernacExtend",
                        "9fbf97c4b64556719c7c0ceb8cb6205e8e54bbed"
                    ]
                },
                {
                    "command": [
                        "remember (f B) as B'.",
                        "VernacExtend",
                        "41ac50df16f7f6edf3a2ff7a62a72fb4fc86ec5c"
                    ]
                },
                {
                    "command": [
                        "rewrite gradexp__gradexpinv.",
                        "VernacExtend",
                        "55a2ed169934475b2706e0d11ac4869748a7ad81"
                    ]
                },
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "exists B; repeat split; auto; constructor.",
                        "VernacExtend",
                        "9441e0bc6830bdac47e5473b5c1fe73db93f8254"
                    ]
                },
                {
                    "command": [
                        "destruct IHGradExpInv as [C' [HCol []]]; auto.",
                        "VernacExtend",
                        "03983e4c7f3ce2ad2ad332d1d5702426903edcc7"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence A C') as [M []].",
                        "VernacExtend",
                        "7c6965fe6f4eeec7519e4baa5c4b28cd1c20753e"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q M).",
                        "VernacExtend",
                        "b64a67d08a65681461db196b4c2e140271d2be6f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A C').",
                        "VernacExtend",
                        "75d7d24ca6e7d5d874d77a7c48b31a4d32b1dee9"
                    ]
                },
                {
                    "command": [
                        "treat_equalities; assumption.",
                        "VernacExtend",
                        "1de2a51775ad72f97b3cb8e5d10010adcfc011d7"
                    ]
                },
                {
                    "command": [
                        "apply colx with A C'; Col.",
                        "VernacExtend",
                        "e2bac16c7f8906149857fa26fc1257276a6e8906"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists M; repeat split; trivial.",
                        "VernacExtend",
                        "793f1fe5403a216a91ec570a1e62917e5d628ea2"
                    ]
                },
                {
                    "command": [
                        "rewrite gradexp__gradexpinv.",
                        "VernacExtend",
                        "55a2ed169934475b2706e0d11ac4869748a7ad81"
                    ]
                },
                {
                    "command": [
                        "apply gradexpinv_stab with C'; trivial.",
                        "VernacExtend",
                        "3202a82585a6d05027a3d185775babd9bc47409a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gradexp__gradexpinv; assumption.",
                        "VernacExtend",
                        "30f9bccd81236ad845f3acd9de1d07e37e6e3165"
                    ]
                },
                {
                    "command": [
                        "apply l7_17 with A0 B0; split; trivial; subst; [apply fBet|apply fCong]; assumption.",
                        "VernacExtend",
                        "15628a6aa1ff32219ede61a76a6fd846f9834d54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_image_density_aux",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros Tm Tm2 P Q f archi fLineExt A B HAB HLt HBet1 HBet2.",
                        "VernacExtend",
                        "c3d09f358a74fe04cc6862e4be0e02f2135885ba"
                    ]
                },
                {
                    "command": [
                        "cut (exists C, Grad (f P) (f Q) C /\\ Bet A C B /\\ C <> A /\\ C <> B).",
                        "VernacExtend",
                        "caccfa342f4e8ebebf50892e0ba176c642c5976f"
                    ]
                },
                {
                    "command": [
                        "intros [C [HC1 [HC2 [HC3 HC4]]]].",
                        "VernacExtend",
                        "53c4b8fc10433b3e01dcd37c0fdfa8c45aa685ac"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_grad P Q f fLineExt P Q C) as [X]; Col.",
                        "VernacExtend",
                        "4da9cf1485dea01e6f24f8e455b73175d39b34da"
                    ]
                },
                {
                    "command": [
                        "exists X; spliter; subst; auto.",
                        "VernacExtend",
                        "8c3df62208c66e521aa8102f0af500120363baa8"
                    ]
                },
                {
                    "command": [
                        "assert (Hdiff : f P <> f Q).",
                        "VernacExtend",
                        "fcd0aee6f05b176820c68d9de856ddb7cdefc8c0"
                    ]
                },
                {
                    "command": [
                        "intro; destruct fLineExt as [HPQ [fInj]]; apply HPQ, fInj; Col.",
                        "VernacExtend",
                        "1476da03a9d17eff8d6974171e845291b53f9e21"
                    ]
                },
                {
                    "command": [
                        "destruct (reach__grad_min (f P) (f Q) A) as [D [E [HD1 [HD2 [HE1 [HE2 [HDE1 HDE2]]]]]]]; auto.",
                        "VernacExtend",
                        "5790379c0b20142ef7b6e2a656def2268f639f8d"
                    ]
                },
                {
                    "command": [
                        "assert (Bet D A E) by (apply (between_exchange3 (f P)); assumption).",
                        "VernacExtend",
                        "977e5aaf0deaf7b0716c8aa205bcab46e659b02f"
                    ]
                },
                {
                    "command": [
                        "assert (Le A E D E) by Le.",
                        "VernacExtend",
                        "f8a21dcf13ed1d83dd9d77aa32becdeea215ecb0"
                    ]
                },
                {
                    "command": [
                        "exists E; repeat split; auto.",
                        "VernacExtend",
                        "c6fee258b094f68b0a5d800ca7763427cb47ec0e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply grad_stab with D; assumption.",
                        "VernacExtend",
                        "b5f2c84141607e11cba7818bb5530da0b858259a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1.",
                        "VernacExtend",
                        "f187cdac6d235e831042e03fa45429cf965f0b0d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A D).",
                        "VernacExtend",
                        "a14f532fa76bc67f93b9d41b1a0891202083bd65"
                    ]
                },
                {
                    "command": [
                        "subst D; apply l6_2 with (f P); Between; apply bet_neq12__neq with (f Q); assumption.",
                        "VernacExtend",
                        "598cf8579c35c346465c67919a3dc4e08ebcaad9"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with D; Between.",
                        "VernacExtend",
                        "c66ca47e32bcd667108002297bf6705eba64c602"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, (between_exchange3 (f P)); assumption.",
                        "VernacExtend",
                        "31b6a04e64752ecc2046180af2557adb541bda15"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with D E; trivial.",
                        "VernacExtend",
                        "f39660e4b53771a50babe4cbef53917630b1d8cb"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with (f P) (f Q); Le.",
                        "VernacExtend",
                        "14eed02a81c31081fdfd29ee33a6fcc1cbfabbb2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro; subst E.",
                        "VernacExtend",
                        "234204eebf9bbec00cb1bd72e38255ad3219bb4e"
                    ]
                },
                {
                    "command": [
                        "apply lt__nle in HLt.",
                        "VernacExtend",
                        "96641bba2ecf3a961b71cc7865e9951dc1ff826c"
                    ]
                },
                {
                    "command": [
                        "apply HLt, le_transitivity with D B; Le.",
                        "VernacExtend",
                        "ce1c05754ad6d36ebc9f17b98e2f58ca93147949"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_image_density_aux2",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "assert (Haux := line_extension_symmetry).",
                        "VernacExtend",
                        "0b46d6f668deed7fa5a4a30cd2372441d3e27bcd"
                    ]
                },
                {
                    "command": [
                        "intros Tm Tm2 P Q f archi fLineExt A B HAB HColA HColB HLt HBet.",
                        "VernacExtend",
                        "f2b4901e7a446645224457039b8461ccaee049eb"
                    ]
                },
                {
                    "command": [
                        "assert (Hf' := fLineExt); destruct Hf' as [HPQ [fInj [fBet fCong]]].",
                        "VernacExtend",
                        "aabc66dcbfff4b68a52ab094da584f1385cabac1"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f P) A).",
                        "VernacExtend",
                        "a3c83ec1327195f458776b91bd6a037293293c27"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "assert (f P <> f Q) by (intro; apply HPQ, fInj; Col).",
                        "VernacExtend",
                        "c55e795c130b1a8d849b8d5a6c73b36768f0301d"
                    ]
                },
                {
                    "command": [
                        "destruct (or_bet_out (f Q) (f P) B) as [HBet|[HOut|]]; [..|exfalso; Col].",
                        "VernacExtend",
                        "596b452a35ca12438cc7f4d570fa64254620e790"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction Q P P Q) as [Q' []].",
                        "VernacExtend",
                        "3476b024dc0db7ccc10e791c4105ee28b4bf4e25"
                    ]
                },
                {
                    "command": [
                        "exists Q'.",
                        "VernacExtend",
                        "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
                    ]
                },
                {
                    "command": [
                        "assert (HBet' : Bet (f Q) (f P) (f Q')) by (apply fBet; Col).",
                        "VernacExtend",
                        "8dbe8884cec52a84d18655bacb22294bb2d08abd"
                    ]
                },
                {
                    "command": [
                        "assert (HCong' : Cong (f P) (f Q') (f P) (f Q)) by (apply fCong; Col).",
                        "VernacExtend",
                        "32091e788fa3dbe6e9a092beb21cdf5647abb1d0"
                    ]
                },
                {
                    "command": [
                        "assert (f P <> f Q').",
                        "VernacExtend",
                        "4683ac03f47b8b4ac1eced5ba07c2f891e7fe3e3"
                    ]
                },
                {
                    "command": [
                        "intro; assert (P = Q') by (apply fInj; Col); assert_diffs; auto.",
                        "VernacExtend",
                        "e4e5e85d8089ffd81bfaea93987d3975d5a706a8"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1.",
                        "VernacExtend",
                        "f187cdac6d235e831042e03fa45429cf965f0b0d"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with (f Q); Between.",
                        "VernacExtend",
                        "63d4d432a7c8ed5030260bb168217820b6ad3e83"
                    ]
                },
                {
                    "command": [
                        "apply le_transitivity with (f P) (f Q); Le.",
                        "VernacExtend",
                        "14eed02a81c31081fdfd29ee33a6fcc1cbfabbb2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intro; subst; destruct HLt; Cong.",
                        "VernacExtend",
                        "f912c5d0b023c25e86995fe60f6f33732c0246da"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists Q; repeat split; Col.",
                        "VernacExtend",
                        "9a2b0be665fe84b87ab1ecda5df275da992c311e"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1; Le.",
                        "VernacExtend",
                        "8a195fd8fd80c73d5b11cf9abbda4796d9e40267"
                    ]
                },
                {
                    "command": [
                        "intro; subst; destruct HLt; Cong.",
                        "VernacExtend",
                        "f912c5d0b023c25e86995fe60f6f33732c0246da"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HColA as [|[|]].",
                        "VernacExtend",
                        "d4a9f3d7c28e3afa4dca99dc54fe16e95e138844"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (extension_image_density_aux P Q); trivial.",
                        "VernacExtend",
                        "c5f186ba0dcc6a44999db8d1d75a7d11de5f6103"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f Q) A).",
                        "VernacExtend",
                        "948b5ebeeb70bdaae28120e4921b762a42b69dff"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction P Q P Q) as [Q' []].",
                        "VernacExtend",
                        "9767d33139b4155056278e8a20ab1dd100fa96e3"
                    ]
                },
                {
                    "command": [
                        "exists Q'.",
                        "VernacExtend",
                        "2b3959d7a0e50302e7dedaa0718c686b8c88edc2"
                    ]
                },
                {
                    "command": [
                        "assert (HBet' : Bet (f P) (f Q) (f Q')) by (apply fBet; Col).",
                        "VernacExtend",
                        "7e77c7bf04c53ec992bfba36efd194da919d5047"
                    ]
                },
                {
                    "command": [
                        "assert (HCong' : Cong (f Q) (f Q') (f P) (f Q)) by (apply fCong; Col).",
                        "VernacExtend",
                        "c196c69ecefc71ccad889ec86e4ce8e8ad010c60"
                    ]
                },
                {
                    "command": [
                        "assert (f Q <> f Q') by (assert_diffs; auto).",
                        "VernacExtend",
                        "5cfff0134090d8e255b859322a6e3e198d4f82c0"
                    ]
                },
                {
                    "command": [
                        "assert (HLt2 : Lt (f Q) (f Q') (f Q) B) by (apply (cong2_lt__lt (f P) (f Q) (f Q) B); Cong).",
                        "VernacExtend",
                        "b0be22b0a6e90c283babbd927c45cd6e7a62fdc0"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1; Le; apply l6_2 with (f P); Between.",
                        "VernacExtend",
                        "55e195f43893d004279ed10fe820897abe89736f"
                    ]
                },
                {
                    "command": [
                        "intro; subst; destruct HLt2; Cong.",
                        "VernacExtend",
                        "a0ba7949d0b9e53ca073d7d1752a76499e569213"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "assert (HLt2 : Lt A (f Q) A B) by (apply le1234_lt__lt with (f P) (f Q); Le).",
                        "VernacExtend",
                        "8dde7f3b0a0cf5afbebde7120718c245fee2ce52"
                    ]
                },
                {
                    "command": [
                        "repeat split; Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "apply l6_13_1; Le; apply l6_2 with (f P); Between.",
                        "VernacExtend",
                        "55e195f43893d004279ed10fe820897abe89736f"
                    ]
                },
                {
                    "command": [
                        "intro; subst; destruct HLt2; Cong.",
                        "VernacExtend",
                        "a0ba7949d0b9e53ca073d7d1752a76499e569213"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply line_extension_symmetry in fLineExt.",
                        "VernacExtend",
                        "c33572991b90e4c89ef7278e3834cf3702078fd4"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_image_density_aux Q P f archi fLineExt A B) as [X]; Between.",
                        "VernacExtend",
                        "8c8de9e2f77b0ed9dfc4a2132ad483b514e68adc"
                    ]
                },
                {
                    "command": [
                        "apply lt_left_comm, HLt.",
                        "VernacExtend",
                        "e6e1a9b8b7b492cb60893679919c5c50610e17d4"
                    ]
                },
                {
                    "command": [
                        "apply outer_transitivity_between2 with (f P); Between.",
                        "VernacExtend",
                        "a28bb94a34d1193adeff8a222bddaeb6422f5e3f"
                    ]
                },
                {
                    "command": [
                        "spliter; exists X; repeat split; Col.",
                        "VernacExtend",
                        "1351af331195f6d4688388f93625a2d12c09aa66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_image_density",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros Tm Tm2 P Q f archi fLineExt A B HA HB HAB.",
                        "VernacExtend",
                        "73202c6334624b84aab8fe610379ae816db60ea6"
                    ]
                },
                {
                    "command": [
                        "assert (Hf' := fLineExt); destruct Hf' as [HPQ [fInj [fBet fCong]]].",
                        "VernacExtend",
                        "aabc66dcbfff4b68a52ab094da584f1385cabac1"
                    ]
                },
                {
                    "command": [
                        "assert (f P <> f Q).",
                        "VernacExtend",
                        "b493d717e9c1626fe35060ebf63c199d54b85ab6"
                    ]
                },
                {
                    "command": [
                        "intro; apply HPQ, fInj; Col.",
                        "VernacExtend",
                        "5c67d77cba58c88d02bd749c8e378ba6108ecf86"
                    ]
                },
                {
                    "command": [
                        "destruct (reach__ex_gradexp_lt (f P) (f Q) A B) as [fQ' [HGrad' HLt]]; auto.",
                        "VernacExtend",
                        "576d2a3d3becf6f937388e2486ace95a24d85852"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_gradexp P Q f fLineExt P Q fQ') as [Q' [HCol [HGrad]]]; Col.",
                        "VernacExtend",
                        "8b7dc7a4d2ecb29c06cd3d784a1f0c471d4c3609"
                    ]
                },
                {
                    "command": [
                        "subst fQ'.",
                        "VernacExtend",
                        "70fb2501fbc377fa93455a6ad3c9cd71ede3c08f"
                    ]
                },
                {
                    "command": [
                        "apply gradexp__grad in HGrad; apply gradexp__grad in HGrad'.",
                        "VernacExtend",
                        "c9c4bcd0ea881bae3e549372501f3b1432c5e877"
                    ]
                },
                {
                    "command": [
                        "assert (HPQ' : P <> Q').",
                        "VernacExtend",
                        "766623b586df0c9001cc6ec231c863c4ddcd0c3d"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply grad112__eq in HGrad; auto.",
                        "VernacExtend",
                        "8ec2673d37a8f59d3b6207de1e71202dca53ea82"
                    ]
                },
                {
                    "command": [
                        "assert (fLineExt' : line_extension f P Q').",
                        "VernacExtend",
                        "8bccc1180e24bfe8032de593b09703feb2e49535"
                    ]
                },
                {
                    "command": [
                        "apply line_extension_stability with Q; auto.",
                        "VernacExtend",
                        "3ebf32af9826e87eff09953b2776971648c2a674"
                    ]
                },
                {
                    "command": [
                        "assert (HCols : Col (f P) (f Q') A /\\ Col (f P) (f Q') B /\\ Col (f P) A B).",
                        "VernacExtend",
                        "4de57f7981d6c979f53fd88ae89082d62fb53e6d"
                    ]
                },
                {
                    "command": [
                        "split; [|split]; apply col_transitivity_1 with (f Q); Col.",
                        "VernacExtend",
                        "5d87e83fd7639aa5a2103f855b42d8df76c3d960"
                    ]
                },
                {
                    "command": [
                        "destruct HCols as [HA' [HB' Hdij]].",
                        "VernacExtend",
                        "5aab4024ba8165cbc80bafa6f888adabe8b7ceef"
                    ]
                },
                {
                    "command": [
                        "assert (HColX : forall X, Col P Q' X -> Col P Q X).",
                        "VernacExtend",
                        "6973fc36f6d3d566e70f7e9ac8ed3eccab408f6e"
                    ]
                },
                {
                    "command": [
                        "intros; apply col_transitivity_1 with Q'; Col.",
                        "VernacExtend",
                        "8557e98fc909f8b39c069404e870e179985073d0"
                    ]
                },
                {
                    "command": [
                        "assert (HH : Bet (f P) A B -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B).",
                        "VernacExtend",
                        "c1a1c0d0d6cc3bd45f76f9aae365a1cc5dd6cbfe"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HBet.",
                        "VernacExtend",
                        "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_image_density_aux2 P Q' f archi fLineExt' A B) as [X]; auto.",
                        "VernacExtend",
                        "ae47247ed4cc8958d008f37b05aaf6369abc69a4"
                    ]
                },
                {
                    "command": [
                        "exists X; spliter; repeat split; auto.",
                        "VernacExtend",
                        "9ecf4778e5a79d072853106a4dac25174ee08933"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HH' : Bet (f P) B A -> exists X, Col P Q X /\\ Bet A (f X) B /\\ f X <> A /\\ f X <> B).",
                        "VernacExtend",
                        "4393fca02a27146ad88ceb081905fe5b9370663e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro HBet.",
                        "VernacExtend",
                        "8e4839a23ae0fa693a9d8b82c22b06d85c7fa3fc"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_image_density_aux2 P Q' f archi fLineExt' B A) as [X [HX1 [HX2 []]]]; auto.",
                        "VernacExtend",
                        "a0274d544386f455ec15f167cac03f12c1b3d6f1"
                    ]
                },
                {
                    "command": [
                        "apply lt_right_comm, HLt.",
                        "VernacExtend",
                        "82a3cf149fe2bafa5bc41ddc35e7a0de3af31e16"
                    ]
                },
                {
                    "command": [
                        "exists X; repeat split; Between.",
                        "VernacExtend",
                        "806d369b8cb88fd9a3e7f791022c88e1c1e515fb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct Hdij as [|[|]].",
                        "VernacExtend",
                        "0815fb333e998e6a13b1536725a3d746870ac69a"
                    ]
                },
                {
                    "command": [
                        "apply HH; trivial.",
                        "VernacExtend",
                        "fef19c25a956ba37570ba98ca682b5c4b020eb9b"
                    ]
                },
                {
                    "command": [
                        "apply HH'; Between.",
                        "VernacExtend",
                        "84d7b674bdd5b36d5e56de929f637ba7e78fa8e1"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f P) A).",
                        "VernacExtend",
                        "a3c83ec1327195f458776b91bd6a037293293c27"
                    ]
                },
                {
                    "command": [
                        "subst; apply HH; Between.",
                        "VernacExtend",
                        "bd8f0dd9c726041bf2f1330e9a7fa9d8eb27a549"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f P) B).",
                        "VernacExtend",
                        "4f3a05312772762c6e1e3a2d020ce4a4d1182c59"
                    ]
                },
                {
                    "command": [
                        "subst; apply HH'; Between.",
                        "VernacExtend",
                        "c0d54361c337243cd7446343bfb6360efaca82c8"
                    ]
                },
                {
                    "command": [
                        "exists P; repeat split; finish.",
                        "VernacExtend",
                        "a2b0bee691a5102d1a7ce784d850ed1d31ebfe20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dedekind__completeness",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros dedekind Tm Tm2 P Q f archi fLineExt A HA.",
                        "VernacExtend",
                        "d921dc9a3b84263b10e6e7f20b65f9b69be0e6f3"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f P) A).",
                        "VernacExtend",
                        "a3c83ec1327195f458776b91bd6a037293293c27"
                    ]
                },
                {
                    "command": [
                        "subst; exists P; split; Col.",
                        "VernacExtend",
                        "547a0d81def6e64833598b9ee1eff22c47187843"
                    ]
                },
                {
                    "command": [
                        "destruct (dedekind (fun X => Col P Q X /\\ Bet (f P) (f X) A) (fun X => Col P Q X /\\ Bet (f P) A (f X))) as [B HB].",
                        "VernacExtend",
                        "f5399a3c5dd6e4019b4cd6c6846bdba12ae4d4dd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "intros X Y [] [].",
                        "VernacExtend",
                        "91f0728bd0a29d1a30338559330a764056a384cb"
                    ]
                },
                {
                    "command": [
                        "apply (line_extension_reverse_bet f P Q); Col.",
                        "VernacExtend",
                        "42196eead2582e6adc29ab78402f55e26fc80a1b"
                    ]
                },
                {
                    "command": [
                        "eBetween.",
                        "VernacExtend",
                        "7b31bcfa7dadd14c68b56ddf144f7ee645de2c81"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "assert (HR : exists R, Col P Q R /\\ Bet (f P) A (f R)).",
                        "VernacExtend",
                        "06f3912f8ab305f83a40e478da3da2d2425fb13c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction (f P) A (f P) A) as [A' []].",
                        "VernacExtend",
                        "dec73cc9634e11919ad64f1653b5c8c9b17fab79"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_image_density P Q f archi fLineExt A A') as [R [HR1 [HR2 []]]]; Col.",
                        "VernacExtend",
                        "04717a61f53c8292adf46a6d8e7fdb515b2e00a3"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with A; Col.",
                        "VernacExtend",
                        "6e8d2759f3304da97db70ada1a78e6dcd2fb704c"
                    ]
                },
                {
                    "command": [
                        "exists R; split; eBetween.",
                        "VernacExtend",
                        "6483ba8d70a9308762cc312173f0f0f44107a0c1"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct HR as [R []].",
                        "VernacExtend",
                        "655bf05b0be77dae2e567f5e2597f5d92c801d7e"
                    ]
                },
                {
                    "command": [
                        "assert (HBet : Bet P B R).",
                        "VernacExtend",
                        "0214f4619f9ae83059901e9ca32165d9f6b5342a"
                    ]
                },
                {
                    "command": [
                        "apply HB; split; finish; eBetween.",
                        "VernacExtend",
                        "d1673796e087b9a88412ed65bdab178ef49ad94b"
                    ]
                },
                {
                    "command": [
                        "assert (Col P Q B).",
                        "VernacExtend",
                        "0702be5003a81b08086e92db92ba285985aece22"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with R; Col; intro; treat_equalities; auto.",
                        "VernacExtend",
                        "2148831a20dca2a13b2e248e6612fc38496c4c2b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points (f B) A); [split; assumption|].",
                        "VernacExtend",
                        "b34e26ca31411c9c6a324373cca28c3360382d30"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert (Hf := fLineExt).",
                        "VernacExtend",
                        "988c9d52e4a106b408f037bcc6cc064fb930ffb7"
                    ]
                },
                {
                    "command": [
                        "destruct Hf as [HPQ [finj [fBet fCong]]].",
                        "VernacExtend",
                        "67dc46c16f49c26eb7b22915a6943173e994f16f"
                    ]
                },
                {
                    "command": [
                        "destruct (extension_image_density P Q f archi fLineExt A (f B)) as [X [HX1 [HX2 [HX3 Habs]]]]; auto.",
                        "VernacExtend",
                        "a51af3f3f3e2019f78e344e3ce87d2f6cfa51c4e"
                    ]
                },
                {
                    "command": [
                        "apply (pres_bet_line__col f P Q); Col.",
                        "VernacExtend",
                        "51459e41f6fe888a2e15717cf9d854ef8c3534cb"
                    ]
                },
                {
                    "command": [
                        "destruct (l5_3 (f P) A (f B) (f R)); auto; [apply fBet; Col|apply Habs..].",
                        "VernacExtend",
                        "2d36bfc9e9b9be7be6665ceddf431b0c50b12600"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply between_equality with (f P).",
                        "VernacExtend",
                        "c033d53686fbed4858cd12439574639e9a736e11"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, fBet, HB; try split; Col; Between.",
                        "VernacExtend",
                        "be4e5d51e4eebaace5a8c44899ac09832149e119"
                    ]
                },
                {
                    "command": [
                        "apply between_inner_transitivity with (f B); assumption.",
                        "VernacExtend",
                        "7f7f6fb4e58b389ff6800b502c432cdacbb2b812"
                    ]
                },
                {
                    "command": [
                        "clear dependent R; eBetween.",
                        "VernacExtend",
                        "0c0a158e962cbc5d3cc38b41e193569e6c660c56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply between_equality with (f P).",
                        "VernacExtend",
                        "c033d53686fbed4858cd12439574639e9a736e11"
                    ]
                },
                {
                    "command": [
                        "clear dependent R; eBetween.",
                        "VernacExtend",
                        "0c0a158e962cbc5d3cc38b41e193569e6c660c56"
                    ]
                },
                {
                    "command": [
                        "apply between_exchange3 with (f R).",
                        "VernacExtend",
                        "7481399155b2f2d288b34ac195a363329d66eddf"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry, fBet; Col; apply HB; split; Col; eBetween.",
                        "VernacExtend",
                        "e117425df1ba9a62378334ddbdc07302ddd2c9e2"
                    ]
                },
                {
                    "command": [
                        "apply bet3__bet with A (f B); finish.",
                        "VernacExtend",
                        "0a81dc7e892f5dfc8e3cef6231b57293e292f57e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}