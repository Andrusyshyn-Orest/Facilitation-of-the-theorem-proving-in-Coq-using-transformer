{
    "filename": "Meta_theory/Continuity/aristotle.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Axioms.continuity_axioms.",
            "VernacRequire",
            "962508c37593eeb0a9b67bf7929e905d43d9a9b9"
        ],
        [
            "Require Import GeoCoq.Tarski_dev.Annexes.saccheri.",
            "VernacRequire",
            "7f4ea2c902af7c230435bbab1ce2ec0513b4262b"
        ],
        [
            "Section Aristotle.",
            "VernacBeginSection",
            "e6ff199a53c27db10781461a76bed2bb2760c737"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Lemma aristotle__greenberg : aristotle_s_axiom -> greenberg_s_axiom.",
            "VernacStartTheoremProof",
            "8fbb624c10472173d0170bb5a6a91bb99608c795"
        ],
        [
            "intros aristotle P Q R A B C.",
            "VernacExtend",
            "4b00e0b2fcd09006a641828bbdf1ac803901cc16"
        ],
        [
            "intros HNColB HABCacute HQRdiff HQright.",
            "VernacExtend",
            "98ef33f6102476fa8ba98f202525b982a0a49875"
        ],
        [
            "elim (eq_dec_points P Q); intro HPQdiff.",
            "VernacExtend",
            "e7d6985746b1cb9800a186cad12da25f04562b98"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "exists R.",
            "VernacExtend",
            "6be16195e61cf6042a202f52c388c0dc69db4ce9"
        ],
        [
            "split; [|apply out_trivial; auto].",
            "VernacExtend",
            "465048a01942fa6950c0f383415d7346853cc09e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply lea121345; auto.",
            "VernacExtend",
            "8471e118636a41b50d9962caf30a9e8eee214b8f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply HNColB.",
            "VernacExtend",
            "66d92c0162704b85a971d6599e302ea7f1704a44"
        ],
        [
            "apply col_permutation_4.",
            "VernacExtend",
            "54503687d69ef6d95431dca18b161ad914cc94d5"
        ],
        [
            "apply out_col.",
            "VernacExtend",
            "57e48e4027162d3af2f745773def7abb7cb80e82"
        ],
        [
            "apply (eq_conga_out P R); auto.",
            "VernacExtend",
            "487015c9778b81769e4458603b7f664dce219df4"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HXY : (exists X Y, Out B A X /\\ Out B C Y /\\ Per B X Y /\\ Lt P Q X Y)) by (apply aristotle; assumption).",
            "VernacExtend",
            "1d87dfe765e8829c79cdffbb6539ffc831d552f9"
        ],
        [
            "destruct HXY as [X [Y [PX [PY [HXright [Hle HNcong]]]]]].",
            "VernacExtend",
            "0c202ac796b3958dc82cbbe6cf8d4fc3eb3e79cb"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HXYdiff : X <> Y) by (intro; treat_equalities; auto).",
            "VernacExtend",
            "6d9a7d612953f913f7c1bce4bd174fbb74693ea4"
        ],
        [
            "assert (HT : (exists T, Out Q T P /\\ Cong Q T X Y)) by (apply l6_11_existence; auto).",
            "VernacExtend",
            "0cc8ab3879de5236b068ebd373b2a0e07ed9a1c6"
        ],
        [
            "destruct HT as [T []].",
            "VernacExtend",
            "e020b7ea6d63d3072672a2256215fe08d8ac0f62"
        ],
        [
            "assert (HS : (exists S, Out Q S R /\\ Cong Q S X B)) by (apply l6_11_existence; auto).",
            "VernacExtend",
            "0538cce0eeda6f064a5b93b3c49789f2964f7a50"
        ],
        [
            "destruct HS as [S []].",
            "VernacExtend",
            "dbe1ea6d5ec33ee5519b7fe1be1273deef5bd01f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "exists S.",
            "VernacExtend",
            "10c147453f4e5dda987a04952de48ce8490b0a4c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "assert_cols.",
            "VernacExtend",
            "031d7df0508efc81572acb10c507042760b719fa"
        ],
        [
            "assert (Per S Q P) by (apply (l8_3 R); Perp; Col).",
            "VernacExtend",
            "06ef7d20c509cd3f17bc718513d333bb832fd17f"
        ],
        [
            "assert (Per T Q S) by (apply (l8_3 P); Perp; Col).",
            "VernacExtend",
            "8df6ecf5c7b99ecccbe6ebaa717f422d37b1b55f"
        ],
        [
            "assert (P<>S).",
            "VernacExtend",
            "30436fb7ff8b436d63c5dba4d1cfb6a4ec220d22"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "assert (P=Q) by (apply l8_8; auto); treat_equalities; absurde.",
            "VernacExtend",
            "8ff4eeeaa051210067a45d71917219f20b6eb39c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (T<>S).",
            "VernacExtend",
            "e3fe56b3f4b45337ac2b39fb5f8f86b4016438c7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; treat_equalities.",
            "VernacExtend",
            "256dc6e40b0d718ef6588b10a314abc9c4e42d9f"
        ],
        [
            "assert (T=Q) by (apply l8_8; auto); treat_equalities; absurde.",
            "VernacExtend",
            "f13827ef1b6b1b61104d5c2f4954480a4860e183"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply conga_preserves_lta with P S Q T S Q; try (apply conga_refl; auto); [|split].",
            "VernacExtend",
            "4a8bf6957827f2d67be5451d5b97b14049838f50"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply conga_trans with X B Y.",
            "VernacExtend",
            "87d0399c1cb83594044df4c040b9543c484299ad"
        ],
        [
            "2: apply (out_conga A B C A B C); CongA; apply out_trivial; auto.",
            "VernacExtend",
            "6d58c4478f14ffb18c39bbfc217dc12be54f439c"
        ],
        [
            "assert (HInter : (Cong T S Y B /\\ (T <> S -> CongA Q T S X Y B /\\ CongA Q S T X B Y))).",
            "VernacExtend",
            "a5a09e033ec4c6f43e3574aeb6a07eb68d0f470a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (l11_49 T Q S Y X B); Cong.",
            "VernacExtend",
            "94650bd3f2f62eba7208130e6b2b999cb8959f01"
        ],
        [
            "apply l11_16; Perp.",
            "VernacExtend",
            "de8ba6bb7c5165cb9fea1308b43d5503209d4781"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HInter as [_ [_ HConga]]; auto.",
            "VernacExtend",
            "12c7a35a24cf0ab63472b25780fca1bfe264a1e7"
        ],
        [
            "apply conga_left_comm; auto.",
            "VernacExtend",
            "0c868587ec5124b8b6512ced15650780f2eba4fc"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply lea_comm.",
            "VernacExtend",
            "cc1d04199bbad1bdb62488aaa44ee43504c23b1f"
        ],
        [
            "apply (l11_29_b Q S P Q S T).",
            "VernacExtend",
            "68fb045641451fb7359e2110fa685df765b32fec"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split; CongA.",
            "VernacExtend",
            "f1940d5b20061dd2e7fa58c66bc8e0fa54c8db24"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "split; [|right; apply out_trivial; auto].",
            "VernacExtend",
            "dacbd56601b1de03d63dac0e7657f85b9c9f4eeb"
        ],
        [
            "apply l6_13_1.",
            "VernacExtend",
            "f187cdac6d235e831042e03fa45429cf965f0b0d"
        ],
        [
            "apply l6_6; auto.",
            "VernacExtend",
            "179ef90c4c85950ac5b4aa592ec203192fb07a3c"
        ],
        [
            "apply (le_transitivity Q P X Y).",
            "VernacExtend",
            "1b1c7a85c9f3d82d53a9226a7e3f79165bdd32c8"
        ],
        [
            "apply (le_transitivity Q P P Q); Le.",
            "VernacExtend",
            "2f0e874e5048d7d7c380c5b8a76c74be7d93d9bc"
        ],
        [
            "apply (cong__le); Cong.",
            "VernacExtend",
            "776b377273452219531c23f859aded7528ad02c2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro HConga.",
            "VernacExtend",
            "eceae29380bb0709d9de139a3e86565e7b2d62a3"
        ],
        [
            "assert (HInter : Cong Q P Q T /\\ Cong S P S T /\\ CongA Q P S Q T S).",
            "VernacExtend",
            "326012098f4d7f6c9a7506ba1787b311717138a7"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l11_50_1; Cong.",
            "VernacExtend",
            "f061487f306c9fe8741915c97f590bf807b9a664"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (HUn : S=Q\\/P=Q) by (apply l8_9; Col).",
            "VernacExtend",
            "1130ff3931ddd5625162b8dbd9cf84d6a8120467"
        ],
        [
            "destruct HUn; treat_equalities; absurde.",
            "VernacExtend",
            "3b61b6df02240a06114c1df735228dcd9bd6b76c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply l11_16; Perp.",
            "VernacExtend",
            "de8ba6bb7c5165cb9fea1308b43d5503209d4781"
        ],
        [
            "CongA.",
            "VernacExtend",
            "61c94b4f31cb408e72435c146b2507f17cad3cb3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct HInter as [HCong _].",
            "VernacExtend",
            "4b21795ca4309c10de3fd75f3920e96cad468893"
        ],
        [
            "apply HNcong.",
            "VernacExtend",
            "066c05a76c7000d9519f9c707cb58667f6a72743"
        ],
        [
            "apply (cong_transitivity P Q T Q); Cong.",
            "VernacExtend",
            "e9d67e017656cd287215d3d2b0bb2dc75cbf101d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aristotle__obtuse_case_elimination : aristotle_s_axiom -> ~ hypothesis_of_obtuse_saccheri_quadrilaterals.",
            "VernacStartTheoremProof",
            "a52a1d818ed3539ea16004f427e36cbca05f20ce"
        ],
        [
            "intros aristotle obtuse.",
            "VernacExtend",
            "199c30a8c19feefdc99d2b0f36f3919844a349aa"
        ],
        [
            "destruct ex_lambert as [Q' [C' [P [Q HLam]]]].",
            "VernacExtend",
            "237b20088963bed1acd4790ff5b576126a388f82"
        ],
        [
            "assert (HObtuse : Obtuse C' P Q) by (apply <- (lam_obtuse__oah Q'); trivial).",
            "VernacExtend",
            "c2b490b07b7ce48d8c3f505a530d4485d7930f05"
        ],
        [
            "assert (HPar : Par_strict Q' Q C' P) by (apply lam__par_strict1423, HLam).",
            "VernacExtend",
            "98df8b93fc3c29846d8886d527706685481a3d58"
        ],
        [
            "destruct HLam; spliter.",
            "VernacExtend",
            "575daa2a3a67b2527f6d57b7b2da7dcf24780a3e"
        ],
        [
            "destruct (l10_15 P Q P C') as [A' [HPerp HOS]]; Col.",
            "VernacExtend",
            "0aa336877e29c6f8028231c1d09e6847008b77b5"
        ],
        [
            "apply not_col_permutation_1.",
            "VernacExtend",
            "bf216fc8546cf0f3062849a349b3bef003aab9d3"
        ],
        [
            "apply par_strict_not_col_1 with Q'; Par.",
            "VernacExtend",
            "fd7dd9fa713965544feae92a346925a72c7e0a1f"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HLtA : LtA Q P A' C' P Q) by (apply obtuse_per__lta; Perp).",
            "VernacExtend",
            "e893e12a75e416c95cb58fff7addf11b9105da70"
        ],
        [
            "destruct HLtA as [HLeA HNCongA].",
            "VernacExtend",
            "eedd944abc8e53398a860eb386842e689f9312d8"
        ],
        [
            "assert (HInAngle : InAngle A' Q P C').",
            "VernacExtend",
            "810d2161dfd5bee0c5fa0f95c70ad9004bf64c36"
        ],
        [
            "apply lea_in_angle; Side; apply lea_right_comm; trivial.",
            "VernacExtend",
            "85344e07047dbb5885849e8065b0da967de1fe16"
        ],
        [
            "destruct (segment_construction C' P C' P) as [C [HC1 HC2]].",
            "VernacExtend",
            "bd8e2b6a59dbcd1217218c9c043a462d26236a9f"
        ],
        [
            "destruct (segment_construction A' P A' P) as [A [HA1 HA2]].",
            "VernacExtend",
            "ceb34fdfc88c90afded39d5e0d31b97cf54a1a1e"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (HInAngle1 : InAngle C A P Q).",
            "VernacExtend",
            "5f60d109f098878e8ea73901d502d4dd0d736398"
        ],
        [
            "apply in_angle_reverse with A'; auto.",
            "VernacExtend",
            "dc0524aeea91b7c9f2a491c7bfecb2291e48d419"
        ],
        [
            "apply l11_24, in_angle_reverse with C'; auto.",
            "VernacExtend",
            "7a12918f1d18f22c69062d6435883608de3447e6"
        ],
        [
            "apply l11_24; trivial.",
            "VernacExtend",
            "5c6eb57dd1617a369edb813c6f96e54d1894ad73"
        ],
        [
            "assert (HNCol : ~ Col P C' A').",
            "VernacExtend",
            "b05d81a680df69b1c419789ea5e2081e7499272d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro Habs.",
            "VernacExtend",
            "90d3c37607537eb6016c5576df0b0457072644c4"
        ],
        [
            "apply HNCongA, conga_right_comm, out2__conga.",
            "VernacExtend",
            "95489fe3b24e23b820a810d2bc89d396b6db04df"
        ],
        [
            "apply out_trivial; auto.",
            "VernacExtend",
            "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
        ],
        [
            "apply col_one_side_out with Q; trivial.",
            "VernacExtend",
            "1eb95ba3f85d57778f0741f32aa2aa2c0263ee0d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HNCol1 : ~ Col P C A) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "b2ebdae21be4d05b3b0176b1918328682cb44626"
        ],
        [
            "assert (HNCol2 : ~ Col P Q C) by (intro; apply (par_strict_not_col_2 Q' Q C' P); ColR).",
            "VernacExtend",
            "19e6d2834771df46a296995c708850ee0036e1c9"
        ],
        [
            "assert (HPer : Per A P Q) by (apply l8_2, per_col with A'; Perp; Col).",
            "VernacExtend",
            "2f6c81ee7a547e98481a0e5ca43b94d983191c16"
        ],
        [
            "assert (HOS1 : OS A P C Q).",
            "VernacExtend",
            "7e61564b250d768f5002d92a45834eb23388d092"
        ],
        [
            "apply in_angle_one_side; Col.",
            "VernacExtend",
            "6805d225a71dfe0f6e15cebed752ed2e10a06cbd"
        ],
        [
            "apply per_not_col; auto.",
            "VernacExtend",
            "d63d5952cf2436a9063723d705acf1d4b8e7f322"
        ],
        [
            "destruct (aristotle P Q A P C) as [X [Y]]; Col.",
            "VernacExtend",
            "af99c0e60c958ec1096abf9dda7589e8beee16f5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "exists A, P, Q; split; Perp; split.",
            "VernacExtend",
            "cb11951b228b958187f4bb977232633cf2d29a28"
        ],
        [
            "apply inangle__lea; trivial.",
            "VernacExtend",
            "ffce9e092258441fcca1711fd67b797bfab07d23"
        ],
        [
            "intro HCongA.",
            "VernacExtend",
            "7bc82d64323fb1acfaa9d6e1aeca6c31b6675d03"
        ],
        [
            "destruct (conga_cop__or_out_ts A P C Q); CongA; Cop.",
            "VernacExtend",
            "fea3a93f36d73261233f23d5122c418bf23f9b17"
        ],
        [
            "assert_cols; Col.",
            "VernacExtend",
            "62b83865510088e0ab540dddf5a920fe7db9e4b5"
        ],
        [
            "apply (l9_9 A P C Q); trivial.",
            "VernacExtend",
            "8ef8ac5dccd6c0fdbb989a9522f5394f3235db7d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "apply (not_and_lt P Q X Y).",
            "VernacExtend",
            "523e9e06f4b7799554e758d2637f668196f25613"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "destruct (l8_18_existence P Q Y) as [Z [HZ1 HZ2]].",
            "VernacExtend",
            "c666cb0b9b21eac9f7a85a4046f5a9439d01d2ee"
        ],
        [
            "intro; assert_diffs; apply HNCol2; ColR.",
            "VernacExtend",
            "3cb45edc0f15b99c37db574ff6b6bf673c7d3434"
        ],
        [
            "apply lt_transitivity with P Z.",
            "VernacExtend",
            "cad6a808f66084e382ab2cd9c199a7243ae3dbae"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (P <> Z).",
            "VernacExtend",
            "ca322a9de7644ffd4451d2d01ca12f838228076b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro; subst Z.",
            "VernacExtend",
            "3cb51c75e415b1c03d22d9f89c461dc49eac3a1a"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "assert (Per Q P C) by (apply per_col with Y; Col; Perp).",
            "VernacExtend",
            "25dfc2b343659702babaa50a8d4b5760e6ad67d5"
        ],
        [
            "apply HNCol1, cop_perp2__col with P Q; Perp; Cop.",
            "VernacExtend",
            "8ba7b9f116529eae5c778ae84644133f8342bf49"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (HLam : Lambert P X Y Z).",
            "VernacExtend",
            "f2eec22fbc411fae90f7666e7b3d74272da2f1ea"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply per_col with Q; Col.",
            "VernacExtend",
            "6bf06fd9080f068790fb6ae9a9ac3d9b0c118014"
        ],
        [
            "apply l8_2, per_col with A; Perp; Col.",
            "VernacExtend",
            "bf941844880e1ff875fe76d12dae5d4fd7873597"
        ],
        [
            "apply perp_per_1, perp_left_comm, perp_col with Q; auto.",
            "VernacExtend",
            "547f9570750b584538eb005c6fa60ccb7845b09d"
        ],
        [
            "assert (InAngle Y X P Q).",
            "VernacExtend",
            "dc38141c1fdeb13e2d1a4463c52ec9707212f510"
        ],
        [
            "apply l11_25 with C A Q; try (apply l6_6); trivial; apply out_trivial; auto.",
            "VernacExtend",
            "e33d6f37d3b8f8540313293de075db87c3043962"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with Q; Col; Cop.",
            "VernacExtend",
            "6c2934026f972f750836873e016805be2296e0a3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply lam_obtuse__lt; trivial.",
            "VernacExtend",
            "fd52a46a5ccfb7f9811f89995f31823f8c75c671"
        ],
        [
            "apply <- (lam_obtuse__oah P); trivial.",
            "VernacExtend",
            "cbb85bd558ffe81da457f9981d7af79d3c081bdb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (HOut : Out Q P Z).",
            "VernacExtend",
            "3cd67199c6ab38a45045ec634c747168f668dc5e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply col_one_side_out with Q'; Col.",
            "VernacExtend",
            "6ada922f3b0e33ad21d21fcabe32613c0960f2fe"
        ],
        [
            "apply one_side_transitivity with Y.",
            "VernacExtend",
            "b7b81a3b5ffe0b32fa4e8a32b87f3d7024755e8a"
        ],
        [
            "apply l12_6, par_strict_col_par_strict with C'; Par; ColR.",
            "VernacExtend",
            "a397d773d0e09c74a5e3fe1135f687f25e8c8fb2"
        ],
        [
            "apply l12_6, par_not_col_strict with Y; Col.",
            "VernacExtend",
            "7ed80b56ef24796049a883409135a2e5d756da5c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l12_9 with P Q; Perp; [Cop..| |Cop].",
            "VernacExtend",
            "e3f30c3f29213acc6a07bbbdfe56677997e5616f"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with C; Col.",
            "VernacExtend",
            "3bf78ab007abd9ccb3f5cfc396adafb181d2a857"
        ],
        [
            "apply col_cop__cop with C'; Col; Cop.",
            "VernacExtend",
            "e7382238cd42564e72f504542c1db22a1fb46a60"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply not_col_permutation_1, par_not_col with P C'; Par; ColR.",
            "VernacExtend",
            "2889d1a9901a7208bb08590846692469f0d3feaf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply bet__lt1213; auto.",
            "VernacExtend",
            "ee5dbb3c9d7d67a0bd6aad772e531cfc2d667284"
        ],
        [
            "apply out2__bet; trivial.",
            "VernacExtend",
            "cffaab6f98ffcd921de4b52c3943f7a9c5d4eb3c"
        ],
        [
            "apply col_one_side_out with A; Col.",
            "VernacExtend",
            "594aea01cdc823a65c8c6d3c3976d6fe493f3226"
        ],
        [
            "apply one_side_transitivity with Y.",
            "VernacExtend",
            "b7b81a3b5ffe0b32fa4e8a32b87f3d7024755e8a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply l12_6, par_not_col_strict with Y; Col.",
            "VernacExtend",
            "7ed80b56ef24796049a883409135a2e5d756da5c"
        ],
        [
            "apply l12_9 with P Q; Perp; [Cop..|].",
            "VernacExtend",
            "b5ca93aa97ba4713596e59a781639a813c84ac24"
        ],
        [
            "apply coplanar_perm_12, col_cop__cop with C; Col; Cop.",
            "VernacExtend",
            "f75f43eee6d1b201ebee18d9a38092e5d3b44784"
        ],
        [
            "intro; apply HNCol1; ColR.",
            "VernacExtend",
            "db4c88af58e53c21b69c0295f95e83a9658421f3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply one_side_symmetry, out_out_one_side with C; Side.",
            "VernacExtend",
            "621566c1426515b8e969c61521e625cec8f5cb52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aristotle__acute_or_right : aristotle_s_axiom -> hypothesis_of_acute_saccheri_quadrilaterals \\/ hypothesis_of_right_saccheri_quadrilaterals.",
            "VernacStartTheoremProof",
            "4656719a594074a7646bd2fa26ca02a4723f544f"
        ],
        [
            "intros aristotle.",
            "VernacExtend",
            "e208f770d59dc499509986f9193d1dba1ff1441e"
        ],
        [
            "destruct saccheri_s_three_hypotheses as [Ha|[Hr|Ho]]; auto.",
            "VernacExtend",
            "60c47e18f7c4192ab14f3b409ba46f2d89e9f029"
        ],
        [
            "exfalso; apply aristotle__obtuse_case_elimination in aristotle; auto.",
            "VernacExtend",
            "866453051513e8fa1197c759e65b692c00be658d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Aristotle.",
            "VernacEndSegment",
            "a253f1d8551c15752cfcb9b93167604de238636f"
        ]
    ],
    "proofs": [
        {
            "name": "aristotle__obtuse_case_elimination",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros aristotle obtuse.",
                        "VernacExtend",
                        "199c30a8c19feefdc99d2b0f36f3919844a349aa"
                    ]
                },
                {
                    "command": [
                        "destruct ex_lambert as [Q' [C' [P [Q HLam]]]].",
                        "VernacExtend",
                        "237b20088963bed1acd4790ff5b576126a388f82"
                    ]
                },
                {
                    "command": [
                        "assert (HObtuse : Obtuse C' P Q) by (apply <- (lam_obtuse__oah Q'); trivial).",
                        "VernacExtend",
                        "c2b490b07b7ce48d8c3f505a530d4485d7930f05"
                    ]
                },
                {
                    "command": [
                        "assert (HPar : Par_strict Q' Q C' P) by (apply lam__par_strict1423, HLam).",
                        "VernacExtend",
                        "98df8b93fc3c29846d8886d527706685481a3d58"
                    ]
                },
                {
                    "command": [
                        "destruct HLam; spliter.",
                        "VernacExtend",
                        "575daa2a3a67b2527f6d57b7b2da7dcf24780a3e"
                    ]
                },
                {
                    "command": [
                        "destruct (l10_15 P Q P C') as [A' [HPerp HOS]]; Col.",
                        "VernacExtend",
                        "0aa336877e29c6f8028231c1d09e6847008b77b5"
                    ]
                },
                {
                    "command": [
                        "apply not_col_permutation_1.",
                        "VernacExtend",
                        "bf216fc8546cf0f3062849a349b3bef003aab9d3"
                    ]
                },
                {
                    "command": [
                        "apply par_strict_not_col_1 with Q'; Par.",
                        "VernacExtend",
                        "fd7dd9fa713965544feae92a346925a72c7e0a1f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HLtA : LtA Q P A' C' P Q) by (apply obtuse_per__lta; Perp).",
                        "VernacExtend",
                        "e893e12a75e416c95cb58fff7addf11b9105da70"
                    ]
                },
                {
                    "command": [
                        "destruct HLtA as [HLeA HNCongA].",
                        "VernacExtend",
                        "eedd944abc8e53398a860eb386842e689f9312d8"
                    ]
                },
                {
                    "command": [
                        "assert (HInAngle : InAngle A' Q P C').",
                        "VernacExtend",
                        "810d2161dfd5bee0c5fa0f95c70ad9004bf64c36"
                    ]
                },
                {
                    "command": [
                        "apply lea_in_angle; Side; apply lea_right_comm; trivial.",
                        "VernacExtend",
                        "85344e07047dbb5885849e8065b0da967de1fe16"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction C' P C' P) as [C [HC1 HC2]].",
                        "VernacExtend",
                        "bd8e2b6a59dbcd1217218c9c043a462d26236a9f"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A' P A' P) as [A [HA1 HA2]].",
                        "VernacExtend",
                        "ceb34fdfc88c90afded39d5e0d31b97cf54a1a1e"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (HInAngle1 : InAngle C A P Q).",
                        "VernacExtend",
                        "5f60d109f098878e8ea73901d502d4dd0d736398"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_reverse with A'; auto.",
                        "VernacExtend",
                        "dc0524aeea91b7c9f2a491c7bfecb2291e48d419"
                    ]
                },
                {
                    "command": [
                        "apply l11_24, in_angle_reverse with C'; auto.",
                        "VernacExtend",
                        "7a12918f1d18f22c69062d6435883608de3447e6"
                    ]
                },
                {
                    "command": [
                        "apply l11_24; trivial.",
                        "VernacExtend",
                        "5c6eb57dd1617a369edb813c6f96e54d1894ad73"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col P C' A').",
                        "VernacExtend",
                        "b05d81a680df69b1c419789ea5e2081e7499272d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro Habs.",
                        "VernacExtend",
                        "90d3c37607537eb6016c5576df0b0457072644c4"
                    ]
                },
                {
                    "command": [
                        "apply HNCongA, conga_right_comm, out2__conga.",
                        "VernacExtend",
                        "95489fe3b24e23b820a810d2bc89d396b6db04df"
                    ]
                },
                {
                    "command": [
                        "apply out_trivial; auto.",
                        "VernacExtend",
                        "9c4f0f853ce7fcdf2415ee64ff584a8905519deb"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with Q; trivial.",
                        "VernacExtend",
                        "1eb95ba3f85d57778f0741f32aa2aa2c0263ee0d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol1 : ~ Col P C A) by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "b2ebdae21be4d05b3b0176b1918328682cb44626"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol2 : ~ Col P Q C) by (intro; apply (par_strict_not_col_2 Q' Q C' P); ColR).",
                        "VernacExtend",
                        "19e6d2834771df46a296995c708850ee0036e1c9"
                    ]
                },
                {
                    "command": [
                        "assert (HPer : Per A P Q) by (apply l8_2, per_col with A'; Perp; Col).",
                        "VernacExtend",
                        "2f6c81ee7a547e98481a0e5ca43b94d983191c16"
                    ]
                },
                {
                    "command": [
                        "assert (HOS1 : OS A P C Q).",
                        "VernacExtend",
                        "7e61564b250d768f5002d92a45834eb23388d092"
                    ]
                },
                {
                    "command": [
                        "apply in_angle_one_side; Col.",
                        "VernacExtend",
                        "6805d225a71dfe0f6e15cebed752ed2e10a06cbd"
                    ]
                },
                {
                    "command": [
                        "apply per_not_col; auto.",
                        "VernacExtend",
                        "d63d5952cf2436a9063723d705acf1d4b8e7f322"
                    ]
                },
                {
                    "command": [
                        "destruct (aristotle P Q A P C) as [X [Y]]; Col.",
                        "VernacExtend",
                        "af99c0e60c958ec1096abf9dda7589e8beee16f5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "exists A, P, Q; split; Perp; split.",
                        "VernacExtend",
                        "cb11951b228b958187f4bb977232633cf2d29a28"
                    ]
                },
                {
                    "command": [
                        "apply inangle__lea; trivial.",
                        "VernacExtend",
                        "ffce9e092258441fcca1711fd67b797bfab07d23"
                    ]
                },
                {
                    "command": [
                        "intro HCongA.",
                        "VernacExtend",
                        "7bc82d64323fb1acfaa9d6e1aeca6c31b6675d03"
                    ]
                },
                {
                    "command": [
                        "destruct (conga_cop__or_out_ts A P C Q); CongA; Cop.",
                        "VernacExtend",
                        "fea3a93f36d73261233f23d5122c418bf23f9b17"
                    ]
                },
                {
                    "command": [
                        "assert_cols; Col.",
                        "VernacExtend",
                        "62b83865510088e0ab540dddf5a920fe7db9e4b5"
                    ]
                },
                {
                    "command": [
                        "apply (l9_9 A P C Q); trivial.",
                        "VernacExtend",
                        "8ef8ac5dccd6c0fdbb989a9522f5394f3235db7d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "apply (not_and_lt P Q X Y).",
                        "VernacExtend",
                        "523e9e06f4b7799554e758d2637f668196f25613"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_18_existence P Q Y) as [Z [HZ1 HZ2]].",
                        "VernacExtend",
                        "c666cb0b9b21eac9f7a85a4046f5a9439d01d2ee"
                    ]
                },
                {
                    "command": [
                        "intro; assert_diffs; apply HNCol2; ColR.",
                        "VernacExtend",
                        "3cb45edc0f15b99c37db574ff6b6bf673c7d3434"
                    ]
                },
                {
                    "command": [
                        "apply lt_transitivity with P Z.",
                        "VernacExtend",
                        "cad6a808f66084e382ab2cd9c199a7243ae3dbae"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (P <> Z).",
                        "VernacExtend",
                        "ca322a9de7644ffd4451d2d01ca12f838228076b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro; subst Z.",
                        "VernacExtend",
                        "3cb51c75e415b1c03d22d9f89c461dc49eac3a1a"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "assert (Per Q P C) by (apply per_col with Y; Col; Perp).",
                        "VernacExtend",
                        "25dfc2b343659702babaa50a8d4b5760e6ad67d5"
                    ]
                },
                {
                    "command": [
                        "apply HNCol1, cop_perp2__col with P Q; Perp; Cop.",
                        "VernacExtend",
                        "8ba7b9f116529eae5c778ae84644133f8342bf49"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (HLam : Lambert P X Y Z).",
                        "VernacExtend",
                        "f2eec22fbc411fae90f7666e7b3d74272da2f1ea"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "apply per_col with Q; Col.",
                        "VernacExtend",
                        "6bf06fd9080f068790fb6ae9a9ac3d9b0c118014"
                    ]
                },
                {
                    "command": [
                        "apply l8_2, per_col with A; Perp; Col.",
                        "VernacExtend",
                        "bf941844880e1ff875fe76d12dae5d4fd7873597"
                    ]
                },
                {
                    "command": [
                        "apply perp_per_1, perp_left_comm, perp_col with Q; auto.",
                        "VernacExtend",
                        "547f9570750b584538eb005c6fa60ccb7845b09d"
                    ]
                },
                {
                    "command": [
                        "assert (InAngle Y X P Q).",
                        "VernacExtend",
                        "dc38141c1fdeb13e2d1a4463c52ec9707212f510"
                    ]
                },
                {
                    "command": [
                        "apply l11_25 with C A Q; try (apply l6_6); trivial; apply out_trivial; auto.",
                        "VernacExtend",
                        "e33d6f37d3b8f8540313293de075db87c3043962"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col_cop__cop with Q; Col; Cop.",
                        "VernacExtend",
                        "6c2934026f972f750836873e016805be2296e0a3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply lam_obtuse__lt; trivial.",
                        "VernacExtend",
                        "fd52a46a5ccfb7f9811f89995f31823f8c75c671"
                    ]
                },
                {
                    "command": [
                        "apply <- (lam_obtuse__oah P); trivial.",
                        "VernacExtend",
                        "cbb85bd558ffe81da457f9981d7af79d3c081bdb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (HOut : Out Q P Z).",
                        "VernacExtend",
                        "3cd67199c6ab38a45045ec634c747168f668dc5e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with Q'; Col.",
                        "VernacExtend",
                        "6ada922f3b0e33ad21d21fcabe32613c0960f2fe"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with Y.",
                        "VernacExtend",
                        "b7b81a3b5ffe0b32fa4e8a32b87f3d7024755e8a"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_strict_col_par_strict with C'; Par; ColR.",
                        "VernacExtend",
                        "a397d773d0e09c74a5e3fe1135f687f25e8c8fb2"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_not_col_strict with Y; Col.",
                        "VernacExtend",
                        "7ed80b56ef24796049a883409135a2e5d756da5c"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with P Q; Perp; [Cop..| |Cop].",
                        "VernacExtend",
                        "e3f30c3f29213acc6a07bbbdfe56677997e5616f"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col_cop__cop with C; Col.",
                        "VernacExtend",
                        "3bf78ab007abd9ccb3f5cfc396adafb181d2a857"
                    ]
                },
                {
                    "command": [
                        "apply col_cop__cop with C'; Col; Cop.",
                        "VernacExtend",
                        "e7382238cd42564e72f504542c1db22a1fb46a60"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply not_col_permutation_1, par_not_col with P C'; Par; ColR.",
                        "VernacExtend",
                        "2889d1a9901a7208bb08590846692469f0d3feaf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply bet__lt1213; auto.",
                        "VernacExtend",
                        "ee5dbb3c9d7d67a0bd6aad772e531cfc2d667284"
                    ]
                },
                {
                    "command": [
                        "apply out2__bet; trivial.",
                        "VernacExtend",
                        "cffaab6f98ffcd921de4b52c3943f7a9c5d4eb3c"
                    ]
                },
                {
                    "command": [
                        "apply col_one_side_out with A; Col.",
                        "VernacExtend",
                        "594aea01cdc823a65c8c6d3c3976d6fe493f3226"
                    ]
                },
                {
                    "command": [
                        "apply one_side_transitivity with Y.",
                        "VernacExtend",
                        "b7b81a3b5ffe0b32fa4e8a32b87f3d7024755e8a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply l12_6, par_not_col_strict with Y; Col.",
                        "VernacExtend",
                        "7ed80b56ef24796049a883409135a2e5d756da5c"
                    ]
                },
                {
                    "command": [
                        "apply l12_9 with P Q; Perp; [Cop..|].",
                        "VernacExtend",
                        "b5ca93aa97ba4713596e59a781639a813c84ac24"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_perm_12, col_cop__cop with C; Col; Cop.",
                        "VernacExtend",
                        "f75f43eee6d1b201ebee18d9a38092e5d3b44784"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNCol1; ColR.",
                        "VernacExtend",
                        "db4c88af58e53c21b69c0295f95e83a9658421f3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry, out_out_one_side with C; Side.",
                        "VernacExtend",
                        "621566c1426515b8e969c61521e625cec8f5cb52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aristotle__acute_or_right",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros aristotle.",
                        "VernacExtend",
                        "e208f770d59dc499509986f9193d1dba1ff1441e"
                    ]
                },
                {
                    "command": [
                        "destruct saccheri_s_three_hypotheses as [Ha|[Hr|Ho]]; auto.",
                        "VernacExtend",
                        "60c47e18f7c4192ab14f3b409ba46f2d89e9f029"
                    ]
                },
                {
                    "command": [
                        "exfalso; apply aristotle__obtuse_case_elimination in aristotle; auto.",
                        "VernacExtend",
                        "866453051513e8fa1197c759e65b692c00be658d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}