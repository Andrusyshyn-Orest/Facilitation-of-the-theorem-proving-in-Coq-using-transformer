{
    "filename": "Meta_theory/Dimension_axioms/upper_dim_3.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Tarski_dev.Ch11_angles.",
            "VernacRequire",
            "686aed74e4f894ee1705bbbb5ca36d1f00d9ba38"
        ],
        [
            "Require Import GeoCoq.Utils.all_equiv.",
            "VernacRequire",
            "077142922cbda4cad6ba1c92c9f724aae83bdd28"
        ],
        [
            "Section Upper_dim_3.",
            "VernacBeginSection",
            "bf0a9c4fe214b8d195da5f5c6c5d9d8567d6ad7e"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Definition upper_dim_3_axiom := forall A B C P Q R, P <> Q -> Q <> R -> P <> R -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> Cong A P A R -> Cong B P B R -> Cong C P C R -> (Bet A B C \\/ Bet B C A \\/ Bet C A B).",
            "VernacDefinition",
            "b41268805400f29b63ed4e9be56014d9b0998afa"
        ],
        [
            "Definition median_planes_axiom := forall A B C D P Q, P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> Cong D P D Q -> Coplanar A B C D.",
            "VernacDefinition",
            "c5c325dd1ef7b8649dd69b8c41c4d16a52d22620"
        ],
        [
            "Definition plane_intersection_axiom := forall A B C D E F P, Coplanar A B C P -> Coplanar D E F P -> exists Q, Coplanar A B C Q /\\ Coplanar D E F Q /\\ P <> Q.",
            "VernacDefinition",
            "66199055f8391ae6dc3b3c77fd4c7eb8a3fa0041"
        ],
        [
            "Definition space_separation_axiom := forall A B C P Q, ~ Coplanar A B C P -> ~ Coplanar A B C Q -> TSP A B C P Q \\/ OSP A B C P Q.",
            "VernacDefinition",
            "df1d590f874db8f049c48c8820c4f880cec52c67"
        ],
        [
            "Definition orthonormal_family_axiom := forall S U1' U1 U2 U3 U4, ~ (S <> U1' /\\ Bet U1 S U1' /\\ Cong S U1 S U1' /\\ Cong S U2 S U1' /\\ Cong S U3 S U1' /\\ Cong S U4 S U1' /\\ Cong U1 U2 U1' U2 /\\ Cong U1 U3 U1' U2 /\\ Cong U1 U4 U1' U2 /\\ Cong U2 U3 U1' U2 /\\ Cong U2 U4 U1' U2 /\\ Cong U3 U4 U1' U2).",
            "VernacDefinition",
            "055cace2bd0e7766112a7b0e3d4f2e5f54fc2940"
        ],
        [
            "Lemma upper_dim_3_stab : ~ ~ upper_dim_3_axiom -> upper_dim_3_axiom.",
            "VernacStartTheoremProof",
            "aa931d6ed0f3d40f5962ca709d372aa293e26231"
        ],
        [
            "intros nnupper A B C P Q R; intros.",
            "VernacExtend",
            "26a7920d469a2ac045351898f586a17c5de2917f"
        ],
        [
            "destruct (col_dec A B C) as [|HNCol]; auto.",
            "VernacExtend",
            "d74bb8bce410d01959cad47d8cd63fb8c70cf220"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply nnupper.",
            "VernacExtend",
            "05be8d1329881928b624f7246d30b1ca40b3319b"
        ],
        [
            "intro upper.",
            "VernacExtend",
            "7f33afb5994f136f1585af45570a735540d6e9d2"
        ],
        [
            "apply HNCol.",
            "VernacExtend",
            "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
        ],
        [
            "apply upper with P Q R; auto.",
            "VernacExtend",
            "7b46326de158fd53d062544e2e13506f2388cacf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma median_planes_implies_upper_dim : median_planes_axiom -> upper_dim_3_axiom.",
            "VernacStartTheoremProof",
            "c21f045a921b3cb80db109b882e00add9f4df41b"
        ],
        [
            "intros mp A B C P Q R HPQ HQR HPR; intros.",
            "VernacExtend",
            "421eab5d9f5038d7aecd796ca2d28639599a911b"
        ],
        [
            "destruct (col_dec A B C); trivial.",
            "VernacExtend",
            "e080f300de409d952326f278d91418c751431c53"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply HQR.",
            "VernacExtend",
            "9a502f22ebee0cf741e0fab714763d1bfdcd988c"
        ],
        [
            "destruct (midpoint_existence P Q) as [X].",
            "VernacExtend",
            "011a73928da36eb56b98009d6699e7b67b71104c"
        ],
        [
            "apply symmetric_point_uniqueness with P X; trivial.",
            "VernacExtend",
            "c5ba38ac310f5a67319e35433f07c6fcaa2aa688"
        ],
        [
            "destruct (midpoint_existence P R) as [Y].",
            "VernacExtend",
            "0c993111b2ac772b0af55b92b008df45baa23ab2"
        ],
        [
            "replace X with Y; trivial.",
            "VernacExtend",
            "0822f3ab571e4f712bb39d3cee4f7070b3a3ca4a"
        ],
        [
            "apply (l8_7 P); apply l8_2.",
            "VernacExtend",
            "cf3f035dfea50329f484ab91eb05d450de8aa3c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l11_60 with A B C; [|exists R; split..|]; trivial.",
            "VernacExtend",
            "8248db795462df022feb763c1b7a71dc447fbfbe"
        ],
        [
            "apply mp with P Q; Cong.",
            "VernacExtend",
            "9589ddf0987b1a74f617d3fb11b2492ef7c0cf33"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply l11_60 with A B C; [|exists Q; split..|]; trivial.",
            "VernacExtend",
            "6229240b55cf79d58b7f77337807e1ca178838b0"
        ],
        [
            "apply mp with P R; Cong.",
            "VernacExtend",
            "6ca54558417f9514076234d4e6e0af1190c70e2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma median_planes_aux : (forall A B C P Q M, P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> Midpoint M P Q -> Coplanar M A B C) -> median_planes_axiom.",
            "VernacStartTheoremProof",
            "7c45842cbe58132c71b3b0d6a26d7908ad988bac"
        ],
        [
            "intros Haux A B C D P Q; intros.",
            "VernacExtend",
            "8fd8adf7ac895def7aa9531567ab102f5bb41dd2"
        ],
        [
            "destruct (col_dec A B C) as [HCop|]; [apply col__coplanar, HCop|].",
            "VernacExtend",
            "fbd57a7834b311ca77a315718e32e3544c661d3c"
        ],
        [
            "destruct (midpoint_existence P Q) as [M].",
            "VernacExtend",
            "98d5d64320df6646f24a40ac161939f6586e9d78"
        ],
        [
            "destruct (ex_ncol_cop2 A B C M) as [A1 [A2 [HCop1 [HCop2 HNCol1]]]].",
            "VernacExtend",
            "03d115596faea9c54d0fcd8f487f733a174a33b3"
        ],
        [
            "assert (Cong A1 P A1 Q) by (apply (l11_60_aux A B C); assumption).",
            "VernacExtend",
            "95550e2633b5267e196cf0fd03dc491bcedb6e4e"
        ],
        [
            "assert (Cong A2 P A2 Q) by (apply (l11_60_aux A B C); assumption).",
            "VernacExtend",
            "9c884da8005d125ce1fa3122a4a15181133ae281"
        ],
        [
            "apply coplanar_pseudo_trans with M A1 A2; eauto.",
            "VernacExtend",
            "24df1bd63f5ac9140850d487b4fefe68880bdd52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orthonormal_family_aux : orthonormal_family_axiom <-> (forall A B X P Q, ~ Col P Q X -> Per A X P -> Per A X Q -> Per B X P -> Per B X Q -> Col A B X).",
            "VernacStartTheoremProof",
            "783c06781598bdc3934350110028c2273aa8e8ec"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros up A B X P Q HNCol HAXP HAXQ HBXP HBXQ.",
            "VernacExtend",
            "b41b007ede5f38bb0509206e20c80ce38265b524"
        ],
        [
            "destruct (col_dec A B X) as [|HNCol1]; [assumption|].",
            "VernacExtend",
            "7886ffe52395b55d84612320136ad2a75d92c6e8"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "destruct (segment_construction P X P X) as [P' []].",
            "VernacExtend",
            "0b1c85736acc9ebad6f890153be1669c3daa6899"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "destruct (ex_per_cong P X X Q P' X) as [Q']; Col; spliter.",
            "VernacExtend",
            "f87fb11599f27b70e86a9b2c4ab10917f9228182"
        ],
        [
            "assert (HAXQ' : Per Q' X A) by (apply (l11_60 P Q X); Perp; Cop).",
            "VernacExtend",
            "ed77391aa2f49617e345061752d3e5a369e7e58b"
        ],
        [
            "assert (HBXQ' : Per Q' X B) by (apply (l11_60 P Q X); Perp; Cop).",
            "VernacExtend",
            "821b05dc9911e6e6f551f7bf155d47f033e8aefc"
        ],
        [
            "assert (HNCol' : ~ Col P X Q') by (apply one_side_not_col123 with Q; assumption).",
            "VernacExtend",
            "3ee59878392bcf6bea16918c5b95aa9e6fa49916"
        ],
        [
            "clear dependent Q.",
            "VernacExtend",
            "01c31c13443d54537610c83b8cc8dd48796c5b88"
        ],
        [
            "rename Q' into Q.",
            "VernacExtend",
            "52e1a9d53fef2d4888ea2f3321c3943a0e54af31"
        ],
        [
            "destruct (segment_construction A X P' X) as [A' []].",
            "VernacExtend",
            "25b8ebf4cb70630208117320865253ae931eccd9"
        ],
        [
            "assert (HAXP' : Per P X A') by (assert_diffs; apply per_col with A; Perp; Col).",
            "VernacExtend",
            "88805ec45c76873bf73a05c0a832fa77c4b7aa07"
        ],
        [
            "assert (HAXQ : Per Q X A') by (assert_diffs; apply per_col with A; Perp; Col).",
            "VernacExtend",
            "c711ba8cce8b3aaa20531725dfbac3dc4200524e"
        ],
        [
            "assert (HNCol : ~ Col A' B X) by (intro; apply HNCol1; ColR).",
            "VernacExtend",
            "113beadc8f83d27dc4765e4d4b1bfac8e3c78489"
        ],
        [
            "clear dependent A.",
            "VernacExtend",
            "b17f0ce110025f361a42a4ba851c465cbd5f20a1"
        ],
        [
            "rename A' into A.",
            "VernacExtend",
            "fa56804962abc5787247cfe183a535d4ed9a7649"
        ],
        [
            "destruct (ex_per_cong A X X B P' X) as [B']; Col; [assert_diffs; auto|].",
            "VernacExtend",
            "fa3140557dabd48c86922e01078dfc5943148dad"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert (HBXP' : Per B' X P) by (apply (l11_60 A B X); Perp; Cop).",
            "VernacExtend",
            "78af4b0aa31af7a7d60c1d90df0238a3652f6f44"
        ],
        [
            "assert (HBXQ : Per B' X Q) by (apply (l11_60 A B X); Perp; Cop).",
            "VernacExtend",
            "8a9e38440f9ff574015c171ab6899c1d75d09aff"
        ],
        [
            "clear dependent B.",
            "VernacExtend",
            "bcda20d12768b046d8573dff8e8e744a1964a601"
        ],
        [
            "rename B' into B.",
            "VernacExtend",
            "4c6c893bbf6dde3e66dc7d73d08419eace6dea76"
        ],
        [
            "assert (HCong : Cong Q P Q P') by (apply per_double_cong with X; [|split]; Cong).",
            "VernacExtend",
            "73f09970cff685a3fc5268fb8e1b2795c11b84a2"
        ],
        [
            "apply (up X P' P Q A B); repeat split; [Cong..| | | | |]; (apply cong_transitivity with P Q; [|Cong]); apply l10_12 with X X; Perp; eCong.",
            "VernacExtend",
            "aa5b0635025aa4d81a1d7ee163abfe5cd339140f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros p4col S U1' U1 U2 U3 U4 H; spliter.",
            "VernacExtend",
            "bd6992c51baa3409e3a55e4a397589b34e1231ea"
        ],
        [
            "assert (HMid : Midpoint S U1 U1') by (split; Cong).",
            "VernacExtend",
            "c2ec9d51a7bf8ab95ca0431d449f530d1683bd51"
        ],
        [
            "assert (HPer21 : Per U2 S U1) by (exists U1'; split; Cong).",
            "VernacExtend",
            "ef9a278378733236b61a403bd361115c0295a0e6"
        ],
        [
            "absurd (Col U2 U1 S).",
            "VernacExtend",
            "d2be495d9d9b5e3186bf7037fb130a4860999c00"
        ],
        [
            "assert_diffs; apply not_col_permutation_5, per_not_col; auto.",
            "VernacExtend",
            "96f5d4c3acc199324de4f53e99f1108827a2b27e"
        ],
        [
            "apply p4col with U3 U4; [assert_diffs; apply not_col_permutation_2, per_not_col; auto|..]; apply (l8_10 U2 S U1); trivial; repeat split; eCong.",
            "VernacExtend",
            "a7c8874feada0b5bb52cb9a35a07a4c2e08faa64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upper_dim_implies_orthonormal_family_axiom : upper_dim_3_axiom -> orthonormal_family_axiom.",
            "VernacStartTheoremProof",
            "6dc47305e5a012553490b723c92b4c9b7bf43e5e"
        ],
        [
            "rewrite orthonormal_family_aux.",
            "VernacExtend",
            "fd629980eb7a945973801994715c89bc9cf532f9"
        ],
        [
            "intros up A B X P Q HNCol HAXP HAXQ HBXP HBXQ.",
            "VernacExtend",
            "b41b007ede5f38bb0509206e20c80ce38265b524"
        ],
        [
            "destruct (segment_construction Q X X P) as [Q' []].",
            "VernacExtend",
            "4f71ff86a7501794fe199a6eca25c43558006981"
        ],
        [
            "assert (HNCol' : ~ Col P Q' X) by (intro; apply HNCol; ColR).",
            "VernacExtend",
            "b0fd5a7aa3b8d413e38babc46509f0a4f01ffc9b"
        ],
        [
            "assert (HAXQ' : Per A X Q') by (assert_diffs; apply per_col with Q; Col).",
            "VernacExtend",
            "37d9702fe4f364cab3c54a3065ca18ff8d7cece9"
        ],
        [
            "assert (HBXQ' : Per B X Q') by (assert_diffs; apply per_col with Q; Col).",
            "VernacExtend",
            "0ecd538c734ba06150f4a76fcfdf167bdcdef9b7"
        ],
        [
            "clear dependent Q.",
            "VernacExtend",
            "01c31c13443d54537610c83b8cc8dd48796c5b88"
        ],
        [
            "destruct (symmetric_point_construction P X) as [R].",
            "VernacExtend",
            "adc172884491b2419b2b7b487e6a3528a3472240"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply up with P Q' R.",
            "VernacExtend",
            "b1372b667bdb581c846f7a8cb0e3b56313bcacb2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intro; subst; apply HNCol'; Col.",
            "VernacExtend",
            "72a1175342fbfe08e4fad860843092432830e8f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply l10_12 with X X; Cong.",
            "VernacExtend",
            "fc7d9bd94f3df56b69169644514870cb774d1b48"
        ],
        [
            "apply l10_12 with X X; Cong.",
            "VernacExtend",
            "fc7d9bd94f3df56b69169644514870cb774d1b48"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "apply per_double_cong with X; assumption.",
            "VernacExtend",
            "be6eb9ea75e413ccefd4d058609b1dae460246d6"
        ],
        [
            "apply per_double_cong with X; assumption.",
            "VernacExtend",
            "be6eb9ea75e413ccefd4d058609b1dae460246d6"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orthonormal_family_axiom_implies_orth_at2__col : orthonormal_family_axiom -> (forall A B C P Q X, Orth_at X A B C X P -> Orth_at X A B C X Q -> Col P Q X).",
            "VernacStartTheoremProof",
            "b4682dba5900edbac812250f2833459612caa42f"
        ],
        [
            "rewrite orthonormal_family_aux.",
            "VernacExtend",
            "fd629980eb7a945973801994715c89bc9cf532f9"
        ],
        [
            "intros up A B C P Q X HP HQ.",
            "VernacExtend",
            "6f92bf19bb5b4d4fb06391f197f7b01b65220294"
        ],
        [
            "apply orth_at_chara in HP.",
            "VernacExtend",
            "a5ea94d36cf1eaf8e2a5cbb8cf1002c3034f762b"
        ],
        [
            "apply orth_at_chara in HQ.",
            "VernacExtend",
            "2ea0b8a1484f19424b849b695f97409fc9c2ee35"
        ],
        [
            "spliter; clean.",
            "VernacExtend",
            "1f77fab55a5e6047f6584b28684e109670718b44"
        ],
        [
            "destruct (ex_ncol_cop2 A B C X) as [D [E [HD [HE HNCol]]]].",
            "VernacExtend",
            "458c0e0922b55f57476b7653accc2d976bce1131"
        ],
        [
            "apply up with D E; [Col|apply l8_2..]; auto.",
            "VernacExtend",
            "b6c185c5af3767ea655ba774a3b53ab93e590e35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orthonormal_family_axiom_implies_not_two_sides_one_side : orthonormal_family_axiom -> (forall A B C X Y, ~ Coplanar A B C X -> ~ Coplanar A B C Y -> ~ TSP A B C X Y -> OSP A B C X Y).",
            "VernacStartTheoremProof",
            "88863b52c75ab5438d59e2bd4941dfaad870078a"
        ],
        [
            "intros up A B C X Y HX HY HNTS.",
            "VernacExtend",
            "2619693079038e100ee354abcb0c1a578f8b0b8f"
        ],
        [
            "destruct (l11_62_existence_bis A B C X HX) as [P HOrth].",
            "VernacExtend",
            "f6c5fe60bb90d3b597fc3541ab77f8e759fc4c80"
        ],
        [
            "assert (HOrth1 := HOrth).",
            "VernacExtend",
            "8d1dfeb9de6fd0a5e0ae7530bcea76a65e42ee26"
        ],
        [
            "apply orth_at_chara in HOrth1.",
            "VernacExtend",
            "d8dad0c97e018a5c925aed98f20ce37abf03ddc9"
        ],
        [
            "destruct HOrth1 as [HNCol [HPX [HP HOrth1]]].",
            "VernacExtend",
            "2817996b5d07c56a3a8c77f6b8fedbaae3164edb"
        ],
        [
            "destruct (l8_21_3 A B C P Y HP HY) as [X' [T [HOrth' [HT HBet]]]].",
            "VernacExtend",
            "3046d3a8c05747eeb1016aaf2a056fb3c300337a"
        ],
        [
            "apply (col_cop_orth__orth_at _ _ _ _ _ P) in HOrth'; Col.",
            "VernacExtend",
            "fdd57ed011eb6bbdffba4623c4ad69ff91e57bd2"
        ],
        [
            "assert (~ Coplanar A B C X') by (apply orth_at__ncop with P, HOrth').",
            "VernacExtend",
            "7516fda1efd49c20e2cf1e0c3ebeb3f1ba898f2e"
        ],
        [
            "assert (HTS : TSP A B C Y X').",
            "VernacExtend",
            "6d983adc1d8ea799c0304a7c129bb4f4bfb562a2"
        ],
        [
            "repeat split; trivial; exists T; split; assumption.",
            "VernacExtend",
            "c34ec7a97035da1660b95990b54e3549477ee3f4"
        ],
        [
            "exists X'; split; [|assumption].",
            "VernacExtend",
            "03da4981cc52d20ebca9ce1be4312450020cf831"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "exists P; split; [assumption|].",
            "VernacExtend",
            "000db4513e0b71f62e5cd6c83ac3f1a0c0361641"
        ],
        [
            "apply not_out_bet.",
            "VernacExtend",
            "4d81867de2ff7dda5537b3e192c5c1f4976503a8"
        ],
        [
            "apply col_permutation_1, (orthonormal_family_axiom_implies_orth_at2__col up A B C); assumption.",
            "VernacExtend",
            "40b44f2b1873b00f7e70f049b6d1c74b159d3069"
        ],
        [
            "intro; apply HNTS.",
            "VernacExtend",
            "e40216750cb31d6669c9e5ee04fd93f6b866468d"
        ],
        [
            "apply l9_41_2 with X'.",
            "VernacExtend",
            "87c921ccef5459e5d6eef8c6b9140ad0e0a0474c"
        ],
        [
            "apply l9_38, HTS.",
            "VernacExtend",
            "2bf6d1ef67a848aa9062e7dd9302b8db2fee0019"
        ],
        [
            "apply osp_symmetry, cop_out__osp with P; assumption.",
            "VernacExtend",
            "c8d9102bc86edb802e8dc4c963ccc698af21572c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orthonormal_family_axiom_implies_space_separation : orthonormal_family_axiom -> space_separation_axiom.",
            "VernacStartTheoremProof",
            "f23037da88659f30c3ce439242a1280a120f2d7d"
        ],
        [
            "intros up A B C X Y HX HY.",
            "VernacExtend",
            "888636f3ba59bd569183172f21dd03de83a5d26d"
        ],
        [
            "destruct (tsp_dec A B C X Y).",
            "VernacExtend",
            "1544643d535ee2c7c854982cb10ff2110d89bdf3"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "right; apply (orthonormal_family_axiom_implies_not_two_sides_one_side up); assumption.",
            "VernacExtend",
            "6a110664f11c8bd2c3c0602a5bd6d9f2c8a2496b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma space_separation_implies_plane_intersection : space_separation_axiom -> plane_intersection_axiom.",
            "VernacStartTheoremProof",
            "e622c21148bc7acb09b469d98cbfce651d69a69a"
        ],
        [
            "intro sep.",
            "VernacExtend",
            "f54e0197a47f048f3a62a67275fa249f3cce71d4"
        ],
        [
            "assert (Haux : forall A B C D E P, Coplanar A B C P -> ~ Col D E P -> exists Q, Coplanar A B C Q /\\ Coplanar D E P Q /\\ P <> Q).",
            "VernacExtend",
            "b3bb73e1e31154f7db67ac9d199db0d856fdd4e5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A B C D E P HP1 HP2.",
            "VernacExtend",
            "532c2123a589eea63bd9609b5de72ed0eb1601bd"
        ],
        [
            "destruct (cop_dec A B C D).",
            "VernacExtend",
            "f0cfc9e0ac2a0c315d71cda557f2d407b0ce553f"
        ],
        [
            "assert_diffs; exists D; repeat split; Cop.",
            "VernacExtend",
            "db954b7ae466fe3ff35303b68696f7c27803136c"
        ],
        [
            "destruct (cop_dec A B C E).",
            "VernacExtend",
            "81498a37ebb2f7ea323f69060b19cd7c47d26e09"
        ],
        [
            "assert_diffs; exists E; repeat split; Cop.",
            "VernacExtend",
            "bc1ce4075026bf7093c3f858044aeeb9d7caf745"
        ],
        [
            "destruct (sep A B C D E); auto.",
            "VernacExtend",
            "d8493caf7eb1790c8b530b4aa8a079cb393eedde"
        ],
        [
            "apply cop_tsp__ex_cop2; assumption.",
            "VernacExtend",
            "5b2584b0410d53f57bd06ab45553ba0f2c70f1ca"
        ],
        [
            "apply cop_osp__ex_cop2; assumption.",
            "VernacExtend",
            "50adf27441194b63fd3753f6d21a6a38f8ba0877"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros A B C D E F P HP1 HP2.",
            "VernacExtend",
            "d9eb53edf3ab5e0f002952f4671729268ebd4352"
        ],
        [
            "destruct (ex_ncol_cop2 D E F P) as [D' [E']].",
            "VernacExtend",
            "1829aa34a21661f5efbe4e00e0996f2cde22bd57"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "destruct (Haux A B C D' E' P) as [Q [HQ1 [HQ2 HPQ]]]; Col.",
            "VernacExtend",
            "05420660042b21b63806d0cf2b64c938b006be5d"
        ],
        [
            "exists Q.",
            "VernacExtend",
            "be122d6c316bb03b9a9fa5a041a6e80273798333"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "destruct (col_dec D E F) as [HCol|]; [apply col__coplanar, HCol|].",
            "VernacExtend",
            "f64239c4bd6a5160ab7c18f70f6c7467fd588801"
        ],
        [
            "apply coplanar_pseudo_trans with D' E' P; Col; apply coplanar_pseudo_trans with D E F; Cop.",
            "VernacExtend",
            "fa1b1b5a3d5f61b16890d950e5404b9ede4e65a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plane_intersection_implies_space_separation : plane_intersection_axiom -> space_separation_axiom.",
            "VernacStartTheoremProof",
            "5494af8fbe0ce91247968d2d75406a86ca445f61"
        ],
        [
            "intros pint A B C X Y HX HY.",
            "VernacExtend",
            "970a8b2c70ddf0bbaffd73a7ca30902f9e7a4d6f"
        ],
        [
            "assert (HA : Coplanar A B C A) by Cop.",
            "VernacExtend",
            "1d6c0da5d877379808df78c3f9577fdfca8de585"
        ],
        [
            "destruct (pint A B C A X Y A HA) as [D [HD1 [HD2 HAD]]]; Cop.",
            "VernacExtend",
            "60e00a90c1d3aba02ca10b6195cf5f3892704e94"
        ],
        [
            "destruct (cop__one_or_two_sides A D X Y).",
            "VernacExtend",
            "c00a970d1ee3a5ecbd696f8afe29724b45615f67"
        ],
        [
            "Cop.",
            "VernacExtend",
            "803603ff97b5917ad5ce603838c3939f775c8077"
        ],
        [
            "intro; apply HX, col_cop2__cop with A D; Col.",
            "VernacExtend",
            "6188abe48be08bac84206d71e8bbc8b0228e1545"
        ],
        [
            "intro; apply HY, col_cop2__cop with A D; Col.",
            "VernacExtend",
            "5b6b7d0ee54679e870f995d32825ac6d84c60e5e"
        ],
        [
            "left; apply cop2_ts__tsp with A D; assumption.",
            "VernacExtend",
            "943be517d20ee8b59192a0da6f36f103be8afccf"
        ],
        [
            "right; apply cop2_os__osp with A D; assumption.",
            "VernacExtend",
            "964c0fa5698c5f2308b08750fd9b30429864b054"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma space_separation_implies_median_planes : space_separation_axiom -> median_planes_axiom.",
            "VernacStartTheoremProof",
            "7739e8f599a6828b657f282a881aeb7d4529158c"
        ],
        [
            "intro sep.",
            "VernacExtend",
            "f54e0197a47f048f3a62a67275fa249f3cce71d4"
        ],
        [
            "apply median_planes_aux.",
            "VernacExtend",
            "e9f54e32f54ccf80037705414295075086593a35"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "assert (Haux : forall X P Q M, P <> Q -> Cong A P A Q -> Cong B P B Q -> Midpoint M P Q -> TSP M A B Q X -> Cong X P X Q -> False).",
            "VernacExtend",
            "26a31812fa7ba72eda34fa491f0a6ce62a505fea"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros X P Q M HPQ HA HB HM [HQ [HX [T [HT HBet]]]].",
            "VernacExtend",
            "88ca67ace994cf49bdab7a2b67c00d26e9bf3a12"
        ],
        [
            "assert (HCong : forall C, Coplanar M A B C -> Cong C P C Q).",
            "VernacExtend",
            "079f8eea1bffd9216df4c0cdd3fdd84008d63ea1"
        ],
        [
            "intros; apply (l11_60_aux M A B); Cong; apply ncop__ncol with Q, HQ.",
            "VernacExtend",
            "dc995fdb1554ef412a4557b9ac13825091b985a7"
        ],
        [
            "apply triangle_strict_inequality with T; Between.",
            "VernacExtend",
            "56e19bd4f8d3a5195a5e916a723df5bac3c40b97"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply (not_bet_and_out P M Q); split; [Between|].",
            "VernacExtend",
            "337b5dc7c3476b98f40139919b90177b824df032"
        ],
        [
            "assert (~ Coplanar M A B P) by (intro HP; apply HCong in HP; treat_equalities; auto).",
            "VernacExtend",
            "044dd2eb7efb905294b14d6c0a392d7977b190ec"
        ],
        [
            "assert_all_diffs_by_contradiction.",
            "VernacExtend",
            "828df9d95ed8845abc382faae4d2c3b6486ff885"
        ],
        [
            "replace M with T.",
            "VernacExtend",
            "ed57c56d37122725ddefdafe15c7f3b8a7fd4e0c"
        ],
        [
            "apply l6_2 with X; Between.",
            "VernacExtend",
            "35b18bb2dd6abeeb9d3c7b59b91039ad7a6ae50d"
        ],
        [
            "apply (col2_cop2__eq M A B P Q); Cop; ColR.",
            "VernacExtend",
            "498fa5eec1d4c636828622625e64bc43fabe601c"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros C P Q M HPQ HA HB HC HM.",
            "VernacExtend",
            "0dadc1f491729861e595252f52a50c5968a9570d"
        ],
        [
            "destruct (cop_dec M A B C) as [HCop|HNCop]; [apply HCop|].",
            "VernacExtend",
            "b98f20212a4d4feb49b835dccac267e5f41bc25b"
        ],
        [
            "assert (~ Col M A B) by (apply ncop__ncol with C, HNCop).",
            "VernacExtend",
            "cb9306c350219b6905dddd7a63cc42f6da2e1353"
        ],
        [
            "assert (HQ : ~ Coplanar M A B Q).",
            "VernacExtend",
            "23da13d46531d2d086112fbc9c954cefb2704202"
        ],
        [
            "intro Ha; apply (l11_60_aux _ _ _ _ P Q) in Ha; Cong; treat_equalities; auto.",
            "VernacExtend",
            "c9bd67c616c7b40bb4d7e82798d43c1e11700585"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "destruct (sep M A B Q C HQ HNCop).",
            "VernacExtend",
            "962518c2e370021b18e85e0167d94131c20054b1"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "apply l7_2 in HM.",
            "VernacExtend",
            "7997c0ad94b4eb39933ea4b4e0618b391f5971c0"
        ],
        [
            "apply (Haux C Q P M); Cong.",
            "VernacExtend",
            "b27b860187d5310bdefa97843ad1f8957cb69b0c"
        ],
        [
            "apply l9_38, l9_41_2 with Q; [|assumption].",
            "VernacExtend",
            "95bdcca23e3bd6cfb6b23cf16ad51697ab162cdc"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "intro Ha; apply (l11_60_aux _ _ _ _ P Q) in Ha; Cong; treat_equalities; auto.",
            "VernacExtend",
            "c9bd67c616c7b40bb4d7e82798d43c1e11700585"
        ],
        [
            "exists M; split; Between; Cop.",
            "VernacExtend",
            "b743c7eb074e1cab6d137ac68da9e8292ea99191"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem upper_dim_3_equivalent_axioms : all_equiv (upper_dim_3_axiom:: orthonormal_family_axiom:: space_separation_axiom:: plane_intersection_axiom:: median_planes_axiom:: nil).",
            "VernacStartTheoremProof",
            "8118a1cda85f7306fd0c43c68e221f7713d758e5"
        ],
        [
            "assert (H := upper_dim_implies_orthonormal_family_axiom).",
            "VernacExtend",
            "f0e0f3970465d784f0b1f983e2e523d95501ee7d"
        ],
        [
            "assert (I := orthonormal_family_axiom_implies_space_separation).",
            "VernacExtend",
            "9921d17f3f5071d77b2f7954f8a1549246b9bb38"
        ],
        [
            "assert (J := space_separation_implies_plane_intersection).",
            "VernacExtend",
            "71efe1a419c0d2391835b78d06252ceadc04c03a"
        ],
        [
            "assert (K := plane_intersection_implies_space_separation).",
            "VernacExtend",
            "3c9a4fad84f1623b2763dfe63a2bdcdfc656b416"
        ],
        [
            "assert (L := space_separation_implies_median_planes).",
            "VernacExtend",
            "c5f0b0da0865bab5978fdefef3743a297fe56f29"
        ],
        [
            "assert (M := median_planes_implies_upper_dim).",
            "VernacExtend",
            "04b6d33a4dc5cc8670a778f282b85f41d8034ffe"
        ],
        [
            "apply all_equiv__equiv; unfold all_equiv'; simpl; repeat split; tauto.",
            "VernacExtend",
            "b157d956c5d27e478cc2b98e9ac2f7891fc2bb19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Upper_dim_3.",
            "VernacEndSegment",
            "056043274b8a1d513d9cc0f42c72a4c56c461f58"
        ]
    ],
    "proofs": [
        {
            "name": "upper_dim_3_stab",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros nnupper A B C P Q R; intros.",
                        "VernacExtend",
                        "26a7920d469a2ac045351898f586a17c5de2917f"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [|HNCol]; auto.",
                        "VernacExtend",
                        "d74bb8bce410d01959cad47d8cd63fb8c70cf220"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply nnupper.",
                        "VernacExtend",
                        "05be8d1329881928b624f7246d30b1ca40b3319b"
                    ]
                },
                {
                    "command": [
                        "intro upper.",
                        "VernacExtend",
                        "7f33afb5994f136f1585af45570a735540d6e9d2"
                    ]
                },
                {
                    "command": [
                        "apply HNCol.",
                        "VernacExtend",
                        "23a2b6d267c93379e16e8e0343c8863b0f5c6876"
                    ]
                },
                {
                    "command": [
                        "apply upper with P Q R; auto.",
                        "VernacExtend",
                        "7b46326de158fd53d062544e2e13506f2388cacf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "median_planes_implies_upper_dim",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros mp A B C P Q R HPQ HQR HPR; intros.",
                        "VernacExtend",
                        "421eab5d9f5038d7aecd796ca2d28639599a911b"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C); trivial.",
                        "VernacExtend",
                        "e080f300de409d952326f278d91418c751431c53"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "apply HQR.",
                        "VernacExtend",
                        "9a502f22ebee0cf741e0fab714763d1bfdcd988c"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence P Q) as [X].",
                        "VernacExtend",
                        "011a73928da36eb56b98009d6699e7b67b71104c"
                    ]
                },
                {
                    "command": [
                        "apply symmetric_point_uniqueness with P X; trivial.",
                        "VernacExtend",
                        "c5ba38ac310f5a67319e35433f07c6fcaa2aa688"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence P R) as [Y].",
                        "VernacExtend",
                        "0c993111b2ac772b0af55b92b008df45baa23ab2"
                    ]
                },
                {
                    "command": [
                        "replace X with Y; trivial.",
                        "VernacExtend",
                        "0822f3ab571e4f712bb39d3cee4f7070b3a3ca4a"
                    ]
                },
                {
                    "command": [
                        "apply (l8_7 P); apply l8_2.",
                        "VernacExtend",
                        "cf3f035dfea50329f484ab91eb05d450de8aa3c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l11_60 with A B C; [|exists R; split..|]; trivial.",
                        "VernacExtend",
                        "8248db795462df022feb763c1b7a71dc447fbfbe"
                    ]
                },
                {
                    "command": [
                        "apply mp with P Q; Cong.",
                        "VernacExtend",
                        "9589ddf0987b1a74f617d3fb11b2492ef7c0cf33"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply l11_60 with A B C; [|exists Q; split..|]; trivial.",
                        "VernacExtend",
                        "6229240b55cf79d58b7f77337807e1ca178838b0"
                    ]
                },
                {
                    "command": [
                        "apply mp with P R; Cong.",
                        "VernacExtend",
                        "6ca54558417f9514076234d4e6e0af1190c70e2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "median_planes_aux",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros Haux A B C D P Q; intros.",
                        "VernacExtend",
                        "8fd8adf7ac895def7aa9531567ab102f5bb41dd2"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [HCop|]; [apply col__coplanar, HCop|].",
                        "VernacExtend",
                        "fbd57a7834b311ca77a315718e32e3544c661d3c"
                    ]
                },
                {
                    "command": [
                        "destruct (midpoint_existence P Q) as [M].",
                        "VernacExtend",
                        "98d5d64320df6646f24a40ac161939f6586e9d78"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop2 A B C M) as [A1 [A2 [HCop1 [HCop2 HNCol1]]]].",
                        "VernacExtend",
                        "03d115596faea9c54d0fcd8f487f733a174a33b3"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A1 P A1 Q) by (apply (l11_60_aux A B C); assumption).",
                        "VernacExtend",
                        "95550e2633b5267e196cf0fd03dc491bcedb6e4e"
                    ]
                },
                {
                    "command": [
                        "assert (Cong A2 P A2 Q) by (apply (l11_60_aux A B C); assumption).",
                        "VernacExtend",
                        "9c884da8005d125ce1fa3122a4a15181133ae281"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with M A1 A2; eauto.",
                        "VernacExtend",
                        "24df1bd63f5ac9140850d487b4fefe68880bdd52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthonormal_family_aux",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros up A B X P Q HNCol HAXP HAXQ HBXP HBXQ.",
                        "VernacExtend",
                        "b41b007ede5f38bb0509206e20c80ce38265b524"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B X) as [|HNCol1]; [assumption|].",
                        "VernacExtend",
                        "7886ffe52395b55d84612320136ad2a75d92c6e8"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction P X P X) as [P' []].",
                        "VernacExtend",
                        "0b1c85736acc9ebad6f890153be1669c3daa6899"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_per_cong P X X Q P' X) as [Q']; Col; spliter.",
                        "VernacExtend",
                        "f87fb11599f27b70e86a9b2c4ab10917f9228182"
                    ]
                },
                {
                    "command": [
                        "assert (HAXQ' : Per Q' X A) by (apply (l11_60 P Q X); Perp; Cop).",
                        "VernacExtend",
                        "ed77391aa2f49617e345061752d3e5a369e7e58b"
                    ]
                },
                {
                    "command": [
                        "assert (HBXQ' : Per Q' X B) by (apply (l11_60 P Q X); Perp; Cop).",
                        "VernacExtend",
                        "821b05dc9911e6e6f551f7bf155d47f033e8aefc"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol' : ~ Col P X Q') by (apply one_side_not_col123 with Q; assumption).",
                        "VernacExtend",
                        "3ee59878392bcf6bea16918c5b95aa9e6fa49916"
                    ]
                },
                {
                    "command": [
                        "clear dependent Q.",
                        "VernacExtend",
                        "01c31c13443d54537610c83b8cc8dd48796c5b88"
                    ]
                },
                {
                    "command": [
                        "rename Q' into Q.",
                        "VernacExtend",
                        "52e1a9d53fef2d4888ea2f3321c3943a0e54af31"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction A X P' X) as [A' []].",
                        "VernacExtend",
                        "25b8ebf4cb70630208117320865253ae931eccd9"
                    ]
                },
                {
                    "command": [
                        "assert (HAXP' : Per P X A') by (assert_diffs; apply per_col with A; Perp; Col).",
                        "VernacExtend",
                        "88805ec45c76873bf73a05c0a832fa77c4b7aa07"
                    ]
                },
                {
                    "command": [
                        "assert (HAXQ : Per Q X A') by (assert_diffs; apply per_col with A; Perp; Col).",
                        "VernacExtend",
                        "c711ba8cce8b3aaa20531725dfbac3dc4200524e"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol : ~ Col A' B X) by (intro; apply HNCol1; ColR).",
                        "VernacExtend",
                        "113beadc8f83d27dc4765e4d4b1bfac8e3c78489"
                    ]
                },
                {
                    "command": [
                        "clear dependent A.",
                        "VernacExtend",
                        "b17f0ce110025f361a42a4ba851c465cbd5f20a1"
                    ]
                },
                {
                    "command": [
                        "rename A' into A.",
                        "VernacExtend",
                        "fa56804962abc5787247cfe183a535d4ed9a7649"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_per_cong A X X B P' X) as [B']; Col; [assert_diffs; auto|].",
                        "VernacExtend",
                        "fa3140557dabd48c86922e01078dfc5943148dad"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "assert (HBXP' : Per B' X P) by (apply (l11_60 A B X); Perp; Cop).",
                        "VernacExtend",
                        "78af4b0aa31af7a7d60c1d90df0238a3652f6f44"
                    ]
                },
                {
                    "command": [
                        "assert (HBXQ : Per B' X Q) by (apply (l11_60 A B X); Perp; Cop).",
                        "VernacExtend",
                        "8a9e38440f9ff574015c171ab6899c1d75d09aff"
                    ]
                },
                {
                    "command": [
                        "clear dependent B.",
                        "VernacExtend",
                        "bcda20d12768b046d8573dff8e8e744a1964a601"
                    ]
                },
                {
                    "command": [
                        "rename B' into B.",
                        "VernacExtend",
                        "4c6c893bbf6dde3e66dc7d73d08419eace6dea76"
                    ]
                },
                {
                    "command": [
                        "assert (HCong : Cong Q P Q P') by (apply per_double_cong with X; [|split]; Cong).",
                        "VernacExtend",
                        "73f09970cff685a3fc5268fb8e1b2795c11b84a2"
                    ]
                },
                {
                    "command": [
                        "apply (up X P' P Q A B); repeat split; [Cong..| | | | |]; (apply cong_transitivity with P Q; [|Cong]); apply l10_12 with X X; Perp; eCong.",
                        "VernacExtend",
                        "aa5b0635025aa4d81a1d7ee163abfe5cd339140f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros p4col S U1' U1 U2 U3 U4 H; spliter.",
                        "VernacExtend",
                        "bd6992c51baa3409e3a55e4a397589b34e1231ea"
                    ]
                },
                {
                    "command": [
                        "assert (HMid : Midpoint S U1 U1') by (split; Cong).",
                        "VernacExtend",
                        "c2ec9d51a7bf8ab95ca0431d449f530d1683bd51"
                    ]
                },
                {
                    "command": [
                        "assert (HPer21 : Per U2 S U1) by (exists U1'; split; Cong).",
                        "VernacExtend",
                        "ef9a278378733236b61a403bd361115c0295a0e6"
                    ]
                },
                {
                    "command": [
                        "absurd (Col U2 U1 S).",
                        "VernacExtend",
                        "d2be495d9d9b5e3186bf7037fb130a4860999c00"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; apply not_col_permutation_5, per_not_col; auto.",
                        "VernacExtend",
                        "96f5d4c3acc199324de4f53e99f1108827a2b27e"
                    ]
                },
                {
                    "command": [
                        "apply p4col with U3 U4; [assert_diffs; apply not_col_permutation_2, per_not_col; auto|..]; apply (l8_10 U2 S U1); trivial; repeat split; eCong.",
                        "VernacExtend",
                        "a7c8874feada0b5bb52cb9a35a07a4c2e08faa64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upper_dim_implies_orthonormal_family_axiom",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "rewrite orthonormal_family_aux.",
                        "VernacExtend",
                        "fd629980eb7a945973801994715c89bc9cf532f9"
                    ]
                },
                {
                    "command": [
                        "intros up A B X P Q HNCol HAXP HAXQ HBXP HBXQ.",
                        "VernacExtend",
                        "b41b007ede5f38bb0509206e20c80ce38265b524"
                    ]
                },
                {
                    "command": [
                        "destruct (segment_construction Q X X P) as [Q' []].",
                        "VernacExtend",
                        "4f71ff86a7501794fe199a6eca25c43558006981"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol' : ~ Col P Q' X) by (intro; apply HNCol; ColR).",
                        "VernacExtend",
                        "b0fd5a7aa3b8d413e38babc46509f0a4f01ffc9b"
                    ]
                },
                {
                    "command": [
                        "assert (HAXQ' : Per A X Q') by (assert_diffs; apply per_col with Q; Col).",
                        "VernacExtend",
                        "37d9702fe4f364cab3c54a3065ca18ff8d7cece9"
                    ]
                },
                {
                    "command": [
                        "assert (HBXQ' : Per B X Q') by (assert_diffs; apply per_col with Q; Col).",
                        "VernacExtend",
                        "0ecd538c734ba06150f4a76fcfdf167bdcdef9b7"
                    ]
                },
                {
                    "command": [
                        "clear dependent Q.",
                        "VernacExtend",
                        "01c31c13443d54537610c83b8cc8dd48796c5b88"
                    ]
                },
                {
                    "command": [
                        "destruct (symmetric_point_construction P X) as [R].",
                        "VernacExtend",
                        "adc172884491b2419b2b7b487e6a3528a3472240"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply up with P Q' R.",
                        "VernacExtend",
                        "b1372b667bdb581c846f7a8cb0e3b56313bcacb2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intro; subst; apply HNCol'; Col.",
                        "VernacExtend",
                        "72a1175342fbfe08e4fad860843092432830e8f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply l10_12 with X X; Cong.",
                        "VernacExtend",
                        "fc7d9bd94f3df56b69169644514870cb774d1b48"
                    ]
                },
                {
                    "command": [
                        "apply l10_12 with X X; Cong.",
                        "VernacExtend",
                        "fc7d9bd94f3df56b69169644514870cb774d1b48"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "apply per_double_cong with X; assumption.",
                        "VernacExtend",
                        "be6eb9ea75e413ccefd4d058609b1dae460246d6"
                    ]
                },
                {
                    "command": [
                        "apply per_double_cong with X; assumption.",
                        "VernacExtend",
                        "be6eb9ea75e413ccefd4d058609b1dae460246d6"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthonormal_family_axiom_implies_orth_at2__col",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "rewrite orthonormal_family_aux.",
                        "VernacExtend",
                        "fd629980eb7a945973801994715c89bc9cf532f9"
                    ]
                },
                {
                    "command": [
                        "intros up A B C P Q X HP HQ.",
                        "VernacExtend",
                        "6f92bf19bb5b4d4fb06391f197f7b01b65220294"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HP.",
                        "VernacExtend",
                        "a5ea94d36cf1eaf8e2a5cbb8cf1002c3034f762b"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HQ.",
                        "VernacExtend",
                        "2ea0b8a1484f19424b849b695f97409fc9c2ee35"
                    ]
                },
                {
                    "command": [
                        "spliter; clean.",
                        "VernacExtend",
                        "1f77fab55a5e6047f6584b28684e109670718b44"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop2 A B C X) as [D [E [HD [HE HNCol]]]].",
                        "VernacExtend",
                        "458c0e0922b55f57476b7653accc2d976bce1131"
                    ]
                },
                {
                    "command": [
                        "apply up with D E; [Col|apply l8_2..]; auto.",
                        "VernacExtend",
                        "b6c185c5af3767ea655ba774a3b53ab93e590e35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthonormal_family_axiom_implies_not_two_sides_one_side",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros up A B C X Y HX HY HNTS.",
                        "VernacExtend",
                        "2619693079038e100ee354abcb0c1a578f8b0b8f"
                    ]
                },
                {
                    "command": [
                        "destruct (l11_62_existence_bis A B C X HX) as [P HOrth].",
                        "VernacExtend",
                        "f6c5fe60bb90d3b597fc3541ab77f8e759fc4c80"
                    ]
                },
                {
                    "command": [
                        "assert (HOrth1 := HOrth).",
                        "VernacExtend",
                        "8d1dfeb9de6fd0a5e0ae7530bcea76a65e42ee26"
                    ]
                },
                {
                    "command": [
                        "apply orth_at_chara in HOrth1.",
                        "VernacExtend",
                        "d8dad0c97e018a5c925aed98f20ce37abf03ddc9"
                    ]
                },
                {
                    "command": [
                        "destruct HOrth1 as [HNCol [HPX [HP HOrth1]]].",
                        "VernacExtend",
                        "2817996b5d07c56a3a8c77f6b8fedbaae3164edb"
                    ]
                },
                {
                    "command": [
                        "destruct (l8_21_3 A B C P Y HP HY) as [X' [T [HOrth' [HT HBet]]]].",
                        "VernacExtend",
                        "3046d3a8c05747eeb1016aaf2a056fb3c300337a"
                    ]
                },
                {
                    "command": [
                        "apply (col_cop_orth__orth_at _ _ _ _ _ P) in HOrth'; Col.",
                        "VernacExtend",
                        "fdd57ed011eb6bbdffba4623c4ad69ff91e57bd2"
                    ]
                },
                {
                    "command": [
                        "assert (~ Coplanar A B C X') by (apply orth_at__ncop with P, HOrth').",
                        "VernacExtend",
                        "7516fda1efd49c20e2cf1e0c3ebeb3f1ba898f2e"
                    ]
                },
                {
                    "command": [
                        "assert (HTS : TSP A B C Y X').",
                        "VernacExtend",
                        "6d983adc1d8ea799c0304a7c129bb4f4bfb562a2"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial; exists T; split; assumption.",
                        "VernacExtend",
                        "c34ec7a97035da1660b95990b54e3549477ee3f4"
                    ]
                },
                {
                    "command": [
                        "exists X'; split; [|assumption].",
                        "VernacExtend",
                        "03da4981cc52d20ebca9ce1be4312450020cf831"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "exists P; split; [assumption|].",
                        "VernacExtend",
                        "000db4513e0b71f62e5cd6c83ac3f1a0c0361641"
                    ]
                },
                {
                    "command": [
                        "apply not_out_bet.",
                        "VernacExtend",
                        "4d81867de2ff7dda5537b3e192c5c1f4976503a8"
                    ]
                },
                {
                    "command": [
                        "apply col_permutation_1, (orthonormal_family_axiom_implies_orth_at2__col up A B C); assumption.",
                        "VernacExtend",
                        "40b44f2b1873b00f7e70f049b6d1c74b159d3069"
                    ]
                },
                {
                    "command": [
                        "intro; apply HNTS.",
                        "VernacExtend",
                        "e40216750cb31d6669c9e5ee04fd93f6b866468d"
                    ]
                },
                {
                    "command": [
                        "apply l9_41_2 with X'.",
                        "VernacExtend",
                        "87c921ccef5459e5d6eef8c6b9140ad0e0a0474c"
                    ]
                },
                {
                    "command": [
                        "apply l9_38, HTS.",
                        "VernacExtend",
                        "2bf6d1ef67a848aa9062e7dd9302b8db2fee0019"
                    ]
                },
                {
                    "command": [
                        "apply osp_symmetry, cop_out__osp with P; assumption.",
                        "VernacExtend",
                        "c8d9102bc86edb802e8dc4c963ccc698af21572c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthonormal_family_axiom_implies_space_separation",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros up A B C X Y HX HY.",
                        "VernacExtend",
                        "888636f3ba59bd569183172f21dd03de83a5d26d"
                    ]
                },
                {
                    "command": [
                        "destruct (tsp_dec A B C X Y).",
                        "VernacExtend",
                        "1544643d535ee2c7c854982cb10ff2110d89bdf3"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "right; apply (orthonormal_family_axiom_implies_not_two_sides_one_side up); assumption.",
                        "VernacExtend",
                        "6a110664f11c8bd2c3c0602a5bd6d9f2c8a2496b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "space_separation_implies_plane_intersection",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intro sep.",
                        "VernacExtend",
                        "f54e0197a47f048f3a62a67275fa249f3cce71d4"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall A B C D E P, Coplanar A B C P -> ~ Col D E P -> exists Q, Coplanar A B C Q /\\ Coplanar D E P Q /\\ P <> Q).",
                        "VernacExtend",
                        "b3bb73e1e31154f7db67ac9d199db0d856fdd4e5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros A B C D E P HP1 HP2.",
                        "VernacExtend",
                        "532c2123a589eea63bd9609b5de72ed0eb1601bd"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C D).",
                        "VernacExtend",
                        "f0cfc9e0ac2a0c315d71cda557f2d407b0ce553f"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; exists D; repeat split; Cop.",
                        "VernacExtend",
                        "db954b7ae466fe3ff35303b68696f7c27803136c"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec A B C E).",
                        "VernacExtend",
                        "81498a37ebb2f7ea323f69060b19cd7c47d26e09"
                    ]
                },
                {
                    "command": [
                        "assert_diffs; exists E; repeat split; Cop.",
                        "VernacExtend",
                        "bc1ce4075026bf7093c3f858044aeeb9d7caf745"
                    ]
                },
                {
                    "command": [
                        "destruct (sep A B C D E); auto.",
                        "VernacExtend",
                        "d8493caf7eb1790c8b530b4aa8a079cb393eedde"
                    ]
                },
                {
                    "command": [
                        "apply cop_tsp__ex_cop2; assumption.",
                        "VernacExtend",
                        "5b2584b0410d53f57bd06ab45553ba0f2c70f1ca"
                    ]
                },
                {
                    "command": [
                        "apply cop_osp__ex_cop2; assumption.",
                        "VernacExtend",
                        "50adf27441194b63fd3753f6d21a6a38f8ba0877"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros A B C D E F P HP1 HP2.",
                        "VernacExtend",
                        "d9eb53edf3ab5e0f002952f4671729268ebd4352"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop2 D E F P) as [D' [E']].",
                        "VernacExtend",
                        "1829aa34a21661f5efbe4e00e0996f2cde22bd57"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "destruct (Haux A B C D' E' P) as [Q [HQ1 [HQ2 HPQ]]]; Col.",
                        "VernacExtend",
                        "05420660042b21b63806d0cf2b64c938b006be5d"
                    ]
                },
                {
                    "command": [
                        "exists Q.",
                        "VernacExtend",
                        "be122d6c316bb03b9a9fa5a041a6e80273798333"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec D E F) as [HCol|]; [apply col__coplanar, HCol|].",
                        "VernacExtend",
                        "f64239c4bd6a5160ab7c18f70f6c7467fd588801"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with D' E' P; Col; apply coplanar_pseudo_trans with D E F; Cop.",
                        "VernacExtend",
                        "fa1b1b5a3d5f61b16890d950e5404b9ede4e65a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plane_intersection_implies_space_separation",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "intros pint A B C X Y HX HY.",
                        "VernacExtend",
                        "970a8b2c70ddf0bbaffd73a7ca30902f9e7a4d6f"
                    ]
                },
                {
                    "command": [
                        "assert (HA : Coplanar A B C A) by Cop.",
                        "VernacExtend",
                        "1d6c0da5d877379808df78c3f9577fdfca8de585"
                    ]
                },
                {
                    "command": [
                        "destruct (pint A B C A X Y A HA) as [D [HD1 [HD2 HAD]]]; Cop.",
                        "VernacExtend",
                        "60e00a90c1d3aba02ca10b6195cf5f3892704e94"
                    ]
                },
                {
                    "command": [
                        "destruct (cop__one_or_two_sides A D X Y).",
                        "VernacExtend",
                        "c00a970d1ee3a5ecbd696f8afe29724b45615f67"
                    ]
                },
                {
                    "command": [
                        "Cop.",
                        "VernacExtend",
                        "803603ff97b5917ad5ce603838c3939f775c8077"
                    ]
                },
                {
                    "command": [
                        "intro; apply HX, col_cop2__cop with A D; Col.",
                        "VernacExtend",
                        "6188abe48be08bac84206d71e8bbc8b0228e1545"
                    ]
                },
                {
                    "command": [
                        "intro; apply HY, col_cop2__cop with A D; Col.",
                        "VernacExtend",
                        "5b6b7d0ee54679e870f995d32825ac6d84c60e5e"
                    ]
                },
                {
                    "command": [
                        "left; apply cop2_ts__tsp with A D; assumption.",
                        "VernacExtend",
                        "943be517d20ee8b59192a0da6f36f103be8afccf"
                    ]
                },
                {
                    "command": [
                        "right; apply cop2_os__osp with A D; assumption.",
                        "VernacExtend",
                        "964c0fa5698c5f2308b08750fd9b30429864b054"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "space_separation_implies_median_planes",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intro sep.",
                        "VernacExtend",
                        "f54e0197a47f048f3a62a67275fa249f3cce71d4"
                    ]
                },
                {
                    "command": [
                        "apply median_planes_aux.",
                        "VernacExtend",
                        "e9f54e32f54ccf80037705414295075086593a35"
                    ]
                },
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "assert (Haux : forall X P Q M, P <> Q -> Cong A P A Q -> Cong B P B Q -> Midpoint M P Q -> TSP M A B Q X -> Cong X P X Q -> False).",
                        "VernacExtend",
                        "26a31812fa7ba72eda34fa491f0a6ce62a505fea"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros X P Q M HPQ HA HB HM [HQ [HX [T [HT HBet]]]].",
                        "VernacExtend",
                        "88ca67ace994cf49bdab7a2b67c00d26e9bf3a12"
                    ]
                },
                {
                    "command": [
                        "assert (HCong : forall C, Coplanar M A B C -> Cong C P C Q).",
                        "VernacExtend",
                        "079f8eea1bffd9216df4c0cdd3fdd84008d63ea1"
                    ]
                },
                {
                    "command": [
                        "intros; apply (l11_60_aux M A B); Cong; apply ncop__ncol with Q, HQ.",
                        "VernacExtend",
                        "dc995fdb1554ef412a4557b9ac13825091b985a7"
                    ]
                },
                {
                    "command": [
                        "apply triangle_strict_inequality with T; Between.",
                        "VernacExtend",
                        "56e19bd4f8d3a5195a5e916a723df5bac3c40b97"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply (not_bet_and_out P M Q); split; [Between|].",
                        "VernacExtend",
                        "337b5dc7c3476b98f40139919b90177b824df032"
                    ]
                },
                {
                    "command": [
                        "assert (~ Coplanar M A B P) by (intro HP; apply HCong in HP; treat_equalities; auto).",
                        "VernacExtend",
                        "044dd2eb7efb905294b14d6c0a392d7977b190ec"
                    ]
                },
                {
                    "command": [
                        "assert_all_diffs_by_contradiction.",
                        "VernacExtend",
                        "828df9d95ed8845abc382faae4d2c3b6486ff885"
                    ]
                },
                {
                    "command": [
                        "replace M with T.",
                        "VernacExtend",
                        "ed57c56d37122725ddefdafe15c7f3b8a7fd4e0c"
                    ]
                },
                {
                    "command": [
                        "apply l6_2 with X; Between.",
                        "VernacExtend",
                        "35b18bb2dd6abeeb9d3c7b59b91039ad7a6ae50d"
                    ]
                },
                {
                    "command": [
                        "apply (col2_cop2__eq M A B P Q); Cop; ColR.",
                        "VernacExtend",
                        "498fa5eec1d4c636828622625e64bc43fabe601c"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros C P Q M HPQ HA HB HC HM.",
                        "VernacExtend",
                        "0dadc1f491729861e595252f52a50c5968a9570d"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_dec M A B C) as [HCop|HNCop]; [apply HCop|].",
                        "VernacExtend",
                        "b98f20212a4d4feb49b835dccac267e5f41bc25b"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col M A B) by (apply ncop__ncol with C, HNCop).",
                        "VernacExtend",
                        "cb9306c350219b6905dddd7a63cc42f6da2e1353"
                    ]
                },
                {
                    "command": [
                        "assert (HQ : ~ Coplanar M A B Q).",
                        "VernacExtend",
                        "23da13d46531d2d086112fbc9c954cefb2704202"
                    ]
                },
                {
                    "command": [
                        "intro Ha; apply (l11_60_aux _ _ _ _ P Q) in Ha; Cong; treat_equalities; auto.",
                        "VernacExtend",
                        "c9bd67c616c7b40bb4d7e82798d43c1e11700585"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "destruct (sep M A B Q C HQ HNCop).",
                        "VernacExtend",
                        "962518c2e370021b18e85e0167d94131c20054b1"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "apply l7_2 in HM.",
                        "VernacExtend",
                        "7997c0ad94b4eb39933ea4b4e0618b391f5971c0"
                    ]
                },
                {
                    "command": [
                        "apply (Haux C Q P M); Cong.",
                        "VernacExtend",
                        "b27b860187d5310bdefa97843ad1f8957cb69b0c"
                    ]
                },
                {
                    "command": [
                        "apply l9_38, l9_41_2 with Q; [|assumption].",
                        "VernacExtend",
                        "95bdcca23e3bd6cfb6b23cf16ad51697ab162cdc"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "intro Ha; apply (l11_60_aux _ _ _ _ P Q) in Ha; Cong; treat_equalities; auto.",
                        "VernacExtend",
                        "c9bd67c616c7b40bb4d7e82798d43c1e11700585"
                    ]
                },
                {
                    "command": [
                        "exists M; split; Between; Cop.",
                        "VernacExtend",
                        "b743c7eb074e1cab6d137ac68da9e8292ea99191"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upper_dim_3_equivalent_axioms",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "assert (H := upper_dim_implies_orthonormal_family_axiom).",
                        "VernacExtend",
                        "f0e0f3970465d784f0b1f983e2e523d95501ee7d"
                    ]
                },
                {
                    "command": [
                        "assert (I := orthonormal_family_axiom_implies_space_separation).",
                        "VernacExtend",
                        "9921d17f3f5071d77b2f7954f8a1549246b9bb38"
                    ]
                },
                {
                    "command": [
                        "assert (J := space_separation_implies_plane_intersection).",
                        "VernacExtend",
                        "71efe1a419c0d2391835b78d06252ceadc04c03a"
                    ]
                },
                {
                    "command": [
                        "assert (K := plane_intersection_implies_space_separation).",
                        "VernacExtend",
                        "3c9a4fad84f1623b2763dfe63a2bdcdfc656b416"
                    ]
                },
                {
                    "command": [
                        "assert (L := space_separation_implies_median_planes).",
                        "VernacExtend",
                        "c5f0b0da0865bab5978fdefef3743a297fe56f29"
                    ]
                },
                {
                    "command": [
                        "assert (M := median_planes_implies_upper_dim).",
                        "VernacExtend",
                        "04b6d33a4dc5cc8670a778f282b85f41d8034ffe"
                    ]
                },
                {
                    "command": [
                        "apply all_equiv__equiv; unfold all_equiv'; simpl; repeat split; tauto.",
                        "VernacExtend",
                        "b157d956c5d27e478cc2b98e9ac2f7891fc2bb19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}