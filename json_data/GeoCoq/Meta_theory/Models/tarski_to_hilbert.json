{
    "filename": "Meta_theory/Models/tarski_to_hilbert.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Import GeoCoq.Tarski_dev.Ch12_parallel_inter_dec.",
            "VernacRequire",
            "6ad0274590b683559ddb8e9d36314058e9e00e9a"
        ],
        [
            "Require Import Morphisms.",
            "VernacRequire",
            "6a4eb96d3ed10974e9e35a50ae409cd8bae1c2f4"
        ],
        [
            "Require Import GeoCoq.Axioms.hilbert_axioms.",
            "VernacRequire",
            "6ae734c08fca8ee323ab1a1d141468a8f6d569ef"
        ],
        [
            "Require Import GeoCoq.Axioms.parallel_postulates.",
            "VernacRequire",
            "7a0c16ded886b7215c8fe9fa66b079628545bc0e"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.tarski_playfair.",
            "VernacRequire",
            "f9406c246f556134f4e5bac6161809f0139921b4"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.SPP_ID.",
            "VernacRequire",
            "90979fa37fbbcbde4f3a11ec06c0517f9c4913ca"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Dimension_axioms.upper_dim_3.",
            "VernacRequire",
            "ea8f8527b076c74d29ef55c61e1670d39d48c1b3"
        ],
        [
            "Require Import GeoCoq.Meta_theory.Parallel_postulates.parallel_postulates.",
            "VernacRequire",
            "c6d8b824ebb6e4dc2d7a8c807b9ae27d37f93690"
        ],
        [
            "Require Export GeoCoq.Utils.triples.",
            "VernacRequire",
            "3d25b4621578d0e4d4954eab3a0bad7dacae93b3"
        ],
        [
            "Section T.",
            "VernacBeginSection",
            "70c71f09a57e27f638155d3d7473d7ffd60c5ef7"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Definition Line := @Couple Tpoint.",
            "VernacDefinition",
            "a29c1c7e0a7253d25df9966afbeb6c8e0e5cc7ff"
        ],
        [
            "Definition Lin := build_couple Tpoint.",
            "VernacDefinition",
            "b91d96431adb22538412f54a8dc399922e278220"
        ],
        [
            "Definition IncidentL := fun A l => Col A (P1 l) (P2 l).",
            "VernacDefinition",
            "8e5955fffbb313f8a632814f735a801ca40cf5f6"
        ],
        [
            "Lemma axiom_line_existence : forall A B, A<>B -> exists l, IncidentL A l /\\ IncidentL B l.",
            "VernacStartTheoremProof",
            "974d592d41c22a72fee1b8e270c515a1e2e35bd0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (Lin A B H).",
            "VernacExtend",
            "2cfd19ccad7e15bf18b96d80089d5e0f1e4ac127"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition EqL : relation Line := fun l m => forall X, IncidentL X l <-> IncidentL X m.",
            "VernacDefinition",
            "3c5ce9cdf4f3ccd0899bbc11c27dedf6b584e36a"
        ],
        [
            "Infix \"=l=\" := EqL (at level 70):type_scope.",
            "VernacInfix",
            "c98a1a2bbc4adc0a91a9ba3062a947176ab0c76e"
        ],
        [
            "Lemma incident_eq : forall A B l, forall H : A<>B, IncidentL A l -> IncidentL B l -> (Lin A B H) =l= l.",
            "VernacStartTheoremProof",
            "c6c7f1747efcdf3202241e28364a62ba47d511ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold EqL.",
            "VernacExtend",
            "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold IncidentL in *.",
            "VernacExtend",
            "6a246878e9d1a11d58b1ad65524737f14ceac982"
        ],
        [
            "replace (P1 (Lin A B H)) with A; trivial.",
            "VernacExtend",
            "73393dffe98a914c68ea40def2c27df6439c1aac"
        ],
        [
            "replace (P2 (Lin A B H)) with B; trivial.",
            "VernacExtend",
            "5b466d30ef35cd1a2056f374877934985d044ba4"
        ],
        [
            "split;intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "assert (T:=Cond l).",
            "VernacExtend",
            "87b336dc78956e1c8d9215c0d733cd5df766d9e8"
        ],
        [
            "elim (eq_dec_points X B); intro.",
            "VernacExtend",
            "5c5ce255242d9d32bd643450421b991a08b3efb8"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col (P1 l) A B).",
            "VernacExtend",
            "38e3326259323575a48f51f681778c11bb0216aa"
        ],
        [
            "apply col_transitivity_1 with (P2 l); Col.",
            "VernacExtend",
            "43ca33d55f1c5ea5e9f007d16eb227eafd36c477"
        ],
        [
            "assert (Col (P2 l) A B).",
            "VernacExtend",
            "52e2e4b2350fef3174b9dd96d8044abd6a5a50d5"
        ],
        [
            "apply (col_transitivity_2 (P1 l)); Col.",
            "VernacExtend",
            "a7958bf5c8db59fc1c7151106772be41185cdd12"
        ],
        [
            "apply (col3 A B); Col.",
            "VernacExtend",
            "6676c6aaaf46eb3acc283ade1d4efc8ad60100db"
        ],
        [
            "assert (U:=Cond l).",
            "VernacExtend",
            "5fce2fe3b7445396e9868f3a1050ad1006c4af58"
        ],
        [
            "apply (col3 (P1 l) (P2 l)); Col.",
            "VernacExtend",
            "a4089ddad2f09bf760ef508fad20156a879dfd1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_transitivity : forall l m n, l =l= m -> m =l= n -> l =l= n.",
            "VernacStartTheoremProof",
            "802088fe540a0acea8ca2303f10445c852d7df1c"
        ],
        [
            "unfold EqL,IncidentL.",
            "VernacExtend",
            "bfc39c0e996756bf61f262a02a943d8e27090020"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=H X).",
            "VernacExtend",
            "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
        ],
        [
            "assert (V:= H0 X).",
            "VernacExtend",
            "e5ff038b57dc5adbc61ed2a220bbefbf94544b34"
        ],
        [
            "split;intro;intuition.",
            "VernacExtend",
            "9ec21173ed946df67d0e63a1d43757dd11f1f947"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_reflexivity : forall l, l =l= l.",
            "VernacStartTheoremProof",
            "95df95f8323adc38c31eab35876476755c25a79a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold EqL.",
            "VernacExtend",
            "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_symmetry : forall l m, l =l= m -> m =l= l.",
            "VernacStartTheoremProof",
            "bab0311df2280550c40f8df50ec94e20d87f411d"
        ],
        [
            "unfold EqL.",
            "VernacExtend",
            "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=H X).",
            "VernacExtend",
            "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance EqL_Equiv : Equivalence EqL.",
            "VernacInstance",
            "cb32797d192698ab8e5770428f5434793e939581"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Reflexive.",
            "VernacExtend",
            "68bc9355fdb3e158c6fb398c30a327ea5454574d"
        ],
        [
            "apply eq_reflexivity.",
            "VernacExtend",
            "453c725345d82dbdf999742729e7bd7968a7e614"
        ],
        [
            "unfold Symmetric.",
            "VernacExtend",
            "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
        ],
        [
            "apply eq_symmetry.",
            "VernacExtend",
            "2005405c95e1940dcd3987a8a3d8512725b7bc06"
        ],
        [
            "unfold Transitive.",
            "VernacExtend",
            "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
        ],
        [
            "apply eq_transitivity.",
            "VernacExtend",
            "ef81c047f68fa811663b2f1e358cc746553fcc09"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma eq_incident : forall A l m, l =l= m -> (IncidentL A l <-> IncidentL A m).",
            "VernacStartTheoremProof",
            "d9405137c6b6725f3cee892ce2f7d27212fc6b3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split;intros; unfold EqL in *; assert (T:= H A); intuition.",
            "VernacExtend",
            "6f5761be1363494ff9b477fab5645aebaefa2b3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance incident_Proper (A:Tpoint) : Proper (EqL ==>iff) (IncidentL A).",
            "VernacInstance",
            "597bd655aa6a2cb588cb13ebf97aea2e569adfad"
        ],
        [
            "intros a b H .",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "apply eq_incident.",
            "VernacExtend",
            "42532dd117b10ae1b0bacfc06b0c775f202937e6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma axiom_Incid_morphism : forall P l m, IncidentL P l -> EqL l m -> IncidentL P m.",
            "VernacStartTheoremProof",
            "e9628ac27d2535a816cfdeaf0664c24e2610f38c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (eq_incident P l m H0).",
            "VernacExtend",
            "acf9c0093213f75cfa0cf152fca6e640dc33765f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_Incid_dec : forall P l, IncidentL P l \\/ ~IncidentL P l.",
            "VernacStartTheoremProof",
            "7651923f53c614cf367cc7befeeaa5d28bc01216"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "apply col_dec.",
            "VernacExtend",
            "e95aad49ffda8a855408a3a07da30bf680b9f7cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_line_uniqueness : forall A B l m, A <> B -> IncidentL A l -> IncidentL B l -> IncidentL A m -> IncidentL B m -> l =l= m.",
            "VernacStartTheoremProof",
            "84873e3617d003f60de2def91318b3d27bb7cbb0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ((Lin A B H) =l= l).",
            "VernacExtend",
            "bef1171f188aec6c93e2509c017ce5cf0f322479"
        ],
        [
            "eapply incident_eq;assumption.",
            "VernacExtend",
            "b3ead4914d61086031dcbba47d092f35d40ef729"
        ],
        [
            "assert ((Lin A B H) =l= m).",
            "VernacExtend",
            "e5783dc569ae55181adb39440e0703ec7b64ba30"
        ],
        [
            "eapply incident_eq;assumption.",
            "VernacExtend",
            "b3ead4914d61086031dcbba47d092f35d40ef729"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_two_points_on_line : forall l, { A : Tpoint & { B | IncidentL B l /\\ IncidentL A l /\\ A <> B}}.",
            "VernacStartTheoremProof",
            "bcc0bb4710a9f0bdba72f0a2c13722022811a897"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (P1 l).",
            "VernacExtend",
            "166790f8e4bbee3cd9a239b761b6894bda65582c"
        ],
        [
            "exists (P2 l).",
            "VernacExtend",
            "32aeff9d89305434211aa450c2f0d58c83476699"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "repeat split;Col.",
            "VernacExtend",
            "2703caada18c26b8f969759b996267e52aba113d"
        ],
        [
            "exact (Cond l).",
            "VernacExtend",
            "cc5c13e3d787da65885f8e074bffec00cfc0dad1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Col_H := fun A B C => exists l, IncidentL A l /\\ IncidentL B l /\\ IncidentL C l.",
            "VernacDefinition",
            "8fc8bd37bfa2bb101c72d560f2ec8791039e617c"
        ],
        [
            "Lemma cols_coincide_1 : forall A B C, Col_H A B C -> Col A B C.",
            "VernacStartTheoremProof",
            "40cee6eadd7be53d20e24493ac79105384ee9de1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col_H in H.",
            "VernacExtend",
            "4607936db3552e830e8b1e8b6b9dceceb3f24951"
        ],
        [
            "DecompExAnd H l.",
            "VernacExtend",
            "2a5e0d5d06354d750f709496959188e746bcafa1"
        ],
        [
            "unfold IncidentL in *.",
            "VernacExtend",
            "6a246878e9d1a11d58b1ad65524737f14ceac982"
        ],
        [
            "assert (T:=Cond l).",
            "VernacExtend",
            "87b336dc78956e1c8d9215c0d733cd5df766d9e8"
        ],
        [
            "apply (col3 (P1 l) (P2 l)); Col.",
            "VernacExtend",
            "a4089ddad2f09bf760ef508fad20156a879dfd1d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cols_coincide_2 : forall A B C, Col A B C -> Col_H A B C.",
            "VernacStartTheoremProof",
            "23efd90b237aa6bfbe4dba7e970c83b4dd406276"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col_H.",
            "VernacExtend",
            "70280e9bcca15b0ae1ca814b0c679fb684ec48f5"
        ],
        [
            "elim (eq_dec_points A B); intro.",
            "VernacExtend",
            "ffd7b0af2a49605e7c7252492bcfb24779f940dd"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "elim (eq_dec_points A C); intro.",
            "VernacExtend",
            "c39e55933d1ac392cfb052e631383b40f686333c"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert (exists B, A<>B).",
            "VernacExtend",
            "8c65af23c0e3ed8f722373701b1d7f4f0db53206"
        ],
        [
            "eapply another_point.",
            "VernacExtend",
            "0f9b58b6ef7dbcfd4342a22fc94f94dd90e7f3ae"
        ],
        [
            "DecompEx H0 B.",
            "VernacExtend",
            "d4fb7cd63d74542833f3c728248073492ca4d125"
        ],
        [
            "exists (Lin A B H1).",
            "VernacExtend",
            "cc6bf7e3a28761c5b6ec1f84821e0b6e48d862ff"
        ],
        [
            "unfold IncidentL;intuition.",
            "VernacExtend",
            "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
        ],
        [
            "exists (Lin A C H0).",
            "VernacExtend",
            "f8beb14051d2a41b037843e880d9f0f00b28359b"
        ],
        [
            "unfold IncidentL;intuition.",
            "VernacExtend",
            "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
        ],
        [
            "exists (Lin A B H0).",
            "VernacExtend",
            "7a1ca779d4771ddc3f92fd140ea5d35026c870b4"
        ],
        [
            "unfold IncidentL;intuition.",
            "VernacExtend",
            "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cols_coincide : forall A B C, Col A B C <-> Col_H A B C.",
            "VernacStartTheoremProof",
            "dc2f101fa3edfb34621a2acd5084a87199697ad4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply cols_coincide_2.",
            "VernacExtend",
            "bac47a12e59f4b5c812f1fc2f3bb799073f963ab"
        ],
        [
            "apply cols_coincide_1.",
            "VernacExtend",
            "db750b4d2a347bba6b29a6475904bac17fab515d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ncols_coincide : forall A B C, ~ Col A B C <-> ~ Col_H A B C.",
            "VernacStartTheoremProof",
            "cbe90a6c3603646dac5661807c8ec4e3c20d24cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros HNCol HCol; apply HNCol, cols_coincide, HCol.",
            "VernacExtend",
            "64391efd5b2fe8e6e87744a28ca6fa8a775878a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_dim' : PA <> PB /\\ PB <> PC /\\ PA <> PC /\\ ~ Col_H PA PB PC.",
            "VernacStartTheoremProof",
            "d264963e3c5bbf043b2940082d465d3f0d4218c0"
        ],
        [
            "assert (HNCol : ~ Col PA PB PC) by (apply lower_dim).",
            "VernacExtend",
            "9640117ed4b7d361f6753a29dc2655936f553fa0"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record Plane := Plan {M1; M2; M3; NCol : ~ Col_H M1 M2 M3}.",
            "VernacInductive",
            "9d3c0a12fc9d8cc91a77bdec8c0a72e0ca7a0fbc"
        ],
        [
            "Definition IncidentP := fun A p => Coplanar (M1 p) (M2 p) (M3 p) A.",
            "VernacDefinition",
            "57f38dbe1944370a3b3338a9a722cd8811b95133"
        ],
        [
            "Lemma axiom_plane_existence : forall A B C, ~ Col_H A B C -> exists p, IncidentP A p /\\ IncidentP B p /\\ IncidentP C p.",
            "VernacStartTheoremProof",
            "341b68b25ff14c54fc84a566e32814732d6413be"
        ],
        [
            "intros A B C HNCol.",
            "VernacExtend",
            "39c04722186392cbc564ffc054b53bf52b983f8f"
        ],
        [
            "exists (Plan A B C HNCol).",
            "VernacExtend",
            "8e2faf3d01d9225ba1eff2813877ae18e8df23de"
        ],
        [
            "unfold IncidentP; simpl; repeat split; Cop.",
            "VernacExtend",
            "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition EqP : relation Plane := fun p q => forall X, IncidentP X p <-> IncidentP X q.",
            "VernacDefinition",
            "704fc8ff44d64a6886ff3685f6f8d8d06051d242"
        ],
        [
            "Infix \"=p=\" := EqP (at level 70):type_scope.",
            "VernacInfix",
            "db4ca2c493bdfe2d39503ebf8c5cbeb10631b957"
        ],
        [
            "Lemma incidentp_eqp : forall A B C p, forall H : ~ Col_H A B C, IncidentP A p -> IncidentP B p -> IncidentP C p -> (Plan A B C H) =p= p.",
            "VernacStartTheoremProof",
            "5dbd582ffbb594a7a3671eeca66f547660ad8aff"
        ],
        [
            "intros A B C p HNCol HA HB HC X.",
            "VernacExtend",
            "09580adfbbb9f2de0dd6c58c82868ea7c24796c7"
        ],
        [
            "unfold IncidentP in *; simpl.",
            "VernacExtend",
            "cbfbb1315695026302c07a79f4b0af8f7db6bc95"
        ],
        [
            "assert (Hp := NCol p).",
            "VernacExtend",
            "b749875b87d764e6a8844cec3bde31235bb2f782"
        ],
        [
            "apply ncols_coincide in Hp.",
            "VernacExtend",
            "75e7755b5a57ca7b32da89c9e73a3960b60d1dd5"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "split; intro; [apply coplanar_pseudo_trans with A B C; trivial|]; apply coplanar_pseudo_trans with (M1 p) (M2 p) (M3 p); Cop.",
            "VernacExtend",
            "3174a46fbe4472d20752ff0c10568dbff3bdbfd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_transitivity : forall p q r, p =p= q -> q =p= r -> p =p= r.",
            "VernacStartTheoremProof",
            "541ea6331da4d88f0c6cb9d33feedf2400e58fb2"
        ],
        [
            "intros p q r H1 H2 X.",
            "VernacExtend",
            "4eb5333fa5d08d6a563e960b2a0005138b234987"
        ],
        [
            "rewrite (H1 X); apply H2.",
            "VernacExtend",
            "868b71bedd524384901fc3eec8911b552d6d3c5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_reflexivity : forall p, p =p= p.",
            "VernacStartTheoremProof",
            "606ea3649d680b5c413b09fffd7db96b0f24c6f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold EqP.",
            "VernacExtend",
            "2dada19d8789b84066b4ca98b6cca782a8669e0b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqp_symmetry : forall p q, p =p= q -> q =p= p.",
            "VernacStartTheoremProof",
            "917df87980407766d8807feb199590b1abf03a37"
        ],
        [
            "unfold EqP.",
            "VernacExtend",
            "2dada19d8789b84066b4ca98b6cca782a8669e0b"
        ],
        [
            "intros p q H X.",
            "VernacExtend",
            "8c2fd6dcf2f64f8b2c25b0d310f25776109e3f83"
        ],
        [
            "assert (T := H X).",
            "VernacExtend",
            "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance EqP_Equiv : Equivalence EqP.",
            "VernacInstance",
            "1b143a75a0d36134d9a6e857d390c001b2082070"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Reflexive.",
            "VernacExtend",
            "68bc9355fdb3e158c6fb398c30a327ea5454574d"
        ],
        [
            "apply eqp_reflexivity.",
            "VernacExtend",
            "e541f14402d37858d9e77101f6e94eacf34b2e0f"
        ],
        [
            "unfold Symmetric.",
            "VernacExtend",
            "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
        ],
        [
            "apply eqp_symmetry.",
            "VernacExtend",
            "c6756cae35659694bbb770e9084eb38566a25da3"
        ],
        [
            "unfold Transitive.",
            "VernacExtend",
            "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
        ],
        [
            "apply eqp_transitivity.",
            "VernacExtend",
            "b9e7f8f730a7276394b82659adca1a7006b1bee3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma eqp_incidentp : forall A p q, p =p= q -> (IncidentP A p <-> IncidentP A q).",
            "VernacStartTheoremProof",
            "598fa0e3f3bce333eed9719f89ec64c7b9af27ec"
        ],
        [
            "intros A p q H.",
            "VernacExtend",
            "836f2615b2c5e7009c3feed3e8ad7866a2e67271"
        ],
        [
            "exact (H A).",
            "VernacExtend",
            "ee549e1970e47ec172a7ea29b1c8eee564b20c21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance incidentp_Proper (A:Tpoint) : Proper (EqP ==>iff) (IncidentP A).",
            "VernacInstance",
            "d95e9a4fa46c74831e906f2d21627b380b308df8"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "apply eqp_incidentp.",
            "VernacExtend",
            "159d49a54dd03f37e98758526bd49f9eccb7092f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma axiom_Incidp_morphism : forall M p q, IncidentP M p -> EqP p q -> IncidentP M q.",
            "VernacStartTheoremProof",
            "6147cf42eb816713429cd662937356038af3d30b"
        ],
        [
            "intros M p q Hp H.",
            "VernacExtend",
            "4e51c9b667ee9405445a616934518faf3cd2c25b"
        ],
        [
            "destruct (eqp_incidentp M p q H).",
            "VernacExtend",
            "72814fde699ccdb156834b0fb6d263e06836386d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_Incidp_dec : forall M p, IncidentP M p \\/ ~ IncidentP M p.",
            "VernacStartTheoremProof",
            "2122243cd6226f5f0101383df0fdd8623a2234f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cop_dec.",
            "VernacExtend",
            "2e11859a436b2296466e1a78780459a8e7ef182d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_plane_uniqueness : forall A B C p q, ~ Col_H A B C -> IncidentP A p -> IncidentP B p -> IncidentP C p -> IncidentP A q -> IncidentP B q -> IncidentP C q -> p =p= q.",
            "VernacStartTheoremProof",
            "78c175b113b280ef2fe28fd52f5ae20470080934"
        ],
        [
            "intros A B C p q H; intros.",
            "VernacExtend",
            "59caee5504602acd9f8f22a15cb0ffd161e24568"
        ],
        [
            "assert (Heq : (Plan A B C H) =p= p).",
            "VernacExtend",
            "c80e8a352376453148d18e982bf2524a445f2360"
        ],
        [
            "apply incidentp_eqp;assumption.",
            "VernacExtend",
            "c8bf02b9b7c97e11ba64715e589152bf15136b63"
        ],
        [
            "assert ((Plan A B C H) =p= q).",
            "VernacExtend",
            "2dd198925260f1dcf707a6dd86c2dde5c2309fd4"
        ],
        [
            "apply incidentp_eqp;assumption.",
            "VernacExtend",
            "c8bf02b9b7c97e11ba64715e589152bf15136b63"
        ],
        [
            "rewrite <- Heq.",
            "VernacExtend",
            "df31059972bb579c31a423b0d265991ce83be52f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_one_point_on_plane : forall p, { A | IncidentP A p }.",
            "VernacStartTheoremProof",
            "b779db8f6132aafb897a27749dab036d9db7fc23"
        ],
        [
            "intro p.",
            "VernacExtend",
            "5aea32c2ecd07598789d82ffef7594239c3ee52b"
        ],
        [
            "exists (M1 p).",
            "VernacExtend",
            "a82eca40f47edc73049f7e31810999cb730b68f5"
        ],
        [
            "unfold IncidentP; Cop.",
            "VernacExtend",
            "12cd15df2324e1213ebc4c4ef3b4e64492f9ad76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition IncidentLP := fun l p => forall A, IncidentL A l -> IncidentP A p.",
            "VernacDefinition",
            "09ad7ef7050ddb1e6e2a4ea526d3354a41cd13d9"
        ],
        [
            "Lemma axiom_line_on_plane : forall A B l p, A <> B -> IncidentL A l -> IncidentL B l -> IncidentP A p -> IncidentP B p -> IncidentLP l p.",
            "VernacStartTheoremProof",
            "906f8b79db4898158d105078f6557b18720d4097"
        ],
        [
            "intros A B l p HAB HAl HBl HAp HBp X HXl.",
            "VernacExtend",
            "131fd1b3b1c1a677e37e0e2a18524b08ba6e3431"
        ],
        [
            "destruct (ex_ncol_cop (M1 p) (M2 p) (M3 p) A B HAB) as [C [HCp HNCol]].",
            "VernacExtend",
            "25d644213a57310a48c361ca0c62153a39bc8c6c"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "assert (Heq : (Plan A B C HNCol) =p= p).",
            "VernacExtend",
            "662700aecd1ce068f1d27e59b38a9d64e22c5e55"
        ],
        [
            "apply incidentp_eqp; auto.",
            "VernacExtend",
            "8b901b15f451d800bb20c0d325fe85721de95b60"
        ],
        [
            "rewrite <- Heq.",
            "VernacExtend",
            "df31059972bb579c31a423b0d265991ce83be52f"
        ],
        [
            "unfold IncidentP; simpl.",
            "VernacExtend",
            "ee17b29eb0b7d096123d49cc1e26bac74aa1d403"
        ],
        [
            "exists X; left; split.",
            "VernacExtend",
            "57d4ccdf7c52e7d30f506a27a7cf9dc82265bd0b"
        ],
        [
            "apply cols_coincide_1; exists l; repeat split; assumption.",
            "VernacExtend",
            "10037f1b8cb86e2fc38b2a3ba03035a8b8dc0e21"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Between_H := fun A B C => Bet A B C /\\ A <> B /\\ B <> C /\\ A <> C.",
            "VernacDefinition",
            "81a0d0b8459a79ca7fd840b59de04ec68ae37938"
        ],
        [
            "Lemma axiom_between_col : forall A B C, Between_H A B C -> Col_H A B C.",
            "VernacStartTheoremProof",
            "3d45155319ebf3f48a2840c544b785f047bfc770"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col_H, Between_H in *.",
            "VernacExtend",
            "ce9ab8bfd87377d8822334a7edc57d2ae286e8d5"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "exists (Lin A B H2).",
            "VernacExtend",
            "b799249bd8f730649a10810814f0f48f1f691870"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_between_diff : forall A B C, Between_H A B C -> A<>C.",
            "VernacStartTheoremProof",
            "f58aadd15f43fc4400a312a642a0ceff3932f53b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Between_H in *.",
            "VernacExtend",
            "0aabb2469251777a3bfbfffe4cd2621b94ab0eed"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_between_comm : forall A B C, Between_H A B C -> Between_H C B A.",
            "VernacStartTheoremProof",
            "8f1b5cc7612ca1bcf5b394c280f6ef6a103ce499"
        ],
        [
            "unfold Between_H in |- *.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_between_out : forall A B, A <> B -> exists C, Between_H A B C.",
            "VernacStartTheoremProof",
            "9acf68787d175f74b02b5be0c8be2f32ca6b63bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "prolong A B C A B.",
            "VernacExtend",
            "bdf1319ae340866cc122d3bd4d66340e7a554c1f"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split; auto; intro; treat_equalities; tauto.",
            "VernacExtend",
            "4f53ee870ff0cb7a00208ded26c555dd965b3c57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_between_only_one : forall A B C, Between_H A B C -> ~ Between_H B C A.",
            "VernacStartTheoremProof",
            "c78fef306740f5b9ffed4817e78356544b3be268"
        ],
        [
            "unfold Between_H in |- *.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro; spliter.",
            "VernacExtend",
            "8c12bb0f80b77e560a7d26b76aac4b3a29986a28"
        ],
        [
            "assert (B=C) by (apply (between_equality B C A);Between).",
            "VernacExtend",
            "58d8c74f35c6f80a9d062f2d0fea10235f4aa154"
        ],
        [
            "solve [intuition].",
            "VernacExtend",
            "a44c77fe0ad6731ace858e9158278f1620dc35f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma between_one : forall A B C, A<>B -> A<>C -> B<>C -> Col A B C -> Between_H A B C \\/ Between_H B C A \\/ Between_H B A C.",
            "VernacStartTheoremProof",
            "ca1e43570662e66bddf09d11c214b38f8bcaccdb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col, Between_H in *.",
            "VernacExtend",
            "fa08aab1b6fa32680cc9c73f99f4054a336bd6e5"
        ],
        [
            "destruct H2 as [|[|]]; [left|right..]; Between.",
            "VernacExtend",
            "0fce5ed81713e1420858ff190ea4b13d9a095cb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_between_one : forall A B C, A<>B -> A<>C -> B<>C -> Col_H A B C -> Between_H A B C \\/ Between_H B C A \\/ Between_H B A C.",
            "VernacStartTheoremProof",
            "e4e9d85971f2d9c4c7cb8ad0ad4ee39970c57000"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply between_one;try assumption.",
            "VernacExtend",
            "83aefab4441fa22f5bf84a05f0360b7843537abb"
        ],
        [
            "apply cols_coincide_1.",
            "VernacExtend",
            "db750b4d2a347bba6b29a6475904bac17fab515d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cut := fun l A B => ~ IncidentL A l /\\ ~ IncidentL B l /\\ exists I, IncidentL I l /\\ Between_H A I B.",
            "VernacDefinition",
            "4a150c9e3bec03411b1f0267d576a7b1012f0dd7"
        ],
        [
            "Lemma cut_two_sides : forall l A B, cut l A B <-> TS (P1 l) (P2 l) A B.",
            "VernacStartTheoremProof",
            "51b6e71ec3664f4744572078ca4d3be957c397ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cut.",
            "VernacExtend",
            "42f7308d20f8ee39060d449cfbf42430905ca1e5"
        ],
        [
            "unfold TS.",
            "VernacExtend",
            "b797aa08231484e4dce465b473be143ea9f36b33"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; intuition.",
            "VernacExtend",
            "f758dffc0a50f0147dc90ea6fe052b8a867ccd56"
        ],
        [
            "ex_and H1 T.",
            "VernacExtend",
            "c7ff50d14eb3aa4b6de98fc3f33f56c22bbf532a"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "unfold IncidentL in H1.",
            "VernacExtend",
            "19d1c183f2fc772b6ba20838d92d4adc3be00d11"
        ],
        [
            "unfold Between_H in *.",
            "VernacExtend",
            "0aabb2469251777a3bfbfffe4cd2621b94ab0eed"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "ex_and H1 T.",
            "VernacExtend",
            "c7ff50d14eb3aa4b6de98fc3f33f56c22bbf532a"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_plane_aux : forall A B C D, Coplanar A B C D -> A <> B -> exists p, IncidentP A p /\\ IncidentP B p /\\ IncidentP C p /\\ IncidentP D p.",
            "VernacStartTheoremProof",
            "e993a246bbddd8990f00c0b4ca7e638cb1263b31"
        ],
        [
            "intros A B C D HCop HAB.",
            "VernacExtend",
            "1a7ac927ade7fc1cdb8761a42af76afe48ae1963"
        ],
        [
            "destruct (col_dec A B C) as [|HNCol]; [destruct (col_dec A B D) as [|HNCol]|].",
            "VernacExtend",
            "0f55ceadbf3d60ee4c280b808bc645e8086d51e1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (not_col_exists A B HAB) as [E HNCol].",
            "VernacExtend",
            "32dac5f1d3611219d8998a59c68cee54469e14b1"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "exists (Plan A B E HNCol).",
            "VernacExtend",
            "1dc2a90fa691a72eb2ddaff87fe9b3e68650220f"
        ],
        [
            "unfold IncidentP; simpl; repeat split; Cop.",
            "VernacExtend",
            "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "exists (Plan A B D HNCol).",
            "VernacExtend",
            "f46aa5510a2b629fc185b52986cc566267a088b2"
        ],
        [
            "unfold IncidentP; simpl; repeat split; Cop.",
            "VernacExtend",
            "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "exists (Plan A B C HNCol).",
            "VernacExtend",
            "8e2faf3d01d9225ba1eff2813877ae18e8df23de"
        ],
        [
            "unfold IncidentP; simpl; repeat split; Cop.",
            "VernacExtend",
            "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cop_plane : forall A B C D, Coplanar A B C D -> exists p, IncidentP A p /\\ IncidentP B p /\\ IncidentP C p /\\ IncidentP D p.",
            "VernacStartTheoremProof",
            "f463df1f442077480a7c5a132ef59f1facc4b9b2"
        ],
        [
            "intros A B C D HCop.",
            "VernacExtend",
            "9f2dc2e17c55e6ebdd0f2a5555c137f97e38ea3f"
        ],
        [
            "destruct (eq_dec_points A B) as [|HAB]; [destruct (eq_dec_points A C); [destruct (eq_dec_points A D)|]|].",
            "VernacExtend",
            "16ba5d36ba0a705b5a4790fe5aa36f5a851ba7a1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (another_point D) as [E].",
            "VernacExtend",
            "65919f6b50051fb2fb335d636da693f89d9e5fd3"
        ],
        [
            "destruct (cop_plane_aux D E E E) as [p []]; Cop.",
            "VernacExtend",
            "91c9cadec595171b6159d62e6347f933af839957"
        ],
        [
            "subst; exists p; repeat split; assumption.",
            "VernacExtend",
            "1e5f52783f82d5e75d4b56a2b9ecadc88caa311f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (cop_plane_aux A D B C) as [p]; Cop.",
            "VernacExtend",
            "95a16676270491ea1e071fc0762d8bb9d2d6aae3"
        ],
        [
            "spliter; exists p; repeat split; assumption.",
            "VernacExtend",
            "1214d0f894df36e4160349e3135b358f0acce758"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (cop_plane_aux A C B D) as [p]; Cop.",
            "VernacExtend",
            "ddc0a1e1472f13440bac792d2411e9ffab9d6a07"
        ],
        [
            "spliter; exists p; repeat split; assumption.",
            "VernacExtend",
            "1214d0f894df36e4160349e3135b358f0acce758"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (cop_plane_aux A B C D HCop HAB).",
            "VernacExtend",
            "df0a4827d72ea52813cd5cfe50823eb3e00f345a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plane_cop: forall A B C D p, IncidentP A p -> IncidentP B p -> IncidentP C p -> IncidentP D p -> Coplanar A B C D.",
            "VernacStartTheoremProof",
            "b0caf1eb854be8154630992985ef44b2ed53d9da"
        ],
        [
            "unfold IncidentP.",
            "VernacExtend",
            "5d3b9c2d3180dce223831439f299759d3c4d9e21"
        ],
        [
            "intros A B C D p HA HB HC HD.",
            "VernacExtend",
            "5936af6ef128a0987e373d8da4773e4222156f59"
        ],
        [
            "assert (HNCol := NCol p).",
            "VernacExtend",
            "15adc136a095e3637fba56c98d2721730e7da6a8"
        ],
        [
            "apply ncols_coincide in HNCol.",
            "VernacExtend",
            "a4d3480a8ee520844cb438fe49134a15e15f92e0"
        ],
        [
            "apply coplanar_pseudo_trans with (M1 p) (M2 p) (M3 p); assumption.",
            "VernacExtend",
            "1b68f22d6c059dfab4655bf3c9b18bea36094a02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_pasch : forall A B C l p, ~ Col_H A B C -> IncidentP A p -> IncidentP B p -> IncidentP C p -> IncidentLP l p -> ~ IncidentL C l -> cut l A B -> cut l A C \\/ cut l B C.",
            "VernacStartTheoremProof",
            "99120dcbd128cd4c8775908d750ae4b012395812"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cut_two_sides in H5.",
            "VernacExtend",
            "ae0c0344b466b9a74d0577555891e65f2450d90f"
        ],
        [
            "assert(~Col A B C).",
            "VernacExtend",
            "a75f346a3102b55e5f88c48f3e148b73c2675143"
        ],
        [
            "apply ncols_coincide.",
            "VernacExtend",
            "d10675642e05828c8cba695a9e142bc0b5f08d6b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(HH:=H5).",
            "VernacExtend",
            "a6b0a13f53bd6cec88aa4ec7576099cc73ffe8c0"
        ],
        [
            "unfold TS in HH.",
            "VernacExtend",
            "5d730ec8ab2a61acc4d8f44228faa3c07fe10794"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "unfold IncidentL in H4.",
            "VernacExtend",
            "b70f839350fe7e23f7feaae8c66f2cfd5509b717"
        ],
        [
            "assert (HCop : Coplanar (P1 l) (P2 l) A C).",
            "VernacExtend",
            "e7b27c95d33b3dbecafddaded0479ad36f4af931"
        ],
        [
            "apply plane_cop with p; trivial; apply H3; unfold IncidentL; simpl; Col.",
            "VernacExtend",
            "fb32ba3365325343ef47df9fc9cecd112c359f34"
        ],
        [
            "assert(HH:= cop__one_or_two_sides (P1 l)(P2 l) A C HCop H7 H4).",
            "VernacExtend",
            "c5d61bba348ef2a688e619f5419fe10f627c4885"
        ],
        [
            "induction HH.",
            "VernacExtend",
            "1e97a27b456167214a13cc00f52556b8b06289c7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply <-cut_two_sides.",
            "VernacExtend",
            "bf2a2bb9422f597abf96672bdf57cbd7503e8dc5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply <-cut_two_sides.",
            "VernacExtend",
            "bf2a2bb9422f597abf96672bdf57cbd7503e8dc5"
        ],
        [
            "apply l9_2.",
            "VernacExtend",
            "2e23815ba62b94c5e0c762fde4d5a815e3c3d6a7"
        ],
        [
            "eapply l9_8_2.",
            "VernacExtend",
            "bedeae540e95e0cf336c558edb4a62a97970f4ab"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Incid_line : forall P A B l, A<>B -> IncidentL A l -> IncidentL B l -> Col P A B -> IncidentL P l.",
            "VernacStartTheoremProof",
            "b18eb46a1b0303b8e720d78292e33449125ccf27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold IncidentL in *.",
            "VernacExtend",
            "6a246878e9d1a11d58b1ad65524737f14ceac982"
        ],
        [
            "destruct l as [C D HCD].",
            "VernacExtend",
            "10470de7e6de9db8e1a0ac73e3d6308893dab24b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "ColR.",
            "VernacExtend",
            "0b35ec58454f3477d058acbaeb25f2751768cf91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition outH := fun P A B => Between_H P A B \\/ Between_H P B A \\/ (P <> A /\\ A = B).",
            "VernacDefinition",
            "79562a609d1ac1a13fe89d130f3f2e3cd780760b"
        ],
        [
            "Lemma out_outH : forall P A B, Out P A B -> outH P A B.",
            "VernacStartTheoremProof",
            "d741f763bf58468c5e78ab76d13850a82b0d4897"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "unfold outH.",
            "VernacExtend",
            "d4f9ab602d72510c692e84529ea82e3dd4140a13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "right; left.",
            "VernacExtend",
            "0890e8256aff7ee5abfe085237b7b2250c448482"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_hcong_1_existence : forall A B A' P l, A <> B -> A' <> P -> IncidentL A' l -> IncidentL P l -> exists B', IncidentL B' l /\\ outH A' P B' /\\ Cong A' B' A B.",
            "VernacStartTheoremProof",
            "4053bab0a3d9174ccbfc3d22cceafbd862be9384"
        ],
        [
            "intros; destruct (l6_11_existence A' A B P) as [B' [HOut HCong]]; auto.",
            "VernacExtend",
            "427b147a624634121f521ae13f814de2750dd987"
        ],
        [
            "exists B'; repeat split; try apply out_outH, l6_6; auto; unfold IncidentL in *.",
            "VernacExtend",
            "d8de7c19037084b180e879e86eb465af6dcd4bbf"
        ],
        [
            "destruct l; simpl in *; ColR.",
            "VernacExtend",
            "a846390f359bdc4da30898b6878ada8eaa968b0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_hcong_1_uniqueness : forall A B l M A' B' A'' B'', A <> B -> IncidentL M l -> IncidentL A' l -> IncidentL B' l -> IncidentL A'' l -> IncidentL B'' l -> Between_H A' M B' -> Cong M A' A B -> Cong M B' A B -> Between_H A'' M B'' -> Cong M A'' A B -> Cong M B'' A B -> (A' = A'' /\\ B' = B'') \\/ (A' = B'' /\\ B' = A'').",
            "VernacStartTheoremProof",
            "da8300236195ae1a535573c5b612bb806ae493eb"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "assert(A' <> M /\\ A'' <> M /\\ B' <> M /\\ B'' <> M /\\ A' <> B' /\\ A'' <> B'').",
            "VernacExtend",
            "87d6e6404acd21db81a649d67106dc486e2efe9d"
        ],
        [
            "repeat split; intro; treat_equalities; tauto.",
            "VernacExtend",
            "288b847fcf5cff7cf6bd12049a042654649c578c"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "induction(out_dec M A' A'').",
            "VernacExtend",
            "4fb84e07e197b109f64b71b441d076c3c3c26cd6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assert(A' = A'').",
            "VernacExtend",
            "f8ab3a9c27bef7267bd71cba6488099dd9077ecd"
        ],
        [
            "eapply (l6_11_uniqueness M A B A''); try assumption.",
            "VernacExtend",
            "a45bf18b0a7c531b0d8d8a53c46159ee89fc8dd0"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst A''.",
            "VernacExtend",
            "2598f32250ecf638a82cd85c3f58a1bf74c3712a"
        ],
        [
            "eapply (l6_11_uniqueness M A B B''); try assumption.",
            "VernacExtend",
            "6e24283ca470d60865d32699b35d93fffcc0181b"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply not_out_bet in H23.",
            "VernacExtend",
            "98654cb405c24fa488662eff098992418ab452c5"
        ],
        [
            "assert(A' = B'').",
            "VernacExtend",
            "4ae47fb2dc7e9e6a4b88a4393e8e922cfabdea7a"
        ],
        [
            "eapply (l6_11_uniqueness M A B A'); try assumption.",
            "VernacExtend",
            "4c791e57db2b226badca1c85d72ae53a79ede2f7"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H18.",
            "VernacExtend",
            "ca1c5c965a71b7d5c1a19ecd93341a02c910731a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst B''.",
            "VernacExtend",
            "cba3adffb1d3a34ee9f908cf8ba0b96f43616125"
        ],
        [
            "eapply (l6_11_uniqueness M A B B'); try assumption.",
            "VernacExtend",
            "03646d8ba0b7005caaddeb0b1166e34584fa1f7a"
        ],
        [
            "apply out_trivial.",
            "VernacExtend",
            "c4b8f77ba3d4e8f9df3a78e5bd2d2956e2f970e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "repeat split; try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "eapply l5_2.",
            "VernacExtend",
            "63f72610b57dc706bc60432c57a798ed0f10edd1"
        ],
        [
            "apply H20.",
            "VernacExtend",
            "fcac48582f0bcbfeece09b9d85741a93c21eec0d"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply col3.",
            "VernacExtend",
            "868bf06b19fdafb8a75ff441bfee26070ac4b11f"
        ],
        [
            "apply (Cond l).",
            "VernacExtend",
            "1b2a90c94c035d6f8c51dfba7978210875a78ef7"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition same_side_scott := fun E A B => E <> A /\\ E <> B /\\ Col_H E A B /\\ ~ Between_H A E B.",
            "VernacDefinition",
            "cc4ce2141b03189e15cc93024ada19d5a5dd72af"
        ],
        [
            "Remark axiom_hcong_scott: forall P Q A C, A <> C -> P <> Q -> exists B, same_side_scott A B C /\\ Cong P Q A B.",
            "VernacStartTheoremProof",
            "4673cec974d504641ea3d199ed406fd6994a2c2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold same_side_scott.",
            "VernacExtend",
            "368749bb33701e5e32b8863aeadffa4979d7e026"
        ],
        [
            "assert (exists X : Tpoint, Out A X C /\\ Cong A X P Q).",
            "VernacExtend",
            "9832c312e341c79f0547921425e24544f631cc81"
        ],
        [
            "apply l6_11_existence;auto.",
            "VernacExtend",
            "5cc5f723f52ad4094e39643007c9f4d3f6b7ac76"
        ],
        [
            "decompose [ex and] H1;clear H1.",
            "VernacExtend",
            "bc81ea12f9d7cd0250e352066bfed361d6a9041f"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold Out in H3.",
            "VernacExtend",
            "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold Out in H3.",
            "VernacExtend",
            "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply cols_coincide_2.",
            "VernacExtend",
            "bac47a12e59f4b5c812f1fc2f3bb799073f963ab"
        ],
        [
            "apply out_col;assumption.",
            "VernacExtend",
            "c1f1c5b55c0396cad1a490c85fe7af4b9c062072"
        ],
        [
            "unfold Out in H3.",
            "VernacExtend",
            "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "decompose [and] H3;clear H3.",
            "VernacExtend",
            "cd2921edf4657af631a1c0c3b0adccd05dfabff8"
        ],
        [
            "decompose [and] H1;clear H1.",
            "VernacExtend",
            "d5eeacf5c3671b26467b00b60a0c931630d799d6"
        ],
        [
            "clear H8.",
            "VernacExtend",
            "bb55999d98db29a385bd8f1f3d68192c139f5f5c"
        ],
        [
            "destruct H7.",
            "VernacExtend",
            "f6b4c745a19e0b13add33f75bb62e394f2c83618"
        ],
        [
            "assert (A = x).",
            "VernacExtend",
            "4c929da2aaaa44f7f93bccae367ea0da5472328b"
        ],
        [
            "eapply between_equality;eauto.",
            "VernacExtend",
            "3caf4921ccc93ccf4699daa4fafe33d7a82f9b33"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (A = C).",
            "VernacExtend",
            "69410b0918a7eb7f11f148e0f8bcaee1841cf29a"
        ],
        [
            "eapply between_equality;eauto.",
            "VernacExtend",
            "3caf4921ccc93ccf4699daa4fafe33d7a82f9b33"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Cong.",
            "VernacExtend",
            "38071831c795d703a75f51b6d65fc147487103cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition disjoint := fun A B C D => ~ exists P, Between_H A P B /\\ Between_H C P D.",
            "VernacDefinition",
            "47a50bcfc30a05597845a2cf1fec1572ddd52d72"
        ],
        [
            "Lemma col_disjoint_bet : forall A B C, Col_H A B C -> disjoint A B B C -> Bet A B C.",
            "VernacStartTheoremProof",
            "d3faa1dd80f409d0bd439be57f199e38da78be7a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply cols_coincide_1 in H.",
            "VernacExtend",
            "31c8b3072eade13e00fe3af7fbf51021e587b6ed"
        ],
        [
            "unfold disjoint in H0.",
            "VernacExtend",
            "55ccb3f7fb92eb259194338986250b639b32c64c"
        ],
        [
            "induction (eq_dec_points A B).",
            "VernacExtend",
            "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "apply between_trivial2.",
            "VernacExtend",
            "09ca3a830f68cf2d030902e5b58c75ccba430b60"
        ],
        [
            "induction (eq_dec_points B C).",
            "VernacExtend",
            "5a5afdeceafc19c18a920ee30f3166fbe576500d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "unfold Col in H.",
            "VernacExtend",
            "4ff59ad823bef04ef5effb01a66f0264e5dd36d6"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert(exists M, Midpoint M B C) by(apply midpoint_existence).",
            "VernacExtend",
            "ba05d70bbf35f264f3bbc2a78e5128cc0307eaa2"
        ],
        [
            "ex_and H3 M.",
            "VernacExtend",
            "400204db91ec44d27fcc0106ee2781053fb22697"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply False_ind.",
            "VernacExtend",
            "953e151f97c8c6479faad3bcd88fb0b89b03443a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assert(exists M, Midpoint M A B) by(apply midpoint_existence).",
            "VernacExtend",
            "313f501997c01687dedfc245bf1b4951d18fc627"
        ],
        [
            "ex_and H3 M.",
            "VernacExtend",
            "400204db91ec44d27fcc0106ee2781053fb22697"
        ],
        [
            "exists M.",
            "VernacExtend",
            "2a4b5607a006ea853718a616784ce7d5094d0af9"
        ],
        [
            "unfold Midpoint in H4.",
            "VernacExtend",
            "8d9f5504c56bc5d5737b86810a4591165b10e524"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eapply between_exchange4.",
            "VernacExtend",
            "7a2dbb554ce59f1a156c087fc7af58ed425def13"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply between_symmetry.",
            "VernacExtend",
            "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_hcong_3 : forall A B C A' B' C', Col_H A B C -> Col_H A' B' C' -> disjoint A B B C -> disjoint A' B' B' C' -> Cong A B A' B' -> Cong B C B' C' -> Cong A C A' C'.",
            "VernacStartTheoremProof",
            "999708a1a703a82c0acfe4e5da309ae54959aa2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(Bet A B C).",
            "VernacExtend",
            "60da74f2570859e683c315b7d09210471a9c3658"
        ],
        [
            "eapply col_disjoint_bet.",
            "VernacExtend",
            "2bc8d6ebd312ea2c04a62e2446f0f0918a1e3889"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert(Bet A' B' C').",
            "VernacExtend",
            "366b0410634258f4be5168e9436d49c04bb8064d"
        ],
        [
            "eapply col_disjoint_bet.",
            "VernacExtend",
            "2bc8d6ebd312ea2c04a62e2446f0f0918a1e3889"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply l2_11;eauto.",
            "VernacExtend",
            "c88f639590216eda59a6d3c1b52f508910fe6053"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_not_incident : forall A B : Tpoint, forall HH : A <> B , exists C, ~ IncidentL C (Lin A B HH).",
            "VernacStartTheoremProof",
            "c8cc1e6449e498a4ac0123da194dac323ba8e980"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "assert(HC:=not_col_exists A B HH).",
            "VernacExtend",
            "6282edffbf53d34622a3eace97db01106a28bc85"
        ],
        [
            "ex_and HC C.",
            "VernacExtend",
            "98e2619b3f62e3e83888af4c780fe91ab198a052"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition same_side := fun A B l => exists P, cut l A P /\\ cut l B P.",
            "VernacDefinition",
            "092023b46344e5602e768bb6d80211658888f3c9"
        ],
        [
            "Lemma same_side_one_side : forall A B l, same_side A B l -> OS (P1 l) (P2 l) A B.",
            "VernacStartTheoremProof",
            "a44c4b4ca43a91e06810ddfe37a6f09f74905f6a"
        ],
        [
            "unfold same_side.",
            "VernacExtend",
            "02dbafdefe4e6bf5649159b0fcdc69beb340953a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [P []].",
            "VernacExtend",
            "2064f737fc27cd988a28221e5725175cfef793c8"
        ],
        [
            "apply cut_two_sides in H.",
            "VernacExtend",
            "120eabefa535bee11f4fb290f6fbbf3f8912e737"
        ],
        [
            "apply cut_two_sides in H0.",
            "VernacExtend",
            "403e1653de76c57819c9704b05dc66af981e9438"
        ],
        [
            "eapply l9_8_1.",
            "VernacExtend",
            "953c2bdb009f55a5d83b63a40340993dbf0d385a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma one_side_same_side : forall A B l, OS (P1 l) (P2 l) A B -> same_side A B l.",
            "VernacStartTheoremProof",
            "8e47978e3b7014db5f60583795b1294779906ad1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold same_side.",
            "VernacExtend",
            "02dbafdefe4e6bf5649159b0fcdc69beb340953a"
        ],
        [
            "unfold OS in H.",
            "VernacExtend",
            "0ceff66c081ad02350f4a7c193cf5e7c07251364"
        ],
        [
            "destruct H as [P []].",
            "VernacExtend",
            "2064f737fc27cd988a28221e5725175cfef793c8"
        ],
        [
            "exists P.",
            "VernacExtend",
            "22b7dea980d440fc518fb5c50eb57b72554716c3"
        ],
        [
            "unfold cut.",
            "VernacExtend",
            "42f7308d20f8ee39060d449cfbf42430905ca1e5"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "unfold TS in H.",
            "VernacExtend",
            "cc0b5b58da828396f886d519b2f0c310639269ac"
        ],
        [
            "unfold TS in H0.",
            "VernacExtend",
            "16ab0ab16b317c3711db29b59d8a9efd3730be93"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "ex_and H4 T.",
            "VernacExtend",
            "f66f389f9f7e56c7f4d6ea9bd8e3260f96a03451"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply between_identity in H5.",
            "VernacExtend",
            "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "ex_and H2 T.",
            "VernacExtend",
            "1851eeb922f2b9c6bab14d25a6a6e51037064cc7"
        ],
        [
            "exists T.",
            "VernacExtend",
            "d22adc5ec33dd7280b1861e75f80b484a2d39296"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "apply between_identity in H5.",
            "VernacExtend",
            "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
        ],
        [
            "subst T.",
            "VernacExtend",
            "214076e37f63268da09a1b5fb2d65cdafcfcae58"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition same_side' := fun A B X Y => X <> Y /\\ forall l, IncidentL X l -> IncidentL Y l -> same_side A B l.",
            "VernacDefinition",
            "612ddee04fc7a89f6353d2aa5362caa83b688ef8"
        ],
        [
            "Lemma OS_distinct : forall P Q A B, OS P Q A B -> P<>Q.",
            "VernacStartTheoremProof",
            "773a69e499f2fd7fa1eb310b87ad4166bfd270a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply one_side_not_col123 in H.",
            "VernacExtend",
            "2193acaeb7c23cd9859e9468fafafbd74c7b2bd8"
        ],
        [
            "assert_diffs;assumption.",
            "VernacExtend",
            "8e4c3e45acc6467868420176ed67d660a3049fd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma OS_same_side' : forall P Q A B, OS P Q A B -> same_side' A B P Q.",
            "VernacStartTheoremProof",
            "a7fd418b96361cf472f3b32e8f62a5f1a4ef5bc2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold same_side'.",
            "VernacExtend",
            "48afc6fc9ed25e7b0e8aef3442e3bb621ab71167"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply OS_distinct with A B;assumption.",
            "VernacExtend",
            "05f8284992616d186a62518326673969cdcc2b22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply one_side_same_side.",
            "VernacExtend",
            "c2560b393ed55ed56480995ee9e115879d10f068"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "unfold IncidentL in *.",
            "VernacExtend",
            "6a246878e9d1a11d58b1ad65524737f14ceac982"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply col2_os__os with P Q; try assumption; ColR.",
            "VernacExtend",
            "5b2425fcd954b0408c351c16a8906557232091e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_side_OS : forall P Q A B, same_side' P Q A B -> OS A B P Q.",
            "VernacStartTheoremProof",
            "a6a40bcc8c217b27186b7830042f5ef2d0a3a070"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold same_side' in *.",
            "VernacExtend",
            "3293d5e3018b89f282ea734896c9ea5a7ccea1ad"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct (axiom_line_existence A B H).",
            "VernacExtend",
            "d391a3834a4163715ab5f6d30fb6a5817a9235e1"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "assert (T:=H0 x H1 H2).",
            "VernacExtend",
            "deabce1636e31ca23f2588fa4d549afb6fce09a0"
        ],
        [
            "assert (U:=same_side_one_side P Q x T).",
            "VernacExtend",
            "645b9ed420d9e2cb47249e0daf377ebf9c167c61"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "unfold IncidentL in *.",
            "VernacExtend",
            "6a246878e9d1a11d58b1ad65524737f14ceac982"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply col2_os__os with P1 P2;Col.",
            "VernacExtend",
            "b96f01edbb0a6a44f5f27ded471d0780b533dc9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma outH_out : forall P A B, outH P A B -> Out P A B.",
            "VernacStartTheoremProof",
            "8b80f31c2da8b9246061bb8c6109e2a28211c092"
        ],
        [
            "unfold outH.",
            "VernacExtend",
            "d4f9ab602d72510c692e84529ea82e3dd4140a13"
        ],
        [
            "unfold Out.",
            "VernacExtend",
            "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "unfold Between_H in H.",
            "VernacExtend",
            "9b10edee0f297956f818bca878a75065cecb8ed2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "unfold Between_H in H.",
            "VernacExtend",
            "9b10edee0f297956f818bca878a75065cecb8ed2"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "spliter.",
            "VernacExtend",
            "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply between_trivial.",
            "VernacExtend",
            "ea95a8d748c00c63f7860554b33452def8b8353d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incident_col : forall M l, IncidentL M l -> Col M (P1 l)(P2 l).",
            "VernacStartTheoremProof",
            "4a04b87aac5912fa3016000eeb0a4df8e67f139f"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_incident : forall M l, Col M (P1 l)(P2 l) -> IncidentL M l.",
            "VernacStartTheoremProof",
            "3fd48b5e335834a52dbdc6b0976b501244751731"
        ],
        [
            "unfold IncidentL.",
            "VernacExtend",
            "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Bet_Between_H : forall A B C, Bet A B C -> A<>B -> B<>C -> Between_H A B C.",
            "VernacStartTheoremProof",
            "57e56e45b0cdb58589ec1b4d826ed34ade69e5ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Between_H.",
            "VernacExtend",
            "6dcc4892926135bf33955ad304f21c3e9179a2c8"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "treat_equalities.",
            "VernacExtend",
            "0d9f12669aa7857d816d5247f75bab1bd3b63660"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_cong_5' : forall A B C A' B' C', ~ Col_H A B C -> ~ Col_H A' B' C' -> Cong A B A' B' -> Cong A C A' C' -> CongA B A C B' A' C' -> CongA A B C A' B' C'.",
            "VernacStartTheoremProof",
            "ba76ba256c20208b0b9dca01732a5697de9f12e5"
        ],
        [
            "intros A B C A' B' C'.",
            "VernacExtend",
            "4605c161b5dc2d703d7786b6178c58ce03003064"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T:=l11_49 B A C B' A' C').",
            "VernacExtend",
            "e3e279f48313d8ab301daa39aa4d9f192866998e"
        ],
        [
            "assert (~ Col A B C).",
            "VernacExtend",
            "a75f346a3102b55e5f88c48f3e148b73c2675143"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply cols_coincide_2 in H4.",
            "VernacExtend",
            "d8cf987f94113eebe38fa5b56992aed3cc1b7ec5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_hcong_4_existence : forall A B C O X P, ~ Col_H P O X -> ~ Col_H A B C -> exists Y, CongA A B C X O Y /\\ same_side' P Y O X.",
            "VernacStartTheoremProof",
            "180c8f64ef0344f044ea2f8ad271539e00ec051a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- cols_coincide in H.",
            "VernacExtend",
            "5f992a77bc196bb66d73cc3768743c6045f2555d"
        ],
        [
            "rewrite <- cols_coincide in H0.",
            "VernacExtend",
            "fc2ab44b1712486bd387c6eb47984b2023c030a0"
        ],
        [
            "assert(~Col X O P).",
            "VernacExtend",
            "11770a8c7796012ff4d086fda0e23c6792151bea"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Col.",
            "VernacExtend",
            "92aede71f403ba291e696d87cdf45f5aca69909a"
        ],
        [
            "assert(HH:=angle_construction_1 A B C X O P H0 H1).",
            "VernacExtend",
            "8d06aa68509f9620abc34967d78b2f4f2dea8cf5"
        ],
        [
            "ex_and HH Y.",
            "VernacExtend",
            "a896b98a1d70badb342b5ae9574f797f75d34d55"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply OS_same_side'.",
            "VernacExtend",
            "4ce0084dfe779ebfc476bb9792694194ee7a05a5"
        ],
        [
            "apply invert_one_side.",
            "VernacExtend",
            "d450e051b92db8a0f5549fe54188220d171b7134"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_side_trans : forall A B C l, same_side A B l -> same_side B C l -> same_side A C l.",
            "VernacStartTheoremProof",
            "7baf35c51575e52d6b86f6aa5f0bf831d73c3093"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply one_side_same_side.",
            "VernacExtend",
            "c2560b393ed55ed56480995ee9e115879d10f068"
        ],
        [
            "apply same_side_one_side in H.",
            "VernacExtend",
            "b797d19dfe8bcb4d03cb9eca55e1d7b658b21f5b"
        ],
        [
            "apply same_side_one_side in H0.",
            "VernacExtend",
            "b374ce758d7e9b9c76398deffe02308e4c916b73"
        ],
        [
            "eapply one_side_transitivity.",
            "VernacExtend",
            "aa182eff10c44045ead15c038a8c29bb6756e7d1"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma same_side_sym : forall A B l, same_side A B l -> same_side B A l.",
            "VernacStartTheoremProof",
            "a0ee8d4f71e7eaeafbc45da67d710a55b4056258"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply one_side_same_side.",
            "VernacExtend",
            "c2560b393ed55ed56480995ee9e115879d10f068"
        ],
        [
            "apply same_side_one_side in H.",
            "VernacExtend",
            "b797d19dfe8bcb4d03cb9eca55e1d7b658b21f5b"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_hcong_4_uniqueness : forall A B C O P X Y Y', ~ Col_H P O X -> ~ Col_H A B C -> CongA A B C X O Y -> CongA A B C X O Y' -> same_side' P Y O X -> same_side' P Y' O X -> outH O Y Y'.",
            "VernacStartTheoremProof",
            "45e807b89d7d045b3a7e2fbf243b1c23674a2329"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- cols_coincide in H.",
            "VernacExtend",
            "5f992a77bc196bb66d73cc3768743c6045f2555d"
        ],
        [
            "rewrite <- cols_coincide in H0.",
            "VernacExtend",
            "fc2ab44b1712486bd387c6eb47984b2023c030a0"
        ],
        [
            "assert (T:CongA X O Y X O Y').",
            "VernacExtend",
            "084611d11eaca037b90b822722577a6f38a18577"
        ],
        [
            "eapply conga_trans.",
            "VernacExtend",
            "badd25e05b3be9cf4e77e7eac914aaacd68fd64c"
        ],
        [
            "apply conga_sym.",
            "VernacExtend",
            "c6cf28f8cc11d0c269ba43c54f5891ea2dc6c4f1"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply conga_cop__or_out_ts in T.",
            "VernacExtend",
            "70d1a65dbb132bf5eaa6f3dae8529b39b2150743"
        ],
        [
            "induction T.",
            "VernacExtend",
            "467ca0bb9e64d23ac2140a512be27dc923d3e3ee"
        ],
        [
            "apply out_outH.",
            "VernacExtend",
            "974cdf47172843e8ec00ffd06929dedafc78bbb3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply same_side_OS in H3.",
            "VernacExtend",
            "c86a3cdeb31d6e22c4dd5e16a28c1c69266fef6e"
        ],
        [
            "apply same_side_OS in H4.",
            "VernacExtend",
            "154da22aebabc1dcfc224fce7b3efc8d9fa6810a"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert (OS O X Y Y').",
            "VernacExtend",
            "89a5a7fd477fdd0a934e3dec16c855da757954c6"
        ],
        [
            "apply one_side_transitivity with P.",
            "VernacExtend",
            "a0abab26297ecba8517494d9ed8cdfae033c9102"
        ],
        [
            "apply one_side_symmetry.",
            "VernacExtend",
            "e5557f90c70cace73e26d7184e8ac12051fe7563"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply invert_one_side in H6.",
            "VernacExtend",
            "3128553ee0dfd82ceba9a37c13bc55622667ac8f"
        ],
        [
            "apply l9_9 in H5.",
            "VernacExtend",
            "922d7d9792685ba5b48b4fb777c6b54eee7067b0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply same_side_OS in H3.",
            "VernacExtend",
            "c86a3cdeb31d6e22c4dd5e16a28c1c69266fef6e"
        ],
        [
            "apply same_side_OS in H4.",
            "VernacExtend",
            "154da22aebabc1dcfc224fce7b3efc8d9fa6810a"
        ],
        [
            "apply coplanar_trans_1 with P; Col; Cop.",
            "VernacExtend",
            "9013a23c1a2ce7b1fd2fa1e543f946ba552535e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_conga_comm : forall A B C, ~ Col_H A B C -> CongA A B C C B A.",
            "VernacStartTheoremProof",
            "413811a6484e1c9705ed4e6b03f179071f5f33c0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- cols_coincide in H.",
            "VernacExtend",
            "5f992a77bc196bb66d73cc3768743c6045f2555d"
        ],
        [
            "assert_diffs.",
            "VernacExtend",
            "2110ece9112784ebae36f9d0c23d563d83ff573a"
        ],
        [
            "apply conga_pseudo_refl;auto.",
            "VernacExtend",
            "df9b6043ebd1492b46b4fc504cdbe598621cd514"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_congaH_outH_congaH : forall A B C D E F A' C' D' F' : Tpoint, CongA A B C D E F -> Between_H B A A' \\/ Between_H B A' A \\/ B <> A /\\ A = A' -> Between_H B C C' \\/ Between_H B C' C \\/ B <> C /\\ C = C' -> Between_H E D D' \\/ Between_H E D' D \\/ E <> D /\\ D = D' -> Between_H E F F' \\/ Between_H E F' F \\/ E <> F /\\ F = F' -> CongA A' B C' D' E F'.",
            "VernacStartTheoremProof",
            "e1fef021fc81b87dd6f7a579a133226d6e883e9c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply out_conga with A C D F;auto using outH_out.",
            "VernacExtend",
            "f6d38cfefa9e5bdbf4f7d11d737a0fdbf598c598"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_conga_permlr: forall A B C D E F : Tpoint, CongA A B C D E F -> CongA C B A F E D.",
            "VernacStartTheoremProof",
            "c3f5241b088c580519af58cfd56269fadfbe8452"
        ],
        [
            "apply Ch11_angles.conga_comm.",
            "VernacExtend",
            "a182bed9757eabdc30d596ec23c91b6fadfbe765"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_conga_refl : forall A B C, ~ Col_H A B C -> CongA A B C A B C.",
            "VernacStartTheoremProof",
            "7d0a8655cbecb82501fba31c92d7d68f0dbd40b4"
        ],
        [
            "intros A B C H.",
            "VernacExtend",
            "a4d5576d03ad61ed90c10c37343faf46dbc0c914"
        ],
        [
            "apply Ch11_angles.conga_refl; intro; subst; apply H; apply cols_coincide; Col.",
            "VernacExtend",
            "2d6e16c84d7e8e79f709a6fba1b8542bd4296bad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End T.",
            "VernacEndSegment",
            "5f7f4e5b1207202de2b9b8fab051afb32f267d25"
        ],
        [
            "Section Tarski_neutral_to_Hilbert_neutral.",
            "VernacBeginSection",
            "965d74a1c44c9562de6a6baf643b020d195fc669"
        ],
        [
            "Context `{TnEQD:Tarski_neutral_dimensionless_with_decidable_point_equality}.",
            "VernacContext",
            "c652196849f972e656c6c0437bc0c834b4161ae1"
        ],
        [
            "Instance Hilbert_neutral_follows_from_Tarski_neutral : Hilbert_neutral_dimensionless.",
            "VernacInstance",
            "3a9a3f0a5a2e4e32ce87a952c79f7a507142524f"
        ],
        [
            "exact (Build_Hilbert_neutral_dimensionless Tpoint Line Plane EqL EqL_Equiv EqP EqP_Equiv IncidentL IncidentP axiom_Incid_morphism axiom_Incid_dec axiom_Incidp_morphism axiom_Incidp_dec eq_dec_points axiom_line_existence axiom_line_uniqueness axiom_two_points_on_line PA PB PC lower_dim' axiom_plane_existence axiom_one_point_on_plane axiom_plane_uniqueness axiom_line_on_plane Between_H axiom_between_diff axiom_between_col axiom_between_comm axiom_between_out axiom_between_only_one axiom_pasch Cong cong_right_commutativity axiom_hcong_1_existence cong_inner_transitivity axiom_hcong_3 CongA axiom_conga_refl axiom_conga_comm axiom_conga_permlr axiom_congaH_outH_congaH axiom_hcong_4_existence axiom_hcong_4_uniqueness axiom_cong_5').",
            "VernacExtend",
            "aee1e0ee3eccd96cb86af1b12448972d88425127"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Tarski_neutral_to_Hilbert_neutral.",
            "VernacEndSegment",
            "aaba9728e954e9d85e79e527ae3823a4f53536d2"
        ],
        [
            "Section Tarski_neutral_2D_to_Hilbert_neutral_2D.",
            "VernacBeginSection",
            "9a4e3f191911536a2e864a7e4e84a10efac1f422"
        ],
        [
            "Context `{T2D:Tarski_2D}.",
            "VernacContext",
            "14f267f1df37e6960d41f261868f4676668c9138"
        ],
        [
            "Instance Hilbert_2D_follows_from_Tarski_2D : Hilbert_neutral_2D Hilbert_neutral_follows_from_Tarski_neutral.",
            "VernacInstance",
            "449d14814378f8468468b8accb7483155360afaa"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros A B C l HNCol HNCl Hcut.",
            "VernacExtend",
            "514b3f1647ef32addc3c3b5eeff782a01968ec28"
        ],
        [
            "apply axiom_pasch with (Plan A B C HNCol); trivial; unfold IncidentLP, IncidentP; intros; try (apply all_coplanar).",
            "VernacExtend",
            "347e93c51bc2fdc5a67989f51d568350f10742b7"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Tarski_neutral_2D_to_Hilbert_neutral_2D.",
            "VernacEndSegment",
            "791256832df9400fc33be3441d7c5cb06ecfa5ab"
        ],
        [
            "Section Tarski_neutral_3D_to_Hilbert_neutral_3D.",
            "VernacBeginSection",
            "972ffaaa30aff1679355211b06cc64992a2cd478"
        ],
        [
            "Context `{T3D:Tarski_3D}.",
            "VernacContext",
            "ebf9497fd60eccd95fc3a9a88f9d72b305f1a1c9"
        ],
        [
            "Lemma lower_dim_3' : {A : Tpoint & {B : Tpoint & {C : Tpoint & {D | ~ exists p, IncidentP A p /\\ IncidentP B p /\\ IncidentP C p /\\ IncidentP D p}}}}.",
            "VernacStartTheoremProof",
            "927ce2b07975791258432c07902caf41025d5fb8"
        ],
        [
            "exists S1, S2, S3, S4.",
            "VernacExtend",
            "686ac44a7d1922e46daae6a5193ee6d9e6beeb1f"
        ],
        [
            "intros [p]; spliter.",
            "VernacExtend",
            "27fbc784b2d4d51987a49314fa69fe433de147ae"
        ],
        [
            "apply tarski_axioms.lower_dim_3, plane_cop with p; assumption.",
            "VernacExtend",
            "a81815dccb65e62384aa54caeb714902dfcc5bd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Hilbert_3D_follows_from_Tarski_3D : Hilbert_neutral_3D Hilbert_neutral_follows_from_Tarski_neutral.",
            "VernacInstance",
            "65e71becb3315758820f118bf894903ffc8089d8"
        ],
        [
            "destruct lower_dim_3' as [A [B [C [D n]]]].",
            "VernacExtend",
            "9479804961fab3c2542d954feee1f226b3e2dad8"
        ],
        [
            "exists A B C D; [|assumption].",
            "VernacExtend",
            "8b19bea8f9b5c8725e1b39701c91d6562ec47c57"
        ],
        [
            "clear A B C D n.",
            "VernacExtend",
            "4d4c943c6bcdbae16720057a51aeb5105d42e74c"
        ],
        [
            "intros A p q HAp HAq.",
            "VernacExtend",
            "699acdaf860e38bd6de8ee1b7e8170056956cbd1"
        ],
        [
            "destruct p as [P1 P2 P3 HP].",
            "VernacExtend",
            "a29bd1de53114ea2c9f1ed5767308b0e08feb573"
        ],
        [
            "destruct q as [Q1 Q2 Q3 HQ].",
            "VernacExtend",
            "ddf258b97ae9094047cef9f59cf37c2e1b566688"
        ],
        [
            "unfold IncidP in *; simpl in *; unfold IncidentP in *; simpl in *.",
            "VernacExtend",
            "e3dacd5be75090eff0cd74d47790aa4473f557f1"
        ],
        [
            "assert (pi : plane_intersection_axiom).",
            "VernacExtend",
            "40df484e6240f0c2f291cd48d1784100ecbb8045"
        ],
        [
            "cut upper_dim_3_axiom.",
            "VernacExtend",
            "552f8535555783c5570d062915abf387d6442924"
        ],
        [
            "apply upper_dim_3_equivalent_axioms; simpl; tauto.",
            "VernacExtend",
            "ad6daad9b3fc6e82d0089652b46b79d0723db5d1"
        ],
        [
            "unfold upper_dim_3_axiom.",
            "VernacExtend",
            "61d274ae0caf47b55eb126e05679b1a19c945313"
        ],
        [
            "apply upper_dim_3.",
            "VernacExtend",
            "8302b0acff88348a6f8ecd3a7759f5f26f6b7113"
        ],
        [
            "apply pi; assumption.",
            "VernacExtend",
            "b6bf34af60f7625fde518936b592bbe1b0364edc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Tarski_neutral_3D_to_Hilbert_neutral_3D.",
            "VernacEndSegment",
            "3b301c188e88506a662690b148b5a01f1964cdbb"
        ],
        [
            "Section Tarski_Euclidean_to_Hilbert_Euclidean.",
            "VernacBeginSection",
            "7f939dcc584e9bde66161b0757cc42af2a6fa27f"
        ],
        [
            "Context `{TE:Tarski_euclidean}.",
            "VernacContext",
            "9fd335af20abfff76684a72421eb66bd4501d389"
        ],
        [
            "Definition Para := fun l m => (~ exists X, IncidentL X l /\\ IncidentL X m) /\\ exists p, IncidentLP l p /\\ IncidentLP m p.",
            "VernacDefinition",
            "f23934ac1a6fa490b5866299745b14de61b62b56"
        ],
        [
            "Lemma Para_Par : forall A B C D (HAB : A<>B) (HCD: C<>D), Para (Lin A B HAB) (Lin C D HCD) -> Par A B C D.",
            "VernacStartTheoremProof",
            "21b1141284f5d21b5bed373127edd2e80da776dd"
        ],
        [
            "unfold Para, IncidentL, Par, Par_strict; simpl.",
            "VernacExtend",
            "ee0eae2779ed2df484e0abf0178ef7e6b1b411ca"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [HNI [p []]].",
            "VernacExtend",
            "8808075a8c0efc6fe32ee6f7b41dd6f452309672"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "repeat split;auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply plane_cop with p; [apply H|apply H|apply H0..]; unfold IncidentL; simpl; Col.",
            "VernacExtend",
            "72095ec4784a79c16513338d2fa106702b33350d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma axiom_euclid_uniqueness : forall l P m1 m2, ~ IncidentL P l -> Para l m1 -> IncidentL P m1 -> Para l m2 -> IncidentL P m2 -> EqL m1 m2.",
            "VernacStartTheoremProof",
            "4187fc51e683cdb103c5474d1a84f8e0302fbc92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l as [A B HAB].",
            "VernacExtend",
            "f005bea171180777e8750e7c9de5214d108e0b0b"
        ],
        [
            "destruct m1 as [C D HCD].",
            "VernacExtend",
            "0641d69861149d12bd291d199ccdcefff031968b"
        ],
        [
            "destruct m2 as [C' D' HCD'].",
            "VernacExtend",
            "2a28b717ef62b0d36a72b400d6c6887b9fc4084a"
        ],
        [
            "unfold IncidentL in *;simpl in *.",
            "VernacExtend",
            "49f906771541ede978846577e3e32155b2924180"
        ],
        [
            "apply Para_Par in H0.",
            "VernacExtend",
            "4e3d0c8eafd3723b7e5fcd8ed3b632090baf4718"
        ],
        [
            "apply Para_Par in H2.",
            "VernacExtend",
            "19de66efe5940497ed4b7d4359bd94b446889a88"
        ],
        [
            "elim (tarski_s_euclid_implies_playfair euclid A B C D C' D' P H0 H1 H2 H3);intros.",
            "VernacExtend",
            "9e9bc414c2652e7dfc31f43516d39b1763092c57"
        ],
        [
            "apply axiom_line_uniqueness with C' D'; unfold IncidentL;simpl;Col.",
            "VernacExtend",
            "380490c3809b4104eff930fe0f6794c1774f90d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Hilbert_euclidean_follows_from_Tarski_euclidean : Hilbert_euclidean Hilbert_neutral_follows_from_Tarski_neutral.",
            "VernacInstance",
            "e1c621b9bc850e6376fe48aa62e606a6207c711b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply axiom_euclid_uniqueness.",
            "VernacExtend",
            "48a2e82aa1832cfefb2b760619897bc84151844c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance Hilbert_euclidean_ID_follows_from_Tarski_euclidean : Hilbert_euclidean_ID Hilbert_euclidean_follows_from_Tarski_euclidean.",
            "VernacInstance",
            "a404353067dd47a50d0b8564a042c446586d2b69"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros l m.",
            "VernacExtend",
            "a5f5879b86eb50547ad9fca791f1ccd708bb481f"
        ],
        [
            "assert (ID : decidability_of_intersection).",
            "VernacExtend",
            "7cbfa8df50697e32e1f9a31d273f6a3653be1fd0"
        ],
        [
            "apply strong_parallel_postulate_implies_inter_dec.",
            "VernacExtend",
            "df58e4bea5d10519a7dcaca3df2e2e4312f6decf"
        ],
        [
            "cut tarski_s_parallel_postulate.",
            "VernacExtend",
            "0bcde80a2ad1d0b228515f648c2b53312ce44e2b"
        ],
        [
            "apply equivalent_postulates_without_decidability_of_intersection_of_lines_bis; simpl; tauto.",
            "VernacExtend",
            "2225c1d875d9a4b13e56734641df07cee27777fc"
        ],
        [
            "unfold tarski_s_parallel_postulate.",
            "VernacExtend",
            "8a2a6e351107e83ae56436a24ff6e3de68149110"
        ],
        [
            "apply euclid.",
            "VernacExtend",
            "2ebd37e4191a55c961071048c0639baef91a78e4"
        ],
        [
            "destruct l as [L1 L2 HL].",
            "VernacExtend",
            "c21049a36393b214da143a1bffdcf388bf205d88"
        ],
        [
            "destruct m as [M1 M2 HM].",
            "VernacExtend",
            "1e0c6027dc679ef725e009c81282388ccc6cfa06"
        ],
        [
            "simpl; unfold IncidentL; simpl.",
            "VernacExtend",
            "779b93b80195de46fb16770fed077bf7b67a736a"
        ],
        [
            "apply ID.",
            "VernacExtend",
            "1941cfe9f03940956bd88d357e93829acc8e8f5c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Tarski_Euclidean_to_Hilbert_Euclidean.",
            "VernacEndSegment",
            "fbc5359da1f11c6de383747c675c8c62fbe043a8"
        ]
    ],
    "proofs": [
        {
            "name": "axiom_line_existence",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (Lin A B H).",
                        "VernacExtend",
                        "2cfd19ccad7e15bf18b96d80089d5e0f1e4ac127"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incident_eq",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold EqL.",
                        "VernacExtend",
                        "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *.",
                        "VernacExtend",
                        "6a246878e9d1a11d58b1ad65524737f14ceac982"
                    ]
                },
                {
                    "command": [
                        "replace (P1 (Lin A B H)) with A; trivial.",
                        "VernacExtend",
                        "73393dffe98a914c68ea40def2c27df6439c1aac"
                    ]
                },
                {
                    "command": [
                        "replace (P2 (Lin A B H)) with B; trivial.",
                        "VernacExtend",
                        "5b466d30ef35cd1a2056f374877934985d044ba4"
                    ]
                },
                {
                    "command": [
                        "split;intro.",
                        "VernacExtend",
                        "966a6edea9c2088caf0e546be884ea531f6207b3"
                    ]
                },
                {
                    "command": [
                        "assert (T:=Cond l).",
                        "VernacExtend",
                        "87b336dc78956e1c8d9215c0d733cd5df766d9e8"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points X B); intro.",
                        "VernacExtend",
                        "5c5ce255242d9d32bd643450421b991a08b3efb8"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (Col (P1 l) A B).",
                        "VernacExtend",
                        "38e3326259323575a48f51f681778c11bb0216aa"
                    ]
                },
                {
                    "command": [
                        "apply col_transitivity_1 with (P2 l); Col.",
                        "VernacExtend",
                        "43ca33d55f1c5ea5e9f007d16eb227eafd36c477"
                    ]
                },
                {
                    "command": [
                        "assert (Col (P2 l) A B).",
                        "VernacExtend",
                        "52e2e4b2350fef3174b9dd96d8044abd6a5a50d5"
                    ]
                },
                {
                    "command": [
                        "apply (col_transitivity_2 (P1 l)); Col.",
                        "VernacExtend",
                        "a7958bf5c8db59fc1c7151106772be41185cdd12"
                    ]
                },
                {
                    "command": [
                        "apply (col3 A B); Col.",
                        "VernacExtend",
                        "6676c6aaaf46eb3acc283ade1d4efc8ad60100db"
                    ]
                },
                {
                    "command": [
                        "assert (U:=Cond l).",
                        "VernacExtend",
                        "5fce2fe3b7445396e9868f3a1050ad1006c4af58"
                    ]
                },
                {
                    "command": [
                        "apply (col3 (P1 l) (P2 l)); Col.",
                        "VernacExtend",
                        "a4089ddad2f09bf760ef508fad20156a879dfd1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_transitivity",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "unfold EqL,IncidentL.",
                        "VernacExtend",
                        "bfc39c0e996756bf61f262a02a943d8e27090020"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T:=H X).",
                        "VernacExtend",
                        "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
                    ]
                },
                {
                    "command": [
                        "assert (V:= H0 X).",
                        "VernacExtend",
                        "e5ff038b57dc5adbc61ed2a220bbefbf94544b34"
                    ]
                },
                {
                    "command": [
                        "split;intro;intuition.",
                        "VernacExtend",
                        "9ec21173ed946df67d0e63a1d43757dd11f1f947"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_reflexivity",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold EqL.",
                        "VernacExtend",
                        "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_symmetry",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold EqL.",
                        "VernacExtend",
                        "4c1deb8e48dcd2891eeab5b8d93c26360fe59888"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T:=H X).",
                        "VernacExtend",
                        "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqL_Equiv",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Reflexive.",
                        "VernacExtend",
                        "68bc9355fdb3e158c6fb398c30a327ea5454574d"
                    ]
                },
                {
                    "command": [
                        "apply eq_reflexivity.",
                        "VernacExtend",
                        "453c725345d82dbdf999742729e7bd7968a7e614"
                    ]
                },
                {
                    "command": [
                        "unfold Symmetric.",
                        "VernacExtend",
                        "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
                    ]
                },
                {
                    "command": [
                        "apply eq_symmetry.",
                        "VernacExtend",
                        "2005405c95e1940dcd3987a8a3d8512725b7bc06"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive.",
                        "VernacExtend",
                        "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
                    ]
                },
                {
                    "command": [
                        "apply eq_transitivity.",
                        "VernacExtend",
                        "ef81c047f68fa811663b2f1e358cc746553fcc09"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_incident",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split;intros; unfold EqL in *; assert (T:= H A); intuition.",
                        "VernacExtend",
                        "6f5761be1363494ff9b477fab5645aebaefa2b3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incident_Proper",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros a b H .",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "apply eq_incident.",
                        "VernacExtend",
                        "42532dd117b10ae1b0bacfc06b0c775f202937e6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "axiom_Incid_morphism",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_incident P l m H0).",
                        "VernacExtend",
                        "acf9c0093213f75cfa0cf152fca6e640dc33765f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_Incid_dec",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "apply col_dec.",
                        "VernacExtend",
                        "e95aad49ffda8a855408a3a07da30bf680b9f7cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_line_uniqueness",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ((Lin A B H) =l= l).",
                        "VernacExtend",
                        "bef1171f188aec6c93e2509c017ce5cf0f322479"
                    ]
                },
                {
                    "command": [
                        "eapply incident_eq;assumption.",
                        "VernacExtend",
                        "b3ead4914d61086031dcbba47d092f35d40ef729"
                    ]
                },
                {
                    "command": [
                        "assert ((Lin A B H) =l= m).",
                        "VernacExtend",
                        "e5783dc569ae55181adb39440e0703ec7b64ba30"
                    ]
                },
                {
                    "command": [
                        "eapply incident_eq;assumption.",
                        "VernacExtend",
                        "b3ead4914d61086031dcbba47d092f35d40ef729"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_two_points_on_line",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (P1 l).",
                        "VernacExtend",
                        "166790f8e4bbee3cd9a239b761b6894bda65582c"
                    ]
                },
                {
                    "command": [
                        "exists (P2 l).",
                        "VernacExtend",
                        "32aeff9d89305434211aa450c2f0d58c83476699"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "repeat split;Col.",
                        "VernacExtend",
                        "2703caada18c26b8f969759b996267e52aba113d"
                    ]
                },
                {
                    "command": [
                        "exact (Cond l).",
                        "VernacExtend",
                        "cc5c13e3d787da65885f8e074bffec00cfc0dad1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cols_coincide_1",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col_H in H.",
                        "VernacExtend",
                        "4607936db3552e830e8b1e8b6b9dceceb3f24951"
                    ]
                },
                {
                    "command": [
                        "DecompExAnd H l.",
                        "VernacExtend",
                        "2a5e0d5d06354d750f709496959188e746bcafa1"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *.",
                        "VernacExtend",
                        "6a246878e9d1a11d58b1ad65524737f14ceac982"
                    ]
                },
                {
                    "command": [
                        "assert (T:=Cond l).",
                        "VernacExtend",
                        "87b336dc78956e1c8d9215c0d733cd5df766d9e8"
                    ]
                },
                {
                    "command": [
                        "apply (col3 (P1 l) (P2 l)); Col.",
                        "VernacExtend",
                        "a4089ddad2f09bf760ef508fad20156a879dfd1d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cols_coincide_2",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col_H.",
                        "VernacExtend",
                        "70280e9bcca15b0ae1ca814b0c679fb684ec48f5"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A B); intro.",
                        "VernacExtend",
                        "ffd7b0af2a49605e7c7252492bcfb24779f940dd"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "elim (eq_dec_points A C); intro.",
                        "VernacExtend",
                        "c39e55933d1ac392cfb052e631383b40f686333c"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "assert (exists B, A<>B).",
                        "VernacExtend",
                        "8c65af23c0e3ed8f722373701b1d7f4f0db53206"
                    ]
                },
                {
                    "command": [
                        "eapply another_point.",
                        "VernacExtend",
                        "0f9b58b6ef7dbcfd4342a22fc94f94dd90e7f3ae"
                    ]
                },
                {
                    "command": [
                        "DecompEx H0 B.",
                        "VernacExtend",
                        "d4fb7cd63d74542833f3c728248073492ca4d125"
                    ]
                },
                {
                    "command": [
                        "exists (Lin A B H1).",
                        "VernacExtend",
                        "cc6bf7e3a28761c5b6ec1f84821e0b6e48d862ff"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL;intuition.",
                        "VernacExtend",
                        "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
                    ]
                },
                {
                    "command": [
                        "exists (Lin A C H0).",
                        "VernacExtend",
                        "f8beb14051d2a41b037843e880d9f0f00b28359b"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL;intuition.",
                        "VernacExtend",
                        "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
                    ]
                },
                {
                    "command": [
                        "exists (Lin A B H0).",
                        "VernacExtend",
                        "7a1ca779d4771ddc3f92fd140ea5d35026c870b4"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL;intuition.",
                        "VernacExtend",
                        "79b0184a2a9dc9705ba97a2fa6bb5be8733f48b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cols_coincide",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_2.",
                        "VernacExtend",
                        "bac47a12e59f4b5c812f1fc2f3bb799073f963ab"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_1.",
                        "VernacExtend",
                        "db750b4d2a347bba6b29a6475904bac17fab515d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ncols_coincide",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros HNCol HCol; apply HNCol, cols_coincide, HCol.",
                        "VernacExtend",
                        "64391efd5b2fe8e6e87744a28ca6fa8a775878a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_dim'",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "assert (HNCol : ~ Col PA PB PC) by (apply lower_dim).",
                        "VernacExtend",
                        "9640117ed4b7d361f6753a29dc2655936f553fa0"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_plane_existence",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros A B C HNCol.",
                        "VernacExtend",
                        "39c04722186392cbc564ffc054b53bf52b983f8f"
                    ]
                },
                {
                    "command": [
                        "exists (Plan A B C HNCol).",
                        "VernacExtend",
                        "8e2faf3d01d9225ba1eff2813877ae18e8df23de"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; simpl; repeat split; Cop.",
                        "VernacExtend",
                        "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incidentp_eqp",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros A B C p HNCol HA HB HC X.",
                        "VernacExtend",
                        "09580adfbbb9f2de0dd6c58c82868ea7c24796c7"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP in *; simpl.",
                        "VernacExtend",
                        "cbfbb1315695026302c07a79f4b0af8f7db6bc95"
                    ]
                },
                {
                    "command": [
                        "assert (Hp := NCol p).",
                        "VernacExtend",
                        "b749875b87d764e6a8844cec3bde31235bb2f782"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in Hp.",
                        "VernacExtend",
                        "75e7755b5a57ca7b32da89c9e73a3960b60d1dd5"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "split; intro; [apply coplanar_pseudo_trans with A B C; trivial|]; apply coplanar_pseudo_trans with (M1 p) (M2 p) (M3 p); Cop.",
                        "VernacExtend",
                        "3174a46fbe4472d20752ff0c10568dbff3bdbfd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_transitivity",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros p q r H1 H2 X.",
                        "VernacExtend",
                        "4eb5333fa5d08d6a563e960b2a0005138b234987"
                    ]
                },
                {
                    "command": [
                        "rewrite (H1 X); apply H2.",
                        "VernacExtend",
                        "868b71bedd524384901fc3eec8911b552d6d3c5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_reflexivity",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold EqP.",
                        "VernacExtend",
                        "2dada19d8789b84066b4ca98b6cca782a8669e0b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqp_symmetry",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "unfold EqP.",
                        "VernacExtend",
                        "2dada19d8789b84066b4ca98b6cca782a8669e0b"
                    ]
                },
                {
                    "command": [
                        "intros p q H X.",
                        "VernacExtend",
                        "8c2fd6dcf2f64f8b2c25b0d310f25776109e3f83"
                    ]
                },
                {
                    "command": [
                        "assert (T := H X).",
                        "VernacExtend",
                        "1a24ac940e8e00bd1f0bc74c1e2ba8ab18cea194"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqP_Equiv",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Reflexive.",
                        "VernacExtend",
                        "68bc9355fdb3e158c6fb398c30a327ea5454574d"
                    ]
                },
                {
                    "command": [
                        "apply eqp_reflexivity.",
                        "VernacExtend",
                        "e541f14402d37858d9e77101f6e94eacf34b2e0f"
                    ]
                },
                {
                    "command": [
                        "unfold Symmetric.",
                        "VernacExtend",
                        "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
                    ]
                },
                {
                    "command": [
                        "apply eqp_symmetry.",
                        "VernacExtend",
                        "c6756cae35659694bbb770e9084eb38566a25da3"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive.",
                        "VernacExtend",
                        "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
                    ]
                },
                {
                    "command": [
                        "apply eqp_transitivity.",
                        "VernacExtend",
                        "b9e7f8f730a7276394b82659adca1a7006b1bee3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqp_incidentp",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros A p q H.",
                        "VernacExtend",
                        "836f2615b2c5e7009c3feed3e8ad7866a2e67271"
                    ]
                },
                {
                    "command": [
                        "exact (H A).",
                        "VernacExtend",
                        "ee549e1970e47ec172a7ea29b1c8eee564b20c21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incidentp_Proper",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "apply eqp_incidentp.",
                        "VernacExtend",
                        "159d49a54dd03f37e98758526bd49f9eccb7092f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "axiom_Incidp_morphism",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros M p q Hp H.",
                        "VernacExtend",
                        "4e51c9b667ee9405445a616934518faf3cd2c25b"
                    ]
                },
                {
                    "command": [
                        "destruct (eqp_incidentp M p q H).",
                        "VernacExtend",
                        "72814fde699ccdb156834b0fb6d263e06836386d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_Incidp_dec",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply cop_dec.",
                        "VernacExtend",
                        "2e11859a436b2296466e1a78780459a8e7ef182d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_plane_uniqueness",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros A B C p q H; intros.",
                        "VernacExtend",
                        "59caee5504602acd9f8f22a15cb0ffd161e24568"
                    ]
                },
                {
                    "command": [
                        "assert (Heq : (Plan A B C H) =p= p).",
                        "VernacExtend",
                        "c80e8a352376453148d18e982bf2524a445f2360"
                    ]
                },
                {
                    "command": [
                        "apply incidentp_eqp;assumption.",
                        "VernacExtend",
                        "c8bf02b9b7c97e11ba64715e589152bf15136b63"
                    ]
                },
                {
                    "command": [
                        "assert ((Plan A B C H) =p= q).",
                        "VernacExtend",
                        "2dd198925260f1dcf707a6dd86c2dde5c2309fd4"
                    ]
                },
                {
                    "command": [
                        "apply incidentp_eqp;assumption.",
                        "VernacExtend",
                        "c8bf02b9b7c97e11ba64715e589152bf15136b63"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq.",
                        "VernacExtend",
                        "df31059972bb579c31a423b0d265991ce83be52f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_one_point_on_plane",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intro p.",
                        "VernacExtend",
                        "5aea32c2ecd07598789d82ffef7594239c3ee52b"
                    ]
                },
                {
                    "command": [
                        "exists (M1 p).",
                        "VernacExtend",
                        "a82eca40f47edc73049f7e31810999cb730b68f5"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; Cop.",
                        "VernacExtend",
                        "12cd15df2324e1213ebc4c4ef3b4e64492f9ad76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_line_on_plane",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros A B l p HAB HAl HBl HAp HBp X HXl.",
                        "VernacExtend",
                        "131fd1b3b1c1a677e37e0e2a18524b08ba6e3431"
                    ]
                },
                {
                    "command": [
                        "destruct (ex_ncol_cop (M1 p) (M2 p) (M3 p) A B HAB) as [C [HCp HNCol]].",
                        "VernacExtend",
                        "25d644213a57310a48c361ca0c62153a39bc8c6c"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "assert (Heq : (Plan A B C HNCol) =p= p).",
                        "VernacExtend",
                        "662700aecd1ce068f1d27e59b38a9d64e22c5e55"
                    ]
                },
                {
                    "command": [
                        "apply incidentp_eqp; auto.",
                        "VernacExtend",
                        "8b901b15f451d800bb20c0d325fe85721de95b60"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq.",
                        "VernacExtend",
                        "df31059972bb579c31a423b0d265991ce83be52f"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; simpl.",
                        "VernacExtend",
                        "ee17b29eb0b7d096123d49cc1e26bac74aa1d403"
                    ]
                },
                {
                    "command": [
                        "exists X; left; split.",
                        "VernacExtend",
                        "57d4ccdf7c52e7d30f506a27a7cf9dc82265bd0b"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_1; exists l; repeat split; assumption.",
                        "VernacExtend",
                        "10037f1b8cb86e2fc38b2a3ba03035a8b8dc0e21"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_col",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col_H, Between_H in *.",
                        "VernacExtend",
                        "ce9ab8bfd87377d8822334a7edc57d2ae286e8d5"
                    ]
                },
                {
                    "command": [
                        "DecompAndAll.",
                        "VernacExtend",
                        "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
                    ]
                },
                {
                    "command": [
                        "exists (Lin A B H2).",
                        "VernacExtend",
                        "b799249bd8f730649a10810814f0f48f1f691870"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_diff",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H in *.",
                        "VernacExtend",
                        "0aabb2469251777a3bfbfffe4cd2621b94ab0eed"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_comm",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "unfold Between_H in |- *.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_out",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "prolong A B C A B.",
                        "VernacExtend",
                        "bdf1319ae340866cc122d3bd4d66340e7a554c1f"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto; intro; treat_equalities; tauto.",
                        "VernacExtend",
                        "4f53ee870ff0cb7a00208ded26c555dd965b3c57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_only_one",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "unfold Between_H in |- *.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intro; spliter.",
                        "VernacExtend",
                        "8c12bb0f80b77e560a7d26b76aac4b3a29986a28"
                    ]
                },
                {
                    "command": [
                        "assert (B=C) by (apply (between_equality B C A);Between).",
                        "VernacExtend",
                        "58d8c74f35c6f80a9d062f2d0fea10235f4aa154"
                    ]
                },
                {
                    "command": [
                        "solve [intuition].",
                        "VernacExtend",
                        "a44c77fe0ad6731ace858e9158278f1620dc35f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "between_one",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Col, Between_H in *.",
                        "VernacExtend",
                        "fa08aab1b6fa32680cc9c73f99f4054a336bd6e5"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [|[|]]; [left|right..]; Between.",
                        "VernacExtend",
                        "0fce5ed81713e1420858ff190ea4b13d9a095cb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_between_one",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply between_one;try assumption.",
                        "VernacExtend",
                        "83aefab4441fa22f5bf84a05f0360b7843537abb"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_1.",
                        "VernacExtend",
                        "db750b4d2a347bba6b29a6475904bac17fab515d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cut_two_sides",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cut.",
                        "VernacExtend",
                        "42f7308d20f8ee39060d449cfbf42430905ca1e5"
                    ]
                },
                {
                    "command": [
                        "unfold TS.",
                        "VernacExtend",
                        "b797aa08231484e4dce465b473be143ea9f36b33"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; intuition.",
                        "VernacExtend",
                        "f758dffc0a50f0147dc90ea6fe052b8a867ccd56"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 T.",
                        "VernacExtend",
                        "c7ff50d14eb3aa4b6de98fc3f33f56c22bbf532a"
                    ]
                },
                {
                    "command": [
                        "exists T.",
                        "VernacExtend",
                        "d22adc5ec33dd7280b1861e75f80b484a2d39296"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in H1.",
                        "VernacExtend",
                        "19d1c183f2fc772b6ba20838d92d4adc3be00d11"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H in *.",
                        "VernacExtend",
                        "0aabb2469251777a3bfbfffe4cd2621b94ab0eed"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "ex_and H1 T.",
                        "VernacExtend",
                        "c7ff50d14eb3aa4b6de98fc3f33f56c22bbf532a"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "repeat split; try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "exists T.",
                        "VernacExtend",
                        "d22adc5ec33dd7280b1861e75f80b484a2d39296"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_plane_aux",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros A B C D HCop HAB.",
                        "VernacExtend",
                        "1a7ac927ade7fc1cdb8761a42af76afe48ae1963"
                    ]
                },
                {
                    "command": [
                        "destruct (col_dec A B C) as [|HNCol]; [destruct (col_dec A B D) as [|HNCol]|].",
                        "VernacExtend",
                        "0f55ceadbf3d60ee4c280b808bc645e8086d51e1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (not_col_exists A B HAB) as [E HNCol].",
                        "VernacExtend",
                        "32dac5f1d3611219d8998a59c68cee54469e14b1"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "exists (Plan A B E HNCol).",
                        "VernacExtend",
                        "1dc2a90fa691a72eb2ddaff87fe9b3e68650220f"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; simpl; repeat split; Cop.",
                        "VernacExtend",
                        "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "exists (Plan A B D HNCol).",
                        "VernacExtend",
                        "f46aa5510a2b629fc185b52986cc566267a088b2"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; simpl; repeat split; Cop.",
                        "VernacExtend",
                        "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "exists (Plan A B C HNCol).",
                        "VernacExtend",
                        "8e2faf3d01d9225ba1eff2813877ae18e8df23de"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentP; simpl; repeat split; Cop.",
                        "VernacExtend",
                        "62ec0d5d6a923516bef0fd9288376f435d6ab90d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cop_plane",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros A B C D HCop.",
                        "VernacExtend",
                        "9f2dc2e17c55e6ebdd0f2a5555c137f97e38ea3f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec_points A B) as [|HAB]; [destruct (eq_dec_points A C); [destruct (eq_dec_points A D)|]|].",
                        "VernacExtend",
                        "16ba5d36ba0a705b5a4790fe5aa36f5a851ba7a1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (another_point D) as [E].",
                        "VernacExtend",
                        "65919f6b50051fb2fb335d636da693f89d9e5fd3"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_plane_aux D E E E) as [p []]; Cop.",
                        "VernacExtend",
                        "91c9cadec595171b6159d62e6347f933af839957"
                    ]
                },
                {
                    "command": [
                        "subst; exists p; repeat split; assumption.",
                        "VernacExtend",
                        "1e5f52783f82d5e75d4b56a2b9ecadc88caa311f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_plane_aux A D B C) as [p]; Cop.",
                        "VernacExtend",
                        "95a16676270491ea1e071fc0762d8bb9d2d6aae3"
                    ]
                },
                {
                    "command": [
                        "spliter; exists p; repeat split; assumption.",
                        "VernacExtend",
                        "1214d0f894df36e4160349e3135b358f0acce758"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (cop_plane_aux A C B D) as [p]; Cop.",
                        "VernacExtend",
                        "ddc0a1e1472f13440bac792d2411e9ffab9d6a07"
                    ]
                },
                {
                    "command": [
                        "spliter; exists p; repeat split; assumption.",
                        "VernacExtend",
                        "1214d0f894df36e4160349e3135b358f0acce758"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (cop_plane_aux A B C D HCop HAB).",
                        "VernacExtend",
                        "df0a4827d72ea52813cd5cfe50823eb3e00f345a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plane_cop",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "unfold IncidentP.",
                        "VernacExtend",
                        "5d3b9c2d3180dce223831439f299759d3c4d9e21"
                    ]
                },
                {
                    "command": [
                        "intros A B C D p HA HB HC HD.",
                        "VernacExtend",
                        "5936af6ef128a0987e373d8da4773e4222156f59"
                    ]
                },
                {
                    "command": [
                        "assert (HNCol := NCol p).",
                        "VernacExtend",
                        "15adc136a095e3637fba56c98d2721730e7da6a8"
                    ]
                },
                {
                    "command": [
                        "apply ncols_coincide in HNCol.",
                        "VernacExtend",
                        "a4d3480a8ee520844cb438fe49134a15e15f92e0"
                    ]
                },
                {
                    "command": [
                        "apply coplanar_pseudo_trans with (M1 p) (M2 p) (M3 p); assumption.",
                        "VernacExtend",
                        "1b68f22d6c059dfab4655bf3c9b18bea36094a02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Incid_line",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *.",
                        "VernacExtend",
                        "6a246878e9d1a11d58b1ad65524737f14ceac982"
                    ]
                },
                {
                    "command": [
                        "destruct l as [C D HCD].",
                        "VernacExtend",
                        "10470de7e6de9db8e1a0ac73e3d6308893dab24b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "ColR.",
                        "VernacExtend",
                        "0b35ec58454f3477d058acbaeb25f2751768cf91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_outH",
            "line_nb": 384,
            "steps": [
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "unfold outH.",
                        "VernacExtend",
                        "d4f9ab602d72510c692e84529ea82e3dd4140a13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "induction (eq_dec_points A B).",
                        "VernacExtend",
                        "e7eab69e34db7a3fdddcfe5ea8519844193afc01"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "right; left.",
                        "VernacExtend",
                        "0890e8256aff7ee5abfe085237b7b2250c448482"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_hcong_1_existence",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "intros; destruct (l6_11_existence A' A B P) as [B' [HOut HCong]]; auto.",
                        "VernacExtend",
                        "427b147a624634121f521ae13f814de2750dd987"
                    ]
                },
                {
                    "command": [
                        "exists B'; repeat split; try apply out_outH, l6_6; auto; unfold IncidentL in *.",
                        "VernacExtend",
                        "d8de7c19037084b180e879e86eb465af6dcd4bbf"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl in *; ColR.",
                        "VernacExtend",
                        "a846390f359bdc4da30898b6878ada8eaa968b0e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_hcong_scott",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold same_side_scott.",
                        "VernacExtend",
                        "368749bb33701e5e32b8863aeadffa4979d7e026"
                    ]
                },
                {
                    "command": [
                        "assert (exists X : Tpoint, Out A X C /\\ Cong A X P Q).",
                        "VernacExtend",
                        "9832c312e341c79f0547921425e24544f631cc81"
                    ]
                },
                {
                    "command": [
                        "apply l6_11_existence;auto.",
                        "VernacExtend",
                        "5cc5f723f52ad4094e39643007c9f4d3f6b7ac76"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H1;clear H1.",
                        "VernacExtend",
                        "bc81ea12f9d7cd0250e352066bfed361d6a9041f"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H3.",
                        "VernacExtend",
                        "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H3.",
                        "VernacExtend",
                        "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_2.",
                        "VernacExtend",
                        "bac47a12e59f4b5c812f1fc2f3bb799073f963ab"
                    ]
                },
                {
                    "command": [
                        "apply out_col;assumption.",
                        "VernacExtend",
                        "c1f1c5b55c0396cad1a490c85fe7af4b9c062072"
                    ]
                },
                {
                    "command": [
                        "unfold Out in H3.",
                        "VernacExtend",
                        "eedeef61365e8ff5e03ca8701fda9768e2e87c0e"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H3;clear H3.",
                        "VernacExtend",
                        "cd2921edf4657af631a1c0c3b0adccd05dfabff8"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H1;clear H1.",
                        "VernacExtend",
                        "d5eeacf5c3671b26467b00b60a0c931630d799d6"
                    ]
                },
                {
                    "command": [
                        "clear H8.",
                        "VernacExtend",
                        "bb55999d98db29a385bd8f1f3d68192c139f5f5c"
                    ]
                },
                {
                    "command": [
                        "destruct H7.",
                        "VernacExtend",
                        "f6b4c745a19e0b13add33f75bb62e394f2c83618"
                    ]
                },
                {
                    "command": [
                        "assert (A = x).",
                        "VernacExtend",
                        "4c929da2aaaa44f7f93bccae367ea0da5472328b"
                    ]
                },
                {
                    "command": [
                        "eapply between_equality;eauto.",
                        "VernacExtend",
                        "3caf4921ccc93ccf4699daa4fafe33d7a82f9b33"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert (A = C).",
                        "VernacExtend",
                        "69410b0918a7eb7f11f148e0f8bcaee1841cf29a"
                    ]
                },
                {
                    "command": [
                        "eapply between_equality;eauto.",
                        "VernacExtend",
                        "3caf4921ccc93ccf4699daa4fafe33d7a82f9b33"
                    ]
                },
                {
                    "command": [
                        "apply between_symmetry.",
                        "VernacExtend",
                        "b9b81f2c1df9f687bb01be8ad1ad3dd1164786c4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Cong.",
                        "VernacExtend",
                        "38071831c795d703a75f51b6d65fc147487103cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_hcong_3",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A B C).",
                        "VernacExtend",
                        "60da74f2570859e683c315b7d09210471a9c3658"
                    ]
                },
                {
                    "command": [
                        "eapply col_disjoint_bet.",
                        "VernacExtend",
                        "2bc8d6ebd312ea2c04a62e2446f0f0918a1e3889"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert(Bet A' B' C').",
                        "VernacExtend",
                        "366b0410634258f4be5168e9436d49c04bb8064d"
                    ]
                },
                {
                    "command": [
                        "eapply col_disjoint_bet.",
                        "VernacExtend",
                        "2bc8d6ebd312ea2c04a62e2446f0f0918a1e3889"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "eapply l2_11;eauto.",
                        "VernacExtend",
                        "c88f639590216eda59a6d3c1b52f508910fe6053"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_not_incident",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "assert(HC:=not_col_exists A B HH).",
                        "VernacExtend",
                        "6282edffbf53d34622a3eace97db01106a28bc85"
                    ]
                },
                {
                    "command": [
                        "ex_and HC C.",
                        "VernacExtend",
                        "98e2619b3f62e3e83888af4c780fe91ab198a052"
                    ]
                },
                {
                    "command": [
                        "exists C.",
                        "VernacExtend",
                        "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_side_same_side",
            "line_nb": 611,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold same_side.",
                        "VernacExtend",
                        "02dbafdefe4e6bf5649159b0fcdc69beb340953a"
                    ]
                },
                {
                    "command": [
                        "unfold OS in H.",
                        "VernacExtend",
                        "0ceff66c081ad02350f4a7c193cf5e7c07251364"
                    ]
                },
                {
                    "command": [
                        "destruct H as [P []].",
                        "VernacExtend",
                        "2064f737fc27cd988a28221e5725175cfef793c8"
                    ]
                },
                {
                    "command": [
                        "exists P.",
                        "VernacExtend",
                        "22b7dea980d440fc518fb5c50eb57b72554716c3"
                    ]
                },
                {
                    "command": [
                        "unfold cut.",
                        "VernacExtend",
                        "42f7308d20f8ee39060d449cfbf42430905ca1e5"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H.",
                        "VernacExtend",
                        "cc0b5b58da828396f886d519b2f0c310639269ac"
                    ]
                },
                {
                    "command": [
                        "unfold TS in H0.",
                        "VernacExtend",
                        "16ab0ab16b317c3711db29b59d8a9efd3730be93"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "ex_and H4 T.",
                        "VernacExtend",
                        "f66f389f9f7e56c7f4d6ea9bd8e3260f96a03451"
                    ]
                },
                {
                    "command": [
                        "exists T.",
                        "VernacExtend",
                        "d22adc5ec33dd7280b1861e75f80b484a2d39296"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst P.",
                        "VernacExtend",
                        "37a29b451de870ca30fc70b22763d18c31140568"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H5.",
                        "VernacExtend",
                        "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "ex_and H2 T.",
                        "VernacExtend",
                        "1851eeb922f2b9c6bab14d25a6a6e51037064cc7"
                    ]
                },
                {
                    "command": [
                        "exists T.",
                        "VernacExtend",
                        "d22adc5ec33dd7280b1861e75f80b484a2d39296"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst P.",
                        "VernacExtend",
                        "37a29b451de870ca30fc70b22763d18c31140568"
                    ]
                },
                {
                    "command": [
                        "apply between_identity in H5.",
                        "VernacExtend",
                        "6d3cae2ade70970d81f503919cb1b10aaf4415b5"
                    ]
                },
                {
                    "command": [
                        "subst T.",
                        "VernacExtend",
                        "214076e37f63268da09a1b5fb2d65cdafcfcae58"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OS_distinct",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply one_side_not_col123 in H.",
                        "VernacExtend",
                        "2193acaeb7c23cd9859e9468fafafbd74c7b2bd8"
                    ]
                },
                {
                    "command": [
                        "assert_diffs;assumption.",
                        "VernacExtend",
                        "8e4c3e45acc6467868420176ed67d660a3049fd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OS_same_side'",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold same_side'.",
                        "VernacExtend",
                        "48afc6fc9ed25e7b0e8aef3442e3bb621ab71167"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply OS_distinct with A B;assumption.",
                        "VernacExtend",
                        "05f8284992616d186a62518326673969cdcc2b22"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply one_side_same_side.",
                        "VernacExtend",
                        "c2560b393ed55ed56480995ee9e115879d10f068"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *.",
                        "VernacExtend",
                        "6a246878e9d1a11d58b1ad65524737f14ceac982"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply col2_os__os with P Q; try assumption; ColR.",
                        "VernacExtend",
                        "5b2425fcd954b0408c351c16a8906557232091e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_side_OS",
            "line_nb": 673,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold same_side' in *.",
                        "VernacExtend",
                        "3293d5e3018b89f282ea734896c9ea5a7ccea1ad"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct (axiom_line_existence A B H).",
                        "VernacExtend",
                        "d391a3834a4163715ab5f6d30fb6a5817a9235e1"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "assert (T:=H0 x H1 H2).",
                        "VernacExtend",
                        "deabce1636e31ca23f2588fa4d549afb6fce09a0"
                    ]
                },
                {
                    "command": [
                        "assert (U:=same_side_one_side P Q x T).",
                        "VernacExtend",
                        "645b9ed420d9e2cb47249e0daf377ebf9c167c61"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *.",
                        "VernacExtend",
                        "6a246878e9d1a11d58b1ad65524737f14ceac982"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply col2_os__os with P1 P2;Col.",
                        "VernacExtend",
                        "b96f01edbb0a6a44f5f27ded471d0780b533dc9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "outH_out",
            "line_nb": 686,
            "steps": [
                {
                    "command": [
                        "unfold outH.",
                        "VernacExtend",
                        "d4f9ab602d72510c692e84529ea82e3dd4140a13"
                    ]
                },
                {
                    "command": [
                        "unfold Out.",
                        "VernacExtend",
                        "c56b7bba4d6c655f86e1231a39eebcd990c15b8f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H in H.",
                        "VernacExtend",
                        "9b10edee0f297956f818bca878a75065cecb8ed2"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H in H.",
                        "VernacExtend",
                        "9b10edee0f297956f818bca878a75065cecb8ed2"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "spliter.",
                        "VernacExtend",
                        "fab9e3eab81eb4c88790dca05ccb5bd23a4d6dd0"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply between_trivial.",
                        "VernacExtend",
                        "ea95a8d748c00c63f7860554b33452def8b8353d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incident_col",
            "line_nb": 707,
            "steps": [
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_incident",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "unfold IncidentL.",
                        "VernacExtend",
                        "d6a768ed5298b5419ca12e3d9e2b32f52e08a4f2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bet_Between_H",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Between_H.",
                        "VernacExtend",
                        "6dcc4892926135bf33955ad304f21c3e9179a2c8"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "treat_equalities.",
                        "VernacExtend",
                        "0d9f12669aa7857d816d5247f75bab1bd3b63660"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_cong_5'",
            "line_nb": 726,
            "steps": [
                {
                    "command": [
                        "intros A B C A' B' C'.",
                        "VernacExtend",
                        "4605c161b5dc2d703d7786b6178c58ce03003064"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T:=l11_49 B A C B' A' C').",
                        "VernacExtend",
                        "e3e279f48313d8ab301daa39aa4d9f192866998e"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B C).",
                        "VernacExtend",
                        "a75f346a3102b55e5f88c48f3e148b73c2675143"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply cols_coincide_2 in H4.",
                        "VernacExtend",
                        "d8cf987f94113eebe38fa5b56992aed3cc1b7ec5"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_hcong_4_existence",
            "line_nb": 737,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cols_coincide in H.",
                        "VernacExtend",
                        "5f992a77bc196bb66d73cc3768743c6045f2555d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cols_coincide in H0.",
                        "VernacExtend",
                        "fc2ab44b1712486bd387c6eb47984b2023c030a0"
                    ]
                },
                {
                    "command": [
                        "assert(~Col X O P).",
                        "VernacExtend",
                        "11770a8c7796012ff4d086fda0e23c6792151bea"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Col.",
                        "VernacExtend",
                        "92aede71f403ba291e696d87cdf45f5aca69909a"
                    ]
                },
                {
                    "command": [
                        "assert(HH:=angle_construction_1 A B C X O P H0 H1).",
                        "VernacExtend",
                        "8d06aa68509f9620abc34967d78b2f4f2dea8cf5"
                    ]
                },
                {
                    "command": [
                        "ex_and HH Y.",
                        "VernacExtend",
                        "a896b98a1d70badb342b5ae9574f797f75d34d55"
                    ]
                },
                {
                    "command": [
                        "exists Y.",
                        "VernacExtend",
                        "49394996b896109363dce3db54779891f7a20742"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply OS_same_side'.",
                        "VernacExtend",
                        "4ce0084dfe779ebfc476bb9792694194ee7a05a5"
                    ]
                },
                {
                    "command": [
                        "apply invert_one_side.",
                        "VernacExtend",
                        "d450e051b92db8a0f5549fe54188220d171b7134"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry.",
                        "VernacExtend",
                        "e5557f90c70cace73e26d7184e8ac12051fe7563"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_side_sym",
            "line_nb": 764,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply one_side_same_side.",
                        "VernacExtend",
                        "c2560b393ed55ed56480995ee9e115879d10f068"
                    ]
                },
                {
                    "command": [
                        "apply same_side_one_side in H.",
                        "VernacExtend",
                        "b797d19dfe8bcb4d03cb9eca55e1d7b658b21f5b"
                    ]
                },
                {
                    "command": [
                        "apply one_side_symmetry.",
                        "VernacExtend",
                        "e5557f90c70cace73e26d7184e8ac12051fe7563"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_conga_comm",
            "line_nb": 799,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cols_coincide in H.",
                        "VernacExtend",
                        "5f992a77bc196bb66d73cc3768743c6045f2555d"
                    ]
                },
                {
                    "command": [
                        "assert_diffs.",
                        "VernacExtend",
                        "2110ece9112784ebae36f9d0c23d563d83ff573a"
                    ]
                },
                {
                    "command": [
                        "apply conga_pseudo_refl;auto.",
                        "VernacExtend",
                        "df9b6043ebd1492b46b4fc504cdbe598621cd514"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_congaH_outH_congaH",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply out_conga with A C D F;auto using outH_out.",
                        "VernacExtend",
                        "f6d38cfefa9e5bdbf4f7d11d737a0fdbf598c598"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_conga_permlr",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "apply Ch11_angles.conga_comm.",
                        "VernacExtend",
                        "a182bed9757eabdc30d596ec23c91b6fadfbe765"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_conga_refl",
            "line_nb": 812,
            "steps": [
                {
                    "command": [
                        "intros A B C H.",
                        "VernacExtend",
                        "a4d5576d03ad61ed90c10c37343faf46dbc0c914"
                    ]
                },
                {
                    "command": [
                        "apply Ch11_angles.conga_refl; intro; subst; apply H; apply cols_coincide; Col.",
                        "VernacExtend",
                        "2d6e16c84d7e8e79f709a6fba1b8542bd4296bad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hilbert_neutral_follows_from_Tarski_neutral",
            "line_nb": 819,
            "steps": [
                {
                    "command": [
                        "exact (Build_Hilbert_neutral_dimensionless Tpoint Line Plane EqL EqL_Equiv EqP EqP_Equiv IncidentL IncidentP axiom_Incid_morphism axiom_Incid_dec axiom_Incidp_morphism axiom_Incidp_dec eq_dec_points axiom_line_existence axiom_line_uniqueness axiom_two_points_on_line PA PB PC lower_dim' axiom_plane_existence axiom_one_point_on_plane axiom_plane_uniqueness axiom_line_on_plane Between_H axiom_between_diff axiom_between_col axiom_between_comm axiom_between_out axiom_between_only_one axiom_pasch Cong cong_right_commutativity axiom_hcong_1_existence cong_inner_transitivity axiom_hcong_3 CongA axiom_conga_refl axiom_conga_comm axiom_conga_permlr axiom_congaH_outH_congaH axiom_hcong_4_existence axiom_hcong_4_uniqueness axiom_cong_5').",
                        "VernacExtend",
                        "aee1e0ee3eccd96cb86af1b12448972d88425127"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Hilbert_2D_follows_from_Tarski_2D",
            "line_nb": 825,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros A B C l HNCol HNCl Hcut.",
                        "VernacExtend",
                        "514b3f1647ef32addc3c3b5eeff782a01968ec28"
                    ]
                },
                {
                    "command": [
                        "apply axiom_pasch with (Plan A B C HNCol); trivial; unfold IncidentLP, IncidentP; intros; try (apply all_coplanar).",
                        "VernacExtend",
                        "347e93c51bc2fdc5a67989f51d568350f10742b7"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "lower_dim_3'",
            "line_nb": 833,
            "steps": [
                {
                    "command": [
                        "exists S1, S2, S3, S4.",
                        "VernacExtend",
                        "686ac44a7d1922e46daae6a5193ee6d9e6beeb1f"
                    ]
                },
                {
                    "command": [
                        "intros [p]; spliter.",
                        "VernacExtend",
                        "27fbc784b2d4d51987a49314fa69fe433de147ae"
                    ]
                },
                {
                    "command": [
                        "apply tarski_axioms.lower_dim_3, plane_cop with p; assumption.",
                        "VernacExtend",
                        "a81815dccb65e62384aa54caeb714902dfcc5bd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hilbert_3D_follows_from_Tarski_3D",
            "line_nb": 838,
            "steps": [
                {
                    "command": [
                        "destruct lower_dim_3' as [A [B [C [D n]]]].",
                        "VernacExtend",
                        "9479804961fab3c2542d954feee1f226b3e2dad8"
                    ]
                },
                {
                    "command": [
                        "exists A B C D; [|assumption].",
                        "VernacExtend",
                        "8b19bea8f9b5c8725e1b39701c91d6562ec47c57"
                    ]
                },
                {
                    "command": [
                        "clear A B C D n.",
                        "VernacExtend",
                        "4d4c943c6bcdbae16720057a51aeb5105d42e74c"
                    ]
                },
                {
                    "command": [
                        "intros A p q HAp HAq.",
                        "VernacExtend",
                        "699acdaf860e38bd6de8ee1b7e8170056956cbd1"
                    ]
                },
                {
                    "command": [
                        "destruct p as [P1 P2 P3 HP].",
                        "VernacExtend",
                        "a29bd1de53114ea2c9f1ed5767308b0e08feb573"
                    ]
                },
                {
                    "command": [
                        "destruct q as [Q1 Q2 Q3 HQ].",
                        "VernacExtend",
                        "ddf258b97ae9094047cef9f59cf37c2e1b566688"
                    ]
                },
                {
                    "command": [
                        "unfold IncidP in *; simpl in *; unfold IncidentP in *; simpl in *.",
                        "VernacExtend",
                        "e3dacd5be75090eff0cd74d47790aa4473f557f1"
                    ]
                },
                {
                    "command": [
                        "assert (pi : plane_intersection_axiom).",
                        "VernacExtend",
                        "40df484e6240f0c2f291cd48d1784100ecbb8045"
                    ]
                },
                {
                    "command": [
                        "cut upper_dim_3_axiom.",
                        "VernacExtend",
                        "552f8535555783c5570d062915abf387d6442924"
                    ]
                },
                {
                    "command": [
                        "apply upper_dim_3_equivalent_axioms; simpl; tauto.",
                        "VernacExtend",
                        "ad6daad9b3fc6e82d0089652b46b79d0723db5d1"
                    ]
                },
                {
                    "command": [
                        "unfold upper_dim_3_axiom.",
                        "VernacExtend",
                        "61d274ae0caf47b55eb126e05679b1a19c945313"
                    ]
                },
                {
                    "command": [
                        "apply upper_dim_3.",
                        "VernacExtend",
                        "8302b0acff88348a6f8ecd3a7759f5f26f6b7113"
                    ]
                },
                {
                    "command": [
                        "apply pi; assumption.",
                        "VernacExtend",
                        "b6bf34af60f7625fde518936b592bbe1b0364edc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Para_Par",
            "line_nb": 857,
            "steps": [
                {
                    "command": [
                        "unfold Para, IncidentL, Par, Par_strict; simpl.",
                        "VernacExtend",
                        "ee0eae2779ed2df484e0abf0178ef7e6b1b411ca"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [HNI [p []]].",
                        "VernacExtend",
                        "8808075a8c0efc6fe32ee6f7b41dd6f452309672"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "repeat split;auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "apply plane_cop with p; [apply H|apply H|apply H0..]; unfold IncidentL; simpl; Col.",
                        "VernacExtend",
                        "72095ec4784a79c16513338d2fa106702b33350d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "axiom_euclid_uniqueness",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l as [A B HAB].",
                        "VernacExtend",
                        "f005bea171180777e8750e7c9de5214d108e0b0b"
                    ]
                },
                {
                    "command": [
                        "destruct m1 as [C D HCD].",
                        "VernacExtend",
                        "0641d69861149d12bd291d199ccdcefff031968b"
                    ]
                },
                {
                    "command": [
                        "destruct m2 as [C' D' HCD'].",
                        "VernacExtend",
                        "2a28b717ef62b0d36a72b400d6c6887b9fc4084a"
                    ]
                },
                {
                    "command": [
                        "unfold IncidentL in *;simpl in *.",
                        "VernacExtend",
                        "49f906771541ede978846577e3e32155b2924180"
                    ]
                },
                {
                    "command": [
                        "apply Para_Par in H0.",
                        "VernacExtend",
                        "4e3d0c8eafd3723b7e5fcd8ed3b632090baf4718"
                    ]
                },
                {
                    "command": [
                        "apply Para_Par in H2.",
                        "VernacExtend",
                        "19de66efe5940497ed4b7d4359bd94b446889a88"
                    ]
                },
                {
                    "command": [
                        "elim (tarski_s_euclid_implies_playfair euclid A B C D C' D' P H0 H1 H2 H3);intros.",
                        "VernacExtend",
                        "9e9bc414c2652e7dfc31f43516d39b1763092c57"
                    ]
                },
                {
                    "command": [
                        "apply axiom_line_uniqueness with C' D'; unfold IncidentL;simpl;Col.",
                        "VernacExtend",
                        "380490c3809b4104eff930fe0f6794c1774f90d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hilbert_euclidean_follows_from_Tarski_euclidean",
            "line_nb": 876,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply axiom_euclid_uniqueness.",
                        "VernacExtend",
                        "48a2e82aa1832cfefb2b760619897bc84151844c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Hilbert_euclidean_ID_follows_from_Tarski_euclidean",
            "line_nb": 880,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros l m.",
                        "VernacExtend",
                        "a5f5879b86eb50547ad9fca791f1ccd708bb481f"
                    ]
                },
                {
                    "command": [
                        "assert (ID : decidability_of_intersection).",
                        "VernacExtend",
                        "7cbfa8df50697e32e1f9a31d273f6a3653be1fd0"
                    ]
                },
                {
                    "command": [
                        "apply strong_parallel_postulate_implies_inter_dec.",
                        "VernacExtend",
                        "df58e4bea5d10519a7dcaca3df2e2e4312f6decf"
                    ]
                },
                {
                    "command": [
                        "cut tarski_s_parallel_postulate.",
                        "VernacExtend",
                        "0bcde80a2ad1d0b228515f648c2b53312ce44e2b"
                    ]
                },
                {
                    "command": [
                        "apply equivalent_postulates_without_decidability_of_intersection_of_lines_bis; simpl; tauto.",
                        "VernacExtend",
                        "2225c1d875d9a4b13e56734641df07cee27777fc"
                    ]
                },
                {
                    "command": [
                        "unfold tarski_s_parallel_postulate.",
                        "VernacExtend",
                        "8a2a6e351107e83ae56436a24ff6e3de68149110"
                    ]
                },
                {
                    "command": [
                        "apply euclid.",
                        "VernacExtend",
                        "2ebd37e4191a55c961071048c0639baef91a78e4"
                    ]
                },
                {
                    "command": [
                        "destruct l as [L1 L2 HL].",
                        "VernacExtend",
                        "c21049a36393b214da143a1bffdcf388bf205d88"
                    ]
                },
                {
                    "command": [
                        "destruct m as [M1 M2 HM].",
                        "VernacExtend",
                        "1e0c6027dc679ef725e009c81282388ccc6cfa06"
                    ]
                },
                {
                    "command": [
                        "simpl; unfold IncidentL; simpl.",
                        "VernacExtend",
                        "779b93b80195de46fb16770fed077bf7b67a736a"
                    ]
                },
                {
                    "command": [
                        "apply ID.",
                        "VernacExtend",
                        "1941cfe9f03940956bd88d357e93829acc8e8f5c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}