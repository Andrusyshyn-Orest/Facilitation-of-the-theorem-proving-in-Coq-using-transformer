{
    "filename": "Meta_theory/Counter_models/counter_model_bet_identity.v",
    "coq_project": "GeoCoq",
    "vernac_cmds": [
        [
            "Require Export GeoCoq.Axioms.tarski_axioms.",
            "VernacRequire",
            "3a9e91a076068037ed4dd21d09c68502db612fd7"
        ],
        [
            "Section between_identity_independent.",
            "VernacBeginSection",
            "fce2a6bf1134ecb30c527baa3d5f3747bcced4e2"
        ],
        [
            "Inductive Point := P0 | P1 | P2 | P3.",
            "VernacInductive",
            "c0f62fd3556b215c5132f9876d43b6559f20e2d7"
        ],
        [
            "Definition Bet (A B C : Point) := A = B \\/ B = C \\/ A = C.",
            "VernacDefinition",
            "5b22cac4177a4ffcf3bb845a3c1389bc7d132035"
        ],
        [
            "Definition Cong (A B C D : Point) := (A = B /\\ C = D) \\/ (A <> B /\\ C <> D).",
            "VernacDefinition",
            "b9157e8dd7459a65637dc733a3dc13f10d035791"
        ],
        [
            "Lemma not_between_identity : ~ (forall A B, Bet A B A -> A=B).",
            "VernacStartTheoremProof",
            "6f2fae3f2257d0ad7a260e6dcba71d8ce9a63af9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (T:= H P0 P1).",
            "VernacExtend",
            "49c4fd97a921dc3589e341a3b5301eb65b83aa8c"
        ],
        [
            "assert (P0=P1).",
            "VernacExtend",
            "45687c042f1dc6679182b94610f758fc8d13bc0a"
        ],
        [
            "apply T.",
            "VernacExtend",
            "58f1cfdffc07643a959fa337d4262e5857b39e7d"
        ],
        [
            "unfold Bet;tauto.",
            "VernacExtend",
            "6ad01a3f4318cb4ef2fb1592e87b0345e8ca3ff6"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_pseudo_reflexivity : forall A B, Cong A B B A.",
            "VernacStartTheoremProof",
            "adf839968655768b14d865920105f2458be3c65b"
        ],
        [
            "unfold Cong;intros;destruct A; destruct B;try tauto; right;split;discriminate.",
            "VernacExtend",
            "bc5314996c008d21f8a5f75c3704129a78d35e2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_identity : forall A B C, Cong A B C C -> A = B.",
            "VernacStartTheoremProof",
            "c6ff07c3b449cf884c50008af1a9baa382eaa0db"
        ],
        [
            "unfold Cong.",
            "VernacExtend",
            "91c5e9c3abf5337728c3361cc1844056659505ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_inner_transitivity : forall A B C D E F, Cong A B C D -> Cong A B E F -> Cong C D E F.",
            "VernacStartTheoremProof",
            "444288d2089ae5b8861bd986f4651948d4ce1b8a"
        ],
        [
            "unfold Cong; tauto.",
            "VernacExtend",
            "fc48c584cf9433338af8fc064f32ad5fa71a4726"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inner_pasch : forall A B C P Q, Bet A P C -> Bet B Q C -> exists x, Bet P x B /\\ Bet Q x A.",
            "VernacStartTheoremProof",
            "844ca20a5d1b05ff4ddc84ba129408ac60d12f57"
        ],
        [
            "unfold Bet; intros.",
            "VernacExtend",
            "1a4e0a1b1125a36a686ef4c2df8c5a0f122fbf42"
        ],
        [
            "intuition;subst; try (exists P;tauto); try (exists Q;tauto); exists C;tauto.",
            "VernacExtend",
            "76b91043f8a16189bc98c278b501dc4daa1be851"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma five_segment : forall A A' B B' C C' D D', Cong A B A' B' -> Cong B C B' C' -> Cong A D A' D' -> Cong B D B' D' -> Bet A B C -> Bet A' B' C' -> A <> B -> Cong C D C' D'.",
            "VernacStartTheoremProof",
            "0a0c6910f0d3823a41f5918cabf34d77ebf75394"
        ],
        [
            "unfold Bet, Cong;intros.",
            "VernacExtend",
            "f847d03da88e272d5ac6cc25e680c5e1690396c4"
        ],
        [
            "intuition;repeat subst;tauto.",
            "VernacExtend",
            "29e20d7be3a919a81420193d2f639d120199d52b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma point_eq_dec : forall A B : Point, A=B \\/ A<>B.",
            "VernacStartTheoremProof",
            "088c2d0e72799fbbecd8c4a0d2764910c552a128"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A; destruct B;try tauto;right;discriminate.",
            "VernacExtend",
            "1b425fcb121b6c3041093b7861f218215a33829e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma segment_construction : forall A B C D, exists E, Bet A B E /\\ Cong B E C D.",
            "VernacStartTheoremProof",
            "e2da65529e67fce954e43ef48d9107db0ee6ccf1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Bet, Cong.",
            "VernacExtend",
            "1c7d8e8008b122b3ae6e0504d243d9369e833405"
        ],
        [
            "elim (point_eq_dec C D).",
            "VernacExtend",
            "6f3ae1a4ffe47bf7a16e98997e40846c41e2a2ef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (point_eq_dec A B).",
            "VernacExtend",
            "f7e39e792cea6008c1513a65543f21072972f349"
        ],
        [
            "intro;subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "destruct B; try (exists P0; split; try tauto; right; split; try discriminate; assumption); exists P1; split; try tauto; right; split; try discriminate; assumption.",
            "VernacExtend",
            "bf7e060634fd62dd9f16cde101420888e3c4df3c"
        ],
        [
            "intros; exists A; firstorder.",
            "VernacExtend",
            "518e0b96894cba83a7336c7a9feee06001ec7417"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lower_dim : exists A, exists B, exists C, ~ (Bet A B C \\/ Bet B C A \\/ Bet C A B).",
            "VernacStartTheoremProof",
            "0c591124a64b893f8dc552af0905ab53a6c2870f"
        ],
        [
            "exists P0.",
            "VernacExtend",
            "d8a0691f7b577e7a393e5f81a85d4375c42cfbb5"
        ],
        [
            "exists P1.",
            "VernacExtend",
            "1563a4affb41ce05b6370b052c8fb122ee8d6bf5"
        ],
        [
            "exists P2.",
            "VernacExtend",
            "de18cb67788cf1a28d5b741f731b619737913013"
        ],
        [
            "unfold Bet.",
            "VernacExtend",
            "b95427537cc12d7f7530138b655c02bf2e051489"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intuition discriminate.",
            "VernacExtend",
            "3137e5957d23860aff1b7d147379554bf152a631"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_sym : forall A B C D, Cong A B C D -> Cong C D A B.",
            "VernacStartTheoremProof",
            "600af57c8e3697fba1ab53d309e7068c4751a122"
        ],
        [
            "unfold Cong.",
            "VernacExtend",
            "91c5e9c3abf5337728c3361cc1844056659505ed"
        ],
        [
            "intros;tauto.",
            "VernacExtend",
            "d3a1bb556e98cc9d6a216d62b562d22e701c7ee7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux : forall A, Cong A P0 A P1 -> A = P2 \\/ A = P3.",
            "VernacStartTheoremProof",
            "39289d83a175ca2043162129536b47986784ee24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux_2 : forall A, Cong A P0 A P2 -> A = P1 \\/ A = P3.",
            "VernacStartTheoremProof",
            "6ffa27c12b15e6ccebcdc6a325447f65d8253a6b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux_3 : forall A, Cong A P1 A P2 -> A = P0 \\/ A = P3.",
            "VernacStartTheoremProof",
            "9e6116f285e17993e32c9574c2676ff13852f64f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux_4 : forall A, Cong A P0 A P3 -> A = P1 \\/ A = P2.",
            "VernacStartTheoremProof",
            "adab1684f2b7caf3d62b32f9b27ca93eb5dbe313"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux_5 : forall A, Cong A P1 A P3 -> A = P0 \\/ A = P2.",
            "VernacStartTheoremProof",
            "1e953d4d85d4f030523767c023eabe530462d410"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cong_aux_6 : forall A, Cong A P2 A P3 -> A = P0 \\/ A = P1.",
            "VernacStartTheoremProof",
            "4c0fa40a6fdf9b6e062f6714c57f83783e65520d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct A;unfold Cong in *; intuition;congruence.",
            "VernacExtend",
            "606f54c20671f1aa03a245c17c4c27dbadd2083b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma upper_dim : forall A B C P Q , P <> Q -> Cong A P A Q -> Cong B P B Q -> Cong C P C Q -> (Bet A B C \\/ Bet B C A \\/ Bet C A B).",
            "VernacStartTheoremProof",
            "540a19394b36a62558ea5f3d0709acec0a53fee6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct P; destruct Q; try solve [intuition]; try (apply cong_aux in H0; apply cong_aux in H1; apply cong_aux in H2); try (apply cong_aux_2 in H0; apply cong_aux_2 in H1; apply cong_aux_2 in H2); try (apply cong_aux_3 in H0; apply cong_aux_3 in H1; apply cong_aux_3 in H2); try (apply cong_aux_4 in H0; apply cong_aux_4 in H1; apply cong_aux_4 in H2); try (apply cong_aux_5 in H0; apply cong_aux_5 in H1; apply cong_aux_5 in H2); try (apply cong_aux_6 in H0; apply cong_aux_6 in H1; apply cong_aux_6 in H2); try (apply cong_sym in H0; apply cong_sym in H1; apply cong_sym in H2); try (apply cong_aux in H0; apply cong_aux in H1; apply cong_aux in H2); try (apply cong_aux_2 in H0; apply cong_aux_2 in H1; apply cong_aux_2 in H2); try (apply cong_aux_3 in H0; apply cong_aux_3 in H1; apply cong_aux_3 in H2); try (apply cong_aux_4 in H0; apply cong_aux_4 in H1; apply cong_aux_4 in H2); try (apply cong_aux_5 in H0; apply cong_aux_5 in H1; apply cong_aux_5 in H2); try (apply cong_aux_6 in H0; apply cong_aux_6 in H1; apply cong_aux_6 in H2); intuition; subst; unfold Bet; tauto.",
            "VernacExtend",
            "909131b035ab0b0778e4a4e6f9a24666981d97c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_bet_diff : forall A B C, ~ (Bet A B C \\/ Bet B C A \\/ Bet C A B) -> A <> B /\\ B <> C /\\ A <> C.",
            "VernacStartTheoremProof",
            "63d2abe63d322d3afa53c2ee65f6206d1d245108"
        ],
        [
            "unfold Bet; intros.",
            "VernacExtend",
            "1a4e0a1b1125a36a686ef4c2df8c5a0f122fbf42"
        ],
        [
            "destruct A; destruct B; destruct C; intuition.",
            "VernacExtend",
            "04075daed9053a4e4ec58a0a12024db0d1f7b849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma euclid : forall A B C, ~ (Bet A B C \\/ Bet B C A \\/ Bet C A B) -> exists CC, Cong A CC B CC /\\ Cong A CC C CC.",
            "VernacStartTheoremProof",
            "06d2647a6ca811416f81595fdea446bf34e6bf96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply not_bet_diff in H; spliter; unfold Cong.",
            "VernacExtend",
            "f26e3e558142b37f91c16cac72952a0a4156ce35"
        ],
        [
            "destruct A; destruct B; destruct C; try tauto; try (exists P3; split; right; split; discriminate); try (exists P2; split; right; split; discriminate); try (exists P1; split; right; split; discriminate); exists P0; split; right; split; discriminate.",
            "VernacExtend",
            "b39ee8a7c54b23db47eec44bee8db2771c4447b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End between_identity_independent.",
            "VernacEndSegment",
            "462a1c0b7c13e3dffb0934095abba83ad25610e7"
        ]
    ],
    "proofs": [
        {
            "name": "not_between_identity",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (T:= H P0 P1).",
                        "VernacExtend",
                        "49c4fd97a921dc3589e341a3b5301eb65b83aa8c"
                    ]
                },
                {
                    "command": [
                        "assert (P0=P1).",
                        "VernacExtend",
                        "45687c042f1dc6679182b94610f758fc8d13bc0a"
                    ]
                },
                {
                    "command": [
                        "apply T.",
                        "VernacExtend",
                        "58f1cfdffc07643a959fa337d4262e5857b39e7d"
                    ]
                },
                {
                    "command": [
                        "unfold Bet;tauto.",
                        "VernacExtend",
                        "6ad01a3f4318cb4ef2fb1592e87b0345e8ca3ff6"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_pseudo_reflexivity",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold Cong;intros;destruct A; destruct B;try tauto; right;split;discriminate.",
                        "VernacExtend",
                        "bc5314996c008d21f8a5f75c3704129a78d35e2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_identity",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "unfold Cong.",
                        "VernacExtend",
                        "91c5e9c3abf5337728c3361cc1844056659505ed"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_inner_transitivity",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold Cong; tauto.",
                        "VernacExtend",
                        "fc48c584cf9433338af8fc064f32ad5fa71a4726"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inner_pasch",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold Bet; intros.",
                        "VernacExtend",
                        "1a4e0a1b1125a36a686ef4c2df8c5a0f122fbf42"
                    ]
                },
                {
                    "command": [
                        "intuition;subst; try (exists P;tauto); try (exists Q;tauto); exists C;tauto.",
                        "VernacExtend",
                        "76b91043f8a16189bc98c278b501dc4daa1be851"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "five_segment",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold Bet, Cong;intros.",
                        "VernacExtend",
                        "f847d03da88e272d5ac6cc25e680c5e1690396c4"
                    ]
                },
                {
                    "command": [
                        "intuition;repeat subst;tauto.",
                        "VernacExtend",
                        "29e20d7be3a919a81420193d2f639d120199d52b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "point_eq_dec",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A; destruct B;try tauto;right;discriminate.",
                        "VernacExtend",
                        "1b425fcb121b6c3041093b7861f218215a33829e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "segment_construction",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Bet, Cong.",
                        "VernacExtend",
                        "1c7d8e8008b122b3ae6e0504d243d9369e833405"
                    ]
                },
                {
                    "command": [
                        "elim (point_eq_dec C D).",
                        "VernacExtend",
                        "6f3ae1a4ffe47bf7a16e98997e40846c41e2a2ef"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists B.",
                        "VernacExtend",
                        "6af01c0c0423549b6c4629183bbae5f87e428c57"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (point_eq_dec A B).",
                        "VernacExtend",
                        "f7e39e792cea6008c1513a65543f21072972f349"
                    ]
                },
                {
                    "command": [
                        "intro;subst.",
                        "VernacExtend",
                        "9021e22274b6259ff513a190b208a4a3aa9b2ede"
                    ]
                },
                {
                    "command": [
                        "destruct B; try (exists P0; split; try tauto; right; split; try discriminate; assumption); exists P1; split; try tauto; right; split; try discriminate; assumption.",
                        "VernacExtend",
                        "bf7e060634fd62dd9f16cde101420888e3c4df3c"
                    ]
                },
                {
                    "command": [
                        "intros; exists A; firstorder.",
                        "VernacExtend",
                        "518e0b96894cba83a7336c7a9feee06001ec7417"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lower_dim",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "exists P0.",
                        "VernacExtend",
                        "d8a0691f7b577e7a393e5f81a85d4375c42cfbb5"
                    ]
                },
                {
                    "command": [
                        "exists P1.",
                        "VernacExtend",
                        "1563a4affb41ce05b6370b052c8fb122ee8d6bf5"
                    ]
                },
                {
                    "command": [
                        "exists P2.",
                        "VernacExtend",
                        "de18cb67788cf1a28d5b741f731b619737913013"
                    ]
                },
                {
                    "command": [
                        "unfold Bet.",
                        "VernacExtend",
                        "b95427537cc12d7f7530138b655c02bf2e051489"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intuition discriminate.",
                        "VernacExtend",
                        "3137e5957d23860aff1b7d147379554bf152a631"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_sym",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "unfold Cong.",
                        "VernacExtend",
                        "91c5e9c3abf5337728c3361cc1844056659505ed"
                    ]
                },
                {
                    "command": [
                        "intros;tauto.",
                        "VernacExtend",
                        "d3a1bb556e98cc9d6a216d62b562d22e701c7ee7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux_2",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux_3",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux_4",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux_5",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cong_aux_6",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct A;unfold Cong in *; intuition;congruence.",
                        "VernacExtend",
                        "606f54c20671f1aa03a245c17c4c27dbadd2083b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "upper_dim",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct P; destruct Q; try solve [intuition]; try (apply cong_aux in H0; apply cong_aux in H1; apply cong_aux in H2); try (apply cong_aux_2 in H0; apply cong_aux_2 in H1; apply cong_aux_2 in H2); try (apply cong_aux_3 in H0; apply cong_aux_3 in H1; apply cong_aux_3 in H2); try (apply cong_aux_4 in H0; apply cong_aux_4 in H1; apply cong_aux_4 in H2); try (apply cong_aux_5 in H0; apply cong_aux_5 in H1; apply cong_aux_5 in H2); try (apply cong_aux_6 in H0; apply cong_aux_6 in H1; apply cong_aux_6 in H2); try (apply cong_sym in H0; apply cong_sym in H1; apply cong_sym in H2); try (apply cong_aux in H0; apply cong_aux in H1; apply cong_aux in H2); try (apply cong_aux_2 in H0; apply cong_aux_2 in H1; apply cong_aux_2 in H2); try (apply cong_aux_3 in H0; apply cong_aux_3 in H1; apply cong_aux_3 in H2); try (apply cong_aux_4 in H0; apply cong_aux_4 in H1; apply cong_aux_4 in H2); try (apply cong_aux_5 in H0; apply cong_aux_5 in H1; apply cong_aux_5 in H2); try (apply cong_aux_6 in H0; apply cong_aux_6 in H1; apply cong_aux_6 in H2); intuition; subst; unfold Bet; tauto.",
                        "VernacExtend",
                        "909131b035ab0b0778e4a4e6f9a24666981d97c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_bet_diff",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "unfold Bet; intros.",
                        "VernacExtend",
                        "1a4e0a1b1125a36a686ef4c2df8c5a0f122fbf42"
                    ]
                },
                {
                    "command": [
                        "destruct A; destruct B; destruct C; intuition.",
                        "VernacExtend",
                        "04075daed9053a4e4ec58a0a12024db0d1f7b849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "euclid",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply not_bet_diff in H; spliter; unfold Cong.",
                        "VernacExtend",
                        "f26e3e558142b37f91c16cac72952a0a4156ce35"
                    ]
                },
                {
                    "command": [
                        "destruct A; destruct B; destruct C; try tauto; try (exists P3; split; right; split; discriminate); try (exists P2; split; right; split; discriminate); try (exists P1; split; right; split; discriminate); exists P0; split; right; split; discriminate.",
                        "VernacExtend",
                        "b39ee8a7c54b23db47eec44bee8db2771c4447b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}