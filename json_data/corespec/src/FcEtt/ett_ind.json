{
    "filename": "src/FcEtt/ett_ind.v",
    "coq_project": "corespec",
    "vernac_cmds": [
        [
            "Require Import FcEtt.utils.",
            "VernacRequire",
            "8d082ef10c0093b17464b2b7ed352728f63ac59d"
        ],
        [
            "Require Import FcEtt.imports.",
            "VernacRequire",
            "1958d89d1693bbae9debda5c453d5c5e1e5e917f"
        ],
        [
            "Require Export FcEtt.fset_facts.",
            "VernacRequire",
            "6374bfb6ab17ca844705035121018d9fc7c802ec"
        ],
        [
            "Require Export FcEtt.ett_inf.",
            "VernacRequire",
            "cbf851a51541088047ca8370dce31e979217adde"
        ],
        [
            "Require Export FcEtt.tactics.",
            "VernacRequire",
            "2576bc1210efcfea27a4ff36e2425c851354d9d2"
        ],
        [
            "Set Bullet Behavior \"Strict Subproofs\".",
            "VernacSetOption",
            "2f48a6a957bc407939a01b772051438c4013f99b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Lemma tm_subst_tm_tm_var : forall a x, tm_subst_tm_tm a x (a_Var_f x) = a.",
            "VernacStartTheoremProof",
            "44af30b9fe47f98ffd1285379597338a2ff1c863"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (x == x).",
            "VernacExtend",
            "2a2f17e0574f718b67f140d339120873dbe7e1b2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma co_subst_co_co_var : forall a x, co_subst_co_co a x (g_Var_f x) = a.",
            "VernacStartTheoremProof",
            "987b90c1a9c60290343ba7848ef2bca10f3fb8ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (x == x).",
            "VernacExtend",
            "2a2f17e0574f718b67f140d339120873dbe7e1b2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tm_subst_tm_tm_var_neq : forall a x y, x <> y -> tm_subst_tm_tm a y (a_Var_f x) = (a_Var_f x).",
            "VernacStartTheoremProof",
            "5be6889df90ff767941940268e3c671a7cb443e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (x == y).",
            "VernacExtend",
            "567b143b1f41eadbe834892c4513f2f36a0dfac1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma co_subst_co_co_var_neq : forall a x y, x <> y -> co_subst_co_co a y (g_Var_f x) = (g_Var_f x).",
            "VernacStartTheoremProof",
            "e78023cc1b7afcb967ad322b4663ee9873e4b93c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (x == y).",
            "VernacExtend",
            "567b143b1f41eadbe834892c4513f2f36a0dfac1"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite tm_subst_tm_tm_var co_subst_co_co_var.",
            "VernacExtend",
            "1e2ec089e298367399db165c60483ba556b83922"
        ],
        [
            "Hint Rewrite tm_subst_tm_tm_open_tm_wrt_tm_var : subst_open_var.",
            "VernacExtend",
            "49f8f1b058e76c5cebac5f19f2183be4a2484230"
        ],
        [
            "Hint Rewrite tm_subst_tm_tm_open_tm_wrt_co_var : subst_open_var.",
            "VernacExtend",
            "eddebc8d41b5a6a3e5ad8d34ba12685854d415cc"
        ],
        [
            "Hint Rewrite tm_subst_tm_co_open_co_wrt_tm_var : subst_open_var.",
            "VernacExtend",
            "1eca1f8a0284126cccfca5534464e168d4dce8f8"
        ],
        [
            "Hint Rewrite tm_subst_tm_co_open_co_wrt_co_var : subst_open_var.",
            "VernacExtend",
            "851dcde4dd90d870b0b7fd519e973f14465b1349"
        ],
        [
            "Hint Rewrite co_subst_co_co_open_co_wrt_co_var : subst_open_var.",
            "VernacExtend",
            "badebe7397a8b4c2e91a9f882ec9a1044d90bede"
        ],
        [
            "Hint Rewrite co_subst_co_co_open_co_wrt_tm_var : subst_open_var.",
            "VernacExtend",
            "459d6d600697eb204ee226d64ad6f0751e49392d"
        ],
        [
            "Hint Rewrite co_subst_co_tm_open_tm_wrt_co_var : subst_open_var.",
            "VernacExtend",
            "1d1d60da7fa018f03cdc98c43508a906a74fa09e"
        ],
        [
            "Hint Rewrite co_subst_co_tm_open_tm_wrt_tm_var : subst_open_var.",
            "VernacExtend",
            "b71b0f5326a56c6846738ddf14489b9127b211c8"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_tm_open_tm_wrt_tm_var : open_subst_var.",
            "VernacExtend",
            "44dcfbe593d6cd002e674eed6ce355618368a7d0"
        ],
        [
            "Hint Rewrite <- co_subst_co_tm_open_tm_wrt_tm_var : open_subst_var.",
            "VernacExtend",
            "a2d9cec86198d8521e537902e2c0c8834681d596"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_tm_open_tm_wrt_co_var : open_subst_var.",
            "VernacExtend",
            "3f6bbdab56b5989180ad5c877ec23d4dedb3673f"
        ],
        [
            "Hint Rewrite <- co_subst_co_co_open_co_wrt_co_var : open_subst_var.",
            "VernacExtend",
            "95a257316bfa59e6dfe564b958d20a5d30449053"
        ],
        [
            "Hint Rewrite tm_subst_tm_tm_open_tm_wrt_tm : subst_open.",
            "VernacExtend",
            "9388ff23d23d8e39fde8187d926a5f1d118853d5"
        ],
        [
            "Hint Rewrite tm_subst_tm_tm_open_tm_wrt_co : subst_open.",
            "VernacExtend",
            "ca697a7c57c1cfbb90176961d3a5a37e867a8ba6"
        ],
        [
            "Hint Rewrite tm_subst_tm_co_open_co_wrt_tm : subst_open.",
            "VernacExtend",
            "6234d1b4c0ca328ad195e8f64622d7ea3f974090"
        ],
        [
            "Hint Rewrite tm_subst_tm_co_open_co_wrt_co : subst_open.",
            "VernacExtend",
            "20d98446eaed6578b5feaa8b153116521c5eadaa"
        ],
        [
            "Hint Rewrite co_subst_co_co_open_co_wrt_co : subst_open.",
            "VernacExtend",
            "d0f7bac8eb3bec66f42169ebed69a5532f35474d"
        ],
        [
            "Hint Rewrite co_subst_co_co_open_co_wrt_tm : subst_open.",
            "VernacExtend",
            "2d29b42ec52e5389b6eeeee795d53ef579612416"
        ],
        [
            "Hint Rewrite co_subst_co_tm_open_tm_wrt_co : subst_open.",
            "VernacExtend",
            "f7926d8ad63e98ef4b80ad504dc43194f1409540"
        ],
        [
            "Hint Rewrite co_subst_co_tm_open_tm_wrt_tm : subst_open.",
            "VernacExtend",
            "76db3811abd2d074c7d6e920b19f12324cd71ca6"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_tm_open_tm_wrt_tm : open_subst.",
            "VernacExtend",
            "4c54900d76b9b88c18290aeef40e7e9edfc966ca"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_tm_open_tm_wrt_co : open_subst.",
            "VernacExtend",
            "abedfdfbd00a5178ef52483c3a22d1472c3143ee"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_co_open_co_wrt_tm : open_subst.",
            "VernacExtend",
            "d5991f8756591dfbd7a48cacdaf7827fe1f91cc6"
        ],
        [
            "Hint Rewrite <- tm_subst_tm_co_open_co_wrt_co : open_subst.",
            "VernacExtend",
            "96d0d0b75e12cbd285d79e2b458a81cbdd5fd6e1"
        ],
        [
            "Hint Rewrite <- co_subst_co_co_open_co_wrt_co : open_subst.",
            "VernacExtend",
            "a0b5fcae125ff0e1ab983d9c21dd852f167fa302"
        ],
        [
            "Hint Rewrite <- co_subst_co_co_open_co_wrt_tm : open_subst.",
            "VernacExtend",
            "0824e75528038404b67a5b4f106c0a671896db33"
        ],
        [
            "Hint Rewrite <- co_subst_co_tm_open_tm_wrt_co : open_subst.",
            "VernacExtend",
            "2749d48f4635c20abd5cfdfc4fb4bda03054e708"
        ],
        [
            "Hint Rewrite <- co_subst_co_tm_open_tm_wrt_tm : open_subst.",
            "VernacExtend",
            "6bfb163e623c381edf2d40ab91505b88671cec34"
        ],
        [
            "Ltac apply_lc_exists x := pick fresh x; ( apply lc_a_Abs_exists with (x1 := x) || apply lc_a_Pi_exists with (x1 := x) || apply lc_a_CPi_exists with (c1 := x) || apply lc_a_CAbs_exists with (c1 := x) || apply lc_a_UAbs_exists with (x1:= x) || apply lc_a_UCAbs_exists with (c1 := x) || apply lc_g_PiCong_exists with (x1 := x) || apply lc_g_AbsCong_exists with (x1 := x) || apply lc_g_CPiCong_exists with (c1 := x) || apply lc_g_CAbsCong_exists with (c1 := x) || fail \"invalid case for apply_lc_exists\" ); eauto 2.",
            "VernacExtend",
            "175541ba5eda7425c75223d028dc50ab44a6fc0d"
        ],
        [
            "Ltac lc_solve_binds := match goal with | [ H : binds ?x ?s nil |- _ ] => inversion H; clear H | [ H : binds _ ?s ([(_,_)] ++ _) |- _ ?s] => destruct (binds_cons_1 _ _ _ _ _ _ H); basic_solve | [ b : binds ?x _ ?G, H : \u2200 (x' : atom) _, binds x' _ ?G \u2192 _ |- _] => by apply H in b; inversion b; try done; match goal with | [H' : lc_constraint _ |- _] => inversion H' ; clear H' | [H' : lc_tm _ |- _] => inversion H' ; clear H' end end.",
            "VernacExtend",
            "216e0503b77baf429ba8e7182e7b458b5815541f"
        ],
        [
            "Ltac lc_inversion c := repeat match goal with | [ H : forall x, (x `in` ?L -> False) -> lc_tm _ /\\ _ |- _ ] => destruct (H c ltac:(auto)); split_hyp; clear H | [ H : lc_constraint (_ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_Abs _ _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_UAbs _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_App _ _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_Pi _ _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_Conv _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_CPi _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_CAbs _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_UCAbs _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_CApp _ _) |- _ ] => inversion H; clear H | [ H : lc_tm (a_Case _ _) |- _ ] => inversion H; clear H end.",
            "VernacExtend",
            "60e1b47827bb931addb24319863fc2338e3475a6"
        ],
        [
            "Ltac apply_lc_body := match goal with | |- lc_tm (open_tm_wrt_tm ?a ?b) => eapply lc_body_tm_wrt_tm; auto | |- lc_tm (open_tm_wrt_co ?a ?b) => eapply lc_body_tm_wrt_co; auto end.",
            "VernacExtend",
            "82fd0201b65c46d1d51ac11cbede98a068eabb39"
        ],
        [
            "Lemma co_subst_co_tm_lc_tm_inverse : \u2200 (g1 : co) (c1 : covar), lc_co g1 -> (forall A, lc_tm A -> forall XX, A = (co_subst_co_tm g1 c1 XX) -> lc_tm XX) /\\ (forall b1, lc_brs b1 -> forall XX, b1 = (co_subst_co_brs g1 c1 XX) -> lc_brs XX) /\\ (forall co, lc_co co -> forall XX, co = (co_subst_co_co g1 c1 XX) -> lc_co XX) /\\ (forall phi, lc_constraint phi -> forall XX, phi = (co_subst_co_constraint g1 c1 XX) -> lc_constraint XX).",
            "VernacStartTheoremProof",
            "47d3a25d94af5861bbeb0733c5890378aeb1b7db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lc_tm_lc_brs_lc_co_lc_constraint_mutind.",
            "VernacExtend",
            "ab2de20ef8e8c6987c9a581f130615408f63ce44"
        ],
        [
            "all: intros.",
            "VernacExtend",
            "da7d133119f9e7523187beaea9a34348cbaa85c2"
        ],
        [
            "all: match goal with | [H0 : _ = _ ?g1 ?c1 ?XX |- _] => destruct XX; simpl in H0; inversion H0; clear H0; subst; auto end.",
            "VernacExtend",
            "fb803468d69a6159e7ebc5377ae001c57db02e52"
        ],
        [
            "all: try apply_lc_exists xc; try match goal with | [ H1 : \u2200 x XX, _ (_ ?g1 ?c1 ?XX2) (_ x) = _ ?g1 ?c1 XX \u2192 _ XX |- _ ] => eapply (H1 xc); autorewrite with subst_open; auto end.",
            "VernacExtend",
            "9765f98c4efa6a27d2300568d7a8feafd1686484"
        ],
        [
            "all: try rewrite co_subst_co_co_var_neq; auto.",
            "VernacExtend",
            "ac8068ac8d883f8ba98d7fcefb13a316eba3b204"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac invert_syntactic_equality := repeat match goal with | [ H : a_Var_f _ = a_Var_f _ |- _ ] => inversion H; subst; clear H | [ H : a_Abs _ _ = a_Abs _ _ |- _ ] => inversion H; subst; clear H | [ H : a_UAbs _ _ = a_UAbs _ _ |- _ ] => inversion H; subst; clear H | [ H : a_Pi _ _ _ = a_Pi _ _ _ |- _ ] => inversion H; subst; clear H | [ H : a_App _ _ _ = a_App _ _ _ |- _ ] => inversion H; subst; clear H | [ H : a_Fam _ = a_Fam _ |- _ ] => inversion H; subst; clear H | [ H : a_Const _ = a_Const _ |- _ ] => inversion H; subst; clear H | [ H : a_Conv _ _ = a_Conv _ _ |- _ ] => inversion H; subst; clear H | [ H : a_UCAbs _ = a_UCAbs _ |- _ ] => inversion H; subst; clear H | [ H : a_CAbs + _ = a_CAbs _ _ |- _ ] => inversion H; subst; clear H | [ H : a_CApp _ _ = a_CApp _ _ |- _ ] => inversion H; subst; clear H | [ H : a_CPi _ _ = a_CPi _ _ |- _ ] => inversion H; subst; clear H | [ H : Eq _ _ _ = Eq _ _ _ |- _ ] => inversion H; subst; clear H end.",
            "VernacExtend",
            "c7366213875f1708d65723a6c8466118246559b3"
        ],
        [
            "Ltac ann_invert_clear := match goal with | H : AnnTyping _ a_Star _ |- _ => inversion H; subst; clear H | H : AnnTyping _ (_ _) _ |- _ => inversion H; subst; clear H | H : AnnPropWff _ _ |- _ => inversion H; subst; clear H | H : AnnIso _ _ (_ _) _ _ |- _ => inversion H; subst; clear H | H : AnnDefEq _ _ (_ _) _ _ |- _ => inversion H; subst; clear H | H : AnnCtx ([(_,_)] ++ _) |- _ => inversion H; subst; clear H | H : AnnCtx (_ :: _) |- _ => inversion H; subst; clear H end.",
            "VernacExtend",
            "247f753e3b34b59a9d24a27ef4ebd0397ebfe736"
        ],
        [
            "Lemma lc_swap : forall x x0 a, x `notin` fv_tm_tm_tm a -> lc_tm (open_tm_wrt_tm a (a_Var_f x)) -> lc_tm (open_tm_wrt_tm a (a_Var_f x0)).",
            "VernacStartTheoremProof",
            "88eb3529169ac71898ff618121f897e340b1b120"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (tm_subst_tm_tm_intro x); auto with lngen.",
            "VernacExtend",
            "e325f4775b7c21b7427ddc88f63b3031898747f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fv_swap : forall x x0 a, x `notin` fv_tm_tm_tm a -> x0 `notin` fv_tm_tm_tm a -> x `notin` fv_tm_tm_tm (open_tm_wrt_tm a (a_Var_f x)) -> x0 `notin` fv_tm_tm_tm (open_tm_wrt_tm a (a_Var_f x0)).",
            "VernacStartTheoremProof",
            "91a66472e4df54a0a6b38f089f397f8219120dff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (x == x0); subst; auto; rewrite (tm_subst_tm_tm_intro x); autorewrite with lngen; auto; rewrite fv_tm_tm_tm_open_tm_wrt_tm_upper; simpl; fsetdec.",
            "VernacExtend",
            "d88d7f8337159645536d1196c63644f627deff34"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Scheme typing_ind' := Induction for Typing Sort Prop with wff_ind' := Induction for PropWff Sort Prop with iso_ind' := Induction for Iso Sort Prop with defeq_ind' := Induction for DefEq Sort Prop with ctx_ind' := Induction for Ctx Sort Prop.",
            "VernacScheme",
            "1bd36f268ada96df504fb3903e7d83632270fb5c"
        ],
        [
            "Combined Scheme typing_wff_iso_defeq_mutual from typing_ind', wff_ind', iso_ind', defeq_ind', ctx_ind'.",
            "VernacCombinedScheme",
            "1297d154e14538a9ce70cb17ffcdfb986e4979e7"
        ],
        [
            "Scheme ann_typing_ind' := Induction for AnnTyping Sort Prop with ann_wff_ind' := Induction for AnnPropWff Sort Prop with ann_iso_ind' := Induction for AnnIso Sort Prop with ann_defeq_ind' := Induction for AnnDefEq Sort Prop with ann_ctx_ind' := Induction for AnnCtx Sort Prop.",
            "VernacScheme",
            "e47dee73989dd5606bb3b050903cae1517ce30d6"
        ],
        [
            "Combined Scheme ann_typing_wff_iso_defeq_mutual from ann_typing_ind', ann_wff_ind', ann_iso_ind', ann_defeq_ind', ann_ctx_ind'.",
            "VernacCombinedScheme",
            "825167e382eab13b7ff50329e227c650e5a93ebc"
        ],
        [
            "Scheme CoercedValue_ind' := Induction for CoercedValue Sort Prop with Value_ind' := Induction for Value Sort Prop.",
            "VernacScheme",
            "04e6e6c6a901787bc776b6a3f45aaa64d523a961"
        ],
        [
            "Combined Scheme CoercedValue_Value_mutual from CoercedValue_ind', Value_ind'.",
            "VernacCombinedScheme",
            "3f9f48c73b6708addee2f7ad1ef77b899e66ee59"
        ],
        [
            "Ltac ext_induction CON := apply typing_wff_iso_defeq_mutual; [ pose CON := E_Star | pose CON := E_Var | pose CON := E_Pi | pose CON := E_Abs | pose CON := E_App | pose CON := E_IApp | pose CON := E_Conv | pose CON := E_CPi | pose CON := E_CAbs | pose CON := E_CApp | pose CON := E_Const | pose CON := E_Fam | pose CON := E_Wff | pose CON := E_PropCong | pose CON := E_IsoConv | pose CON := E_CPiFst | pose CON := E_Assn | pose CON := E_Refl | pose CON := E_Sym | pose CON := E_Trans | pose CON := E_Beta | pose CON := E_PiCong | pose CON := E_AbsCong | pose CON := E_AppCong | pose CON := E_IAppCong | pose CON := E_PiFst | pose CON := E_PiSnd | pose CON := E_CPiCong | pose CON := E_CAbsCong | pose CON := E_CAppCong | pose CON := E_CPiSnd | pose CON := E_Cast | pose CON := E_EqConv | pose CON := E_IsoSnd | pose CON := E_EtaRel | pose CON := E_EtaIrrel | pose CON := E_EtaC | pose CON := E_Empty | pose CON := E_ConsTm | pose CON := E_ConsCo ].",
            "VernacExtend",
            "c0f2fd5405ceb7412776985afd02574e24f49962"
        ],
        [
            "Ltac ann_induction CON := apply ann_typing_wff_iso_defeq_mutual; [ pose CON := An_Star | pose CON := An_Var | pose CON := An_Pi | pose CON := An_Abs | pose CON := An_App | pose CON := An_Conv | pose CON := An_CPi | pose CON := An_CAbs | pose CON := An_CApp | pose CON := An_Const | pose CON := An_Fam | pose CON := An_Wff | pose CON := An_PropCong | pose CON := An_CPiFst | pose CON := An_IsoSym | pose CON := An_IsoConv | pose CON := An_Assn | pose CON := An_Refl | pose CON := An_EraseEq | pose CON := An_Sym | pose CON := An_Trans | pose CON := An_Beta | pose CON := An_PiCong | pose CON := An_AbsCong | pose CON := An_AppCong | pose CON := An_PiFst | pose CON := An_PiSnd | pose CON := An_CPiCong | pose CON := An_CAbsCong | pose CON := An_CAppCong | pose CON := An_CPiSnd | pose CON := An_Cast | pose CON := An_IsoSnd | pose CON := An_Eta | pose CON := An_EtaC | pose CON := An_Empty | pose CON := An_ConsTm | pose CON := An_ConsCo ].",
            "VernacExtend",
            "454cb46d87e6f270fdbd89b71a6bdabbbf286057"
        ],
        [
            "Ltac ensure_case C := match goal with [ CON := C : ?A |- _ ] => idtac end.",
            "VernacExtend",
            "53697d4bdfbb1f1c10769059dcad8097dcdd49b6"
        ],
        [
            "Ltac gather_atoms ::= let A := gather_atoms_with (fun x : vars => x) in let B := gather_atoms_with (fun x : var => {{ x }}) in let C1 := gather_atoms_with (fun x : context => dom x) in let D1 := gather_atoms_with (fun x => fv_tm_tm_tm x) in let D2 := gather_atoms_with (fun x => fv_tm_tm_co x) in let D3 := gather_atoms_with (fun x => fv_tm_tm_constraint x) in let D4 := gather_atoms_with (fun x => fv_tm_tm_sort x) in let D5 := gather_atoms_with (fun x => fv_tm_tm_brs x) in let D6 := gather_atoms_with (fun x => fv_co_co_tm x) in let D7 := gather_atoms_with (fun x => fv_co_co_co x) in let D8 := gather_atoms_with (fun x => fv_co_co_constraint x) in let D9 := gather_atoms_with (fun x => fv_co_co_sort x) in let D10 := gather_atoms_with (fun x => fv_co_co_brs x) in constr:(A \\u B \\u C1 \\u D1 \\u D2 \\u D3 \\u D4 \\u D5 \\u D6 \\u D7 \\u D8 \\u D9 \\u D10).",
            "VernacExtend",
            "2d404cdb98f6052e5d31923d2b3076a7fd990b64"
        ],
        [
            "Ltac rewrite_body := match goal with | [ e : \u2200 x : atom, (x `in` ?L \u2192 False) \u2192 open_tm_wrt_tm _ (a_Var_f x) = open_tm_wrt_tm _ (_ (a_Var_f x) _) |- _ ] => rewrite e; auto | [ e : \u2200 x : atom, (x `notin` ?L) \u2192 open_tm_wrt_tm _ (a_Var_f x) = open_tm_wrt_tm _ (_ (a_Var_f x) _) |- _ ] => rewrite e; auto | [ e : \u2200 c : atom, (c `notin` ?L) \u2192 open_tm_wrt_co _ (g_Var_f c) = open_tm_wrt_co _ (g_Cast (g_Var_f c) (g_Sym _)) |- _ ] => rewrite e; auto | [ e : \u2200 x : atom, (x `in` ?L \u2192 False) \u2192 _ _ (a_Var_f x) = _ _ _ (a_Var_f x) |- _ ] => rewrite e; auto | [ e : \u2200 x : atom, (x `in` ?L \u2192 False) \u2192 _ _ (a_Var_f x) = _ _ _ (a_Bullet) |- _ ] => rewrite e; auto | [ e : \u2200 x : atom, (x `notin` ?L) \u2192 _ _ (a_Var_f x) = _ _ _ (a_Var_f x) |- _ ] => rewrite e; auto | [ e : \u2200 x : atom, (x `notin` ?L) \u2192 _ _ (a_Var_f x) = _ _ _ (a_Bullet) |- _ ] => rewrite e; auto | [ e: \u2200 c : atom, (c `in` ?L \u2192 False) \u2192 _ _ (g_Var_f c) = a_CApp _ _ |- _ ] => rewrite e; auto | [ e: \u2200 c : atom, (c `notin` ?L) \u2192 _ _ (g_Var_f c) = a_CApp _ _ |- _ ] => rewrite e; auto end.",
            "VernacExtend",
            "b8c345c4ec6465d7fe126ce2f00d65a5b26438a0"
        ],
        [
            "Ltac lc_solve := let c := fresh in try lc_solve_binds; try apply_lc_exists c; lc_inversion c; auto; try rewrite_body; try apply_lc_body; eauto with lc.",
            "VernacExtend",
            "ae129fa2f3db01ed5d9fa832e452cc0b095dffe4"
        ],
        [
            "Hint Resolve lc_a_Pi_exists lc_a_CPi_exists lc_a_Abs_exists lc_a_CAbs_exists lc_a_UAbs_exists.",
            "VernacHints",
            "d9251d370ee3250eb46ff107e0f417921e0a1886"
        ],
        [
            "Hint Resolve lc_body_tm_wrt_tm lc_body_tm_wrt_co.",
            "VernacHints",
            "8364bf1d63adb58519da2eba53bc0bfd4b6a67e6"
        ],
        [
            "Lemma rho_swap : forall rho x x0 a, x `notin` fv_tm_tm_tm a -> x0 `notin` fv_tm_tm_tm a -> RhoCheck rho x (open_tm_wrt_tm a (a_Var_f x)) -> RhoCheck rho x0 (open_tm_wrt_tm a (a_Var_f x0)).",
            "VernacStartTheoremProof",
            "402443b0e7f455b4698351aacbacd6c0fa34e7b7"
        ],
        [
            "intros rho x x0 a F1 F2 H0.",
            "VernacExtend",
            "30941d7d1c4b8424c3d02b8d8f78a62df9ffc2d7"
        ],
        [
            "inversion H0; subst; constructor.",
            "VernacExtend",
            "4207689fe3d48449c2db6e4c54c2f7463d72e7bd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eapply fv_swap with (x:=x); eauto.",
            "VernacExtend",
            "b786c01f5cb192167cb85b677c68843f3e19ada6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eta_swap: forall x y a' b rho, x `notin` fv_tm_tm_tm a' \\u fv_tm_tm_tm b -> open_tm_wrt_tm a' (a_Var_f x) = a_App b rho (a_Var_f x) -> open_tm_wrt_tm a' (a_Var_f y) = a_App b rho (a_Var_f y).",
            "VernacStartTheoremProof",
            "fc3ff2b8bd05d052bcb02476e4b8d225198c9c3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (tm_subst_tm_tm_intro x); auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite tm_subst_tm_tm_fresh_eq; auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "destruct eq_dec.",
            "VernacExtend",
            "6a68008f0f89732a7839f0914570fd9846b1cb20"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eta_swap_irrel: forall x y a' b, x `notin` fv_tm_tm_tm a' \\u fv_tm_tm_tm b -> open_tm_wrt_tm a' (a_Var_f x) = a_App b Irrel a_Bullet -> open_tm_wrt_tm a' (a_Var_f y) = a_App b Irrel a_Bullet.",
            "VernacStartTheoremProof",
            "eea2564cbc001ba0e2802c1db09c95fe8470a735"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (tm_subst_tm_tm_intro x); auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite tm_subst_tm_tm_fresh_eq; auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eta_swap_c: forall x y a' b, x `notin` fv_co_co_tm a' \\u fv_co_co_tm b -> open_tm_wrt_co a' (g_Var_f x) = a_CApp b g_Triv -> open_tm_wrt_co a' (g_Var_f y) = a_CApp b g_Triv.",
            "VernacStartTheoremProof",
            "48ca1929adcfd1eba825214c3de57f56644a14c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (co_subst_co_tm_intro x); auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite co_subst_co_tm_fresh_eq; auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac auto_rew_env := multimatch goal with | [ |- context [([(?x, ?T)] ++ ?G1 ++ ?G2 ++ ?G3)] ] => rewrite_env (((x ~ (T)) ++ G1) ++ G2 ++ G3) end.",
            "VernacExtend",
            "a79ccec630f421c1a2e66cebcc518239d0e1dcc0"
        ],
        [
            "Ltac E_pick_fresh x := match goal with | [ |- Typing _ ?shape _ ] => let v := match shape with | a_Pi _ _ _ => E_Pi | a_UAbs _ _ => E_Abs | a_CPi _ _ => E_CPi | a_CAbs _ _ => E_CAbs | a_UCAbs _ => E_CAbs end in pick fresh x and apply v | [ |- DefEq _ _ ?shape ?s2 _ ] => let v := match shape with | a_Pi _ _ _ => E_PiCong | a_UAbs Rel _ => match s2 with | a_UAbs _ _ => E_AbsCong | _ => E_EtaRel end | a_UAbs Irrel _ => match s2 with | a_UAbs _ _ => E_AbsCong | _ => E_EtaIrrel end | a_CPi _ _ => E_CPiCong | a_CAbs _ _ => E_CAbsCong | a_UCAbs _ => match s2 with | a_UCAbs _ => E_CAbsCong | _ => E_EtaC end end in pick fresh x and apply v end.",
            "VernacExtend",
            "d3c4420446ae96e994fb6ebe1121e366e87bfce0"
        ],
        [
            "Ltac Par_pick_fresh x := match goal with | [ |- Par _ _ ?shape ?s2 ] => let v := match shape with | a_Pi _ _ _ => Par_Pi | a_UAbs Rel _ => match s2 with | a_UAbs _ _ => Par_Abs | _ => Par_Eta end | a_UAbs Irrel _ => match s2 with | a_UAbs _ _ => Par_Abs | _ => Par_EtaIrrel end | a_UAbs _ _ => Par_Abs | a_CPi _ _ => Par_CPi | a_CAbs _ _ => Par_CAbs | a_UCAbs _ => match s2 with | a_UCAbs _ => Par_CAbs | _ => Par_EtaC end end in pick fresh x and apply v end.",
            "VernacExtend",
            "cfd401ae04277bbcd53550321fee0ceeb4185a7a"
        ],
        [
            "Ltac An_pick_fresh x := let shape := match goal with | [ |- AnnTyping _ ?shape _ ] => shape | [ |- AnnDefEq _ _ ?shape _ _ ] => shape end in let ctor := match shape with | a_Pi _ _ _ => An_Pi | a_Abs _ _ _ => An_Abs | a_CPi _ _ => An_CPi | a_CAbs _ _ => An_CAbs | g_PiCong _ _ _ => An_PiCong | g_AbsCong _ _ _ => An_AbsCong | g_CPiCong _ _ => An_CPiCong | g_CAbsCong _ _ _ => An_CAbsCong | g_Eta _ => An_Eta end in pick fresh x and apply ctor.",
            "VernacExtend",
            "4e7339bc3817c797ee543207624cde3da4c939fe"
        ],
        [
            "Ltac RhoCheck_inversion y := match goal with | [ K : \u2200 x : atom, x `notin` ?L \u2192 RhoCheck ?rho x ?b |- _ ] => move: (K y ltac:(auto)); inversion 1; subst; clear K | [ K : \u2200 x : atom, (x `in` ?L -> False) \u2192 RhoCheck ?rho x ?b |- _ ] => move: (K y ltac:(auto)); inversion 1; subst; clear K end.",
            "VernacExtend",
            "783e1168277c52ab55145b4b6c551782cfb4db4c"
        ],
        [
            "Lemma lc_open_switch_co : forall g t, lc_co g -> lc_tm (open_tm_wrt_co t g_Triv) -> lc_tm (open_tm_wrt_co t g).",
            "VernacStartTheoremProof",
            "533bcb7657ac26f57d03e0feb3e371404364f58b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pick fresh c.",
            "VernacExtend",
            "6e0de5e8bb8e8e98c335ad1bd11321de685ac678"
        ],
        [
            "rewrite (co_subst_co_tm_intro c); auto.",
            "VernacExtend",
            "9e2b92fba484264671c209dbe9b51f8bf106fcab"
        ],
        [
            "eapply co_subst_co_tm_lc_tm; auto.",
            "VernacExtend",
            "695e81e6445041d731c7d1a2b077a0d41bff9721"
        ],
        [
            "rewrite (co_subst_co_tm_intro c) in H0.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "eapply (@co_subst_co_tm_lc_tm_inverse g_Triv c); eauto 2.",
            "VernacExtend",
            "2216eb163ef0d4aadecf5562575a6750491ef8cb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lc_open_switch_co.",
            "VernacHints",
            "a613e8f922547f0c444a530b4c03a92d8573ee1b"
        ],
        [
            "Lemma tm_subst_cast : forall a x g, tm_subst_tm_tm a x (a_Conv (a_Var_f x) g) = a_Conv a (tm_subst_tm_co a x g).",
            "VernacStartTheoremProof",
            "2ecd75ddd62cba866137486cb8b77c9fdafa412a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (x == x).",
            "VernacExtend",
            "2a2f17e0574f718b67f140d339120873dbe7e1b2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "done.",
            "VernacExtend",
            "095062641163274af3d1e226cbd993f0dbb6e000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite tm_subst_cast.",
            "VernacExtend",
            "9c4ff7e77edf23e3ea02c975713604e353a5b035"
        ]
    ],
    "proofs": [
        {
            "name": "tm_subst_tm_tm_var",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (x == x).",
                        "VernacExtend",
                        "2a2f17e0574f718b67f140d339120873dbe7e1b2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "done.",
                        "VernacExtend",
                        "095062641163274af3d1e226cbd993f0dbb6e000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "co_subst_co_co_var",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (x == x).",
                        "VernacExtend",
                        "2a2f17e0574f718b67f140d339120873dbe7e1b2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "done.",
                        "VernacExtend",
                        "095062641163274af3d1e226cbd993f0dbb6e000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tm_subst_tm_tm_var_neq",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (x == y).",
                        "VernacExtend",
                        "567b143b1f41eadbe834892c4513f2f36a0dfac1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "co_subst_co_co_var_neq",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (x == y).",
                        "VernacExtend",
                        "567b143b1f41eadbe834892c4513f2f36a0dfac1"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lc_swap",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tm_subst_tm_tm_intro x); auto with lngen.",
                        "VernacExtend",
                        "e325f4775b7c21b7427ddc88f63b3031898747f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fv_swap",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (x == x0); subst; auto; rewrite (tm_subst_tm_tm_intro x); autorewrite with lngen; auto; rewrite fv_tm_tm_tm_open_tm_wrt_tm_upper; simpl; fsetdec.",
                        "VernacExtend",
                        "d88d7f8337159645536d1196c63644f627deff34"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rho_swap",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros rho x x0 a F1 F2 H0.",
                        "VernacExtend",
                        "30941d7d1c4b8424c3d02b8d8f78a62df9ffc2d7"
                    ]
                },
                {
                    "command": [
                        "inversion H0; subst; constructor.",
                        "VernacExtend",
                        "4207689fe3d48449c2db6e4c54c2f7463d72e7bd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "eapply fv_swap with (x:=x); eauto.",
                        "VernacExtend",
                        "b786c01f5cb192167cb85b677c68843f3e19ada6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eta_swap",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tm_subst_tm_tm_intro x); auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite tm_subst_tm_tm_fresh_eq; auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "destruct eq_dec.",
                        "VernacExtend",
                        "6a68008f0f89732a7839f0914570fd9846b1cb20"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "done.",
                        "VernacExtend",
                        "095062641163274af3d1e226cbd993f0dbb6e000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eta_swap_irrel",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tm_subst_tm_tm_intro x); auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite tm_subst_tm_tm_fresh_eq; auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eta_swap_c",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (co_subst_co_tm_intro x); auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite co_subst_co_tm_fresh_eq; auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lc_open_switch_co",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pick fresh c.",
                        "VernacExtend",
                        "6e0de5e8bb8e8e98c335ad1bd11321de685ac678"
                    ]
                },
                {
                    "command": [
                        "rewrite (co_subst_co_tm_intro c); auto.",
                        "VernacExtend",
                        "9e2b92fba484264671c209dbe9b51f8bf106fcab"
                    ]
                },
                {
                    "command": [
                        "eapply co_subst_co_tm_lc_tm; auto.",
                        "VernacExtend",
                        "695e81e6445041d731c7d1a2b077a0d41bff9721"
                    ]
                },
                {
                    "command": [
                        "rewrite (co_subst_co_tm_intro c) in H0.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "eapply (@co_subst_co_tm_lc_tm_inverse g_Triv c); eauto 2.",
                        "VernacExtend",
                        "2216eb163ef0d4aadecf5562575a6750491ef8cb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tm_subst_cast",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (x == x).",
                        "VernacExtend",
                        "2a2f17e0574f718b67f140d339120873dbe7e1b2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "done.",
                        "VernacExtend",
                        "095062641163274af3d1e226cbd993f0dbb6e000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}