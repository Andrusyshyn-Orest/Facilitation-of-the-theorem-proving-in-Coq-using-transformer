{
    "filename": "ex1_auto.v",
    "coq_project": "cours-de-coq",
    "vernac_cmds": [
        [
            "Theorem trivial : forall A : Prop, A -> A.",
            "VernacStartTheoremProof",
            "0201a2a5045462e45e7b8667ec1d94d978deeaf3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_commutative : forall A B : Prop, A /\\ B -> B /\\ A.",
            "VernacStartTheoremProof",
            "0fc4f1b4ff1d91a2cb34cbc3e4be642272936ada"
        ],
        [
            "intros A B H'; elim H'; auto.",
            "VernacExtend",
            "c39fbc072327006423adc004d5338245a19d7643"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_commutative : forall A B : Prop, A \\/ B -> B \\/ A.",
            "VernacStartTheoremProof",
            "2ce2a523a13d867ced288a406c37bd24acf60514"
        ],
        [
            "intros A B H'; elim H'; auto.",
            "VernacExtend",
            "c39fbc072327006423adc004d5338245a19d7643"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mp : forall A B : Prop, A -> (A -> B) -> B.",
            "VernacStartTheoremProof",
            "720d3120fe97bb04bfb830c9d213541d1d1ee1eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem S : forall A B C : Prop, (A -> B -> C) -> (A -> B) -> A -> C.",
            "VernacStartTheoremProof",
            "721490fb296e0589ff8b7194b2c5035f1de6efae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Praeclarum : forall x y z t : Prop, (x -> z) /\\ (y -> t) -> x /\\ y -> z /\\ t.",
            "VernacStartTheoremProof",
            "c28af5803ce5db21e961c8f88960165a50de3c4b"
        ],
        [
            "intros x y z t H'; elim H'.",
            "VernacExtend",
            "6400eb68212e2d31f0ad9070fafb52b98f8c50ca"
        ],
        [
            "intros H'0 H'1 H'2; elim H'2.",
            "VernacExtend",
            "f917823b2364a89aea197ae59a0c96791b680cd0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem resolution : forall (p q : Type -> Prop) (a : Type), p a -> (forall x : Type, p x -> q x) -> q a.",
            "VernacStartTheoremProof",
            "692763d0581383cda6de6aa13a930cf4dae8cf7a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Witnesses : forall (a b : Type) (p : Type -> Prop), p a \\/ p b -> exists x : Type, p x.",
            "VernacStartTheoremProof",
            "9daecd8ad0e293ee06d164455fac256f8cbb40e1"
        ],
        [
            "intros a b p h; elim h; [ intro H'; clear h; try exact H' | clear h; intro H' ].",
            "VernacExtend",
            "4f3c83e6441d15c5f0067163841a94bf484792b0"
        ],
        [
            "exists a; try assumption.",
            "VernacExtend",
            "e0e20ce212c1c6d869f01cdb37f5611ebbd67b4d"
        ],
        [
            "exists b; try assumption.",
            "VernacExtend",
            "ef2c81c655e7d1c6f62cc3d768e7fc3fad42b07d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Simple : forall (A : Set) (R : A -> A -> Prop), (forall x y z : A, R x y /\\ R y z -> R x z) -> (forall x y : A, R x y -> R y x) -> forall x : A, (exists y : A, R x y) -> R x x.",
            "VernacStartTheoremProof",
            "cef4682f511697135734bbc13caf24bc7d5784e1"
        ],
        [
            "intros A R H' H'0 x H'1; try assumption.",
            "VernacExtend",
            "eb87a5fcbf7e164b32f69d4982200d4c6e0f7715"
        ],
        [
            "elim H'1; intros y E; clear H'1; try exact E.",
            "VernacExtend",
            "5cf556df1eae5a5a4a854246318bf2986b9a8dc6"
        ],
        [
            "apply H' with y; auto.",
            "VernacExtend",
            "35615f5b1e00eff76266155fe5d10456c253ff87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_not : forall a : Prop, a -> ~ ~ a.",
            "VernacStartTheoremProof",
            "2f3066f408d5e48effcc6c182a367131e5932649"
        ],
        [
            "unfold not in |- *; auto.",
            "VernacExtend",
            "d725a45300c7348567782332d57c37b47b2347c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mini_cases : forall x y : Prop, (x \\/ ~ y) /\\ y -> x.",
            "VernacStartTheoremProof",
            "334bcd5534cb9809874909c60ed07c115458350e"
        ],
        [
            "intros x y h; elim h; intros h0 H'; elim h0; [ clear h h0; intro H'0 | intro H'0; elim H'0; clear h h0; try assumption ]; auto.",
            "VernacExtend",
            "323e7f6a843f9bd9e5c2aa3d576b0cf93e9cfdc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Classical.",
            "VernacRequire",
            "4cc53198e8d48bbb9dcca109b0e59a015dd7a5bb"
        ],
        [
            "Theorem not_not_converse : forall a : Prop, ~ ~ a -> a.",
            "VernacStartTheoremProof",
            "394ec83559a197476c0be4b8e3e0e89cca98a832"
        ],
        [
            "intros a H'; try assumption; auto 10.",
            "VernacExtend",
            "19378e51e66f1215fe009c16e23644549b2cc3cb"
        ],
        [
            "generalize (classic a); intro h; elim h; [ intro H'0; clear h; try exact H'0 | clear h; intro H'0 ].",
            "VernacExtend",
            "c9baae22d3e124a373719f0c5d23d070a875dc78"
        ],
        [
            "elim H'; assumption.",
            "VernacExtend",
            "73e51cfc89f2776188da46f4e1bdbec0a203c959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_quite_classic : forall a : Prop, ~ ~ (a \\/ ~ a).",
            "VernacStartTheoremProof",
            "3643cb9e5fdce0a2eaa0c33125098383b1f248fe"
        ],
        [
            "unfold not in |- *; auto.",
            "VernacExtend",
            "d725a45300c7348567782332d57c37b47b2347c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Peirce : forall A B : Prop, ((((A -> B) -> A) -> A) -> B) -> B.",
            "VernacStartTheoremProof",
            "8a0c25c57cc2e96e6869a61d9b2a9a069046af19"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "trivial",
            "line_nb": 0,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_commutative",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros A B H'; elim H'; auto.",
                        "VernacExtend",
                        "c39fbc072327006423adc004d5338245a19d7643"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_commutative",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros A B H'; elim H'; auto.",
                        "VernacExtend",
                        "c39fbc072327006423adc004d5338245a19d7643"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mp",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Praeclarum",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros x y z t H'; elim H'.",
                        "VernacExtend",
                        "6400eb68212e2d31f0ad9070fafb52b98f8c50ca"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1 H'2; elim H'2.",
                        "VernacExtend",
                        "f917823b2364a89aea197ae59a0c96791b680cd0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resolution",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Witnesses",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros a b p h; elim h; [ intro H'; clear h; try exact H' | clear h; intro H' ].",
                        "VernacExtend",
                        "4f3c83e6441d15c5f0067163841a94bf484792b0"
                    ]
                },
                {
                    "command": [
                        "exists a; try assumption.",
                        "VernacExtend",
                        "e0e20ce212c1c6d869f01cdb37f5611ebbd67b4d"
                    ]
                },
                {
                    "command": [
                        "exists b; try assumption.",
                        "VernacExtend",
                        "ef2c81c655e7d1c6f62cc3d768e7fc3fad42b07d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Simple",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros A R H' H'0 x H'1; try assumption.",
                        "VernacExtend",
                        "eb87a5fcbf7e164b32f69d4982200d4c6e0f7715"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros y E; clear H'1; try exact E.",
                        "VernacExtend",
                        "5cf556df1eae5a5a4a854246318bf2986b9a8dc6"
                    ]
                },
                {
                    "command": [
                        "apply H' with y; auto.",
                        "VernacExtend",
                        "35615f5b1e00eff76266155fe5d10456c253ff87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; auto.",
                        "VernacExtend",
                        "d725a45300c7348567782332d57c37b47b2347c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mini_cases",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros x y h; elim h; intros h0 H'; elim h0; [ clear h h0; intro H'0 | intro H'0; elim H'0; clear h h0; try assumption ]; auto.",
                        "VernacExtend",
                        "323e7f6a843f9bd9e5c2aa3d576b0cf93e9cfdc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not_converse",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros a H'; try assumption; auto 10.",
                        "VernacExtend",
                        "19378e51e66f1215fe009c16e23644549b2cc3cb"
                    ]
                },
                {
                    "command": [
                        "generalize (classic a); intro h; elim h; [ intro H'0; clear h; try exact H'0 | clear h; intro H'0 ].",
                        "VernacExtend",
                        "c9baae22d3e124a373719f0c5d23d070a875dc78"
                    ]
                },
                {
                    "command": [
                        "elim H'; assumption.",
                        "VernacExtend",
                        "73e51cfc89f2776188da46f4e1bdbec0a203c959"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_quite_classic",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; auto.",
                        "VernacExtend",
                        "d725a45300c7348567782332d57c37b47b2347c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Peirce",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}