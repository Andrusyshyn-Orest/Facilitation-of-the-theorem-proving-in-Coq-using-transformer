{
    "filename": "ex1.v",
    "coq_project": "cours-de-coq",
    "vernac_cmds": [
        [
            "Theorem trivial : forall A : Prop, A -> A.",
            "VernacStartTheoremProof",
            "0201a2a5045462e45e7b8667ec1d94d978deeaf3"
        ],
        [
            "intros A H'; exact H'.",
            "VernacExtend",
            "b90d13008e7c8f88b85bb124d8a7b294b8b5a48e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem and_commutative : forall A B : Prop, A /\\ B -> B /\\ A.",
            "VernacStartTheoremProof",
            "0fc4f1b4ff1d91a2cb34cbc3e4be642272936ada"
        ],
        [
            "intros A B H'; split.",
            "VernacExtend",
            "9ce4179b3e53867368c96f62841291eb1738b361"
        ],
        [
            "elim H'; intros H'0 H'1; clear H'; exact H'1.",
            "VernacExtend",
            "fff7da916c9a74bb85494682f452cf2148fbf801"
        ],
        [
            "elim H'; intros H'0 H'1; clear H'; exact H'0.",
            "VernacExtend",
            "f27d0f6049f5dcf6110b3d25769c9ca0adc38df0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem or_commutative : forall A B : Prop, A \\/ B -> B \\/ A.",
            "VernacStartTheoremProof",
            "2ce2a523a13d867ced288a406c37bd24acf60514"
        ],
        [
            "intros A B h; elim h; [ intro H'; clear h; try exact H' | clear h; intro H' ].",
            "VernacExtend",
            "b9f1c3d9b2555c7f73b2efed02ff1793342a4199"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mp : forall A B : Prop, A -> (A -> B) -> B.",
            "VernacStartTheoremProof",
            "720d3120fe97bb04bfb830c9d213541d1d1ee1eb"
        ],
        [
            "intros A B H' H'0.",
            "VernacExtend",
            "e490b8a733d5e51e7065c0d30f17b7d6cded19a9"
        ],
        [
            "apply H'0.",
            "VernacExtend",
            "f1f7d253c59fe30c9977766a215126b9faf09097"
        ],
        [
            "exact H'.",
            "VernacExtend",
            "d888a7189349a9be6781cfa7f3cb7cad1c74203b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem S : forall A B C : Prop, (A -> B -> C) -> (A -> B) -> A -> C.",
            "VernacStartTheoremProof",
            "721490fb296e0589ff8b7194b2c5035f1de6efae"
        ],
        [
            "intros A B C H' H'0 H'1.",
            "VernacExtend",
            "af0bb84c5796c8f1143f65da53659beee05d9fd1"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "exact H'1.",
            "VernacExtend",
            "5023ecf2a0d0ddd2ed5b8869372fc9390a428d12"
        ],
        [
            "apply H'0.",
            "VernacExtend",
            "f1f7d253c59fe30c9977766a215126b9faf09097"
        ],
        [
            "exact H'1.",
            "VernacExtend",
            "5023ecf2a0d0ddd2ed5b8869372fc9390a428d12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Praeclarum : forall x y z t : Prop, (x -> z) /\\ (y -> t) -> x /\\ y -> z /\\ t.",
            "VernacStartTheoremProof",
            "c28af5803ce5db21e961c8f88960165a50de3c4b"
        ],
        [
            "intros x y z t h; elim h; intros H' H'0; clear h.",
            "VernacExtend",
            "cb92f2d7000e7e22756a4a4612fe4d26a8369aef"
        ],
        [
            "intro h; elim h; intros H'1 H'2; clear h.",
            "VernacExtend",
            "e9927a8886aa158ae438a68a9cd9452f38f04537"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H'; assumption.",
            "VernacExtend",
            "fb7114e590679622480219556fdabc4bf6d564ee"
        ],
        [
            "apply H'0; assumption.",
            "VernacExtend",
            "70ff1f7abffda8c41dbaacd2638cebeac04a202c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem resolution : forall (p q : Type -> Prop) (a : Type), p a -> (forall x : Type, p x -> q x) -> q a.",
            "VernacStartTheoremProof",
            "692763d0581383cda6de6aa13a930cf4dae8cf7a"
        ],
        [
            "intros p q a H' H'0.",
            "VernacExtend",
            "12f95dd51b984a64340c3780434807f7c73b266a"
        ],
        [
            "apply H'0.",
            "VernacExtend",
            "f1f7d253c59fe30c9977766a215126b9faf09097"
        ],
        [
            "exact H'.",
            "VernacExtend",
            "d888a7189349a9be6781cfa7f3cb7cad1c74203b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Witnesses : forall (a b : Type) (p : Type -> Prop), p a \\/ p b -> exists x : Type, p x.",
            "VernacStartTheoremProof",
            "9daecd8ad0e293ee06d164455fac256f8cbb40e1"
        ],
        [
            "intros a b p h; elim h; intro H'; clear h.",
            "VernacExtend",
            "cd48380db7f9811ff2967d276f45edef41993b4a"
        ],
        [
            "exists a; assumption.",
            "VernacExtend",
            "705538407d377515dd12d8ac31986ac77dbb0881"
        ],
        [
            "exists b; assumption.",
            "VernacExtend",
            "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Simple : forall (A : Set) (R : A -> A -> Prop), (forall x y z : A, R x y /\\ R y z -> R x z) -> (forall x y : A, R x y -> R y x) -> forall x : A, (exists y : A, R x y) -> R x x.",
            "VernacStartTheoremProof",
            "cef4682f511697135734bbc13caf24bc7d5784e1"
        ],
        [
            "intros A R H' H'0 x h; elim h; intros y E; clear h.",
            "VernacExtend",
            "a812774e694dae5c11d23ddd9d15d1f0237eac1e"
        ],
        [
            "apply H' with y.",
            "VernacExtend",
            "71c805f5de36149c65e9f91f9032d08cfdafe4b3"
        ],
        [
            "split; [ assumption | idtac ].",
            "VernacExtend",
            "7cde69a70c5ebfed86f2eba0170f3307a52efee2"
        ],
        [
            "apply H'0; assumption.",
            "VernacExtend",
            "70ff1f7abffda8c41dbaacd2638cebeac04a202c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_not : forall a : Prop, a -> ~ ~ a.",
            "VernacStartTheoremProof",
            "2f3066f408d5e48effcc6c182a367131e5932649"
        ],
        [
            "intros a H'; red in |- *; intro H'0; elim H'0; assumption.",
            "VernacExtend",
            "ef1cde9f4c0ff0cd429a00ddf0680abb061bf8db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mini_cases : forall x y : Prop, (x \\/ ~ y) /\\ y -> x.",
            "VernacStartTheoremProof",
            "334bcd5534cb9809874909c60ed07c115458350e"
        ],
        [
            "intros x y h; elim h; intros h0 H'; elim h0; [ intro H'0; clear h h0; try exact H'0 | clear h h0; intro H'0 ].",
            "VernacExtend",
            "f47ce5a0cb9f1afe9df7dea1833a453604f12ca7"
        ],
        [
            "elim H'0; try assumption.",
            "VernacExtend",
            "a68462e0a6704e0d7fc1632f0f8ff188b4574ada"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Classical.",
            "VernacRequire",
            "4cc53198e8d48bbb9dcca109b0e59a015dd7a5bb"
        ],
        [
            "Theorem not_not_converse : forall a : Prop, ~ ~ a -> a.",
            "VernacStartTheoremProof",
            "394ec83559a197476c0be4b8e3e0e89cca98a832"
        ],
        [
            "intros a H'.",
            "VernacExtend",
            "2b7514d481b1c49fc3070e8c7c3f241c036a4bba"
        ],
        [
            "generalize (classic a); intro h; elim h; [ intro H'0; clear h; try exact H'0 | clear h; intro H'0 ].",
            "VernacExtend",
            "c9baae22d3e124a373719f0c5d23d070a875dc78"
        ],
        [
            "elim H'; assumption.",
            "VernacExtend",
            "73e51cfc89f2776188da46f4e1bdbec0a203c959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_quite_classic : forall a : Prop, ~ ~ (a \\/ ~ a).",
            "VernacStartTheoremProof",
            "3643cb9e5fdce0a2eaa0c33125098383b1f248fe"
        ],
        [
            "intro a; red in |- *; intro H'; elim H'; right; red in |- *; intro H'0.",
            "VernacExtend",
            "30a91e1cdb8aafd892a16ffa0954cfa94a06f17a"
        ],
        [
            "elim H'; left; try assumption.",
            "VernacExtend",
            "ebb2b3ad42358b8130bbd073753c7eadb4867015"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "trivial",
            "line_nb": 0,
            "steps": [
                {
                    "command": [
                        "intros A H'; exact H'.",
                        "VernacExtend",
                        "b90d13008e7c8f88b85bb124d8a7b294b8b5a48e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_commutative",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros A B H'; split.",
                        "VernacExtend",
                        "9ce4179b3e53867368c96f62841291eb1738b361"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; clear H'; exact H'1.",
                        "VernacExtend",
                        "fff7da916c9a74bb85494682f452cf2148fbf801"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; clear H'; exact H'0.",
                        "VernacExtend",
                        "f27d0f6049f5dcf6110b3d25769c9ca0adc38df0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_commutative",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros A B h; elim h; [ intro H'; clear h; try exact H' | clear h; intro H' ].",
                        "VernacExtend",
                        "b9f1c3d9b2555c7f73b2efed02ff1793342a4199"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mp",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros A B H' H'0.",
                        "VernacExtend",
                        "e490b8a733d5e51e7065c0d30f17b7d6cded19a9"
                    ]
                },
                {
                    "command": [
                        "apply H'0.",
                        "VernacExtend",
                        "f1f7d253c59fe30c9977766a215126b9faf09097"
                    ]
                },
                {
                    "command": [
                        "exact H'.",
                        "VernacExtend",
                        "d888a7189349a9be6781cfa7f3cb7cad1c74203b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros A B C H' H'0 H'1.",
                        "VernacExtend",
                        "af0bb84c5796c8f1143f65da53659beee05d9fd1"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "exact H'1.",
                        "VernacExtend",
                        "5023ecf2a0d0ddd2ed5b8869372fc9390a428d12"
                    ]
                },
                {
                    "command": [
                        "apply H'0.",
                        "VernacExtend",
                        "f1f7d253c59fe30c9977766a215126b9faf09097"
                    ]
                },
                {
                    "command": [
                        "exact H'1.",
                        "VernacExtend",
                        "5023ecf2a0d0ddd2ed5b8869372fc9390a428d12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Praeclarum",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros x y z t h; elim h; intros H' H'0; clear h.",
                        "VernacExtend",
                        "cb92f2d7000e7e22756a4a4612fe4d26a8369aef"
                    ]
                },
                {
                    "command": [
                        "intro h; elim h; intros H'1 H'2; clear h.",
                        "VernacExtend",
                        "e9927a8886aa158ae438a68a9cd9452f38f04537"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply H'; assumption.",
                        "VernacExtend",
                        "fb7114e590679622480219556fdabc4bf6d564ee"
                    ]
                },
                {
                    "command": [
                        "apply H'0; assumption.",
                        "VernacExtend",
                        "70ff1f7abffda8c41dbaacd2638cebeac04a202c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resolution",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros p q a H' H'0.",
                        "VernacExtend",
                        "12f95dd51b984a64340c3780434807f7c73b266a"
                    ]
                },
                {
                    "command": [
                        "apply H'0.",
                        "VernacExtend",
                        "f1f7d253c59fe30c9977766a215126b9faf09097"
                    ]
                },
                {
                    "command": [
                        "exact H'.",
                        "VernacExtend",
                        "d888a7189349a9be6781cfa7f3cb7cad1c74203b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Witnesses",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros a b p h; elim h; intro H'; clear h.",
                        "VernacExtend",
                        "cd48380db7f9811ff2967d276f45edef41993b4a"
                    ]
                },
                {
                    "command": [
                        "exists a; assumption.",
                        "VernacExtend",
                        "705538407d377515dd12d8ac31986ac77dbb0881"
                    ]
                },
                {
                    "command": [
                        "exists b; assumption.",
                        "VernacExtend",
                        "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Simple",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros A R H' H'0 x h; elim h; intros y E; clear h.",
                        "VernacExtend",
                        "a812774e694dae5c11d23ddd9d15d1f0237eac1e"
                    ]
                },
                {
                    "command": [
                        "apply H' with y.",
                        "VernacExtend",
                        "71c805f5de36149c65e9f91f9032d08cfdafe4b3"
                    ]
                },
                {
                    "command": [
                        "split; [ assumption | idtac ].",
                        "VernacExtend",
                        "7cde69a70c5ebfed86f2eba0170f3307a52efee2"
                    ]
                },
                {
                    "command": [
                        "apply H'0; assumption.",
                        "VernacExtend",
                        "70ff1f7abffda8c41dbaacd2638cebeac04a202c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros a H'; red in |- *; intro H'0; elim H'0; assumption.",
                        "VernacExtend",
                        "ef1cde9f4c0ff0cd429a00ddf0680abb061bf8db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mini_cases",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros x y h; elim h; intros h0 H'; elim h0; [ intro H'0; clear h h0; try exact H'0 | clear h h0; intro H'0 ].",
                        "VernacExtend",
                        "f47ce5a0cb9f1afe9df7dea1833a453604f12ca7"
                    ]
                },
                {
                    "command": [
                        "elim H'0; try assumption.",
                        "VernacExtend",
                        "a68462e0a6704e0d7fc1632f0f8ff188b4574ada"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not_converse",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros a H'.",
                        "VernacExtend",
                        "2b7514d481b1c49fc3070e8c7c3f241c036a4bba"
                    ]
                },
                {
                    "command": [
                        "generalize (classic a); intro h; elim h; [ intro H'0; clear h; try exact H'0 | clear h; intro H'0 ].",
                        "VernacExtend",
                        "c9baae22d3e124a373719f0c5d23d070a875dc78"
                    ]
                },
                {
                    "command": [
                        "elim H'; assumption.",
                        "VernacExtend",
                        "73e51cfc89f2776188da46f4e1bdbec0a203c959"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_quite_classic",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intro a; red in |- *; intro H'; elim H'; right; red in |- *; intro H'0.",
                        "VernacExtend",
                        "30a91e1cdb8aafd892a16ffa0954cfa94a06f17a"
                    ]
                },
                {
                    "command": [
                        "elim H'; left; try assumption.",
                        "VernacExtend",
                        "ebb2b3ad42358b8130bbd073753c7eadb4867015"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}