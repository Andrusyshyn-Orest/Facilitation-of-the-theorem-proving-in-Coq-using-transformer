{
    "filename": "Term.v",
    "coq_project": "buchberger",
    "vernac_cmds": [
        [
            "Require Import Relation_Definitions.",
            "VernacRequire",
            "ba1086f65c0b2f6754b8273aa4aa004209b8f8b6"
        ],
        [
            "Require Import CoefStructure.",
            "VernacRequire",
            "afffb8ecb67eb97047216c55e4a53f0c1daa6efe"
        ],
        [
            "Require Import moreCoefStructure.",
            "VernacRequire",
            "78c8041a4221590766a3b4671908ca28c384d99b"
        ],
        [
            "Require Import OrderStructure.",
            "VernacRequire",
            "702281ed068ce56ddd5cea6e079ee063f4f49341"
        ],
        [
            "Require Import Monomials.",
            "VernacRequire",
            "24544167a9d62df5cd0b31f06d7096a87aa54745"
        ],
        [
            "Section Term.",
            "VernacBeginSection",
            "d5e7f9c63f1633d36f8a201d25a7ed3da28ec505"
        ],
        [
            "Load \"hCoefStructure\".",
            "VernacLoad",
            "f589131171ebe29df01888558901fe8e60053f03"
        ],
        [
            "Load \"mCoefStructure\".",
            "VernacLoad",
            "a212b5fc88e5d57b66825d01638e42eaf93cf04e"
        ],
        [
            "Load \"hOrderStructure\".",
            "VernacLoad",
            "7802bb6bcba5b34103e24276dada97267e981011"
        ],
        [
            "Load \"mOrderStructure\".",
            "VernacLoad",
            "8456f97609d8706d7301481dd4d47cbe1e7a6b53"
        ],
        [
            "Definition M1 := zero_mon n.",
            "VernacDefinition",
            "cc61b5b0145b8e8986f29450e0572303ed2c0710"
        ],
        [
            "Definition Term := (A * mon n)%type.",
            "VernacDefinition",
            "4434e9b10af7f98e12ebf2ce733b869aca877ff4"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition zeroP : Term -> Prop.",
            "VernacDefinition",
            "f7ae419b876f235c31237ee4233e97dbd1470aef"
        ],
        [
            "intros H'; case H'.",
            "VernacExtend",
            "efae61a70db3a620f28bbd0472f7a9814adab1d0"
        ],
        [
            "intros a H'1; exact (eqA a A0).",
            "VernacExtend",
            "8db3bcfc723083543ab020b29641f53a20ea4c8f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition eqTerm : Term -> Term -> Prop.",
            "VernacDefinition",
            "854c047cc105deff2d691de8f001e40a0dbcf487"
        ],
        [
            "intros H'; case H'.",
            "VernacExtend",
            "efae61a70db3a620f28bbd0472f7a9814adab1d0"
        ],
        [
            "intros a a' H'2; case H'2.",
            "VernacExtend",
            "f7e5358d8304cefc97ed79f247e8b999078ea19a"
        ],
        [
            "intros b b'; exact (eqA a b /\\ a' = b').",
            "VernacExtend",
            "70e80a2a69f0d5dd853de54cc9cbb9ea2a590326"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem eqTerm_refl : reflexive Term eqTerm.",
            "VernacStartTheoremProof",
            "bec93175fb214896309c811f65938f2f0347ed55"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x; case x; simpl in |- *; auto.",
            "VernacExtend",
            "50089fbf1a2c71d8dd0d9f5a9ae6565c4e941619"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_sym : symmetric Term eqTerm.",
            "VernacStartTheoremProof",
            "f2703d5363c61da8f8cd76838bbdf91f434e63e7"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y; case x; case y; simpl in |- *; intuition.",
            "VernacExtend",
            "cc1a9b6a2a77e40f8b134c020dfa40dc4717e372"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_trans : transitive Term eqTerm.",
            "VernacStartTheoremProof",
            "62157c38472adac148a7cc87cfc8b30faa93afdb"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x y z; case x; case y; case z; simpl in |- *; intuition.",
            "VernacExtend",
            "82cb42ff6f378f313ee35e38ae86952105f6e9be"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := a0); auto.",
            "VernacExtend",
            "837ca3ef57fb41a411c134ba21b8561694263d9c"
        ],
        [
            "rewrite H2; auto.",
            "VernacExtend",
            "66cde94939e971b9afbcb9427005c1aa7a40acba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition T2M : Term -> mon n.",
            "VernacDefinition",
            "22a889e3166e978eddd8b7022b58e695d23aa027"
        ],
        [
            "intros t; case t; intros a m; exact m.",
            "VernacExtend",
            "aafa8caf1b6a6edd4e2764787ae3ab96780c9ffb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition eqT (a b : Term) : Prop := T2M a = T2M b.",
            "VernacDefinition",
            "801f6c8013936a93061d07a3461607d5c87b1b1d"
        ],
        [
            "Hint Unfold eqT.",
            "VernacHints",
            "eca4a396be07901a2fe8918b285f0cd0241a2aa8"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Lemma eqT_refl : reflexive _ eqT.",
            "VernacStartTheoremProof",
            "dd50a85557f17f554aa59979034890bc155724ed"
        ],
        [
            "red in |- *; auto.",
            "VernacExtend",
            "cab1687c6da0e60977d47d2335ecbd5d45e7e0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqT_sym : symmetric _ eqT.",
            "VernacStartTheoremProof",
            "a24221bed136793efc391802f6d0836cfd5fdda9"
        ],
        [
            "red in |- *; auto.",
            "VernacExtend",
            "cab1687c6da0e60977d47d2335ecbd5d45e7e0b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqT_trans : transitive _ eqT.",
            "VernacStartTheoremProof",
            "12ece636b6c61c1eb07cd7c728ae01e01fcef05c"
        ],
        [
            "red in |- *; unfold eqT in |- *.",
            "VernacExtend",
            "2e0fd3f8d0076bdd8d158486e4aae18972af4045"
        ],
        [
            "intros x y z H' H'0; rewrite H'; auto.",
            "VernacExtend",
            "b229dea05cb536c8d20b5bf213136fcb25623778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_imp_eqT : forall a b : Term, eqTerm a b -> eqT a b.",
            "VernacStartTheoremProof",
            "a927a5dd4e20b750bdb1a89bbd475bf9d0b5658a"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; intuition.",
            "VernacExtend",
            "904579f277f80bf3417b6eb2dd808eac53469d7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_dec : forall x y : Term, {eqTerm x y} + {~ eqTerm x y}.",
            "VernacStartTheoremProof",
            "82c97568b599bb37cb29dcb9160be15b9a3b017d"
        ],
        [
            "intros x y; case x; case y; simpl in |- *.",
            "VernacExtend",
            "78f30a734d3a8a9ead29d532c5bd09ac8a763d2b"
        ],
        [
            "intros b2 c2 b3 c3.",
            "VernacExtend",
            "82f7539799a3d7dcb68e52a58c1270cbba1fb56b"
        ],
        [
            "case (eqA_dec b3 b2); intros eqAZ; auto.",
            "VernacExtend",
            "80a50c46a64cd2a254b76ac738e070c4052a8118"
        ],
        [
            "case (eqmon_dec n c3 c2); intros eqAZ1; auto.",
            "VernacExtend",
            "a85d7843ebc75188fbabca274fa44f9e378c4aed"
        ],
        [
            "right; red in |- *; intros H'; elim H'; intros H'0 H'1; clear H'; auto.",
            "VernacExtend",
            "82b41bdf4e0db0b4be5bc6406af2b654af8e7949"
        ],
        [
            "right; red in |- *; intros H'; elim H'; intros H'0 H'1; clear H'; auto.",
            "VernacExtend",
            "82b41bdf4e0db0b4be5bc6406af2b654af8e7949"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqT_zerop_is_eqTerm : forall a b : Term, eqT a b -> zeroP a -> zeroP b -> eqTerm a b.",
            "VernacStartTheoremProof",
            "d70402a610ad2bd4b03ae50697face0d5a4b9b3a"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := A0); auto.",
            "VernacExtend",
            "fa9296a9678d70dc8bfdd7fee5141e60ebd382fa"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_dec : forall x : Term, {zeroP x} + {~ zeroP x}.",
            "VernacStartTheoremProof",
            "af217ead0d974f5d557c06541cb358e2fbd6a482"
        ],
        [
            "intros x; case x; simpl in |- *.",
            "VernacExtend",
            "2434d5e4a0ff4aad202ddde8d652d6081a113660"
        ],
        [
            "intros b H'.",
            "VernacExtend",
            "2dfe6e5efdb4b11cae478df0290c89238d9404ad"
        ],
        [
            "apply eqA_dec; auto.",
            "VernacExtend",
            "92b65494f4c2b63d08a6e315b643c34fb25a3d82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_comp_eqTerm : forall a b : Term, zeroP a -> eqTerm a b -> zeroP b.",
            "VernacStartTheoremProof",
            "7e1afe080d7ace47b007e94705a31b5d483596b0"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := a1); auto; apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "fbe80541d25fe72db45efeb13d244864e57bb93e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem nzeroP_comp_eqTerm : forall a b : Term, ~ zeroP a -> eqTerm a b -> ~ zeroP b.",
            "VernacStartTheoremProof",
            "86cef31ccb160f2a6041e9565ab1fbd6e265ca80"
        ],
        [
            "intros a b H' H'0; red in |- *; intros H'1.",
            "VernacExtend",
            "57791d579ab5ffabd37bdab5d597f3314b306314"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply zeroP_comp_eqTerm with (a := b); auto.",
            "VernacExtend",
            "32048fa358a96e4e65694b1333a1156ed44dbb62"
        ],
        [
            "apply eqTerm_sym; auto.",
            "VernacExtend",
            "73b080cfcc3cf2e4759281428da477527b522588"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition plusTerm : Term -> Term -> Term.",
            "VernacDefinition",
            "e448991f682f336301dd7daa9820872a2a0e4c83"
        ],
        [
            "intros x; case x; intros b2 c2; intros y; case y; intros b3 c3; exact (plusA b2 b3, c2).",
            "VernacExtend",
            "302337120a24549d8ffecabd6b38af8a11d60435"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem zeroP_plusTermr : forall a b : Term, eqT a b -> zeroP b -> eqTerm a (plusTerm a b).",
            "VernacStartTheoremProof",
            "d449efe0c801aefbfbf5478e4f44e66440ec53f5"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a1 m1 a2 m2 H1 H2; split; auto.",
            "VernacExtend",
            "52b1a65368d6bf63a3964938bbefe02416083c6c"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA a2 A0); auto.",
            "VernacExtend",
            "f76b4fb35b38713358977bc58256ef638ab3059f"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_plusTerml : forall a b : Term, eqT a b -> zeroP a -> eqTerm b (plusTerm a b).",
            "VernacStartTheoremProof",
            "fa0a8cb9501227cfe13963a335e04da1d6a57ebb"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a1 m1 a2 m2 H1 H2; split; auto.",
            "VernacExtend",
            "52b1a65368d6bf63a3964938bbefe02416083c6c"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA A0 a1); auto.",
            "VernacExtend",
            "da6a59ddbb161ede2b1fe303363cf88e70199713"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA a1 A0); auto.",
            "VernacExtend",
            "0e529af53b52f87c6ae5bca5478a63d58a4b4437"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_comp_l : forall a b c : Term, eqT a c -> eqT b c -> eqTerm a b -> eqTerm (plusTerm a c) (plusTerm b c).",
            "VernacStartTheoremProof",
            "b1057ce5f0179c78e2e1f6232b72628477fa09e3"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_comp_r : forall a b c : Term, eqT c a -> eqT c b -> eqTerm a b -> eqTerm (plusTerm c a) (plusTerm c b).",
            "VernacStartTheoremProof",
            "c48df0dae85b92460b44ec0bc9f3a4d1db95024c"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_com : forall x y : Term, eqT x y -> eqTerm (plusTerm x y) (plusTerm y x).",
            "VernacStartTheoremProof",
            "363ebc6f15452df749210708866a6d3a8219011a"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_eqT1 : forall m1 m2 : Term, eqT m1 m2 -> eqT (plusTerm m1 m2) m1.",
            "VernacStartTheoremProof",
            "b8563e57af6bf5423b31b58c9079a9331f3b4718"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_eqT2 : forall m1 m2 : Term, eqT m1 m2 -> eqT (plusTerm m1 m2) m2.",
            "VernacStartTheoremProof",
            "750397b29a518878224417479a4622611ab3a914"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plusTerm_assoc : forall a a0 A1 : Term, eqT A1 a0 -> eqT a a0 -> eqTerm (plusTerm (plusTerm A1 a0) a) (plusTerm A1 (plusTerm a0 a)).",
            "VernacStartTheoremProof",
            "24ff2cc21068ed1064d232b5a0471f5ed7336520"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs).",
            "VernacExtend",
            "6b76a43ae6c0625cc4f8bc9651ec95943500b95b"
        ],
        [
            "apply plusA_assoc with (1 := cs).",
            "VernacExtend",
            "8495f36c5f834398dacd78b49961dff9c1bb435e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_plusTerm_comp : forall a b c d : Term, eqT a c -> eqT b d -> eqTerm a b -> eqTerm c d -> eqTerm (plusTerm a c) (plusTerm b d).",
            "VernacStartTheoremProof",
            "8d27cd7fcffb02694bbe6447039b19e05b8f620d"
        ],
        [
            "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
            "VernacExtend",
            "10f288de252b75b60480e8692697267cdf9a93a7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqTerm_plusTerm_comp.",
            "VernacHints",
            "149063ea6ba837c90b468c26565587d389db5547"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition multTerm : Term -> Term -> Term.",
            "VernacDefinition",
            "6358fc1163eda786c0c2135c84f92bbe163842c2"
        ],
        [
            "intros H'; case H'; intros b2 c2 H1'; case H1'; intros b3 c3; exact (multA b2 b3, mult_mon n c2 c3).",
            "VernacExtend",
            "3d10a25d1971fa488b2734239300b020f285cc5a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem zeroP_multTerm_l : forall a b : Term, zeroP a -> zeroP (multTerm a b).",
            "VernacStartTheoremProof",
            "f90c0a8270e287ed0e18e731e0724893e3c19889"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a1 H' b2 H'0 H'1; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A0 a1); auto.",
            "VernacExtend",
            "139313b425bcc234fb1b6a0f5e6b49528f162f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_multTerm_r : forall a b : Term, zeroP a -> zeroP (multTerm b a).",
            "VernacStartTheoremProof",
            "94d9e764d5a30a93af591f5d3e2374dbbd54391f"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a1 H' b2 H'0 H'1; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a1 A0); auto.",
            "VernacExtend",
            "f5c446f2987004733ff98e483c697af9a3b0ac5f"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A0 a1); auto.",
            "VernacExtend",
            "a0a72e16c02753d2d07f2323ba0de6e7adbc5dc9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_plusTerm_dist_l : forall a b c : Term, eqTerm (plusTerm (multTerm a c) (multTerm b c)) (multTerm (plusTerm a b) c).",
            "VernacStartTheoremProof",
            "599889cc6113e543f8c08959f688a073a88fd60a"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a1 m1 a2 m2 a3 m3; split; auto.",
            "VernacExtend",
            "e8fb9434133ce373f3006ff97dcbb40df6226ab0"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 a3) (multA a1 a2)); auto.",
            "VernacExtend",
            "b8d73f2281fe69c1869c0e838376db85971ec073"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (multA a1 (plusA a3 a2)); auto.",
            "VernacExtend",
            "d8dfb11749df67bb3ec17004e1c6d288f2ba81ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_plusTerm_dist_r : forall a b c : Term, eqTerm (plusTerm (multTerm c a) (multTerm c b)) (multTerm c (plusTerm a b)).",
            "VernacStartTheoremProof",
            "94f42c4afebb1af959bea22924d241e9da6df74a"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_eqT : forall a b c d : Term, eqT a b -> eqT c d -> eqT (multTerm a c) (multTerm b d).",
            "VernacStartTheoremProof",
            "0320b801a5e8cf28b7eafad378f1866baf925cad"
        ],
        [
            "intros a b c d; case a; case b; case c; case d; unfold eqT in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "aff2c863ca05ee25a2c517110b7e878a686b3d4d"
        ],
        [
            "intros H' c0 H'0 c2 H'1 c3 H'2 c4 H'3 H'4; rewrite H'3; rewrite H'4; auto.",
            "VernacExtend",
            "2f92cf112b9f9471ff13704bf3d1dee4ae11dd0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_assoc : forall a b c : Term, eqTerm (multTerm a (multTerm b c)) (multTerm (multTerm a b) c).",
            "VernacStartTheoremProof",
            "eb1ecb6eb888230447eb0dfe7cf0b47da5aa5ed1"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a0 m a1 m0 a2 m1; split; auto.",
            "VernacExtend",
            "dd901a43e80e9acae40bffa5642642b09e853dd6"
        ],
        [
            "apply multA_assoc with (1 := cs); auto.",
            "VernacExtend",
            "4604bdc985e24fca8fd3b015e0d2f6fcb51e714f"
        ],
        [
            "apply mult_mon_assoc.",
            "VernacExtend",
            "fe19de08f4a04bc9a9c9e51fd063931de2f0d497"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_com : forall a b : Term, eqTerm (multTerm a b) (multTerm b a).",
            "VernacStartTheoremProof",
            "87c8bc4e0badf0d5d3263594b4bf732d33709cd6"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0; split; auto.",
            "VernacExtend",
            "0ce3a93aee69d134195316a5500e9b45c719895c"
        ],
        [
            "apply mult_mon_com.",
            "VernacExtend",
            "1bc36c79090a567c583edfee2b2d85d587f26dfc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_multTerm_comp : forall a b c d : Term, eqTerm a b -> eqTerm c d -> eqTerm (multTerm a c) (multTerm b d).",
            "VernacStartTheoremProof",
            "07ab40e84bcddddf12601a6cf0fe5e4bd054f6e7"
        ],
        [
            "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
            "VernacExtend",
            "10f288de252b75b60480e8692697267cdf9a93a7"
        ],
        [
            "intros a1 m1 a2 m2 a3 m3 a4 m4; intros H1; case H1; intros H2 H3 H4; case H4; intros H5 H6; split; auto.",
            "VernacExtend",
            "68cd633b2663e59130fd5634001eebce6db08046"
        ],
        [
            "rewrite H3; rewrite H6; auto.",
            "VernacExtend",
            "ad08fadf377fa30d1a96edaeb5f4137d94467f99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqTerm_multTerm_comp.",
            "VernacHints",
            "741883d2d95cf5ab454bc0fbf2b38689ac725ee0"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition invTerm : Term -> Term.",
            "VernacDefinition",
            "291030a2db298ea993837be13b91c2d38d1af8e7"
        ],
        [
            "intros H; case H; intros b2 c2; exact (invA b2, c2).",
            "VernacExtend",
            "0fbd0acb12f4fb2d68b9363e6a11c0e7b72ff478"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem plusTerm_invTerm_zeroP : forall a : Term, zeroP (plusTerm a (invTerm a)).",
            "VernacStartTheoremProof",
            "7da5380865a6f6fbdd549bc4af6e5060523fec0f"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "intros; apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply invA_plusA with (1 := cs); auto.",
            "VernacExtend",
            "4e974678b2e0514a831325bbdfe648e263a5b366"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_invTerm_zeroP : forall a : Term, zeroP a -> zeroP (invTerm a).",
            "VernacStartTheoremProof",
            "022c2504ae2b2af3b04b6c12af45f3a9e282d2bc"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "intros b H' H'0; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA A0 (invA A0)); auto.",
            "VernacExtend",
            "de3612e5724304f466264562a58388502d0f4400"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := invA A0); auto.",
            "VernacExtend",
            "a1f000327b84b219e0dee1fbe645b53a4ef62691"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA (invA A0) A0); auto.",
            "VernacExtend",
            "4eef44fddc5b679023fea16748de38a2e972217c"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem invTerm_invol : forall a : Term, eqTerm a (invTerm (invTerm a)).",
            "VernacStartTheoremProof",
            "5130cdb16003be7022fae43f57f9c6c677756194"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "intros a0 m; split; auto.",
            "VernacExtend",
            "e57ca9d3599d77601f4386881f627199ffbe19f8"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA a0 A0); auto.",
            "VernacExtend",
            "c6633150e914d5c521c3d839c2b040847f38ebf2"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA a0 (plusA (invA a0) (invA (invA a0)))); auto.",
            "VernacExtend",
            "a584d97a8a923a19eac6552dbb99d9e80b450431"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA a0 (invA a0)) (invA (invA a0))); auto.",
            "VernacExtend",
            "f1786aab76fa15b3861ef6760c6e8e789cbd8bdc"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (invA a0))); auto.",
            "VernacExtend",
            "0b60f69191c8c490258ba95168a6ae9ee34c35f3"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (invA a0)) A0); auto.",
            "VernacExtend",
            "5a606ffed5efac59217bcc77a9e8302015657c8e"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem nZero_invTerm_nZero : forall a : Term, ~ zeroP a -> ~ zeroP (invTerm a).",
            "VernacStartTheoremProof",
            "3e1e414521332acef996386e0de56b990967bbe9"
        ],
        [
            "intros a H'; red in |- *; intros H'0; absurd (zeroP a); auto.",
            "VernacExtend",
            "cf2881978de920d4046afccce36371555c985c98"
        ],
        [
            "apply zeroP_comp_eqTerm with (a := invTerm (invTerm a)); auto.",
            "VernacExtend",
            "757cfbbad4a0335a57e3c6e5057d4e30ab6e6599"
        ],
        [
            "apply zeroP_invTerm_zeroP; auto.",
            "VernacExtend",
            "71b27a1ded0ae01759d23d02ff45b1edaf568389"
        ],
        [
            "apply eqTerm_sym; apply invTerm_invol; auto.",
            "VernacExtend",
            "6f8d20bcbe0f1b70d832310af6358f0536eefce5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nZero_invTerm_nZero.",
            "VernacHints",
            "a0354ce40ec83a3e0273d0f307418f2c7a808d06"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition T1 : Term.",
            "VernacDefinition",
            "f81140cdde4f2213cf98b5f7ad62f6f4912e99e7"
        ],
        [
            "exact (A1, M1).",
            "VernacExtend",
            "f12f713ae831c929fe4628f785ddfb03d14c136b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem T1_nz : ~ zeroP T1.",
            "VernacStartTheoremProof",
            "0c1f4d298ef25c1afb5890d4656c32fb2bc305a3"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "apply A1_diff_A0 with (1 := cs).",
            "VernacExtend",
            "b40d8454aa1059a1291341477f73ac7cc223c0dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem T1_multTerm_l : forall a b : Term, eqTerm a T1 -> eqTerm b (multTerm a b).",
            "VernacStartTheoremProof",
            "eb5275b6398758e5fa1ace5a8b1b25585a64d28c"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 H'; elim H'; intros H'0 H'1; rewrite H'1; clear H'; auto.",
            "VernacExtend",
            "17b039a88ecf8e37b87f905f0c8acab34a14cc2c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A1 a0); auto.",
            "VernacExtend",
            "92d4614e7156112a48f38fe7d3946be739305662"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs).",
            "VernacExtend",
            "6b76a43ae6c0625cc4f8bc9651ec95943500b95b"
        ],
        [
            "apply multA_A1_l with (1 := cs); auto.",
            "VernacExtend",
            "4450308f0d154f148cb448f0f4bcf00544c356ae"
        ],
        [
            "apply multA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "5a4d62968a3f4650bb931bbccce41d86a113f65d"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_l.",
            "VernacExtend",
            "e925e477e5dc9e5d83c34d7b09a8f2061f7cc1ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem T1_multTerm_r : forall a b : Term, eqTerm a T1 -> eqTerm b (multTerm b a).",
            "VernacStartTheoremProof",
            "fcc62c9e1af7d69993edf45aac493e86ec6b8e39"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 H'; elim H'; intros H'0 H'1; rewrite H'1; clear H'.",
            "VernacExtend",
            "27a3d1186489dd87591a08621f12c9bff2bc48ff"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a0 A1); auto.",
            "VernacExtend",
            "93402311bbed06cddda837ca95ce7c7079e9e8a9"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A1 a0); auto.",
            "VernacExtend",
            "92d4614e7156112a48f38fe7d3946be739305662"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply multA_A1_l with (1 := cs); auto.",
            "VernacExtend",
            "3a3cae72e2572e1f2069f837240edd2c871e5169"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_r.",
            "VernacExtend",
            "ab805bb310cc8c61abb05b3b2781b85524edc905"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem nZero_invTerm_T1 : ~ zeroP (invTerm T1).",
            "VernacStartTheoremProof",
            "290e44f073e6e487e7b9f685ee5719eb4f9ccea5"
        ],
        [
            "apply nZero_invTerm_nZero; auto.",
            "VernacExtend",
            "fed4008f0c12e33c3edae8af2eaa738048284e0a"
        ],
        [
            "exact T1_nz.",
            "VernacExtend",
            "4c2034cba8d6036ab916a50218bbdc3168de62e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve nZero_invTerm_T1.",
            "VernacHints",
            "33e8f3b8b4ab584250fdb7cc351c5bec401882d5"
        ],
        [
            "Theorem mult_invTerm_com : forall a b : Term, eqTerm (multTerm (invTerm a) b) (invTerm (multTerm a b)).",
            "VernacStartTheoremProof",
            "8857b7c9e2213489b95ba32a8cd0810afd65bbdf"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0; split; auto.",
            "VernacExtend",
            "0ce3a93aee69d134195316a5500e9b45c719895c"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (invA a1) a0) A0); auto.",
            "VernacExtend",
            "e513844dbe48546cb9cf2f2320e94c547d0164d0"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (invA a1) a0) (plusA (multA a1 a0) (invA (multA a1 a0)))); auto.",
            "VernacExtend",
            "e2f7cd91c958bc94f1849f9c211a98f40c288924"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA (multA (invA a1) a0) (multA a1 a0)) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "5da0fefc820ea0f4504af3c52efaf5263aa52803"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (plusA (invA a1) a1) a0) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "225b20fca1db38f478ea3a8bc53586e3114c53bf"
        ],
        [
            "apply plusA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "9f8e9069229e77400aef6f995ce741f0fb737ca3"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a0 (invA a1)) (multA a0 a1)); auto.",
            "VernacExtend",
            "a7e9f7709ba76a6a8dbfe3429127f9edaba794da"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (multA a0 (plusA (invA a1) a1)); auto.",
            "VernacExtend",
            "c673b248915f70e951417833a47dcd00a5bbaf98"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (plusA a1 (invA a1)) a0) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "ff699035abea07b31cd65b6f306da3b10d571286"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA A0 a0) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "1b1827051aee94db3986a1e71c68bd914b9f7dba"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "6f754d52753aef6d83b98539427bc79805e3fb1c"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (multA a1 a0)) A0); auto.",
            "VernacExtend",
            "b9505d41ca51c059731224e2ab3bc0752b757676"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mult_invTerm_com_r : forall a b : Term, eqTerm (multTerm a (invTerm b)) (invTerm (multTerm a b)).",
            "VernacStartTheoremProof",
            "41b4d849fdb4de57645a3fe5f7b20a8e35e44396"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0; split; auto.",
            "VernacExtend",
            "0ce3a93aee69d134195316a5500e9b45c719895c"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (invA a0)) A0); auto.",
            "VernacExtend",
            "a096083d634d0208ecc03effb3bdbc471ed9815f"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (invA a0)) (plusA (multA a1 a0) (invA (multA a1 a0)))); auto.",
            "VernacExtend",
            "3bea8ccbc87932ed1fdd8afc86746004f2d91a5c"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA (multA a1 (invA a0)) (multA a1 a0)) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "58d379439ebb3b68e8b7902d0ff2598b4f36defa"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (plusA (invA a0) a0)) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "80c813b73cad7b87d10d705a1cefb2339be4e8ce"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (plusA a0 (invA a0))) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "4eb25d6707cfa8d31854adbe0e235241a1a08d4b"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 A0) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "5fa93d0838ec9230cca5cd350a19f01bd830a74a"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA A0 a1) (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "595fc044efe9c2ff56893eefc3d9380b1619ba09"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (multA a1 a0))); auto.",
            "VernacExtend",
            "6f754d52753aef6d83b98539427bc79805e3fb1c"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (multA a1 a0)) A0); auto.",
            "VernacExtend",
            "b9505d41ca51c059731224e2ab3bc0752b757676"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_invTerm_comp : forall a b : Term, eqTerm a b -> eqTerm (invTerm a) (invTerm b).",
            "VernacStartTheoremProof",
            "7aa275194ea800e847847994d09f8d8ef1ccd930"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem invTerm_eqT : forall a : Term, eqT a (invTerm a).",
            "VernacStartTheoremProof",
            "0869232b810983c1101301f8163139851c30b6ad"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem T1_eqT : forall a b : Term, eqTerm a T1 -> eqT b (multTerm a b).",
            "VernacStartTheoremProof",
            "4dbfacdb549c503d7b45a936f1a43e587862ae0e"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a1 m1 a2 m2 H1; case H1; intros H2 H3; auto.",
            "VernacExtend",
            "8690402e105f81d67cd9d7d0f0a9ce526b95d79a"
        ],
        [
            "rewrite H3; auto.",
            "VernacExtend",
            "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
        ],
        [
            "unfold eqT in |- *; simpl in |- *; apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_l.",
            "VernacExtend",
            "1409acabb60e117e1e1221d113369ddea71b8a97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_T1_eqT : forall a : Term, eqTerm a T1 -> eqT a T1.",
            "VernacStartTheoremProof",
            "38b249a752b2eb3bb81ac7fee0da369aee9177c2"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition minusTerm : Term -> Term -> Term.",
            "VernacDefinition",
            "d22d705185625816b4ccf6eec2b2c3179bcd85b7"
        ],
        [
            "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; exact (minusA b2 b3, c2).",
            "VernacExtend",
            "e76a1b95937a20b8c46d7e909565f1b94f195f77"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem eqTerm_minusTerm_plusTerm_invTerm : forall a b : Term, eqTerm (minusTerm a b) (plusTerm a (invTerm b)).",
            "VernacStartTheoremProof",
            "ab07ecb93bd776ffcaadeb1de5af4c47e7133a22"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply minusA_def with (1 := cs); auto.",
            "VernacExtend",
            "dc35bf44dd7417e06ea4a1f7fe02dcc1c41d8922"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minusTerm_eqT : forall m1 m2 : Term, eqT m1 m2 -> eqT (minusTerm m1 m2) m1.",
            "VernacStartTheoremProof",
            "fdba8f38def33c9b2aec38d11dd719edbb35b749"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_minusTerm : forall a : Term, zeroP (minusTerm a a).",
            "VernacStartTheoremProof",
            "553231380691bbdfdee76ba7a06005754e662bbb"
        ],
        [
            "intros a; apply zeroP_comp_eqTerm with (a := plusTerm a (invTerm a)); auto.",
            "VernacExtend",
            "516d1ad6f898f0e40f88b32b4096b4f364c98f05"
        ],
        [
            "apply plusTerm_invTerm_zeroP; auto.",
            "VernacExtend",
            "aaa0a9a83591d9119978d9e3b898c70fd5b15ea1"
        ],
        [
            "apply eqTerm_sym; apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
            "VernacExtend",
            "dc444540a6e938b5ed96bc89cb59d2466ec96c95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_zeroP_div : forall a b : Term, zeroP (multTerm a b) -> zeroP a \\/ zeroP b.",
            "VernacStartTheoremProof",
            "a5e1f90a0797edd5ae32b2a6953de42c7f12707b"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 H.",
            "VernacExtend",
            "d57829dd480dc44d17b934fb4a9a05d32a1882cd"
        ],
        [
            "apply A_sep with (2 := eqA_dec) (1 := cs); auto.",
            "VernacExtend",
            "9cf082d4c0f2b0efb8fcc6bdee5c376eb30713ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_minusTerm_dist_l : forall a b c : Term, eqT a b -> eqTerm (minusTerm (multTerm a c) (multTerm b c)) (multTerm (minusTerm a b) c).",
            "VernacStartTheoremProof",
            "e0ff0bcc809da37018f360aab43b64d6a38fa631"
        ],
        [
            "intros a b c eqT1.",
            "VernacExtend",
            "c921fdccc21761e28a8cee9f02601b7a828a8231"
        ],
        [
            "apply eqTerm_trans with (y := multTerm (plusTerm a (invTerm b)) c); auto.",
            "VernacExtend",
            "6e228815eeee8347c5d6712f3a46bde86f56a30f"
        ],
        [
            "apply eqTerm_trans with (y := plusTerm (multTerm a c) (multTerm (invTerm b) c)); auto.",
            "VernacExtend",
            "327cabc58cf738dfd8ec36052fbef6ddd97434d6"
        ],
        [
            "apply eqTerm_trans with (y := plusTerm (multTerm a c) (invTerm (multTerm b c))); auto.",
            "VernacExtend",
            "ec2bddaf61228d4f5d95ed10bc78516fd6d1e58a"
        ],
        [
            "apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
            "VernacExtend",
            "0696a6fbd8a0d528683b20163a36a31e41f9bc81"
        ],
        [
            "apply eqTerm_plusTerm_comp; auto.",
            "VernacExtend",
            "1e522bd2b936cc83374184cdc2594b5da583bbdf"
        ],
        [
            "apply eqT_trans with (y := multTerm b c); auto.",
            "VernacExtend",
            "0bfc79ba055072ee971daeba3adee1e053967005"
        ],
        [
            "apply multTerm_eqT; auto.",
            "VernacExtend",
            "4d711045e990e2c51df6dd436d5c246f6cb19533"
        ],
        [
            "apply invTerm_eqT; auto.",
            "VernacExtend",
            "c7fe1a22ac75f830ddecbf5edb57c5b43bd402dc"
        ],
        [
            "apply multTerm_eqT; auto.",
            "VernacExtend",
            "4d711045e990e2c51df6dd436d5c246f6cb19533"
        ],
        [
            "apply eqT_trans with (y := b); auto.",
            "VernacExtend",
            "49da3e4285211ef126536569205db91ec642e5a2"
        ],
        [
            "apply invTerm_eqT; auto.",
            "VernacExtend",
            "c7fe1a22ac75f830ddecbf5edb57c5b43bd402dc"
        ],
        [
            "apply eqTerm_refl; auto.",
            "VernacExtend",
            "5d7ff81d79fdce7ed5178b584a592e12e73bdc73"
        ],
        [
            "apply eqTerm_sym; apply mult_invTerm_com; auto.",
            "VernacExtend",
            "8480c596159ab6049efeeee8e03f37ca6f84e75c"
        ],
        [
            "apply multTerm_plusTerm_dist_l; auto.",
            "VernacExtend",
            "360a59aaee581b7d517995301a77693a36844b7a"
        ],
        [
            "apply eqTerm_multTerm_comp; auto.",
            "VernacExtend",
            "d8c3fc312c8b191428ab387d0ee53a480a8be51d"
        ],
        [
            "apply eqTerm_sym; apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
            "VernacExtend",
            "dc444540a6e938b5ed96bc89cb59d2466ec96c95"
        ],
        [
            "apply eqTerm_refl; auto.",
            "VernacExtend",
            "5d7ff81d79fdce7ed5178b584a592e12e73bdc73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve multTerm_minusTerm_dist_l.",
            "VernacHints",
            "22b40866787d6d27225369f478585abf2eb9b08c"
        ],
        [
            "Theorem nzeroP_multTerm : forall a b : Term, ~ zeroP a -> ~ zeroP b -> ~ zeroP (multTerm a b).",
            "VernacStartTheoremProof",
            "5ac25e7d25fa20373490f10cab280496a1693849"
        ],
        [
            "intros a b H' H'0; red in |- *; intros H'1; elim multTerm_zeroP_div with (a := a) (b := b); auto.",
            "VernacExtend",
            "a875dffd5a89c08c350013f576bed1bdf52035db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Term.",
            "VernacEndSegment",
            "8f519ca5b248230d4aca226ee0557d604ecd8a65"
        ]
    ],
    "proofs": [
        {
            "name": "zeroP",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros H'; case H'.",
                        "VernacExtend",
                        "efae61a70db3a620f28bbd0472f7a9814adab1d0"
                    ]
                },
                {
                    "command": [
                        "intros a H'1; exact (eqA a A0).",
                        "VernacExtend",
                        "8db3bcfc723083543ab020b29641f53a20ea4c8f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros H'; case H'.",
                        "VernacExtend",
                        "efae61a70db3a620f28bbd0472f7a9814adab1d0"
                    ]
                },
                {
                    "command": [
                        "intros a a' H'2; case H'2.",
                        "VernacExtend",
                        "f7e5358d8304cefc97ed79f247e8b999078ea19a"
                    ]
                },
                {
                    "command": [
                        "intros b b'; exact (eqA a b /\\ a' = b').",
                        "VernacExtend",
                        "70e80a2a69f0d5dd853de54cc9cbb9ea2a590326"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_refl",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x; case x; simpl in |- *; auto.",
                        "VernacExtend",
                        "50089fbf1a2c71d8dd0d9f5a9ae6565c4e941619"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_sym",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y; case x; case y; simpl in |- *; intuition.",
                        "VernacExtend",
                        "cc1a9b6a2a77e40f8b134c020dfa40dc4717e372"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_trans",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x y z; case x; case y; case z; simpl in |- *; intuition.",
                        "VernacExtend",
                        "82cb42ff6f378f313ee35e38ae86952105f6e9be"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := a0); auto.",
                        "VernacExtend",
                        "837ca3ef57fb41a411c134ba21b8561694263d9c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; auto.",
                        "VernacExtend",
                        "66cde94939e971b9afbcb9427005c1aa7a40acba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T2M",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros t; case t; intros a m; exact m.",
                        "VernacExtend",
                        "aafa8caf1b6a6edd4e2764787ae3ab96780c9ffb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqT_refl",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "red in |- *; auto.",
                        "VernacExtend",
                        "cab1687c6da0e60977d47d2335ecbd5d45e7e0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_sym",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "red in |- *; auto.",
                        "VernacExtend",
                        "cab1687c6da0e60977d47d2335ecbd5d45e7e0b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_trans",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "red in |- *; unfold eqT in |- *.",
                        "VernacExtend",
                        "2e0fd3f8d0076bdd8d158486e4aae18972af4045"
                    ]
                },
                {
                    "command": [
                        "intros x y z H' H'0; rewrite H'; auto.",
                        "VernacExtend",
                        "b229dea05cb536c8d20b5bf213136fcb25623778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_imp_eqT",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; intuition.",
                        "VernacExtend",
                        "904579f277f80bf3417b6eb2dd808eac53469d7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_dec",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros x y; case x; case y; simpl in |- *.",
                        "VernacExtend",
                        "78f30a734d3a8a9ead29d532c5bd09ac8a763d2b"
                    ]
                },
                {
                    "command": [
                        "intros b2 c2 b3 c3.",
                        "VernacExtend",
                        "82f7539799a3d7dcb68e52a58c1270cbba1fb56b"
                    ]
                },
                {
                    "command": [
                        "case (eqA_dec b3 b2); intros eqAZ; auto.",
                        "VernacExtend",
                        "80a50c46a64cd2a254b76ac738e070c4052a8118"
                    ]
                },
                {
                    "command": [
                        "case (eqmon_dec n c3 c2); intros eqAZ1; auto.",
                        "VernacExtend",
                        "a85d7843ebc75188fbabca274fa44f9e378c4aed"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; intros H'; elim H'; intros H'0 H'1; clear H'; auto.",
                        "VernacExtend",
                        "82b41bdf4e0db0b4be5bc6406af2b654af8e7949"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; intros H'; elim H'; intros H'0 H'1; clear H'; auto.",
                        "VernacExtend",
                        "82b41bdf4e0db0b4be5bc6406af2b654af8e7949"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_zerop_is_eqTerm",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := A0); auto.",
                        "VernacExtend",
                        "fa9296a9678d70dc8bfdd7fee5141e60ebd382fa"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_dec",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros x; case x; simpl in |- *.",
                        "VernacExtend",
                        "2434d5e4a0ff4aad202ddde8d652d6081a113660"
                    ]
                },
                {
                    "command": [
                        "intros b H'.",
                        "VernacExtend",
                        "2dfe6e5efdb4b11cae478df0290c89238d9404ad"
                    ]
                },
                {
                    "command": [
                        "apply eqA_dec; auto.",
                        "VernacExtend",
                        "92b65494f4c2b63d08a6e315b643c34fb25a3d82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_comp_eqTerm",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := a1); auto; apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "fbe80541d25fe72db45efeb13d244864e57bb93e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nzeroP_comp_eqTerm",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0; red in |- *; intros H'1.",
                        "VernacExtend",
                        "57791d579ab5ffabd37bdab5d597f3314b306314"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply zeroP_comp_eqTerm with (a := b); auto.",
                        "VernacExtend",
                        "32048fa358a96e4e65694b1333a1156ed44dbb62"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_sym; auto.",
                        "VernacExtend",
                        "73b080cfcc3cf2e4759281428da477527b522588"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros x; case x; intros b2 c2; intros y; case y; intros b3 c3; exact (plusA b2 b3, c2).",
                        "VernacExtend",
                        "302337120a24549d8ffecabd6b38af8a11d60435"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_plusTermr",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 H1 H2; split; auto.",
                        "VernacExtend",
                        "52b1a65368d6bf63a3964938bbefe02416083c6c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA a2 A0); auto.",
                        "VernacExtend",
                        "f76b4fb35b38713358977bc58256ef638ab3059f"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_plusTerml",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 H1 H2; split; auto.",
                        "VernacExtend",
                        "52b1a65368d6bf63a3964938bbefe02416083c6c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA A0 a1); auto.",
                        "VernacExtend",
                        "da6a59ddbb161ede2b1fe303363cf88e70199713"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA a1 A0); auto.",
                        "VernacExtend",
                        "0e529af53b52f87c6ae5bca5478a63d58a4b4437"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_comp_l",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_comp_r",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_com",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_eqT1",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_eqT2",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_assoc",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs).",
                        "VernacExtend",
                        "6b76a43ae6c0625cc4f8bc9651ec95943500b95b"
                    ]
                },
                {
                    "command": [
                        "apply plusA_assoc with (1 := cs).",
                        "VernacExtend",
                        "8495f36c5f834398dacd78b49961dff9c1bb435e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_plusTerm_comp",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
                        "VernacExtend",
                        "10f288de252b75b60480e8692697267cdf9a93a7"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros H'; case H'; intros b2 c2 H1'; case H1'; intros b3 c3; exact (multA b2 b3, mult_mon n c2 c3).",
                        "VernacExtend",
                        "3d10a25d1971fa488b2734239300b020f285cc5a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_multTerm_l",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a1 H' b2 H'0 H'1; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A0 a1); auto.",
                        "VernacExtend",
                        "139313b425bcc234fb1b6a0f5e6b49528f162f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_multTerm_r",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a1 H' b2 H'0 H'1; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a1 A0); auto.",
                        "VernacExtend",
                        "f5c446f2987004733ff98e483c697af9a3b0ac5f"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A0 a1); auto.",
                        "VernacExtend",
                        "a0a72e16c02753d2d07f2323ba0de6e7adbc5dc9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_plusTerm_dist_l",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 a3 m3; split; auto.",
                        "VernacExtend",
                        "e8fb9434133ce373f3006ff97dcbb40df6226ab0"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 a3) (multA a1 a2)); auto.",
                        "VernacExtend",
                        "b8d73f2281fe69c1869c0e838376db85971ec073"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (multA a1 (plusA a3 a2)); auto.",
                        "VernacExtend",
                        "d8dfb11749df67bb3ec17004e1c6d288f2ba81ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_plusTerm_dist_r",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_eqT",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros a b c d; case a; case b; case c; case d; unfold eqT in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "aff2c863ca05ee25a2c517110b7e878a686b3d4d"
                    ]
                },
                {
                    "command": [
                        "intros H' c0 H'0 c2 H'1 c3 H'2 c4 H'3 H'4; rewrite H'3; rewrite H'4; auto.",
                        "VernacExtend",
                        "2f92cf112b9f9471ff13704bf3d1dee4ae11dd0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_assoc",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 a2 m1; split; auto.",
                        "VernacExtend",
                        "dd901a43e80e9acae40bffa5642642b09e853dd6"
                    ]
                },
                {
                    "command": [
                        "apply multA_assoc with (1 := cs); auto.",
                        "VernacExtend",
                        "4604bdc985e24fca8fd3b015e0d2f6fcb51e714f"
                    ]
                },
                {
                    "command": [
                        "apply mult_mon_assoc.",
                        "VernacExtend",
                        "fe19de08f4a04bc9a9c9e51fd063931de2f0d497"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_com",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0; split; auto.",
                        "VernacExtend",
                        "0ce3a93aee69d134195316a5500e9b45c719895c"
                    ]
                },
                {
                    "command": [
                        "apply mult_mon_com.",
                        "VernacExtend",
                        "1bc36c79090a567c583edfee2b2d85d587f26dfc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_multTerm_comp",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
                        "VernacExtend",
                        "10f288de252b75b60480e8692697267cdf9a93a7"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 a3 m3 a4 m4; intros H1; case H1; intros H2 H3 H4; case H4; intros H5 H6; split; auto.",
                        "VernacExtend",
                        "68cd633b2663e59130fd5634001eebce6db08046"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; rewrite H6; auto.",
                        "VernacExtend",
                        "ad08fadf377fa30d1a96edaeb5f4137d94467f99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invTerm",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros H; case H; intros b2 c2; exact (invA b2, c2).",
                        "VernacExtend",
                        "0fbd0acb12f4fb2d68b9363e6a11c0e7b72ff478"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "plusTerm_invTerm_zeroP",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "intros; apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply invA_plusA with (1 := cs); auto.",
                        "VernacExtend",
                        "4e974678b2e0514a831325bbdfe648e263a5b366"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_invTerm_zeroP",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "intros b H' H'0; apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA A0 (invA A0)); auto.",
                        "VernacExtend",
                        "de3612e5724304f466264562a58388502d0f4400"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := invA A0); auto.",
                        "VernacExtend",
                        "a1f000327b84b219e0dee1fbe645b53a4ef62691"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA (invA A0) A0); auto.",
                        "VernacExtend",
                        "4eef44fddc5b679023fea16748de38a2e972217c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invTerm_invol",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "intros a0 m; split; auto.",
                        "VernacExtend",
                        "e57ca9d3599d77601f4386881f627199ffbe19f8"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA a0 A0); auto.",
                        "VernacExtend",
                        "c6633150e914d5c521c3d839c2b040847f38ebf2"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA a0 (plusA (invA a0) (invA (invA a0)))); auto.",
                        "VernacExtend",
                        "a584d97a8a923a19eac6552dbb99d9e80b450431"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA a0 (invA a0)) (invA (invA a0))); auto.",
                        "VernacExtend",
                        "f1786aab76fa15b3861ef6760c6e8e789cbd8bdc"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (invA a0))); auto.",
                        "VernacExtend",
                        "0b60f69191c8c490258ba95168a6ae9ee34c35f3"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (invA a0)) A0); auto.",
                        "VernacExtend",
                        "5a606ffed5efac59217bcc77a9e8302015657c8e"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nZero_invTerm_nZero",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros a H'; red in |- *; intros H'0; absurd (zeroP a); auto.",
                        "VernacExtend",
                        "cf2881978de920d4046afccce36371555c985c98"
                    ]
                },
                {
                    "command": [
                        "apply zeroP_comp_eqTerm with (a := invTerm (invTerm a)); auto.",
                        "VernacExtend",
                        "757cfbbad4a0335a57e3c6e5057d4e30ab6e6599"
                    ]
                },
                {
                    "command": [
                        "apply zeroP_invTerm_zeroP; auto.",
                        "VernacExtend",
                        "71b27a1ded0ae01759d23d02ff45b1edaf568389"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_sym; apply invTerm_invol; auto.",
                        "VernacExtend",
                        "6f8d20bcbe0f1b70d832310af6358f0536eefce5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T1",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "exact (A1, M1).",
                        "VernacExtend",
                        "f12f713ae831c929fe4628f785ddfb03d14c136b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "T1_nz",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "apply A1_diff_A0 with (1 := cs).",
                        "VernacExtend",
                        "b40d8454aa1059a1291341477f73ac7cc223c0dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T1_multTerm_l",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 H'; elim H'; intros H'0 H'1; rewrite H'1; clear H'; auto.",
                        "VernacExtend",
                        "17b039a88ecf8e37b87f905f0c8acab34a14cc2c"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A1 a0); auto.",
                        "VernacExtend",
                        "92d4614e7156112a48f38fe7d3946be739305662"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs).",
                        "VernacExtend",
                        "6b76a43ae6c0625cc4f8bc9651ec95943500b95b"
                    ]
                },
                {
                    "command": [
                        "apply multA_A1_l with (1 := cs); auto.",
                        "VernacExtend",
                        "4450308f0d154f148cb448f0f4bcf00544c356ae"
                    ]
                },
                {
                    "command": [
                        "apply multA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "5a4d62968a3f4650bb931bbccce41d86a113f65d"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_l.",
                        "VernacExtend",
                        "e925e477e5dc9e5d83c34d7b09a8f2061f7cc1ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T1_multTerm_r",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 H'; elim H'; intros H'0 H'1; rewrite H'1; clear H'.",
                        "VernacExtend",
                        "27a3d1186489dd87591a08621f12c9bff2bc48ff"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a0 A1); auto.",
                        "VernacExtend",
                        "93402311bbed06cddda837ca95ce7c7079e9e8a9"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA A1 a0); auto.",
                        "VernacExtend",
                        "92d4614e7156112a48f38fe7d3946be739305662"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply multA_A1_l with (1 := cs); auto.",
                        "VernacExtend",
                        "3a3cae72e2572e1f2069f837240edd2c871e5169"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_r.",
                        "VernacExtend",
                        "ab805bb310cc8c61abb05b3b2781b85524edc905"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nZero_invTerm_T1",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "apply nZero_invTerm_nZero; auto.",
                        "VernacExtend",
                        "fed4008f0c12e33c3edae8af2eaa738048284e0a"
                    ]
                },
                {
                    "command": [
                        "exact T1_nz.",
                        "VernacExtend",
                        "4c2034cba8d6036ab916a50218bbdc3168de62e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_invTerm_com",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0; split; auto.",
                        "VernacExtend",
                        "0ce3a93aee69d134195316a5500e9b45c719895c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (invA a1) a0) A0); auto.",
                        "VernacExtend",
                        "e513844dbe48546cb9cf2f2320e94c547d0164d0"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (invA a1) a0) (plusA (multA a1 a0) (invA (multA a1 a0)))); auto.",
                        "VernacExtend",
                        "e2f7cd91c958bc94f1849f9c211a98f40c288924"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA (multA (invA a1) a0) (multA a1 a0)) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "5da0fefc820ea0f4504af3c52efaf5263aa52803"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (plusA (invA a1) a1) a0) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "225b20fca1db38f478ea3a8bc53586e3114c53bf"
                    ]
                },
                {
                    "command": [
                        "apply plusA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "9f8e9069229e77400aef6f995ce741f0fb737ca3"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a0 (invA a1)) (multA a0 a1)); auto.",
                        "VernacExtend",
                        "a7e9f7709ba76a6a8dbfe3429127f9edaba794da"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (multA a0 (plusA (invA a1) a1)); auto.",
                        "VernacExtend",
                        "c673b248915f70e951417833a47dcd00a5bbaf98"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA (plusA a1 (invA a1)) a0) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "ff699035abea07b31cd65b6f306da3b10d571286"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA A0 a0) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "1b1827051aee94db3986a1e71c68bd914b9f7dba"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "6f754d52753aef6d83b98539427bc79805e3fb1c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (multA a1 a0)) A0); auto.",
                        "VernacExtend",
                        "b9505d41ca51c059731224e2ab3bc0752b757676"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_invTerm_com_r",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0; split; auto.",
                        "VernacExtend",
                        "0ce3a93aee69d134195316a5500e9b45c719895c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (invA a0)) A0); auto.",
                        "VernacExtend",
                        "a096083d634d0208ecc03effb3bdbc471ed9815f"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (invA a0)) (plusA (multA a1 a0) (invA (multA a1 a0)))); auto.",
                        "VernacExtend",
                        "3bea8ccbc87932ed1fdd8afc86746004f2d91a5c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (plusA (multA a1 (invA a0)) (multA a1 a0)) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "58d379439ebb3b68e8b7902d0ff2598b4f36defa"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (plusA (invA a0) a0)) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "80c813b73cad7b87d10d705a1cefb2339be4e8ce"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 (plusA a0 (invA a0))) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "4eb25d6707cfa8d31854adbe0e235241a1a08d4b"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA a1 A0) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "5fa93d0838ec9230cca5cd350a19f01bd830a74a"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (multA A0 a1) (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "595fc044efe9c2ff56893eefc3d9380b1619ba09"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA A0 (invA (multA a1 a0))); auto.",
                        "VernacExtend",
                        "6f754d52753aef6d83b98539427bc79805e3fb1c"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (plusA (invA (multA a1 a0)) A0); auto.",
                        "VernacExtend",
                        "b9505d41ca51c059731224e2ab3bc0752b757676"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_invTerm_comp",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "invTerm_eqT",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T1_eqT",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 H1; case H1; intros H2 H3; auto.",
                        "VernacExtend",
                        "8690402e105f81d67cd9d7d0f0a9ce526b95d79a"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; auto.",
                        "VernacExtend",
                        "81f0b52fdaf5f5da8eefafd4263db88cb26c67d0"
                    ]
                },
                {
                    "command": [
                        "unfold eqT in |- *; simpl in |- *; apply sym_eq; unfold M1 in |- *; apply mult_mon_zero_l.",
                        "VernacExtend",
                        "1409acabb60e117e1e1221d113369ddea71b8a97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_T1_eqT",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minusTerm",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; exact (minusA b2 b3, c2).",
                        "VernacExtend",
                        "e76a1b95937a20b8c46d7e909565f1b94f195f77"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_minusTerm_plusTerm_invTerm",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply minusA_def with (1 := cs); auto.",
                        "VernacExtend",
                        "dc35bf44dd7417e06ea4a1f7fe02dcc1c41d8922"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minusTerm_eqT",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_minusTerm",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "intros a; apply zeroP_comp_eqTerm with (a := plusTerm a (invTerm a)); auto.",
                        "VernacExtend",
                        "516d1ad6f898f0e40f88b32b4096b4f364c98f05"
                    ]
                },
                {
                    "command": [
                        "apply plusTerm_invTerm_zeroP; auto.",
                        "VernacExtend",
                        "aaa0a9a83591d9119978d9e3b898c70fd5b15ea1"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_sym; apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
                        "VernacExtend",
                        "dc444540a6e938b5ed96bc89cb59d2466ec96c95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_zeroP_div",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 H.",
                        "VernacExtend",
                        "d57829dd480dc44d17b934fb4a9a05d32a1882cd"
                    ]
                },
                {
                    "command": [
                        "apply A_sep with (2 := eqA_dec) (1 := cs); auto.",
                        "VernacExtend",
                        "9cf082d4c0f2b0efb8fcc6bdee5c376eb30713ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_minusTerm_dist_l",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "intros a b c eqT1.",
                        "VernacExtend",
                        "c921fdccc21761e28a8cee9f02601b7a828a8231"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_trans with (y := multTerm (plusTerm a (invTerm b)) c); auto.",
                        "VernacExtend",
                        "6e228815eeee8347c5d6712f3a46bde86f56a30f"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_trans with (y := plusTerm (multTerm a c) (multTerm (invTerm b) c)); auto.",
                        "VernacExtend",
                        "327cabc58cf738dfd8ec36052fbef6ddd97434d6"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_trans with (y := plusTerm (multTerm a c) (invTerm (multTerm b c))); auto.",
                        "VernacExtend",
                        "ec2bddaf61228d4f5d95ed10bc78516fd6d1e58a"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
                        "VernacExtend",
                        "0696a6fbd8a0d528683b20163a36a31e41f9bc81"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_plusTerm_comp; auto.",
                        "VernacExtend",
                        "1e522bd2b936cc83374184cdc2594b5da583bbdf"
                    ]
                },
                {
                    "command": [
                        "apply eqT_trans with (y := multTerm b c); auto.",
                        "VernacExtend",
                        "0bfc79ba055072ee971daeba3adee1e053967005"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_eqT; auto.",
                        "VernacExtend",
                        "4d711045e990e2c51df6dd436d5c246f6cb19533"
                    ]
                },
                {
                    "command": [
                        "apply invTerm_eqT; auto.",
                        "VernacExtend",
                        "c7fe1a22ac75f830ddecbf5edb57c5b43bd402dc"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_eqT; auto.",
                        "VernacExtend",
                        "4d711045e990e2c51df6dd436d5c246f6cb19533"
                    ]
                },
                {
                    "command": [
                        "apply eqT_trans with (y := b); auto.",
                        "VernacExtend",
                        "49da3e4285211ef126536569205db91ec642e5a2"
                    ]
                },
                {
                    "command": [
                        "apply invTerm_eqT; auto.",
                        "VernacExtend",
                        "c7fe1a22ac75f830ddecbf5edb57c5b43bd402dc"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_refl; auto.",
                        "VernacExtend",
                        "5d7ff81d79fdce7ed5178b584a592e12e73bdc73"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_sym; apply mult_invTerm_com; auto.",
                        "VernacExtend",
                        "8480c596159ab6049efeeee8e03f37ca6f84e75c"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_plusTerm_dist_l; auto.",
                        "VernacExtend",
                        "360a59aaee581b7d517995301a77693a36844b7a"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp; auto.",
                        "VernacExtend",
                        "d8c3fc312c8b191428ab387d0ee53a480a8be51d"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_sym; apply eqTerm_minusTerm_plusTerm_invTerm; auto.",
                        "VernacExtend",
                        "dc444540a6e938b5ed96bc89cb59d2466ec96c95"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_refl; auto.",
                        "VernacExtend",
                        "5d7ff81d79fdce7ed5178b584a592e12e73bdc73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nzeroP_multTerm",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0; red in |- *; intros H'1; elim multTerm_zeroP_div with (a := a) (b := b); auto.",
                        "VernacExtend",
                        "a875dffd5a89c08c350013f576bed1bdf52035db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}