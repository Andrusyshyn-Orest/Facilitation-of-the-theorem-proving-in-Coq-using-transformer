{
    "filename": "Relation_Operators_compat.v",
    "coq_project": "buchberger",
    "vernac_cmds": [
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "Require Import Transitive_Closure.",
            "VernacRequire",
            "d119b84a9ec12fca5a97fe0acdabd37b9074320b"
        ],
        [
            "Local Open Scope list_scope.",
            "VernacOpenCloseScope",
            "b7ffbc8664ccf2e54673194b986563efc763189d"
        ],
        [
            "Section Lexicographic_Exponentiation.",
            "VernacBeginSection",
            "7b3e2e5b10eacf085918147a7df0a7145a6c2066"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable leA : A -> A -> Prop.",
            "VernacAssumption",
            "a3a167d12c7b87905bc3dfcee3cf1dfd437c8c25"
        ],
        [
            "Let Nil := nil (A:=A).",
            "VernacDefinition",
            "1e9a00939a57a0b4039e7f556a7b27bea6d939e9"
        ],
        [
            "Let List := list A.",
            "VernacDefinition",
            "c12b36ac27c5ff65b9fbbdc25b9b69c08b1cc5bf"
        ],
        [
            "Inductive Ltl : List -> List -> Prop := | Lt_nil (a:A) (x:List) : Ltl Nil (a :: x) | Lt_hd (a b:A) : leA a b -> forall x y:list A, Ltl (a :: x) (b :: y) | Lt_tl (a:A) (x y:List) : Ltl x y -> Ltl (a :: x) (a :: y).",
            "VernacInductive",
            "608accb3a8479c3e00755486478746e5e1ef68ce"
        ],
        [
            "Inductive Desc : List -> Prop := | d_nil : Desc Nil | d_one (x:A) : Desc (x :: Nil) | d_conc (x y:A) (l:List) : leA x y -> Desc (l ++ y :: Nil) -> Desc ((l ++ y :: Nil) ++ x :: Nil).",
            "VernacInductive",
            "dce7d62f5bc2cbe2207b69bdf40a8e9f6234aa91"
        ],
        [
            "Definition Pow : Set := sig Desc.",
            "VernacDefinition",
            "52afdaf4bf55ea4f4a1bd97f7c92f36bcbc93a17"
        ],
        [
            "Definition lex_exp (a b:Pow) : Prop := Ltl (proj1_sig a) (proj1_sig b).",
            "VernacDefinition",
            "a9d64318f9dbc1642a50cd6a166da5d222f7bbaf"
        ],
        [
            "End Lexicographic_Exponentiation.",
            "VernacEndSegment",
            "8c8651dc34efd320875757738a499441f9cbb00e"
        ],
        [
            "Section Wf_Lexicographic_Exponentiation.",
            "VernacBeginSection",
            "042c2c51538a63e842663d56565fc08cc2a0bad2"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable leA : A -> A -> Prop.",
            "VernacAssumption",
            "a3a167d12c7b87905bc3dfcee3cf1dfd437c8c25"
        ],
        [
            "Notation Power := (Pow A leA).",
            "VernacSyntacticDefinition",
            "91dca80ff7904b655781849056fce3dc7a8304e7"
        ],
        [
            "Notation Lex_Exp := (lex_exp A leA).",
            "VernacSyntacticDefinition",
            "cb2ab52874c65e8e3cdbe1f89081d43279102f31"
        ],
        [
            "Notation ltl := (Ltl A leA).",
            "VernacSyntacticDefinition",
            "e4408f15cc33eb8565698f11faa5136c65bc73bd"
        ],
        [
            "Notation Descl := (Desc A leA).",
            "VernacSyntacticDefinition",
            "91142e19f3637e52dffea702fb37d48ac13c932b"
        ],
        [
            "Notation List := (list A).",
            "VernacSyntacticDefinition",
            "22e1eddb335f9f561c46f3837a73ac126cd80307"
        ],
        [
            "Notation Nil := (nil (A:=A)).",
            "VernacSyntacticDefinition",
            "896464b0e3643983d602dab715e51198b37872d7"
        ],
        [
            "Notation Cons := (cons (A:=A)).",
            "VernacSyntacticDefinition",
            "05c52384596b8b9a66c0867643d4824c31031ff2"
        ],
        [
            "Notation \"<< x , y >>\" := (exist Descl x y) (at level 0, x, y at level 100).",
            "VernacNotation",
            "06437abb45d50255d6f74746b46fce6980a387e2"
        ],
        [
            "Lemma left_prefix : forall x y z:List, ltl (x ++ y) z -> ltl x z.",
            "VernacStartTheoremProof",
            "383f26e6ab47c686289a592480c056acdc9ecd56"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "simple induction z.",
            "VernacExtend",
            "44c7edb1f28394cb9f2de0c9c7bb59e5c969e0f3"
        ],
        [
            "simpl; intros H.",
            "VernacExtend",
            "b5476f89307becbcdf3b38db9846f4e56f6d806f"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "simpl; intros; apply (Lt_nil A leA).",
            "VernacExtend",
            "a7c6ab38a9063607c0ab02430a8e6bd323c38137"
        ],
        [
            "intros a l HInd.",
            "VernacExtend",
            "e0a9ff4d4fd4d8963facb8eb1223dba4aa5cbbcf"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "apply (Lt_hd A leA); auto with sets.",
            "VernacExtend",
            "a7f0dac14a147dca424434704aef855d273312c5"
        ],
        [
            "apply (Lt_tl A leA).",
            "VernacExtend",
            "52cedbf844f3b76986ca14e1b7de621ab2deff15"
        ],
        [
            "apply (HInd y y0); auto with sets.",
            "VernacExtend",
            "29c4d337d927e57887e31094edc60a7a27efe9d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma right_prefix : forall x y z:List, ltl x (y ++ z) -> ltl x y \\/ (exists y' : List, x = y ++ y' /\\ ltl y' z).",
            "VernacStartTheoremProof",
            "d7f058266413b73b0e199b7e06012695ee6a790e"
        ],
        [
            "intros x y; generalize x.",
            "VernacExtend",
            "c1f6e8a571c9281c2c581193d50f75ab10395a0e"
        ],
        [
            "elim y; simpl.",
            "VernacExtend",
            "fd54e458b01e0329ed0dda6dc6e1a61d5c593620"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists x0; auto with sets.",
            "VernacExtend",
            "7af952432ceff605e5c8288ce15f60166b8d19cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "left; apply (Lt_nil A leA).",
            "VernacExtend",
            "7ae12fe785c8c437d9810f83c93639fedcadca1e"
        ],
        [
            "left; apply (Lt_hd A leA); auto with sets.",
            "VernacExtend",
            "7dc6310ee491eecd6a61f4a97eefb11764d5b9ae"
        ],
        [
            "generalize (H x1 z H3).",
            "VernacExtend",
            "1b9061dabbc1f7464767de3d2ae74ed3f7f68465"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "left; apply (Lt_tl A leA); auto with sets.",
            "VernacExtend",
            "2febb027906b2b8bacf99ebc91ae51cfff50521b"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "right; exists x2; auto with sets.",
            "VernacExtend",
            "1f54855dc072f2ee770a7fd3c7f24f9d8ed0f95b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma desc_prefix : forall (x:List) (a:A), Descl (x ++ Cons a Nil) -> Descl x.",
            "VernacStartTheoremProof",
            "16c5ed0228d43a72b200605fed3c2e8e1a96b643"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "generalize (app_cons_not_nil _ _ _ H1); simple induction 1.",
            "VernacExtend",
            "f8685a651d93deae8436e1addb43dad910f2a7e9"
        ],
        [
            "cut (x ++ Cons a Nil = Cons x0 Nil); auto with sets.",
            "VernacExtend",
            "0e6464255eda2fce341c264a052121dabcdcb84c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (app_eq_unit _ _ H0).",
            "VernacExtend",
            "ca82d10292642e2525e3bf8d4fc9e1dbb9084b5b"
        ],
        [
            "simple induction 1; simple induction 1; intros.",
            "VernacExtend",
            "7457a1a26948e1c8cbbd49e488b99defa50d58fb"
        ],
        [
            "rewrite H4; auto using d_nil with sets.",
            "VernacExtend",
            "79e403237dde397d37d646747e1656f2fc4124f0"
        ],
        [
            "discriminate H5.",
            "VernacExtend",
            "ef02ca358272dcb45f3c5198898bbd3a72883ea1"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H0).",
            "VernacExtend",
            "166b59dd120529bcdf384b398efb25ae30662bf9"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "rewrite <- H4; auto with sets.",
            "VernacExtend",
            "3d4f2b0a039c9804e2ce2a524afdbd6a2b3803e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma desc_tail : forall (x:List) (a b:A), Descl (Cons b (x ++ Cons a Nil)) -> clos_trans A leA a b.",
            "VernacStartTheoremProof",
            "eedb37a4c7c8894b44d75a1424f98b1e077f48a5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply rev_ind with (A := A) (P := fun x:List => forall a b:A, Descl (Cons b (x ++ Cons a Nil)) -> clos_trans A leA a b).",
            "VernacExtend",
            "a7db69c94e8453a6ee124c16cf719f5fe59aa4bd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "cut (Cons b (Cons a Nil) = (Nil ++ Cons b Nil) ++ Cons a Nil); auto with sets; intro.",
            "VernacExtend",
            "8d7d6fc2659de47b7855e3e8f95c75e06dd0135f"
        ],
        [
            "generalize H0.",
            "VernacExtend",
            "83d8c9bf832ff69c91cc4428b24355f2bade716e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (app_inj_tail (l ++ Cons y Nil) (Nil ++ Cons b Nil) _ _ H4); simple induction 1.",
            "VernacExtend",
            "8dd17cbddcec22e5873671b03d37379f4b729498"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H6); simple induction 1; intros.",
            "VernacExtend",
            "a89a4226757eb8463a24853c25f30eabda7ca1ac"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "rewrite <- H10; rewrite <- H7; intro.",
            "VernacExtend",
            "da7dbf5eab1631a587a681480ea2a5f42f8ca237"
        ],
        [
            "apply (t_step A leA); auto with sets.",
            "VernacExtend",
            "61dda9a96b98f15b1b8d01d903de3e0367a04b5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "generalize (app_cons_not_nil _ _ _ H3); intro.",
            "VernacExtend",
            "a36042285d9cd6590323f051f3e9f6845c36771c"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "generalize H0.",
            "VernacExtend",
            "83d8c9bf832ff69c91cc4428b24355f2bade716e"
        ],
        [
            "generalize (app_comm_cons (l ++ Cons x0 Nil) (Cons a Nil) b); simple induction 1.",
            "VernacExtend",
            "1feac4dc93c50315d6d54694ac37251bd808e89e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (desc_prefix (Cons b (l ++ Cons x0 Nil)) a H5); intro.",
            "VernacExtend",
            "48288da52ae27498b73053a112cdabf13f321e9b"
        ],
        [
            "generalize (H x0 b H6).",
            "VernacExtend",
            "da66a8a61291e5ecd4372cda1a36e30750bdc590"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply t_trans with (A := A) (y := x0); auto with sets.",
            "VernacExtend",
            "63de12606ee3bb767ba48b077967d62ed3361e0a"
        ],
        [
            "apply t_step.",
            "VernacExtend",
            "ae663b91b2b9d3b30993ecbb722c5e8d1b26db4a"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "rewrite H4; intro.",
            "VernacExtend",
            "62c89e1b445fdf3083378dc1877ae1292d85fd36"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H8); simple induction 1.",
            "VernacExtend",
            "240e7c8d9fd107798ac7e4acb076285cee4b9ef9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize H2; generalize (app_comm_cons l (Cons x0 Nil) b).",
            "VernacExtend",
            "b120505208d6107f4e059b6f793829c4509cc882"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize H10.",
            "VernacExtend",
            "e74ba1731abeda777de35807692f2bd1ab4c1c15"
        ],
        [
            "rewrite H12; intro.",
            "VernacExtend",
            "e67affdc0004d553a4bb25989d46f52fdadc82dd"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H13); simple induction 1.",
            "VernacExtend",
            "03ba5ddbddea75772af05e42ca072d56f7a56ba3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H11; rewrite <- H16; auto with sets.",
            "VernacExtend",
            "4391e6b5e0ce6a3645ce87f87c6713e86a974de2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dist_aux : forall z:List, Descl z -> forall x y:List, z = x ++ y -> Descl x /\\ Descl y.",
            "VernacStartTheoremProof",
            "ef37971556452d3a24e871a0f4e590fc4f743b06"
        ],
        [
            "intros z D.",
            "VernacExtend",
            "6f8a5104b1aee360f4cce8754887ceda4e9a6430"
        ],
        [
            "elim D.",
            "VernacExtend",
            "7a9c8d0274629badfb1f72f9abd35b916ccace25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (x ++ y = Nil); auto with sets; intro.",
            "VernacExtend",
            "56e1e5dd879eb3e85e147710d25def0a210adfdd"
        ],
        [
            "generalize (app_eq_nil _ _ H0); simple induction 1.",
            "VernacExtend",
            "58f852184f9e060d4eb49b92652f76f961dae703"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H2; rewrite H3; split; apply d_nil.",
            "VernacExtend",
            "1803697e5a8f9b68e52f82dc4d479be117aacf49"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (x0 ++ y = Cons x Nil); auto with sets.",
            "VernacExtend",
            "b52de4018d3c6703b79f2d80cc7ee91f9ad9d747"
        ],
        [
            "intros E.",
            "VernacExtend",
            "7ecb6d4dc9a9ce53bbd861c2f62e95916583a3a9"
        ],
        [
            "generalize (app_eq_unit _ _ E); simple induction 1.",
            "VernacExtend",
            "cfd8096f549666343d9be7428ac465c3fcd9d18c"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "rewrite H2; rewrite H3; split.",
            "VernacExtend",
            "e4512bd9921093db956d176da39fc5bf0ffa614c"
        ],
        [
            "apply d_nil.",
            "VernacExtend",
            "1b386056496916bb8ad5112cba5b3df596124092"
        ],
        [
            "apply d_one.",
            "VernacExtend",
            "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "rewrite H2; rewrite H3; split.",
            "VernacExtend",
            "e4512bd9921093db956d176da39fc5bf0ffa614c"
        ],
        [
            "apply d_one.",
            "VernacExtend",
            "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
        ],
        [
            "apply d_nil.",
            "VernacExtend",
            "1b386056496916bb8ad5112cba5b3df596124092"
        ],
        [
            "do 5 intro.",
            "VernacExtend",
            "5882c01058e2f22843a818f2c078e897f42dd1c5"
        ],
        [
            "intros Hind.",
            "VernacExtend",
            "53e90cf9e6e6df2a501928072270c857aaefa6fd"
        ],
        [
            "do 2 intro.",
            "VernacExtend",
            "94cab4807bd907dc3f92e3b75fad36963d81fc73"
        ],
        [
            "generalize x0.",
            "VernacExtend",
            "0b37181bec904843a8d67dbb22af8740fab62d37"
        ],
        [
            "apply rev_ind with (A := A) (P := fun y0:List => forall x0:List, (l ++ Cons y Nil) ++ Cons x Nil = x0 ++ y0 -> Descl x0 /\\ Descl y0).",
            "VernacExtend",
            "307cda926dfdf9e35184c5354c2a612d2315325e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (app_nil_end x1); simple induction 1; simple induction 1.",
            "VernacExtend",
            "2007ce1931358afc508b4efaf502e1a4f66dc8ab"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply d_conc; auto with sets.",
            "VernacExtend",
            "c6a0d81c9bf664d48c1a7692eba736e18f330305"
        ],
        [
            "apply d_nil.",
            "VernacExtend",
            "1b386056496916bb8ad5112cba5b3df596124092"
        ],
        [
            "do 3 intro.",
            "VernacExtend",
            "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
        ],
        [
            "generalize x1.",
            "VernacExtend",
            "d06363aea195b7c30752ed148577e79f190762e4"
        ],
        [
            "apply rev_ind with (A := A) (P := fun l0:List => forall (x1:A) (x0:List), (l ++ Cons y Nil) ++ Cons x Nil = x0 ++ l0 ++ Cons x1 Nil -> Descl x0 /\\ Descl (l0 ++ Cons x1 Nil)).",
            "VernacExtend",
            "3b20bee60b9dc9d49fb030caf5d33a6c7ae7a266"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H2); simple induction 1.",
            "VernacExtend",
            "43fd5e7b7a13d04057091ce6955e22e3b091013b"
        ],
        [
            "simple induction 1; auto with sets.",
            "VernacExtend",
            "4de4da9795158583d09ff0851d854acf9567a9ee"
        ],
        [
            "apply d_one.",
            "VernacExtend",
            "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
        ],
        [
            "do 5 intro.",
            "VernacExtend",
            "5882c01058e2f22843a818f2c078e897f42dd1c5"
        ],
        [
            "generalize (app_ass x4 (l1 ++ Cons x2 Nil) (Cons x3 Nil)).",
            "VernacExtend",
            "98fa2cfcff621e2a61b836e45be8cab64b72f7f1"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "generalize (app_ass x4 l1 (Cons x2 Nil)); simple induction 1.",
            "VernacExtend",
            "9d36da72ffdf16e98029cd55a3eba0d88cd8586a"
        ],
        [
            "intro E.",
            "VernacExtend",
            "13d46d971c3499a3dac1bf2155cde13c674102c6"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ E).",
            "VernacExtend",
            "9987f128efe8b7fee91ed7f8297fdcd5c423ead3"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "generalize (app_inj_tail _ _ _ _ H6); simple induction 1; intros.",
            "VernacExtend",
            "a89a4226757eb8463a24853c25f30eabda7ca1ac"
        ],
        [
            "rewrite <- H7; rewrite <- H10; generalize H6.",
            "VernacExtend",
            "dffe6bcbe8a05b06d3304cb10164c812f194325f"
        ],
        [
            "generalize (app_ass x4 l1 (Cons x2 Nil)); intro E1.",
            "VernacExtend",
            "a1cf7bf8e51fa1b025f173b2713fb9afc32858f8"
        ],
        [
            "rewrite E1.",
            "VernacExtend",
            "b9c415ffa44d53a51b9f614458a27dcb3be2552d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (Hind x4 (l1 ++ Cons x2 Nil) H11).",
            "VernacExtend",
            "787d7ee25f80e719bd1e87b5cb7c2fedae90e40c"
        ],
        [
            "simple induction 1; split.",
            "VernacExtend",
            "0ea45cc31288fadbb894d0a84c777d324163e5c2"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "generalize H14.",
            "VernacExtend",
            "7b78ae4da4125ffcc3cd3a19b62b36298e6f4a8b"
        ],
        [
            "rewrite <- H10; intro.",
            "VernacExtend",
            "53e4986074f94dc0572074e07991a48b250107df"
        ],
        [
            "apply d_conc; auto with sets.",
            "VernacExtend",
            "c6a0d81c9bf664d48c1a7692eba736e18f330305"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dist_Desc_concat : forall x y:List, Descl (x ++ y) -> Descl x /\\ Descl y.",
            "VernacStartTheoremProof",
            "02086afe0671e1c2dd3b211e26807f7ec038c68c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (dist_aux (x ++ y) H x y); auto with sets.",
            "VernacExtend",
            "52add6c6b39a5df5ec8c6fc9b522b7402fbaff6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma desc_end : forall (a b:A) (x:List), Descl (x ++ Cons a Nil) /\\ ltl (x ++ Cons a Nil) (Cons b Nil) -> clos_trans A leA a b.",
            "VernacStartTheoremProof",
            "695caa8464832b40b05bee95394be1e726f2a797"
        ],
        [
            "intros a b x.",
            "VernacExtend",
            "e0d4a4c47bd4b3bc1511808da2311791f6515cfb"
        ],
        [
            "case x.",
            "VernacExtend",
            "ff73d135d2805abb527daeb7acd470185a7b2435"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H1; auto with sets.",
            "VernacExtend",
            "9627ffffd2d888e1f383686a7f97467866393994"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "generalize (app_comm_cons l (Cons a Nil) a0).",
            "VernacExtend",
            "34f63282c0ec683888b9ced76931ecf5eab138ee"
        ],
        [
            "intros E; rewrite <- E; intros.",
            "VernacExtend",
            "a5a5a526111c3082fa6bc5e76c09fc32557a13d6"
        ],
        [
            "generalize (desc_tail l a a0 H0); intro.",
            "VernacExtend",
            "084ab9cf750cc33b0e8835db01287fe3ff3bbb07"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "apply t_trans with (y := a0); auto with sets.",
            "VernacExtend",
            "1d6bdecc159a8aea8eeca411cd24ccdfee9ba21d"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltl_unit : forall (x:List) (a b:A), Descl (x ++ Cons a Nil) -> ltl (x ++ Cons a Nil) (Cons b Nil) -> ltl x (Cons b Nil).",
            "VernacStartTheoremProof",
            "dbb97e4c01ef6008aa1d465b4df7c9a137ccd58f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case x.",
            "VernacExtend",
            "ff73d135d2805abb527daeb7acd470185a7b2435"
        ],
        [
            "intros; apply (Lt_nil A leA).",
            "VernacExtend",
            "898fee4c8065cd7764370dfe4af0c4ecba965e86"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "apply (Lt_hd A leA a b); auto with sets.",
            "VernacExtend",
            "ff12f053d12d645447df09bf7bc18a511786f6a6"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma acc_app : forall (x1 x2:List) (y1:Descl (x1 ++ x2)), Acc Lex_Exp << x1 ++ x2, y1 >> -> forall (x:List) (y:Descl x), ltl x (x1 ++ x2) -> Acc Lex_Exp << x, y >>.",
            "VernacStartTheoremProof",
            "84eae51c7d21bbbad00ee3d25494c306482013af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Acc_inv (R:=Lex_Exp) (x:=<< x1 ++ x2, y1 >>)).",
            "VernacExtend",
            "a66f13019fbc0bd8bbe5643b01848461ff07ac50"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "unfold lex_exp; simpl; auto with sets.",
            "VernacExtend",
            "12e5c8813fc848051cb804db21484b315dd40b7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem wf_lex_exp : well_founded leA -> well_founded Lex_Exp.",
            "VernacStartTheoremProof",
            "024024abfc2f9656169e8f2109ed5aa776b39374"
        ],
        [
            "unfold well_founded at 2.",
            "VernacExtend",
            "90528768a1e204e7ca45f5b1a18d8d296b264b59"
        ],
        [
            "simple induction a; intros x y.",
            "VernacExtend",
            "14a4a90d28a1d65a576e6baf99d0ec89d61ea176"
        ],
        [
            "apply Acc_intro.",
            "VernacExtend",
            "2b155962537e5aa33952f28b98ee9d20165727a6"
        ],
        [
            "simple induction y0.",
            "VernacExtend",
            "4c7195dc72bf5f49162c53d10545a37f422f92b2"
        ],
        [
            "unfold lex_exp at 1; simpl.",
            "VernacExtend",
            "d222fc6d1d0d6a5985b99015164aa9d9ed762945"
        ],
        [
            "apply rev_ind with (A := A) (P := fun x:List => forall (x0:List) (y:Descl x0), ltl x0 x -> Acc Lex_Exp << x0, y >>).",
            "VernacExtend",
            "cd4724d041b75c627c6d6da2d8eaa00001a420c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (well_founded_ind (wf_clos_trans A leA H)).",
            "VernacExtend",
            "00070c55f88de7fd1a80643d042197ee014d6b18"
        ],
        [
            "intros GR.",
            "VernacExtend",
            "f9d901be88376290a1c7d13fc5b3ff3e62f62ba5"
        ],
        [
            "apply GR with (P := fun x0:A => forall l:List, (forall (x1:List) (y:Descl x1), ltl x1 l -> Acc Lex_Exp << x1, y >>) -> forall (x1:List) (y:Descl x1), ltl x1 (l ++ Cons x0 Nil) -> Acc Lex_Exp << x1, y >>).",
            "VernacExtend",
            "f8e8ff655c13bf288fd7cb2a59145d74d670af5d"
        ],
        [
            "intro; intros HInd; intros.",
            "VernacExtend",
            "25c158dfdd8ef5c316768ce18fa93c5f17ef5566"
        ],
        [
            "generalize (right_prefix x2 l (Cons x1 Nil) H1).",
            "VernacExtend",
            "9c3d0ac845f42df2a130900ca7b7d10cd843a4d7"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intro; apply (H0 x2 y1 H3).",
            "VernacExtend",
            "6b539e6498fbd1220993af67c1460888c7f5b901"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intro; simple induction 1.",
            "VernacExtend",
            "25b0e9729a0069bd1368323f21f0a3a17d9f12c0"
        ],
        [
            "clear H4 H2.",
            "VernacExtend",
            "7231f417f48e2604bf89be7b075fe33cb314dfb1"
        ],
        [
            "intro; generalize y1; clear y1.",
            "VernacExtend",
            "66ccc077bd0bd5c58830c46fcbef7913f2814efe"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply rev_ind with (A := A) (P := fun x3:List => forall y1:Descl (l ++ x3), ltl x3 (Cons x1 Nil) -> Acc Lex_Exp << l ++ x3, y1 >>).",
            "VernacExtend",
            "514e5161cdf68fddbe719ea6fc3ee39c58374d95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (app_nil_end l); intros Heq.",
            "VernacExtend",
            "85a0a09694dfcf942a70bc4370a106a778e5f1bb"
        ],
        [
            "generalize y1.",
            "VernacExtend",
            "5cc9c86662a2ae8778de81ee06331697788d2440"
        ],
        [
            "clear y1.",
            "VernacExtend",
            "ec4b3cda850663f1c7d781409f3f7c959ef2bdbd"
        ],
        [
            "rewrite <- Heq.",
            "VernacExtend",
            "df31059972bb579c31a423b0d265991ce83be52f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply Acc_intro.",
            "VernacExtend",
            "2b155962537e5aa33952f28b98ee9d20165727a6"
        ],
        [
            "simple induction y2.",
            "VernacExtend",
            "9cf62b02fb7f8272b50783f65cec760ec3c17817"
        ],
        [
            "unfold lex_exp at 1.",
            "VernacExtend",
            "476c506da4488ef140c15c0f836d7380fc4bbae5"
        ],
        [
            "simpl; intros x4 y3.",
            "VernacExtend",
            "8366a4008b53d6a46980c2e9c991b280471e831e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H0 x4 y3); auto with sets.",
            "VernacExtend",
            "fe1aef740d450b24c3cc0375f17883815fcb616c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (dist_Desc_concat l (l0 ++ Cons x4 Nil) y1).",
            "VernacExtend",
            "b77660525199763d829c3c63f136fc4ee66a0647"
        ],
        [
            "simple induction 1.",
            "VernacExtend",
            "b1f838dd75029717483785a8785c7867663c75bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (desc_end x4 x1 l0 (conj H8 H5)); intros.",
            "VernacExtend",
            "5f02dbcfe3638281c9f634e58fa16de7dbc751c6"
        ],
        [
            "generalize y1.",
            "VernacExtend",
            "5cc9c86662a2ae8778de81ee06331697788d2440"
        ],
        [
            "rewrite <- (app_ass l l0 (Cons x4 Nil)); intro.",
            "VernacExtend",
            "9fae77bdfcac4d41aecc64a2fcfa83426d4ddc42"
        ],
        [
            "generalize (HInd x4 H9 (l ++ l0)); intros HInd2.",
            "VernacExtend",
            "46358e19afeae48d8230264e66e3e5457cfcd1fa"
        ],
        [
            "generalize (ltl_unit l0 x4 x1 H8 H5); intro.",
            "VernacExtend",
            "a2e1560b9ba3305af6c416cb408eeefc53530faa"
        ],
        [
            "generalize (dist_Desc_concat (l ++ l0) (Cons x4 Nil) y2).",
            "VernacExtend",
            "c9895b4a34381038e15ec056ec0d650b8368df5d"
        ],
        [
            "simple induction 1; intros.",
            "VernacExtend",
            "8b54c80df1b4890684639c3f84a62f176fb57476"
        ],
        [
            "generalize (H4 H12 H10); intro.",
            "VernacExtend",
            "dfe17e0780817a6023b3423b8a3680a15ddd1e0a"
        ],
        [
            "generalize (Acc_inv H14).",
            "VernacExtend",
            "49f78e8edfc9485d5ed651c2ae9bc406bf14de68"
        ],
        [
            "generalize (acc_app l l0 H12 H14).",
            "VernacExtend",
            "519b470bd1a95b8c63b9699bae92d9869fb42594"
        ],
        [
            "intros f g.",
            "VernacExtend",
            "521e6411730acbceb6c478f2dac25ce19229b6b6"
        ],
        [
            "generalize (HInd2 f); intro.",
            "VernacExtend",
            "831a874948d9da86c98d251a73573c55b1ebd0df"
        ],
        [
            "apply Acc_intro.",
            "VernacExtend",
            "2b155962537e5aa33952f28b98ee9d20165727a6"
        ],
        [
            "simple induction y3.",
            "VernacExtend",
            "8c52d531a196051470c18ef0fc9be415fda8faaf"
        ],
        [
            "unfold lex_exp at 1; simpl; intros.",
            "VernacExtend",
            "bb8804914859fdbc4b48b7ec6723ac5eb05dc2e5"
        ],
        [
            "apply H15; auto with sets.",
            "VernacExtend",
            "7946349b4d27326fccbd917b62c571bbf510c360"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Wf_Lexicographic_Exponentiation.",
            "VernacEndSegment",
            "4873100a226826f0c08ec0b9f59544e8994f514b"
        ]
    ],
    "proofs": [
        {
            "name": "left_prefix",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "simple induction z.",
                        "VernacExtend",
                        "44c7edb1f28394cb9f2de0c9c7bb59e5c969e0f3"
                    ]
                },
                {
                    "command": [
                        "simpl; intros H.",
                        "VernacExtend",
                        "b5476f89307becbcdf3b38db9846f4e56f6d806f"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "simpl; intros; apply (Lt_nil A leA).",
                        "VernacExtend",
                        "a7c6ab38a9063607c0ab02430a8e6bd323c38137"
                    ]
                },
                {
                    "command": [
                        "intros a l HInd.",
                        "VernacExtend",
                        "e0a9ff4d4fd4d8963facb8eb1223dba4aa5cbbcf"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "apply (Lt_hd A leA); auto with sets.",
                        "VernacExtend",
                        "a7f0dac14a147dca424434704aef855d273312c5"
                    ]
                },
                {
                    "command": [
                        "apply (Lt_tl A leA).",
                        "VernacExtend",
                        "52cedbf844f3b76986ca14e1b7de621ab2deff15"
                    ]
                },
                {
                    "command": [
                        "apply (HInd y y0); auto with sets.",
                        "VernacExtend",
                        "29c4d337d927e57887e31094edc60a7a27efe9d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "right_prefix",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros x y; generalize x.",
                        "VernacExtend",
                        "c1f6e8a571c9281c2c581193d50f75ab10395a0e"
                    ]
                },
                {
                    "command": [
                        "elim y; simpl.",
                        "VernacExtend",
                        "fd54e458b01e0329ed0dda6dc6e1a61d5c593620"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists x0; auto with sets.",
                        "VernacExtend",
                        "7af952432ceff605e5c8288ce15f60166b8d19cd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "left; apply (Lt_nil A leA).",
                        "VernacExtend",
                        "7ae12fe785c8c437d9810f83c93639fedcadca1e"
                    ]
                },
                {
                    "command": [
                        "left; apply (Lt_hd A leA); auto with sets.",
                        "VernacExtend",
                        "7dc6310ee491eecd6a61f4a97eefb11764d5b9ae"
                    ]
                },
                {
                    "command": [
                        "generalize (H x1 z H3).",
                        "VernacExtend",
                        "1b9061dabbc1f7464767de3d2ae74ed3f7f68465"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "left; apply (Lt_tl A leA); auto with sets.",
                        "VernacExtend",
                        "2febb027906b2b8bacf99ebc91ae51cfff50521b"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "rewrite H8.",
                        "VernacExtend",
                        "ef335154f8a1120928ddce71bc7a2456078d36bc"
                    ]
                },
                {
                    "command": [
                        "right; exists x2; auto with sets.",
                        "VernacExtend",
                        "1f54855dc072f2ee770a7fd3c7f24f9d8ed0f95b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "desc_prefix",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "generalize (app_cons_not_nil _ _ _ H1); simple induction 1.",
                        "VernacExtend",
                        "f8685a651d93deae8436e1addb43dad910f2a7e9"
                    ]
                },
                {
                    "command": [
                        "cut (x ++ Cons a Nil = Cons x0 Nil); auto with sets.",
                        "VernacExtend",
                        "0e6464255eda2fce341c264a052121dabcdcb84c"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (app_eq_unit _ _ H0).",
                        "VernacExtend",
                        "ca82d10292642e2525e3bf8d4fc9e1dbb9084b5b"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; simple induction 1; intros.",
                        "VernacExtend",
                        "7457a1a26948e1c8cbbd49e488b99defa50d58fb"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; auto using d_nil with sets.",
                        "VernacExtend",
                        "79e403237dde397d37d646747e1656f2fc4124f0"
                    ]
                },
                {
                    "command": [
                        "discriminate H5.",
                        "VernacExtend",
                        "ef02ca358272dcb45f3c5198898bbd3a72883ea1"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H0).",
                        "VernacExtend",
                        "166b59dd120529bcdf384b398efb25ae30662bf9"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4; auto with sets.",
                        "VernacExtend",
                        "3d4f2b0a039c9804e2ce2a524afdbd6a2b3803e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "desc_tail",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply rev_ind with (A := A) (P := fun x:List => forall a b:A, Descl (Cons b (x ++ Cons a Nil)) -> clos_trans A leA a b).",
                        "VernacExtend",
                        "a7db69c94e8453a6ee124c16cf719f5fe59aa4bd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "cut (Cons b (Cons a Nil) = (Nil ++ Cons b Nil) ++ Cons a Nil); auto with sets; intro.",
                        "VernacExtend",
                        "8d7d6fc2659de47b7855e3e8f95c75e06dd0135f"
                    ]
                },
                {
                    "command": [
                        "generalize H0.",
                        "VernacExtend",
                        "83d8c9bf832ff69c91cc4428b24355f2bade716e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail (l ++ Cons y Nil) (Nil ++ Cons b Nil) _ _ H4); simple induction 1.",
                        "VernacExtend",
                        "8dd17cbddcec22e5873671b03d37379f4b729498"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H6); simple induction 1; intros.",
                        "VernacExtend",
                        "a89a4226757eb8463a24853c25f30eabda7ca1ac"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H10; rewrite <- H7; intro.",
                        "VernacExtend",
                        "da7dbf5eab1631a587a681480ea2a5f42f8ca237"
                    ]
                },
                {
                    "command": [
                        "apply (t_step A leA); auto with sets.",
                        "VernacExtend",
                        "61dda9a96b98f15b1b8d01d903de3e0367a04b5b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "generalize (app_cons_not_nil _ _ _ H3); intro.",
                        "VernacExtend",
                        "a36042285d9cd6590323f051f3e9f6845c36771c"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "generalize H0.",
                        "VernacExtend",
                        "83d8c9bf832ff69c91cc4428b24355f2bade716e"
                    ]
                },
                {
                    "command": [
                        "generalize (app_comm_cons (l ++ Cons x0 Nil) (Cons a Nil) b); simple induction 1.",
                        "VernacExtend",
                        "1feac4dc93c50315d6d54694ac37251bd808e89e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (desc_prefix (Cons b (l ++ Cons x0 Nil)) a H5); intro.",
                        "VernacExtend",
                        "48288da52ae27498b73053a112cdabf13f321e9b"
                    ]
                },
                {
                    "command": [
                        "generalize (H x0 b H6).",
                        "VernacExtend",
                        "da66a8a61291e5ecd4372cda1a36e30750bdc590"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply t_trans with (A := A) (y := x0); auto with sets.",
                        "VernacExtend",
                        "63de12606ee3bb767ba48b077967d62ed3361e0a"
                    ]
                },
                {
                    "command": [
                        "apply t_step.",
                        "VernacExtend",
                        "ae663b91b2b9d3b30993ecbb722c5e8d1b26db4a"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "rewrite H4; intro.",
                        "VernacExtend",
                        "62c89e1b445fdf3083378dc1877ae1292d85fd36"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H8); simple induction 1.",
                        "VernacExtend",
                        "240e7c8d9fd107798ac7e4acb076285cee4b9ef9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize H2; generalize (app_comm_cons l (Cons x0 Nil) b).",
                        "VernacExtend",
                        "b120505208d6107f4e059b6f793829c4509cc882"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize H10.",
                        "VernacExtend",
                        "e74ba1731abeda777de35807692f2bd1ab4c1c15"
                    ]
                },
                {
                    "command": [
                        "rewrite H12; intro.",
                        "VernacExtend",
                        "e67affdc0004d553a4bb25989d46f52fdadc82dd"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H13); simple induction 1.",
                        "VernacExtend",
                        "03ba5ddbddea75772af05e42ca072d56f7a56ba3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H11; rewrite <- H16; auto with sets.",
                        "VernacExtend",
                        "4391e6b5e0ce6a3645ce87f87c6713e86a974de2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dist_aux",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros z D.",
                        "VernacExtend",
                        "6f8a5104b1aee360f4cce8754887ceda4e9a6430"
                    ]
                },
                {
                    "command": [
                        "elim D.",
                        "VernacExtend",
                        "7a9c8d0274629badfb1f72f9abd35b916ccace25"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (x ++ y = Nil); auto with sets; intro.",
                        "VernacExtend",
                        "56e1e5dd879eb3e85e147710d25def0a210adfdd"
                    ]
                },
                {
                    "command": [
                        "generalize (app_eq_nil _ _ H0); simple induction 1.",
                        "VernacExtend",
                        "58f852184f9e060d4eb49b92652f76f961dae703"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H3; split; apply d_nil.",
                        "VernacExtend",
                        "1803697e5a8f9b68e52f82dc4d479be117aacf49"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (x0 ++ y = Cons x Nil); auto with sets.",
                        "VernacExtend",
                        "b52de4018d3c6703b79f2d80cc7ee91f9ad9d747"
                    ]
                },
                {
                    "command": [
                        "intros E.",
                        "VernacExtend",
                        "7ecb6d4dc9a9ce53bbd861c2f62e95916583a3a9"
                    ]
                },
                {
                    "command": [
                        "generalize (app_eq_unit _ _ E); simple induction 1.",
                        "VernacExtend",
                        "cfd8096f549666343d9be7428ac465c3fcd9d18c"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H3; split.",
                        "VernacExtend",
                        "e4512bd9921093db956d176da39fc5bf0ffa614c"
                    ]
                },
                {
                    "command": [
                        "apply d_nil.",
                        "VernacExtend",
                        "1b386056496916bb8ad5112cba5b3df596124092"
                    ]
                },
                {
                    "command": [
                        "apply d_one.",
                        "VernacExtend",
                        "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H3; split.",
                        "VernacExtend",
                        "e4512bd9921093db956d176da39fc5bf0ffa614c"
                    ]
                },
                {
                    "command": [
                        "apply d_one.",
                        "VernacExtend",
                        "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
                    ]
                },
                {
                    "command": [
                        "apply d_nil.",
                        "VernacExtend",
                        "1b386056496916bb8ad5112cba5b3df596124092"
                    ]
                },
                {
                    "command": [
                        "do 5 intro.",
                        "VernacExtend",
                        "5882c01058e2f22843a818f2c078e897f42dd1c5"
                    ]
                },
                {
                    "command": [
                        "intros Hind.",
                        "VernacExtend",
                        "53e90cf9e6e6df2a501928072270c857aaefa6fd"
                    ]
                },
                {
                    "command": [
                        "do 2 intro.",
                        "VernacExtend",
                        "94cab4807bd907dc3f92e3b75fad36963d81fc73"
                    ]
                },
                {
                    "command": [
                        "generalize x0.",
                        "VernacExtend",
                        "0b37181bec904843a8d67dbb22af8740fab62d37"
                    ]
                },
                {
                    "command": [
                        "apply rev_ind with (A := A) (P := fun y0:List => forall x0:List, (l ++ Cons y Nil) ++ Cons x Nil = x0 ++ y0 -> Descl x0 /\\ Descl y0).",
                        "VernacExtend",
                        "307cda926dfdf9e35184c5354c2a612d2315325e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (app_nil_end x1); simple induction 1; simple induction 1.",
                        "VernacExtend",
                        "2007ce1931358afc508b4efaf502e1a4f66dc8ab"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply d_conc; auto with sets.",
                        "VernacExtend",
                        "c6a0d81c9bf664d48c1a7692eba736e18f330305"
                    ]
                },
                {
                    "command": [
                        "apply d_nil.",
                        "VernacExtend",
                        "1b386056496916bb8ad5112cba5b3df596124092"
                    ]
                },
                {
                    "command": [
                        "do 3 intro.",
                        "VernacExtend",
                        "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
                    ]
                },
                {
                    "command": [
                        "generalize x1.",
                        "VernacExtend",
                        "d06363aea195b7c30752ed148577e79f190762e4"
                    ]
                },
                {
                    "command": [
                        "apply rev_ind with (A := A) (P := fun l0:List => forall (x1:A) (x0:List), (l ++ Cons y Nil) ++ Cons x Nil = x0 ++ l0 ++ Cons x1 Nil -> Descl x0 /\\ Descl (l0 ++ Cons x1 Nil)).",
                        "VernacExtend",
                        "3b20bee60b9dc9d49fb030caf5d33a6c7ae7a266"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H2); simple induction 1.",
                        "VernacExtend",
                        "43fd5e7b7a13d04057091ce6955e22e3b091013b"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; auto with sets.",
                        "VernacExtend",
                        "4de4da9795158583d09ff0851d854acf9567a9ee"
                    ]
                },
                {
                    "command": [
                        "apply d_one.",
                        "VernacExtend",
                        "8741826c7d549b60eb0ab34fabf93aada3afdcf7"
                    ]
                },
                {
                    "command": [
                        "do 5 intro.",
                        "VernacExtend",
                        "5882c01058e2f22843a818f2c078e897f42dd1c5"
                    ]
                },
                {
                    "command": [
                        "generalize (app_ass x4 (l1 ++ Cons x2 Nil) (Cons x3 Nil)).",
                        "VernacExtend",
                        "98fa2cfcff621e2a61b836e45be8cab64b72f7f1"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "generalize (app_ass x4 l1 (Cons x2 Nil)); simple induction 1.",
                        "VernacExtend",
                        "9d36da72ffdf16e98029cd55a3eba0d88cd8586a"
                    ]
                },
                {
                    "command": [
                        "intro E.",
                        "VernacExtend",
                        "13d46d971c3499a3dac1bf2155cde13c674102c6"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ E).",
                        "VernacExtend",
                        "9987f128efe8b7fee91ed7f8297fdcd5c423ead3"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "generalize (app_inj_tail _ _ _ _ H6); simple induction 1; intros.",
                        "VernacExtend",
                        "a89a4226757eb8463a24853c25f30eabda7ca1ac"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H7; rewrite <- H10; generalize H6.",
                        "VernacExtend",
                        "dffe6bcbe8a05b06d3304cb10164c812f194325f"
                    ]
                },
                {
                    "command": [
                        "generalize (app_ass x4 l1 (Cons x2 Nil)); intro E1.",
                        "VernacExtend",
                        "a1cf7bf8e51fa1b025f173b2713fb9afc32858f8"
                    ]
                },
                {
                    "command": [
                        "rewrite E1.",
                        "VernacExtend",
                        "b9c415ffa44d53a51b9f614458a27dcb3be2552d"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (Hind x4 (l1 ++ Cons x2 Nil) H11).",
                        "VernacExtend",
                        "787d7ee25f80e719bd1e87b5cb7c2fedae90e40c"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; split.",
                        "VernacExtend",
                        "0ea45cc31288fadbb894d0a84c777d324163e5c2"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "generalize H14.",
                        "VernacExtend",
                        "7b78ae4da4125ffcc3cd3a19b62b36298e6f4a8b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H10; intro.",
                        "VernacExtend",
                        "53e4986074f94dc0572074e07991a48b250107df"
                    ]
                },
                {
                    "command": [
                        "apply d_conc; auto with sets.",
                        "VernacExtend",
                        "c6a0d81c9bf664d48c1a7692eba736e18f330305"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dist_Desc_concat",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (dist_aux (x ++ y) H x y); auto with sets.",
                        "VernacExtend",
                        "52add6c6b39a5df5ec8c6fc9b522b7402fbaff6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "desc_end",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros a b x.",
                        "VernacExtend",
                        "e0d4a4c47bd4b3bc1511808da2311791f6515cfb"
                    ]
                },
                {
                    "command": [
                        "case x.",
                        "VernacExtend",
                        "ff73d135d2805abb527daeb7acd470185a7b2435"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H1; auto with sets.",
                        "VernacExtend",
                        "9627ffffd2d888e1f383686a7f97467866393994"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "generalize (app_comm_cons l (Cons a Nil) a0).",
                        "VernacExtend",
                        "34f63282c0ec683888b9ced76931ecf5eab138ee"
                    ]
                },
                {
                    "command": [
                        "intros E; rewrite <- E; intros.",
                        "VernacExtend",
                        "a5a5a526111c3082fa6bc5e76c09fc32557a13d6"
                    ]
                },
                {
                    "command": [
                        "generalize (desc_tail l a a0 H0); intro.",
                        "VernacExtend",
                        "084ab9cf750cc33b0e8835db01287fe3ff3bbb07"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "apply t_trans with (y := a0); auto with sets.",
                        "VernacExtend",
                        "1d6bdecc159a8aea8eeca411cd24ccdfee9ba21d"
                    ]
                },
                {
                    "command": [
                        "inversion H4.",
                        "VernacExtend",
                        "184e412874313f14014d688ef3b69568302d00ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltl_unit",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case x.",
                        "VernacExtend",
                        "ff73d135d2805abb527daeb7acd470185a7b2435"
                    ]
                },
                {
                    "command": [
                        "intros; apply (Lt_nil A leA).",
                        "VernacExtend",
                        "898fee4c8065cd7764370dfe4af0c4ecba965e86"
                    ]
                },
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "apply (Lt_hd A leA a b); auto with sets.",
                        "VernacExtend",
                        "ff12f053d12d645447df09bf7bc18a511786f6a6"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "acc_app",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Acc_inv (R:=Lex_Exp) (x:=<< x1 ++ x2, y1 >>)).",
                        "VernacExtend",
                        "a66f13019fbc0bd8bbe5643b01848461ff07ac50"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "unfold lex_exp; simpl; auto with sets.",
                        "VernacExtend",
                        "12e5c8813fc848051cb804db21484b315dd40b7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_lex_exp",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "unfold well_founded at 2.",
                        "VernacExtend",
                        "90528768a1e204e7ca45f5b1a18d8d296b264b59"
                    ]
                },
                {
                    "command": [
                        "simple induction a; intros x y.",
                        "VernacExtend",
                        "14a4a90d28a1d65a576e6baf99d0ec89d61ea176"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro.",
                        "VernacExtend",
                        "2b155962537e5aa33952f28b98ee9d20165727a6"
                    ]
                },
                {
                    "command": [
                        "simple induction y0.",
                        "VernacExtend",
                        "4c7195dc72bf5f49162c53d10545a37f422f92b2"
                    ]
                },
                {
                    "command": [
                        "unfold lex_exp at 1; simpl.",
                        "VernacExtend",
                        "d222fc6d1d0d6a5985b99015164aa9d9ed762945"
                    ]
                },
                {
                    "command": [
                        "apply rev_ind with (A := A) (P := fun x:List => forall (x0:List) (y:Descl x0), ltl x0 x -> Acc Lex_Exp << x0, y >>).",
                        "VernacExtend",
                        "cd4724d041b75c627c6d6da2d8eaa00001a420c1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (well_founded_ind (wf_clos_trans A leA H)).",
                        "VernacExtend",
                        "00070c55f88de7fd1a80643d042197ee014d6b18"
                    ]
                },
                {
                    "command": [
                        "intros GR.",
                        "VernacExtend",
                        "f9d901be88376290a1c7d13fc5b3ff3e62f62ba5"
                    ]
                },
                {
                    "command": [
                        "apply GR with (P := fun x0:A => forall l:List, (forall (x1:List) (y:Descl x1), ltl x1 l -> Acc Lex_Exp << x1, y >>) -> forall (x1:List) (y:Descl x1), ltl x1 (l ++ Cons x0 Nil) -> Acc Lex_Exp << x1, y >>).",
                        "VernacExtend",
                        "f8e8ff655c13bf288fd7cb2a59145d74d670af5d"
                    ]
                },
                {
                    "command": [
                        "intro; intros HInd; intros.",
                        "VernacExtend",
                        "25c158dfdd8ef5c316768ce18fa93c5f17ef5566"
                    ]
                },
                {
                    "command": [
                        "generalize (right_prefix x2 l (Cons x1 Nil) H1).",
                        "VernacExtend",
                        "9c3d0ac845f42df2a130900ca7b7d10cd843a4d7"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intro; apply (H0 x2 y1 H3).",
                        "VernacExtend",
                        "6b539e6498fbd1220993af67c1460888c7f5b901"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intro; simple induction 1.",
                        "VernacExtend",
                        "25b0e9729a0069bd1368323f21f0a3a17d9f12c0"
                    ]
                },
                {
                    "command": [
                        "clear H4 H2.",
                        "VernacExtend",
                        "7231f417f48e2604bf89be7b075fe33cb314dfb1"
                    ]
                },
                {
                    "command": [
                        "intro; generalize y1; clear y1.",
                        "VernacExtend",
                        "66ccc077bd0bd5c58830c46fcbef7913f2814efe"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply rev_ind with (A := A) (P := fun x3:List => forall y1:Descl (l ++ x3), ltl x3 (Cons x1 Nil) -> Acc Lex_Exp << l ++ x3, y1 >>).",
                        "VernacExtend",
                        "514e5161cdf68fddbe719ea6fc3ee39c58374d95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (app_nil_end l); intros Heq.",
                        "VernacExtend",
                        "85a0a09694dfcf942a70bc4370a106a778e5f1bb"
                    ]
                },
                {
                    "command": [
                        "generalize y1.",
                        "VernacExtend",
                        "5cc9c86662a2ae8778de81ee06331697788d2440"
                    ]
                },
                {
                    "command": [
                        "clear y1.",
                        "VernacExtend",
                        "ec4b3cda850663f1c7d781409f3f7c959ef2bdbd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq.",
                        "VernacExtend",
                        "df31059972bb579c31a423b0d265991ce83be52f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro.",
                        "VernacExtend",
                        "2b155962537e5aa33952f28b98ee9d20165727a6"
                    ]
                },
                {
                    "command": [
                        "simple induction y2.",
                        "VernacExtend",
                        "9cf62b02fb7f8272b50783f65cec760ec3c17817"
                    ]
                },
                {
                    "command": [
                        "unfold lex_exp at 1.",
                        "VernacExtend",
                        "476c506da4488ef140c15c0f836d7380fc4bbae5"
                    ]
                },
                {
                    "command": [
                        "simpl; intros x4 y3.",
                        "VernacExtend",
                        "8366a4008b53d6a46980c2e9c991b280471e831e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (H0 x4 y3); auto with sets.",
                        "VernacExtend",
                        "fe1aef740d450b24c3cc0375f17883815fcb616c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (dist_Desc_concat l (l0 ++ Cons x4 Nil) y1).",
                        "VernacExtend",
                        "b77660525199763d829c3c63f136fc4ee66a0647"
                    ]
                },
                {
                    "command": [
                        "simple induction 1.",
                        "VernacExtend",
                        "b1f838dd75029717483785a8785c7867663c75bc"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (desc_end x4 x1 l0 (conj H8 H5)); intros.",
                        "VernacExtend",
                        "5f02dbcfe3638281c9f634e58fa16de7dbc751c6"
                    ]
                },
                {
                    "command": [
                        "generalize y1.",
                        "VernacExtend",
                        "5cc9c86662a2ae8778de81ee06331697788d2440"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (app_ass l l0 (Cons x4 Nil)); intro.",
                        "VernacExtend",
                        "9fae77bdfcac4d41aecc64a2fcfa83426d4ddc42"
                    ]
                },
                {
                    "command": [
                        "generalize (HInd x4 H9 (l ++ l0)); intros HInd2.",
                        "VernacExtend",
                        "46358e19afeae48d8230264e66e3e5457cfcd1fa"
                    ]
                },
                {
                    "command": [
                        "generalize (ltl_unit l0 x4 x1 H8 H5); intro.",
                        "VernacExtend",
                        "a2e1560b9ba3305af6c416cb408eeefc53530faa"
                    ]
                },
                {
                    "command": [
                        "generalize (dist_Desc_concat (l ++ l0) (Cons x4 Nil) y2).",
                        "VernacExtend",
                        "c9895b4a34381038e15ec056ec0d650b8368df5d"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros.",
                        "VernacExtend",
                        "8b54c80df1b4890684639c3f84a62f176fb57476"
                    ]
                },
                {
                    "command": [
                        "generalize (H4 H12 H10); intro.",
                        "VernacExtend",
                        "dfe17e0780817a6023b3423b8a3680a15ddd1e0a"
                    ]
                },
                {
                    "command": [
                        "generalize (Acc_inv H14).",
                        "VernacExtend",
                        "49f78e8edfc9485d5ed651c2ae9bc406bf14de68"
                    ]
                },
                {
                    "command": [
                        "generalize (acc_app l l0 H12 H14).",
                        "VernacExtend",
                        "519b470bd1a95b8c63b9699bae92d9869fb42594"
                    ]
                },
                {
                    "command": [
                        "intros f g.",
                        "VernacExtend",
                        "521e6411730acbceb6c478f2dac25ce19229b6b6"
                    ]
                },
                {
                    "command": [
                        "generalize (HInd2 f); intro.",
                        "VernacExtend",
                        "831a874948d9da86c98d251a73573c55b1ebd0df"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro.",
                        "VernacExtend",
                        "2b155962537e5aa33952f28b98ee9d20165727a6"
                    ]
                },
                {
                    "command": [
                        "simple induction y3.",
                        "VernacExtend",
                        "8c52d531a196051470c18ef0fc9be415fda8faaf"
                    ]
                },
                {
                    "command": [
                        "unfold lex_exp at 1; simpl; intros.",
                        "VernacExtend",
                        "bb8804914859fdbc4b48b7ec6723ac5eb05dc2e5"
                    ]
                },
                {
                    "command": [
                        "apply H15; auto with sets.",
                        "VernacExtend",
                        "7946349b4d27326fccbd917b62c571bbf510c360"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}