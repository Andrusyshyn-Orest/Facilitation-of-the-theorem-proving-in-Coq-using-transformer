{
    "filename": "Fred.v",
    "coq_project": "buchberger",
    "vernac_cmds": [
        [
            "Section Reduce.",
            "VernacBeginSection",
            "b813c527cb5c4f726aa353261c6d4800210d91e1"
        ],
        [
            "Variable poly : Set.",
            "VernacAssumption",
            "a03191e26472a0eaafc9c0963436900c30b9b762"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Variable cb : list poly -> poly -> Prop.",
            "VernacAssumption",
            "ed5ab7e3f7ec10ce06b9af723cdaacf81742962a"
        ],
        [
            "Variable divp : poly -> poly -> Prop.",
            "VernacAssumption",
            "8c7bb4fbbb2db9bccf07170e5cd85156d6589c0d"
        ],
        [
            "Variable reduce : list poly -> poly -> poly -> Prop.",
            "VernacAssumption",
            "885cc2736e2a07e392bfea295c866394545c2545"
        ],
        [
            "Variable nf : list poly -> poly -> poly.",
            "VernacAssumption",
            "8b4a0fb4baec4f34b9127b2707a980c21a69f0f5"
        ],
        [
            "Variable stable : list poly -> list poly -> Prop.",
            "VernacAssumption",
            "4e9e66cc0a692d8ce0f339ff5eb4f40dce444dad"
        ],
        [
            "Variable grobner : list poly -> Prop.",
            "VernacAssumption",
            "4085d923badebe3d13a5b7125aba9533ecd7ee59"
        ],
        [
            "Variable zero : poly.",
            "VernacAssumption",
            "27bea6bca23128a1dae83b09c4c39be14b759fa2"
        ],
        [
            "Variable zerop : poly -> Prop.",
            "VernacAssumption",
            "b046e88de3a0eab395d98eb21771931b35b81c76"
        ],
        [
            "Variable zerop_dec : forall p : poly, {zerop p} + {~ zerop p}.",
            "VernacAssumption",
            "81967bb5617a3e430f32c45b0549d33ce07d1dcc"
        ],
        [
            "Require Import LetP.",
            "VernacRequire",
            "6c146c437853f99c81f84e3afecf9fceffba49e7"
        ],
        [
            "Hypothesis cb_id : forall (L : list poly) (p : poly), In p L -> cb L p.",
            "VernacAssumption",
            "9b72ef1dc8c70361b016f2a79b58fa2a29ecd082"
        ],
        [
            "Hypothesis cb_zerop : forall (L : list poly) (p : poly), zerop p -> cb L p.",
            "VernacAssumption",
            "3938fe2bad62ba58ace038d899c4a0c182342241"
        ],
        [
            "Hypothesis cb_incl : forall (L1 L2 : list poly) (p : poly), incl L1 L2 -> cb L1 p -> cb L2 p.",
            "VernacAssumption",
            "ad24c60407cc87b5fb27f542a1acde3176ba47f1"
        ],
        [
            "Hypothesis nf_cb : forall (p : poly) (L : list poly), cb (p :: L) (nf L p).",
            "VernacAssumption",
            "10e4fd8965f794a95f76232867af63e84a2a4eb7"
        ],
        [
            "Hypothesis cb_trans : forall (L : list poly) (p q : poly), cb (p :: L) q -> cb L p -> cb L q.",
            "VernacAssumption",
            "0e4c9970737c8ae66a74496412e4e15e18e27936"
        ],
        [
            "Hypothesis cb_comp : forall L1 L2 : list poly, (forall p : poly, In p L1 -> cb L2 p) -> forall q : poly, cb L1 q -> cb L2 q.",
            "VernacAssumption",
            "ae3d9228169a116b186eb3d0bb2143d68ac79b11"
        ],
        [
            "Hypothesis cb_nf : forall (p : poly) (L : list poly), cb (nf L p :: L) p.",
            "VernacAssumption",
            "02b44c293da3f6123026061a29ad5a6eefbbfde0"
        ],
        [
            "Hypothesis cb_compo : forall (p : poly) (L1 : list poly), cb L1 p -> forall L2 : list poly, (forall q : poly, In q L1 -> cb L2 q) -> cb L2 p.",
            "VernacAssumption",
            "56f41b1fcc45956745b5f23737ac46d8d7cc9c59"
        ],
        [
            "Hypothesis zerop_elim_cb : forall (L : list poly) (p q : poly), zerop p -> cb (p :: L) q -> cb L q.",
            "VernacAssumption",
            "582beace00ce9600a358d080f25ecc426225d8dd"
        ],
        [
            "Hypothesis grobner_def : forall L : list poly, grobner L -> forall p : poly, cb L p -> zerop p \\/ (exists q : poly, reduce L p q).",
            "VernacAssumption",
            "c8df662f2e9f0d0f87e349241b8baa62817f9af4"
        ],
        [
            "Hypothesis def_grobner : forall L : list poly, (forall p : poly, cb L p -> zerop p \\/ (exists q : poly, reduce L p q)) -> grobner L.",
            "VernacAssumption",
            "2c823febde658f71fbb507325a90bd08bb742df4"
        ],
        [
            "Hypothesis nf_div : forall (p : poly) (L : list poly), ~ zerop p -> ~ zerop (nf L p) -> exists q : poly, In q (nf L p :: L) /\\ divp p q /\\ ~ zerop q.",
            "VernacAssumption",
            "2c206ba180dd6585a12e23273ad34710d30740b4"
        ],
        [
            "Hypothesis div_reduce : forall (p : poly) (L1 L2 : list poly), (forall r1 : poly, In r1 L1 -> ~ zerop r1 -> exists r2 : poly, In r2 L2 /\\ divp r1 r2) -> forall q : poly, reduce L1 p q -> exists r : poly, reduce L2 p r.",
            "VernacAssumption",
            "210e01ca51a3044b381349edbb4e2fa12176b122"
        ],
        [
            "Hypothesis divp_id : forall p : poly, divp p p.",
            "VernacAssumption",
            "db081ebcda11c098ba2ca43a3412628d7406fb59"
        ],
        [
            "Require Import Relation_Definitions.",
            "VernacRequire",
            "ba1086f65c0b2f6754b8273aa4aa004209b8f8b6"
        ],
        [
            "Hypothesis divp_trans : transitive poly divp.",
            "VernacAssumption",
            "5f40c8f22055d7601c6d9ef2cfecf4c2b105c9cd"
        ],
        [
            "Hypothesis nf_div_zero : forall (p : poly) (L : list poly), ~ zerop p -> zerop (nf L p) -> exists q : poly, In q L /\\ divp p q /\\ ~ zerop q.",
            "VernacAssumption",
            "1a0c5a4ee2eb2fc0c9810f14bc901a2642f88d37"
        ],
        [
            "Theorem zerop_nf_cb : forall (L : list poly) (p : poly), zerop (nf L p) -> cb L p.",
            "VernacStartTheoremProof",
            "280892e16145a4da54ff11e829555691e476f612"
        ],
        [
            "intros L p H'.",
            "VernacExtend",
            "7d7e774d180fff7b201d19d0672017d1342c670b"
        ],
        [
            "apply zerop_elim_cb with (p := nf L p); auto.",
            "VernacExtend",
            "5173c94492b96120c4a43f5108614e1bd6edfd82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve zerop_nf_cb.",
            "VernacHints",
            "19af23f52a8949a068c9a8bf7fa5b269408df0c1"
        ],
        [
            "Definition redacc : list poly -> list poly -> list poly.",
            "VernacDefinition",
            "9aae0f69f892f436bdcbc776cd523304845ba620"
        ],
        [
            "intros H'; elim H'.",
            "VernacExtend",
            "850d2dd5bc7ec70f1f608a0f14803631a8e5969f"
        ],
        [
            "intros L; exact (nil (A:=poly)).",
            "VernacExtend",
            "b30dd7df9af946b2855217ede3dbf4e2fa14f486"
        ],
        [
            "intros a p Rec Acc.",
            "VernacExtend",
            "13182dad5f5d9e21f58de9f0b59db96a9fbf66ab"
        ],
        [
            "apply LetP with (A := poly) (h := nf (p ++ Acc) a).",
            "VernacExtend",
            "29564759c4af0665dc9c594d51492abc19a895b2"
        ],
        [
            "intros u H'0; case (zerop_dec u); intros Z.",
            "VernacExtend",
            "1ce7ca0e25270272722d35e7392455372f99c9d6"
        ],
        [
            "exact (Rec Acc).",
            "VernacExtend",
            "0c16f1b61d3b6fa96f14201303344b0735b470c2"
        ],
        [
            "exact (u :: Rec (u :: Acc)).",
            "VernacExtend",
            "f8bf2f2b5198ec58e7fc919a732bc55ef6048532"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition red (L : list poly) : list poly := redacc L nil.",
            "VernacDefinition",
            "61dcad7a545ad9466eafc7cbb94b3635760fd9fe"
        ],
        [
            "Hint Resolve incl_refl incl_tl incl_appr incl_appl incl_cons incl_app in_or_app.",
            "VernacHints",
            "88387a82e0dc5466ddd945ef26f2088f2a3d5782"
        ],
        [
            "Theorem redacc_cb : forall (L1 L2 : list poly) (p : poly), In p (redacc L1 L2) -> cb (L1 ++ L2) p.",
            "VernacStartTheoremProof",
            "1ab0c9a16f136263aac8c4b73aec3d7b9926b133"
        ],
        [
            "intros L1; elim L1; auto.",
            "VernacExtend",
            "27292779bb038bb830054a2c4bac43409282a3d0"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "simpl in |- *; unfold LetP in |- *; intros a l H' L2 p.",
            "VernacExtend",
            "738e712c80f5f0629502adf23bf326661d912242"
        ],
        [
            "case (zerop_dec (nf (l ++ L2) a)).",
            "VernacExtend",
            "d520fbb05609be417dc8db5982e10df076933f54"
        ],
        [
            "intros H'0 H'1.",
            "VernacExtend",
            "35706d3de8fea2a1a8d10ba2e17f53206242f36b"
        ],
        [
            "apply cb_incl with (L1 := l ++ L2); auto.",
            "VernacExtend",
            "bf1bdb8e85aa4dfe295ca9b2c5ce39ff19108eca"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H'0 H'1; case H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto.",
            "VernacExtend",
            "fe20dedb5197059d426ce1734e2c636a972614c5"
        ],
        [
            "apply cb_trans with (p := nf (l ++ L2) a); auto.",
            "VernacExtend",
            "76832d6f46db074d743da2b65a595d46868fed18"
        ],
        [
            "apply cb_incl with (L1 := l ++ nf (l ++ L2) a :: L2); auto.",
            "VernacExtend",
            "49dffc606bacca284b966f4ae9bb7837af10a86b"
        ],
        [
            "apply incl_app; auto with datatypes.",
            "VernacExtend",
            "6978a7170937d9c1ee7ccde1a83736a98ee30a0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem red_cb : forall (L : list poly) (p : poly), In p (red L) -> cb L p.",
            "VernacStartTheoremProof",
            "189df6eab6976dfb967d1f13f801514e9f32260a"
        ],
        [
            "unfold red in |- *.",
            "VernacExtend",
            "b2d88c40292ac971869b6fd1e2b41e68abb7c6e4"
        ],
        [
            "intros L p H'.",
            "VernacExtend",
            "7d7e774d180fff7b201d19d0672017d1342c670b"
        ],
        [
            "generalize (redacc_cb L nil); simpl in |- *; auto.",
            "VernacExtend",
            "45aa4722a45b6625e90feea79ba8f3a9572bfb2f"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cb_redacc : forall (L1 L2 : list poly) (p : poly), In p L1 -> cb (redacc L1 L2 ++ L2) p.",
            "VernacStartTheoremProof",
            "be8f6bc686e96a5186123ee3797c0c5572c7ed0a"
        ],
        [
            "intros L1; elim L1; simpl in |- *; auto.",
            "VernacExtend",
            "97a8a0d9ec99ff463bbb9daafb613a26ca4508d9"
        ],
        [
            "intros L2 p H'; elim H'; auto.",
            "VernacExtend",
            "2812afbf64ee10ecc40c7d0a2849bcce611b4c44"
        ],
        [
            "unfold LetP in |- *.",
            "VernacExtend",
            "d1e06477c22641448018ab424cb9341ffa85df59"
        ],
        [
            "intros a l H' L2 p H'0; case H'0; [ intros H'1; rewrite H'1; clear H'0 | intros H'1; clear H'0 ]; auto.",
            "VernacExtend",
            "b009317e7d2e58848edb74c1970786a8d3512ee9"
        ],
        [
            "case (zerop_dec (nf (l ++ L2) p)); auto.",
            "VernacExtend",
            "044fee28115791afb33f46edbeceb2ddd078159f"
        ],
        [
            "intros H'0.",
            "VernacExtend",
            "e8ea833695b450eab455d302901072f04fd3096d"
        ],
        [
            "apply cb_comp with (L1 := l ++ L2); auto.",
            "VernacExtend",
            "3f4f4db70dc9b8b504b705e291a81b105a8ddb47"
        ],
        [
            "intros p0 H'2.",
            "VernacExtend",
            "ecc9bc03dd6fb9699e34ceb4626f5905cef7d8a0"
        ],
        [
            "lapply (in_app_or l L2 p0); auto.",
            "VernacExtend",
            "1ba57c30e735700746ac2c37d930c2108dfcb143"
        ],
        [
            "intros H'3; case H'3; auto.",
            "VernacExtend",
            "6e8423d135d48294478942551639798db3a67e96"
        ],
        [
            "intros H'0.",
            "VernacExtend",
            "e8ea833695b450eab455d302901072f04fd3096d"
        ],
        [
            "2: case (zerop_dec (nf (l ++ L2) a)); auto.",
            "VernacExtend",
            "aab73554af2eaa4dcf570d8ac8ab549b19bbc4b1"
        ],
        [
            "2: intros H'0.",
            "VernacExtend",
            "638e391b8844141fa5984def0f5fd291eeccf247"
        ],
        [
            "2: apply cb_incl with (L1 := redacc l (nf (l ++ L2) a :: L2) ++ nf (l ++ L2) a :: L2); auto with datatypes.",
            "VernacExtend",
            "cd356fbbcff8ac2442b67aaa1445d6ad34a417e4"
        ],
        [
            "apply cb_compo with (L1 := nf (l ++ L2) p :: l ++ L2); simpl in |- *; auto.",
            "VernacExtend",
            "908a020a93fdbba74b42b3af2b241786929adbfe"
        ],
        [
            "intros q H'2; case H'2; [ intros H'3; rewrite <- H'3; clear H'2 | intros H'3; clear H'2 ]; auto with datatypes.",
            "VernacExtend",
            "1f802a8d0b0c5b103e896225659c5badc7f527b9"
        ],
        [
            "case (in_app_or l L2 q H'3); auto with datatypes.",
            "VernacExtend",
            "14673912f575574b5787884ba58ec154ef78fa1b"
        ],
        [
            "intros H'2.",
            "VernacExtend",
            "cf943e67ade9573edd50d78f490b19deda787113"
        ],
        [
            "apply cb_incl with (L1 := redacc l (nf (l ++ L2) p :: L2) ++ nf (l ++ L2) p :: L2); auto with datatypes.",
            "VernacExtend",
            "ed5e0f67ea67b309109bf402be2fefdccd98fb70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cb_red : forall (L : list poly) (p : poly), In p L -> cb (red L) p.",
            "VernacStartTheoremProof",
            "8c8a7528e5fb5f825573ff9046dcb6c1aa32f663"
        ],
        [
            "intros L p H'.",
            "VernacExtend",
            "7d7e774d180fff7b201d19d0672017d1342c670b"
        ],
        [
            "lapply (cb_redacc L nil p); [ intros H'3; generalize H'3 | idtac ]; simpl in |- *; auto.",
            "VernacExtend",
            "eb033338850574d6cbf13b3da9a4cd9fdac8c604"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cb_red_cb1 : forall (p : poly) (L : list poly), cb L p -> cb (red L) p.",
            "VernacStartTheoremProof",
            "4d026b7c01fc3e7061675cbdb068b2c285217634"
        ],
        [
            "intros p L H'.",
            "VernacExtend",
            "e7dd8b941528371b94b5461aafe390e14007d09e"
        ],
        [
            "apply cb_compo with (L1 := L); auto.",
            "VernacExtend",
            "50e2c2be77e6cea8af39c179f21c0d3af801e383"
        ],
        [
            "intros q H'0.",
            "VernacExtend",
            "04824102b6c3203469496b2675cb08ef0f53bb53"
        ],
        [
            "apply cb_red; auto.",
            "VernacExtend",
            "e29984601a5d031a43dbe1df696ed28e190fd2bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cb_red_cb2 : forall (p : poly) (L : list poly), cb (red L) p -> cb L p.",
            "VernacStartTheoremProof",
            "1ba2a84ce84ddecf9a95d4439a4b41d9c9e21591"
        ],
        [
            "intros p L H'.",
            "VernacExtend",
            "e7dd8b941528371b94b5461aafe390e14007d09e"
        ],
        [
            "apply cb_compo with (L1 := red L); auto.",
            "VernacExtend",
            "dafd9fb879c4f477f744be7c1efb3730879f6042"
        ],
        [
            "intros q H'0.",
            "VernacExtend",
            "04824102b6c3203469496b2675cb08ef0f53bb53"
        ],
        [
            "apply red_cb; auto.",
            "VernacExtend",
            "3ad7feeb814694fda6270b261b3550f3e29fb2af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis nf_div_zero1 : forall (p : poly) (L : list poly), ~ zerop p -> zerop (nf L p) -> ex (fun q : poly => In q L /\\ divp p q /\\ ~ zerop q).",
            "VernacAssumption",
            "fd877e53c7a41638129f3773003f8212c0066012"
        ],
        [
            "Theorem redacc_divp : forall (L1 L2 : list poly) (p : poly), ~ zerop p -> In p (L1 ++ L2) -> exists q : poly, In q (redacc L1 L2 ++ L2) /\\ divp p q /\\ ~ zerop q.",
            "VernacStartTheoremProof",
            "ade28ce853726ea2fb8112b386dbb4e58907491f"
        ],
        [
            "intros L1; elim L1; simpl in |- *; auto.",
            "VernacExtend",
            "97a8a0d9ec99ff463bbb9daafb613a26ca4508d9"
        ],
        [
            "intros L2 p H' H'0; exists p; split; auto.",
            "VernacExtend",
            "b2e874e06216d738feb1981068304a3aa8e8b4c9"
        ],
        [
            "unfold LetP in |- *.",
            "VernacExtend",
            "d1e06477c22641448018ab424cb9341ffa85df59"
        ],
        [
            "intros a l H' L2 p H'0 H'1; case H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto.",
            "VernacExtend",
            "b6d66e8c66f26f1eeca5b2f1b7d7ba89ca91d185"
        ],
        [
            "case (zerop_dec (nf (l ++ L2) a)); simpl in |- *; auto.",
            "VernacExtend",
            "9a94d9fcbe00bd6b71aba891edb6b5ffea664ee4"
        ],
        [
            "intros Z1.",
            "VernacExtend",
            "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
        ],
        [
            "lapply (nf_div_zero1 a (l ++ L2)); [ intros H'5; lapply H'5; [ intros H'6; clear H'5 | clear H'5 ] | idtac ]; auto.",
            "VernacExtend",
            "5b4e80ba6595a7787ad7f31a898977ca9c200c15"
        ],
        [
            "case H'6; intros q E; case E; intros H'3 H'4; case H'4; intros H'5 H'7; clear H'4 E H'6.",
            "VernacExtend",
            "3cb8e3593dabaed76056ccce4c24e6e419eb919f"
        ],
        [
            "lapply (H' L2 q); [ intros H'8; lapply H'8; [ intros H'9; clear H'8 | clear H'8 ] | idtac ]; auto.",
            "VernacExtend",
            "78cd30133354a8374f1579fd571cddcf63dacd2f"
        ],
        [
            "case H'9; intros q0 E; case E; intros H'4 H'6; case H'6; intros H'8 H'10; clear H'6 E H'9.",
            "VernacExtend",
            "43c23fd532cefe0377ee9aedf4c992f7b6d33b05"
        ],
        [
            "exists q0; split; [ idtac | split ]; auto.",
            "VernacExtend",
            "7d2e3da74593f620cf3c34ce8d7695c00533c2b0"
        ],
        [
            "apply divp_trans with (y := q); auto.",
            "VernacExtend",
            "bef56acc0158a4294e0c4d83fa86bb1a62872df5"
        ],
        [
            "rewrite H'2; auto.",
            "VernacExtend",
            "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
        ],
        [
            "intros Z1.",
            "VernacExtend",
            "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
        ],
        [
            "lapply (nf_div a (l ++ L2)); [ intros H'5; lapply H'5; [ intros H'6; clear H'5 | clear H'5 ] | idtac ]; auto.",
            "VernacExtend",
            "dec1f423942ce6d2d7861a47a520c4a15af9d0b8"
        ],
        [
            "case H'6; intros q E; case E; intros H'3 H'4; case H'4; intros H'5 H'7; clear H'4 E H'6.",
            "VernacExtend",
            "3cb8e3593dabaed76056ccce4c24e6e419eb919f"
        ],
        [
            "simpl in H'3.",
            "VernacExtend",
            "11669900c00176781512af53c37ef29f5a9e4da6"
        ],
        [
            "case H'3; [ intros H'4; clear H'3 | intros H'4; clear H'3 ].",
            "VernacExtend",
            "61500c4f4d1fdc32ce4d89fb83d4ff0756a81c31"
        ],
        [
            "exists q; split; [ idtac | split ]; auto.",
            "VernacExtend",
            "5446b671acfd108fe8ea86fd275c741d400d3b2f"
        ],
        [
            "lapply (H' (nf (l ++ L2) a :: L2) q); [ intros H'8; lapply H'8; [ intros H'9; clear H'8 | clear H'8 ] | idtac ]; auto.",
            "VernacExtend",
            "ebffb814ef8fcbbab6e1cfc6eab14614fe58855f"
        ],
        [
            "case H'9; intros q0 E; case E; intros H'3 H'6; case H'6; intros H'8 H'10; clear H'6 E H'9.",
            "VernacExtend",
            "9571695860f5f00e500381cb33130b0392c07a62"
        ],
        [
            "exists q0; split; [ idtac | split ]; auto.",
            "VernacExtend",
            "7d2e3da74593f620cf3c34ce8d7695c00533c2b0"
        ],
        [
            "case (in_app_or (redacc l (nf (l ++ L2) a :: L2)) (nf (l ++ L2) a :: L2) q0 H'3); auto.",
            "VernacExtend",
            "e28dc6c26f7c2d6b8db9ad700db08f8680a1f8f1"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros H'6; case H'6; [ intros H'9; clear H'6 | intros H'9; clear H'6 ]; auto.",
            "VernacExtend",
            "6b8f17c680d959d32daf4975ec1ef6c5c509e6cb"
        ],
        [
            "apply divp_trans with (y := q); auto.",
            "VernacExtend",
            "bef56acc0158a4294e0c4d83fa86bb1a62872df5"
        ],
        [
            "case (in_app_or l L2 q H'4); auto with datatypes.",
            "VernacExtend",
            "e5f5391350c2c94d486f221ba21760e0a6f0f2e8"
        ],
        [
            "rewrite H'2; auto.",
            "VernacExtend",
            "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
        ],
        [
            "case (zerop_dec (nf (l ++ L2) a)); simpl in |- *; auto.",
            "VernacExtend",
            "9a94d9fcbe00bd6b71aba891edb6b5ffea664ee4"
        ],
        [
            "intros Z1.",
            "VernacExtend",
            "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
        ],
        [
            "case (in_app_or l L2 p H'2); auto.",
            "VernacExtend",
            "b5cdbd969e9d3b292d3f8c0c41a059af76cba6c5"
        ],
        [
            "intros H'3.",
            "VernacExtend",
            "2e512d3c52562ab0fb19b78be8662c12b7168c72"
        ],
        [
            "lapply (H' (nf (l ++ L2) a :: L2) p); [ intros H'6; lapply H'6; [ intros H'7; clear H'6 | clear H'6 ] | idtac ]; auto.",
            "VernacExtend",
            "91cb8ebfb93c70056cde59336ab018fa46aefc65"
        ],
        [
            "case H'7; intros q E; case E; intros H'4 H'5; case H'5; intros H'6 H'8; clear H'5 E H'7.",
            "VernacExtend",
            "87b9b1fcac0828e7e759e84964690d67c264c1dc"
        ],
        [
            "exists q; split; auto.",
            "VernacExtend",
            "4a76075b3f0987ab192a633d94b718543b70f159"
        ],
        [
            "case (in_app_or (redacc l (nf (l ++ L2) a :: L2)) (nf (l ++ L2) a :: L2) q H'4); auto.",
            "VernacExtend",
            "89d0a34091aecdcfbdc263510f621b988b4729c1"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros H; case H; intros H1; auto.",
            "VernacExtend",
            "7cd6991e783ad29f2a497798cedcc18089d01346"
        ],
        [
            "intros H; exists p; split; [ right | idtac ]; auto.",
            "VernacExtend",
            "9e80273de4a18a57f772fac9432cd614d69ecd94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem red_divp : forall (L : list poly) (p : poly), In p L -> ~ zerop p -> exists q : poly, In q (red L) /\\ divp p q /\\ ~ zerop q.",
            "VernacStartTheoremProof",
            "ce2ae1b0effa2368f2ee2a3c8c6e4d39f4fba0fe"
        ],
        [
            "intros L p H' H'0.",
            "VernacExtend",
            "d322327a93018b7d15850be756648f798b45ba12"
        ],
        [
            "lapply (redacc_divp L nil p); auto.",
            "VernacExtend",
            "1df4a45e747fea0d965c0eab51dda3993d6311fa"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem red_grobner : forall L : list poly, grobner L -> grobner (red L).",
            "VernacStartTheoremProof",
            "5d690ef0933a363bd7781e07fe5596ef88776696"
        ],
        [
            "intros L H'.",
            "VernacExtend",
            "3951ff5628c0da639a0a765fd271772f08b70bc2"
        ],
        [
            "apply def_grobner; auto.",
            "VernacExtend",
            "4cac57de1bdc44491a395e0b185713be1619cdae"
        ],
        [
            "intros p H'0.",
            "VernacExtend",
            "87e06f6553ac10a6b6a0edb69218f43820f608cc"
        ],
        [
            "lapply (grobner_def L); [ intros H'2; lapply (H'2 p); [ intros H'4 | idtac ] | idtac ]; auto.",
            "VernacExtend",
            "a072915f343650b9b15c26c473f9e4497c272ba0"
        ],
        [
            "case H'4; auto.",
            "VernacExtend",
            "2c012230b4479c3ceef20d28ff227694c215b18f"
        ],
        [
            "intros H'1; case H'1; intros q E; clear H'1.",
            "VernacExtend",
            "9e539b6fde3eb0de07014c852003dc004c724739"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply div_reduce with (L1 := L) (q := q); auto.",
            "VernacExtend",
            "fd4e717b09651750f937c93235c94f3dd74af319"
        ],
        [
            "intros r1 H'1 H'3.",
            "VernacExtend",
            "0b3d719448d1388d13ac2d8d07cd6c556f089625"
        ],
        [
            "lapply (red_divp L r1); [ intros H'7; lapply H'7; [ intros H'8; clear H'7 | clear H'7 ] | idtac ]; auto.",
            "VernacExtend",
            "33cd414151fab19b8a73b8a779368ecb19f69f12"
        ],
        [
            "case H'8; intros q0 E0; case E0; intros H'5 H'6; case H'6; intros H'7 H'9; clear H'6 E0 H'8.",
            "VernacExtend",
            "dcfb4efc428a283e8c4ee7b767be18872327f896"
        ],
        [
            "exists q0; split; auto.",
            "VernacExtend",
            "b69b0964535a30b7c075c43385051979a6a4ea16"
        ],
        [
            "apply cb_red_cb2; auto.",
            "VernacExtend",
            "8a0cc53e137e48005fdf70214a47ef663c7a5d69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Reduce.",
            "VernacEndSegment",
            "6673e8613d00031d9942b1475901cbe85a0eb89d"
        ]
    ],
    "proofs": [
        {
            "name": "zerop_nf_cb",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros L p H'.",
                        "VernacExtend",
                        "7d7e774d180fff7b201d19d0672017d1342c670b"
                    ]
                },
                {
                    "command": [
                        "apply zerop_elim_cb with (p := nf L p); auto.",
                        "VernacExtend",
                        "5173c94492b96120c4a43f5108614e1bd6edfd82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "redacc",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros H'; elim H'.",
                        "VernacExtend",
                        "850d2dd5bc7ec70f1f608a0f14803631a8e5969f"
                    ]
                },
                {
                    "command": [
                        "intros L; exact (nil (A:=poly)).",
                        "VernacExtend",
                        "b30dd7df9af946b2855217ede3dbf4e2fa14f486"
                    ]
                },
                {
                    "command": [
                        "intros a p Rec Acc.",
                        "VernacExtend",
                        "13182dad5f5d9e21f58de9f0b59db96a9fbf66ab"
                    ]
                },
                {
                    "command": [
                        "apply LetP with (A := poly) (h := nf (p ++ Acc) a).",
                        "VernacExtend",
                        "29564759c4af0665dc9c594d51492abc19a895b2"
                    ]
                },
                {
                    "command": [
                        "intros u H'0; case (zerop_dec u); intros Z.",
                        "VernacExtend",
                        "1ce7ca0e25270272722d35e7392455372f99c9d6"
                    ]
                },
                {
                    "command": [
                        "exact (Rec Acc).",
                        "VernacExtend",
                        "0c16f1b61d3b6fa96f14201303344b0735b470c2"
                    ]
                },
                {
                    "command": [
                        "exact (u :: Rec (u :: Acc)).",
                        "VernacExtend",
                        "f8bf2f2b5198ec58e7fc919a732bc55ef6048532"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "redacc_cb",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros L1; elim L1; auto.",
                        "VernacExtend",
                        "27292779bb038bb830054a2c4bac43409282a3d0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; unfold LetP in |- *; intros a l H' L2 p.",
                        "VernacExtend",
                        "738e712c80f5f0629502adf23bf326661d912242"
                    ]
                },
                {
                    "command": [
                        "case (zerop_dec (nf (l ++ L2) a)).",
                        "VernacExtend",
                        "d520fbb05609be417dc8db5982e10df076933f54"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1.",
                        "VernacExtend",
                        "35706d3de8fea2a1a8d10ba2e17f53206242f36b"
                    ]
                },
                {
                    "command": [
                        "apply cb_incl with (L1 := l ++ L2); auto.",
                        "VernacExtend",
                        "bf1bdb8e85aa4dfe295ca9b2c5ce39ff19108eca"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1; case H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto.",
                        "VernacExtend",
                        "fe20dedb5197059d426ce1734e2c636a972614c5"
                    ]
                },
                {
                    "command": [
                        "apply cb_trans with (p := nf (l ++ L2) a); auto.",
                        "VernacExtend",
                        "76832d6f46db074d743da2b65a595d46868fed18"
                    ]
                },
                {
                    "command": [
                        "apply cb_incl with (L1 := l ++ nf (l ++ L2) a :: L2); auto.",
                        "VernacExtend",
                        "49dffc606bacca284b966f4ae9bb7837af10a86b"
                    ]
                },
                {
                    "command": [
                        "apply incl_app; auto with datatypes.",
                        "VernacExtend",
                        "6978a7170937d9c1ee7ccde1a83736a98ee30a0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "red_cb",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "unfold red in |- *.",
                        "VernacExtend",
                        "b2d88c40292ac971869b6fd1e2b41e68abb7c6e4"
                    ]
                },
                {
                    "command": [
                        "intros L p H'.",
                        "VernacExtend",
                        "7d7e774d180fff7b201d19d0672017d1342c670b"
                    ]
                },
                {
                    "command": [
                        "generalize (redacc_cb L nil); simpl in |- *; auto.",
                        "VernacExtend",
                        "45aa4722a45b6625e90feea79ba8f3a9572bfb2f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cb_red",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros L p H'.",
                        "VernacExtend",
                        "7d7e774d180fff7b201d19d0672017d1342c670b"
                    ]
                },
                {
                    "command": [
                        "lapply (cb_redacc L nil p); [ intros H'3; generalize H'3 | idtac ]; simpl in |- *; auto.",
                        "VernacExtend",
                        "eb033338850574d6cbf13b3da9a4cd9fdac8c604"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cb_red_cb1",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros p L H'.",
                        "VernacExtend",
                        "e7dd8b941528371b94b5461aafe390e14007d09e"
                    ]
                },
                {
                    "command": [
                        "apply cb_compo with (L1 := L); auto.",
                        "VernacExtend",
                        "50e2c2be77e6cea8af39c179f21c0d3af801e383"
                    ]
                },
                {
                    "command": [
                        "intros q H'0.",
                        "VernacExtend",
                        "04824102b6c3203469496b2675cb08ef0f53bb53"
                    ]
                },
                {
                    "command": [
                        "apply cb_red; auto.",
                        "VernacExtend",
                        "e29984601a5d031a43dbe1df696ed28e190fd2bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cb_red_cb2",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros p L H'.",
                        "VernacExtend",
                        "e7dd8b941528371b94b5461aafe390e14007d09e"
                    ]
                },
                {
                    "command": [
                        "apply cb_compo with (L1 := red L); auto.",
                        "VernacExtend",
                        "dafd9fb879c4f477f744be7c1efb3730879f6042"
                    ]
                },
                {
                    "command": [
                        "intros q H'0.",
                        "VernacExtend",
                        "04824102b6c3203469496b2675cb08ef0f53bb53"
                    ]
                },
                {
                    "command": [
                        "apply red_cb; auto.",
                        "VernacExtend",
                        "3ad7feeb814694fda6270b261b3550f3e29fb2af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "redacc_divp",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros L1; elim L1; simpl in |- *; auto.",
                        "VernacExtend",
                        "97a8a0d9ec99ff463bbb9daafb613a26ca4508d9"
                    ]
                },
                {
                    "command": [
                        "intros L2 p H' H'0; exists p; split; auto.",
                        "VernacExtend",
                        "b2e874e06216d738feb1981068304a3aa8e8b4c9"
                    ]
                },
                {
                    "command": [
                        "unfold LetP in |- *.",
                        "VernacExtend",
                        "d1e06477c22641448018ab424cb9341ffa85df59"
                    ]
                },
                {
                    "command": [
                        "intros a l H' L2 p H'0 H'1; case H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto.",
                        "VernacExtend",
                        "b6d66e8c66f26f1eeca5b2f1b7d7ba89ca91d185"
                    ]
                },
                {
                    "command": [
                        "case (zerop_dec (nf (l ++ L2) a)); simpl in |- *; auto.",
                        "VernacExtend",
                        "9a94d9fcbe00bd6b71aba891edb6b5ffea664ee4"
                    ]
                },
                {
                    "command": [
                        "intros Z1.",
                        "VernacExtend",
                        "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
                    ]
                },
                {
                    "command": [
                        "lapply (nf_div_zero1 a (l ++ L2)); [ intros H'5; lapply H'5; [ intros H'6; clear H'5 | clear H'5 ] | idtac ]; auto.",
                        "VernacExtend",
                        "5b4e80ba6595a7787ad7f31a898977ca9c200c15"
                    ]
                },
                {
                    "command": [
                        "case H'6; intros q E; case E; intros H'3 H'4; case H'4; intros H'5 H'7; clear H'4 E H'6.",
                        "VernacExtend",
                        "3cb8e3593dabaed76056ccce4c24e6e419eb919f"
                    ]
                },
                {
                    "command": [
                        "lapply (H' L2 q); [ intros H'8; lapply H'8; [ intros H'9; clear H'8 | clear H'8 ] | idtac ]; auto.",
                        "VernacExtend",
                        "78cd30133354a8374f1579fd571cddcf63dacd2f"
                    ]
                },
                {
                    "command": [
                        "case H'9; intros q0 E; case E; intros H'4 H'6; case H'6; intros H'8 H'10; clear H'6 E H'9.",
                        "VernacExtend",
                        "43c23fd532cefe0377ee9aedf4c992f7b6d33b05"
                    ]
                },
                {
                    "command": [
                        "exists q0; split; [ idtac | split ]; auto.",
                        "VernacExtend",
                        "7d2e3da74593f620cf3c34ce8d7695c00533c2b0"
                    ]
                },
                {
                    "command": [
                        "apply divp_trans with (y := q); auto.",
                        "VernacExtend",
                        "bef56acc0158a4294e0c4d83fa86bb1a62872df5"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2; auto.",
                        "VernacExtend",
                        "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
                    ]
                },
                {
                    "command": [
                        "intros Z1.",
                        "VernacExtend",
                        "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
                    ]
                },
                {
                    "command": [
                        "lapply (nf_div a (l ++ L2)); [ intros H'5; lapply H'5; [ intros H'6; clear H'5 | clear H'5 ] | idtac ]; auto.",
                        "VernacExtend",
                        "dec1f423942ce6d2d7861a47a520c4a15af9d0b8"
                    ]
                },
                {
                    "command": [
                        "case H'6; intros q E; case E; intros H'3 H'4; case H'4; intros H'5 H'7; clear H'4 E H'6.",
                        "VernacExtend",
                        "3cb8e3593dabaed76056ccce4c24e6e419eb919f"
                    ]
                },
                {
                    "command": [
                        "simpl in H'3.",
                        "VernacExtend",
                        "11669900c00176781512af53c37ef29f5a9e4da6"
                    ]
                },
                {
                    "command": [
                        "case H'3; [ intros H'4; clear H'3 | intros H'4; clear H'3 ].",
                        "VernacExtend",
                        "61500c4f4d1fdc32ce4d89fb83d4ff0756a81c31"
                    ]
                },
                {
                    "command": [
                        "exists q; split; [ idtac | split ]; auto.",
                        "VernacExtend",
                        "5446b671acfd108fe8ea86fd275c741d400d3b2f"
                    ]
                },
                {
                    "command": [
                        "lapply (H' (nf (l ++ L2) a :: L2) q); [ intros H'8; lapply H'8; [ intros H'9; clear H'8 | clear H'8 ] | idtac ]; auto.",
                        "VernacExtend",
                        "ebffb814ef8fcbbab6e1cfc6eab14614fe58855f"
                    ]
                },
                {
                    "command": [
                        "case H'9; intros q0 E; case E; intros H'3 H'6; case H'6; intros H'8 H'10; clear H'6 E H'9.",
                        "VernacExtend",
                        "9571695860f5f00e500381cb33130b0392c07a62"
                    ]
                },
                {
                    "command": [
                        "exists q0; split; [ idtac | split ]; auto.",
                        "VernacExtend",
                        "7d2e3da74593f620cf3c34ce8d7695c00533c2b0"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or (redacc l (nf (l ++ L2) a :: L2)) (nf (l ++ L2) a :: L2) q0 H'3); auto.",
                        "VernacExtend",
                        "e28dc6c26f7c2d6b8db9ad700db08f8680a1f8f1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intros H'6; case H'6; [ intros H'9; clear H'6 | intros H'9; clear H'6 ]; auto.",
                        "VernacExtend",
                        "6b8f17c680d959d32daf4975ec1ef6c5c509e6cb"
                    ]
                },
                {
                    "command": [
                        "apply divp_trans with (y := q); auto.",
                        "VernacExtend",
                        "bef56acc0158a4294e0c4d83fa86bb1a62872df5"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or l L2 q H'4); auto with datatypes.",
                        "VernacExtend",
                        "e5f5391350c2c94d486f221ba21760e0a6f0f2e8"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2; auto.",
                        "VernacExtend",
                        "2c2cd2310e6d6c30ae4cdcfb896dfe62bf83deb1"
                    ]
                },
                {
                    "command": [
                        "case (zerop_dec (nf (l ++ L2) a)); simpl in |- *; auto.",
                        "VernacExtend",
                        "9a94d9fcbe00bd6b71aba891edb6b5ffea664ee4"
                    ]
                },
                {
                    "command": [
                        "intros Z1.",
                        "VernacExtend",
                        "6d43f159b3868f6dc156f1a8c4c396c0ef4f3782"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or l L2 p H'2); auto.",
                        "VernacExtend",
                        "b5cdbd969e9d3b292d3f8c0c41a059af76cba6c5"
                    ]
                },
                {
                    "command": [
                        "intros H'3.",
                        "VernacExtend",
                        "2e512d3c52562ab0fb19b78be8662c12b7168c72"
                    ]
                },
                {
                    "command": [
                        "lapply (H' (nf (l ++ L2) a :: L2) p); [ intros H'6; lapply H'6; [ intros H'7; clear H'6 | clear H'6 ] | idtac ]; auto.",
                        "VernacExtend",
                        "91cb8ebfb93c70056cde59336ab018fa46aefc65"
                    ]
                },
                {
                    "command": [
                        "case H'7; intros q E; case E; intros H'4 H'5; case H'5; intros H'6 H'8; clear H'5 E H'7.",
                        "VernacExtend",
                        "87b9b1fcac0828e7e759e84964690d67c264c1dc"
                    ]
                },
                {
                    "command": [
                        "exists q; split; auto.",
                        "VernacExtend",
                        "4a76075b3f0987ab192a633d94b718543b70f159"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or (redacc l (nf (l ++ L2) a :: L2)) (nf (l ++ L2) a :: L2) q H'4); auto.",
                        "VernacExtend",
                        "89d0a34091aecdcfbdc263510f621b988b4729c1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; intros H1; auto.",
                        "VernacExtend",
                        "7cd6991e783ad29f2a497798cedcc18089d01346"
                    ]
                },
                {
                    "command": [
                        "intros H; exists p; split; [ right | idtac ]; auto.",
                        "VernacExtend",
                        "9e80273de4a18a57f772fac9432cd614d69ecd94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "red_divp",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros L p H' H'0.",
                        "VernacExtend",
                        "d322327a93018b7d15850be756648f798b45ba12"
                    ]
                },
                {
                    "command": [
                        "lapply (redacc_divp L nil p); auto.",
                        "VernacExtend",
                        "1df4a45e747fea0d965c0eab51dda3993d6311fa"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "red_grobner",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros L H'.",
                        "VernacExtend",
                        "3951ff5628c0da639a0a765fd271772f08b70bc2"
                    ]
                },
                {
                    "command": [
                        "apply def_grobner; auto.",
                        "VernacExtend",
                        "4cac57de1bdc44491a395e0b185713be1619cdae"
                    ]
                },
                {
                    "command": [
                        "intros p H'0.",
                        "VernacExtend",
                        "87e06f6553ac10a6b6a0edb69218f43820f608cc"
                    ]
                },
                {
                    "command": [
                        "lapply (grobner_def L); [ intros H'2; lapply (H'2 p); [ intros H'4 | idtac ] | idtac ]; auto.",
                        "VernacExtend",
                        "a072915f343650b9b15c26c473f9e4497c272ba0"
                    ]
                },
                {
                    "command": [
                        "case H'4; auto.",
                        "VernacExtend",
                        "2c012230b4479c3ceef20d28ff227694c215b18f"
                    ]
                },
                {
                    "command": [
                        "intros H'1; case H'1; intros q E; clear H'1.",
                        "VernacExtend",
                        "9e539b6fde3eb0de07014c852003dc004c724739"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply div_reduce with (L1 := L) (q := q); auto.",
                        "VernacExtend",
                        "fd4e717b09651750f937c93235c94f3dd74af319"
                    ]
                },
                {
                    "command": [
                        "intros r1 H'1 H'3.",
                        "VernacExtend",
                        "0b3d719448d1388d13ac2d8d07cd6c556f089625"
                    ]
                },
                {
                    "command": [
                        "lapply (red_divp L r1); [ intros H'7; lapply H'7; [ intros H'8; clear H'7 | clear H'7 ] | idtac ]; auto.",
                        "VernacExtend",
                        "33cd414151fab19b8a73b8a779368ecb19f69f12"
                    ]
                },
                {
                    "command": [
                        "case H'8; intros q0 E0; case E0; intros H'5 H'6; case H'6; intros H'7 H'9; clear H'6 E0 H'8.",
                        "VernacExtend",
                        "dcfb4efc428a283e8c4ee7b767be18872327f896"
                    ]
                },
                {
                    "command": [
                        "exists q0; split; auto.",
                        "VernacExtend",
                        "b69b0964535a30b7c075c43385051979a6a4ea16"
                    ]
                },
                {
                    "command": [
                        "apply cb_red_cb2; auto.",
                        "VernacExtend",
                        "8a0cc53e137e48005fdf70214a47ef663c7a5d69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}