{
    "filename": "DivTerm.v",
    "coq_project": "buchberger",
    "vernac_cmds": [
        [
            "Require Import Relation_Definitions.",
            "VernacRequire",
            "ba1086f65c0b2f6754b8273aa4aa004209b8f8b6"
        ],
        [
            "Require Import CoefStructure.",
            "VernacRequire",
            "afffb8ecb67eb97047216c55e4a53f0c1daa6efe"
        ],
        [
            "Require Import moreCoefStructure.",
            "VernacRequire",
            "78c8041a4221590766a3b4671908ca28c384d99b"
        ],
        [
            "Require Import OrderStructure.",
            "VernacRequire",
            "702281ed068ce56ddd5cea6e079ee063f4f49341"
        ],
        [
            "Require Import Monomials.",
            "VernacRequire",
            "24544167a9d62df5cd0b31f06d7096a87aa54745"
        ],
        [
            "Require Import Term.",
            "VernacRequire",
            "9c26977ef2b4222e78f39cdf715412f56838a1e6"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Section DivTerm.",
            "VernacBeginSection",
            "6cf22ec2d859c818f40b26f76168b66528ba9cb5"
        ],
        [
            "Load \"hCoefStructure\".",
            "VernacLoad",
            "f589131171ebe29df01888558901fe8e60053f03"
        ],
        [
            "Load \"mCoefStructure\".",
            "VernacLoad",
            "a212b5fc88e5d57b66825d01638e42eaf93cf04e"
        ],
        [
            "Load \"hOrderStructure\".",
            "VernacLoad",
            "7802bb6bcba5b34103e24276dada97267e981011"
        ],
        [
            "Load \"mOrderStructure\".",
            "VernacLoad",
            "8456f97609d8706d7301481dd4d47cbe1e7a6b53"
        ],
        [
            "Load \"hTerm\".",
            "VernacLoad",
            "24a3512e5790e81109c1b5758dd5c3c277299e0b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition divTerm : Term A n -> forall (b : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b), Term A n.",
            "VernacDefinition",
            "365abf9d5039171e12b5d40ef4a5faddc9b5ee50"
        ],
        [
            "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; simpl in |- *.",
            "VernacExtend",
            "e746c57abe29b935137bd864eaff739a8a24a4f1"
        ],
        [
            "intros nZb3; exact (divA b2 b3 nZb3, div_mon n c2 c3).",
            "VernacExtend",
            "804f5f89635431ce296681808c1fef2a18fb7fdc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem eqT_divTerm_plusTerm : forall (a b c : Term A n) (nZc : ~ zeroP (A:=A) A0 eqA (n:=n) c), eqT a b -> eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZc) c) -> eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZc) c) -> eqTerm (A:=A) eqA (n:=n) (divTerm (plusTerm (A:=A) plusA (n:=n) a b) nZc) (plusTerm (A:=A) plusA (n:=n) (divTerm a nZc) (divTerm b nZc)).",
            "VernacStartTheoremProof",
            "2e51cbb51d1bd02a680d827e55fde59394a58885"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a0 m a1 m0 a2 m1 nZc H' H'0 H'1; split; auto.",
            "VernacExtend",
            "f3ede26e78879d9bb0ca03e994241dff9027cd66"
        ],
        [
            "case H'1; intros H'3 H'4; clear H'1.",
            "VernacExtend",
            "399492b4635637b3ab0da2443f6c94d06235d285"
        ],
        [
            "case H'0; intros H'2 H'5; clear H'0.",
            "VernacExtend",
            "c282216af25a5641406478b277f314296964714d"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (plusA (multA (divA a2 a0 nZc) a0) (multA (divA a1 a0 nZc) a0)) a0 nZc); auto.",
            "VernacExtend",
            "72aaa3b792f55ccd624b98eab00a2263dda327e4"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) a0) a0 nZc); auto.",
            "VernacExtend",
            "82bbeec315a9b5f927b06d5da65de933c308dbf2"
        ],
        [
            "apply divA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "45c666604d717cc4b102baec9cacdb8596e3dde6"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA (multA a0 (divA a2 a0 nZc)) (multA a0 (divA a1 a0 nZc))); auto.",
            "VernacExtend",
            "66833d0c5ba7ac16dce1b8cb7414eb72958d0235"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a0 (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))); auto.",
            "VernacExtend",
            "490a601facc1efe7a50dd5e42b59800fdc66c1eb"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) (divA a0 a0 nZc)); auto.",
            "VernacExtend",
            "40059b3e09f6819bd20fb221e161a38a942576f6"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA a0 (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))) a0 nZc); auto.",
            "VernacExtend",
            "520de4f010fb3e8d8be2724fe2fd0268ab8f0822"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (divA a0 a0 nZc) (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))); auto.",
            "VernacExtend",
            "6d13eaee600d4e60c9234283af041084f423c9d8"
        ],
        [
            "apply divA_multA_comp_r with (1 := cs); auto.",
            "VernacExtend",
            "f751910aa127ccef168c6acc29d419b89f78d826"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) A1); auto.",
            "VernacExtend",
            "0f071bf78c61d39de175cfdfca4357897676909d"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply multA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "5a4d62968a3f4650bb931bbccce41d86a113f65d"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
            "VernacExtend",
            "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
        ],
        [
            "apply divA_A1 with (1 := cs); auto.",
            "VernacExtend",
            "d7d3430b7cb7d76f22e797daeb1af91389170b1d"
        ],
        [
            "apply multA_A1_r with (1 := cs); auto.",
            "VernacExtend",
            "e461380f38290142da020d4910973dcc685ad119"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_invTerm_l : forall (a b : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a), eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZa) a) -> eqTerm (A:=A) eqA (n:=n) (divTerm (invTerm (A:=A) invA (n:=n) b) nZa) (invTerm (A:=A) invA (n:=n) (divTerm b nZa)).",
            "VernacStartTheoremProof",
            "2a51e376d3df2eea9c2a3a0c37df14166c45208a"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros d c A0' c0 nZA2 H'0; split; auto.",
            "VernacExtend",
            "8f2e9d77e720298230a25bbba860d03d8c3b3bdb"
        ],
        [
            "case H'0; intros H'1 H'2; clear H'0.",
            "VernacExtend",
            "05ae5a179967a6366551d613b1457855b5ff4403"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (invA (multA (divA d A0' nZA2) A0')) A0' nZA2); auto.",
            "VernacExtend",
            "06397d6da659ed5974b5e468326e66f0b859183d"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA (invA (divA d A0' nZA2)) A0') A0' nZA2); auto.",
            "VernacExtend",
            "fd2ee96edf6e48744739b6e2ff725a0d408cb000"
        ],
        [
            "apply divA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "45c666604d717cc4b102baec9cacdb8596e3dde6"
        ],
        [
            "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply multA_invA_com_l with (1 := cs); auto.",
            "VernacExtend",
            "1079aee79fe6c4ba8363ea27dc682635656d544b"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (invA (divA d A0' nZA2)) (divA A0' A0' nZA2)); auto.",
            "VernacExtend",
            "7bb0c1a041a79a0351a85c04f02c91a022afce81"
        ],
        [
            "apply divA_multA_comp_l with (1 := cs).",
            "VernacExtend",
            "89d3d4a59f320449cbcc6cd2a5985e4f40e54101"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (invA (divA d A0' nZA2)) A1); auto.",
            "VernacExtend",
            "688af5a3d607c64c1a1b3fff1daa9078ec354ddf"
        ],
        [
            "apply multA_eqA_comp with (1 := cs); auto.",
            "VernacExtend",
            "5a4d62968a3f4650bb931bbccce41d86a113f65d"
        ],
        [
            "apply divA_A1 with (1 := cs).",
            "VernacExtend",
            "62cb0bcdbc89aa88800f1bef4e01b317bded98b2"
        ],
        [
            "apply multA_A1_r with (1 := cs).",
            "VernacExtend",
            "be196838fa08d8d836828236a8abb4348bfc7064"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_invTerm_r : forall (a b : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a) (nZia : ~ zeroP (A:=A) A0 eqA (n:=n) (invTerm (A:=A) invA (n:=n) a)), eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZa) a) -> eqTerm (A:=A) eqA (n:=n) (divTerm b nZia) (invTerm (A:=A) invA (n:=n) (divTerm b nZa)).",
            "VernacStartTheoremProof",
            "b68b3bf628d0855628eb99eb8080680dba9498a0"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply divA_invA_r with (1 := cs); auto.",
            "VernacExtend",
            "d3824c2fb7f5848b54d6408e0e0ef095546812a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqT_divTerm : forall (a b c d : Term A n) (nZc : ~ zeroP (A:=A) A0 eqA (n:=n) c) (nZd : ~ zeroP (A:=A) A0 eqA (n:=n) d), eqT a b -> eqT c d -> eqT (divTerm a nZc) (divTerm b nZd).",
            "VernacStartTheoremProof",
            "354cb2dfb0ff4c8ee4dd929896462f678c215183"
        ],
        [
            "intros a b c d; case a; case b; case c; case d; unfold eqT in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "aff2c863ca05ee25a2c517110b7e878a686b3d4d"
        ],
        [
            "intros A0' c0 d2 c2 H' c3 H'0 c4 H'1 H'2 H'3 H'4; rewrite H'3; rewrite H'4; auto.",
            "VernacExtend",
            "37a1d05ee16e8d5a06859cb38b521317ce50034e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_divTerm_comp : forall (a b c d : Term A n) (nZc : ~ zeroP (A:=A) A0 eqA (n:=n) c) (nZd : ~ zeroP (A:=A) A0 eqA (n:=n) d), eqTerm (A:=A) eqA (n:=n) a b -> eqTerm (A:=A) eqA (n:=n) c d -> eqTerm (A:=A) eqA (n:=n) (divTerm a nZc) (divTerm b nZd).",
            "VernacStartTheoremProof",
            "5ed073cb6701682bcc7412b645bb1004f8188c00"
        ],
        [
            "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
            "VernacExtend",
            "10f288de252b75b60480e8692697267cdf9a93a7"
        ],
        [
            "intros A0' c0 d2 c2 d3 c3 d4 c4 nZd2 H'0 H'1 H'2.",
            "VernacExtend",
            "6b4bdb63baef4be8e753689845a689b8463d6946"
        ],
        [
            "case H'2; intros H'3 H'4; clear H'2.",
            "VernacExtend",
            "75c59df4f28c1199123b6f5fae2b6cd21f10751b"
        ],
        [
            "case H'1; intros H'2 H'5; clear H'1.",
            "VernacExtend",
            "82fdf885b9f0296744d5b215ecb8ddc6212a6aca"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite H'5; rewrite H'4; auto.",
            "VernacExtend",
            "db4660b5547e647eaefeae5d4b924d53460b22f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqTerm_divTerm_comp.",
            "VernacHints",
            "491a303b75bb5d13cb99b11825fe249a8f7aab60"
        ],
        [
            "Theorem divTerm_multTerm_l : forall (a b c : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a), eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZa) a) -> eqTerm (A:=A) eqA (n:=n) (divTerm (multTerm (A:=A) multA (n:=n) c b) nZa) (multTerm (A:=A) multA (n:=n) c (divTerm b nZa)).",
            "VernacStartTheoremProof",
            "71ffd6046f1beaa1f43f276157f943405b2dbd54"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros d c0 A0' c2 d2 c3 nZd2 H'0; case H'0; intros H'1 H'2; auto.",
            "VernacExtend",
            "ea58dc467dda6d0d4095d1bb00fbe8c2a2101a9c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply divA_multA_comp_l with (1 := cs).",
            "VernacExtend",
            "89d3d4a59f320449cbcc6cd2a5985e4f40e54101"
        ],
        [
            "rewrite H'2.",
            "VernacExtend",
            "884e4d7bc650f9624ecf7e3155e0da90d9130a00"
        ],
        [
            "repeat rewrite mult_div_com.",
            "VernacExtend",
            "297f1fde2c905f3a311bbe352f53ecbb8c19e958"
        ],
        [
            "rewrite mult_mon_assoc.",
            "VernacExtend",
            "7b7578142dd5f3e10b2e20e1839dd438e45a28e1"
        ],
        [
            "repeat rewrite mult_div_com; auto.",
            "VernacExtend",
            "04a33e23d0d549bf93338745faf4cd76cbf17835"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_multTerm_r : forall (a b c : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a), eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZa) a) -> eqTerm (A:=A) eqA (n:=n) (divTerm (multTerm (A:=A) multA (n:=n) b c) nZa) (multTerm (A:=A) multA (n:=n) (divTerm b nZa) c).",
            "VernacStartTheoremProof",
            "6030017ff8de804a85c8e20113401d6ea2f32fba"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a0 m a1 m0 a2 m1 nZa H'; split; auto.",
            "VernacExtend",
            "a61f447ce55699fc6ea7818da7da650c5e92cecd"
        ],
        [
            "apply divA_multA_comp_r with (1 := cs).",
            "VernacExtend",
            "bc1d410bf0045aea3ce8278868a0be162c53c905"
        ],
        [
            "elim H'; intros H'0 H'1; rewrite H'1; clear H'.",
            "VernacExtend",
            "82e4060ec95fe4eb6ee750fba0759dfd67844444"
        ],
        [
            "rewrite mult_div_com; auto.",
            "VernacExtend",
            "30d931c37d0e7bdd4ea01eacdf5a71476601283c"
        ],
        [
            "rewrite <- mult_mon_assoc.",
            "VernacExtend",
            "bfefbf290574ecf3feb9ec542ec21b68618681ba"
        ],
        [
            "rewrite (mult_mon_com n m1 m).",
            "VernacExtend",
            "3fe4c188ed3e6e843b3b948362fcb077fb30b395"
        ],
        [
            "rewrite mult_mon_assoc.",
            "VernacExtend",
            "7b7578142dd5f3e10b2e20e1839dd438e45a28e1"
        ],
        [
            "rewrite mult_div_com; auto.",
            "VernacExtend",
            "30d931c37d0e7bdd4ea01eacdf5a71476601283c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divTerm_multTerm_l divTerm_multTerm_r.",
            "VernacHints",
            "7bec2d8664d6837e15ba1be1d6c8c9ab687b08d0"
        ],
        [
            "Theorem div_is_T1 : forall (a : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a), eqTerm (A:=A) eqA (n:=n) (divTerm a nZa) (T1 A1 n).",
            "VernacStartTheoremProof",
            "d72b0be4201e2e57b181b9d01dd712095eb1a49b"
        ],
        [
            "intros a; case a; simpl in |- *; auto.",
            "VernacExtend",
            "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
        ],
        [
            "intros a0 m nZa; split; auto.",
            "VernacExtend",
            "b4943dd33dd5d1697391f9275d6c76c1456d2847"
        ],
        [
            "apply divA_A1 with (1 := cs).",
            "VernacExtend",
            "62cb0bcdbc89aa88800f1bef4e01b317bded98b2"
        ],
        [
            "unfold M1 in |- *; apply mult_div_id; auto.",
            "VernacExtend",
            "8d2af822b7fc2b4ce1d95570e92f5a78d56021c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve div_is_T1.",
            "VernacHints",
            "f27dc38e1553039cd6acd6a977e9918772b39321"
        ],
        [
            "Theorem divTerm_nZ : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, ~ zeroP (A:=A) A0 eqA (n:=n) (divTerm a nZb).",
            "VernacStartTheoremProof",
            "37f7bede64bd88d22f21dbece69f0b9d34be6948"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 H nZb; apply divA_nZ with (1 := cs); auto.",
            "VernacExtend",
            "ece0afd2053d9d92d3cf6d65ce3430dff7f99f18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_eqT : forall a b c : Term A n, eqT a b -> ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> forall nZc : ~ zeroP (A:=A) A0 eqA (n:=n) c, eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZc) c) -> eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm b nZc) c).",
            "VernacStartTheoremProof",
            "3d17c6d220578003dec4c1302071c91bcbea5fa7"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a1 m1 a2 m2 a3 m3 H1 H2 H3 H4 H5; case H5; intros H6 H7; split; auto.",
            "VernacExtend",
            "f77a7369b2a49a32b4357a56737daf1d5ceb8c1b"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "unfold eqT in H1; simpl in H1; rewrite <- H1; auto.",
            "VernacExtend",
            "1d9770a022fa3e0b883b809b19668151d4593f56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let gb : mon n * bool -> bool.",
            "VernacDefinition",
            "54c782961601503a6892b5e86653a0d3155b91ab"
        ],
        [
            "intros H'; case H'; auto.",
            "VernacExtend",
            "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Let gm : mon n * bool -> mon n.",
            "VernacDefinition",
            "ed63762293ff6044fb5ad063bd830516730c86d6"
        ],
        [
            "intros H'; case H'; auto.",
            "VernacExtend",
            "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition mk_clean : forall a b : mon n, {c : mon n * bool | c = div_mon_clean n a b}.",
            "VernacDefinition",
            "f99866bbb013870a1b23e33bc64c8a9fbfa930c1"
        ],
        [
            "intros a b; exists (div_mon_clean n a b); auto.",
            "VernacExtend",
            "ea2532000b24091b3773ba9b597938e1f81ecedc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_dec : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, {eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b)} + {~ eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b)}.",
            "VernacStartTheoremProof",
            "19c399c57b77607b0cffaff9991fad33ab659446"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros b2 c2 b3 c3.",
            "VernacExtend",
            "82f7539799a3d7dcb68e52a58c1270cbba1fb56b"
        ],
        [
            "intros Zp1 Zp2.",
            "VernacExtend",
            "33e5099a4f625e86655b278c06466aff250ffc9a"
        ],
        [
            "case (mk_clean c3 c2).",
            "VernacExtend",
            "0231748545e366f246a47305b8ed9b637007cb2a"
        ],
        [
            "intros x; case x.",
            "VernacExtend",
            "97a0ca33fd0f432bab2f85e04107454f03f2dc1c"
        ],
        [
            "intros c b4; case b4.",
            "VernacExtend",
            "0d9ef82bb713e8993a7109c3ac7f7f628e8e67e6"
        ],
        [
            "intros H0; left; simpl in |- *; auto.",
            "VernacExtend",
            "e3fb4eed5c6bd03067e6c06b5cd159b09f6eeb3e"
        ],
        [
            "generalize (div_clean_dec1 n c3 c2); rewrite <- H0; simpl in |- *; auto.",
            "VernacExtend",
            "1b55fb8c00a4a3a4e741d2d95770510ade74c7b3"
        ],
        [
            "intros H1; case H1; auto; intros H2 H3; split; auto.",
            "VernacExtend",
            "4aa27e15b4ef247d0cbda82e3e17536a14be153e"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "intros H0; right; red in |- *; intros dviP_H; inversion dviP_H.",
            "VernacExtend",
            "2a08dd030b5fa8043c72168d103381573b973141"
        ],
        [
            "generalize (div_clean_dec2 n c3 c2); simpl in |- *; auto.",
            "VernacExtend",
            "fe7f96dbfda772fafe72edfbb263c6afa988dec0"
        ],
        [
            "intros H'; lapply H'; [ intros H'0; apply H'0; clear H' | clear H' ].",
            "VernacExtend",
            "fa58e3d86e776d8870cb5c93d06ffe7d983e1a5c"
        ],
        [
            "rewrite <- H1; auto.",
            "VernacExtend",
            "32b903bcbdd2d6f83dd19185f0534857f043d3ae"
        ],
        [
            "rewrite <- H0; simpl in |- *; auto.",
            "VernacExtend",
            "7d6f1bfc4078c4294f325f5402860ecc3e41b77b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem zeroP_divTerm : forall a b : Term A n, zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, zeroP (A:=A) A0 eqA (n:=n) (divTerm a nZb).",
            "VernacStartTheoremProof",
            "0bbf4b8959ad156cbd1d698c200788c15f42c7fa"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros d H' A0' H'0 H'1 nZd; auto.",
            "VernacExtend",
            "403ed57327efc756dc8e5b8be7f2bf5dd623e2f8"
        ],
        [
            "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA A0 d nZd); auto.",
            "VernacExtend",
            "66635c3edbb096dd24230243819f23f7696391ee"
        ],
        [
            "apply divA_A0_l with (1 := cs).",
            "VernacExtend",
            "7e3c6c163fcd6c617db513a969d18715ff2e8eab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_on_eqT : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, eqT a b -> eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b).",
            "VernacStartTheoremProof",
            "67d425a0a869155f35a180d159e7aaaaebaf6803"
        ],
        [
            "intros a b; case a; case b; unfold eqT in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "fde1eddb23ed30ae57bad8a3796dbe4195cfc6d0"
        ],
        [
            "intros d c A0' c0 H' H'0 H'1; rewrite <- H'1.",
            "VernacExtend",
            "b4b7d3566465647c1a46537dccfc0fe6d4fa95e4"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "rewrite mult_div_id; auto.",
            "VernacExtend",
            "63d505eabe315466d5473b9d32dd044be0705901"
        ],
        [
            "rewrite mult_mon_zero_l; auto.",
            "VernacExtend",
            "d6c61534723616a212a9a67ff54b0cb435ebf98b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_on_eqT_eqT : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, eqT a b -> eqT (divTerm a nZb) (T1 A1 n).",
            "VernacStartTheoremProof",
            "c4c1ddc419d9c249ad6fcd76c5979dafe1260be0"
        ],
        [
            "intros a b; case a; case b; unfold eqT in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "fde1eddb23ed30ae57bad8a3796dbe4195cfc6d0"
        ],
        [
            "intros b2 c b3 c0 H' H'0 H'1; rewrite H'1; auto.",
            "VernacExtend",
            "667cc52bd46300a618d53031fc61344b777da15e"
        ],
        [
            "rewrite mult_div_id; auto.",
            "VernacExtend",
            "63d505eabe315466d5473b9d32dd044be0705901"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_on_plusM_minusM : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, T2M a = mult_mon n (div_mon n (T2M a) (T2M b)) (T2M b) -> eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b).",
            "VernacStartTheoremProof",
            "c18e49f86fb8a82ed1fcbc6ef0faf385bf012361"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Definition ppc : Term A n -> Term A n -> Term A n.",
            "VernacDefinition",
            "105a7a85a654cbed813695fb94a4c9c9cc1000d7"
        ],
        [
            "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; simpl in |- *; exact (A1, ppcm_mon n c2 c3).",
            "VernacExtend",
            "d8b3d790545f9e99e33c0a78be9d61eb0fd90359"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Theorem ppc_com : forall a b : Term A n, eqTerm (A:=A) eqA (n:=n) (ppc a b) (ppc b a).",
            "VernacStartTheoremProof",
            "72128d39c22933a636b3c6139040758b33fd6774"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0; split; auto.",
            "VernacExtend",
            "0ce3a93aee69d134195316a5500e9b45c719895c"
        ],
        [
            "apply ppcm_com; auto.",
            "VernacExtend",
            "ec567cb1ef55ad3b5011eabb66fdcd87543c5350"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_ppc : forall (a b c : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b) (nZppab : ~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b)), eqTerm (A:=A) eqA (n:=n) c (multTerm (A:=A) multA (n:=n) (divTerm c nZa) a) -> eqTerm (A:=A) eqA (n:=n) c (multTerm (A:=A) multA (n:=n) (divTerm c nZb) b) -> eqTerm (A:=A) eqA (n:=n) c (multTerm (A:=A) multA (n:=n) (divTerm c nZppab) (ppc a b)).",
            "VernacStartTheoremProof",
            "761a16fa6096a752572c42c45a6192650d370022"
        ],
        [
            "intros a b c; case a; case b; case c; simpl in |- *; auto.",
            "VernacExtend",
            "086c10a636d0b1ee457b1d20d38d0600405a4481"
        ],
        [
            "intros a0 m a1 m0 a2 m1 nZa nZb nZppab H H0; split; auto.",
            "VernacExtend",
            "0fe3cb0652583e37937eeb85b52fbed6a8a5a89b"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "apply ppcm_mom_is_ppcm; intuition.",
            "VernacExtend",
            "9748e038731207f3fc1f65b66c474e0f0a874983"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_ppcl : forall (a b : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a), ~ zeroP (A:=A) A0 eqA (n:=n) b -> eqTerm (A:=A) eqA (n:=n) (ppc a b) (multTerm (A:=A) multA (n:=n) (divTerm (ppc a b) nZa) a).",
            "VernacStartTheoremProof",
            "73a1f9c522740f39a3b782d8a60ecb8fb2662aa2"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 nZa H; split; auto.",
            "VernacExtend",
            "c48a3dcf288c48268ec75fcc7f5dbfa282a51298"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "apply ppcm_prop_l.",
            "VernacExtend",
            "2b4d6ac4cc17254b1ebf2e7836f58c73c8151d5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_ppcr : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, eqTerm (A:=A) eqA (n:=n) (ppc a b) (multTerm (A:=A) multA (n:=n) (divTerm (ppc a b) nZb) b).",
            "VernacStartTheoremProof",
            "3aadda2b6ac63848b0a6fcd8665a4cc750e9051c"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 H nZb; split; auto.",
            "VernacExtend",
            "1f96792e47db7d25ed0e24dd796165b77ad0c529"
        ],
        [
            "apply divA_is_multA with (1 := cs); auto.",
            "VernacExtend",
            "572542432992e078f5b244f51e883464cc4e768d"
        ],
        [
            "apply ppcm_prop_r.",
            "VernacExtend",
            "11265405890421c96f80829fe55240b74e8c051c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ppc_nZ : forall a b c : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> ~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b).",
            "VernacStartTheoremProof",
            "0c1fe2e9aef28642b22ed41d89244bb5bc2de78e"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_rew : forall (a b : Term A n) (nZ1 nZ2 : ~ zeroP (A:=A) A0 eqA (n:=n) b), divTerm a nZ1 = divTerm a nZ2.",
            "VernacStartTheoremProof",
            "06f7bf5f18bf303cbd154a22504ff870514906e2"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "intros a0 m a1 m0 nZ1 nZ2.",
            "VernacExtend",
            "39f49d453063a8844b850b179a26b6170fdbc070"
        ],
        [
            "rewrite divA_rew with (1 := cs) (nZ2 := nZ2); auto.",
            "VernacExtend",
            "86020cc59f9daf777f5f80c03b0b15d483e03822"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive divP : Term A n -> Term A n -> Prop := divTerm_def : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b) -> divP a b.",
            "VernacInductive",
            "e0cbffa1b333f66ee417578566ab91ec5d3d2697"
        ],
        [
            "Theorem divP_inv1 : forall a b : Term A n, divP a b -> ~ zeroP (A:=A) A0 eqA (n:=n) a.",
            "VernacStartTheoremProof",
            "b205af33bd6db174ce246202e4029a4b154ca69b"
        ],
        [
            "intros a b H; inversion H; auto.",
            "VernacExtend",
            "3ec7eef7096e7afa7dcec36001398b821dc9c660"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_inv2 : forall a b : Term A n, divP a b -> ~ zeroP (A:=A) A0 eqA (n:=n) b.",
            "VernacStartTheoremProof",
            "320bea975b3fe91f3b8b2e0d227f73fc57de0acc"
        ],
        [
            "intros a b H; inversion H; auto.",
            "VernacExtend",
            "3ec7eef7096e7afa7dcec36001398b821dc9c660"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_inv3 : forall (a b : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b), divP a b -> eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b).",
            "VernacStartTheoremProof",
            "33931a0e6026115d0cc87c9bb3f6aa855707eba6"
        ],
        [
            "intros a b nZb H; inversion H; auto.",
            "VernacExtend",
            "4360cfd5e757f73f2f9661fc412dd28528fbb275"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb0) b); auto.",
            "VernacExtend",
            "3c097ddc1d9d2d4be80d68ba446632dea2fa3776"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_inv1 divP_inv2 divP_inv3.",
            "VernacHints",
            "7ba5e9dc510d05af5de866f62d9cb46c4b0fb65a"
        ],
        [
            "Theorem divP_plusTerm : forall a b c : Term A n, divP a c -> divP b c -> eqT a b -> ~ zeroP (A:=A) A0 eqA (n:=n) (plusTerm (A:=A) plusA (n:=n) a b) -> divP (plusTerm (A:=A) plusA (n:=n) a b) c.",
            "VernacStartTheoremProof",
            "824e718b1812048317a30739a84bd6133863d3c0"
        ],
        [
            "intros a b c H' H'0; inversion H'0; inversion H'.",
            "VernacExtend",
            "a6df6651612904cc9f30c2153eb204d5a4f6c822"
        ],
        [
            "intros H'1 H'2; apply divTerm_def with (nZb := nZb0); auto.",
            "VernacExtend",
            "52f8c96fbdbbb5e151e48ead57ce04e828984df8"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := plusTerm (A:=A) plusA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb0) c) (multTerm (A:=A) multA (n:=n) (divTerm b nZb0) c)); auto.",
            "VernacExtend",
            "15e52522a72b08348f040d7d66ecb527b5de7c6e"
        ],
        [
            "apply eqTerm_plusTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "6b9b94259bf13e9dbf673bb30d1248cca6f201f2"
        ],
        [
            "apply multTerm_eqT; auto.",
            "VernacExtend",
            "4d711045e990e2c51df6dd436d5c246f6cb19533"
        ],
        [
            "apply eqT_divTerm; auto.",
            "VernacExtend",
            "045f1a5907d0677003d910524cf91c954c3ac0df"
        ],
        [
            "apply (eqT_refl A n).",
            "VernacExtend",
            "6889ffdb37f3dd14b0422ae62f9cd60cdb16ae7e"
        ],
        [
            "apply (eqT_refl A n).",
            "VernacExtend",
            "6889ffdb37f3dd14b0422ae62f9cd60cdb16ae7e"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (plusTerm (A:=A) plusA (n:=n) (divTerm a nZb0) (divTerm b nZb0)) c); auto.",
            "VernacExtend",
            "000c9953e919685a97c46b658904c571550ee3f6"
        ],
        [
            "apply multTerm_plusTerm_dist_l with (1 := cs); auto.",
            "VernacExtend",
            "151fc7d64d851b8b123a97d3a43e8d2afe310f84"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "apply eqT_divTerm_plusTerm; auto.",
            "VernacExtend",
            "61d77b6bbb82079db704de4ed012c219f2140b12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_plusTerm.",
            "VernacHints",
            "da461a91dfdd1dea69092d1aad4143e963afe5a9"
        ],
        [
            "Theorem divP_invTerm_l : forall a b : Term A n, divP a b -> divP (invTerm (A:=A) invA (n:=n) a) b.",
            "VernacStartTheoremProof",
            "b4e414c4ad4455ff8608bc8c8f9ee741d6fa4160"
        ],
        [
            "intros a b H'; inversion H'; auto.",
            "VernacExtend",
            "1397d786526dec436d4508d9709d3740661533c9"
        ],
        [
            "apply divTerm_def with (nZb := nZb); auto.",
            "VernacExtend",
            "dbffdae7779fc05d35abfd361e685b13209b33f2"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (invTerm (A:=A) invA (n:=n) (divTerm a nZb)) b); auto.",
            "VernacExtend",
            "63ce263a0c43c834f9bb93c774b4e8e0a38ecf73"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b)); auto.",
            "VernacExtend",
            "d0df9b46b1a75162dda4428d611df7d91964411a"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com with (1 := cs); auto.",
            "VernacExtend",
            "f4c866c4b1b7aa3457c501c0053e9f1fb0e3f944"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_invTerm_l; auto.",
            "VernacExtend",
            "0fa85858e64574fa353a19f4a4fd9dfc7f48f0d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_invTerm_l.",
            "VernacHints",
            "30dd9e4cc9e35677d997c7edd3dbd2f5af534ceb"
        ],
        [
            "Theorem divP_invTerm_r : forall a b : Term A n, divP a b -> divP a (invTerm (A:=A) invA (n:=n) b).",
            "VernacStartTheoremProof",
            "5b15faedc9441f7eb4b7ebc473e0c22bbd794838"
        ],
        [
            "intros a b H'; inversion H'.",
            "VernacExtend",
            "b31c78840b95032f35fde816c6942de167aa4d79"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) (invTerm (A:=A) invA (n:=n) b)); [ intros nZib | auto ].",
            "VernacExtend",
            "13d5e09615065e09d3c166d48fb897db0bd75c45"
        ],
        [
            "apply divTerm_def with (nZb := nZib); auto.",
            "VernacExtend",
            "12beaff05b628ed74721455688f2d062631fbcd7"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (invTerm (A:=A) invA (n:=n) (divTerm a nZb)) (invTerm (A:=A) invA (n:=n) b)); auto.",
            "VernacExtend",
            "398b216d6bed57844d1d4b5a208d40d6b5c772c9"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) (invTerm (A:=A) invA (n:=n) b))); auto.",
            "VernacExtend",
            "0d1fa61595a8577acd054663f75b1c985eaf1c65"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b))); auto.",
            "VernacExtend",
            "176b6906618fb534f44754806655182763b7f9ba"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb) b); auto.",
            "VernacExtend",
            "918cd9a074a7b239805c9e2781d6178a0a5904c0"
        ],
        [
            "apply eqTerm_invTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "30f253881eb4de3f83936ea3cb04b854c9ed9508"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com_r with (1 := cs); auto.",
            "VernacExtend",
            "0259edf1255e66b6247386b182f99b2484aee3b8"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com with (1 := cs); auto.",
            "VernacExtend",
            "f4c866c4b1b7aa3457c501c0053e9f1fb0e3f944"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_invTerm_r; auto.",
            "VernacExtend",
            "b83227d05d4d826405eccf54ce0d9bf25f0ff2ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divTerm_nZ.",
            "VernacHints",
            "98514b80f8edc71b8bb9b19e9d2a7d47a21e00ae"
        ],
        [
            "Hint Resolve divP_invTerm_r.",
            "VernacHints",
            "3b983a991a5075cb5420a547a6d7ac9422d58f15"
        ],
        [
            "Theorem divTerm_multTerml : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP (multTerm (A:=A) multA (n:=n) a b) a.",
            "VernacStartTheoremProof",
            "b4c8a93500bac46d6c4fe3edd8ffbe093f9711b7"
        ],
        [
            "intros a b nZa nZb.",
            "VernacExtend",
            "6afb8baee318a01e5fdd2f04ff578e184ff74440"
        ],
        [
            "apply divTerm_def with (nZb := nZa); auto.",
            "VernacExtend",
            "21055ec4dc003b2d9b7aa98dcb968e0a8cc31581"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZa) b) a); auto.",
            "VernacExtend",
            "77d3be68022493bad3be9ef6940a8f20ac2141bb"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) (T1 A1 n) b) a); auto.",
            "VernacExtend",
            "dec30770e1e4f2a99145767925fe7228f03b58d5"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) b a); auto.",
            "VernacExtend",
            "ae000961118773d347181aabc081e309f82be123"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply div_is_T1; auto.",
            "VernacExtend",
            "cd8ed415eabc036d931bc6e57ab2ba504e28c96e"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_multTerm_r; auto.",
            "VernacExtend",
            "eed985e553924498b8432e68d4ecb98ce7dc4e4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divTerm_multTermr : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP (multTerm (A:=A) multA (n:=n) a b) b.",
            "VernacStartTheoremProof",
            "92f326d9a5efb0739b753e90912e0458e7b84e75"
        ],
        [
            "intros a b nZa nZb.",
            "VernacExtend",
            "6afb8baee318a01e5fdd2f04ff578e184ff74440"
        ],
        [
            "apply divTerm_def with (nZb := nZb); auto.",
            "VernacExtend",
            "dbffdae7779fc05d35abfd361e685b13209b33f2"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) a (divTerm b nZb)) b); auto.",
            "VernacExtend",
            "3fe37a0320f12a5d6f0287b03ccbe5031a913241"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_multTerm_l; auto.",
            "VernacExtend",
            "12b70fd0feb1c9314bfc4b233a0f0a980334f295"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divTerm_multTermr divTerm_multTerml.",
            "VernacHints",
            "6e085a247613466f66b6070b18881d9f236169e7"
        ],
        [
            "Theorem divP_trans : transitive (Term A n) divP.",
            "VernacStartTheoremProof",
            "42e56435d70740b22f5c8d70a67513e47a3fb812"
        ],
        [
            "red in |- *; intros a b c H' H'0.",
            "VernacExtend",
            "4651cdc8c066f26560bd9dc3b7bd3e4f54862df2"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) c); [ intros nZc | auto ].",
            "VernacExtend",
            "f87d3814c69b8bfe43bcc4535e37f3336cd4b0d5"
        ],
        [
            "apply divTerm_def with (nZb := nZc); auto.",
            "VernacExtend",
            "520ad9581aec4d64bc95badfc00ec3ec47b2d510"
        ],
        [
            "apply divP_inv1 with (b := b); auto.",
            "VernacExtend",
            "534ffdb4a610fa440bd26cb101e4f185103403f2"
        ],
        [
            "2: apply divP_inv2 with (a := b); auto.",
            "VernacExtend",
            "559c16eb5cce71d319cb5b6a54412f004f597443"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) b); [ intros nZb | auto ].",
            "VernacExtend",
            "b06e3196c0085199da41baf44674fc76d188ce2e"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) (divTerm b nZc)) c); auto.",
            "VernacExtend",
            "40f8529c8814b4ff174196ea2698085608cccf2f"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb) (multTerm (A:=A) multA (n:=n) (divTerm b nZc) c)); auto.",
            "VernacExtend",
            "d63bc9899dd8d4a8226b719bb9a47aa0f63e315e"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb) b); auto.",
            "VernacExtend",
            "918cd9a074a7b239805c9e2781d6178a0a5904c0"
        ],
        [
            "apply eqTerm_multTerm_comp with (1 := cs); auto.",
            "VernacExtend",
            "d406d25ee131f1c92f12bfb7d88971598dd24fae"
        ],
        [
            "inversion H'0; inversion H'.",
            "VernacExtend",
            "f7d693187821840efdf18f86cafd923202890068"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b) nZc); auto.",
            "VernacExtend",
            "acefd0fc3a61679aaa0429d79d7a10c4b7845ca1"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_multTerm_l; auto.",
            "VernacExtend",
            "12b70fd0feb1c9314bfc4b233a0f0a980334f295"
        ],
        [
            "apply eqTerm_divTerm_comp; auto.",
            "VernacExtend",
            "46709fcddace23694a00838985b3b47ab4215b7e"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (1 := H4); auto.",
            "VernacExtend",
            "a77e08863f4bf31cc55e2f10928fa1d06b26ff36"
        ],
        [
            "apply divP_inv2 with (a := a); auto.",
            "VernacExtend",
            "9fd8d64ec080ddc799148567735bdf325a83f02b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_trans.",
            "VernacHints",
            "61d39ce6fc4ef7fe7f0f59b376b99ede5e81dc23"
        ],
        [
            "Theorem divP_nZero : forall (a b : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b), divP a b -> ~ zeroP (A:=A) A0 eqA (n:=n) (divTerm a nZb).",
            "VernacStartTheoremProof",
            "7f9fa19f06285ed466149a3cd7cf338d4fba5e63"
        ],
        [
            "intros a b nZb H'; inversion H'; auto.",
            "VernacExtend",
            "9d11f3901ab04d3c48ff6e36d029b05698c53d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_nZero.",
            "VernacHints",
            "c8ecd515000359d9ee7717f5eec90d413b579458"
        ],
        [
            "Theorem divP_eqTerm_comp : forall a b c : Term A n, divP a c -> eqTerm (A:=A) eqA (n:=n) a b -> divP b c.",
            "VernacStartTheoremProof",
            "6adb2b336a656760cea24d87a76ca367a2b57b23"
        ],
        [
            "intros a b c H' H'0.",
            "VernacExtend",
            "9adbcdd6b6765475af874e716118e8993b1a11b1"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) c); [ intros nZc | auto ].",
            "VernacExtend",
            "f87d3814c69b8bfe43bcc4535e37f3336cd4b0d5"
        ],
        [
            "apply divTerm_def with (nZb := nZc); auto.",
            "VernacExtend",
            "520ad9581aec4d64bc95badfc00ec3ec47b2d510"
        ],
        [
            "apply nzeroP_comp_eqTerm with (1 := cs) (a := a); auto.",
            "VernacExtend",
            "894c7f006afb72551be83f034d88c49f1677551c"
        ],
        [
            "apply divP_inv1 with (b := c); auto.",
            "VernacExtend",
            "276b87cb77d72f9ab0435f92cbc56cf4f1f49d3f"
        ],
        [
            "2: apply divP_inv2 with (a := a); auto.",
            "VernacExtend",
            "2b4a7e33340893b8c2d16eca343d43646ba10172"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZc) c); auto.",
            "VernacExtend",
            "ac16def205b412382874fafdeab14ad1ccbc3f61"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := a); auto.",
            "VernacExtend",
            "8a65b85da6adce0f4b427762c795f3e6b7a9ee12"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_on_eqT : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> eqT a b -> divP a b.",
            "VernacStartTheoremProof",
            "709bf469a6532f44348e0d1de8748887299935cc"
        ],
        [
            "intros a b H' nZb H'1; apply divTerm_def with (nZb := nZb); auto.",
            "VernacExtend",
            "5a30106b7c9cfac52cf739b0f36e542470224eed"
        ],
        [
            "apply divTerm_on_eqT; auto.",
            "VernacExtend",
            "b7a2c32ab056acc7266ae14bb9e3b0d540b78111"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_on_eqT_eqT : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> forall nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b, eqT a b -> eqT (divTerm a nZb) (T1 A1 n).",
            "VernacStartTheoremProof",
            "98da1d83d3606cda4f2dbc084d906d35a1355f98"
        ],
        [
            "intros a b H nZb H0; apply divTerm_on_eqT_eqT; auto.",
            "VernacExtend",
            "639527bf0104fffc99a7d9042fa863269914050a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_on_eqT divP_on_eqT_eqT.",
            "VernacHints",
            "6dc5db1b97dbfabfaad550d9be5cfbbef6bece10"
        ],
        [
            "Inductive ppcm (p q : Term A n) : Term A n -> Prop := ppcm0 : forall s : Term A n, (forall r : Term A n, divP r p -> divP r q -> divP r s) -> divP s p -> divP s q -> ppcm p q s.",
            "VernacInductive",
            "aa0b0ad08c673cf59b7c563be46f0d169276e4f5"
        ],
        [
            "Hint Resolve ppcm0.",
            "VernacHints",
            "78cfd27173bf75b30765c115a58d343d5932cb69"
        ],
        [
            "Theorem ppc_is_ppcm : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> ppcm a b (ppc a b).",
            "VernacStartTheoremProof",
            "62bc8339da6c04700db387a92da084afa4c41c66"
        ],
        [
            "intros a b nZa nZb; apply ppcm0; auto.",
            "VernacExtend",
            "1344d62b7c7431ccfd4bdc69a83d30f9df256a96"
        ],
        [
            "intros r H'1 H'2; inversion H'1; inversion H'2.",
            "VernacExtend",
            "d88d13708caa4d33424e66241d7210c8f4b97592"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b)); [ intros nZppab | auto ].",
            "VernacExtend",
            "e4dd12d82ed5a0530047ae59e758047269ee0327"
        ],
        [
            "apply divTerm_def with (nZb := nZppab); auto.",
            "VernacExtend",
            "3850af962a675873e881872c9baa43e18019b4a1"
        ],
        [
            "apply divTerm_ppc with (nZa := nZa) (nZb := nZb); auto.",
            "VernacExtend",
            "381b2bb2563ea796f15214f91381aa1331f14a1a"
        ],
        [
            "apply ppc_nZ; auto.",
            "VernacExtend",
            "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
        ],
        [
            "apply divTerm_def with (nZb := nZa); auto.",
            "VernacExtend",
            "21055ec4dc003b2d9b7aa98dcb968e0a8cc31581"
        ],
        [
            "apply ppc_nZ; auto.",
            "VernacExtend",
            "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
        ],
        [
            "apply divTerm_ppcl; auto.",
            "VernacExtend",
            "f9d405cf6628c8bd92078e2323dd77e62fbeeb55"
        ],
        [
            "apply divTerm_def with (nZb := nZb); auto.",
            "VernacExtend",
            "dbffdae7779fc05d35abfd361e685b13209b33f2"
        ],
        [
            "apply ppc_nZ; auto.",
            "VernacExtend",
            "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
        ],
        [
            "apply divTerm_ppcr; auto.",
            "VernacExtend",
            "05cda271c2de615091bd73fd5e46ff04b0003925"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ppc_multTerm_divP : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP (multTerm (A:=A) multA (n:=n) a b) (ppc a b).",
            "VernacStartTheoremProof",
            "1035a04dcb6589d94d100cad8b0eab818fc171d9"
        ],
        [
            "intros a b H' H'0.",
            "VernacExtend",
            "70e5f336329713bc517f825b3689dbb81bfedeb9"
        ],
        [
            "elim ppc_is_ppcm; auto.",
            "VernacExtend",
            "febc5990b548101f187d7988cf7bbd4c3568d753"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ppc_multTerm_divP.",
            "VernacHints",
            "c7d7862ea8b836cd69078f14adec529f64ceb356"
        ],
        [
            "Theorem divP_comp : forall a b c d : Term A n, divP a c -> eqTerm (A:=A) eqA (n:=n) a b -> eqTerm (A:=A) eqA (n:=n) c d -> divP b d.",
            "VernacStartTheoremProof",
            "211a85fe82f6e51cedcce068c43bbc635ee246d7"
        ],
        [
            "intros a b c d H'; generalize b d; elim H'.",
            "VernacExtend",
            "c052b1e0ef4c39d217f5db5a4966938d3447b02e"
        ],
        [
            "intros a0 b0 nZa0 nZb0 H'2 b1 d0 H'3 H'4; auto.",
            "VernacExtend",
            "a5a4ece42a5a4ea6aefb3ca82ea80b2412d0605a"
        ],
        [
            "cut (~ zeroP (A:=A) A0 eqA (n:=n) d0); [ intros nZd0 | auto ].",
            "VernacExtend",
            "1e63f276afec82abc9a54646b0c784180d2a3dd8"
        ],
        [
            "apply divTerm_def with (nZb := nZd0); auto.",
            "VernacExtend",
            "f24a0d3704c0855025d5dbf8c0aaf48db0d0dbe5"
        ],
        [
            "red in |- *; intros nz1; absurd (zeroP (A:=A) A0 eqA (n:=n) a0); auto.",
            "VernacExtend",
            "5658af7b2dac27a6fc9303d16543027f8acc0818"
        ],
        [
            "apply zeroP_comp_eqTerm with (1 := cs) (a := b1); auto.",
            "VernacExtend",
            "65956c6822397691fcd506f8c3a416530497da0b"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := a0); auto.",
            "VernacExtend",
            "07401f0fc193b22bae107bf6548544227f47ebfb"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a0 nZb0) b0); auto.",
            "VernacExtend",
            "d345d22b1d10cd02fb281a4334cb81dc6392f745"
        ],
        [
            "red in |- *; intros nz1; absurd (zeroP (A:=A) A0 eqA (n:=n) b0); auto.",
            "VernacExtend",
            "d15c6ad867902c1b074c334a5990411dd1780ef5"
        ],
        [
            "apply zeroP_comp_eqTerm with (1 := cs) (a := d0); auto.",
            "VernacExtend",
            "cae2db2faaab5fc34b4e1e3d0e4ef6e0a75e71ce"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_multTerm_l : forall a b c : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> eqTerm (A:=A) eqA (n:=n) (multTerm (A:=A) multA (n:=n) a b) c -> divP c a.",
            "VernacStartTheoremProof",
            "258c288a83ac7906258c389f7166078b608a11af"
        ],
        [
            "intros a b c H' H'0 H'1.",
            "VernacExtend",
            "2715eeca0568bd78511d7037f97b4daeb74effee"
        ],
        [
            "apply divP_comp with (a := multTerm (A:=A) multA (n:=n) a b) (c := a); auto.",
            "VernacExtend",
            "d6d7169a8dc897265d906a78c515b11f5094b9c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_multTerm_r : forall a b c : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> eqTerm (A:=A) eqA (n:=n) (multTerm (A:=A) multA (n:=n) a b) c -> divP c b.",
            "VernacStartTheoremProof",
            "a821a8fc13df8d4e4ddde8e82758780105ba141f"
        ],
        [
            "intros a b c H' H'0 H'1.",
            "VernacExtend",
            "2715eeca0568bd78511d7037f97b4daeb74effee"
        ],
        [
            "apply divP_comp with (a := multTerm (A:=A) multA (n:=n) a b) (c := b); auto.",
            "VernacExtend",
            "19357813b989ceded08a3fbc93396ba03e4371c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_multTerm_r divP_multTerm_l.",
            "VernacHints",
            "65be7c0c366c01db7b037e66f080dde5f2654417"
        ],
        [
            "Theorem divP_ppcl : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP (ppc a b) a.",
            "VernacStartTheoremProof",
            "29a74da0a41d7ea150d40eaf234d83a36140f5c1"
        ],
        [
            "intros a b H' H'0; try assumption.",
            "VernacExtend",
            "57e09f4d0a727855642e6ff1f020b9e63dd6914d"
        ],
        [
            "lapply (ppc_is_ppcm a b); [ intros H'3; lapply H'3; clear H'3; [ intros H'4 | idtac ] | idtac ]; auto; auto.",
            "VernacExtend",
            "bfe07fbf7b12a0a5326b19169a55765be031009a"
        ],
        [
            "inversion H'4; auto.",
            "VernacExtend",
            "ca7965e4d7d714ea3e466d2be6b60898e0646f36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_ppcr : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP (ppc a b) b.",
            "VernacStartTheoremProof",
            "bd62e7a09ea8311eccf21b1922fb61df9f30896d"
        ],
        [
            "intros a b H' H'0; try assumption.",
            "VernacExtend",
            "57e09f4d0a727855642e6ff1f020b9e63dd6914d"
        ],
        [
            "lapply (ppc_is_ppcm a b); [ intros H'3; lapply H'3; clear H'3; [ intros H'4 | idtac ] | idtac ]; auto; auto.",
            "VernacExtend",
            "bfe07fbf7b12a0a5326b19169a55765be031009a"
        ],
        [
            "inversion H'4; auto.",
            "VernacExtend",
            "ca7965e4d7d714ea3e466d2be6b60898e0646f36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divP_ppcl divP_ppcr.",
            "VernacHints",
            "ab49470f1f331ec74aea41cdb053a045aa97191e"
        ],
        [
            "Theorem divTerm_compo : forall (a b c : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b) (nZc : ~ zeroP (A:=A) A0 eqA (n:=n) c), divP a b -> divP b c -> eqTerm (A:=A) eqA (n:=n) (divTerm a nZc) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) (divTerm b nZc)).",
            "VernacStartTheoremProof",
            "b3e04f9af5dd10e6d5f9605dadb7c1d74b8e9518"
        ],
        [
            "intros a b c nZb nZc H'; inversion H'.",
            "VernacExtend",
            "4d01f8590342303e69d1c1d59236bf6332cc1581"
        ],
        [
            "intros H'0; inversion H'0.",
            "VernacExtend",
            "cf2906b3e6fe43e8c6c063c39d519533102a6826"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b) nZc); auto.",
            "VernacExtend",
            "acefd0fc3a61679aaa0429d79d7a10c4b7845ca1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve divTerm_compo.",
            "VernacHints",
            "bcbdf0ae3e80e1fa6923844b90fc82151d683fd0"
        ],
        [
            "Theorem divP_comp_ppc0 : forall (a b : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b) (nZppab : ~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b)) (p : list (Term A n)), eqTerm (A:=A) eqA (n:=n) b (multTerm (A:=A) multA (n:=n) (divTerm (multTerm (A:=A) multA (n:=n) a b) nZppab) (divTerm (ppc a b) nZa)).",
            "VernacStartTheoremProof",
            "3bfed7559cdcf3870f1c1e7e0a9c6df2f9842b99"
        ],
        [
            "intros a b nZa nZb nZppab p.",
            "VernacExtend",
            "3ea418ce7c646300c64efe7e212744e0fb380d61"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZa) b); auto.",
            "VernacExtend",
            "edbc454c58c77af3af7e8ed79d7c95a752b64fd0"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) nZa); auto.",
            "VernacExtend",
            "6731e6a71181c1855c89707b67a5189f18130689"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_comp_ppc1 : forall (a b : Term A n) (nZa : ~ zeroP (A:=A) A0 eqA (n:=n) a) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b) (nZppab : ~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b)) (p : list (Term A n)), eqTerm (A:=A) eqA (n:=n) a (multTerm (A:=A) multA (n:=n) (divTerm (multTerm (A:=A) multA (n:=n) a b) nZppab) (divTerm (ppc a b) nZb)).",
            "VernacStartTheoremProof",
            "9b095b09cfccbc3fe5507b3d5df073a81e932af0"
        ],
        [
            "intros a b nZa nZb nZppab H'0.",
            "VernacExtend",
            "59503eebfd2b86fbd9a59924ecfae6f1fc9357b6"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) a (divTerm b nZb)); auto.",
            "VernacExtend",
            "0e31b6645a0816193ee9e1b3393f1769c0d6a17c"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) nZb); auto.",
            "VernacExtend",
            "33a38a83b0c85621fe3b431ea9df1fe456df00de"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_dec : forall a b : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) a -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> {divP a b} + {~ divP a b}.",
            "VernacStartTheoremProof",
            "4382019de1be81ac526bc46080bac52b1aedbdca"
        ],
        [
            "intros a b nZa nZb.",
            "VernacExtend",
            "6afb8baee318a01e5fdd2f04ff578e184ff74440"
        ],
        [
            "elim divTerm_dec with (a := a) (nZb := nZb); auto.",
            "VernacExtend",
            "0db4690ca02cdd3150a5694f27a4e92dff5dfe68"
        ],
        [
            "intros H'1; left; apply divTerm_def with (nZb := nZb); auto.",
            "VernacExtend",
            "97f0ad20bb96e12105e117139d66056d7a92fc49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem divP_eqT : forall a b c : Term A n, eqT a b -> ~ zeroP (A:=A) A0 eqA (n:=n) b -> divP a c -> divP b c.",
            "VernacStartTheoremProof",
            "5ce94fa85b2f5ac1f29322bce1cab1ffd9bf807e"
        ],
        [
            "intros a b c H' nZb H'1; inversion H'1.",
            "VernacExtend",
            "5908ce6b8b94bc8eafd5e586ff9a51726914f3e8"
        ],
        [
            "apply divTerm_def with (nZb := nZb0); auto.",
            "VernacExtend",
            "1757be07bc108a4763966823d543b2e894bfea87"
        ],
        [
            "apply divTerm_eqT with (a := a); auto.",
            "VernacExtend",
            "9893f5813d8daf49058f7d1cf75b4dc8d1b7d40d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqTerm_multTerm_imp_eqTerm : forall a b c : Term A n, ~ zeroP (A:=A) A0 eqA (n:=n) c -> eqTerm (A:=A) eqA (n:=n) (multTerm (A:=A) multA (n:=n) c a) (multTerm (A:=A) multA (n:=n) c b) -> eqTerm (A:=A) eqA (n:=n) a b.",
            "VernacStartTheoremProof",
            "1d54cca1c5d3cd037ad37fdd5484c16a4dad6ccd"
        ],
        [
            "intros a b c nZc H'0.",
            "VernacExtend",
            "80cfe1e0bb2d16e485371143d3c20003907d0f96"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c a) nZc); auto.",
            "VernacExtend",
            "35989ee2695c15cb114021c8e069245fe038923e"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) a); auto.",
            "VernacExtend",
            "eb97aeea7ffae8cd4551b8ca2f5560c254295533"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (T1 A1 n) a); auto.",
            "VernacExtend",
            "d38f22907d05830003f22f89d57c33896bc45f9c"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) a); auto.",
            "VernacExtend",
            "bd575e3ebd334d519b7105d0b47bf7cedf34fb6f"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c b) nZc); auto.",
            "VernacExtend",
            "fbc9b6b70512f7e60a21253e35c230796847b235"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) b); auto.",
            "VernacExtend",
            "578dda54c23313d9c074d470dea587cd1802eb2d"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (T1 A1 n) b); auto.",
            "VernacExtend",
            "42f1895b95ebb41f9eccdf12f590b65dc9af7e38"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multTerm_eqTerm_inv : forall a b c : Term A n, eqTerm (A:=A) eqA (n:=n) (multTerm (A:=A) multA (n:=n) a b) (multTerm (A:=A) multA (n:=n) a c) -> ~ zeroP (A:=A) A0 eqA (n:=n) a -> eqTerm (A:=A) eqA (n:=n) b c.",
            "VernacStartTheoremProof",
            "0cdc20a1edf63d30f2d8fd53abdebe00fdc1c1f2"
        ],
        [
            "intros a b c H' H'1.",
            "VernacExtend",
            "6221e138cb82e8ebc435fb73b5d4bc0d2e2c1a2d"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) b (divTerm a H'1)); auto.",
            "VernacExtend",
            "feb77a93cd95b96152f766f99ca49e15b16bc481"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) b a) H'1); auto.",
            "VernacExtend",
            "562d9a51cc72a54a2e66829fd46cf8146696a551"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) H'1); auto.",
            "VernacExtend",
            "cd3cac890ef58980b4c1288cb096ea143f7acb36"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) c (divTerm a H'1)); auto.",
            "VernacExtend",
            "cd7a67ce2b5fa783c4cf971d8911ca1172aa4cf1"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c a) H'1); auto.",
            "VernacExtend",
            "81fb62671cbc442c5aff6e3cf34240700c064825"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a c) H'1); auto.",
            "VernacExtend",
            "a937ff7bef23c40782c99cb20dcf67ce24e7fefd"
        ],
        [
            "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) c (T1 A1 n)); auto.",
            "VernacExtend",
            "89bd989094554cec21c85df172513cf8313d4d88"
        ],
        [
            "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
            "VernacExtend",
            "729fab59fbe0eacafc6fb7b017361dec337d4f78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqT_nzero_divP : forall (a b : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b), eqT a (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b) -> ~ zeroP (A:=A) A0 eqA (n:=n) a -> divP a b.",
            "VernacStartTheoremProof",
            "22fdc5b8dee29ec2d77416cf632379cb111e9ab7"
        ],
        [
            "intros a b nZb H'0 H'1; auto.",
            "VernacExtend",
            "725d55909c902a3518aefd16b01478b907adb47b"
        ],
        [
            "apply divP_eqT with (a := multTerm (A:=A) multA (n:=n) (divTerm a nZb) b); auto.",
            "VernacExtend",
            "13ed804a5eebbe69772543c6fc342e1305bacf96"
        ],
        [
            "apply (eqT_sym A n); auto.",
            "VernacExtend",
            "abcc1d741de5602cca419f30f8f9c51d499a88df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqT_nzero_divP.",
            "VernacHints",
            "22b028cdf8f211c5fc76ae06ca91bacad7a8c6eb"
        ],
        [
            "Theorem eqT_nzero_eqT_divP : forall (a b c : Term A n) (nZb : ~ zeroP (A:=A) A0 eqA (n:=n) b), eqT c (multTerm (A:=A) multA (n:=n) (divTerm c nZb) b) -> ~ zeroP (A:=A) A0 eqA (n:=n) a -> eqT a c -> divP a b.",
            "VernacStartTheoremProof",
            "2c7ef5137ba5390f3b9c3e3fdfbe0835748cff13"
        ],
        [
            "intros a b c nZb H'0 H'1 H'2.",
            "VernacExtend",
            "f31f6551fa8247f78fc6b86b1d1d91d5dbf9071a"
        ],
        [
            "apply eqT_nzero_divP with (nZb := nZb); auto.",
            "VernacExtend",
            "46c8a3499a28316ff51622ec305e13a507ccee05"
        ],
        [
            "apply (eqT_trans A n) with (y := c); auto.",
            "VernacExtend",
            "7fdf1961b514fe7a266d522b9394381dacf01979"
        ],
        [
            "apply (eqT_trans A n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZb) b); auto.",
            "VernacExtend",
            "f1e77c5ae542daa9038ef5856fd7b29dafb8f9a1"
        ],
        [
            "apply (eqT_sym A n); auto.",
            "VernacExtend",
            "abcc1d741de5602cca419f30f8f9c51d499a88df"
        ],
        [
            "apply multTerm_eqT; auto.",
            "VernacExtend",
            "4d711045e990e2c51df6dd436d5c246f6cb19533"
        ],
        [
            "apply eqT_divTerm; auto; apply (eqT_refl A n); auto.",
            "VernacExtend",
            "77817e8648f8cfd50f4004f5d845274a12f752af"
        ],
        [
            "apply (eqT_refl A n); auto.",
            "VernacExtend",
            "31488dbe21e5a3abc40ae93c2e81b15231dcd24e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eqT_nzero_eqT_divP.",
            "VernacHints",
            "d8a1582266b97ca0a7a94b6dab5a18ba5c3f5c6a"
        ],
        [
            "End DivTerm.",
            "VernacEndSegment",
            "a6b24931172e668486b969905782ea85add862c4"
        ]
    ],
    "proofs": [
        {
            "name": "divTerm",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; simpl in |- *.",
                        "VernacExtend",
                        "e746c57abe29b935137bd864eaff739a8a24a4f1"
                    ]
                },
                {
                    "command": [
                        "intros nZb3; exact (divA b2 b3 nZb3, div_mon n c2 c3).",
                        "VernacExtend",
                        "804f5f89635431ce296681808c1fef2a18fb7fdc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqT_divTerm_plusTerm",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 a2 m1 nZc H' H'0 H'1; split; auto.",
                        "VernacExtend",
                        "f3ede26e78879d9bb0ca03e994241dff9027cd66"
                    ]
                },
                {
                    "command": [
                        "case H'1; intros H'3 H'4; clear H'1.",
                        "VernacExtend",
                        "399492b4635637b3ab0da2443f6c94d06235d285"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros H'2 H'5; clear H'0.",
                        "VernacExtend",
                        "c282216af25a5641406478b277f314296964714d"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (plusA (multA (divA a2 a0 nZc) a0) (multA (divA a1 a0 nZc) a0)) a0 nZc); auto.",
                        "VernacExtend",
                        "72aaa3b792f55ccd624b98eab00a2263dda327e4"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) a0) a0 nZc); auto.",
                        "VernacExtend",
                        "82bbeec315a9b5f927b06d5da65de933c308dbf2"
                    ]
                },
                {
                    "command": [
                        "apply divA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "45c666604d717cc4b102baec9cacdb8596e3dde6"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := plusA (multA a0 (divA a2 a0 nZc)) (multA a0 (divA a1 a0 nZc))); auto.",
                        "VernacExtend",
                        "66833d0c5ba7ac16dce1b8cb7414eb72958d0235"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA a0 (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))); auto.",
                        "VernacExtend",
                        "490a601facc1efe7a50dd5e42b59800fdc66c1eb"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) (divA a0 a0 nZc)); auto.",
                        "VernacExtend",
                        "40059b3e09f6819bd20fb221e161a38a942576f6"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA a0 (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))) a0 nZc); auto.",
                        "VernacExtend",
                        "520de4f010fb3e8d8be2724fe2fd0268ab8f0822"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (divA a0 a0 nZc) (plusA (divA a2 a0 nZc) (divA a1 a0 nZc))); auto.",
                        "VernacExtend",
                        "6d13eaee600d4e60c9234283af041084f423c9d8"
                    ]
                },
                {
                    "command": [
                        "apply divA_multA_comp_r with (1 := cs); auto.",
                        "VernacExtend",
                        "f751910aa127ccef168c6acc29d419b89f78d826"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (plusA (divA a2 a0 nZc) (divA a1 a0 nZc)) A1); auto.",
                        "VernacExtend",
                        "0f071bf78c61d39de175cfdfca4357897676909d"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply multA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "5a4d62968a3f4650bb931bbccce41d86a113f65d"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); auto.",
                        "VernacExtend",
                        "7963aa9e0936bff46734a0fc3811b8538b7e50cf"
                    ]
                },
                {
                    "command": [
                        "apply divA_A1 with (1 := cs); auto.",
                        "VernacExtend",
                        "d7d3430b7cb7d76f22e797daeb1af91389170b1d"
                    ]
                },
                {
                    "command": [
                        "apply multA_A1_r with (1 := cs); auto.",
                        "VernacExtend",
                        "e461380f38290142da020d4910973dcc685ad119"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_invTerm_l",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros d c A0' c0 nZA2 H'0; split; auto.",
                        "VernacExtend",
                        "8f2e9d77e720298230a25bbba860d03d8c3b3bdb"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros H'1 H'2; clear H'0.",
                        "VernacExtend",
                        "05ae5a179967a6366551d613b1457855b5ff4403"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (invA (multA (divA d A0' nZA2) A0')) A0' nZA2); auto.",
                        "VernacExtend",
                        "06397d6da659ed5974b5e468326e66f0b859183d"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA (multA (invA (divA d A0' nZA2)) A0') A0' nZA2); auto.",
                        "VernacExtend",
                        "fd2ee96edf6e48744739b6e2ff725a0d408cb000"
                    ]
                },
                {
                    "command": [
                        "apply divA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "45c666604d717cc4b102baec9cacdb8596e3dde6"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_sym _ _ _ _ _ _ _ _ _ cs); apply multA_invA_com_l with (1 := cs); auto.",
                        "VernacExtend",
                        "1079aee79fe6c4ba8363ea27dc682635656d544b"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (invA (divA d A0' nZA2)) (divA A0' A0' nZA2)); auto.",
                        "VernacExtend",
                        "7bb0c1a041a79a0351a85c04f02c91a022afce81"
                    ]
                },
                {
                    "command": [
                        "apply divA_multA_comp_l with (1 := cs).",
                        "VernacExtend",
                        "89d3d4a59f320449cbcc6cd2a5985e4f40e54101"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := multA (invA (divA d A0' nZA2)) A1); auto.",
                        "VernacExtend",
                        "688af5a3d607c64c1a1b3fff1daa9078ec354ddf"
                    ]
                },
                {
                    "command": [
                        "apply multA_eqA_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "5a4d62968a3f4650bb931bbccce41d86a113f65d"
                    ]
                },
                {
                    "command": [
                        "apply divA_A1 with (1 := cs).",
                        "VernacExtend",
                        "62cb0bcdbc89aa88800f1bef4e01b317bded98b2"
                    ]
                },
                {
                    "command": [
                        "apply multA_A1_r with (1 := cs).",
                        "VernacExtend",
                        "be196838fa08d8d836828236a8abb4348bfc7064"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_invTerm_r",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply divA_invA_r with (1 := cs); auto.",
                        "VernacExtend",
                        "d3824c2fb7f5848b54d6408e0e0ef095546812a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_divTerm",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros a b c d; case a; case b; case c; case d; unfold eqT in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "aff2c863ca05ee25a2c517110b7e878a686b3d4d"
                    ]
                },
                {
                    "command": [
                        "intros A0' c0 d2 c2 H' c3 H'0 c4 H'1 H'2 H'3 H'4; rewrite H'3; rewrite H'4; auto.",
                        "VernacExtend",
                        "37a1d05ee16e8d5a06859cb38b521317ce50034e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_divTerm_comp",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros a b c d; case a; case b; case c; case d; simpl in |- *; auto.",
                        "VernacExtend",
                        "10f288de252b75b60480e8692697267cdf9a93a7"
                    ]
                },
                {
                    "command": [
                        "intros A0' c0 d2 c2 d3 c3 d4 c4 nZd2 H'0 H'1 H'2.",
                        "VernacExtend",
                        "6b4bdb63baef4be8e753689845a689b8463d6946"
                    ]
                },
                {
                    "command": [
                        "case H'2; intros H'3 H'4; clear H'2.",
                        "VernacExtend",
                        "75c59df4f28c1199123b6f5fae2b6cd21f10751b"
                    ]
                },
                {
                    "command": [
                        "case H'1; intros H'2 H'5; clear H'1.",
                        "VernacExtend",
                        "82fdf885b9f0296744d5b215ecb8ddc6212a6aca"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; rewrite H'4; auto.",
                        "VernacExtend",
                        "db4660b5547e647eaefeae5d4b924d53460b22f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_multTerm_l",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros d c0 A0' c2 d2 c3 nZd2 H'0; case H'0; intros H'1 H'2; auto.",
                        "VernacExtend",
                        "ea58dc467dda6d0d4095d1bb00fbe8c2a2101a9c"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply divA_multA_comp_l with (1 := cs).",
                        "VernacExtend",
                        "89d3d4a59f320449cbcc6cd2a5985e4f40e54101"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2.",
                        "VernacExtend",
                        "884e4d7bc650f9624ecf7e3155e0da90d9130a00"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_div_com.",
                        "VernacExtend",
                        "297f1fde2c905f3a311bbe352f53ecbb8c19e958"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_mon_assoc.",
                        "VernacExtend",
                        "7b7578142dd5f3e10b2e20e1839dd438e45a28e1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_div_com; auto.",
                        "VernacExtend",
                        "04a33e23d0d549bf93338745faf4cd76cbf17835"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_multTerm_r",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 a2 m1 nZa H'; split; auto.",
                        "VernacExtend",
                        "a61f447ce55699fc6ea7818da7da650c5e92cecd"
                    ]
                },
                {
                    "command": [
                        "apply divA_multA_comp_r with (1 := cs).",
                        "VernacExtend",
                        "bc1d410bf0045aea3ce8278868a0be162c53c905"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; rewrite H'1; clear H'.",
                        "VernacExtend",
                        "82e4060ec95fe4eb6ee750fba0759dfd67844444"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_div_com; auto.",
                        "VernacExtend",
                        "30d931c37d0e7bdd4ea01eacdf5a71476601283c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_mon_assoc.",
                        "VernacExtend",
                        "bfefbf290574ecf3feb9ec542ec21b68618681ba"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_mon_com n m1 m).",
                        "VernacExtend",
                        "3fe4c188ed3e6e843b3b948362fcb077fb30b395"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_mon_assoc.",
                        "VernacExtend",
                        "7b7578142dd5f3e10b2e20e1839dd438e45a28e1"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_div_com; auto.",
                        "VernacExtend",
                        "30d931c37d0e7bdd4ea01eacdf5a71476601283c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_is_T1",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros a; case a; simpl in |- *; auto.",
                        "VernacExtend",
                        "28ba63d30187f6bdeff212a2551a486f5d5a3bbc"
                    ]
                },
                {
                    "command": [
                        "intros a0 m nZa; split; auto.",
                        "VernacExtend",
                        "b4943dd33dd5d1697391f9275d6c76c1456d2847"
                    ]
                },
                {
                    "command": [
                        "apply divA_A1 with (1 := cs).",
                        "VernacExtend",
                        "62cb0bcdbc89aa88800f1bef4e01b317bded98b2"
                    ]
                },
                {
                    "command": [
                        "unfold M1 in |- *; apply mult_div_id; auto.",
                        "VernacExtend",
                        "8d2af822b7fc2b4ce1d95570e92f5a78d56021c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_nZ",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 H nZb; apply divA_nZ with (1 := cs); auto.",
                        "VernacExtend",
                        "ece0afd2053d9d92d3cf6d65ce3430dff7f99f18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_eqT",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a1 m1 a2 m2 a3 m3 H1 H2 H3 H4 H5; case H5; intros H6 H7; split; auto.",
                        "VernacExtend",
                        "f77a7369b2a49a32b4357a56737daf1d5ceb8c1b"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "unfold eqT in H1; simpl in H1; rewrite <- H1; auto.",
                        "VernacExtend",
                        "1d9770a022fa3e0b883b809b19668151d4593f56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gb",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros H'; case H'; auto.",
                        "VernacExtend",
                        "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "gm",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros H'; case H'; auto.",
                        "VernacExtend",
                        "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "mk_clean",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros a b; exists (div_mon_clean n a b); auto.",
                        "VernacExtend",
                        "ea2532000b24091b3773ba9b597938e1f81ecedc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_dec",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros b2 c2 b3 c3.",
                        "VernacExtend",
                        "82f7539799a3d7dcb68e52a58c1270cbba1fb56b"
                    ]
                },
                {
                    "command": [
                        "intros Zp1 Zp2.",
                        "VernacExtend",
                        "33e5099a4f625e86655b278c06466aff250ffc9a"
                    ]
                },
                {
                    "command": [
                        "case (mk_clean c3 c2).",
                        "VernacExtend",
                        "0231748545e366f246a47305b8ed9b637007cb2a"
                    ]
                },
                {
                    "command": [
                        "intros x; case x.",
                        "VernacExtend",
                        "97a0ca33fd0f432bab2f85e04107454f03f2dc1c"
                    ]
                },
                {
                    "command": [
                        "intros c b4; case b4.",
                        "VernacExtend",
                        "0d9ef82bb713e8993a7109c3ac7f7f628e8e67e6"
                    ]
                },
                {
                    "command": [
                        "intros H0; left; simpl in |- *; auto.",
                        "VernacExtend",
                        "e3fb4eed5c6bd03067e6c06b5cd159b09f6eeb3e"
                    ]
                },
                {
                    "command": [
                        "generalize (div_clean_dec1 n c3 c2); rewrite <- H0; simpl in |- *; auto.",
                        "VernacExtend",
                        "1b55fb8c00a4a3a4e741d2d95770510ade74c7b3"
                    ]
                },
                {
                    "command": [
                        "intros H1; case H1; auto; intros H2 H3; split; auto.",
                        "VernacExtend",
                        "4aa27e15b4ef247d0cbda82e3e17536a14be153e"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "intros H0; right; red in |- *; intros dviP_H; inversion dviP_H.",
                        "VernacExtend",
                        "2a08dd030b5fa8043c72168d103381573b973141"
                    ]
                },
                {
                    "command": [
                        "generalize (div_clean_dec2 n c3 c2); simpl in |- *; auto.",
                        "VernacExtend",
                        "fe7f96dbfda772fafe72edfbb263c6afa988dec0"
                    ]
                },
                {
                    "command": [
                        "intros H'; lapply H'; [ intros H'0; apply H'0; clear H' | clear H' ].",
                        "VernacExtend",
                        "fa58e3d86e776d8870cb5c93d06ffe7d983e1a5c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; auto.",
                        "VernacExtend",
                        "32b903bcbdd2d6f83dd19185f0534857f043d3ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; simpl in |- *; auto.",
                        "VernacExtend",
                        "7d6f1bfc4078c4294f325f5402860ecc3e41b77b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zeroP_divTerm",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros d H' A0' H'0 H'1 nZd; auto.",
                        "VernacExtend",
                        "403ed57327efc756dc8e5b8be7f2bf5dd623e2f8"
                    ]
                },
                {
                    "command": [
                        "apply (eqA_trans _ _ _ _ _ _ _ _ _ cs) with (y := divA A0 d nZd); auto.",
                        "VernacExtend",
                        "66635c3edbb096dd24230243819f23f7696391ee"
                    ]
                },
                {
                    "command": [
                        "apply divA_A0_l with (1 := cs).",
                        "VernacExtend",
                        "7e3c6c163fcd6c617db513a969d18715ff2e8eab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_on_eqT",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; unfold eqT in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "fde1eddb23ed30ae57bad8a3796dbe4195cfc6d0"
                    ]
                },
                {
                    "command": [
                        "intros d c A0' c0 H' H'0 H'1; rewrite <- H'1.",
                        "VernacExtend",
                        "b4b7d3566465647c1a46537dccfc0fe6d4fa95e4"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_div_id; auto.",
                        "VernacExtend",
                        "63d505eabe315466d5473b9d32dd044be0705901"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_mon_zero_l; auto.",
                        "VernacExtend",
                        "d6c61534723616a212a9a67ff54b0cb435ebf98b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_on_eqT_eqT",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; unfold eqT in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "fde1eddb23ed30ae57bad8a3796dbe4195cfc6d0"
                    ]
                },
                {
                    "command": [
                        "intros b2 c b3 c0 H' H'0 H'1; rewrite H'1; auto.",
                        "VernacExtend",
                        "667cc52bd46300a618d53031fc61344b777da15e"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_div_id; auto.",
                        "VernacExtend",
                        "63d505eabe315466d5473b9d32dd044be0705901"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_on_plusM_minusM",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ppc",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros H; case H; intros b2 c2 H'; case H'; intros b3 c3; simpl in |- *; exact (A1, ppcm_mon n c2 c3).",
                        "VernacExtend",
                        "d8b3d790545f9e99e33c0a78be9d61eb0fd90359"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ppc_com",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0; split; auto.",
                        "VernacExtend",
                        "0ce3a93aee69d134195316a5500e9b45c719895c"
                    ]
                },
                {
                    "command": [
                        "apply ppcm_com; auto.",
                        "VernacExtend",
                        "ec567cb1ef55ad3b5011eabb66fdcd87543c5350"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_ppc",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros a b c; case a; case b; case c; simpl in |- *; auto.",
                        "VernacExtend",
                        "086c10a636d0b1ee457b1d20d38d0600405a4481"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 a2 m1 nZa nZb nZppab H H0; split; auto.",
                        "VernacExtend",
                        "0fe3cb0652583e37937eeb85b52fbed6a8a5a89b"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "apply ppcm_mom_is_ppcm; intuition.",
                        "VernacExtend",
                        "9748e038731207f3fc1f65b66c474e0f0a874983"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_ppcl",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 nZa H; split; auto.",
                        "VernacExtend",
                        "c48a3dcf288c48268ec75fcc7f5dbfa282a51298"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "apply ppcm_prop_l.",
                        "VernacExtend",
                        "2b4d6ac4cc17254b1ebf2e7836f58c73c8151d5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_ppcr",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 H nZb; split; auto.",
                        "VernacExtend",
                        "1f96792e47db7d25ed0e24dd796165b77ad0c529"
                    ]
                },
                {
                    "command": [
                        "apply divA_is_multA with (1 := cs); auto.",
                        "VernacExtend",
                        "572542432992e078f5b244f51e883464cc4e768d"
                    ]
                },
                {
                    "command": [
                        "apply ppcm_prop_r.",
                        "VernacExtend",
                        "11265405890421c96f80829fe55240b74e8c051c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ppc_nZ",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_rew",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "intros a0 m a1 m0 nZ1 nZ2.",
                        "VernacExtend",
                        "39f49d453063a8844b850b179a26b6170fdbc070"
                    ]
                },
                {
                    "command": [
                        "rewrite divA_rew with (1 := cs) (nZ2 := nZ2); auto.",
                        "VernacExtend",
                        "86020cc59f9daf777f5f80c03b0b15d483e03822"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_inv1",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros a b H; inversion H; auto.",
                        "VernacExtend",
                        "3ec7eef7096e7afa7dcec36001398b821dc9c660"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_inv2",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros a b H; inversion H; auto.",
                        "VernacExtend",
                        "3ec7eef7096e7afa7dcec36001398b821dc9c660"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_inv3",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros a b nZb H; inversion H; auto.",
                        "VernacExtend",
                        "4360cfd5e757f73f2f9661fc412dd28528fbb275"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb0) b); auto.",
                        "VernacExtend",
                        "3c097ddc1d9d2d4be80d68ba446632dea2fa3776"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_plusTerm",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0; inversion H'0; inversion H'.",
                        "VernacExtend",
                        "a6df6651612904cc9f30c2153eb204d5a4f6c822"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; apply divTerm_def with (nZb := nZb0); auto.",
                        "VernacExtend",
                        "52f8c96fbdbbb5e151e48ead57ce04e828984df8"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := plusTerm (A:=A) plusA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb0) c) (multTerm (A:=A) multA (n:=n) (divTerm b nZb0) c)); auto.",
                        "VernacExtend",
                        "15e52522a72b08348f040d7d66ecb527b5de7c6e"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_plusTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "6b9b94259bf13e9dbf673bb30d1248cca6f201f2"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_eqT; auto.",
                        "VernacExtend",
                        "4d711045e990e2c51df6dd436d5c246f6cb19533"
                    ]
                },
                {
                    "command": [
                        "apply eqT_divTerm; auto.",
                        "VernacExtend",
                        "045f1a5907d0677003d910524cf91c954c3ac0df"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_refl A n).",
                        "VernacExtend",
                        "6889ffdb37f3dd14b0422ae62f9cd60cdb16ae7e"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_refl A n).",
                        "VernacExtend",
                        "6889ffdb37f3dd14b0422ae62f9cd60cdb16ae7e"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (plusTerm (A:=A) plusA (n:=n) (divTerm a nZb0) (divTerm b nZb0)) c); auto.",
                        "VernacExtend",
                        "000c9953e919685a97c46b658904c571550ee3f6"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_plusTerm_dist_l with (1 := cs); auto.",
                        "VernacExtend",
                        "151fc7d64d851b8b123a97d3a43e8d2afe310f84"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "apply eqT_divTerm_plusTerm; auto.",
                        "VernacExtend",
                        "61d77b6bbb82079db704de4ed012c219f2140b12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_invTerm_l",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros a b H'; inversion H'; auto.",
                        "VernacExtend",
                        "1397d786526dec436d4508d9709d3740661533c9"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZb); auto.",
                        "VernacExtend",
                        "dbffdae7779fc05d35abfd361e685b13209b33f2"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (invTerm (A:=A) invA (n:=n) (divTerm a nZb)) b); auto.",
                        "VernacExtend",
                        "63ce263a0c43c834f9bb93c774b4e8e0a38ecf73"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b)); auto.",
                        "VernacExtend",
                        "d0df9b46b1a75162dda4428d611df7d91964411a"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com with (1 := cs); auto.",
                        "VernacExtend",
                        "f4c866c4b1b7aa3457c501c0053e9f1fb0e3f944"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_invTerm_l; auto.",
                        "VernacExtend",
                        "0fa85858e64574fa353a19f4a4fd9dfc7f48f0d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_invTerm_r",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "intros a b H'; inversion H'.",
                        "VernacExtend",
                        "b31c78840b95032f35fde816c6942de167aa4d79"
                    ]
                },
                {
                    "command": [
                        "cut (~ zeroP (A:=A) A0 eqA (n:=n) (invTerm (A:=A) invA (n:=n) b)); [ intros nZib | auto ].",
                        "VernacExtend",
                        "13d5e09615065e09d3c166d48fb897db0bd75c45"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZib); auto.",
                        "VernacExtend",
                        "12beaff05b628ed74721455688f2d062631fbcd7"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (invTerm (A:=A) invA (n:=n) (divTerm a nZb)) (invTerm (A:=A) invA (n:=n) b)); auto.",
                        "VernacExtend",
                        "398b216d6bed57844d1d4b5a208d40d6b5c772c9"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) (invTerm (A:=A) invA (n:=n) b))); auto.",
                        "VernacExtend",
                        "0d1fa61595a8577acd054663f75b1c985eaf1c65"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := invTerm (A:=A) invA (n:=n) (invTerm (A:=A) invA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b))); auto.",
                        "VernacExtend",
                        "176b6906618fb534f44754806655182763b7f9ba"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZb) b); auto.",
                        "VernacExtend",
                        "918cd9a074a7b239805c9e2781d6178a0a5904c0"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_invTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "30f253881eb4de3f83936ea3cb04b854c9ed9508"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com_r with (1 := cs); auto.",
                        "VernacExtend",
                        "0259edf1255e66b6247386b182f99b2484aee3b8"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply mult_invTerm_com with (1 := cs); auto.",
                        "VernacExtend",
                        "f4c866c4b1b7aa3457c501c0053e9f1fb0e3f944"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_invTerm_r; auto.",
                        "VernacExtend",
                        "b83227d05d4d826405eccf54ce0d9bf25f0ff2ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_multTerml",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb.",
                        "VernacExtend",
                        "6afb8baee318a01e5fdd2f04ff578e184ff74440"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZa); auto.",
                        "VernacExtend",
                        "21055ec4dc003b2d9b7aa98dcb968e0a8cc31581"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) (divTerm a nZa) b) a); auto.",
                        "VernacExtend",
                        "77d3be68022493bad3be9ef6940a8f20ac2141bb"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) (T1 A1 n) b) a); auto.",
                        "VernacExtend",
                        "dec30770e1e4f2a99145767925fe7228f03b58d5"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) b a); auto.",
                        "VernacExtend",
                        "ae000961118773d347181aabc081e309f82be123"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply div_is_T1; auto.",
                        "VernacExtend",
                        "cd8ed415eabc036d931bc6e57ab2ba504e28c96e"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_multTerm_r; auto.",
                        "VernacExtend",
                        "eed985e553924498b8432e68d4ecb98ce7dc4e4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_multTermr",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb.",
                        "VernacExtend",
                        "6afb8baee318a01e5fdd2f04ff578e184ff74440"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZb); auto.",
                        "VernacExtend",
                        "dbffdae7779fc05d35abfd361e685b13209b33f2"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (multTerm (A:=A) multA (n:=n) a (divTerm b nZb)) b); auto.",
                        "VernacExtend",
                        "3fe37a0320f12a5d6f0287b03ccbe5031a913241"
                    ]
                },
                {
                    "command": [
                        "apply eqTerm_multTerm_comp with (1 := cs); auto.",
                        "VernacExtend",
                        "d406d25ee131f1c92f12bfb7d88971598dd24fae"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply divTerm_multTerm_l; auto.",
                        "VernacExtend",
                        "12b70fd0feb1c9314bfc4b233a0f0a980334f295"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_nZero",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros a b nZb H'; inversion H'; auto.",
                        "VernacExtend",
                        "9d11f3901ab04d3c48ff6e36d029b05698c53d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_on_eqT",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros a b H' nZb H'1; apply divTerm_def with (nZb := nZb); auto.",
                        "VernacExtend",
                        "5a30106b7c9cfac52cf739b0f36e542470224eed"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_on_eqT; auto.",
                        "VernacExtend",
                        "b7a2c32ab056acc7266ae14bb9e3b0d540b78111"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_on_eqT_eqT",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros a b H nZb H0; apply divTerm_on_eqT_eqT; auto.",
                        "VernacExtend",
                        "639527bf0104fffc99a7d9042fa863269914050a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ppc_is_ppcm",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb; apply ppcm0; auto.",
                        "VernacExtend",
                        "1344d62b7c7431ccfd4bdc69a83d30f9df256a96"
                    ]
                },
                {
                    "command": [
                        "intros r H'1 H'2; inversion H'1; inversion H'2.",
                        "VernacExtend",
                        "d88d13708caa4d33424e66241d7210c8f4b97592"
                    ]
                },
                {
                    "command": [
                        "cut (~ zeroP (A:=A) A0 eqA (n:=n) (ppc a b)); [ intros nZppab | auto ].",
                        "VernacExtend",
                        "e4dd12d82ed5a0530047ae59e758047269ee0327"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZppab); auto.",
                        "VernacExtend",
                        "3850af962a675873e881872c9baa43e18019b4a1"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_ppc with (nZa := nZa) (nZb := nZb); auto.",
                        "VernacExtend",
                        "381b2bb2563ea796f15214f91381aa1331f14a1a"
                    ]
                },
                {
                    "command": [
                        "apply ppc_nZ; auto.",
                        "VernacExtend",
                        "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZa); auto.",
                        "VernacExtend",
                        "21055ec4dc003b2d9b7aa98dcb968e0a8cc31581"
                    ]
                },
                {
                    "command": [
                        "apply ppc_nZ; auto.",
                        "VernacExtend",
                        "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_ppcl; auto.",
                        "VernacExtend",
                        "f9d405cf6628c8bd92078e2323dd77e62fbeeb55"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZb); auto.",
                        "VernacExtend",
                        "dbffdae7779fc05d35abfd361e685b13209b33f2"
                    ]
                },
                {
                    "command": [
                        "apply ppc_nZ; auto.",
                        "VernacExtend",
                        "ee6770becc89f0d39aefa87fa5a484b9f4c0f461"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_ppcr; auto.",
                        "VernacExtend",
                        "05cda271c2de615091bd73fd5e46ff04b0003925"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ppc_multTerm_divP",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0.",
                        "VernacExtend",
                        "70e5f336329713bc517f825b3689dbb81bfedeb9"
                    ]
                },
                {
                    "command": [
                        "elim ppc_is_ppcm; auto.",
                        "VernacExtend",
                        "febc5990b548101f187d7988cf7bbd4c3568d753"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_comp",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "intros a b c d H'; generalize b d; elim H'.",
                        "VernacExtend",
                        "c052b1e0ef4c39d217f5db5a4966938d3447b02e"
                    ]
                },
                {
                    "command": [
                        "intros a0 b0 nZa0 nZb0 H'2 b1 d0 H'3 H'4; auto.",
                        "VernacExtend",
                        "a5a4ece42a5a4ea6aefb3ca82ea80b2412d0605a"
                    ]
                },
                {
                    "command": [
                        "cut (~ zeroP (A:=A) A0 eqA (n:=n) d0); [ intros nZd0 | auto ].",
                        "VernacExtend",
                        "1e63f276afec82abc9a54646b0c784180d2a3dd8"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZd0); auto.",
                        "VernacExtend",
                        "f24a0d3704c0855025d5dbf8c0aaf48db0d0dbe5"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros nz1; absurd (zeroP (A:=A) A0 eqA (n:=n) a0); auto.",
                        "VernacExtend",
                        "5658af7b2dac27a6fc9303d16543027f8acc0818"
                    ]
                },
                {
                    "command": [
                        "apply zeroP_comp_eqTerm with (1 := cs) (a := b1); auto.",
                        "VernacExtend",
                        "65956c6822397691fcd506f8c3a416530497da0b"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := a0); auto.",
                        "VernacExtend",
                        "07401f0fc193b22bae107bf6548544227f47ebfb"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a0 nZb0) b0); auto.",
                        "VernacExtend",
                        "d345d22b1d10cd02fb281a4334cb81dc6392f745"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros nz1; absurd (zeroP (A:=A) A0 eqA (n:=n) b0); auto.",
                        "VernacExtend",
                        "d15c6ad867902c1b074c334a5990411dd1780ef5"
                    ]
                },
                {
                    "command": [
                        "apply zeroP_comp_eqTerm with (1 := cs) (a := d0); auto.",
                        "VernacExtend",
                        "cae2db2faaab5fc34b4e1e3d0e4ef6e0a75e71ce"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_multTerm_l",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0 H'1.",
                        "VernacExtend",
                        "2715eeca0568bd78511d7037f97b4daeb74effee"
                    ]
                },
                {
                    "command": [
                        "apply divP_comp with (a := multTerm (A:=A) multA (n:=n) a b) (c := a); auto.",
                        "VernacExtend",
                        "d6d7169a8dc897265d906a78c515b11f5094b9c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_multTerm_r",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'0 H'1.",
                        "VernacExtend",
                        "2715eeca0568bd78511d7037f97b4daeb74effee"
                    ]
                },
                {
                    "command": [
                        "apply divP_comp with (a := multTerm (A:=A) multA (n:=n) a b) (c := b); auto.",
                        "VernacExtend",
                        "19357813b989ceded08a3fbc93396ba03e4371c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_ppcl",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0; try assumption.",
                        "VernacExtend",
                        "57e09f4d0a727855642e6ff1f020b9e63dd6914d"
                    ]
                },
                {
                    "command": [
                        "lapply (ppc_is_ppcm a b); [ intros H'3; lapply H'3; clear H'3; [ intros H'4 | idtac ] | idtac ]; auto; auto.",
                        "VernacExtend",
                        "bfe07fbf7b12a0a5326b19169a55765be031009a"
                    ]
                },
                {
                    "command": [
                        "inversion H'4; auto.",
                        "VernacExtend",
                        "ca7965e4d7d714ea3e466d2be6b60898e0646f36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_ppcr",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "intros a b H' H'0; try assumption.",
                        "VernacExtend",
                        "57e09f4d0a727855642e6ff1f020b9e63dd6914d"
                    ]
                },
                {
                    "command": [
                        "lapply (ppc_is_ppcm a b); [ intros H'3; lapply H'3; clear H'3; [ intros H'4 | idtac ] | idtac ]; auto; auto.",
                        "VernacExtend",
                        "bfe07fbf7b12a0a5326b19169a55765be031009a"
                    ]
                },
                {
                    "command": [
                        "inversion H'4; auto.",
                        "VernacExtend",
                        "ca7965e4d7d714ea3e466d2be6b60898e0646f36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divTerm_compo",
            "line_nb": 374,
            "steps": [
                {
                    "command": [
                        "intros a b c nZb nZc H'; inversion H'.",
                        "VernacExtend",
                        "4d01f8590342303e69d1c1d59236bf6332cc1581"
                    ]
                },
                {
                    "command": [
                        "intros H'0; inversion H'0.",
                        "VernacExtend",
                        "cf2906b3e6fe43e8c6c063c39d519533102a6826"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) (divTerm a nZb) b) nZc); auto.",
                        "VernacExtend",
                        "acefd0fc3a61679aaa0429d79d7a10c4b7845ca1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_comp_ppc0",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb nZppab p.",
                        "VernacExtend",
                        "3ea418ce7c646300c64efe7e212744e0fb380d61"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm a nZa) b); auto.",
                        "VernacExtend",
                        "edbc454c58c77af3af7e8ed79d7c95a752b64fd0"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) nZa); auto.",
                        "VernacExtend",
                        "6731e6a71181c1855c89707b67a5189f18130689"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_comp_ppc1",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb nZppab H'0.",
                        "VernacExtend",
                        "59503eebfd2b86fbd9a59924ecfae6f1fc9357b6"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) a (divTerm b nZb)); auto.",
                        "VernacExtend",
                        "0e31b6645a0816193ee9e1b3393f1769c0d6a17c"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) nZb); auto.",
                        "VernacExtend",
                        "33a38a83b0c85621fe3b431ea9df1fe456df00de"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_dec",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "intros a b nZa nZb.",
                        "VernacExtend",
                        "6afb8baee318a01e5fdd2f04ff578e184ff74440"
                    ]
                },
                {
                    "command": [
                        "elim divTerm_dec with (a := a) (nZb := nZb); auto.",
                        "VernacExtend",
                        "0db4690ca02cdd3150a5694f27a4e92dff5dfe68"
                    ]
                },
                {
                    "command": [
                        "intros H'1; left; apply divTerm_def with (nZb := nZb); auto.",
                        "VernacExtend",
                        "97f0ad20bb96e12105e117139d66056d7a92fc49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divP_eqT",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "intros a b c H' nZb H'1; inversion H'1.",
                        "VernacExtend",
                        "5908ce6b8b94bc8eafd5e586ff9a51726914f3e8"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_def with (nZb := nZb0); auto.",
                        "VernacExtend",
                        "1757be07bc108a4763966823d543b2e894bfea87"
                    ]
                },
                {
                    "command": [
                        "apply divTerm_eqT with (a := a); auto.",
                        "VernacExtend",
                        "9893f5813d8daf49058f7d1cf75b4dc8d1b7d40d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqTerm_multTerm_imp_eqTerm",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "intros a b c nZc H'0.",
                        "VernacExtend",
                        "80cfe1e0bb2d16e485371143d3c20003907d0f96"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c a) nZc); auto.",
                        "VernacExtend",
                        "35989ee2695c15cb114021c8e069245fe038923e"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) a); auto.",
                        "VernacExtend",
                        "eb97aeea7ffae8cd4551b8ca2f5560c254295533"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (T1 A1 n) a); auto.",
                        "VernacExtend",
                        "d38f22907d05830003f22f89d57c33896bc45f9c"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) a); auto.",
                        "VernacExtend",
                        "bd575e3ebd334d519b7105d0b47bf7cedf34fb6f"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c b) nZc); auto.",
                        "VernacExtend",
                        "fbc9b6b70512f7e60a21253e35c230796847b235"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZc) b); auto.",
                        "VernacExtend",
                        "578dda54c23313d9c074d470dea587cd1802eb2d"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) (T1 A1 n) b); auto.",
                        "VernacExtend",
                        "42f1895b95ebb41f9eccdf12f590b65dc9af7e38"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multTerm_eqTerm_inv",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "intros a b c H' H'1.",
                        "VernacExtend",
                        "6221e138cb82e8ebc435fb73b5d4bc0d2e2c1a2d"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) b (divTerm a H'1)); auto.",
                        "VernacExtend",
                        "feb77a93cd95b96152f766f99ca49e15b16bc481"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) b a) H'1); auto.",
                        "VernacExtend",
                        "562d9a51cc72a54a2e66829fd46cf8146696a551"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a b) H'1); auto.",
                        "VernacExtend",
                        "cd3cac890ef58980b4c1288cb096ea143f7acb36"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) c (divTerm a H'1)); auto.",
                        "VernacExtend",
                        "cd7a67ce2b5fa783c4cf971d8911ca1172aa4cf1"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) c a) H'1); auto.",
                        "VernacExtend",
                        "81fb62671cbc442c5aff6e3cf34240700c064825"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := divTerm (multTerm (A:=A) multA (n:=n) a c) H'1); auto.",
                        "VernacExtend",
                        "a937ff7bef23c40782c99cb20dcf67ce24e7fefd"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_trans _ _ _ _ _ _ _ _ _ cs n) with (y := multTerm (A:=A) multA (n:=n) c (T1 A1 n)); auto.",
                        "VernacExtend",
                        "89bd989094554cec21c85df172513cf8313d4d88"
                    ]
                },
                {
                    "command": [
                        "apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n); auto.",
                        "VernacExtend",
                        "729fab59fbe0eacafc6fb7b017361dec337d4f78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_nzero_divP",
            "line_nb": 425,
            "steps": [
                {
                    "command": [
                        "intros a b nZb H'0 H'1; auto.",
                        "VernacExtend",
                        "725d55909c902a3518aefd16b01478b907adb47b"
                    ]
                },
                {
                    "command": [
                        "apply divP_eqT with (a := multTerm (A:=A) multA (n:=n) (divTerm a nZb) b); auto.",
                        "VernacExtend",
                        "13ed804a5eebbe69772543c6fc342e1305bacf96"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_sym A n); auto.",
                        "VernacExtend",
                        "abcc1d741de5602cca419f30f8f9c51d499a88df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqT_nzero_eqT_divP",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "intros a b c nZb H'0 H'1 H'2.",
                        "VernacExtend",
                        "f31f6551fa8247f78fc6b86b1d1d91d5dbf9071a"
                    ]
                },
                {
                    "command": [
                        "apply eqT_nzero_divP with (nZb := nZb); auto.",
                        "VernacExtend",
                        "46c8a3499a28316ff51622ec305e13a507ccee05"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_trans A n) with (y := c); auto.",
                        "VernacExtend",
                        "7fdf1961b514fe7a266d522b9394381dacf01979"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_trans A n) with (y := multTerm (A:=A) multA (n:=n) (divTerm c nZb) b); auto.",
                        "VernacExtend",
                        "f1e77c5ae542daa9038ef5856fd7b29dafb8f9a1"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_sym A n); auto.",
                        "VernacExtend",
                        "abcc1d741de5602cca419f30f8f9c51d499a88df"
                    ]
                },
                {
                    "command": [
                        "apply multTerm_eqT; auto.",
                        "VernacExtend",
                        "4d711045e990e2c51df6dd436d5c246f6cb19533"
                    ]
                },
                {
                    "command": [
                        "apply eqT_divTerm; auto; apply (eqT_refl A n); auto.",
                        "VernacExtend",
                        "77817e8648f8cfd50f4004f5d845274a12f752af"
                    ]
                },
                {
                    "command": [
                        "apply (eqT_refl A n); auto.",
                        "VernacExtend",
                        "31488dbe21e5a3abc40ae93c2e81b15231dcd24e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}