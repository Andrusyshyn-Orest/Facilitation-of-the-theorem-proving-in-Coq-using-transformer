{
    "filename": "Nat_compl.v",
    "coq_project": "three-gap",
    "vernac_cmds": [
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Require Export Compare_dec.",
            "VernacRequire",
            "07740b4f9d7a269077d4962024b3c9137fa46a8d"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Require Import Classical.",
            "VernacRequire",
            "4cc53198e8d48bbb9dcca109b0e59a015dd7a5bb"
        ],
        [
            "Definition decidable (P : Prop) := P \\/ ~ P.",
            "VernacDefinition",
            "2ad8f9607a665f37e75242a7d220a7a7185090ab"
        ],
        [
            "Lemma not_symt_et : forall P Q R S : Prop, ~ (P /\\ Q /\\ R /\\ S) -> ~ ((P /\\ Q) /\\ R /\\ S).",
            "VernacStartTheoremProof",
            "20dc17055c2093ab63bc5f9e3c40f93575ce130a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_not_exist_pt : forall P Q R S : nat -> Prop, ((exists k : nat, P k /\\ Q k /\\ R k /\\ S k) -> False) -> forall k : nat, P k -> Q k -> ~ R k \\/ ~ S k.",
            "VernacStartTheoremProof",
            "873277dc6b51c09a902591dc6fa1cbded5881b64"
        ],
        [
            "intros; generalize (not_ex_all_not nat (fun n : nat => P n /\\ Q n /\\ R n /\\ S n) H); intro; generalize (not_symt_et (P k) (Q k) (R k) (S k) (H2 k)); intro; generalize (not_and_or (P k /\\ Q k) (R k /\\ S k) H3); intro; generalize (or_to_imply (P k /\\ Q k) (~ (R k /\\ S k)) H4); intro; cut (P k /\\ Q k); auto with core arith.",
            "VernacExtend",
            "cefc182fcd2ba104b39db9eed5caaff4a2d933bd"
        ],
        [
            "intro; generalize (H5 H6); intro; apply (not_and_or (R k) (S k) H7).",
            "VernacExtend",
            "870e8fefc39882671af67d973224970f65e8636e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraposee_ou : forall P Q R : Prop, (P \\/ Q -> R) -> ~ R -> ~ P /\\ ~ Q.",
            "VernacStartTheoremProof",
            "437c1ba859bda39b0f9745551847957e51a2d5aa"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma princip_min : forall P : nat -> Prop, (forall n : nat, decidable (P n)) -> forall n : nat, P n -> exists m : nat, P m /\\ (forall i : nat, P i -> i >= m).",
            "VernacStartTheoremProof",
            "001c3a40c9de31d175e767b848646f890545fa18"
        ],
        [
            "intros; cut ((exists m : nat, P m /\\ (forall i : nat, P i -> i >= m)) \\/ (forall p : nat, n >= p -> ~ P p)).",
            "VernacExtend",
            "c30a8e809c1c9f0eb3d247a7d16003b3894d5309"
        ],
        [
            "intro; elim H1; auto with core arith.",
            "VernacExtend",
            "47dfdbe844b6dc588057b782c2b19d6d91d8b4ae"
        ],
        [
            "intro; generalize (H2 n (le_n n)); intros; absurd (P n); auto with core arith.",
            "VernacExtend",
            "7bdf48539ca8a3bf499850751b96f02e4c7b25aa"
        ],
        [
            "elim n.",
            "VernacExtend",
            "c68f766a88bb5402d72ee6adaca953661a5d18b2"
        ],
        [
            "elim (H 0); intros.",
            "VernacExtend",
            "ef51b42d0e19aaa060f936d8ef5c9f93404ec18a"
        ],
        [
            "left; exists 0; auto with core arith.",
            "VernacExtend",
            "c5a5e78607db17caf7fa1c85617b67b43227ff7b"
        ],
        [
            "right; unfold ge in |- *; intros; cut (p = 0).",
            "VernacExtend",
            "e0083bfb5a54ff2ad806734dfb0ca289ad52fe3c"
        ],
        [
            "intro; rewrite H3; auto with core arith.",
            "VernacExtend",
            "e54428ab72fcf2a54354e6a33f58961159677b99"
        ],
        [
            "auto with core arith.",
            "VernacExtend",
            "e7c930925d627a3f5236201e6902e1cf77543e76"
        ],
        [
            "intros; elim H1; auto with core arith.",
            "VernacExtend",
            "b841a07e3f246cb3817ed54689da12e8c19d6404"
        ],
        [
            "intro; elim (H (S n0)); intro.",
            "VernacExtend",
            "15c90ba8378734f8d26a4c8020a8fcae75d5431e"
        ],
        [
            "left; exists (S n0); split; auto with core arith.",
            "VernacExtend",
            "cbbb391bac4f3c991a263aa3308e152785c23cc3"
        ],
        [
            "cut (forall p : nat, S n0 <= p \\/ p < S n0).",
            "VernacExtend",
            "3d36c6299ad7240104b37dc237b712d0ab419645"
        ],
        [
            "intros; elim (H4 i); auto with core arith.",
            "VernacExtend",
            "1782a1c30bbcfcda593f294c476ed9c880ba5cc9"
        ],
        [
            "unfold lt in |- *; intro; generalize (le_S_n i n0 H6); intro; unfold ge in H2; elim (H2 i H7); auto with core arith.",
            "VernacExtend",
            "e9174707ca5d51bf3827ae4de60bf47dd510bc18"
        ],
        [
            "intro; apply le_or_lt.",
            "VernacExtend",
            "4470de936a89a1a09beec0eafca7d3c83a0c9fb2"
        ],
        [
            "right; intros; cut (p < S n0 \\/ p = S n0).",
            "VernacExtend",
            "f37ff80b0e153ad5788ab88d6418dbb87cfe86f9"
        ],
        [
            "intro; elim H5; intro.",
            "VernacExtend",
            "5cde477871cb892d56014500bf98afc8bed4d219"
        ],
        [
            "generalize (lt_n_Sm_le p n0 H6).",
            "VernacExtend",
            "82d4f12bc5c429f1e5cb3347f0caef6ee4ea6c08"
        ],
        [
            "intro; unfold ge in H2; generalize (H2 p H7); auto with core arith.",
            "VernacExtend",
            "bd47ec371e1fa39c21e6b73355615e9cbd7764d6"
        ],
        [
            "rewrite H6; auto with core arith.",
            "VernacExtend",
            "48ddba556e22948b2c09d262bfcb22925e7fe00b"
        ],
        [
            "apply (le_lt_or_eq p (S n0) H4).",
            "VernacExtend",
            "11ed9063937b1f205cbea57a92ec9c5669b9df43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inser_trans : forall n m p q : nat, n <= m /\\ m < p -> {n <= m /\\ m < q} + {q <= m /\\ m < p}.",
            "VernacStartTheoremProof",
            "421a987d883a20680245ec71949435c6aeccb673"
        ],
        [
            "intros; cut ({q <= m} + {m < q}).",
            "VernacExtend",
            "878aa49c532b9562e820ff27e5c59d025b193899"
        ],
        [
            "intro; elim H; intros.",
            "VernacExtend",
            "8e6c6ac6b0f63dd380a9c84097270ac9c580fdaa"
        ],
        [
            "elim H0; intro.",
            "VernacExtend",
            "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
        ],
        [
            "right; auto with core arith.",
            "VernacExtend",
            "2069e9c8f863eda71a8182f6381c209ed85f815d"
        ],
        [
            "left; auto with core arith.",
            "VernacExtend",
            "fd8e0735c97220fc6f04965380752e389070e162"
        ],
        [
            "apply (le_lt_dec q m).",
            "VernacExtend",
            "2336d543464a87be00b0b1a5d71add4cdf0f5e94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inser_trans_lt : forall n m p q : nat, n < m /\\ m < p -> {n < m /\\ m < q} + {q <= m /\\ m < p}.",
            "VernacStartTheoremProof",
            "f97b8cbc3f23eecb65eb02042e3b8eeb7bf95f83"
        ],
        [
            "intros; cut ({q <= m} + {m < q}).",
            "VernacExtend",
            "878aa49c532b9562e820ff27e5c59d025b193899"
        ],
        [
            "intro; elim H; intros.",
            "VernacExtend",
            "8e6c6ac6b0f63dd380a9c84097270ac9c580fdaa"
        ],
        [
            "elim H0; intro.",
            "VernacExtend",
            "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
        ],
        [
            "right; auto with core arith.",
            "VernacExtend",
            "2069e9c8f863eda71a8182f6381c209ed85f815d"
        ],
        [
            "left; auto with core arith.",
            "VernacExtend",
            "fd8e0735c97220fc6f04965380752e389070e162"
        ],
        [
            "apply (le_lt_dec q m).",
            "VernacExtend",
            "2336d543464a87be00b0b1a5d71add4cdf0f5e94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inser2_trans : forall n m p q t : nat, n <= m /\\ m < t -> {n <= m /\\ m < q} + {q <= m /\\ m < p} + {p <= m /\\ m < t}.",
            "VernacStartTheoremProof",
            "7aeba5ea1f20682924a5c5d209346c68784240af"
        ],
        [
            "intros; cut ({n <= m /\\ m < p} + {p <= m /\\ m < t}).",
            "VernacExtend",
            "22f07172654fbdb27adf5763a031885acd37108b"
        ],
        [
            "intro; elim H0; intro y.",
            "VernacExtend",
            "6c8c725d15c716aa45ca8ea8672cc59fbb8d541b"
        ],
        [
            "left; apply (inser_trans n m p q y).",
            "VernacExtend",
            "4ee73f281b89d750caa4b0edcd6fea0d491c2697"
        ],
        [
            "right; auto with core arith.",
            "VernacExtend",
            "2069e9c8f863eda71a8182f6381c209ed85f815d"
        ],
        [
            "apply (inser_trans n m t p H).",
            "VernacExtend",
            "aee9055d7a37d0b2f20d74374c227a3468272f12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inser2_trans_lt : forall n m p q t : nat, n < m /\\ m < t -> {n < m /\\ m < q} + {q <= m /\\ m < p} + {p <= m /\\ m < t}.",
            "VernacStartTheoremProof",
            "fec514ad29c483bc08d1dfe70380bb157cf33a99"
        ],
        [
            "intros; cut ({n < m /\\ m < p} + {p <= m /\\ m < t}).",
            "VernacExtend",
            "333a9b792f6cc8332b0f17f9c54683c3194e4929"
        ],
        [
            "intro; elim H0; intro y.",
            "VernacExtend",
            "6c8c725d15c716aa45ca8ea8672cc59fbb8d541b"
        ],
        [
            "left; apply (inser_trans_lt n m p q y).",
            "VernacExtend",
            "23b8ab461d5fdab070a6640a4c6349786891573c"
        ],
        [
            "right; auto with core arith.",
            "VernacExtend",
            "2069e9c8f863eda71a8182f6381c209ed85f815d"
        ],
        [
            "apply (inser_trans_lt n m t p H).",
            "VernacExtend",
            "cedd8cee9392d059be6c2c90a0b25d7d1ddf8d6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_le : forall n m : nat, n = m -> n <= m.",
            "VernacStartTheoremProof",
            "d47cb59a46a34089e7d66f8c4e4611c2c7ba150f"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma en_plus : forall a : nat, a + 0 = a.",
            "VernacStartTheoremProof",
            "15b62ec0cc1c15bde036be76eade1e5f71cb0c56"
        ],
        [
            "intro; omega.",
            "VernacExtend",
            "c0f32930d7759f0fba719f5bfaefb0810e722328"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_plus_minus : forall n m p : nat, m < n -> n < m + p -> n - m < p.",
            "VernacStartTheoremProof",
            "ffa867ad53d610396f6d73eec611342297f90ee6"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_plus_min : forall n m p : nat, n <= m + p -> n - m <= p.",
            "VernacStartTheoremProof",
            "9ad27cf03fbf5fa76f20b5141f1e264eb2a01868"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_n_minus_plus : forall n m p : nat, n < m - p -> n + p < m.",
            "VernacStartTheoremProof",
            "4d30c9103566508e7cd43d138ab2cbc35e8c7d03"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_plus : forall n m : nat, 0 < m -> n < n + m.",
            "VernacStartTheoremProof",
            "c62a8da38c244f5c3f9702a7ade463c042c2ba96"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus1 : forall n m : nat, n < m -> n - m = 0.",
            "VernacStartTheoremProof",
            "3a3555b30ebaad5bfc7ac03850b9dc7d4d8f364c"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus2 : forall n m : nat, n < m -> 0 < m - n.",
            "VernacStartTheoremProof",
            "a0f581be327de6c3efc702864c86f7eafa886aeb"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus_not : forall n m : nat, n < m -> m - n <> 0.",
            "VernacStartTheoremProof",
            "b12051c9e5e5fffa90cf1804b94a3986dc81a458"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_O_plus : forall n m : nat, 0 < n -> 0 < n + m.",
            "VernacStartTheoremProof",
            "03c9760e1268a3f8c9826fbff251ad58d90cc46d"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_O_plus_eq : forall n m : nat, 0 < n -> n + m <> 0.",
            "VernacStartTheoremProof",
            "e66d8a00cd8337b442c59ffbcae20ac0932a672b"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus_p : forall n m p : nat, n < m -> n - p < m.",
            "VernacStartTheoremProof",
            "ca55583a2e7b5ce5efb577b0e6690a8fa880db54"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra_lt_minus_p : forall n m p : nat, n < m - p -> n < m.",
            "VernacStartTheoremProof",
            "ea8ece6b49892f8e36a0f1c399587b5b4f88b4e4"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_not_eq : forall n m : nat, n < m -> n <> m.",
            "VernacStartTheoremProof",
            "88826ecf408369b86fad57f68f6b326632f3d4ba"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_minus_plus : forall n m p : nat, n - m <= p -> n <= p + m.",
            "VernacStartTheoremProof",
            "ee5640ce222aae0d6722bdb684473222bec6e053"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_minus_plus : forall n m p : nat, n - m < p -> n < p + m.",
            "VernacStartTheoremProof",
            "bf78f255b1ccd4c0515ddd44846238abec1e6371"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_gt_le : forall n m : nat, ~ n > m -> n <= m.",
            "VernacStartTheoremProof",
            "d9b9f446dab80aba4ed050843ca1ecb0ecd74518"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_lt : forall n m p q : nat, n < m -> m - 1 + p < q -> n + p < q.",
            "VernacStartTheoremProof",
            "b4a76a8bd397e02c48600cf84091b39fdfd02e71"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_reg_minus : forall n m p : nat, n < m -> p <= n -> n - p < m - p.",
            "VernacStartTheoremProof",
            "f3384cf2a359492e6c43fbeb1f5a0fb011b9a362"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma simpl_minus_plus : forall a b c : nat, b <= a -> a <= c -> a - b + (c - a) = c - b.",
            "VernacStartTheoremProof",
            "654acc49cfb1f4a568760f84612f07a217bc07f6"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_0_le : forall a : nat, 0 < a -> 1 <= a.",
            "VernacStartTheoremProof",
            "af25787555f9618ef4c028d6e5a3f8dc25cfbff2"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma arith_2_0 : forall n : nat, n >= 2 -> 0 < n.",
            "VernacStartTheoremProof",
            "a8b47a13c5b5c2679ecd625170253061516f582d"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_trans : forall n m p : nat, n >= p -> p >= m -> n >= m.",
            "VernacStartTheoremProof",
            "eb5f5f4e1b1310e568744df84a645e2409f6740c"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_inter31b : forall l n x m : nat, l < n -> n <= x -> x < m -> x - n + l < m.",
            "VernacStartTheoremProof",
            "1105496b50be994b76f6e2ae30815f290928b205"
        ],
        [
            "intros; omega.",
            "VernacExtend",
            "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "not_symt_et",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_not_exist_pt",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; generalize (not_ex_all_not nat (fun n : nat => P n /\\ Q n /\\ R n /\\ S n) H); intro; generalize (not_symt_et (P k) (Q k) (R k) (S k) (H2 k)); intro; generalize (not_and_or (P k /\\ Q k) (R k /\\ S k) H3); intro; generalize (or_to_imply (P k /\\ Q k) (~ (R k /\\ S k)) H4); intro; cut (P k /\\ Q k); auto with core arith.",
                        "VernacExtend",
                        "cefc182fcd2ba104b39db9eed5caaff4a2d933bd"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H5 H6); intro; apply (not_and_or (R k) (S k) H7).",
                        "VernacExtend",
                        "870e8fefc39882671af67d973224970f65e8636e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraposee_ou",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "princip_min",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; cut ((exists m : nat, P m /\\ (forall i : nat, P i -> i >= m)) \\/ (forall p : nat, n >= p -> ~ P p)).",
                        "VernacExtend",
                        "c30a8e809c1c9f0eb3d247a7d16003b3894d5309"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; auto with core arith.",
                        "VernacExtend",
                        "47dfdbe844b6dc588057b782c2b19d6d91d8b4ae"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H2 n (le_n n)); intros; absurd (P n); auto with core arith.",
                        "VernacExtend",
                        "7bdf48539ca8a3bf499850751b96f02e4c7b25aa"
                    ]
                },
                {
                    "command": [
                        "elim n.",
                        "VernacExtend",
                        "c68f766a88bb5402d72ee6adaca953661a5d18b2"
                    ]
                },
                {
                    "command": [
                        "elim (H 0); intros.",
                        "VernacExtend",
                        "ef51b42d0e19aaa060f936d8ef5c9f93404ec18a"
                    ]
                },
                {
                    "command": [
                        "left; exists 0; auto with core arith.",
                        "VernacExtend",
                        "c5a5e78607db17caf7fa1c85617b67b43227ff7b"
                    ]
                },
                {
                    "command": [
                        "right; unfold ge in |- *; intros; cut (p = 0).",
                        "VernacExtend",
                        "e0083bfb5a54ff2ad806734dfb0ca289ad52fe3c"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H3; auto with core arith.",
                        "VernacExtend",
                        "e54428ab72fcf2a54354e6a33f58961159677b99"
                    ]
                },
                {
                    "command": [
                        "auto with core arith.",
                        "VernacExtend",
                        "e7c930925d627a3f5236201e6902e1cf77543e76"
                    ]
                },
                {
                    "command": [
                        "intros; elim H1; auto with core arith.",
                        "VernacExtend",
                        "b841a07e3f246cb3817ed54689da12e8c19d6404"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H (S n0)); intro.",
                        "VernacExtend",
                        "15c90ba8378734f8d26a4c8020a8fcae75d5431e"
                    ]
                },
                {
                    "command": [
                        "left; exists (S n0); split; auto with core arith.",
                        "VernacExtend",
                        "cbbb391bac4f3c991a263aa3308e152785c23cc3"
                    ]
                },
                {
                    "command": [
                        "cut (forall p : nat, S n0 <= p \\/ p < S n0).",
                        "VernacExtend",
                        "3d36c6299ad7240104b37dc237b712d0ab419645"
                    ]
                },
                {
                    "command": [
                        "intros; elim (H4 i); auto with core arith.",
                        "VernacExtend",
                        "1782a1c30bbcfcda593f294c476ed9c880ba5cc9"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *; intro; generalize (le_S_n i n0 H6); intro; unfold ge in H2; elim (H2 i H7); auto with core arith.",
                        "VernacExtend",
                        "e9174707ca5d51bf3827ae4de60bf47dd510bc18"
                    ]
                },
                {
                    "command": [
                        "intro; apply le_or_lt.",
                        "VernacExtend",
                        "4470de936a89a1a09beec0eafca7d3c83a0c9fb2"
                    ]
                },
                {
                    "command": [
                        "right; intros; cut (p < S n0 \\/ p = S n0).",
                        "VernacExtend",
                        "f37ff80b0e153ad5788ab88d6418dbb87cfe86f9"
                    ]
                },
                {
                    "command": [
                        "intro; elim H5; intro.",
                        "VernacExtend",
                        "5cde477871cb892d56014500bf98afc8bed4d219"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_n_Sm_le p n0 H6).",
                        "VernacExtend",
                        "82d4f12bc5c429f1e5cb3347f0caef6ee4ea6c08"
                    ]
                },
                {
                    "command": [
                        "intro; unfold ge in H2; generalize (H2 p H7); auto with core arith.",
                        "VernacExtend",
                        "bd47ec371e1fa39c21e6b73355615e9cbd7764d6"
                    ]
                },
                {
                    "command": [
                        "rewrite H6; auto with core arith.",
                        "VernacExtend",
                        "48ddba556e22948b2c09d262bfcb22925e7fe00b"
                    ]
                },
                {
                    "command": [
                        "apply (le_lt_or_eq p (S n0) H4).",
                        "VernacExtend",
                        "11ed9063937b1f205cbea57a92ec9c5669b9df43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inser_trans",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros; cut ({q <= m} + {m < q}).",
                        "VernacExtend",
                        "878aa49c532b9562e820ff27e5c59d025b193899"
                    ]
                },
                {
                    "command": [
                        "intro; elim H; intros.",
                        "VernacExtend",
                        "8e6c6ac6b0f63dd380a9c84097270ac9c580fdaa"
                    ]
                },
                {
                    "command": [
                        "elim H0; intro.",
                        "VernacExtend",
                        "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
                    ]
                },
                {
                    "command": [
                        "right; auto with core arith.",
                        "VernacExtend",
                        "2069e9c8f863eda71a8182f6381c209ed85f815d"
                    ]
                },
                {
                    "command": [
                        "left; auto with core arith.",
                        "VernacExtend",
                        "fd8e0735c97220fc6f04965380752e389070e162"
                    ]
                },
                {
                    "command": [
                        "apply (le_lt_dec q m).",
                        "VernacExtend",
                        "2336d543464a87be00b0b1a5d71add4cdf0f5e94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inser_trans_lt",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros; cut ({q <= m} + {m < q}).",
                        "VernacExtend",
                        "878aa49c532b9562e820ff27e5c59d025b193899"
                    ]
                },
                {
                    "command": [
                        "intro; elim H; intros.",
                        "VernacExtend",
                        "8e6c6ac6b0f63dd380a9c84097270ac9c580fdaa"
                    ]
                },
                {
                    "command": [
                        "elim H0; intro.",
                        "VernacExtend",
                        "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
                    ]
                },
                {
                    "command": [
                        "right; auto with core arith.",
                        "VernacExtend",
                        "2069e9c8f863eda71a8182f6381c209ed85f815d"
                    ]
                },
                {
                    "command": [
                        "left; auto with core arith.",
                        "VernacExtend",
                        "fd8e0735c97220fc6f04965380752e389070e162"
                    ]
                },
                {
                    "command": [
                        "apply (le_lt_dec q m).",
                        "VernacExtend",
                        "2336d543464a87be00b0b1a5d71add4cdf0f5e94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inser2_trans",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros; cut ({n <= m /\\ m < p} + {p <= m /\\ m < t}).",
                        "VernacExtend",
                        "22f07172654fbdb27adf5763a031885acd37108b"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intro y.",
                        "VernacExtend",
                        "6c8c725d15c716aa45ca8ea8672cc59fbb8d541b"
                    ]
                },
                {
                    "command": [
                        "left; apply (inser_trans n m p q y).",
                        "VernacExtend",
                        "4ee73f281b89d750caa4b0edcd6fea0d491c2697"
                    ]
                },
                {
                    "command": [
                        "right; auto with core arith.",
                        "VernacExtend",
                        "2069e9c8f863eda71a8182f6381c209ed85f815d"
                    ]
                },
                {
                    "command": [
                        "apply (inser_trans n m t p H).",
                        "VernacExtend",
                        "aee9055d7a37d0b2f20d74374c227a3468272f12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inser2_trans_lt",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros; cut ({n < m /\\ m < p} + {p <= m /\\ m < t}).",
                        "VernacExtend",
                        "333a9b792f6cc8332b0f17f9c54683c3194e4929"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intro y.",
                        "VernacExtend",
                        "6c8c725d15c716aa45ca8ea8672cc59fbb8d541b"
                    ]
                },
                {
                    "command": [
                        "left; apply (inser_trans_lt n m p q y).",
                        "VernacExtend",
                        "23b8ab461d5fdab070a6640a4c6349786891573c"
                    ]
                },
                {
                    "command": [
                        "right; auto with core arith.",
                        "VernacExtend",
                        "2069e9c8f863eda71a8182f6381c209ed85f815d"
                    ]
                },
                {
                    "command": [
                        "apply (inser_trans_lt n m t p H).",
                        "VernacExtend",
                        "cedd8cee9392d059be6c2c90a0b25d7d1ddf8d6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_le",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "en_plus",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intro; omega.",
                        "VernacExtend",
                        "c0f32930d7759f0fba719f5bfaefb0810e722328"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_plus_minus",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_plus_min",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_n_minus_plus",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_plus",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus1",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus2",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus_not",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_O_plus",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_O_plus_eq",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus_p",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra_lt_minus_p",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_not_eq",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_minus_plus",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus_plus",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_gt_le",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_lt",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_reg_minus",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simpl_minus_plus",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_0_le",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "arith_2_0",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_trans",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_inter31b",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros; omega.",
                        "VernacExtend",
                        "af1ac7136db4b1640d87fb7f4ca1a6f91608cf4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}