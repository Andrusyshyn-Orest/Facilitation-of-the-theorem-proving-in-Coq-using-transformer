{
    "filename": "preuve2.v",
    "coq_project": "three-gap",
    "vernac_cmds": [
        [
            "Require Export preuve1.",
            "VernacRequire",
            "8b5511f2d27b494ab44e01e5fbc36996438b0cb3"
        ],
        [
            "Section Three.",
            "VernacBeginSection",
            "2cdf4ff230a50d68fc631056fa100452de6e1763"
        ],
        [
            "Hypothesis alpha_irr : forall n p : Z, (alpha * IZR p)%R <> IZR n.",
            "VernacAssumption",
            "d1463fa3aed43a44449cecc557f14d23d27445ae"
        ],
        [
            "Hypothesis prop_alpha : (0 < alpha)%R /\\ (alpha < 1)%R.",
            "VernacAssumption",
            "c1ff7b84d703766b6ad195f204c74533055ea468"
        ],
        [
            "Hypothesis prop_N : forall N : nat, N >= 2.",
            "VernacAssumption",
            "3b14420983b72ff2e11078790793f33189cdc7e5"
        ],
        [
            "Lemma three_gap1 : forall N n : nat, 0 < n -> n < N - first N -> after N n = n + first N.",
            "VernacStartTheoremProof",
            "b984c50a3eea8f88d13be67e7d484842f4a25b71"
        ],
        [
            "intros; generalize (inter31a alpha_irr prop_alpha prop_N N n); intros; generalize (eq_after_M_N1 alpha_irr prop_alpha prop_N N n H H0); intro; rewrite <- H2; cut (n < last (M N)).",
            "VernacExtend",
            "4b766191c0d41f7b05919258e750a65669fb7abb"
        ],
        [
            "intro; rewrite (first_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); apply (H1 H H3).",
            "VernacExtend",
            "dab3d3e5d9392d71e6b36ce095f76bba838eb486"
        ],
        [
            "generalize (le_N_M alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); intro; generalize (le_lt_or_eq N (first N + last N) H3); intro; elim H4; intro.",
            "VernacExtend",
            "a6364cc086d262fad88b63857f24e244dff5bb17"
        ],
        [
            "cut (N - first N < last (M N)).",
            "VernacExtend",
            "a37a039b4887e877db2a011df71645b916092ebe"
        ],
        [
            "intro; apply (lt_trans n (N - first N) (last (M N)) H0 H6).",
            "VernacExtend",
            "60b06b3277b106656f00c2945369a88bec68d4c8"
        ],
        [
            "rewrite <- (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); apply (lt_plus_minus N (first N) (last N) (first_N N (prop_N N)) H5).",
            "VernacExtend",
            "98ad4e68617138c034ef8a18eb2c6c4d4ff92233"
        ],
        [
            "rewrite <- (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); cut (M N = first N + last N).",
            "VernacExtend",
            "cb27c4e63e1ae72fbc9f1fdcc7ec808e3a78d51f"
        ],
        [
            "intro; rewrite <- H6 in H5; rewrite H5 in H0; rewrite <- (first_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))) in H0; rewrite (plus_minus (M N) (first N) (last N) H6); auto with arith real.",
            "VernacExtend",
            "cf04ce3046338e9a7524be3f37c220c0320fa2e4"
        ],
        [
            "auto with arith real.",
            "VernacExtend",
            "9fd854feec53284ad4f693eac9f5f651fc003948"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma three_gap2 : forall N n : nat, N - first N <= n -> n < last N -> after N n = n + first N - last N.",
            "VernacStartTheoremProof",
            "b4d2a5c83b86a8693048a93f33ae774b8f563268"
        ],
        [
            "intros; apply sym_equal; apply (tech_after alpha_irr N n (n + first N - last N)).",
            "VernacExtend",
            "e4a3d4afedcc85a76737d2300237d5f0cf8395f6"
        ],
        [
            "generalize (first_N N (prop_N N)); intro; generalize (lt_minus2 (first N) N H1); intro; apply (lt_le_trans 0 (N - first N) n H2 H).",
            "VernacExtend",
            "4189aaeb44169f1ddf4f494eee2d08c1bf468b9e"
        ],
        [
            "generalize (last_N N (prop_N N)); intro; apply (lt_trans n (last N) N H0 H1).",
            "VernacExtend",
            "bb27df4b5553b6fca91bc2880fe9ab36cc9ac4dd"
        ],
        [
            "auto with arith real.",
            "VernacExtend",
            "9fd854feec53284ad4f693eac9f5f651fc003948"
        ],
        [
            "generalize (plus_lt_compat_r n (last N) (first N) H0); intro; generalize (lt_reg_minus (n + first N) (last N + first N) (last N) H1); intro; rewrite (minus_plus (last N) (first N)) in H2; cut (last N <= n + first N).",
            "VernacExtend",
            "9ed254850204e5cf8ff3fffe7c68cd0b63c72ef0"
        ],
        [
            "intro; apply (lt_trans (n + first N - last N) (first N) N (H2 H3) (first_N N (prop_N N))).",
            "VernacExtend",
            "21389ea45fe514f089f8e3035cd8e21c3da1de2f"
        ],
        [
            "clear H1 H2; generalize (le_minus_plus N (first N) n H); intro; apply (le_trans (last N) N (n + first N) (last_N01 N) H1).",
            "VernacExtend",
            "d4229bd17f292cfb93a71f828d84e9e01981cf0e"
        ],
        [
            "apply (tech1 alpha_irr prop_alpha prop_N N n H H0).",
            "VernacExtend",
            "760ad8f75034c55b5f06d0854d17c4ed8e7160af"
        ],
        [
            "generalize (tech_suc_M alpha_irr prop_alpha prop_N N n H H0); auto with arith real.",
            "VernacExtend",
            "31302cb4c0b952869c996aba3e79f19fefcb0ef3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma three_gap3 : forall N n : nat, last N <= n -> n < N -> after N n = n - last N.",
            "VernacStartTheoremProof",
            "8c85dda1ebda3a630396f7ccbf5bd45692508590"
        ],
        [
            "intros; generalize (inter31b alpha_irr prop_alpha prop_N N n); intros; generalize (eq_after_M_N2 alpha_irr prop_alpha prop_N N n H H0); intro; rewrite <- H2; cut (n < M N).",
            "VernacExtend",
            "0edd1c1c11a20cd948294b12b462df1d9f309822"
        ],
        [
            "intro; rewrite (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); rewrite (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))) in H; apply (H1 H H3).",
            "VernacExtend",
            "6592c50ba5f6706a6f597bc9d68b4df352f9d4fa"
        ],
        [
            "generalize (le_N_M alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); intro; unfold M in |- *; apply (lt_le_trans n N (first N + last N) H0 H3).",
            "VernacExtend",
            "b1280c03220e24a8946cfd3d7dde8db34110cae8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Three.",
            "VernacEndSegment",
            "0337c0c1e2111b95b526da16a03ea51fed3713c2"
        ]
    ],
    "proofs": [
        {
            "name": "three_gap1",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros; generalize (inter31a alpha_irr prop_alpha prop_N N n); intros; generalize (eq_after_M_N1 alpha_irr prop_alpha prop_N N n H H0); intro; rewrite <- H2; cut (n < last (M N)).",
                        "VernacExtend",
                        "4b766191c0d41f7b05919258e750a65669fb7abb"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite (first_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); apply (H1 H H3).",
                        "VernacExtend",
                        "dab3d3e5d9392d71e6b36ce095f76bba838eb486"
                    ]
                },
                {
                    "command": [
                        "generalize (le_N_M alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); intro; generalize (le_lt_or_eq N (first N + last N) H3); intro; elim H4; intro.",
                        "VernacExtend",
                        "a6364cc086d262fad88b63857f24e244dff5bb17"
                    ]
                },
                {
                    "command": [
                        "cut (N - first N < last (M N)).",
                        "VernacExtend",
                        "a37a039b4887e877db2a011df71645b916092ebe"
                    ]
                },
                {
                    "command": [
                        "intro; apply (lt_trans n (N - first N) (last (M N)) H0 H6).",
                        "VernacExtend",
                        "60b06b3277b106656f00c2945369a88bec68d4c8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); apply (lt_plus_minus N (first N) (last N) (first_N N (prop_N N)) H5).",
                        "VernacExtend",
                        "98ad4e68617138c034ef8a18eb2c6c4d4ff92233"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); cut (M N = first N + last N).",
                        "VernacExtend",
                        "cb27c4e63e1ae72fbc9f1fdcc7ec808e3a78d51f"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite <- H6 in H5; rewrite H5 in H0; rewrite <- (first_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))) in H0; rewrite (plus_minus (M N) (first N) (last N) H6); auto with arith real.",
                        "VernacExtend",
                        "cf04ce3046338e9a7524be3f37c220c0320fa2e4"
                    ]
                },
                {
                    "command": [
                        "auto with arith real.",
                        "VernacExtend",
                        "9fd854feec53284ad4f693eac9f5f651fc003948"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "three_gap2",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; apply sym_equal; apply (tech_after alpha_irr N n (n + first N - last N)).",
                        "VernacExtend",
                        "e4a3d4afedcc85a76737d2300237d5f0cf8395f6"
                    ]
                },
                {
                    "command": [
                        "generalize (first_N N (prop_N N)); intro; generalize (lt_minus2 (first N) N H1); intro; apply (lt_le_trans 0 (N - first N) n H2 H).",
                        "VernacExtend",
                        "4189aaeb44169f1ddf4f494eee2d08c1bf468b9e"
                    ]
                },
                {
                    "command": [
                        "generalize (last_N N (prop_N N)); intro; apply (lt_trans n (last N) N H0 H1).",
                        "VernacExtend",
                        "bb27df4b5553b6fca91bc2880fe9ab36cc9ac4dd"
                    ]
                },
                {
                    "command": [
                        "auto with arith real.",
                        "VernacExtend",
                        "9fd854feec53284ad4f693eac9f5f651fc003948"
                    ]
                },
                {
                    "command": [
                        "generalize (plus_lt_compat_r n (last N) (first N) H0); intro; generalize (lt_reg_minus (n + first N) (last N + first N) (last N) H1); intro; rewrite (minus_plus (last N) (first N)) in H2; cut (last N <= n + first N).",
                        "VernacExtend",
                        "9ed254850204e5cf8ff3fffe7c68cd0b63c72ef0"
                    ]
                },
                {
                    "command": [
                        "intro; apply (lt_trans (n + first N - last N) (first N) N (H2 H3) (first_N N (prop_N N))).",
                        "VernacExtend",
                        "21389ea45fe514f089f8e3035cd8e21c3da1de2f"
                    ]
                },
                {
                    "command": [
                        "clear H1 H2; generalize (le_minus_plus N (first N) n H); intro; apply (le_trans (last N) N (n + first N) (last_N01 N) H1).",
                        "VernacExtend",
                        "d4229bd17f292cfb93a71f828d84e9e01981cf0e"
                    ]
                },
                {
                    "command": [
                        "apply (tech1 alpha_irr prop_alpha prop_N N n H H0).",
                        "VernacExtend",
                        "760ad8f75034c55b5f06d0854d17c4ed8e7160af"
                    ]
                },
                {
                    "command": [
                        "generalize (tech_suc_M alpha_irr prop_alpha prop_N N n H H0); auto with arith real.",
                        "VernacExtend",
                        "31302cb4c0b952869c996aba3e79f19fefcb0ef3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "three_gap3",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros; generalize (inter31b alpha_irr prop_alpha prop_N N n); intros; generalize (eq_after_M_N2 alpha_irr prop_alpha prop_N N n H H0); intro; rewrite <- H2; cut (n < M N).",
                        "VernacExtend",
                        "0edd1c1c11a20cd948294b12b462df1d9f309822"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); rewrite (last_eq_M_N alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))) in H; apply (H1 H H3).",
                        "VernacExtend",
                        "6592c50ba5f6706a6f597bc9d68b4df352f9d4fa"
                    ]
                },
                {
                    "command": [
                        "generalize (le_N_M alpha_irr prop_alpha prop_N N (M N) (refl_equal (first N + last N))); intro; unfold M in |- *; apply (lt_le_trans n N (first N + last N) H0 H3).",
                        "VernacExtend",
                        "b1280c03220e24a8946cfd3d7dde8db34110cae8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}