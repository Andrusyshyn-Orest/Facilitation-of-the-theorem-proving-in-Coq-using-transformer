{
    "filename": "ILL/Code/subcode.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "Require Import List Arith Omega.",
            "VernacRequire",
            "2384442a3f0b1bbc4c470e59943da44aa7d6ec91"
        ],
        [
            "Require Import utils.",
            "VernacRequire",
            "58d40ea88438e633ae561b0e9c667c45183d9981"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section subcode.",
            "VernacBeginSection",
            "120749c8c42bf640fc824026df657df64f61eba4"
        ],
        [
            "Variable (X : Type).",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Definition code := (nat * list X)%type.",
            "VernacDefinition",
            "c987506075e0df886e04684bf376df90fa8f390f"
        ],
        [
            "Implicit Type P : code.",
            "VernacReserve",
            "42a6d4735634adfbf7ae526e546fe4e0ecb9bb1b"
        ],
        [
            "Definition code_start P := fst P.",
            "VernacDefinition",
            "a2c546a7bb60ccea229137132bd332922bf12352"
        ],
        [
            "Definition code_end P := fst P + length (snd P).",
            "VernacDefinition",
            "f2a044aa8776f183975c36b363a9052cbf040b12"
        ],
        [
            "Definition code_length P := length (snd P).",
            "VernacDefinition",
            "e6fd51dd6646ed58eb7bc61f501bdc65f9795627"
        ],
        [
            "Definition in_code i P := code_start P <= i < code_end P.",
            "VernacDefinition",
            "99e1cb1b50be4e757dad6ced81cb3b9fe4232c93"
        ],
        [
            "Definition out_code i P := i < code_start P \\/ code_end P <= i.",
            "VernacDefinition",
            "0137c6b81b053303785dd5cd7f2cc445df4d1080"
        ],
        [
            "Fact in_out_code i P : in_code i P -> out_code i P -> False.",
            "VernacStartTheoremProof",
            "9bd962678a56e640fd68f58bac3fa3023b6f0d54"
        ],
        [
            "unfold in_code, out_code; omega.",
            "VernacExtend",
            "8d8bf79204ccad0f272455bdb46437020c1cda3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subcode P Q := match P, Q with (i,li), (n,code) => exists l r, code = l ++ li ++ r /\\ i = n+length l end.",
            "VernacDefinition",
            "79dfa23831bb8110d296c6ebe6c1b00593474d16"
        ],
        [
            "Arguments code_start P /.",
            "VernacArguments",
            "fea1d50b2efe8a536828c609c62be812a3c5523a"
        ],
        [
            "Arguments code_end P /.",
            "VernacArguments",
            "196cc608dd19712aed59f5cc78e79ed27763f493"
        ],
        [
            "Arguments code_length P /.",
            "VernacArguments",
            "d630e02047df9a76b69e6d9b165f1e926288bb78"
        ],
        [
            "Arguments in_code i P /.",
            "VernacArguments",
            "ddecad8fd357eb14f3d2b240ab23b36651a67370"
        ],
        [
            "Arguments out_code i P /.",
            "VernacArguments",
            "6a2471188e330f8fbe1321f7593a661ddb45a6f7"
        ],
        [
            "Arguments subcode P Q /.",
            "VernacArguments",
            "1c40462ca08f4c8b98a179496dd482dd1162bf4a"
        ],
        [
            "Fact in_out_code_dec i P : { in_code i P } + { out_code i P }.",
            "VernacStartTheoremProof",
            "128effcf77797f41fdb9f0eadbc59887945d0f67"
        ],
        [
            "destruct P as (n,c); simpl; apply interval_dec.",
            "VernacExtend",
            "7509b5efd2552ba97dfaaf93467a567c4172a013"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Infix \"<sc\" := subcode (at level 70, no associativity).",
            "VernacInfix",
            "46e5a0ef8c6c1a6a30e85a591aada65fab9e86ae"
        ],
        [
            "Fact subcode_cons_inj i \u03c1 \u03b4 P : (i,\u03c1::nil) <sc P -> (i,\u03b4::nil) <sc P -> \u03c1 = \u03b4.",
            "VernacStartTheoremProof",
            "ec8d5240232a3892fbb0b3c343ddaa07d5e808a1"
        ],
        [
            "destruct P as (j, P).",
            "VernacExtend",
            "13986c3f5cfd6e560eb645c368d9ffac65bbfee6"
        ],
        [
            "intros (l1 & r1 & H1 & H2) (l2 & r2 & H3 & H4).",
            "VernacExtend",
            "40a0b406982b01354cb25bb217682230b7d9a70f"
        ],
        [
            "rewrite H1 in H3.",
            "VernacExtend",
            "1a5bd25c47245138a7a03e032524fd4066f525ce"
        ],
        [
            "apply list_app_inj, proj2 in H3; try omega.",
            "VernacExtend",
            "f4bf9427e2cb51292ef618c69a2d89a646de9d89"
        ],
        [
            "inversion H3; trivial.",
            "VernacExtend",
            "0cfb3b1c94712dfdc592d9d88ecc748fc941c600"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_length P Q : P <sc Q -> code_start Q <= code_start P /\\ code_end P <= code_end Q.",
            "VernacStartTheoremProof",
            "39c771e8d8c480c5f8bf60de466e6939f608dc44"
        ],
        [
            "destruct P as (iP,cP); destruct Q as (iQ,cQ); simpl.",
            "VernacExtend",
            "ac480199de89329eb2c59f695aaf5c92ddf73984"
        ],
        [
            "intros (l & r & H1 & H2).",
            "VernacExtend",
            "89034961a614514bc44c6dbdf68fe4964c945ab4"
        ],
        [
            "apply f_equal with (f := @length _) in H1.",
            "VernacExtend",
            "5b8e97ebded693497a667e067e54c46f8c4e1606"
        ],
        [
            "revert H1; rew length; split; omega.",
            "VernacExtend",
            "b603690d7ab214080b2259f5e25436978f6c9635"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_length' P Q : P <sc Q -> length (snd P) <= length (snd Q).",
            "VernacStartTheoremProof",
            "2d5a45e78918da2b047ac86ca26cd1d4cc3c503e"
        ],
        [
            "revert P Q; intros [] [] (? & ? & ? & ?); simpl; subst; rew length; omega.",
            "VernacExtend",
            "52965f634d75485f937b62b9c39bf7c154149b3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_length_le : forall P Q, P <sc Q -> fst Q <= fst P /\\ fst P + length (snd P) <= fst Q + length (snd Q).",
            "VernacStartTheoremProof",
            "151da06e3176c583284cbcf4525b77b2a2b20ec3"
        ],
        [
            "intros (iP,cP) (iQ,cQ) (l & r & ? & ?); subst; simpl; rew length; omega.",
            "VernacExtend",
            "36ec2f8aaf45c47b858c808ab3af08547a7765b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_start_in_code : forall P Q, 0 < code_length P -> P <sc Q -> in_code (code_start P) Q.",
            "VernacStartTheoremProof",
            "0bc399aaf3fa76c4d75c130ae91546fba9651fe7"
        ],
        [
            "intros (iP,cP) (iQ,cQ) H (l & r & H1 & H2); simpl in *; subst; revert H; rew length; intro; omega.",
            "VernacExtend",
            "2f85a01525536d251300bbb9dcce25c591cceeae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_refl P : P <sc P.",
            "VernacStartTheoremProof",
            "7cc5888d4888ebab803340b60dbe066fe0d34a01"
        ],
        [
            "destruct P; exists nil, nil; split; simpl.",
            "VernacExtend",
            "05bb2ad1562747540fec970bb417ed913f90394f"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_trans P Q R : P <sc Q -> Q <sc R -> P <sc R.",
            "VernacStartTheoremProof",
            "2e13a09cf6d7562a6a3a3391b89552410dccb6c8"
        ],
        [
            "revert P Q R; intros (iP,cP) (iQ,cQ) (iR,cR).",
            "VernacExtend",
            "d3ccd3fec145eb463f2b98910c6d4e2d3372ca3e"
        ],
        [
            "intros (ll1 & rr1 & H1 & H2) (ll2 & rr2 & H3 & H4); subst.",
            "VernacExtend",
            "aa9e2e78f467aac2da8ca785fa0af28cfa5e4f73"
        ],
        [
            "exists (ll2++ll1), (rr1++rr2); split.",
            "VernacExtend",
            "61107f6e4ca4c6c4ae7fb640ff1d337d7a2f0138"
        ],
        [
            "solve list eq.",
            "VernacExtend",
            "269e374d55b1b0f93baede385e5d71998ec7e999"
        ],
        [
            "rew length; omega.",
            "VernacExtend",
            "4c1755317b15e1d79d75400aa81165e719c47339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_in_code P Q i : P <sc Q -> in_code i P -> in_code i Q.",
            "VernacStartTheoremProof",
            "90b14e58b40cc148495bf558d63f6d9333715454"
        ],
        [
            "revert P Q; intros (iP,cP) (iQ,cQ) (l & r & H1 & H2); simpl.",
            "VernacExtend",
            "b1f4dcf0ecff1f52f4eae5f4bed415a2ae229c7e"
        ],
        [
            "subst; rew length; omega.",
            "VernacExtend",
            "e80cb4ae4dbb467145feaddaf26f665128e5dbbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_out_code P Q i : P <sc Q -> out_code i Q -> out_code i P.",
            "VernacStartTheoremProof",
            "a7411bab5851f2da757ab626d0ebf0d5149cbaa7"
        ],
        [
            "revert P Q; intros (iP,cP) (iQ,cQ) (l & r & H1 & H2); simpl.",
            "VernacExtend",
            "b1f4dcf0ecff1f52f4eae5f4bed415a2ae229c7e"
        ],
        [
            "subst; rew length; omega.",
            "VernacExtend",
            "e80cb4ae4dbb467145feaddaf26f665128e5dbbb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_left n m l r : n = m -> (n,l) <sc (m,l++r).",
            "VernacStartTheoremProof",
            "d742dd9f081d9278debab6b35ee68d9b35c40b28"
        ],
        [
            "exists nil, r; simpl; split; auto; omega.",
            "VernacExtend",
            "a90372ea06e81d01d80008588aefa5d27afe5c67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_right n m l r : n = m+length l -> (n,r) <sc (m,l++r).",
            "VernacStartTheoremProof",
            "21f77606a6e8548415b6e905ce47436b4e85fd2a"
        ],
        [
            "exists l, nil; split; auto.",
            "VernacExtend",
            "34f63babca10b87d34c770ed3a02bf92edb1a930"
        ],
        [
            "rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_app_end P n l r : P <sc (n,l) -> P <sc (n,l++r).",
            "VernacStartTheoremProof",
            "95b0390a722261d09bb48f2d53cdf12bee9c8398"
        ],
        [
            "intros; apply subcode_trans with (1 := H).",
            "VernacExtend",
            "08784d81d655dd7560c0d0744a3af9888fa39120"
        ],
        [
            "exists nil, r; auto.",
            "VernacExtend",
            "0403f109c139eec8d8748370d2bba99139802ec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_cons P n x l : P <sc (1+n,l) -> P <sc (n,x::l).",
            "VernacStartTheoremProof",
            "aa8c35dff2e80df064da3742dd3a58b791a6aa70"
        ],
        [
            "intros; apply subcode_trans with (1 := H).",
            "VernacExtend",
            "08784d81d655dd7560c0d0744a3af9888fa39120"
        ],
        [
            "exists (x::nil), nil; split.",
            "VernacExtend",
            "c44c303a69458e6fbe9625bab7c3bad00c459756"
        ],
        [
            "solve list eq.",
            "VernacExtend",
            "269e374d55b1b0f93baede385e5d71998ec7e999"
        ],
        [
            "rew length; omega.",
            "VernacExtend",
            "4c1755317b15e1d79d75400aa81165e719c47339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact in_code_subcode i P : in_code i P -> exists a, (i,a::nil) <sc P.",
            "VernacStartTheoremProof",
            "7040c9661f3821a476c534d06cc029eb6c2e8dda"
        ],
        [
            "destruct P as (iP,cP); simpl; intros H.",
            "VernacExtend",
            "ecc943cf38588926d2be5bdf3a6e7b71c3e30efd"
        ],
        [
            "destruct (list_split_length cP) with (k := i-iP) as (l & [ | a r ] & H1 & H2).",
            "VernacExtend",
            "61cb6fcf7daae83a0788681f3dff8a38164d0b24"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "exfalso; subst; solve list eq in H; omega.",
            "VernacExtend",
            "2cc9dcdfdbeb9cf2ffd3161f51385566f8f5736a"
        ],
        [
            "exists a, l, r; split; auto; omega.",
            "VernacExtend",
            "c49e9472c96493e4f844cf5863082f04996737a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_app_invert_right j Q1 Q2 i I : (i,I::nil) <sc (j,Q1++Q2) -> (i,I::nil) <sc (j,Q1) \\/ (i,I::nil) <sc (length Q1+j,Q2).",
            "VernacStartTheoremProof",
            "a678c159e34f057f0ad7d32e0253f91762189b7b"
        ],
        [
            "intros (l & r & H1 & H2); simpl in *.",
            "VernacExtend",
            "ca50427e5f1ab078976c474ddefc70bf796a801c"
        ],
        [
            "apply list_app_cons_eq_inv in H1.",
            "VernacExtend",
            "dc5b3bdd8ee21bb3da854cca79dbcc2498462102"
        ],
        [
            "destruct H1 as [ (m & G1 & G2) | (m & G1 & G2) ]; subst.",
            "VernacExtend",
            "613d09bb166cc5779f052460afecd4ba39c7207f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; exists m, r; rew length; split; auto; omega.",
            "VernacExtend",
            "567110e66d96b6ebe861e961cd08e5ab7b02f509"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; exists l, m; rew length; split; auto; omega.",
            "VernacExtend",
            "66dde42aca798164782c6b7d820e2c0745b6a17c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_cons_invert_right j J Q i I : (i,I::nil) <sc (j,J::Q) -> i = j /\\ I = J \\/ (i,I::nil) <sc (S j,Q).",
            "VernacStartTheoremProof",
            "6d26a1647151344acdfa3c810510e1dfd989889e"
        ],
        [
            "intros ([ | K l ] & r & H1 & H2); simpl in *.",
            "VernacExtend",
            "21126944a615b7ca0e4ad5d71f5aebf0d2fd4243"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H1; left; split; auto; omega.",
            "VernacExtend",
            "188bed3cc84f8ed443b5293c859e2f2a08dfdd4f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; inversion H1; exists l, r; split; auto; omega.",
            "VernacExtend",
            "16448d964916e9e31f60612b309ed2098d53a8b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable Q : code.",
            "VernacAssumption",
            "562c47ab57b2340cdde1216c08474e09bab79479"
        ],
        [
            "Fact subcode_app_inv i j a l r : j = i+length l -> (i,l++a++r) <sc Q -> (j,a) <sc Q.",
            "VernacStartTheoremProof",
            "a33145858010fd4703c0416d648dd60606888c99"
        ],
        [
            "intro; apply subcode_trans.",
            "VernacExtend",
            "d77d5844f756f8a1c0c3af438d2aeebce6daf9db"
        ],
        [
            "exists l, r; auto.",
            "VernacExtend",
            "9487688b59b4e1c2a1f86c05d95ce00e03d88bdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_cons_inv i j a r : j = i -> (i,a++r) <sc Q -> (j,a) <sc Q.",
            "VernacStartTheoremProof",
            "61eb319ae851df836c1625ed97ece4a7251fff8d"
        ],
        [
            "intro; apply subcode_app_inv with (l := nil); simpl; omega.",
            "VernacExtend",
            "9cf56cb02eeb651db9ad8f90048353105d870220"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_snoc_inv i j a l : j = i+length l -> (i,l++a) <sc Q -> (j,a) <sc Q.",
            "VernacStartTheoremProof",
            "ca7b54f4207ac63c5a70d9ad2c684beb8036d595"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply subcode_trans.",
            "VernacExtend",
            "1fac303176044e429dc0b3a95b0f104387555cf5"
        ],
        [
            "exists l, nil; split; auto.",
            "VernacExtend",
            "34f63babca10b87d34c770ed3a02bf92edb1a930"
        ],
        [
            "solve list eq.",
            "VernacExtend",
            "269e374d55b1b0f93baede385e5d71998ec7e999"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact subcode_cons_invert_left i I l : (i,I::l) <sc Q -> (i,I::nil) <sc Q /\\ (S i,l) <sc Q.",
            "VernacStartTheoremProof",
            "ee252d6000cddba330b8b0d69c5051d94bf07b23"
        ],
        [
            "intros H1; split.",
            "VernacExtend",
            "f1ad87cf93ff82e8a7543e129c9c671fe7eedd7a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H1; apply subcode_cons_inv with (a := _::nil); auto.",
            "VernacExtend",
            "e7db3ef9b76d7ced1ceece5e6364edb1277ff312"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "revert H1; apply subcode_snoc_inv with (l := _::nil); simpl; omega.",
            "VernacExtend",
            "b5b10037ac2b8fcc0913617b285dacfcca89ce8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End subcode.",
            "VernacEndSegment",
            "95dc916d2ab157c2ec841f4baa94e82ac528267d"
        ],
        [
            "Arguments code_start {X} P /.",
            "VernacArguments",
            "52454538162a523dda5bfb321119c7027331f082"
        ],
        [
            "Arguments code_end {X} P /.",
            "VernacArguments",
            "63f189ee88e06b94fea57de9fa672c08d83d5d68"
        ],
        [
            "Arguments in_code {X} i P /.",
            "VernacArguments",
            "d265bb47338d80732e54fc2e9ce091adbf5ef3e4"
        ],
        [
            "Arguments out_code {X} i P /.",
            "VernacArguments",
            "3312546ad120e04c3db5e1ff91bdb708528a3eb2"
        ],
        [
            "Arguments subcode {X} P Q /.",
            "VernacArguments",
            "b81e50f1611b7ff2f12c158b9162b1a10a345f99"
        ],
        [
            "Infix \"<sc\" := subcode (at level 70, no associativity).",
            "VernacInfix",
            "46e5a0ef8c6c1a6a30e85a591aada65fab9e86ae"
        ],
        [
            "Ltac subcode_tac := unfold fst, snd; try match goal with | H: subcode (_,?l) ?c |- subcode (_,?i) ?c => (match i with ?j::nil => match type of H with context[j] => apply subcode_trans with (2 := H) end end || match type of H with context[i] => apply subcode_trans with (2 := H) end) end; match goal with | |- subcode (_,?i) (_,?c) => focus_goal i c end; match goal with | |- subcode (_,?i::nil) (_,?l++?i::?r) => exists l, r | |- subcode _ (_,?l++_++?r) => exists l, r | |- subcode (_,?i) (_,?l++?i) => exists l, nil end; split; auto; rew length; try omega.",
            "VernacExtend",
            "97374b71107bbe66aa76e239e37da48bfcf7c741"
        ],
        [
            "Hint Extern 4 (subcode _ _) => subcode_tac.",
            "VernacHints",
            "51d5fc91f89d186e7f7a9f334f3314e1d3d40a07"
        ]
    ],
    "proofs": [
        {
            "name": "in_out_code",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold in_code, out_code; omega.",
                        "VernacExtend",
                        "8d8bf79204ccad0f272455bdb46437020c1cda3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_out_code_dec",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "destruct P as (n,c); simpl; apply interval_dec.",
                        "VernacExtend",
                        "7509b5efd2552ba97dfaaf93467a567c4172a013"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_cons_inj",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "destruct P as (j, P).",
                        "VernacExtend",
                        "13986c3f5cfd6e560eb645c368d9ffac65bbfee6"
                    ]
                },
                {
                    "command": [
                        "intros (l1 & r1 & H1 & H2) (l2 & r2 & H3 & H4).",
                        "VernacExtend",
                        "40a0b406982b01354cb25bb217682230b7d9a70f"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H3.",
                        "VernacExtend",
                        "1a5bd25c47245138a7a03e032524fd4066f525ce"
                    ]
                },
                {
                    "command": [
                        "apply list_app_inj, proj2 in H3; try omega.",
                        "VernacExtend",
                        "f4bf9427e2cb51292ef618c69a2d89a646de9d89"
                    ]
                },
                {
                    "command": [
                        "inversion H3; trivial.",
                        "VernacExtend",
                        "0cfb3b1c94712dfdc592d9d88ecc748fc941c600"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_length",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "destruct P as (iP,cP); destruct Q as (iQ,cQ); simpl.",
                        "VernacExtend",
                        "ac480199de89329eb2c59f695aaf5c92ddf73984"
                    ]
                },
                {
                    "command": [
                        "intros (l & r & H1 & H2).",
                        "VernacExtend",
                        "89034961a614514bc44c6dbdf68fe4964c945ab4"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with (f := @length _) in H1.",
                        "VernacExtend",
                        "5b8e97ebded693497a667e067e54c46f8c4e1606"
                    ]
                },
                {
                    "command": [
                        "revert H1; rew length; split; omega.",
                        "VernacExtend",
                        "b603690d7ab214080b2259f5e25436978f6c9635"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_length'",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "revert P Q; intros [] [] (? & ? & ? & ?); simpl; subst; rew length; omega.",
                        "VernacExtend",
                        "52965f634d75485f937b62b9c39bf7c154149b3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_length_le",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros (iP,cP) (iQ,cQ) (l & r & ? & ?); subst; simpl; rew length; omega.",
                        "VernacExtend",
                        "36ec2f8aaf45c47b858c808ab3af08547a7765b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_start_in_code",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros (iP,cP) (iQ,cQ) H (l & r & H1 & H2); simpl in *; subst; revert H; rew length; intro; omega.",
                        "VernacExtend",
                        "2f85a01525536d251300bbb9dcce25c591cceeae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_refl",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "destruct P; exists nil, nil; split; simpl.",
                        "VernacExtend",
                        "05bb2ad1562747540fec970bb417ed913f90394f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_trans",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "revert P Q R; intros (iP,cP) (iQ,cQ) (iR,cR).",
                        "VernacExtend",
                        "d3ccd3fec145eb463f2b98910c6d4e2d3372ca3e"
                    ]
                },
                {
                    "command": [
                        "intros (ll1 & rr1 & H1 & H2) (ll2 & rr2 & H3 & H4); subst.",
                        "VernacExtend",
                        "aa9e2e78f467aac2da8ca785fa0af28cfa5e4f73"
                    ]
                },
                {
                    "command": [
                        "exists (ll2++ll1), (rr1++rr2); split.",
                        "VernacExtend",
                        "61107f6e4ca4c6c4ae7fb640ff1d337d7a2f0138"
                    ]
                },
                {
                    "command": [
                        "solve list eq.",
                        "VernacExtend",
                        "269e374d55b1b0f93baede385e5d71998ec7e999"
                    ]
                },
                {
                    "command": [
                        "rew length; omega.",
                        "VernacExtend",
                        "4c1755317b15e1d79d75400aa81165e719c47339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_in_code",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "revert P Q; intros (iP,cP) (iQ,cQ) (l & r & H1 & H2); simpl.",
                        "VernacExtend",
                        "b1f4dcf0ecff1f52f4eae5f4bed415a2ae229c7e"
                    ]
                },
                {
                    "command": [
                        "subst; rew length; omega.",
                        "VernacExtend",
                        "e80cb4ae4dbb467145feaddaf26f665128e5dbbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_out_code",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "revert P Q; intros (iP,cP) (iQ,cQ) (l & r & H1 & H2); simpl.",
                        "VernacExtend",
                        "b1f4dcf0ecff1f52f4eae5f4bed415a2ae229c7e"
                    ]
                },
                {
                    "command": [
                        "subst; rew length; omega.",
                        "VernacExtend",
                        "e80cb4ae4dbb467145feaddaf26f665128e5dbbb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_left",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "exists nil, r; simpl; split; auto; omega.",
                        "VernacExtend",
                        "a90372ea06e81d01d80008588aefa5d27afe5c67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_right",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "exists l, nil; split; auto.",
                        "VernacExtend",
                        "34f63babca10b87d34c770ed3a02bf92edb1a930"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "0e69b58a1955028f4b5bd87ee75b43021168bc7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_app_end",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros; apply subcode_trans with (1 := H).",
                        "VernacExtend",
                        "08784d81d655dd7560c0d0744a3af9888fa39120"
                    ]
                },
                {
                    "command": [
                        "exists nil, r; auto.",
                        "VernacExtend",
                        "0403f109c139eec8d8748370d2bba99139802ec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_cons",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros; apply subcode_trans with (1 := H).",
                        "VernacExtend",
                        "08784d81d655dd7560c0d0744a3af9888fa39120"
                    ]
                },
                {
                    "command": [
                        "exists (x::nil), nil; split.",
                        "VernacExtend",
                        "c44c303a69458e6fbe9625bab7c3bad00c459756"
                    ]
                },
                {
                    "command": [
                        "solve list eq.",
                        "VernacExtend",
                        "269e374d55b1b0f93baede385e5d71998ec7e999"
                    ]
                },
                {
                    "command": [
                        "rew length; omega.",
                        "VernacExtend",
                        "4c1755317b15e1d79d75400aa81165e719c47339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_code_subcode",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "destruct P as (iP,cP); simpl; intros H.",
                        "VernacExtend",
                        "ecc943cf38588926d2be5bdf3a6e7b71c3e30efd"
                    ]
                },
                {
                    "command": [
                        "destruct (list_split_length cP) with (k := i-iP) as (l & [ | a r ] & H1 & H2).",
                        "VernacExtend",
                        "61cb6fcf7daae83a0788681f3dff8a38164d0b24"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "exfalso; subst; solve list eq in H; omega.",
                        "VernacExtend",
                        "2cc9dcdfdbeb9cf2ffd3161f51385566f8f5736a"
                    ]
                },
                {
                    "command": [
                        "exists a, l, r; split; auto; omega.",
                        "VernacExtend",
                        "c49e9472c96493e4f844cf5863082f04996737a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_app_invert_right",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros (l & r & H1 & H2); simpl in *.",
                        "VernacExtend",
                        "ca50427e5f1ab078976c474ddefc70bf796a801c"
                    ]
                },
                {
                    "command": [
                        "apply list_app_cons_eq_inv in H1.",
                        "VernacExtend",
                        "dc5b3bdd8ee21bb3da854cca79dbcc2498462102"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [ (m & G1 & G2) | (m & G1 & G2) ]; subst.",
                        "VernacExtend",
                        "613d09bb166cc5779f052460afecd4ba39c7207f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; exists m, r; rew length; split; auto; omega.",
                        "VernacExtend",
                        "567110e66d96b6ebe861e961cd08e5ab7b02f509"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left; exists l, m; rew length; split; auto; omega.",
                        "VernacExtend",
                        "66dde42aca798164782c6b7d820e2c0745b6a17c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_cons_invert_right",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros ([ | K l ] & r & H1 & H2); simpl in *.",
                        "VernacExtend",
                        "21126944a615b7ca0e4ad5d71f5aebf0d2fd4243"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H1; left; split; auto; omega.",
                        "VernacExtend",
                        "188bed3cc84f8ed443b5293c859e2f2a08dfdd4f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; inversion H1; exists l, r; split; auto; omega.",
                        "VernacExtend",
                        "16448d964916e9e31f60612b309ed2098d53a8b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_app_inv",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intro; apply subcode_trans.",
                        "VernacExtend",
                        "d77d5844f756f8a1c0c3af438d2aeebce6daf9db"
                    ]
                },
                {
                    "command": [
                        "exists l, r; auto.",
                        "VernacExtend",
                        "9487688b59b4e1c2a1f86c05d95ce00e03d88bdf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_cons_inv",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intro; apply subcode_app_inv with (l := nil); simpl; omega.",
                        "VernacExtend",
                        "9cf56cb02eeb651db9ad8f90048353105d870220"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_snoc_inv",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply subcode_trans.",
                        "VernacExtend",
                        "1fac303176044e429dc0b3a95b0f104387555cf5"
                    ]
                },
                {
                    "command": [
                        "exists l, nil; split; auto.",
                        "VernacExtend",
                        "34f63babca10b87d34c770ed3a02bf92edb1a930"
                    ]
                },
                {
                    "command": [
                        "solve list eq.",
                        "VernacExtend",
                        "269e374d55b1b0f93baede385e5d71998ec7e999"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subcode_cons_invert_left",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros H1; split.",
                        "VernacExtend",
                        "f1ad87cf93ff82e8a7543e129c9c671fe7eedd7a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "revert H1; apply subcode_cons_inv with (a := _::nil); auto.",
                        "VernacExtend",
                        "e7db3ef9b76d7ced1ceece5e6364edb1277ff312"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "revert H1; apply subcode_snoc_inv with (l := _::nil); simpl; omega.",
                        "VernacExtend",
                        "b5b10037ac2b8fcc0913617b285dacfcca89ce8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}