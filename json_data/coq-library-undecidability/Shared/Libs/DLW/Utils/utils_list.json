{
    "filename": "Shared/Libs/DLW/Utils/utils_list.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "Require Import List Arith Omega Permutation.",
            "VernacRequire",
            "3d7bbb29b4049282fcb1473323519209c248a31e"
        ],
        [
            "Require Import list_focus utils_tac.",
            "VernacRequire",
            "2df2d9877c43dbdc881089e364d40876708dfb7c"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Create HintDb length_db.",
            "VernacCreateHintDb",
            "7c442e03eb091f9097120067419b0c192781b449"
        ],
        [
            "Tactic Notation \"rew\" \"length\" := autorewrite with length_db.",
            "VernacExtend",
            "91bbe6b1948d427fab2374906017a1e5756180f4"
        ],
        [
            "Tactic Notation \"rew\" \"length\" \"in\" hyp(H) := autorewrite with length_db in H.",
            "VernacExtend",
            "faf6f0918e85b0b20a1d8f0ae3587fb4ca5039f2"
        ],
        [
            "Infix \"~p\" := (@Permutation _) (at level 70).",
            "VernacInfix",
            "14c001dd6ae80697f8b41cdf6290b663674c6d01"
        ],
        [
            "Section length.",
            "VernacBeginSection",
            "c1ee89124889153ab027250322b9e42b85e82de3"
        ],
        [
            "Variable X : Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Implicit Type l : list X.",
            "VernacReserve",
            "520c6c30bd609c8d47d4ca073abd087cd24356d6"
        ],
        [
            "Fact length_nil : length (@nil X) = 0.",
            "VernacStartTheoremProof",
            "78c9fe231d6733bc9cdb4bac43def421a7227d16"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact length_cons x l : length (x::l) = S (length l).",
            "VernacStartTheoremProof",
            "34820d6111700698e46a2c4a5030001304ccd967"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End length.",
            "VernacEndSegment",
            "15b68e4770a2015664e90a80acf77ece248dee99"
        ],
        [
            "Hint Rewrite length_nil length_cons app_length map_length rev_length : length_db.",
            "VernacExtend",
            "413794d84840d24b83a09bed957b01f1882ee914"
        ],
        [
            "Section list_an.",
            "VernacBeginSection",
            "7cc8ac66694ac928c86c93ee1f0807f193700367"
        ],
        [
            "Fixpoint list_an a n := match n with | 0 => nil | S n => a::list_an (S a) n end.",
            "VernacFixpoint",
            "cba0f8978a6a944ad22fda214dbf0a7ea0a9699f"
        ],
        [
            "Fact list_an_S a n : list_an a (S n) = a::list_an (S a) n.",
            "VernacStartTheoremProof",
            "137df4a79f2ce8dbbbdb053a5dec80ff319f23fd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_an_plus a n m : list_an a (n+m) = list_an a n ++ list_an (n+a) m.",
            "VernacStartTheoremProof",
            "55efd908b6e3d861973b408b1f8373c0e74ebbd2"
        ],
        [
            "revert a; induction n; intros a; simpl; auto.",
            "VernacExtend",
            "37ecb713869c79c301af6d55711974d6dd2bd8fe"
        ],
        [
            "rewrite IHn; do 3 f_equal; omega.",
            "VernacExtend",
            "a984d0e049486250bfb3234a96be588c7f16a3fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_an_length a n : length (list_an a n) = n.",
            "VernacStartTheoremProof",
            "d51c60d53dab959a6d30e3f1449c7035c84aa9d8"
        ],
        [
            "revert a; induction n; intro; simpl; f_equal; auto.",
            "VernacExtend",
            "123dd520d68c9f82bf2a763bb134376077a8ea4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_an_spec a n m : In m (list_an a n) <-> a <= m < a+n.",
            "VernacStartTheoremProof",
            "b31ac0b63a86589da126d4f1ea30120f391154f9"
        ],
        [
            "revert a; induction n as [ | n IHn ]; simpl; intros a; [ | rewrite IHn ]; omega.",
            "VernacExtend",
            "38947579268ebcf3ac1d7c8a76c40b8dd2803961"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_S_list_an a n : map S (list_an a n) = list_an (S a) n.",
            "VernacStartTheoremProof",
            "3afd21859682c967054aba17b25a3eb2e6cbf1e7"
        ],
        [
            "revert a; induction n; simpl; intro; f_equal; auto.",
            "VernacExtend",
            "491544b198345ddb87a63c1c8ee6e89ab79b58bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_an_app_inv a n l r : list_an a n = l++r -> l = list_an a (length l) /\\ r = list_an (a+length l) (length r).",
            "VernacStartTheoremProof",
            "8be0f7315f874afa51c5bc8c96f9907152735307"
        ],
        [
            "revert a l r; induction n as [ | n IHn ]; intros a l r; simpl.",
            "VernacExtend",
            "0f23175e0ae531dcdbbbce364724d7d0b88698eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct l; destruct r; intros; auto; discriminate.",
            "VernacExtend",
            "0c7a17bd22a4282a754eb893411f88a2ce342f02"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct l as [ | x l ]; simpl; intros H1.",
            "VernacExtend",
            "e20dd1616cc846b47ceaf7951014333c726f040d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite <- H1; simpl; rewrite Nat.add_0_r, list_an_length; auto.",
            "VernacExtend",
            "cd8e2e430f5a7e42d9e970fcc32b21aaf0c021e0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "injection H1; clear H1; intros H1 H0.",
            "VernacExtend",
            "2b37e815db6a50599bc8675fe3802b8eebe2ecd6"
        ],
        [
            "apply IHn in H1; destruct H1; split; f_equal; auto.",
            "VernacExtend",
            "b5beb34c5508d11d4b1364e70ce15f3e499656e9"
        ],
        [
            "rewrite H1 at 1; f_equal; omega.",
            "VernacExtend",
            "71e5238d93b310437555ec4a04f535f8949c3701"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End list_an.",
            "VernacEndSegment",
            "75ca969ce7e0e72dea48a58340da335d5307e8f1"
        ],
        [
            "Hint Rewrite list_an_length : length_db.",
            "VernacExtend",
            "295bb81cb6696ae5611ebdcbf60c4fe4e80054c0"
        ],
        [
            "Definition list_fun_inv X (l : list X) (x : X) : { f : nat -> X | l = map f (list_an 0 (length l)) }.",
            "VernacDefinition",
            "08eded3d75fdb04fdca0ded7d11333fe7d75bf85"
        ],
        [
            "induction l as [ | y l IHl ].",
            "VernacExtend",
            "314d5def31d867404d69a91592c11d480e07d2f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (fun _ => x); auto.",
            "VernacExtend",
            "be1a0b80e01210de03051dfc6af66081a2470db4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct IHl as (f & Hf).",
            "VernacExtend",
            "75ffa0812eb4a619e5e4b6237fab59eec1c65c3d"
        ],
        [
            "exists (fun i => match i with 0 => y | S i => f i end); simpl.",
            "VernacExtend",
            "bfcfeb20ac98bf734a20ce348e0ed74606bef51d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite Hf, <- map_S_list_an, map_length, list_an_length, map_map; auto.",
            "VernacExtend",
            "fd240c51ec37dddd3463fb69d3b907f6b5164a7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_upper_bound (l : list nat) : { m | forall x, In x l -> x < m }.",
            "VernacStartTheoremProof",
            "884d17f63e6a0fbc52637c2f3238a13b3db02d33"
        ],
        [
            "induction l as [ | x l (m & Hm) ].",
            "VernacExtend",
            "ac712fe97ca9a536c7ef57bee4a05deb7947dff0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists 0; simpl; tauto.",
            "VernacExtend",
            "3b95e0408966dfbe693c3c622b075f5aaf74e3ae"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists (1+x+m); intros y [ [] | H ]; simpl; try omega.",
            "VernacExtend",
            "dbd0dac6ead8b779360d70e3e073fdb4812a0bfc"
        ],
        [
            "generalize (Hm _ H); intros; omega.",
            "VernacExtend",
            "1752c520a1aebe4a4a044c4049b80b6fde91a809"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section list_injective.",
            "VernacBeginSection",
            "a7898c279da9b8ca1e600966b619f2c1517c4b00"
        ],
        [
            "Variable X : Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Definition list_injective (ll : list X) := forall l a m b r, ll = l ++ a :: m ++ b :: r -> a <> b.",
            "VernacDefinition",
            "79e74f1433b177b4ba510300db3644519dea5ca4"
        ],
        [
            "Fact in_list_injective_0 : list_injective nil.",
            "VernacStartTheoremProof",
            "a0d4a30b3eacf93e3b44017baf63947198579b55"
        ],
        [
            "intros [] ? ? ? ? ?; discriminate.",
            "VernacExtend",
            "9c258c4aabee1a6232503c2c4c6f0bc5530c56ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact in_list_injective_1 x ll : ~ In x ll -> list_injective ll -> list_injective (x::ll).",
            "VernacStartTheoremProof",
            "53ac7a1caa1b347a7a6c33cdb1bc8596003f7672"
        ],
        [
            "intros H1 H2 l a m b r H3.",
            "VernacExtend",
            "7e865557da09c807543a617c8d569a2337ce67be"
        ],
        [
            "destruct l as [ | u l ].",
            "VernacExtend",
            "397c6f9301d29e61339ffdb813a5e65144d927d7"
        ],
        [
            "inversion H3; subst.",
            "VernacExtend",
            "a12e3012374b4f52063356c543280e1f1d8af320"
        ],
        [
            "destruct m as [ | v m ].",
            "VernacExtend",
            "577d6cd64b148a2bacef10d187f1d248dafaa63a"
        ],
        [
            "contradict H1; subst; simpl; auto.",
            "VernacExtend",
            "5413d3c18e05583ca00d6432302dd320bc0a9848"
        ],
        [
            "contradict H1; subst; simpl; right; apply in_or_app; right; left; auto.",
            "VernacExtend",
            "275deb6d686c3b85bc266d3759e9400f44dce326"
        ],
        [
            "inversion H3; subst.",
            "VernacExtend",
            "a12e3012374b4f52063356c543280e1f1d8af320"
        ],
        [
            "apply (H2 l _ m _ r); auto.",
            "VernacExtend",
            "a01e249ced4b38c61d17dc36e9675af25413dbfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_injective_inv x ll : list_injective (x::ll) -> ~ In x ll /\\ list_injective ll.",
            "VernacStartTheoremProof",
            "6013acd894cb1ff3e2eae3b03975ca62acc25aa3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros H1; apply in_split in H1; destruct H1 as (l & r & ?); subst.",
            "VernacExtend",
            "16f3bd4c161ce2b8fe33dd544f6efcfe4f447b87"
        ],
        [
            "apply (H nil x l x r); auto.",
            "VernacExtend",
            "1818efd7443fb331eae8ca27217a3801f552287b"
        ],
        [
            "intros l a m b r ?; apply (H (x::l) a m b r); subst; solve list eq.",
            "VernacExtend",
            "fdabd98744a8570a8144dff407a979cd89ec4c0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable P : list X -> Type.",
            "VernacAssumption",
            "ddd08ddb49f6a58582c9756320bd8cd5ecd7acd6"
        ],
        [
            "Hypothesis (HP0 : P nil).",
            "VernacAssumption",
            "71b2065270c987e2ece7c3829c3b4af343fa7b11"
        ],
        [
            "Hypothesis (HP1 : forall x l, ~ In x l -> P l -> P (x::l)).",
            "VernacAssumption",
            "be752d71a71f04b236886afaa61bc877a644699e"
        ],
        [
            "Theorem list_injective_rect l : list_injective l -> P l.",
            "VernacStartTheoremProof",
            "cc067ee98730ce87c9bdff55523cf43e716faec4"
        ],
        [
            "induction l as [ [ | x l ] IHl ] using (measure_rect (@length _)).",
            "VernacExtend",
            "5b0597cb13f718680dfadc9b0a3da5df4a5cea10"
        ],
        [
            "intro; apply HP0.",
            "VernacExtend",
            "26bf145c02db5bbbf1e5c81b6d4e21a57b11d0b8"
        ],
        [
            "intros; apply HP1.",
            "VernacExtend",
            "f231577d94e1ae068803898376e5d116834604d3"
        ],
        [
            "apply list_injective_inv, H.",
            "VernacExtend",
            "a63e41b345497884f3e9f48ec1b06ce150363e6e"
        ],
        [
            "apply IHl; simpl; auto.",
            "VernacExtend",
            "9a7287840c9690f7f39e8eff61b23a4db1a6e4ba"
        ],
        [
            "apply list_injective_inv with (1 := H).",
            "VernacExtend",
            "7f8a3bb376eb90e44ac48daa29d373b5174c6886"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End list_injective.",
            "VernacEndSegment",
            "ceefed7cef5e4b1e854dbb1568497a8cf5e2e66e"
        ],
        [
            "Fact list_injective_map X Y (f : X -> Y) ll : (forall x y, f x = f y -> x = y) -> list_injective ll -> list_injective (map f ll).",
            "VernacStartTheoremProof",
            "c6eb5c5fdf42d56f032a828162878504d064e5bb"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "induction 1 as [ | x l Hl IHl ] using list_injective_rect.",
            "VernacExtend",
            "9605f9874bf22ba18b91ecea835b8f39cfa9ab1c"
        ],
        [
            "apply in_list_injective_0.",
            "VernacExtend",
            "6e26c012cfbee6df403c1a39bd2c80b5ab0c3e8f"
        ],
        [
            "simpl; apply in_list_injective_1; auto.",
            "VernacExtend",
            "abb9124ea070327056e8660f2adf07b198e2bed7"
        ],
        [
            "contradict Hl.",
            "VernacExtend",
            "b0fd704608864a015715b0c7a14b60f0655e01f3"
        ],
        [
            "apply in_map_iff in Hl.",
            "VernacExtend",
            "0192ec650c578ab1d5d52e7ee498aa27b23e2c4d"
        ],
        [
            "destruct Hl as (y & Hl & ?).",
            "VernacExtend",
            "f870101a0ace5da1d9751d9500854cc3560ee0ce"
        ],
        [
            "apply Hf in Hl; subst; auto.",
            "VernacExtend",
            "8fe3dc8a642e47be6ab453cb3a106bc0c45e73b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section iter.",
            "VernacBeginSection",
            "b856041ab8265a94d2ab34983fcc49aadd5965f2"
        ],
        [
            "Variable (X : Type) (f : X -> X).",
            "VernacAssumption",
            "d210eed267a59a0eb93ce1501e62e327917334f3"
        ],
        [
            "Fixpoint iter x n := match n with | 0 => x | S n => iter (f x) n end.",
            "VernacFixpoint",
            "c38604672ed5b712be2eca79f1ba15e9e669dc19"
        ],
        [
            "Fact iter_plus x a b : iter x (a+b) = iter (iter x a) b.",
            "VernacStartTheoremProof",
            "fadb84b0e0b9f1db54c733a134e9c8b49d2e0bec"
        ],
        [
            "revert x; induction a; intros x; simpl; auto.",
            "VernacExtend",
            "5a3f1ab3ba24ebcc4fb3f6faeb7bf82fc91202ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact iter_swap x n : iter (f x) n = f (iter x n).",
            "VernacStartTheoremProof",
            "3a6e3175b463108dc4421f763a228c6ea4e87190"
        ],
        [
            "change (iter (f x) n) with (iter x (1+n)).",
            "VernacExtend",
            "f7b83ca535d37dff9fb21ab118579c0dae1bf413"
        ],
        [
            "rewrite plus_comm, iter_plus; auto.",
            "VernacExtend",
            "cd3d735381bcacd58282cbe262e174be223ce0a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End iter.",
            "VernacEndSegment",
            "1da397f0e4e9cc2e380b74b2e1cb0f2551e72320"
        ],
        [
            "Fixpoint list_repeat X (x : X) n := match n with | 0 => nil | S n => x::list_repeat x n end.",
            "VernacFixpoint",
            "5be2cc03019c4c5f73f22ebac47d7b0cf7f7af96"
        ],
        [
            "Fact list_repeat_plus X x a b : @list_repeat X x (a+b) = list_repeat x a ++ list_repeat x b.",
            "VernacStartTheoremProof",
            "ea4806066f9ace0b60d74ec0aa9d3ced5ccd14e4"
        ],
        [
            "induction a; simpl; f_equal; auto.",
            "VernacExtend",
            "1b1b1845c0d6a4c2b6e8f8abffc1911650e30488"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_repeat_length X x n : length (@list_repeat X x n) = n.",
            "VernacStartTheoremProof",
            "54b8d5b59a26f374d6ac0b3cca08fdf08fcec54f"
        ],
        [
            "induction n; simpl; f_equal; auto.",
            "VernacExtend",
            "02a922f7a42a29ce198eba5186fad08cb54dfb80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact In_list_repeat X (x y : X) n : In y (list_repeat x n) -> x = y /\\ 0 < n.",
            "VernacStartTheoremProof",
            "4559ffbe117bea0d1999cb7ecc50df7a1c39ea98"
        ],
        [
            "induction n; simpl; intros [].",
            "VernacExtend",
            "48af3c1e3d848d45f759454d390647c767ae130f"
        ],
        [
            "split; auto; omega.",
            "VernacExtend",
            "a021e2bca02416429c516045bb4950b09cdd4a32"
        ],
        [
            "split; try omega; apply IHn; auto.",
            "VernacExtend",
            "b6e289fec6acdeba3bddf5ffdb1ec325cdecdd14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_list_repeat X Y f x n : @map X Y f (list_repeat x n) = list_repeat (f x) n.",
            "VernacStartTheoremProof",
            "bf2a19247e790c6286eb157ed79dfc9e9f19a81b"
        ],
        [
            "induction n; simpl; f_equal; auto.",
            "VernacExtend",
            "02a922f7a42a29ce198eba5186fad08cb54dfb80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_cst_repeat X Y (y : Y) ll : map (fun _ : X => y) ll = list_repeat y (length ll).",
            "VernacStartTheoremProof",
            "7d1415e7b4121bc9f94959165db8e8773e3b909c"
        ],
        [
            "induction ll; simpl; f_equal; auto.",
            "VernacExtend",
            "b793f34b55be4133f4b0e052a5ddba3f45ef1860"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_cst_snoc X Y (y : Y) ll mm : y :: map (fun _ : X => y) ll++mm = map (fun _ => y) ll ++ y::mm.",
            "VernacStartTheoremProof",
            "bead613c6e1111843c5421894de210133fa71b2b"
        ],
        [
            "induction ll; simpl; f_equal; auto.",
            "VernacExtend",
            "b793f34b55be4133f4b0e052a5ddba3f45ef1860"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_cst_rev X Y (y : Y) ll : map (fun _ : X => y) (rev ll) = map (fun _ => y) ll.",
            "VernacStartTheoremProof",
            "3cea9763d6e2f0c605fa52085b4a2cdeceb979f6"
        ],
        [
            "do 2 rewrite map_cst_repeat; rewrite rev_length; auto.",
            "VernacExtend",
            "82476a04ccd51c236d303f6439c9680a4d590342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact In_perm X (x : X) l : In x l -> exists m, x::m ~p l.",
            "VernacStartTheoremProof",
            "9a5883835c89a6b20ab4d7bdf23894f0ca0499d0"
        ],
        [
            "intros H; apply in_split in H.",
            "VernacExtend",
            "b89b269532eab39edf6074489d693af874483c35"
        ],
        [
            "destruct H as (m & k & ?); subst.",
            "VernacExtend",
            "f237aebf0f2f57398168dd0c2e2b1504abb352ff"
        ],
        [
            "exists (m++k).",
            "VernacExtend",
            "f1cfafe06dfd58860ec52444f7f5e9ccea0d05c6"
        ],
        [
            "apply Permutation_cons_app; auto.",
            "VernacExtend",
            "547f359afc2a6a8d87faa8e2eff2681c5a544415"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_app_eq_inv X (l1 l2 r1 r2 : list X) : l1++r1 = l2++r2 -> { m | l1++m = l2 /\\ r1 = m++r2 } + { m | l2++m = l1 /\\ r2 = m++r1 }.",
            "VernacStartTheoremProof",
            "d9b42611fdb220c89135641b3f76c291cd7e49e5"
        ],
        [
            "revert l2 r1 r2; induction l1 as [ | x l1 IH ].",
            "VernacExtend",
            "2288a1fb75c8e2653af806058f9023ff0e082372"
        ],
        [
            "intros; left; exists l2; auto.",
            "VernacExtend",
            "b42821d4038681fcddb787f65596dedbfd154fd3"
        ],
        [
            "intros [ | y l2 ] r1 r2; simpl; intros H.",
            "VernacExtend",
            "6a6674649c7f1f1211a1cd0a979cb8627609fb2e"
        ],
        [
            "right; exists (x::l1); auto.",
            "VernacExtend",
            "b0ed440a2be13038fb5b06724102e56e823cac0d"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct (IH l2 r1 r2) as [ (m & Hm) | (m & Hm) ]; auto; [ left | right ]; exists m; split; f_equal; tauto.",
            "VernacExtend",
            "727177216386f0d5f990becee94c2c2cfd2f1479"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_app_cons_eq_inv X (l1 l2 r1 r2 : list X) x : l1++r1 = l2++x::r2 -> { m | l1++m = l2 /\\ r1 = m++x::r2 } + { m | l2++x::m = l1 /\\ r2 = m++r1 }.",
            "VernacStartTheoremProof",
            "5fbae3b6cb872e6341c0c27221851d0c8ed7e32a"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply list_app_eq_inv in H.",
            "VernacExtend",
            "ac388bce9e2e2e83937a63eb521d25b744cd5e92"
        ],
        [
            "destruct H as [ H | (m & H1 & H2) ]; auto.",
            "VernacExtend",
            "e403ba73f9d0d9ba3852a19708b132b847bf6429"
        ],
        [
            "destruct m as [ | y m ].",
            "VernacExtend",
            "8a494183cb3a2894784d6c29f6fb3bdf57a90fb4"
        ],
        [
            "left; exists nil; simpl in *; split; auto.",
            "VernacExtend",
            "f7ef9bb68988d34b1cef50286aeccf97a797b21b"
        ],
        [
            "revert H1; do 2 rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "4b6c4b9c5ba509a5368c53965bd69955dffb7db1"
        ],
        [
            "inversion H2; subst.",
            "VernacExtend",
            "cbe105a5addb129fa1e578ba8ef36c4763179006"
        ],
        [
            "right; exists m; auto.",
            "VernacExtend",
            "8c71d71ee11338d4dcdc60e236b9e8e55b997db9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_cons_app_cons_eq_inv X (l2 r1 r2 : list X) x y : x::r1 = l2++y::r2 -> (l2 = nil /\\ x = y /\\ r1 = r2) + { m | l2 = x::m /\\ r1 = m++y::r2 }.",
            "VernacStartTheoremProof",
            "c85650fac645f312e2fdba968d0762e9842cfb05"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct l2 as [ | z m ]; simpl in H.",
            "VernacExtend",
            "2015f1ff5b4934aa3570dfd8c519a122802ecf77"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "left; inversion H; auto.",
            "VernacExtend",
            "72f4757ee18f10b93457bcb318cffb1f1a7df6cd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right; exists m; inversion H; auto.",
            "VernacExtend",
            "8c90c980ae9aa6f93b20003f7ba7c03f06e25b60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_app_inj X (l1 l2 r1 r2 : list X) : length l1 = length l2 -> l1++r1 = l2++r2 -> l1 = l2 /\\ r1 = r2.",
            "VernacStartTheoremProof",
            "dabff2b31290b1b909a543b65fb81079f76b52e1"
        ],
        [
            "revert l2; induction l1 as [ | x l1 IH ]; intros [ | y l2 ]; try discriminate.",
            "VernacExtend",
            "4535cf056829a5bc4cd8aa33e84ae469892cf88b"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros H1 H2; inversion H1; inversion H2.",
            "VernacExtend",
            "bfc82a0ffa53de5656d75317e3fe1ae96d17af78"
        ],
        [
            "apply IH in H4; auto.",
            "VernacExtend",
            "4a5a0a9d754d86fddd7b0e5c2fe364887a30bc50"
        ],
        [
            "split; f_equal; tauto.",
            "VernacExtend",
            "aeab504da368d124055f02b1ebebccd552075081"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_split_length X (ll : list X) k : k <= length ll -> { l : _ & { r | ll = l++r /\\ length l = k } }.",
            "VernacStartTheoremProof",
            "45e8f460e09a56e487f362aab139055470a18981"
        ],
        [
            "revert k; induction ll as [ | x ll IHll ]; intros k.",
            "VernacExtend",
            "9e192919f999b3edd1142073eb2a72d25ee55e64"
        ],
        [
            "exists nil, nil; split; simpl in * |- *; auto; omega.",
            "VernacExtend",
            "e00813f6aeeaae88fafb0f61ad6504d6ee196e30"
        ],
        [
            "destruct k as [ | k ]; intros Hk.",
            "VernacExtend",
            "fb2e46d02506e27e9c8148199945905924987943"
        ],
        [
            "exists nil, (x::ll); simpl; split; auto.",
            "VernacExtend",
            "26fe89f1e70c4b16142fabcc09df07c332916a2c"
        ],
        [
            "destruct (IHll k) as (l & r & H1 & H2).",
            "VernacExtend",
            "a2799a22585d6bcb73922ffa2f927412b4f625f2"
        ],
        [
            "simpl in Hk; omega.",
            "VernacExtend",
            "e2d5567952f7e6bc1d344d0611d6239557422e6e"
        ],
        [
            "exists (x::l), r; split; simpl; auto; f_equal; auto.",
            "VernacExtend",
            "68f2cde0f1979f2dc2ba6c81e7c80d07a4aba124"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_pick X (ll : list X) k : k < length ll -> { x : _ & { l : _ & { r | ll = l++x::r /\\ length l = k } } }.",
            "VernacStartTheoremProof",
            "3fae814ab0e9d642740390b02a46ddcb2558a1df"
        ],
        [
            "revert k; induction ll as [ | x ll IHll ]; intros k.",
            "VernacExtend",
            "9e192919f999b3edd1142073eb2a72d25ee55e64"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "destruct k as [ | k ]; intros H.",
            "VernacExtend",
            "e0695052a919c1aa26e10a4e1c140f0f9516e160"
        ],
        [
            "exists x, nil, ll; simpl; auto.",
            "VernacExtend",
            "bf083b77ce79aedaf06ea4c477eefa101e35a929"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct IHll with (k := k) as (y & l & r & ? & ?); try omega.",
            "VernacExtend",
            "aae9b6f6e6d4681e4e2ae9bbfabe3cdbda3a48c8"
        ],
        [
            "exists y, (x::l), r; subst; simpl; split; auto.",
            "VernacExtend",
            "71e70e9e98ce440ffa671f04d803ba6772593216"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_split_middle X l1 (x1 : X) r1 l2 x2 r2 : ~ In x1 l2 -> ~ In x2 l1 -> l1++x1::r1 = l2++x2::r2 -> l1 = l2 /\\ x1 = x2 /\\ r1 = r2.",
            "VernacStartTheoremProof",
            "77aa30a2cd92a47085309c757168931fedf0bc82"
        ],
        [
            "intros H1 H2 H.",
            "VernacExtend",
            "72dac5b298cbfc489f403a08ef6dadbbd39f71cd"
        ],
        [
            "apply list_app_eq_inv in H.",
            "VernacExtend",
            "ac388bce9e2e2e83937a63eb521d25b744cd5e92"
        ],
        [
            "destruct H as [ (m & H3 & H4) | (m & H3 & H4) ]; destruct m.",
            "VernacExtend",
            "ac9d691d8cd04b17f6bd1ed9dccb257471314545"
        ],
        [
            "inversion H4; subst; rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "b67e02d8457d112d9633fb3ffe11364bf61260d6"
        ],
        [
            "inversion H4; subst; destruct H1; apply in_or_app; right; left; auto.",
            "VernacExtend",
            "732972f8c631f82d1f1a27650bfbd732cdd7f267"
        ],
        [
            "inversion H4; subst; rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "b67e02d8457d112d9633fb3ffe11364bf61260d6"
        ],
        [
            "inversion H4; subst; destruct H2; apply in_or_app; right; left; auto.",
            "VernacExtend",
            "370f06e92c0cf527da8d71f2269a64c6a873d13f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section flat_map.",
            "VernacBeginSection",
            "2e130631093655f9f400a5d398da2d291cdf9ac3"
        ],
        [
            "Variable (X Y : Type) (f : X -> list Y).",
            "VernacAssumption",
            "6e4f2a4bf5bad9cd07a45cb58fd2f061619e297d"
        ],
        [
            "Fact flat_map_app l1 l2 : flat_map f (l1++l2) = flat_map f l1 ++ flat_map f l2.",
            "VernacStartTheoremProof",
            "bd49c0409ec5d0cf8e5cf641d66dfb1b4d7eb9b9"
        ],
        [
            "induction l1; simpl; auto; solve list eq; f_equal; auto.",
            "VernacExtend",
            "fa2e4769c5ae64a4838a6866d274b1433ea54a0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact flat_map_app_inv l r1 y r2 : flat_map f l = r1++y::r2 -> exists l1 m1 x m2 l2, l = l1++x::l2 /\\ f x = m1++y::m2 /\\ r1 = flat_map f l1++m1 /\\ r2 = m2++flat_map f l2.",
            "VernacStartTheoremProof",
            "5b274337407314fa88446a91bbcd182af237c495"
        ],
        [
            "revert r1 y r2.",
            "VernacExtend",
            "138af3185e0e7e6a723bbeefae9b42e57d1990f4"
        ],
        [
            "induction l as [ | x l IHl ]; intros r1 y r2 H.",
            "VernacExtend",
            "2e2c414d682ac72764d8b12bc7afc0a00c482211"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct r1; discriminate.",
            "VernacExtend",
            "8ca95c83133d250ab3c7ebfa5cce521e0b755bb5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply list_app_cons_eq_inv in H.",
            "VernacExtend",
            "0a3f4204230a8d6af581d95bec2b331a18a2c86e"
        ],
        [
            "destruct H as [ (m & Hm1 & Hm2) | (m & Hm1 & Hm2) ].",
            "VernacExtend",
            "70991568940ec425c910ea651f850ffbce219437"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply IHl in Hm2.",
            "VernacExtend",
            "0f236f7bb511bebfabeeea4dc0083f91d1fb8bbc"
        ],
        [
            "destruct Hm2 as (l1 & m1 & x' & m2 & l2 & G1 & G2 & G3 & G4); subst.",
            "VernacExtend",
            "c31be6615e9442b98288c2c1b04589509dc9ba87"
        ],
        [
            "exists (x::l1), m1, x', m2, l2; simpl; repeat (split; auto).",
            "VernacExtend",
            "8b94e61250b2190ce2069f430ba2fec9ec33a66e"
        ],
        [
            "rewrite app_ass; auto.",
            "VernacExtend",
            "d1354baf0f42b5d934cf37889f921365ed87a2e8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists nil, r1, x, m, l; auto.",
            "VernacExtend",
            "6a062873bd42072ff587b9cfbfc525a4e9d9ee29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End flat_map.",
            "VernacEndSegment",
            "7d9fa15df3bfda6a589f709eda31fea10893d4bc"
        ],
        [
            "Definition prefix X (l ll : list X) := exists r, ll = l++r.",
            "VernacDefinition",
            "a9b3fad77f800180002955756d72fc5de63bd7fd"
        ],
        [
            "Infix \"<p\" := (@prefix _) (at level 70, no associativity).",
            "VernacInfix",
            "1d054c545e74fecce0ea0a13b530bb2ff3bfd2f0"
        ],
        [
            "Section prefix.",
            "VernacBeginSection",
            "b28fff8174f0f4b2a6b8d48e4da234129033a9c8"
        ],
        [
            "Variable X : Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Implicit Types (l ll : list X).",
            "VernacReserve",
            "28668e98d8c8fccdd299d30a4475818d1526e79d"
        ],
        [
            "Fact in_prefix_0 ll : nil <p ll.",
            "VernacStartTheoremProof",
            "0639c50e338137205a4f75a19905cb57561378a4"
        ],
        [
            "exists ll; auto.",
            "VernacExtend",
            "775d87d8b81adf3adc143500df2b3459acd02ac4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact in_prefix_1 x l ll : l <p ll -> x::l <p x::ll.",
            "VernacStartTheoremProof",
            "184fe3daf0321df49e552b50d289c3509708dcde"
        ],
        [
            "intros (r & ?); subst; exists r; auto.",
            "VernacExtend",
            "382d2f3e1c4bd128bc446445878786e817a9fcff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_length l m : l <p m -> length l <= length m.",
            "VernacStartTheoremProof",
            "d531420c3f1c2404a77ba04de66d2918d8f52f28"
        ],
        [
            "intros (? & ?); subst; rew length; omega.",
            "VernacExtend",
            "9ad054c604bcab79cb5ff9231755d4be3f11a263"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_app_lft l r1 r2 : r1 <p r2 -> l++r1 <p l++r2.",
            "VernacStartTheoremProof",
            "12efc4d3e053191e277201aec27fdb2af7ff37a6"
        ],
        [
            "intros (a & ?); subst.",
            "VernacExtend",
            "7ae1ce404e1b20b275c4876da4d3bbb090ccd518"
        ],
        [
            "exists a; rewrite app_ass; auto.",
            "VernacExtend",
            "2ff916632302b90367365b30d49018f3a26f195b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_inv x y l ll : x::l <p y::ll -> x = y /\\ l <p ll.",
            "VernacStartTheoremProof",
            "1a4181569ebe3a2d689aca3bc8fd5641b98d90fc"
        ],
        [
            "intros (r & Hr).",
            "VernacExtend",
            "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
        ],
        [
            "inversion Hr; split; auto.",
            "VernacExtend",
            "1515578aadf9a17ca50c1c06e2015b19181ebae6"
        ],
        [
            "exists r; auto.",
            "VernacExtend",
            "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_list_inv l r rr : l++r <p l++rr -> r <p rr.",
            "VernacStartTheoremProof",
            "2890c00bc0df66b0ff768c1c3de93998a8215c5b"
        ],
        [
            "induction l as [ | x l IHl ]; simpl; auto.",
            "VernacExtend",
            "11dc58da78c6b55a0c11aa26d4a26e9a8f0eae99"
        ],
        [
            "intros H; apply prefix_inv, proj2, IHl in H; auto.",
            "VernacExtend",
            "d0356dff6296c7a438ef99f44a7b6f3007b3a430"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_refl l : l <p l.",
            "VernacStartTheoremProof",
            "9f0a5ad19bec7e805260cb7bfe5701dd7b604945"
        ],
        [
            "exists nil; rewrite <- app_nil_end; auto.",
            "VernacExtend",
            "9c0818bddd4818b2833dbed8ee5ff9809d37a022"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_trans l1 l2 l3 : l1 <p l2 -> l2 <p l3 -> l1 <p l3.",
            "VernacStartTheoremProof",
            "5fe3308ccc54acc71078ea5d8995b0b741d0a711"
        ],
        [
            "intros (m1 & H1) (m2 & H2); subst; exists (m1++m2); solve list eq.",
            "VernacExtend",
            "da1a793cf2733a65e67cba7d50b258f6121b6071"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section prefix_rect.",
            "VernacBeginSection",
            "5725fb14fff5e2ebbe2cbfbc9d187cf136d8fe7d"
        ],
        [
            "Variables (P : list X -> list X -> Type) (HP0 : forall ll, P nil ll) (HP1 : forall x l ll, l <p ll -> P l ll -> P (x::l) (x::ll)).",
            "VernacAssumption",
            "335077f20bbb52a8322aa93036770ced368abbca"
        ],
        [
            "Definition prefix_rect l ll : prefix l ll -> P l ll.",
            "VernacDefinition",
            "51af9a9afef845f14cec3fb2d0d0ce98b1bbaea5"
        ],
        [
            "revert l; induction ll as [ | x ll IHll ]; intros l H.",
            "VernacExtend",
            "5ef61bbae62cfbb2574959c177a7cead3847bae5"
        ],
        [
            "replace l with (nil : list X).",
            "VernacExtend",
            "c0d761faeeb1db86fa1087cc1c8716096aecaa72"
        ],
        [
            "apply HP0.",
            "VernacExtend",
            "4bbf46b82d48eed259daa56c8ee399d607fb460b"
        ],
        [
            "destruct H as (r & Hr).",
            "VernacExtend",
            "39bcc983038f09a836a7f6feec3863990a61368b"
        ],
        [
            "destruct l; auto; discriminate.",
            "VernacExtend",
            "ecc9b67aeef9d9ab5b24238afb576bd0420616e3"
        ],
        [
            "destruct l as [ | y l ].",
            "VernacExtend",
            "a7829247f3daa12b4632d29d19e6512c55d7f820"
        ],
        [
            "apply HP0.",
            "VernacExtend",
            "4bbf46b82d48eed259daa56c8ee399d607fb460b"
        ],
        [
            "apply prefix_inv in H.",
            "VernacExtend",
            "a7a2fe0bd7be9d31a87c35c64f453e80f3aacb9b"
        ],
        [
            "destruct H as (? & E); subst y.",
            "VernacExtend",
            "8f84f781aa163cc3fc17ee698223cda03d1cb4e8"
        ],
        [
            "apply HP1; [ | apply IHll ]; trivial.",
            "VernacExtend",
            "45e0090d0efb5499b232062a887a131d378af134"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End prefix_rect.",
            "VernacEndSegment",
            "14a01cb979056ceaeee215ca14a50c5abf8cd01d"
        ],
        [
            "Fact prefix_app_inv l1 l2 r1 r2 : l1++l2 <p r1++r2 -> { l1 <p r1 } + { r1 <p l1 }.",
            "VernacStartTheoremProof",
            "66d1c9094efe23c5151ac8995086de7d03968430"
        ],
        [
            "revert l2 r1 r2; induction l1 as [ | x l1 IH ].",
            "VernacExtend",
            "2288a1fb75c8e2653af806058f9023ff0e082372"
        ],
        [
            "left; apply in_prefix_0.",
            "VernacExtend",
            "1c1d291c41c76010ea4a2de6fc7fc5b2046f9556"
        ],
        [
            "intros l2 [ | y r1 ] r2.",
            "VernacExtend",
            "5d0af45b97440625d4236324f6a77a3c5ad66d5b"
        ],
        [
            "right; apply in_prefix_0.",
            "VernacExtend",
            "751ca0f23c405f762dc5f2a673b8d7a9cac83ad5"
        ],
        [
            "simpl; intros H; apply prefix_inv in H.",
            "VernacExtend",
            "ac73feeee21e52bbd434b51f14005580f31893f7"
        ],
        [
            "destruct H as (E & H); subst y.",
            "VernacExtend",
            "7a5c6e51c885ee6ee33deff07f7ab23bd29e7855"
        ],
        [
            "destruct IH with (1 := H); [ left | right ]; apply in_prefix_1; auto.",
            "VernacExtend",
            "b81895ed79590222977114ec7af7057756b9a17a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End prefix.",
            "VernacEndSegment",
            "64190237c1b47e00e9e62c6186b7c39fb677f3a3"
        ],
        [
            "Definition prefix_spec X (l ll : list X) : l <p ll -> { r | ll = l ++ r }.",
            "VernacDefinition",
            "f8eaa954672bb30984105497f76447a86f1342e9"
        ],
        [
            "induction 1 as [ ll | x l ll _ (r & Hr) ] using prefix_rect.",
            "VernacExtend",
            "caf39a050c369cffc81fcb1e0540ca8e18815ec2"
        ],
        [
            "exists ll; trivial.",
            "VernacExtend",
            "dad089123889730e5ce5c5c19762c4756f558923"
        ],
        [
            "exists r; simpl; f_equal; auto.",
            "VernacExtend",
            "8e83dec3afe1c62b370350800df7afa4e920c529"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact prefix_app_lft_inv X (l1 l2 m : list X) : l1++l2 <p m -> { m2 | m = l1++m2 /\\ l2 <p m2 }.",
            "VernacStartTheoremProof",
            "d5ec1420d813ee51bff0059a68d817030eeda74a"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply prefix_spec in H.",
            "VernacExtend",
            "15f19ce5f0b052bc821b9a88d44126da1da7299a"
        ],
        [
            "destruct H as (r & H).",
            "VernacExtend",
            "174b1febac8631da3960f601c4729858e373787d"
        ],
        [
            "exists (l2++r); simpl.",
            "VernacExtend",
            "0196edef16b7e4d6d9f00e477396edfa73b60f45"
        ],
        [
            "solve list eq in H; split; auto.",
            "VernacExtend",
            "7fd0b3e3e1a1f15835b5b37022186de473519dc6"
        ],
        [
            "exists r; auto.",
            "VernacExtend",
            "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section list_assoc.",
            "VernacBeginSection",
            "a5b784ae1a30d011b2e39de1dbf38b24fb6d7b14"
        ],
        [
            "Variables (X Y : Type) (eq_X_dec : eqdec X).",
            "VernacAssumption",
            "3ad79da1bfb7baa00b9956bdacb5975d9a96eff8"
        ],
        [
            "Fixpoint list_assoc x l : option Y := match l with | nil => None | (y,a)::l => if eq_X_dec x y then Some a else list_assoc x l end.",
            "VernacFixpoint",
            "985f30e190ed1bd7ed1a635ca0160354d02b8c06"
        ],
        [
            "Fact list_assoc_eq x y l x' : x = x' -> list_assoc x' ((x,y)::l) = Some y.",
            "VernacStartTheoremProof",
            "49d769cca3ed19b492276bca03c1fdc629002c22"
        ],
        [
            "intros []; simpl.",
            "VernacExtend",
            "4742f252ba63bf5db7b5452add04e099f08c175b"
        ],
        [
            "destruct (eq_X_dec x x) as [ | [] ]; auto.",
            "VernacExtend",
            "f0eaab4c51bc6d948deedbf38035403f0f77b0e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_assoc_neq x y l x' : x <> x' -> list_assoc x' ((x,y)::l) = list_assoc x' l.",
            "VernacStartTheoremProof",
            "2b5da4fd4c0b11e7af9b37a144cd83d4ff094213"
        ],
        [
            "intros H; simpl.",
            "VernacExtend",
            "92f5c16dd76e07ceb7f5c8e77667a1153e29ff98"
        ],
        [
            "destruct (eq_X_dec x' x) as [ | ]; auto.",
            "VernacExtend",
            "8d12008d7efc21799531491bee194f2fcd688991"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_assoc_In x l : match list_assoc x l with | None => ~ In x (map fst l) | Some y => In (x,y) l end.",
            "VernacStartTheoremProof",
            "b23c6767c98354332281c185595b3d3885d764fc"
        ],
        [
            "induction l as [ | (x',y) l IHl ]; simpl; auto.",
            "VernacExtend",
            "0ef3d1f1fdb3a6384ab54ab6350c0f79ac527284"
        ],
        [
            "destruct (eq_X_dec x x'); subst; auto.",
            "VernacExtend",
            "f73bd368df6018db6a74efd4e5d347872032d891"
        ],
        [
            "destruct (list_assoc x l); auto.",
            "VernacExtend",
            "caf539c4522bc9bd453407fe81574fbbe3870560"
        ],
        [
            "intros [ ? | ]; subst; tauto.",
            "VernacExtend",
            "f718271cdf7ee210f1221e6a55835f90f256a6c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact In_list_assoc x l : In x (map fst l) -> { y | list_assoc x l = Some y /\\ In (x,y) l }.",
            "VernacStartTheoremProof",
            "8cfa9203537c3ef019ca448ece91ceb01e4c2abf"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "generalize (list_assoc_In x l).",
            "VernacExtend",
            "ba57d9d97439f32e67c2ac9c6739c73d841e7d90"
        ],
        [
            "destruct (list_assoc x l) as [ y | ].",
            "VernacExtend",
            "70061533fde697ccb4e862e28a35b76a076f0382"
        ],
        [
            "exists y; auto.",
            "VernacExtend",
            "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact not_In_list_assoc x l : ~ In x (map fst l) -> list_assoc x l = None.",
            "VernacStartTheoremProof",
            "ca4457cfe42b69bc32cd7d0a40b5dd4244e0dd77"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "generalize (list_assoc_In x l).",
            "VernacExtend",
            "ba57d9d97439f32e67c2ac9c6739c73d841e7d90"
        ],
        [
            "destruct (list_assoc x l) as [ y | ]; auto.",
            "VernacExtend",
            "fa72cd0dc38719e5e3b26cff0f57f6579a7a9c53"
        ],
        [
            "intros H1; contradict H.",
            "VernacExtend",
            "199fedc1e01133fcc776e70787a87d4661908276"
        ],
        [
            "apply in_map_iff.",
            "VernacExtend",
            "b128e1e6f601182342113d742a28792f5aaec52c"
        ],
        [
            "exists (x,y); simpl; auto.",
            "VernacExtend",
            "ad0b86145987d0631d36b0f224b9bbc73c8cf522"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact list_assoc_app x ll mm : list_assoc x (ll++mm) = match list_assoc x ll with | None => list_assoc x mm | Some y => Some y end.",
            "VernacStartTheoremProof",
            "e4416adc97844463ee36aca352c0327e18c022e6"
        ],
        [
            "induction ll as [ | (x',?) ]; simpl; auto.",
            "VernacExtend",
            "15b5194fcfac228ed19d2e319eb7390704afacab"
        ],
        [
            "destruct (eq_X_dec x x'); auto.",
            "VernacExtend",
            "5be375a7547c9f48701dc0c495fdd322afec1d9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End list_assoc.",
            "VernacEndSegment",
            "52e4c2ab7368af2cd77de6a58b6bfd3ff25f376f"
        ],
        [
            "Section list_first_dec.",
            "VernacBeginSection",
            "fe918c6834c8384850871bc79c976c69fa980e7d"
        ],
        [
            "Variable (X : Type) (P : X -> Prop) (Pdec : forall x, { P x } + { ~ P x }).",
            "VernacAssumption",
            "13b837afb162953dfc2e1cc5f9deb145901c5cf2"
        ],
        [
            "Theorem list_choose_dec ll : { l : _ & { x : _ & { r | ll = l++x::r /\\ P x /\\ forall y, In y l -> ~ P y } } } + { forall x, In x ll -> ~ P x }.",
            "VernacStartTheoremProof",
            "f2edea66d714728aac160dd383aa071abf0bb79b"
        ],
        [
            "induction ll as [ | a ll IH ]; [ | destruct (Pdec a) as [ Ha | Ha ]; [ | destruct IH as [ (l & x & r & H1 & H2 & H3) | H ]] ].",
            "VernacExtend",
            "ca16dfeeef069c57586804a9b45ed549628af884"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; intros _ [].",
            "VernacExtend",
            "f0512146ab6f8c2165639681a0d9565877b8c0a0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; exists nil, a, ll; repeat split; auto.",
            "VernacExtend",
            "990d9cf0ecd74f5370a2a299c24d2deb53e86bec"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "left; exists (a::l), x, r; repeat split; subst; auto.",
            "VernacExtend",
            "2fe189d29e584b9528c87c1cbb3c157df94e0ba5"
        ],
        [
            "intros ? [ | ]; subst; auto.",
            "VernacExtend",
            "4eb19de98f5397a40d018704d152dfe5aff1f193"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "right; intros ? [ | ]; subst; auto.",
            "VernacExtend",
            "871d75e1a3a899f4b7880aff25ffb0ca67908edf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem list_first_dec a ll : P a -> In a ll -> { l : _ & { x : _ & { r | ll = l++x::r /\\ P x /\\ forall y, In y l -> ~ P y } } }.",
            "VernacStartTheoremProof",
            "14ae9183d3760427824e41815d955c313801ac24"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "destruct (list_choose_dec ll) as [ H | H ]; trivial.",
            "VernacExtend",
            "62ccd5d79b8131048dc3ea7d588b6c17072b1f63"
        ],
        [
            "destruct (H _ H2 H1).",
            "VernacExtend",
            "8c02a2f6c793dc57a62cce0bb97b5955f8a6f133"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End list_first_dec.",
            "VernacEndSegment",
            "64e2825984025bf07a0def79cd9f6481a3798300"
        ],
        [
            "Section map.",
            "VernacBeginSection",
            "f5fc9f8ae91f4db732e57b3d613fdbd6a5c0f645"
        ],
        [
            "Variable (X Y : Type) (f : X -> Y).",
            "VernacAssumption",
            "2148784704599f1dd611e7a142ff864c3bb83984"
        ],
        [
            "Fact map_cons_inv ll y m : map f ll = y::m -> { x : _ & { l | ll = x::l /\\ f x = y /\\ map f l = m } }.",
            "VernacStartTheoremProof",
            "8c6e5884e2a605dfe153bf5fb146024850c14c4a"
        ],
        [
            "destruct ll as [ | x l ]; try discriminate; simpl.",
            "VernacExtend",
            "cb2e6bae523e993b7956d27dba15ebbd117e89fe"
        ],
        [
            "intros H; inversion H; subst; exists x, l; auto.",
            "VernacExtend",
            "146deb5f120885ea2b072e52914f2236db06a2ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_app_inv ll m n : map f ll = m++n -> { l : _ & { r | ll = l++r /\\ m = map f l /\\ n = map f r } }.",
            "VernacStartTheoremProof",
            "f46ef9fa13937f8b52a28144efdd0fe7bb6ab981"
        ],
        [
            "revert m n; induction ll as [ | x ll IH ]; intros m n H.",
            "VernacExtend",
            "47fa682901882f0877d42373a7f8d1ea074c19f0"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct m; destruct n; try discriminate; exists nil, nil; auto.",
            "VernacExtend",
            "9aedcf9eeb8e7225aaec4880f8ed36203fa39f0c"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct m as [ | y m ]; simpl in H.",
            "VernacExtend",
            "aba60cc93372f82b23203752f4cc0da44316cfec"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "exists nil, (x::ll); auto.",
            "VernacExtend",
            "9c3629cfbf29649710c11bf2754143e4ec4815cd"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion H; subst y.",
            "VernacExtend",
            "980940cdd4b278d873f2954d960acf5032bcefee"
        ],
        [
            "destruct IH with (1 := H2) as (l & r & H3 & H4 & H5); subst.",
            "VernacExtend",
            "eada92f76e1311f78446353806a6a775ae1d5bfe"
        ],
        [
            "exists (x::l), r; auto.",
            "VernacExtend",
            "22d9b17b6a4c6023362a9743f8b08cf39397d670"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact map_middle_inv ll m y n : map f ll = m++y::n -> { l : _ & { x : _ & { r | ll = l++x::r /\\ map f l = m /\\ f x = y /\\ map f r = n } } }.",
            "VernacStartTheoremProof",
            "9a7734deb2cc8219d5b4397aa6e86016dbe60791"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct map_app_inv with (1 := H) as (l & r & H1 & H2 & H3).",
            "VernacExtend",
            "873a83c3e85b25a4ff24281b53c3b5535c92cb9d"
        ],
        [
            "symmetry in H3.",
            "VernacExtend",
            "2bac5a46aadf5df25526493447e5f1dd051c3b0d"
        ],
        [
            "destruct map_cons_inv with (1 := H3) as (x & r' & H4 & H5 & H6); subst.",
            "VernacExtend",
            "8c63cc02c3da26284db24a6993355f1ea62ace3d"
        ],
        [
            "exists l, x, r'; auto.",
            "VernacExtend",
            "3d5131bd209bb587ed59432a4ec75be708f5f7fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End map.",
            "VernacEndSegment",
            "afa41641b24ef03928e443a9185b59e1842896d3"
        ],
        [
            "Fact Forall2_mono X Y (R S : X -> Y -> Prop) : (forall x y, R x y -> S x y) -> forall l m, Forall2 R l m -> Forall2 S l m.",
            "VernacStartTheoremProof",
            "4cf11075c9a2695918de9323d82b94149dd291f2"
        ],
        [
            "induction 2; constructor; auto.",
            "VernacExtend",
            "ba07e6cc57f3a6ab3e51e98f89df6fabbe983f93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_nil_inv_l X Y R m : @Forall2 X Y R nil m -> m = nil.",
            "VernacStartTheoremProof",
            "4927469ceec5c1eb76c6940f48fe7491a250c9c6"
        ],
        [
            "inversion_clear 1; reflexivity.",
            "VernacExtend",
            "7ca6b84b4da45c5274986dc922f603b175296829"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_nil_inv_r X Y R m : @Forall2 X Y R m nil -> m = nil.",
            "VernacStartTheoremProof",
            "297a5c5db3026fdb28e2c0f3de43da004e74db2e"
        ],
        [
            "inversion_clear 1; reflexivity.",
            "VernacExtend",
            "7ca6b84b4da45c5274986dc922f603b175296829"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_cons_inv X Y R x l y m : @Forall2 X Y R (x::l) (y::m) <-> R x y /\\ Forall2 R l m.",
            "VernacStartTheoremProof",
            "5baf1de3c3048bcb797269122cb596afc65a1414"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "inversion_clear 1; auto.",
            "VernacExtend",
            "4921ce0be8cffd4249e2e4afa679d399ab21a1da"
        ],
        [
            "intros []; constructor; auto.",
            "VernacExtend",
            "5249b4040c94379429485674dc33e1eb9b3d2a0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_app_inv_l X Y R l1 l2 m : @Forall2 X Y R (l1++l2) m -> { m1 : _ & { m2 | Forall2 R l1 m1 /\\ Forall2 R l2 m2 /\\ m = m1++m2 } }.",
            "VernacStartTheoremProof",
            "7e48f0d03e7988e4a3c7c09c7e882161d02f51a8"
        ],
        [
            "revert l2 m; induction l1 as [ | x l1 IH ]; simpl; intros l2 m H.",
            "VernacExtend",
            "95f31676da8d2c77956984e3f57acd2603457367"
        ],
        [
            "exists nil, m; repeat split; auto.",
            "VernacExtend",
            "5921530080039e7cdb7d106cd9b8641f89170707"
        ],
        [
            "destruct m as [ | y m ].",
            "VernacExtend",
            "8a494183cb3a2894784d6c29f6fb3bdf57a90fb4"
        ],
        [
            "apply Forall2_nil_inv_r in H; discriminate H.",
            "VernacExtend",
            "5486e5a730f610defc64c7f50bd4b1de7c9c3e9f"
        ],
        [
            "apply Forall2_cons_inv in H; destruct H as [ H1 H2 ].",
            "VernacExtend",
            "a5ea9e56ec5b81a4eab55a212d18a8cf07a77039"
        ],
        [
            "apply IH in H2.",
            "VernacExtend",
            "b939455ac2d522ba00eb17d60b0d13971b48e06a"
        ],
        [
            "destruct H2 as (m1 & m2 & H2 & H3 & H4); subst m.",
            "VernacExtend",
            "c7affb7b93d9987408ad1d9a94ed3feb7a79003c"
        ],
        [
            "exists (y::m1), m2; repeat split; auto.",
            "VernacExtend",
            "0b684c99ac5c0a9a7c7020ef9fd7cf445cf72458"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_app_inv_r X Y R l m1 m2 : @Forall2 X Y R l (m1++m2) -> { l1 : _ & { l2 | Forall2 R l1 m1 /\\ Forall2 R l2 m2 /\\ l = l1++l2 } }.",
            "VernacStartTheoremProof",
            "d1ae501d8394c85921a194c3efdb60cd4cd586a3"
        ],
        [
            "revert m2 l; induction m1 as [ | y m1 IH ]; simpl; intros m2 l H.",
            "VernacExtend",
            "a76660406f6c59280f8c79f27dc4aa9063e9092d"
        ],
        [
            "exists nil, l; repeat split; auto.",
            "VernacExtend",
            "4c286b26f93455faff3f0a04fd8eb9a72a73b0fc"
        ],
        [
            "destruct l as [ | x l ].",
            "VernacExtend",
            "59f700f45a9fb245336528f142e49de378190342"
        ],
        [
            "apply Forall2_nil_inv_l in H; discriminate H.",
            "VernacExtend",
            "fae904f39ffcabce04f4bf836dff4f5e6c33f0eb"
        ],
        [
            "apply Forall2_cons_inv in H; destruct H as [ H1 H2 ].",
            "VernacExtend",
            "a5ea9e56ec5b81a4eab55a212d18a8cf07a77039"
        ],
        [
            "apply IH in H2.",
            "VernacExtend",
            "b939455ac2d522ba00eb17d60b0d13971b48e06a"
        ],
        [
            "destruct H2 as (l1 & l2 & H2 & H3 & H4); subst l.",
            "VernacExtend",
            "fe733dcbad9e64f832a33622ad73d69f07391a1e"
        ],
        [
            "exists (x::l1), l2; repeat split; auto.",
            "VernacExtend",
            "3a6758a036b1d038583dde293138c17e9d5e9a6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_cons_inv_l X Y R a ll mm : @Forall2 X Y R (a::ll) mm -> { b : _ & { mm' | R a b /\\ mm = b::mm' /\\ Forall2 R ll mm' } }.",
            "VernacStartTheoremProof",
            "f42c69a9834328391d265685c8b4c710302cf1a1"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Forall2_app_inv_l with (l1 := a::nil) (l2 := ll) in H.",
            "VernacExtend",
            "3e3c10d8ea6943ae180bfc0ed4002db6db59cac8"
        ],
        [
            "destruct H as (l & mm' & H1 & H2 & H3).",
            "VernacExtend",
            "0db2533f2cc53b7204ee8b190c25a20a71c68492"
        ],
        [
            "destruct l as [ | y l ].",
            "VernacExtend",
            "a7829247f3daa12b4632d29d19e6512c55d7f820"
        ],
        [
            "exfalso; inversion H1.",
            "VernacExtend",
            "a7f335f520cca0b986ec0ee53720fdba19ad9ab4"
        ],
        [
            "apply Forall2_cons_inv in H1.",
            "VernacExtend",
            "dc5df4794018c833043a83acafeb87685802a319"
        ],
        [
            "destruct H1 as [ H1 H4 ].",
            "VernacExtend",
            "b5d38e40784d1484e5394dbefff2d00023ec8b0c"
        ],
        [
            "apply Forall2_nil_inv_l in H4; subst l.",
            "VernacExtend",
            "bae36906f012ab9bdd29e7456a45ef1818e802bf"
        ],
        [
            "exists y, mm'; auto.",
            "VernacExtend",
            "2e185a4f4ad5f2adac2c1cc12d7872a20fcc9826"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_cons_inv_r X Y R b ll mm : @Forall2 X Y R ll (b::mm) -> { a : _ & { ll' | R a b /\\ ll = a::ll' /\\ Forall2 R ll' mm } }.",
            "VernacStartTheoremProof",
            "44d26ac1695884481acafbeb4e2cd2789af19092"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Forall2_app_inv_r with (m1 := b::nil) (m2 := mm) in H.",
            "VernacExtend",
            "26bd941db49a7e5913d0ba26adf46e6665dcb9d5"
        ],
        [
            "destruct H as (l & ll' & H1 & H2 & H3).",
            "VernacExtend",
            "56f6b44752ed18e5f7f691559c927aeab04e971d"
        ],
        [
            "destruct l as [ | x l ].",
            "VernacExtend",
            "59f700f45a9fb245336528f142e49de378190342"
        ],
        [
            "exfalso; inversion H1.",
            "VernacExtend",
            "a7f335f520cca0b986ec0ee53720fdba19ad9ab4"
        ],
        [
            "apply Forall2_cons_inv in H1.",
            "VernacExtend",
            "dc5df4794018c833043a83acafeb87685802a319"
        ],
        [
            "destruct H1 as [ H1 H4 ].",
            "VernacExtend",
            "b5d38e40784d1484e5394dbefff2d00023ec8b0c"
        ],
        [
            "apply Forall2_nil_inv_r in H4; subst l.",
            "VernacExtend",
            "ed373bd2953d49f1f4899b8276e8fb7412534e0c"
        ],
        [
            "exists x, ll'; auto.",
            "VernacExtend",
            "a95e4137a973852867262e31b6a456b5571231e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_map_left X Y Z (R : Y -> X -> Prop) (f : Z -> Y) ll mm : Forall2 R (map f ll) mm <-> Forall2 (fun x y => R (f x) y) ll mm.",
            "VernacStartTheoremProof",
            "a061a2d957ff3e413339eb6fac9b6d14cc475f38"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert mm.",
            "VernacExtend",
            "0a8700920ed87ca205685f1ee7a7970f8c663670"
        ],
        [
            "induction ll; intros [ | y mm ] H; simpl in H; auto; try (inversion H; fail).",
            "VernacExtend",
            "f00d4e236d83c8527ed48913ca7aa948ec6f15fc"
        ],
        [
            "apply Forall2_cons_inv in H; constructor.",
            "VernacExtend",
            "08a5774e3ede500b5c0438f1750de97819a7bc09"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply IHll; tauto.",
            "VernacExtend",
            "484672f798ae76e307fd558897b9d511e2ae6591"
        ],
        [
            "induction 1; constructor; auto.",
            "VernacExtend",
            "ff51879142eef61207638aeecdcf6617e01ec60f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_map_right X Y Z (R : Y -> X -> Prop) (f : Z -> X) mm ll : Forall2 R mm (map f ll) <-> Forall2 (fun y x => R y (f x)) mm ll.",
            "VernacStartTheoremProof",
            "ea2a1558be53505495383392b21c95cc685e1410"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "revert mm.",
            "VernacExtend",
            "0a8700920ed87ca205685f1ee7a7970f8c663670"
        ],
        [
            "induction ll; intros [ | y mm ] H; simpl in H; auto; try (inversion H; fail).",
            "VernacExtend",
            "f00d4e236d83c8527ed48913ca7aa948ec6f15fc"
        ],
        [
            "apply Forall2_cons_inv in H; constructor.",
            "VernacExtend",
            "08a5774e3ede500b5c0438f1750de97819a7bc09"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply IHll; tauto.",
            "VernacExtend",
            "484672f798ae76e307fd558897b9d511e2ae6591"
        ],
        [
            "induction 1; constructor; auto.",
            "VernacExtend",
            "ff51879142eef61207638aeecdcf6617e01ec60f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_map_both X Y X' Y' (R : X -> Y -> Prop) (f : X' -> X) (g : Y' -> Y) ll mm : Forall2 R (map f ll) (map g mm) <-> Forall2 (fun x y => R (f x) (g y)) ll mm.",
            "VernacStartTheoremProof",
            "8a3b1cee5b58ccc458857db0232753bf09c0a17e"
        ],
        [
            "rewrite Forall2_map_left, Forall2_map_right; split; auto.",
            "VernacExtend",
            "b3d585b7fa4fe9158249e3db6b4db3c320a1642b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall2_Forall X (R : X -> X -> Prop) ll : Forall2 R ll ll <-> Forall (fun x => R x x) ll.",
            "VernacStartTheoremProof",
            "4977ca294aefa63c306f3dd64bbea897800a0034"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "induction ll as [ | x ll ]; inversion_clear 1; auto.",
            "VernacExtend",
            "1f423bd9b9d0fa7e24134621018805d44bfd2275"
        ],
        [
            "induction 1; auto.",
            "VernacExtend",
            "1f706f8985097cf30b2449a4fda927a48fc6a84a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_app X (P : X -> Prop) ll mm : Forall P (ll++mm) <-> Forall P ll /\\ Forall P mm.",
            "VernacStartTheoremProof",
            "d0097fc2a33daf849c4f49a81e5c921a207d8570"
        ],
        [
            "repeat rewrite Forall_forall.",
            "VernacExtend",
            "063fabbb102a6768bd3bac8b74ea10db98547218"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros (H1 & H2) x Hx.",
            "VernacExtend",
            "92a96118f24b9179cb48d6788e9d70b415568a5c"
        ],
        [
            "apply in_app_or in Hx; firstorder.",
            "VernacExtend",
            "61fdd5c679a4766ba726c64a078556ecdd09a71c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_cons_inv X (P : X -> Prop) x ll : Forall P (x::ll) <-> P x /\\ Forall P ll.",
            "VernacStartTheoremProof",
            "8d58d45539d6e2900e268f465b9aedfd9f95da26"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "inversion 1; auto.",
            "VernacExtend",
            "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "constructor; tauto.",
            "VernacExtend",
            "1e982ea766270186b868b62a40d8da2f3d24de9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_rev X (P : X -> Prop) ll : Forall P ll -> Forall P (rev ll).",
            "VernacStartTheoremProof",
            "e6ad702e5036854c5703d73db8a79887a332de92"
        ],
        [
            "induction 1 as [ | x ll Hll IH ].",
            "VernacExtend",
            "cdb75cd7ee4f12535385fb10da440e3ba886a8ef"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Forall_app; split; auto.",
            "VernacExtend",
            "d2d4a998b47233c6fabba21b531b48556c1ed8f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_map X Y (f : X -> Y) (P : Y -> Prop) ll : Forall P (map f ll) <-> Forall (fun x => P (f x)) ll.",
            "VernacStartTheoremProof",
            "a42988cdfba5cf23402cf8dfc309639263d9b2cb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction ll; simpl; try rewrite Forall_cons_inv; constructor; tauto.",
            "VernacExtend",
            "76d629b4602827e6b152bf8a7afe648fb7d214e5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "induction 1; simpl; constructor; auto.",
            "VernacExtend",
            "965f3aee9c3d4e11efe020bb9c0ebc94e8ee0ca8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_forall_map X (f : nat -> X) n l (P : X -> Prop) : l = map f (list_an 0 n) -> (forall i, i < n -> P (f i)) <-> Forall P l.",
            "VernacStartTheoremProof",
            "7cf543d65ac25afa126a54bcdc2d5c2345d28099"
        ],
        [
            "intros Hl; rewrite Forall_forall.",
            "VernacExtend",
            "4080fc2f68cfffc447eafa0fda81ec482940d207"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros H x; rewrite Hl, in_map_iff.",
            "VernacExtend",
            "8ef73c99725bc785c63a29e22f7b42e0637081ee"
        ],
        [
            "intros (y & ? & H1).",
            "VernacExtend",
            "d8e65a9c9dd899b975df0c44bf37c5c153280c55"
        ],
        [
            "apply list_an_spec in H1; subst; apply H; omega.",
            "VernacExtend",
            "fa7f4d1d69ae83f08d677747b0550ae3cf8ca23e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros H x Hx; apply H; rewrite Hl, in_map_iff.",
            "VernacExtend",
            "41967899136dbeaa56528dc90b53688cce01c5ed"
        ],
        [
            "exists x; split; auto; apply list_an_spec; omega.",
            "VernacExtend",
            "8b9823a9e0dab01c1d433c6267c02bd49f7f71ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_impl X (P Q : X -> Prop) ll : (forall x, In x ll -> P x -> Q x) -> Forall P ll -> Forall Q ll.",
            "VernacStartTheoremProof",
            "983798d242d0631e56d27bc4e0b795120b0d8cc5"
        ],
        [
            "intros H; induction 1 as [ | x ll Hx Hll IH ]; constructor.",
            "VernacExtend",
            "fbd29bf87362a837784358892e1a385bd8bad94d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply H; simpl; auto.",
            "VernacExtend",
            "b4e4d430f67d3f7d469a047a0a124a6ab5e9b243"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply IH; intros ? ?; apply H; simpl; auto.",
            "VernacExtend",
            "1b7a643e79ba1f0d3800efaaab1296cae3a046f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact Forall_filter X (P : X -> Prop) (f : X -> bool) ll : Forall P ll -> Forall P (filter f ll).",
            "VernacStartTheoremProof",
            "1f6c7a8c358e4d86213c5a473a85800a3fde9f2d"
        ],
        [
            "induction 1; simpl; auto; destruct (f x); auto.",
            "VernacExtend",
            "107be8991921c82514d599ead5862dc2e4d66834"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "length_nil",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_cons",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_an_S",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_an_plus",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "revert a; induction n; intros a; simpl; auto.",
                        "VernacExtend",
                        "37ecb713869c79c301af6d55711974d6dd2bd8fe"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; do 3 f_equal; omega.",
                        "VernacExtend",
                        "a984d0e049486250bfb3234a96be588c7f16a3fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_an_length",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "revert a; induction n; intro; simpl; f_equal; auto.",
                        "VernacExtend",
                        "123dd520d68c9f82bf2a763bb134376077a8ea4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_an_spec",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "revert a; induction n as [ | n IHn ]; simpl; intros a; [ | rewrite IHn ]; omega.",
                        "VernacExtend",
                        "38947579268ebcf3ac1d7c8a76c40b8dd2803961"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_S_list_an",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "revert a; induction n; simpl; intro; f_equal; auto.",
                        "VernacExtend",
                        "491544b198345ddb87a63c1c8ee6e89ab79b58bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_an_app_inv",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "revert a l r; induction n as [ | n IHn ]; intros a l r; simpl.",
                        "VernacExtend",
                        "0f23175e0ae531dcdbbbce364724d7d0b88698eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct l; destruct r; intros; auto; discriminate.",
                        "VernacExtend",
                        "0c7a17bd22a4282a754eb893411f88a2ce342f02"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | x l ]; simpl; intros H1.",
                        "VernacExtend",
                        "e20dd1616cc846b47ceaf7951014333c726f040d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; simpl; rewrite Nat.add_0_r, list_an_length; auto.",
                        "VernacExtend",
                        "cd8e2e430f5a7e42d9e970fcc32b21aaf0c021e0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "injection H1; clear H1; intros H1 H0.",
                        "VernacExtend",
                        "2b37e815db6a50599bc8675fe3802b8eebe2ecd6"
                    ]
                },
                {
                    "command": [
                        "apply IHn in H1; destruct H1; split; f_equal; auto.",
                        "VernacExtend",
                        "b5beb34c5508d11d4b1364e70ce15f3e499656e9"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 at 1; f_equal; omega.",
                        "VernacExtend",
                        "71e5238d93b310437555ec4a04f535f8949c3701"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_fun_inv",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "induction l as [ | y l IHl ].",
                        "VernacExtend",
                        "314d5def31d867404d69a91592c11d480e07d2f9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (fun _ => x); auto.",
                        "VernacExtend",
                        "be1a0b80e01210de03051dfc6af66081a2470db4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct IHl as (f & Hf).",
                        "VernacExtend",
                        "75ffa0812eb4a619e5e4b6237fab59eec1c65c3d"
                    ]
                },
                {
                    "command": [
                        "exists (fun i => match i with 0 => y | S i => f i end); simpl.",
                        "VernacExtend",
                        "bfcfeb20ac98bf734a20ce348e0ed74606bef51d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf, <- map_S_list_an, map_length, list_an_length, map_map; auto.",
                        "VernacExtend",
                        "fd240c51ec37dddd3463fb69d3b907f6b5164a7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_upper_bound",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "induction l as [ | x l (m & Hm) ].",
                        "VernacExtend",
                        "ac712fe97ca9a536c7ef57bee4a05deb7947dff0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists 0; simpl; tauto.",
                        "VernacExtend",
                        "3b95e0408966dfbe693c3c622b075f5aaf74e3ae"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists (1+x+m); intros y [ [] | H ]; simpl; try omega.",
                        "VernacExtend",
                        "dbd0dac6ead8b779360d70e3e073fdb4812a0bfc"
                    ]
                },
                {
                    "command": [
                        "generalize (Hm _ H); intros; omega.",
                        "VernacExtend",
                        "1752c520a1aebe4a4a044c4049b80b6fde91a809"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_list_injective_0",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros [] ? ? ? ? ?; discriminate.",
                        "VernacExtend",
                        "9c258c4aabee1a6232503c2c4c6f0bc5530c56ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_list_injective_1",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 l a m b r H3.",
                        "VernacExtend",
                        "7e865557da09c807543a617c8d569a2337ce67be"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | u l ].",
                        "VernacExtend",
                        "397c6f9301d29e61339ffdb813a5e65144d927d7"
                    ]
                },
                {
                    "command": [
                        "inversion H3; subst.",
                        "VernacExtend",
                        "a12e3012374b4f52063356c543280e1f1d8af320"
                    ]
                },
                {
                    "command": [
                        "destruct m as [ | v m ].",
                        "VernacExtend",
                        "577d6cd64b148a2bacef10d187f1d248dafaa63a"
                    ]
                },
                {
                    "command": [
                        "contradict H1; subst; simpl; auto.",
                        "VernacExtend",
                        "5413d3c18e05583ca00d6432302dd320bc0a9848"
                    ]
                },
                {
                    "command": [
                        "contradict H1; subst; simpl; right; apply in_or_app; right; left; auto.",
                        "VernacExtend",
                        "275deb6d686c3b85bc266d3759e9400f44dce326"
                    ]
                },
                {
                    "command": [
                        "inversion H3; subst.",
                        "VernacExtend",
                        "a12e3012374b4f52063356c543280e1f1d8af320"
                    ]
                },
                {
                    "command": [
                        "apply (H2 l _ m _ r); auto.",
                        "VernacExtend",
                        "a01e249ced4b38c61d17dc36e9675af25413dbfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_injective_inv",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros H1; apply in_split in H1; destruct H1 as (l & r & ?); subst.",
                        "VernacExtend",
                        "16f3bd4c161ce2b8fe33dd544f6efcfe4f447b87"
                    ]
                },
                {
                    "command": [
                        "apply (H nil x l x r); auto.",
                        "VernacExtend",
                        "1818efd7443fb331eae8ca27217a3801f552287b"
                    ]
                },
                {
                    "command": [
                        "intros l a m b r ?; apply (H (x::l) a m b r); subst; solve list eq.",
                        "VernacExtend",
                        "fdabd98744a8570a8144dff407a979cd89ec4c0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_injective_rect",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "induction l as [ [ | x l ] IHl ] using (measure_rect (@length _)).",
                        "VernacExtend",
                        "5b0597cb13f718680dfadc9b0a3da5df4a5cea10"
                    ]
                },
                {
                    "command": [
                        "intro; apply HP0.",
                        "VernacExtend",
                        "26bf145c02db5bbbf1e5c81b6d4e21a57b11d0b8"
                    ]
                },
                {
                    "command": [
                        "intros; apply HP1.",
                        "VernacExtend",
                        "f231577d94e1ae068803898376e5d116834604d3"
                    ]
                },
                {
                    "command": [
                        "apply list_injective_inv, H.",
                        "VernacExtend",
                        "a63e41b345497884f3e9f48ec1b06ce150363e6e"
                    ]
                },
                {
                    "command": [
                        "apply IHl; simpl; auto.",
                        "VernacExtend",
                        "9a7287840c9690f7f39e8eff61b23a4db1a6e4ba"
                    ]
                },
                {
                    "command": [
                        "apply list_injective_inv with (1 := H).",
                        "VernacExtend",
                        "7f8a3bb376eb90e44ac48daa29d373b5174c6886"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_injective_map",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros Hf.",
                        "VernacExtend",
                        "0a34d3f570a7fa7521ff666decd218fe609c954f"
                    ]
                },
                {
                    "command": [
                        "induction 1 as [ | x l Hl IHl ] using list_injective_rect.",
                        "VernacExtend",
                        "9605f9874bf22ba18b91ecea835b8f39cfa9ab1c"
                    ]
                },
                {
                    "command": [
                        "apply in_list_injective_0.",
                        "VernacExtend",
                        "6e26c012cfbee6df403c1a39bd2c80b5ab0c3e8f"
                    ]
                },
                {
                    "command": [
                        "simpl; apply in_list_injective_1; auto.",
                        "VernacExtend",
                        "abb9124ea070327056e8660f2adf07b198e2bed7"
                    ]
                },
                {
                    "command": [
                        "contradict Hl.",
                        "VernacExtend",
                        "b0fd704608864a015715b0c7a14b60f0655e01f3"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff in Hl.",
                        "VernacExtend",
                        "0192ec650c578ab1d5d52e7ee498aa27b23e2c4d"
                    ]
                },
                {
                    "command": [
                        "destruct Hl as (y & Hl & ?).",
                        "VernacExtend",
                        "f870101a0ace5da1d9751d9500854cc3560ee0ce"
                    ]
                },
                {
                    "command": [
                        "apply Hf in Hl; subst; auto.",
                        "VernacExtend",
                        "8fe3dc8a642e47be6ab453cb3a106bc0c45e73b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_plus",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "revert x; induction a; intros x; simpl; auto.",
                        "VernacExtend",
                        "5a3f1ab3ba24ebcc4fb3f6faeb7bf82fc91202ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_swap",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "change (iter (f x) n) with (iter x (1+n)).",
                        "VernacExtend",
                        "f7b83ca535d37dff9fb21ab118579c0dae1bf413"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm, iter_plus; auto.",
                        "VernacExtend",
                        "cd3d735381bcacd58282cbe262e174be223ce0a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_repeat_plus",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "induction a; simpl; f_equal; auto.",
                        "VernacExtend",
                        "1b1b1845c0d6a4c2b6e8f8abffc1911650e30488"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_repeat_length",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; f_equal; auto.",
                        "VernacExtend",
                        "02a922f7a42a29ce198eba5186fad08cb54dfb80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_list_repeat",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros [].",
                        "VernacExtend",
                        "48af3c1e3d848d45f759454d390647c767ae130f"
                    ]
                },
                {
                    "command": [
                        "split; auto; omega.",
                        "VernacExtend",
                        "a021e2bca02416429c516045bb4950b09cdd4a32"
                    ]
                },
                {
                    "command": [
                        "split; try omega; apply IHn; auto.",
                        "VernacExtend",
                        "b6e289fec6acdeba3bddf5ffdb1ec325cdecdd14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_list_repeat",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; f_equal; auto.",
                        "VernacExtend",
                        "02a922f7a42a29ce198eba5186fad08cb54dfb80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_cst_repeat",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "induction ll; simpl; f_equal; auto.",
                        "VernacExtend",
                        "b793f34b55be4133f4b0e052a5ddba3f45ef1860"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_cst_snoc",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "induction ll; simpl; f_equal; auto.",
                        "VernacExtend",
                        "b793f34b55be4133f4b0e052a5ddba3f45ef1860"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_cst_rev",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "do 2 rewrite map_cst_repeat; rewrite rev_length; auto.",
                        "VernacExtend",
                        "82476a04ccd51c236d303f6439c9680a4d590342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_perm",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros H; apply in_split in H.",
                        "VernacExtend",
                        "b89b269532eab39edf6074489d693af874483c35"
                    ]
                },
                {
                    "command": [
                        "destruct H as (m & k & ?); subst.",
                        "VernacExtend",
                        "f237aebf0f2f57398168dd0c2e2b1504abb352ff"
                    ]
                },
                {
                    "command": [
                        "exists (m++k).",
                        "VernacExtend",
                        "f1cfafe06dfd58860ec52444f7f5e9ccea0d05c6"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_cons_app; auto.",
                        "VernacExtend",
                        "547f359afc2a6a8d87faa8e2eff2681c5a544415"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_app_eq_inv",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "revert l2 r1 r2; induction l1 as [ | x l1 IH ].",
                        "VernacExtend",
                        "2288a1fb75c8e2653af806058f9023ff0e082372"
                    ]
                },
                {
                    "command": [
                        "intros; left; exists l2; auto.",
                        "VernacExtend",
                        "b42821d4038681fcddb787f65596dedbfd154fd3"
                    ]
                },
                {
                    "command": [
                        "intros [ | y l2 ] r1 r2; simpl; intros H.",
                        "VernacExtend",
                        "6a6674649c7f1f1211a1cd0a979cb8627609fb2e"
                    ]
                },
                {
                    "command": [
                        "right; exists (x::l1); auto.",
                        "VernacExtend",
                        "b0ed440a2be13038fb5b06724102e56e823cac0d"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct (IH l2 r1 r2) as [ (m & Hm) | (m & Hm) ]; auto; [ left | right ]; exists m; split; f_equal; tauto.",
                        "VernacExtend",
                        "727177216386f0d5f990becee94c2c2cfd2f1479"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_app_cons_eq_inv",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply list_app_eq_inv in H.",
                        "VernacExtend",
                        "ac388bce9e2e2e83937a63eb521d25b744cd5e92"
                    ]
                },
                {
                    "command": [
                        "destruct H as [ H | (m & H1 & H2) ]; auto.",
                        "VernacExtend",
                        "e403ba73f9d0d9ba3852a19708b132b847bf6429"
                    ]
                },
                {
                    "command": [
                        "destruct m as [ | y m ].",
                        "VernacExtend",
                        "8a494183cb3a2894784d6c29f6fb3bdf57a90fb4"
                    ]
                },
                {
                    "command": [
                        "left; exists nil; simpl in *; split; auto.",
                        "VernacExtend",
                        "f7ef9bb68988d34b1cef50286aeccf97a797b21b"
                    ]
                },
                {
                    "command": [
                        "revert H1; do 2 rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "4b6c4b9c5ba509a5368c53965bd69955dffb7db1"
                    ]
                },
                {
                    "command": [
                        "inversion H2; subst.",
                        "VernacExtend",
                        "cbe105a5addb129fa1e578ba8ef36c4763179006"
                    ]
                },
                {
                    "command": [
                        "right; exists m; auto.",
                        "VernacExtend",
                        "8c71d71ee11338d4dcdc60e236b9e8e55b997db9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_cons_app_cons_eq_inv",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct l2 as [ | z m ]; simpl in H.",
                        "VernacExtend",
                        "2015f1ff5b4934aa3570dfd8c519a122802ecf77"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "left; inversion H; auto.",
                        "VernacExtend",
                        "72f4757ee18f10b93457bcb318cffb1f1a7df6cd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right; exists m; inversion H; auto.",
                        "VernacExtend",
                        "8c90c980ae9aa6f93b20003f7ba7c03f06e25b60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_app_inj",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "revert l2; induction l1 as [ | x l1 IH ]; intros [ | y l2 ]; try discriminate.",
                        "VernacExtend",
                        "4535cf056829a5bc4cd8aa33e84ae469892cf88b"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; inversion H1; inversion H2.",
                        "VernacExtend",
                        "bfc82a0ffa53de5656d75317e3fe1ae96d17af78"
                    ]
                },
                {
                    "command": [
                        "apply IH in H4; auto.",
                        "VernacExtend",
                        "4a5a0a9d754d86fddd7b0e5c2fe364887a30bc50"
                    ]
                },
                {
                    "command": [
                        "split; f_equal; tauto.",
                        "VernacExtend",
                        "aeab504da368d124055f02b1ebebccd552075081"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_split_length",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "revert k; induction ll as [ | x ll IHll ]; intros k.",
                        "VernacExtend",
                        "9e192919f999b3edd1142073eb2a72d25ee55e64"
                    ]
                },
                {
                    "command": [
                        "exists nil, nil; split; simpl in * |- *; auto; omega.",
                        "VernacExtend",
                        "e00813f6aeeaae88fafb0f61ad6504d6ee196e30"
                    ]
                },
                {
                    "command": [
                        "destruct k as [ | k ]; intros Hk.",
                        "VernacExtend",
                        "fb2e46d02506e27e9c8148199945905924987943"
                    ]
                },
                {
                    "command": [
                        "exists nil, (x::ll); simpl; split; auto.",
                        "VernacExtend",
                        "26fe89f1e70c4b16142fabcc09df07c332916a2c"
                    ]
                },
                {
                    "command": [
                        "destruct (IHll k) as (l & r & H1 & H2).",
                        "VernacExtend",
                        "a2799a22585d6bcb73922ffa2f927412b4f625f2"
                    ]
                },
                {
                    "command": [
                        "simpl in Hk; omega.",
                        "VernacExtend",
                        "e2d5567952f7e6bc1d344d0611d6239557422e6e"
                    ]
                },
                {
                    "command": [
                        "exists (x::l), r; split; simpl; auto; f_equal; auto.",
                        "VernacExtend",
                        "68f2cde0f1979f2dc2ba6c81e7c80d07a4aba124"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_pick",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "revert k; induction ll as [ | x ll IHll ]; intros k.",
                        "VernacExtend",
                        "9e192919f999b3edd1142073eb2a72d25ee55e64"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "destruct k as [ | k ]; intros H.",
                        "VernacExtend",
                        "e0695052a919c1aa26e10a4e1c140f0f9516e160"
                    ]
                },
                {
                    "command": [
                        "exists x, nil, ll; simpl; auto.",
                        "VernacExtend",
                        "bf083b77ce79aedaf06ea4c477eefa101e35a929"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "destruct IHll with (k := k) as (y & l & r & ? & ?); try omega.",
                        "VernacExtend",
                        "aae9b6f6e6d4681e4e2ae9bbfabe3cdbda3a48c8"
                    ]
                },
                {
                    "command": [
                        "exists y, (x::l), r; subst; simpl; split; auto.",
                        "VernacExtend",
                        "71e70e9e98ce440ffa671f04d803ba6772593216"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_split_middle",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros H1 H2 H.",
                        "VernacExtend",
                        "72dac5b298cbfc489f403a08ef6dadbbd39f71cd"
                    ]
                },
                {
                    "command": [
                        "apply list_app_eq_inv in H.",
                        "VernacExtend",
                        "ac388bce9e2e2e83937a63eb521d25b744cd5e92"
                    ]
                },
                {
                    "command": [
                        "destruct H as [ (m & H3 & H4) | (m & H3 & H4) ]; destruct m.",
                        "VernacExtend",
                        "ac9d691d8cd04b17f6bd1ed9dccb257471314545"
                    ]
                },
                {
                    "command": [
                        "inversion H4; subst; rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "b67e02d8457d112d9633fb3ffe11364bf61260d6"
                    ]
                },
                {
                    "command": [
                        "inversion H4; subst; destruct H1; apply in_or_app; right; left; auto.",
                        "VernacExtend",
                        "732972f8c631f82d1f1a27650bfbd732cdd7f267"
                    ]
                },
                {
                    "command": [
                        "inversion H4; subst; rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "b67e02d8457d112d9633fb3ffe11364bf61260d6"
                    ]
                },
                {
                    "command": [
                        "inversion H4; subst; destruct H2; apply in_or_app; right; left; auto.",
                        "VernacExtend",
                        "370f06e92c0cf527da8d71f2269a64c6a873d13f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flat_map_app",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl; auto; solve list eq; f_equal; auto.",
                        "VernacExtend",
                        "fa2e4769c5ae64a4838a6866d274b1433ea54a0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flat_map_app_inv",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "revert r1 y r2.",
                        "VernacExtend",
                        "138af3185e0e7e6a723bbeefae9b42e57d1990f4"
                    ]
                },
                {
                    "command": [
                        "induction l as [ | x l IHl ]; intros r1 y r2 H.",
                        "VernacExtend",
                        "2e2c414d682ac72764d8b12bc7afc0a00c482211"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct r1; discriminate.",
                        "VernacExtend",
                        "8ca95c83133d250ab3c7ebfa5cce521e0b755bb5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply list_app_cons_eq_inv in H.",
                        "VernacExtend",
                        "0a3f4204230a8d6af581d95bec2b331a18a2c86e"
                    ]
                },
                {
                    "command": [
                        "destruct H as [ (m & Hm1 & Hm2) | (m & Hm1 & Hm2) ].",
                        "VernacExtend",
                        "70991568940ec425c910ea651f850ffbce219437"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply IHl in Hm2.",
                        "VernacExtend",
                        "0f236f7bb511bebfabeeea4dc0083f91d1fb8bbc"
                    ]
                },
                {
                    "command": [
                        "destruct Hm2 as (l1 & m1 & x' & m2 & l2 & G1 & G2 & G3 & G4); subst.",
                        "VernacExtend",
                        "c31be6615e9442b98288c2c1b04589509dc9ba87"
                    ]
                },
                {
                    "command": [
                        "exists (x::l1), m1, x', m2, l2; simpl; repeat (split; auto).",
                        "VernacExtend",
                        "8b94e61250b2190ce2069f430ba2fec9ec33a66e"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass; auto.",
                        "VernacExtend",
                        "d1354baf0f42b5d934cf37889f921365ed87a2e8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists nil, r1, x, m, l; auto.",
                        "VernacExtend",
                        "6a062873bd42072ff587b9cfbfc525a4e9d9ee29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_prefix_0",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "exists ll; auto.",
                        "VernacExtend",
                        "775d87d8b81adf3adc143500df2b3459acd02ac4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_prefix_1",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros (r & ?); subst; exists r; auto.",
                        "VernacExtend",
                        "382d2f3e1c4bd128bc446445878786e817a9fcff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_length",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "intros (? & ?); subst; rew length; omega.",
                        "VernacExtend",
                        "9ad054c604bcab79cb5ff9231755d4be3f11a263"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_app_lft",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros (a & ?); subst.",
                        "VernacExtend",
                        "7ae1ce404e1b20b275c4876da4d3bbb090ccd518"
                    ]
                },
                {
                    "command": [
                        "exists a; rewrite app_ass; auto.",
                        "VernacExtend",
                        "2ff916632302b90367365b30d49018f3a26f195b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_inv",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros (r & Hr).",
                        "VernacExtend",
                        "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
                    ]
                },
                {
                    "command": [
                        "inversion Hr; split; auto.",
                        "VernacExtend",
                        "1515578aadf9a17ca50c1c06e2015b19181ebae6"
                    ]
                },
                {
                    "command": [
                        "exists r; auto.",
                        "VernacExtend",
                        "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_list_inv",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "induction l as [ | x l IHl ]; simpl; auto.",
                        "VernacExtend",
                        "11dc58da78c6b55a0c11aa26d4a26e9a8f0eae99"
                    ]
                },
                {
                    "command": [
                        "intros H; apply prefix_inv, proj2, IHl in H; auto.",
                        "VernacExtend",
                        "d0356dff6296c7a438ef99f44a7b6f3007b3a430"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_refl",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "exists nil; rewrite <- app_nil_end; auto.",
                        "VernacExtend",
                        "9c0818bddd4818b2833dbed8ee5ff9809d37a022"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_trans",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros (m1 & H1) (m2 & H2); subst; exists (m1++m2); solve list eq.",
                        "VernacExtend",
                        "da1a793cf2733a65e67cba7d50b258f6121b6071"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_rect",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "revert l; induction ll as [ | x ll IHll ]; intros l H.",
                        "VernacExtend",
                        "5ef61bbae62cfbb2574959c177a7cead3847bae5"
                    ]
                },
                {
                    "command": [
                        "replace l with (nil : list X).",
                        "VernacExtend",
                        "c0d761faeeb1db86fa1087cc1c8716096aecaa72"
                    ]
                },
                {
                    "command": [
                        "apply HP0.",
                        "VernacExtend",
                        "4bbf46b82d48eed259daa56c8ee399d607fb460b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (r & Hr).",
                        "VernacExtend",
                        "39bcc983038f09a836a7f6feec3863990a61368b"
                    ]
                },
                {
                    "command": [
                        "destruct l; auto; discriminate.",
                        "VernacExtend",
                        "ecc9b67aeef9d9ab5b24238afb576bd0420616e3"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | y l ].",
                        "VernacExtend",
                        "a7829247f3daa12b4632d29d19e6512c55d7f820"
                    ]
                },
                {
                    "command": [
                        "apply HP0.",
                        "VernacExtend",
                        "4bbf46b82d48eed259daa56c8ee399d607fb460b"
                    ]
                },
                {
                    "command": [
                        "apply prefix_inv in H.",
                        "VernacExtend",
                        "a7a2fe0bd7be9d31a87c35c64f453e80f3aacb9b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (? & E); subst y.",
                        "VernacExtend",
                        "8f84f781aa163cc3fc17ee698223cda03d1cb4e8"
                    ]
                },
                {
                    "command": [
                        "apply HP1; [ | apply IHll ]; trivial.",
                        "VernacExtend",
                        "45e0090d0efb5499b232062a887a131d378af134"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_app_inv",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "revert l2 r1 r2; induction l1 as [ | x l1 IH ].",
                        "VernacExtend",
                        "2288a1fb75c8e2653af806058f9023ff0e082372"
                    ]
                },
                {
                    "command": [
                        "left; apply in_prefix_0.",
                        "VernacExtend",
                        "1c1d291c41c76010ea4a2de6fc7fc5b2046f9556"
                    ]
                },
                {
                    "command": [
                        "intros l2 [ | y r1 ] r2.",
                        "VernacExtend",
                        "5d0af45b97440625d4236324f6a77a3c5ad66d5b"
                    ]
                },
                {
                    "command": [
                        "right; apply in_prefix_0.",
                        "VernacExtend",
                        "751ca0f23c405f762dc5f2a673b8d7a9cac83ad5"
                    ]
                },
                {
                    "command": [
                        "simpl; intros H; apply prefix_inv in H.",
                        "VernacExtend",
                        "ac73feeee21e52bbd434b51f14005580f31893f7"
                    ]
                },
                {
                    "command": [
                        "destruct H as (E & H); subst y.",
                        "VernacExtend",
                        "7a5c6e51c885ee6ee33deff07f7ab23bd29e7855"
                    ]
                },
                {
                    "command": [
                        "destruct IH with (1 := H); [ left | right ]; apply in_prefix_1; auto.",
                        "VernacExtend",
                        "b81895ed79590222977114ec7af7057756b9a17a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_spec",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "induction 1 as [ ll | x l ll _ (r & Hr) ] using prefix_rect.",
                        "VernacExtend",
                        "caf39a050c369cffc81fcb1e0540ca8e18815ec2"
                    ]
                },
                {
                    "command": [
                        "exists ll; trivial.",
                        "VernacExtend",
                        "dad089123889730e5ce5c5c19762c4756f558923"
                    ]
                },
                {
                    "command": [
                        "exists r; simpl; f_equal; auto.",
                        "VernacExtend",
                        "8e83dec3afe1c62b370350800df7afa4e920c529"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prefix_app_lft_inv",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply prefix_spec in H.",
                        "VernacExtend",
                        "15f19ce5f0b052bc821b9a88d44126da1da7299a"
                    ]
                },
                {
                    "command": [
                        "destruct H as (r & H).",
                        "VernacExtend",
                        "174b1febac8631da3960f601c4729858e373787d"
                    ]
                },
                {
                    "command": [
                        "exists (l2++r); simpl.",
                        "VernacExtend",
                        "0196edef16b7e4d6d9f00e477396edfa73b60f45"
                    ]
                },
                {
                    "command": [
                        "solve list eq in H; split; auto.",
                        "VernacExtend",
                        "7fd0b3e3e1a1f15835b5b37022186de473519dc6"
                    ]
                },
                {
                    "command": [
                        "exists r; auto.",
                        "VernacExtend",
                        "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_assoc_eq",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros []; simpl.",
                        "VernacExtend",
                        "4742f252ba63bf5db7b5452add04e099f08c175b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_X_dec x x) as [ | [] ]; auto.",
                        "VernacExtend",
                        "f0eaab4c51bc6d948deedbf38035403f0f77b0e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_assoc_neq",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros H; simpl.",
                        "VernacExtend",
                        "92f5c16dd76e07ceb7f5c8e77667a1153e29ff98"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_X_dec x' x) as [ | ]; auto.",
                        "VernacExtend",
                        "8d12008d7efc21799531491bee194f2fcd688991"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_assoc_In",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "induction l as [ | (x',y) l IHl ]; simpl; auto.",
                        "VernacExtend",
                        "0ef3d1f1fdb3a6384ab54ab6350c0f79ac527284"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_X_dec x x'); subst; auto.",
                        "VernacExtend",
                        "f73bd368df6018db6a74efd4e5d347872032d891"
                    ]
                },
                {
                    "command": [
                        "destruct (list_assoc x l); auto.",
                        "VernacExtend",
                        "caf539c4522bc9bd453407fe81574fbbe3870560"
                    ]
                },
                {
                    "command": [
                        "intros [ ? | ]; subst; tauto.",
                        "VernacExtend",
                        "f718271cdf7ee210f1221e6a55835f90f256a6c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_list_assoc",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "generalize (list_assoc_In x l).",
                        "VernacExtend",
                        "ba57d9d97439f32e67c2ac9c6739c73d841e7d90"
                    ]
                },
                {
                    "command": [
                        "destruct (list_assoc x l) as [ y | ].",
                        "VernacExtend",
                        "70061533fde697ccb4e862e28a35b76a076f0382"
                    ]
                },
                {
                    "command": [
                        "exists y; auto.",
                        "VernacExtend",
                        "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_In_list_assoc",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "generalize (list_assoc_In x l).",
                        "VernacExtend",
                        "ba57d9d97439f32e67c2ac9c6739c73d841e7d90"
                    ]
                },
                {
                    "command": [
                        "destruct (list_assoc x l) as [ y | ]; auto.",
                        "VernacExtend",
                        "fa72cd0dc38719e5e3b26cff0f57f6579a7a9c53"
                    ]
                },
                {
                    "command": [
                        "intros H1; contradict H.",
                        "VernacExtend",
                        "199fedc1e01133fcc776e70787a87d4661908276"
                    ]
                },
                {
                    "command": [
                        "apply in_map_iff.",
                        "VernacExtend",
                        "b128e1e6f601182342113d742a28792f5aaec52c"
                    ]
                },
                {
                    "command": [
                        "exists (x,y); simpl; auto.",
                        "VernacExtend",
                        "ad0b86145987d0631d36b0f224b9bbc73c8cf522"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_assoc_app",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "induction ll as [ | (x',?) ]; simpl; auto.",
                        "VernacExtend",
                        "15b5194fcfac228ed19d2e319eb7390704afacab"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_X_dec x x'); auto.",
                        "VernacExtend",
                        "5be375a7547c9f48701dc0c495fdd322afec1d9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_choose_dec",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "induction ll as [ | a ll IH ]; [ | destruct (Pdec a) as [ Ha | Ha ]; [ | destruct IH as [ (l & x & r & H1 & H2 & H3) | H ]] ].",
                        "VernacExtend",
                        "ca16dfeeef069c57586804a9b45ed549628af884"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right; intros _ [].",
                        "VernacExtend",
                        "f0512146ab6f8c2165639681a0d9565877b8c0a0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; exists nil, a, ll; repeat split; auto.",
                        "VernacExtend",
                        "990d9cf0ecd74f5370a2a299c24d2deb53e86bec"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "left; exists (a::l), x, r; repeat split; subst; auto.",
                        "VernacExtend",
                        "2fe189d29e584b9528c87c1cbb3c157df94e0ba5"
                    ]
                },
                {
                    "command": [
                        "intros ? [ | ]; subst; auto.",
                        "VernacExtend",
                        "4eb19de98f5397a40d018704d152dfe5aff1f193"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "right; intros ? [ | ]; subst; auto.",
                        "VernacExtend",
                        "871d75e1a3a899f4b7880aff25ffb0ca67908edf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_first_dec",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "destruct (list_choose_dec ll) as [ H | H ]; trivial.",
                        "VernacExtend",
                        "62ccd5d79b8131048dc3ea7d588b6c17072b1f63"
                    ]
                },
                {
                    "command": [
                        "destruct (H _ H2 H1).",
                        "VernacExtend",
                        "8c02a2f6c793dc57a62cce0bb97b5955f8a6f133"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_cons_inv",
            "line_nb": 369,
            "steps": [
                {
                    "command": [
                        "destruct ll as [ | x l ]; try discriminate; simpl.",
                        "VernacExtend",
                        "cb2e6bae523e993b7956d27dba15ebbd117e89fe"
                    ]
                },
                {
                    "command": [
                        "intros H; inversion H; subst; exists x, l; auto.",
                        "VernacExtend",
                        "146deb5f120885ea2b072e52914f2236db06a2ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_app_inv",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "revert m n; induction ll as [ | x ll IH ]; intros m n H.",
                        "VernacExtend",
                        "47fa682901882f0877d42373a7f8d1ea074c19f0"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct m; destruct n; try discriminate; exists nil, nil; auto.",
                        "VernacExtend",
                        "9aedcf9eeb8e7225aaec4880f8ed36203fa39f0c"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct m as [ | y m ]; simpl in H.",
                        "VernacExtend",
                        "aba60cc93372f82b23203752f4cc0da44316cfec"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "exists nil, (x::ll); auto.",
                        "VernacExtend",
                        "9c3629cfbf29649710c11bf2754143e4ec4815cd"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst y.",
                        "VernacExtend",
                        "980940cdd4b278d873f2954d960acf5032bcefee"
                    ]
                },
                {
                    "command": [
                        "destruct IH with (1 := H2) as (l & r & H3 & H4 & H5); subst.",
                        "VernacExtend",
                        "eada92f76e1311f78446353806a6a775ae1d5bfe"
                    ]
                },
                {
                    "command": [
                        "exists (x::l), r; auto.",
                        "VernacExtend",
                        "22d9b17b6a4c6023362a9743f8b08cf39397d670"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_middle_inv",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct map_app_inv with (1 := H) as (l & r & H1 & H2 & H3).",
                        "VernacExtend",
                        "873a83c3e85b25a4ff24281b53c3b5535c92cb9d"
                    ]
                },
                {
                    "command": [
                        "symmetry in H3.",
                        "VernacExtend",
                        "2bac5a46aadf5df25526493447e5f1dd051c3b0d"
                    ]
                },
                {
                    "command": [
                        "destruct map_cons_inv with (1 := H3) as (x & r' & H4 & H5 & H6); subst.",
                        "VernacExtend",
                        "8c63cc02c3da26284db24a6993355f1ea62ace3d"
                    ]
                },
                {
                    "command": [
                        "exists l, x, r'; auto.",
                        "VernacExtend",
                        "3d5131bd209bb587ed59432a4ec75be708f5f7fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_mono",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "induction 2; constructor; auto.",
                        "VernacExtend",
                        "ba07e6cc57f3a6ab3e51e98f89df6fabbe983f93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_nil_inv_l",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "inversion_clear 1; reflexivity.",
                        "VernacExtend",
                        "7ca6b84b4da45c5274986dc922f603b175296829"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_nil_inv_r",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "inversion_clear 1; reflexivity.",
                        "VernacExtend",
                        "7ca6b84b4da45c5274986dc922f603b175296829"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_cons_inv",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; auto.",
                        "VernacExtend",
                        "4921ce0be8cffd4249e2e4afa679d399ab21a1da"
                    ]
                },
                {
                    "command": [
                        "intros []; constructor; auto.",
                        "VernacExtend",
                        "5249b4040c94379429485674dc33e1eb9b3d2a0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_app_inv_l",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "revert l2 m; induction l1 as [ | x l1 IH ]; simpl; intros l2 m H.",
                        "VernacExtend",
                        "95f31676da8d2c77956984e3f57acd2603457367"
                    ]
                },
                {
                    "command": [
                        "exists nil, m; repeat split; auto.",
                        "VernacExtend",
                        "5921530080039e7cdb7d106cd9b8641f89170707"
                    ]
                },
                {
                    "command": [
                        "destruct m as [ | y m ].",
                        "VernacExtend",
                        "8a494183cb3a2894784d6c29f6fb3bdf57a90fb4"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_nil_inv_r in H; discriminate H.",
                        "VernacExtend",
                        "5486e5a730f610defc64c7f50bd4b1de7c9c3e9f"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H; destruct H as [ H1 H2 ].",
                        "VernacExtend",
                        "a5ea9e56ec5b81a4eab55a212d18a8cf07a77039"
                    ]
                },
                {
                    "command": [
                        "apply IH in H2.",
                        "VernacExtend",
                        "b939455ac2d522ba00eb17d60b0d13971b48e06a"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (m1 & m2 & H2 & H3 & H4); subst m.",
                        "VernacExtend",
                        "c7affb7b93d9987408ad1d9a94ed3feb7a79003c"
                    ]
                },
                {
                    "command": [
                        "exists (y::m1), m2; repeat split; auto.",
                        "VernacExtend",
                        "0b684c99ac5c0a9a7c7020ef9fd7cf445cf72458"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_app_inv_r",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "revert m2 l; induction m1 as [ | y m1 IH ]; simpl; intros m2 l H.",
                        "VernacExtend",
                        "a76660406f6c59280f8c79f27dc4aa9063e9092d"
                    ]
                },
                {
                    "command": [
                        "exists nil, l; repeat split; auto.",
                        "VernacExtend",
                        "4c286b26f93455faff3f0a04fd8eb9a72a73b0fc"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | x l ].",
                        "VernacExtend",
                        "59f700f45a9fb245336528f142e49de378190342"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_nil_inv_l in H; discriminate H.",
                        "VernacExtend",
                        "fae904f39ffcabce04f4bf836dff4f5e6c33f0eb"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H; destruct H as [ H1 H2 ].",
                        "VernacExtend",
                        "a5ea9e56ec5b81a4eab55a212d18a8cf07a77039"
                    ]
                },
                {
                    "command": [
                        "apply IH in H2.",
                        "VernacExtend",
                        "b939455ac2d522ba00eb17d60b0d13971b48e06a"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (l1 & l2 & H2 & H3 & H4); subst l.",
                        "VernacExtend",
                        "fe733dcbad9e64f832a33622ad73d69f07391a1e"
                    ]
                },
                {
                    "command": [
                        "exists (x::l1), l2; repeat split; auto.",
                        "VernacExtend",
                        "3a6758a036b1d038583dde293138c17e9d5e9a6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_cons_inv_l",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_app_inv_l with (l1 := a::nil) (l2 := ll) in H.",
                        "VernacExtend",
                        "3e3c10d8ea6943ae180bfc0ed4002db6db59cac8"
                    ]
                },
                {
                    "command": [
                        "destruct H as (l & mm' & H1 & H2 & H3).",
                        "VernacExtend",
                        "0db2533f2cc53b7204ee8b190c25a20a71c68492"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | y l ].",
                        "VernacExtend",
                        "a7829247f3daa12b4632d29d19e6512c55d7f820"
                    ]
                },
                {
                    "command": [
                        "exfalso; inversion H1.",
                        "VernacExtend",
                        "a7f335f520cca0b986ec0ee53720fdba19ad9ab4"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H1.",
                        "VernacExtend",
                        "dc5df4794018c833043a83acafeb87685802a319"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [ H1 H4 ].",
                        "VernacExtend",
                        "b5d38e40784d1484e5394dbefff2d00023ec8b0c"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_nil_inv_l in H4; subst l.",
                        "VernacExtend",
                        "bae36906f012ab9bdd29e7456a45ef1818e802bf"
                    ]
                },
                {
                    "command": [
                        "exists y, mm'; auto.",
                        "VernacExtend",
                        "2e185a4f4ad5f2adac2c1cc12d7872a20fcc9826"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_cons_inv_r",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_app_inv_r with (m1 := b::nil) (m2 := mm) in H.",
                        "VernacExtend",
                        "26bd941db49a7e5913d0ba26adf46e6665dcb9d5"
                    ]
                },
                {
                    "command": [
                        "destruct H as (l & ll' & H1 & H2 & H3).",
                        "VernacExtend",
                        "56f6b44752ed18e5f7f691559c927aeab04e971d"
                    ]
                },
                {
                    "command": [
                        "destruct l as [ | x l ].",
                        "VernacExtend",
                        "59f700f45a9fb245336528f142e49de378190342"
                    ]
                },
                {
                    "command": [
                        "exfalso; inversion H1.",
                        "VernacExtend",
                        "a7f335f520cca0b986ec0ee53720fdba19ad9ab4"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H1.",
                        "VernacExtend",
                        "dc5df4794018c833043a83acafeb87685802a319"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [ H1 H4 ].",
                        "VernacExtend",
                        "b5d38e40784d1484e5394dbefff2d00023ec8b0c"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_nil_inv_r in H4; subst l.",
                        "VernacExtend",
                        "ed373bd2953d49f1f4899b8276e8fb7412534e0c"
                    ]
                },
                {
                    "command": [
                        "exists x, ll'; auto.",
                        "VernacExtend",
                        "a95e4137a973852867262e31b6a456b5571231e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map_left",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "revert mm.",
                        "VernacExtend",
                        "0a8700920ed87ca205685f1ee7a7970f8c663670"
                    ]
                },
                {
                    "command": [
                        "induction ll; intros [ | y mm ] H; simpl in H; auto; try (inversion H; fail).",
                        "VernacExtend",
                        "f00d4e236d83c8527ed48913ca7aa948ec6f15fc"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H; constructor.",
                        "VernacExtend",
                        "08a5774e3ede500b5c0438f1750de97819a7bc09"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply IHll; tauto.",
                        "VernacExtend",
                        "484672f798ae76e307fd558897b9d511e2ae6591"
                    ]
                },
                {
                    "command": [
                        "induction 1; constructor; auto.",
                        "VernacExtend",
                        "ff51879142eef61207638aeecdcf6617e01ec60f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map_right",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "revert mm.",
                        "VernacExtend",
                        "0a8700920ed87ca205685f1ee7a7970f8c663670"
                    ]
                },
                {
                    "command": [
                        "induction ll; intros [ | y mm ] H; simpl in H; auto; try (inversion H; fail).",
                        "VernacExtend",
                        "f00d4e236d83c8527ed48913ca7aa948ec6f15fc"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_cons_inv in H; constructor.",
                        "VernacExtend",
                        "08a5774e3ede500b5c0438f1750de97819a7bc09"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply IHll; tauto.",
                        "VernacExtend",
                        "484672f798ae76e307fd558897b9d511e2ae6591"
                    ]
                },
                {
                    "command": [
                        "induction 1; constructor; auto.",
                        "VernacExtend",
                        "ff51879142eef61207638aeecdcf6617e01ec60f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_map_both",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "rewrite Forall2_map_left, Forall2_map_right; split; auto.",
                        "VernacExtend",
                        "b3d585b7fa4fe9158249e3db6b4db3c320a1642b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall2_Forall",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "induction ll as [ | x ll ]; inversion_clear 1; auto.",
                        "VernacExtend",
                        "1f423bd9b9d0fa7e24134621018805d44bfd2275"
                    ]
                },
                {
                    "command": [
                        "induction 1; auto.",
                        "VernacExtend",
                        "1f706f8985097cf30b2449a4fda927a48fc6a84a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_app",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "repeat rewrite Forall_forall.",
                        "VernacExtend",
                        "063fabbb102a6768bd3bac8b74ea10db98547218"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros (H1 & H2) x Hx.",
                        "VernacExtend",
                        "92a96118f24b9179cb48d6788e9d70b415568a5c"
                    ]
                },
                {
                    "command": [
                        "apply in_app_or in Hx; firstorder.",
                        "VernacExtend",
                        "61fdd5c679a4766ba726c64a078556ecdd09a71c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_cons_inv",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "inversion 1; auto.",
                        "VernacExtend",
                        "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "constructor; tauto.",
                        "VernacExtend",
                        "1e982ea766270186b868b62a40d8da2f3d24de9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_rev",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "induction 1 as [ | x ll Hll IH ].",
                        "VernacExtend",
                        "cdb75cd7ee4f12535385fb10da440e3ba886a8ef"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Forall_app; split; auto.",
                        "VernacExtend",
                        "d2d4a998b47233c6fabba21b531b48556c1ed8f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_map",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction ll; simpl; try rewrite Forall_cons_inv; constructor; tauto.",
                        "VernacExtend",
                        "76d629b4602827e6b152bf8a7afe648fb7d214e5"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "induction 1; simpl; constructor; auto.",
                        "VernacExtend",
                        "965f3aee9c3d4e11efe020bb9c0ebc94e8ee0ca8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_forall_map",
            "line_nb": 503,
            "steps": [
                {
                    "command": [
                        "intros Hl; rewrite Forall_forall.",
                        "VernacExtend",
                        "4080fc2f68cfffc447eafa0fda81ec482940d207"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros H x; rewrite Hl, in_map_iff.",
                        "VernacExtend",
                        "8ef73c99725bc785c63a29e22f7b42e0637081ee"
                    ]
                },
                {
                    "command": [
                        "intros (y & ? & H1).",
                        "VernacExtend",
                        "d8e65a9c9dd899b975df0c44bf37c5c153280c55"
                    ]
                },
                {
                    "command": [
                        "apply list_an_spec in H1; subst; apply H; omega.",
                        "VernacExtend",
                        "fa7f4d1d69ae83f08d677747b0550ae3cf8ca23e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros H x Hx; apply H; rewrite Hl, in_map_iff.",
                        "VernacExtend",
                        "41967899136dbeaa56528dc90b53688cce01c5ed"
                    ]
                },
                {
                    "command": [
                        "exists x; split; auto; apply list_an_spec; omega.",
                        "VernacExtend",
                        "8b9823a9e0dab01c1d433c6267c02bd49f7f71ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_impl",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "intros H; induction 1 as [ | x ll Hx Hll IH ]; constructor.",
                        "VernacExtend",
                        "fbd29bf87362a837784358892e1a385bd8bad94d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply H; simpl; auto.",
                        "VernacExtend",
                        "b4e4d430f67d3f7d469a047a0a124a6ab5e9b243"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply IH; intros ? ?; apply H; simpl; auto.",
                        "VernacExtend",
                        "1b7a643e79ba1f0d3800efaaab1296cae3a046f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_filter",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; auto; destruct (f x); auto.",
                        "VernacExtend",
                        "107be8991921c82514d599ead5862dc2e4d66834"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}