{
    "filename": "H10/ArithLibs/luca.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "Require Import Arith Nat Omega Lia List.",
            "VernacRequire",
            "0c02601984f62b0acdd6d88fb4e576161fd73088"
        ],
        [
            "Require Import utils_tac gcd prime binomial sums Zp rel_iter.",
            "VernacRequire",
            "f17081a7278b7d6bfc1b96da9a7c7c19dd5674c8"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Local Notation power := (mscal mult 1).",
            "VernacSyntacticDefinition",
            "413c7e41c706f864f8b7bdf3cee551e974dd1f5b"
        ],
        [
            "Local Notation expo := (mscal mult 1).",
            "VernacSyntacticDefinition",
            "a9d89f18094dde43656d918b39780d2e71530b32"
        ],
        [
            "Section fact.",
            "VernacBeginSection",
            "f98d092d332002313b4d4a24d9b4ae4d3eef2d81"
        ],
        [
            "Let factorial_cancel n a b : fact n * a = fact n * b -> a = b.",
            "VernacDefinition",
            "7a77960a8d83550bafed6d43390c9c9be82582b6"
        ],
        [
            "apply Nat.mul_cancel_l.",
            "VernacExtend",
            "0f42472668c8b17f0751030ea46b1ad87e58f31d"
        ],
        [
            "generalize (fact_gt_0 n); intro; lia.",
            "VernacExtend",
            "600cd45a3a17bab81f52acd5b553ee73fd2c8190"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \u03a0 := (msum mult 1).",
            "VernacSyntacticDefinition",
            "8a271fb89429b309ffa853c91aca209c100bc72a"
        ],
        [
            "Notation mprod_an := (fun a n => \u03a0 n (fun i => i+a)).",
            "VernacSyntacticDefinition",
            "f814f2c0cf61cb40b1c002405781944c5aeb417b"
        ],
        [
            "Fact mprod_factorial n : fact n = mprod_an 1 n.",
            "VernacStartTheoremProof",
            "d92e1d970b0cd21467076f268652f0e32fa74623"
        ],
        [
            "induction n as [ | n IHn ].",
            "VernacExtend",
            "11271b942636cfbc18c3a3b84021521c0265d324"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite msum_0; auto.",
            "VernacExtend",
            "a2a3055c85807fbc2ac21f6a3bf4879a9a8e2abf"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite msum_plus1; auto.",
            "VernacExtend",
            "767371b347a04d2917981c1a8058a4cdf863683d"
        ],
        [
            "rewrite mult_comm, <- IHn, fact_S.",
            "VernacExtend",
            "2dd1e79ef7c080e25d5270ff4404fdf0802bbc8f"
        ],
        [
            "f_equal; lia.",
            "VernacExtend",
            "6d8c56ee5565b355fb330bafd34b13918336c346"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable (p : nat) (Hp : p <> 0).",
            "VernacAssumption",
            "27bdc3b80eb8476fdbcebdef802bc43dba6f3097"
        ],
        [
            "Notation \"\u301a x \u301b\" := (nat2Zp Hp x).",
            "VernacNotation",
            "575cbfcb1b9296b4c2a94a50e9a538d6d72479e5"
        ],
        [
            "Let expo_p_cancel n a b : expo n p * a = expo n p * b -> a = b.",
            "VernacDefinition",
            "835341fdced11a63928ed7d041603694476e6cec"
        ],
        [
            "apply Nat.mul_cancel_l.",
            "VernacExtend",
            "0f42472668c8b17f0751030ea46b1ad87e58f31d"
        ],
        [
            "generalize (power_ge_1 n Hp); intros; lia.",
            "VernacExtend",
            "da20fca9bcffa178af616fe43726685f77724587"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mprod_factorial_Zp i n :\u301amprod_an (i*p+1) n\u301b=\u301afact n\u301b.",
            "VernacStartTheoremProof",
            "cb8f9b3c5a3991a605e7fb3b0bf00af341a4bfb5"
        ],
        [
            "rewrite mprod_factorial.",
            "VernacExtend",
            "b602a5e726506a2187d14232b9944694f0033e8a"
        ],
        [
            "induction n as [ | n IHn ].",
            "VernacExtend",
            "11271b942636cfbc18c3a3b84021521c0265d324"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 rewrite msum_0; auto.",
            "VernacExtend",
            "7134c673f48c9a7cabd3570c86c450d1e120e83a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 (rewrite msum_plus1; auto).",
            "VernacExtend",
            "411d7eb8a380bb1c74c7e2f322fe353dcbd44e1d"
        ],
        [
            "do 2 rewrite nat2Zp_mult; f_equal; auto.",
            "VernacExtend",
            "e571e788cb94ccacd7ce8e40ab77f3aba9f9a81c"
        ],
        [
            "apply nat2Zp_inj.",
            "VernacExtend",
            "527f9d13c9258df19407e6619e5ab2e484cece25"
        ],
        [
            "rewrite (plus_comm n), <- plus_assoc, plus_comm.",
            "VernacExtend",
            "6cda6951aebcbb35d1d48548f4f358bf46773845"
        ],
        [
            "rewrite <- rem_plus_div; auto.",
            "VernacExtend",
            "b94d065c277dd6bea418ac81f03ea6b90281973a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "f_equal; lia.",
            "VernacExtend",
            "6d8c56ee5565b355fb330bafd34b13918336c346"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply divides_mult, divides_refl.",
            "VernacExtend",
            "b626de07aa0746d1973b27b102ddadc92bb4da58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \u03c6 := (fun n r => mprod_an (n*p+1) r).",
            "VernacSyntacticDefinition",
            "8351f1085af4f7e473c7f960a0d1e67cd9c9ecc1"
        ],
        [
            "Notation \u03a8 := (fun n => \u03a0 n (fun i => mprod_an (i*p+1) (p-1))).",
            "VernacSyntacticDefinition",
            "2c67ca8ef7679e41ba56d504ac57fb5d0c4b0b69"
        ],
        [
            "Let phi_Zp_eq n r :\u301a\u03c6 n r\u301b=\u301afact r\u301b.",
            "VernacDefinition",
            "c64f3088eae6bf5f4d5e392df9e5b299e33607e9"
        ],
        [
            "apply mprod_factorial_Zp.",
            "VernacExtend",
            "decf10910c080cfb3c8ee9761d908e39d12a6bfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact mprod_factorial_mult n : fact (n*p) = expo n p * fact n * \u03a8 n.",
            "VernacStartTheoremProof",
            "8a692a49099f0e2073f3366816c78d00b73788b8"
        ],
        [
            "induction n as [ | n IHn ].",
            "VernacExtend",
            "11271b942636cfbc18c3a3b84021521c0265d324"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Nat.mul_0_l, msum_0, mscal_0, fact_0; auto.",
            "VernacExtend",
            "8013b1a4256d2ca899736531ab197353656d255f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "replace (S n*p) with (n*p+p) by ring.",
            "VernacExtend",
            "600139343d9048989be15daebb076d315980b9ae"
        ],
        [
            "rewrite mprod_factorial, msum_plus, <- mprod_factorial; auto.",
            "VernacExtend",
            "7a049ccc207afa1d02b2e0a1b7948870725f9808"
        ],
        [
            "replace p with (S (p-1)) at 2 by omega.",
            "VernacExtend",
            "98786051e39505f4f3b002caacc9096650af8f21"
        ],
        [
            "rewrite msum_plus1; auto.",
            "VernacExtend",
            "767371b347a04d2917981c1a8058a4cdf863683d"
        ],
        [
            "rewrite <- plus_assoc.",
            "VernacExtend",
            "84ba95263db170903fae6df6fe705836bbe227f3"
        ],
        [
            "replace (p-1+1) with p by omega.",
            "VernacExtend",
            "b679ab82b6468a2398e6bac9f5edc5bb6c012a56"
        ],
        [
            "replace (n*p+p) with ((S n)*p) by ring.",
            "VernacExtend",
            "080c3a3d946a499a68714950d72d7c4fce9e788c"
        ],
        [
            "rewrite mscal_S, fact_S, msum_S.",
            "VernacExtend",
            "f1507ac86f30a11cd293852393602ae6f3abcd14"
        ],
        [
            "rewrite IHn.",
            "VernacExtend",
            "ec9472e508d0ba82a8f6be939d2e4d39f35c3667"
        ],
        [
            "repeat rewrite mult_assoc.",
            "VernacExtend",
            "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
        ],
        [
            "rewrite (mult_comm _ p).",
            "VernacExtend",
            "f41a048b8d8cdc6cce400ff067991bc7d60f34cc"
        ],
        [
            "repeat rewrite <- mult_assoc.",
            "VernacExtend",
            "2252311238b6c07ad14a166981d63a2404857515"
        ],
        [
            "do 2 f_equal.",
            "VernacExtend",
            "74f83f01290e37153981e2e772bf9a265f1f15d0"
        ],
        [
            "rewrite (mult_comm (S n)).",
            "VernacExtend",
            "53bd648abe8e91e823624dddfcaa22a4577363a4"
        ],
        [
            "repeat rewrite <- mult_assoc; f_equal.",
            "VernacExtend",
            "2323c5a03bea12a227ef1e7c9c17bbdeb92a5b08"
        ],
        [
            "repeat rewrite mult_assoc; f_equal.",
            "VernacExtend",
            "16f7c649ae84e74ddc1162031705d24ecdc53c71"
        ],
        [
            "rewrite msum_ext with (f := fun i => n*p+i+1) (g := fun i => i+(n*p+1)).",
            "VernacExtend",
            "f23487e5fe01001b62451e79a68049fe6456f1fe"
        ],
        [
            "2: intros; ring.",
            "VernacExtend",
            "15249897037a22ee6df29cc98ff8c350a5f23c76"
        ],
        [
            "rewrite <- msum_plus1; auto.",
            "VernacExtend",
            "2be3cce31089d624b6b68d426a827c44f246babf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mprod_factorial_euclid n r : fact (n*p+r) = expo n p * fact n * \u03c6 n r * \u03a8 n.",
            "VernacStartTheoremProof",
            "b55442f88257521f22c79bcc5cac6ed8805bf9b2"
        ],
        [
            "rewrite mprod_factorial, msum_plus; auto.",
            "VernacExtend",
            "30af06d558fa3a410a628d557a38bec2f8354d3d"
        ],
        [
            "rewrite <- mprod_factorial.",
            "VernacExtend",
            "74ddbf9a8a77c5c1775984ff7d203f5e11c9f829"
        ],
        [
            "rewrite msum_ext with (f := fun i => n*p+i+1) (g := fun i => i+(n*p+1)).",
            "VernacExtend",
            "f23487e5fe01001b62451e79a68049fe6456f1fe"
        ],
        [
            "2: intros; ring.",
            "VernacExtend",
            "15249897037a22ee6df29cc98ff8c350a5f23c76"
        ],
        [
            "rewrite mprod_factorial_mult; auto; ring.",
            "VernacExtend",
            "b327537661809b54260cac4deea2c55741229115"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation Zp := (Zp_zero Hp).",
            "VernacSyntacticDefinition",
            "575e0503dec06af43ef004ec5c0c3a118582a805"
        ],
        [
            "Notation Op := (Zp_one Hp).",
            "VernacSyntacticDefinition",
            "562761149544c4a9d1207c296592c54aed4a7311"
        ],
        [
            "Notation \"\u2238\" := (Zp_opp Hp).",
            "VernacNotation",
            "332ac36a982526129ca7527329cfa0b1e0f30b5a"
        ],
        [
            "Infix \"\u2297\" := (Zp_mult Hp) (at level 40, left associativity).",
            "VernacInfix",
            "fb7aa93ad758ad6a29461eea03bd796721b0a774"
        ],
        [
            "Notation expoZp := (mscal (Zp_mult Hp) (Zp_one Hp)).",
            "VernacSyntacticDefinition",
            "a3ceddc573557d0aae167e9be4ab0ea6497d6f9b"
        ],
        [
            "Hint Resolve Nat_mult_monoid.",
            "VernacHints",
            "80d9a6749a4c348fb7b90739dfcb97cd0ef66137"
        ],
        [
            "Let Psi_Zp_eq n :\u301a\u03a8 n\u301b= expoZp n\u301afact (p-1)\u301b.",
            "VernacDefinition",
            "463dc374335a4099a36a34d1b00c0b1ad39c7b75"
        ],
        [
            "induction n as [ | n IHn ].",
            "VernacExtend",
            "11271b942636cfbc18c3a3b84021521c0265d324"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite msum_0, mscal_0; auto.",
            "VernacExtend",
            "5d9919e064a21c3df487fa742fb918d1d39ea1a9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite msum_plus1, nat2Zp_mult.",
            "VernacExtend",
            "64ab435c105d5d0e9b2f5f471b8ac542b615b924"
        ],
        [
            "rewrite mscal_plus1; auto.",
            "VernacExtend",
            "8b544c7f3ae6caa9ce103027cdda4825e470c910"
        ],
        [
            "2: apply Zp_mult_monoid.",
            "VernacExtend",
            "cd7d708a21a4ca594cbb73f79c61253960399aa5"
        ],
        [
            "2: apply Nat_mult_monoid.",
            "VernacExtend",
            "dc3e12c44205e17559791a9a74b7e605bb063b52"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis (Hprime : prime p).",
            "VernacAssumption",
            "3cf2aff14987e492a1f2253ee6195e0f2c41a470"
        ],
        [
            "Let phi_Zp_invertible n r : r < p -> Zp_invertible Hp \u301a\u03c6 n r\u301b.",
            "VernacDefinition",
            "e3caf396a075968389ebfc5f7a60f353fa72ae03"
        ],
        [
            "intros H; simpl; rewrite phi_Zp_eq.",
            "VernacExtend",
            "93e6810bba85fdb8c0bc3008e9125c06dd392810"
        ],
        [
            "apply Zp_invertible_factorial; auto.",
            "VernacExtend",
            "fa0d06abc14b5731a74d3946cb03fe3845b7021d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Psi_Zp_invertible n : Zp_invertible Hp \u301a\u03a8 n\u301b.",
            "VernacDefinition",
            "181ae979f7f8081a00e3e9c278762d0fc84616c6"
        ],
        [
            "simpl; rewrite (Psi_Zp_eq n).",
            "VernacExtend",
            "deac6add4861e4856df759a87e7c728fe8dba686"
        ],
        [
            "apply Zp_expo_invertible, Zp_invertible_factorial; auto; omega.",
            "VernacExtend",
            "222c8c341045a5642d9bf4c5c2d21968f6d327c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section binomial_without_p_not_zero.",
            "VernacBeginSection",
            "23bbd5cdd5a1a73e890b2bba9fd842d8ecc62cbf"
        ],
        [
            "Variable (n N n0 k K k0 : nat) (Hn : n = N*p+n0) (Hk : k = K*p+k0) (H1 : K <= N) (H2 : k0 <= n0).",
            "VernacAssumption",
            "c5713eeead0383deb91494021d41798f5e0f8657"
        ],
        [
            "Let Hkn : k <= n.",
            "VernacDefinition",
            "1a510095d759baaaf02afdcc877069b59ce27893"
        ],
        [
            "rewrite Hn, Hk.",
            "VernacExtend",
            "47a7cf41be99fe3505d5e1eb8a58e2dc5d89bfcb"
        ],
        [
            "replace N with (K+(N-K)) by omega.",
            "VernacExtend",
            "c64ecccf9eb1bfe91f43e89e959e6a62a1c8dff2"
        ],
        [
            "rewrite Nat.mul_add_distr_r.",
            "VernacExtend",
            "bfae575982c6a42514adab1479203c96dc833d82"
        ],
        [
            "generalize ((N-K)*p); intros; omega.",
            "VernacExtend",
            "d86f6242a019824127fab3c1db27c1766c4ef876"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Hnk : n - k = (N-K)*p+(n0-k0).",
            "VernacDefinition",
            "eddcc21a8026c7127fbf3872f9d01cb7140c9a6a"
        ],
        [
            "rewrite Hn, Hk, Nat.mul_sub_distr_r.",
            "VernacExtend",
            "52f43a7cece85b70251b3d4673333778c5b8f2bf"
        ],
        [
            "cut (K*p <= N*p).",
            "VernacExtend",
            "d3e8077717b076093c95fcfece06ad3afcb5d9f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "generalize (K*p) (N*p); intros; omega.",
            "VernacExtend",
            "c39ea826c5ee6e9a077481b3cf30af7f6400785d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply mult_le_compat; auto.",
            "VernacExtend",
            "23867a0da828f16ce478e61e2cbb5587502a7b30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact binomial_wo_p : \u03c6 K k0 * \u03a8 K * \u03c6 (N-K) (n0-k0) * \u03a8 (N-K) * binomial n k = binomial N K * \u03c6 N n0 * \u03a8 N.",
            "VernacStartTheoremProof",
            "c770783347d348a6fb891b2b984352fbe76aa8fa"
        ],
        [
            "apply (factorial_cancel (N-K)); repeat rewrite mult_assoc.",
            "VernacExtend",
            "eba12682d84e74b5a60b77e4e279e380889dfd11"
        ],
        [
            "rewrite (mult_comm (fact _) (binomial _ _)).",
            "VernacExtend",
            "602d2bf4a18b110ac5159cccc4753449e6da3c94"
        ],
        [
            "apply (factorial_cancel K); repeat rewrite mult_assoc.",
            "VernacExtend",
            "224ff7c863d29ab8a33d8f00a1986d8f65eba52f"
        ],
        [
            "rewrite (mult_comm (fact _) (binomial _ _)).",
            "VernacExtend",
            "602d2bf4a18b110ac5159cccc4753449e6da3c94"
        ],
        [
            "rewrite <- binomial_thm; auto.",
            "VernacExtend",
            "74f90eb44727c49666426285b2a7333e80a18b1d"
        ],
        [
            "apply expo_p_cancel with N.",
            "VernacExtend",
            "727ecf3595ef2210aa0daf6340976507866049e0"
        ],
        [
            "repeat rewrite mult_assoc.",
            "VernacExtend",
            "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
        ],
        [
            "rewrite <- mprod_factorial_euclid, <- Hn.",
            "VernacExtend",
            "d598f6f59e94640b2b07cb79e143a98cd4195fb2"
        ],
        [
            "rewrite binomial_thm with (1 := Hkn).",
            "VernacExtend",
            "ca8b113565c743929bdf926763673e6ee2a95ad4"
        ],
        [
            "rewrite Hnk.",
            "VernacExtend",
            "26fe93f041bc92106b4295fa525cfa2c4afe6c2a"
        ],
        [
            "rewrite Hk at 3.",
            "VernacExtend",
            "c0b7bd6b318227d1f377747839cbeb5c6ac9a6e6"
        ],
        [
            "replace N with (K+(N-K)) at 1 by omega.",
            "VernacExtend",
            "f683810c06f46567f111fdf529413a544db68121"
        ],
        [
            "rewrite power_plus.",
            "VernacExtend",
            "155e8d7364f4cd4e881238b149fb350ecb3b1dcb"
        ],
        [
            "do 2 rewrite mprod_factorial_euclid.",
            "VernacExtend",
            "7a9b4a2ecc66429e81a7a2bbe55c804f448a415e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis (Hn0 : n0 < p).",
            "VernacAssumption",
            "b5e22ea4e5db814ec5afa2839ad1990b7609c0a9"
        ],
        [
            "Hint Resolve Zp_mult_monoid.",
            "VernacHints",
            "4a50abee4f8e8562604d7566d7550f1f42468958"
        ],
        [
            "Fact binomial_Zp_prod :\u301abinomial n k\u301b=\u301abinomial N K\u301b\u2297\u301abinomial n0 k0\u301b.",
            "VernacStartTheoremProof",
            "fd5c8576415818176f070d74bfa85235f9a30740"
        ],
        [
            "generalize binomial_wo_p; intros G.",
            "VernacExtend",
            "88982a944c285c29f9081c054138a0cc92838a7e"
        ],
        [
            "apply f_equal with (f := nat2Zp Hp) in G.",
            "VernacExtend",
            "c12b95d3d2af15c53cd85d2822b25738fa2e09cc"
        ],
        [
            "repeat rewrite nat2Zp_mult in G.",
            "VernacExtend",
            "e983edb687ee58fd387412a2b7c7936c85cdfb89"
        ],
        [
            "repeat rewrite Psi_Zp_eq in G.",
            "VernacExtend",
            "39878d4823d03f10c056afb41c053b4a288c54b3"
        ],
        [
            "repeat rewrite phi_Zp_eq in G.",
            "VernacExtend",
            "a4e53feb18c6d36722c79ee3f6c168ee29f1277f"
        ],
        [
            "rewrite binomial_thm with (1 := H2) in G.",
            "VernacExtend",
            "f9cd29b60ab0ad49c463efa17227106e29da3fc8"
        ],
        [
            "repeat rewrite nat2Zp_mult in G.",
            "VernacExtend",
            "e983edb687ee58fd387412a2b7c7936c85cdfb89"
        ],
        [
            "rewrite (Zp_mult_comm _ _\u301a fact k0 \u301b) in G.",
            "VernacExtend",
            "df8b99ce42d0c1d9a6d6cea82eb963dc7258c413"
        ],
        [
            "repeat rewrite Zp_mult_assoc in G.",
            "VernacExtend",
            "e2e88d628ede1226487913c01bdd6a2bb40998b0"
        ],
        [
            "rewrite (Zp_mult_comm _ _\u301a fact k0 \u301b) in G.",
            "VernacExtend",
            "df8b99ce42d0c1d9a6d6cea82eb963dc7258c413"
        ],
        [
            "repeat rewrite <- Zp_mult_assoc in G.",
            "VernacExtend",
            "ce275e94072197746fa16a8f37f9507c1382b35e"
        ],
        [
            "apply Zp_invertible_cancel_l in G.",
            "VernacExtend",
            "0679268932b47b990b75e1e8781cde56408d34db"
        ],
        [
            "2: apply Zp_invertible_factorial; auto; omega.",
            "VernacExtend",
            "76abc75fc5c29c568d8175a1354882364d80c39f"
        ],
        [
            "repeat rewrite Zp_mult_assoc in G.",
            "VernacExtend",
            "e2e88d628ede1226487913c01bdd6a2bb40998b0"
        ],
        [
            "do 2 rewrite (Zp_mult_comm _ _\u301a fact _ \u301b) in G.",
            "VernacExtend",
            "08b119c0ce3caa5a72b25ea37c2d0f53b397502a"
        ],
        [
            "repeat rewrite <- Zp_mult_assoc in G.",
            "VernacExtend",
            "ce275e94072197746fa16a8f37f9507c1382b35e"
        ],
        [
            "apply Zp_invertible_cancel_l in G.",
            "VernacExtend",
            "0679268932b47b990b75e1e8781cde56408d34db"
        ],
        [
            "2: apply Zp_invertible_factorial; auto; omega.",
            "VernacExtend",
            "76abc75fc5c29c568d8175a1354882364d80c39f"
        ],
        [
            "repeat rewrite Zp_mult_assoc in G.",
            "VernacExtend",
            "e2e88d628ede1226487913c01bdd6a2bb40998b0"
        ],
        [
            "rewrite <- mscal_plus in G; auto.",
            "VernacExtend",
            "406674b041752146f53e2cdf7ef1130cbcb897e2"
        ],
        [
            "replace (K+(N-K)) with N in G by omega.",
            "VernacExtend",
            "5df34b65de7e7f365589b4356b7f7782bd3d5268"
        ],
        [
            "rewrite (Zp_mult_comm _ _ (expoZp _ _)) in G.",
            "VernacExtend",
            "deb02ea845cb7e2698b57eb986c2df59232067bf"
        ],
        [
            "apply Zp_invertible_cancel_l in G; trivial.",
            "VernacExtend",
            "6e3896334e344f2a9df8a87fb206490895068158"
        ],
        [
            "apply Zp_expo_invertible, Zp_invertible_factorial; auto; omega.",
            "VernacExtend",
            "222c8c341045a5642d9bf4c5c2d21968f6d327c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End binomial_without_p_not_zero.",
            "VernacEndSegment",
            "788c7fc7e49bf975eeefa53455340e65a915062f"
        ],
        [
            "Section binomial_without_p_zero.",
            "VernacBeginSection",
            "ea3f71f08eb4f45aa8d25cd48d374a1969580827"
        ],
        [
            "Variable (n N n0 k K k0 : nat) (Hn : n = N*p+n0) (Hk : k = K*p+k0) (H1 : K < N) (H2 : n0 < k0) (Hk0 : k0 < p).",
            "VernacAssumption",
            "154046a9537290b338d164bcd9ba555672037023"
        ],
        [
            "Let H3 : p - (k0-n0) < p.",
            "VernacDefinition",
            "4629ffca7660470646c1c7f6509a1eccfe3a9530"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let H4 : S (N-1) = N.",
            "VernacDefinition",
            "e57cf52e47ca51865568d2da9a70869d74ba8e1c"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let H5 : N-1 = K+(N-(K+1)).",
            "VernacDefinition",
            "c34a38456005d9a3306f615c2011bd8d9cf99be8"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let H6 : N = K+1+(N-(K+1)).",
            "VernacDefinition",
            "bb2493d659725784d1bf5c6885bbf9e011d9bcd6"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let HNK : N-K = S (N-(K+1)).",
            "VernacDefinition",
            "2626e7cb2ddd943de039ab96d29e482d709e172f"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Hkn : k <= n.",
            "VernacDefinition",
            "1a510095d759baaaf02afdcc877069b59ce27893"
        ],
        [
            "rewrite Hn, Hk, H6.",
            "VernacExtend",
            "0926e90d80560c73f76bf190d6c25b4014798a48"
        ],
        [
            "do 2 rewrite Nat.mul_add_distr_r.",
            "VernacExtend",
            "4d497080aaad77d0f239c05a14255c0f836f6ea1"
        ],
        [
            "generalize ((N-(K+1))*p); clear H3 H4 H5 H6 HNK; intros; omega.",
            "VernacExtend",
            "232a7c4044a44655e87c43d9d1a163ea45b958fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let Hnk : n - k = (N-(K+1))*p+(p-(k0-n0)).",
            "VernacDefinition",
            "c6bc28fd6bf1b2bce77e3927270a1aa3514bcbcd"
        ],
        [
            "rewrite Hn, Hk, Nat.mul_sub_distr_r.",
            "VernacExtend",
            "52f43a7cece85b70251b3d4673333778c5b8f2bf"
        ],
        [
            "cut ((K+1)*p <= N*p).",
            "VernacExtend",
            "9481fc6191272b92bab256651b63b07293e2cbbe"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite Nat.mul_add_distr_r.",
            "VernacExtend",
            "bfae575982c6a42514adab1479203c96dc833d82"
        ],
        [
            "generalize (K*p) (N*p); clear H3 H4 H5 H6 HNK Hkn; intros; omega.",
            "VernacExtend",
            "4edc33ab0a19438dd2c954160290864fb714d572"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply mult_le_compat; auto; clear H3 H4 H5 H6 HNK Hkn; omega.",
            "VernacExtend",
            "f01e89d63c09c7edc006b4cc672fbd9afb917e1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact binomial_with_p : fact K * fact (N-(K+1)) * \u03c6 K k0 * \u03a8 K * \u03c6 (N-(K+1)) (p-(k0-n0)) * \u03a8 (N-(K+1)) * binomial n k = p * fact N * \u03c6 N n0 * \u03a8 N.",
            "VernacStartTheoremProof",
            "373e997bdc82274871889b5e9b0ddf144bd5f8f4"
        ],
        [
            "apply expo_p_cancel with (N-1).",
            "VernacExtend",
            "11ecb19101a8377de4128157843ee158f8fbc095"
        ],
        [
            "repeat rewrite mult_assoc.",
            "VernacExtend",
            "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
        ],
        [
            "rewrite (mult_comm (expo _ _) p).",
            "VernacExtend",
            "c6cca4048ed265e374402c873376d61bcbfb2d53"
        ],
        [
            "rewrite <- mscal_S.",
            "VernacExtend",
            "44ce2f7a5c36a0c4da0172aa6e2d041e41816027"
        ],
        [
            "rewrite H4, <- mprod_factorial_euclid, <- Hn.",
            "VernacExtend",
            "3938d7cb7125ae860e57c53069aeff8862d70899"
        ],
        [
            "rewrite binomial_thm with (1 := Hkn).",
            "VernacExtend",
            "ca8b113565c743929bdf926763673e6ee2a95ad4"
        ],
        [
            "rewrite Hnk.",
            "VernacExtend",
            "26fe93f041bc92106b4295fa525cfa2c4afe6c2a"
        ],
        [
            "rewrite Hk at 3.",
            "VernacExtend",
            "c0b7bd6b318227d1f377747839cbeb5c6ac9a6e6"
        ],
        [
            "do 2 rewrite mprod_factorial_euclid.",
            "VernacExtend",
            "7a9b4a2ecc66429e81a7a2bbe55c804f448a415e"
        ],
        [
            "rewrite H5 at 1.",
            "VernacExtend",
            "e45231feb6c098290593bac2aac2ef3f6a91cb16"
        ],
        [
            "rewrite power_plus.",
            "VernacExtend",
            "155e8d7364f4cd4e881238b149fb350ecb3b1dcb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact binomial_with_p' : \u03c6 K k0 * \u03a8 K * \u03c6 (N-(K+1)) (p-(k0-n0)) * \u03a8 (N-(K+1)) * binomial n k = p * binomial N K * (N-K) * \u03c6 N n0 * \u03a8 N.",
            "VernacStartTheoremProof",
            "67371d5895d68853ed12c6cddb29b8133081b14e"
        ],
        [
            "apply (factorial_cancel (N-(K+1))); repeat rewrite mult_assoc.",
            "VernacExtend",
            "0c2bf4a85a093e60dedbfb12082c50956e6f9558"
        ],
        [
            "apply (factorial_cancel K); repeat rewrite mult_assoc.",
            "VernacExtend",
            "224ff7c863d29ab8a33d8f00a1986d8f65eba52f"
        ],
        [
            "rewrite binomial_with_p.",
            "VernacExtend",
            "e2350d8ac51e500349064077fa1a274acdc8ae13"
        ],
        [
            "rewrite binomial_thm with (n := N) (p := K).",
            "VernacExtend",
            "7b0f0efe64c84ed399519991d307b728fc75a1b2"
        ],
        [
            "2: {",
            "VernacSubproof",
            "df86388f8203fd8f763270be53203e33d38bca86"
        ],
        [
            "apply lt_le_weak; auto.",
            "VernacExtend",
            "8ceda1915937002cfad73199d97036567b8326a1"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite HNK at 1.",
            "VernacExtend",
            "210b4e7b83c5caf0bb648d70847fe2bf55659dd1"
        ],
        [
            "rewrite fact_S.",
            "VernacExtend",
            "5bd2ec9381651efbf945435e05e95c1966b1b108"
        ],
        [
            "rewrite <- HNK.",
            "VernacExtend",
            "af807355ae91f18735c2f35ad3494a8310f7c151"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact binomial_Zp_zero :\u301abinomial n k\u301b= Zp.",
            "VernacStartTheoremProof",
            "1ed6a49ca1ed65c74c0153b841d4d365d3d7a7da"
        ],
        [
            "generalize binomial_with_p'; intros G.",
            "VernacExtend",
            "4eafe5f596d00126533615d17b0c2ea82ac9210b"
        ],
        [
            "apply f_equal with (f := nat2Zp Hp) in G.",
            "VernacExtend",
            "c12b95d3d2af15c53cd85d2822b25738fa2e09cc"
        ],
        [
            "repeat rewrite nat2Zp_mult in G.",
            "VernacExtend",
            "e983edb687ee58fd387412a2b7c7936c85cdfb89"
        ],
        [
            "rewrite nat2Zp_p in G.",
            "VernacExtend",
            "66d31a1c85be77748c96577a6271425ba833e9ff"
        ],
        [
            "repeat rewrite Zp_mult_zero in G.",
            "VernacExtend",
            "c6617972fcc62306139c3978a63c072a76d8b0b2"
        ],
        [
            "apply Zp_invertible_eq_zero in G; auto.",
            "VernacExtend",
            "8b1ef32b5a99c092d68e5e8bbba9105b224caf2e"
        ],
        [
            "repeat (apply Zp_mult_invertible; auto).",
            "VernacExtend",
            "12d768d6257956ca79dc5d8e865f830f2e5a8741"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End binomial_without_p_zero.",
            "VernacEndSegment",
            "9430d9b4a67330d6b56ef18b7f2d170991da8a79"
        ],
        [
            "End fact.",
            "VernacEndSegment",
            "db23c6d5dece1b83fc398a0af1915ad7798d8007"
        ],
        [
            "Section lucas_lemma.",
            "VernacBeginSection",
            "af4d34c4701395fe22dad0549432b5fca4a6e9bd"
        ],
        [
            "Variables (p : nat) (Hprime : prime p).",
            "VernacAssumption",
            "0df5a0ff3386bf89e1a1c9222c85573bbe8178d3"
        ],
        [
            "Let Hp : p <> 0.",
            "VernacDefinition",
            "ac73988a041bdaf5d54759dc5978d433ca1e1bb5"
        ],
        [
            "generalize (prime_ge_2 Hprime); intro; omega.",
            "VernacExtend",
            "b39d123cc37cd0575ebaefbbda11079c0fd2538b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (n N n0 k K k0 : nat) (G1 : n = N*p+n0) (G2 : n0 < p) (G3 : k = K*p+k0) (G4 : k0 < p).",
            "VernacAssumption",
            "cbba52fb61939e5a71c801ee9975708690321615"
        ],
        [
            "Let choice : (K <= N /\\ k0 <= n0) \\/ (n0 < k0 /\\ K < N) \\/ ((n0 < k0 \\/ N < K) /\\ n < k).",
            "VernacDefinition",
            "6152efbebd4aefa0e4cd5805627aa717056bb998"
        ],
        [
            "destruct (le_lt_dec k n) as [ H0 | H0 ]; destruct (le_lt_dec k0 n0) as [ H1 | H1 ]; destruct (le_lt_dec K N) as [ H2 | H2 ]; try omega.",
            "VernacExtend",
            "0a050d956c140f0263ad3e1c77e990e6c71a7e2c"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 right; split; auto.",
            "VernacExtend",
            "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
        ],
        [
            "rewrite G1, G3.",
            "VernacExtend",
            "8c7beeceb222568779bb5f1bdd849c4332372ef6"
        ],
        [
            "replace K with (N+1+(K-N-1)) by omega.",
            "VernacExtend",
            "ed94737e461166ff3417879212405df1c9eccfc2"
        ],
        [
            "do 2 rewrite Nat.mul_add_distr_r.",
            "VernacExtend",
            "4d497080aaad77d0f239c05a14255c0f836f6ea1"
        ],
        [
            "generalize ((K-N-1)*p); intros; omega.",
            "VernacExtend",
            "290eaff75e55daaf1ccde9f9f1a14d302527084a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (eq_nat_dec N K); try omega.",
            "VernacExtend",
            "c9e44908ec2bd668be4e9100d8b4d9f569a3434e"
        ],
        [
            "do 2 right; split; auto.",
            "VernacExtend",
            "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
        ],
        [
            "rewrite G1, G3; subst N; omega.",
            "VernacExtend",
            "6ce90f3e448b86aabd16372845aafdeadd97242b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "do 2 right; split; auto.",
            "VernacExtend",
            "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
        ],
        [
            "rewrite G1, G3.",
            "VernacExtend",
            "8c7beeceb222568779bb5f1bdd849c4332372ef6"
        ],
        [
            "replace K with (N+1+(K-N-1)) by omega.",
            "VernacExtend",
            "ed94737e461166ff3417879212405df1c9eccfc2"
        ],
        [
            "do 2 rewrite Nat.mul_add_distr_r.",
            "VernacExtend",
            "4d497080aaad77d0f239c05a14255c0f836f6ea1"
        ],
        [
            "generalize ((K-N-1)*p); intros; omega.",
            "VernacExtend",
            "290eaff75e55daaf1ccde9f9f1a14d302527084a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lucas_lemma : rem (binomial n k) p = rem (binomial N K * binomial n0 k0) p.",
            "VernacStartTheoremProof",
            "162c6e1f226600c3e52ef06c520e95ceff61eebe"
        ],
        [
            "destruct choice as [ (H1 & H2) | [ (H1 & H2) | (H1 & H2) ] ]; clear choice.",
            "VernacExtend",
            "073d95992abba74d09d5a581aeef44201864d05c"
        ],
        [
            "3: {",
            "VernacSubproof",
            "2472dae969aab1a5dcd426636e9ecb0bcfa8a644"
        ],
        [
            "rewrite binomial_gt with (1 := H2).",
            "VernacExtend",
            "787ca7a0d0f87fd1e66e0f7d414038aa1f777901"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct H1 as [ H1 | H1 ]; rewrite binomial_gt with (1 := H1); ring.",
            "VernacExtend",
            "94bd33f76a70a3cbafd00931e873183f6450a1b5"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply nat2Zp_inj with (Hp := Hp).",
            "VernacExtend",
            "7a5e771d5afd8fbafd6750a7f616e4949d74513a"
        ],
        [
            "rewrite nat2Zp_mult.",
            "VernacExtend",
            "85fd0e35f4966017abf915537eab93372f83b356"
        ],
        [
            "apply binomial_Zp_prod; auto.",
            "VernacExtend",
            "d4379aa54d84a184561bf4306bc0216977959b7f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite binomial_gt with (1 := H1).",
            "VernacExtend",
            "598e7364a80e551d29356df238ffa1311641079a"
        ],
        [
            "rewrite Nat.mul_0_r.",
            "VernacExtend",
            "b0c342e42232568149a672c331046fa4df1777ff"
        ],
        [
            "apply nat2Zp_inj with (Hp := Hp).",
            "VernacExtend",
            "7a5e771d5afd8fbafd6750a7f616e4949d74513a"
        ],
        [
            "rewrite nat2Zp_zero.",
            "VernacExtend",
            "fe8f409548ab08059a624b8746821b85b95ec991"
        ],
        [
            "apply binomial_Zp_zero with (2 := G1) (3 := G3); auto.",
            "VernacExtend",
            "baaaf0a433ff99ad45812fb46fee551b5a66c27d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End lucas_lemma.",
            "VernacEndSegment",
            "75e80a48286e68bd51aafe4ec13a07fd0f38366f"
        ],
        [
            "Check lucas_lemma.",
            "VernacCheckMayEval",
            "8d153d48758dbe93122cfa37e01a0b959474ef2b"
        ],
        [
            "Print Assumptions lucas_lemma.",
            "VernacPrint",
            "7b8849ca4d7205da79e756edba6c906896d46765"
        ]
    ],
    "proofs": [
        {
            "name": "factorial_cancel",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "apply Nat.mul_cancel_l.",
                        "VernacExtend",
                        "0f42472668c8b17f0751030ea46b1ad87e58f31d"
                    ]
                },
                {
                    "command": [
                        "generalize (fact_gt_0 n); intro; lia.",
                        "VernacExtend",
                        "600cd45a3a17bab81f52acd5b553ee73fd2c8190"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_factorial",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "induction n as [ | n IHn ].",
                        "VernacExtend",
                        "11271b942636cfbc18c3a3b84021521c0265d324"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite msum_0; auto.",
                        "VernacExtend",
                        "a2a3055c85807fbc2ac21f6a3bf4879a9a8e2abf"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite msum_plus1; auto.",
                        "VernacExtend",
                        "767371b347a04d2917981c1a8058a4cdf863683d"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm, <- IHn, fact_S.",
                        "VernacExtend",
                        "2dd1e79ef7c080e25d5270ff4404fdf0802bbc8f"
                    ]
                },
                {
                    "command": [
                        "f_equal; lia.",
                        "VernacExtend",
                        "6d8c56ee5565b355fb330bafd34b13918336c346"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expo_p_cancel",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "apply Nat.mul_cancel_l.",
                        "VernacExtend",
                        "0f42472668c8b17f0751030ea46b1ad87e58f31d"
                    ]
                },
                {
                    "command": [
                        "generalize (power_ge_1 n Hp); intros; lia.",
                        "VernacExtend",
                        "da20fca9bcffa178af616fe43726685f77724587"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mprod_factorial_Zp",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "rewrite mprod_factorial.",
                        "VernacExtend",
                        "b602a5e726506a2187d14232b9944694f0033e8a"
                    ]
                },
                {
                    "command": [
                        "induction n as [ | n IHn ].",
                        "VernacExtend",
                        "11271b942636cfbc18c3a3b84021521c0265d324"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite msum_0; auto.",
                        "VernacExtend",
                        "7134c673f48c9a7cabd3570c86c450d1e120e83a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "do 2 (rewrite msum_plus1; auto).",
                        "VernacExtend",
                        "411d7eb8a380bb1c74c7e2f322fe353dcbd44e1d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite nat2Zp_mult; f_equal; auto.",
                        "VernacExtend",
                        "e571e788cb94ccacd7ce8e40ab77f3aba9f9a81c"
                    ]
                },
                {
                    "command": [
                        "apply nat2Zp_inj.",
                        "VernacExtend",
                        "527f9d13c9258df19407e6619e5ab2e484cece25"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm n), <- plus_assoc, plus_comm.",
                        "VernacExtend",
                        "6cda6951aebcbb35d1d48548f4f358bf46773845"
                    ]
                },
                {
                    "command": [
                        "rewrite <- rem_plus_div; auto.",
                        "VernacExtend",
                        "b94d065c277dd6bea418ac81f03ea6b90281973a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "f_equal; lia.",
                        "VernacExtend",
                        "6d8c56ee5565b355fb330bafd34b13918336c346"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply divides_mult, divides_refl.",
                        "VernacExtend",
                        "b626de07aa0746d1973b27b102ddadc92bb4da58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_Zp_eq",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "apply mprod_factorial_Zp.",
                        "VernacExtend",
                        "decf10910c080cfb3c8ee9761d908e39d12a6bfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_Zp_invertible",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros H; simpl; rewrite phi_Zp_eq.",
                        "VernacExtend",
                        "93e6810bba85fdb8c0bc3008e9125c06dd392810"
                    ]
                },
                {
                    "command": [
                        "apply Zp_invertible_factorial; auto.",
                        "VernacExtend",
                        "fa0d06abc14b5731a74d3946cb03fe3845b7021d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Psi_Zp_invertible",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "simpl; rewrite (Psi_Zp_eq n).",
                        "VernacExtend",
                        "deac6add4861e4856df759a87e7c728fe8dba686"
                    ]
                },
                {
                    "command": [
                        "apply Zp_expo_invertible, Zp_invertible_factorial; auto; omega.",
                        "VernacExtend",
                        "222c8c341045a5642d9bf4c5c2d21968f6d327c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hkn",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "rewrite Hn, Hk.",
                        "VernacExtend",
                        "47a7cf41be99fe3505d5e1eb8a58e2dc5d89bfcb"
                    ]
                },
                {
                    "command": [
                        "replace N with (K+(N-K)) by omega.",
                        "VernacExtend",
                        "c64ecccf9eb1bfe91f43e89e959e6a62a1c8dff2"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "bfae575982c6a42514adab1479203c96dc833d82"
                    ]
                },
                {
                    "command": [
                        "generalize ((N-K)*p); intros; omega.",
                        "VernacExtend",
                        "d86f6242a019824127fab3c1db27c1766c4ef876"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hnk",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "rewrite Hn, Hk, Nat.mul_sub_distr_r.",
                        "VernacExtend",
                        "52f43a7cece85b70251b3d4673333778c5b8f2bf"
                    ]
                },
                {
                    "command": [
                        "cut (K*p <= N*p).",
                        "VernacExtend",
                        "d3e8077717b076093c95fcfece06ad3afcb5d9f9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "generalize (K*p) (N*p); intros; omega.",
                        "VernacExtend",
                        "c39ea826c5ee6e9a077481b3cf30af7f6400785d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat; auto.",
                        "VernacExtend",
                        "23867a0da828f16ce478e61e2cbb5587502a7b30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binomial_wo_p",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "apply (factorial_cancel (N-K)); repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "eba12682d84e74b5a60b77e4e279e380889dfd11"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (fact _) (binomial _ _)).",
                        "VernacExtend",
                        "602d2bf4a18b110ac5159cccc4753449e6da3c94"
                    ]
                },
                {
                    "command": [
                        "apply (factorial_cancel K); repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "224ff7c863d29ab8a33d8f00a1986d8f65eba52f"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (fact _) (binomial _ _)).",
                        "VernacExtend",
                        "602d2bf4a18b110ac5159cccc4753449e6da3c94"
                    ]
                },
                {
                    "command": [
                        "rewrite <- binomial_thm; auto.",
                        "VernacExtend",
                        "74f90eb44727c49666426285b2a7333e80a18b1d"
                    ]
                },
                {
                    "command": [
                        "apply expo_p_cancel with N.",
                        "VernacExtend",
                        "727ecf3595ef2210aa0daf6340976507866049e0"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mprod_factorial_euclid, <- Hn.",
                        "VernacExtend",
                        "d598f6f59e94640b2b07cb79e143a98cd4195fb2"
                    ]
                },
                {
                    "command": [
                        "rewrite binomial_thm with (1 := Hkn).",
                        "VernacExtend",
                        "ca8b113565c743929bdf926763673e6ee2a95ad4"
                    ]
                },
                {
                    "command": [
                        "rewrite Hnk.",
                        "VernacExtend",
                        "26fe93f041bc92106b4295fa525cfa2c4afe6c2a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk at 3.",
                        "VernacExtend",
                        "c0b7bd6b318227d1f377747839cbeb5c6ac9a6e6"
                    ]
                },
                {
                    "command": [
                        "replace N with (K+(N-K)) at 1 by omega.",
                        "VernacExtend",
                        "f683810c06f46567f111fdf529413a544db68121"
                    ]
                },
                {
                    "command": [
                        "rewrite power_plus.",
                        "VernacExtend",
                        "155e8d7364f4cd4e881238b149fb350ecb3b1dcb"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mprod_factorial_euclid.",
                        "VernacExtend",
                        "7a9b4a2ecc66429e81a7a2bbe55c804f448a415e"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H3",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H4",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H5",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "H6",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "HNK",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binomial_with_p",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "apply expo_p_cancel with (N-1).",
                        "VernacExtend",
                        "11ecb19101a8377de4128157843ee158f8fbc095"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_assoc.",
                        "VernacExtend",
                        "a9d6f8cc2c39ba604caa14101b3c958d959ccde5"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (expo _ _) p).",
                        "VernacExtend",
                        "c6cca4048ed265e374402c873376d61bcbfb2d53"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mscal_S.",
                        "VernacExtend",
                        "44ce2f7a5c36a0c4da0172aa6e2d041e41816027"
                    ]
                },
                {
                    "command": [
                        "rewrite H4, <- mprod_factorial_euclid, <- Hn.",
                        "VernacExtend",
                        "3938d7cb7125ae860e57c53069aeff8862d70899"
                    ]
                },
                {
                    "command": [
                        "rewrite binomial_thm with (1 := Hkn).",
                        "VernacExtend",
                        "ca8b113565c743929bdf926763673e6ee2a95ad4"
                    ]
                },
                {
                    "command": [
                        "rewrite Hnk.",
                        "VernacExtend",
                        "26fe93f041bc92106b4295fa525cfa2c4afe6c2a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk at 3.",
                        "VernacExtend",
                        "c0b7bd6b318227d1f377747839cbeb5c6ac9a6e6"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mprod_factorial_euclid.",
                        "VernacExtend",
                        "7a9b4a2ecc66429e81a7a2bbe55c804f448a415e"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 at 1.",
                        "VernacExtend",
                        "e45231feb6c098290593bac2aac2ef3f6a91cb16"
                    ]
                },
                {
                    "command": [
                        "rewrite power_plus.",
                        "VernacExtend",
                        "155e8d7364f4cd4e881238b149fb350ecb3b1dcb"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binomial_Zp_zero",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "generalize binomial_with_p'; intros G.",
                        "VernacExtend",
                        "4eafe5f596d00126533615d17b0c2ea82ac9210b"
                    ]
                },
                {
                    "command": [
                        "apply f_equal with (f := nat2Zp Hp) in G.",
                        "VernacExtend",
                        "c12b95d3d2af15c53cd85d2822b25738fa2e09cc"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite nat2Zp_mult in G.",
                        "VernacExtend",
                        "e983edb687ee58fd387412a2b7c7936c85cdfb89"
                    ]
                },
                {
                    "command": [
                        "rewrite nat2Zp_p in G.",
                        "VernacExtend",
                        "66d31a1c85be77748c96577a6271425ba833e9ff"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zp_mult_zero in G.",
                        "VernacExtend",
                        "c6617972fcc62306139c3978a63c072a76d8b0b2"
                    ]
                },
                {
                    "command": [
                        "apply Zp_invertible_eq_zero in G; auto.",
                        "VernacExtend",
                        "8b1ef32b5a99c092d68e5e8bbba9105b224caf2e"
                    ]
                },
                {
                    "command": [
                        "repeat (apply Zp_mult_invertible; auto).",
                        "VernacExtend",
                        "12d768d6257956ca79dc5d8e865f830f2e5a8741"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hp",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "generalize (prime_ge_2 Hprime); intro; omega.",
                        "VernacExtend",
                        "b39d123cc37cd0575ebaefbbda11079c0fd2538b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choice",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "destruct (le_lt_dec k n) as [ H0 | H0 ]; destruct (le_lt_dec k0 n0) as [ H1 | H1 ]; destruct (le_lt_dec K N) as [ H2 | H2 ]; try omega.",
                        "VernacExtend",
                        "0a050d956c140f0263ad3e1c77e990e6c71a7e2c"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "do 2 right; split; auto.",
                        "VernacExtend",
                        "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
                    ]
                },
                {
                    "command": [
                        "rewrite G1, G3.",
                        "VernacExtend",
                        "8c7beeceb222568779bb5f1bdd849c4332372ef6"
                    ]
                },
                {
                    "command": [
                        "replace K with (N+1+(K-N-1)) by omega.",
                        "VernacExtend",
                        "ed94737e461166ff3417879212405df1c9eccfc2"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "4d497080aaad77d0f239c05a14255c0f836f6ea1"
                    ]
                },
                {
                    "command": [
                        "generalize ((K-N-1)*p); intros; omega.",
                        "VernacExtend",
                        "290eaff75e55daaf1ccde9f9f1a14d302527084a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_nat_dec N K); try omega.",
                        "VernacExtend",
                        "c9e44908ec2bd668be4e9100d8b4d9f569a3434e"
                    ]
                },
                {
                    "command": [
                        "do 2 right; split; auto.",
                        "VernacExtend",
                        "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
                    ]
                },
                {
                    "command": [
                        "rewrite G1, G3; subst N; omega.",
                        "VernacExtend",
                        "6ce90f3e448b86aabd16372845aafdeadd97242b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "do 2 right; split; auto.",
                        "VernacExtend",
                        "87b668f3d12299bcd5b496e1aedd6ff7dc5fafc5"
                    ]
                },
                {
                    "command": [
                        "rewrite G1, G3.",
                        "VernacExtend",
                        "8c7beeceb222568779bb5f1bdd849c4332372ef6"
                    ]
                },
                {
                    "command": [
                        "replace K with (N+1+(K-N-1)) by omega.",
                        "VernacExtend",
                        "ed94737e461166ff3417879212405df1c9eccfc2"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Nat.mul_add_distr_r.",
                        "VernacExtend",
                        "4d497080aaad77d0f239c05a14255c0f836f6ea1"
                    ]
                },
                {
                    "command": [
                        "generalize ((K-N-1)*p); intros; omega.",
                        "VernacExtend",
                        "290eaff75e55daaf1ccde9f9f1a14d302527084a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}