{
    "filename": "FOL/MarkovPost.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "Require Export DecidableEnumerable.",
            "VernacRequire",
            "e2a675b89ce6f67c19a4b1ed27f59b196d422f90"
        ],
        [
            "Require Import ConstructiveEpsilon.",
            "VernacRequire",
            "68f207dea2dca3fdd568cda6e69a6c3f4f2e5ce7"
        ],
        [
            "Definition stable P := ~~ P -> P.",
            "VernacDefinition",
            "808c27428263f72d2e4710d1bf69d8d12e05ed13"
        ],
        [
            "Definition MP := forall f : nat -> bool, stable (exists n, f n = true).",
            "VernacDefinition",
            "1b162a5b81cbececb128550213adf7d0f583cd81"
        ],
        [
            "Definition mu (p : nat -> Prop) : (forall x, dec (p x)) -> ex p -> sig p.",
            "VernacDefinition",
            "28d45889d14e9fe1e620ccd7f22a2a798adb962d"
        ],
        [
            "apply constructive_indefinite_ground_description_nat_Acc.",
            "VernacExtend",
            "d7346b43be314ba78dd8342e322b3bbfa9a01cbf"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Local Notation R p := (fun x y : nat => x = S y /\\ ~ p y).",
            "VernacSyntacticDefinition",
            "bc6b6a2193bff429c72ef871cab420b871062cb1"
        ],
        [
            "Lemma Acc_ind_dep (A : Type) (R : A -> A -> Prop) (P : forall a, Acc R a -> Prop) : (forall x (F : (forall y, R y x -> Acc R y)), (forall y (Hy : R y x), P y (F y Hy)) -> P x (Acc_intro x F)) -> forall x (h : Acc R x), P x h.",
            "VernacStartTheoremProof",
            "fe3a685e969c7b815ba342e1c68255aaa70f7a22"
        ],
        [
            "refine (fix f H x h := match h with Acc_intro _ F => _ end).",
            "VernacExtend",
            "445efcbda09105b78f6815f120df460ff3ec6bd6"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply f, H.",
            "VernacExtend",
            "8a0caba02298b624449fcc13de181ae59ba62d70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mu' d H := (proj1_sig (mu d H)).",
            "VernacSyntacticDefinition",
            "56c2bcc763c9dd8033fbfaa998731910188d66c0"
        ],
        [
            "Lemma mu_least (p : nat -> Prop) (d : forall x, dec (p x)) (H : ex p) : forall n, p n -> mu' d H <= n.",
            "VernacStartTheoremProof",
            "232062c08665599ac0105128faf269133f1d64da"
        ],
        [
            "intros n H'.",
            "VernacExtend",
            "c5e15d288e71c7c4067088ce1e3eb273ec98abc8"
        ],
        [
            "unfold mu, constructive_indefinite_ground_description_nat_Acc.",
            "VernacExtend",
            "6cad16765ad7fe05f534f81e34d15c25838579e7"
        ],
        [
            "unfold acc_implies_P_eventually.",
            "VernacExtend",
            "6595d1cc3f84a6d0e3687e9f374f98f4b4fc1d07"
        ],
        [
            "assert (Hn : 0 <= n) by omega.",
            "VernacExtend",
            "225f1ea82c1ba5f18e2577529c681e3f3a7e468a"
        ],
        [
            "revert n H' Hn.",
            "VernacExtend",
            "07d969c12b8604e757154e05767018f17cb83325"
        ],
        [
            "generalize 0, (P_eventually_implies_acc_ex p H).",
            "VernacExtend",
            "78cf8701ae7885f78d0f1d75e729d337858e2944"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "intros k H.",
            "VernacExtend",
            "861d8637855845933b7ce128bca91fd0a76ed132"
        ],
        [
            "pattern k, H.",
            "VernacExtend",
            "e5a84ffd58e37bbdb2ff07795e7c303f94afc124"
        ],
        [
            "apply (@Acc_ind_dep nat (R p)).",
            "VernacExtend",
            "e6a64b2fdbec09f910075300d0d5f29b8a6b064c"
        ],
        [
            "clear k H.",
            "VernacExtend",
            "7bca741ae549b06290f0a04d17348834076f36b1"
        ],
        [
            "intros k F IH n H1 H2.",
            "VernacExtend",
            "ffa8dfd671b9f0765d3a2911cdef68defa80de8c"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "destruct (d k) as [H|H]; trivial.",
            "VernacExtend",
            "6147e475e482d79d8bbacd3c0ec2a5c10156fee2"
        ],
        [
            "destruct Fix_F eqn : E.",
            "VernacExtend",
            "10c6bc70ec4ae3f9a57e319991046e8f12488faa"
        ],
        [
            "rewrite <- E.",
            "VernacExtend",
            "c62c6425624de37707b227590f371d7ae7fc2165"
        ],
        [
            "apply IH; trivial.",
            "VernacExtend",
            "d07baf6d5be047e14661f15d99492b83bd716ca7"
        ],
        [
            "clear E.",
            "VernacExtend",
            "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
        ],
        [
            "apply le_lt_eq_dec in H2 as [H2|H2]; subst; tauto.",
            "VernacExtend",
            "315ad05a03cf4538764804d874184072d25f315d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ldecidable X (p : X -> Prop) := forall x, p x \\/ ~ p x.",
            "VernacDefinition",
            "cf68df0a34f63d9b72162aef17a6ffd7663fdd1b"
        ],
        [
            "Lemma weakPost X (p : X -> Prop) : discrete X -> ldecidable p -> enumerable p -> enumerable (compl p) -> decidable p.",
            "VernacStartTheoremProof",
            "92a19ad4e40346930479495b432b8eb0277ef314"
        ],
        [
            "intros [E] % discrete_iff Hl [f Hf] [g Hg].",
            "VernacExtend",
            "445599a0306f3538d73657425dd0106b3b2a7f85"
        ],
        [
            "eapply decidable_iff.",
            "VernacExtend",
            "bc5aa7eaadd6c2d6e6e1b86b5cdcf75a3b17bf33"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "assert (exists n, f n = Some x \\/ g n = Some x) by (destruct (Hl x); firstorder).",
            "VernacExtend",
            "cc672ec91388f0c6b7498050a989040daa3b5145"
        ],
        [
            "destruct (mu (p := fun n => f n = Some x \\/ g n = Some x)) as [n HN]; trivial.",
            "VernacExtend",
            "af48757629393826ae787f030b6054d03b7f3f29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "exact _.",
            "VernacExtend",
            "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "decide (f n = Some x); decide (g n = Some x); firstorder.",
            "VernacExtend",
            "74121fc8835c8052d5d442e1ff61b70888f6a39d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MP_to_decMP : MP -> (forall p : nat -> Prop, decidable p -> stable (exists n, p n)).",
            "VernacStartTheoremProof",
            "62d99b95e84815a9c036b284124074eeac5e487e"
        ],
        [
            "intros H p [d Hd] ?.",
            "VernacExtend",
            "18c5ba22bf3015b6372afbb0449b353953a17b8c"
        ],
        [
            "specialize (H (fun x => if d x then true else false)).",
            "VernacExtend",
            "f7e81cd9b83ec8e5d3b163125b6968132a2667ac"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ?.",
            "VernacExtend",
            "5788280a665e6aa2c91e15fef1a838ff418c63fe"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "intros [n].",
            "VernacExtend",
            "26a1230e204196fed8e13cae97a07395ec0331c7"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "now eapply Hd in H1 as ->.",
            "VernacExtend",
            "393ebc2ae9aa1d792fbf16ea42fbfad826f6d65e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize (Hd x).",
            "VernacExtend",
            "59992baf2f2f3475b24b502cd17d05fca15157c5"
        ],
        [
            "destruct (d x); try congruence.",
            "VernacExtend",
            "0e77cf02641eddabf2d384c0ed75bddbd2f92ee4"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "now eapply Hd.",
            "VernacExtend",
            "142063f6690aec1b600e5d6098017701b831482c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decMP_to_eMP : (forall p : nat -> Prop, decidable p -> stable (exists n, p n)) -> (forall X (p : X -> Prop), enumerable p -> stable (exists n, p n)).",
            "VernacStartTheoremProof",
            "9599d6f7fcfa709c160403ef0bc3b7072ae549e9"
        ],
        [
            "intros dMP X p [e He] ?.",
            "VernacExtend",
            "4d209d796cd49fdec5ebefac2b3824edef32afa2"
        ],
        [
            "destruct (dMP (fun n => e n <> None)).",
            "VernacExtend",
            "af604d44a388cb710ebdcb369455f2aa8fe51306"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (fun n => match e n with Some _ => true | _ => false end).",
            "VernacExtend",
            "316564179a38a23dd8d8b79655b13be3c83de702"
        ],
        [
            "intros; destruct (e x); firstorder congruence.",
            "VernacExtend",
            "34e6c99aa80fc8466ce15c5ae517e704cdfee135"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ?.",
            "VernacExtend",
            "5788280a665e6aa2c91e15fef1a838ff418c63fe"
        ],
        [
            "eapply H.",
            "VernacExtend",
            "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
        ],
        [
            "intros [x].",
            "VernacExtend",
            "b6f8a31ee6f91224682194402b42b1a1fbef88b9"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "eapply He in H1 as [n].",
            "VernacExtend",
            "206d76156cfb954529157738563279491ba7a67e"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (e x) eqn:E; try congruence.",
            "VernacExtend",
            "917dc587f2e61b1d6a0bcffac4125fb6a4074687"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "eapply He.",
            "VernacExtend",
            "a73a5c861df77c1a9b9e80c41a03e1319813b381"
        ],
        [
            "now exists x.",
            "VernacExtend",
            "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eMP_to_MP : (forall X (p : X -> Prop), enumerable p -> stable (exists n, p n)) -> MP.",
            "VernacStartTheoremProof",
            "855c0569cdedc924c333ef05f894d2e848e05d09"
        ],
        [
            "intros eMP f ?.",
            "VernacExtend",
            "68348b9b5d9d76d67b67de80db3188fd0fe402ff"
        ],
        [
            "destruct (eMP nat (fun n => f n = true)).",
            "VernacExtend",
            "bb536996a0125b294fa4042a17959fd64d44788c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply dec_count_enum.",
            "VernacExtend",
            "977936f6e3dfd291ca8cb16825ab954da90754ff"
        ],
        [
            "now exists f.",
            "VernacExtend",
            "a600bf7a517b68caa85efe8b45902831173f4308"
        ],
        [
            "exists Some.",
            "VernacExtend",
            "a72518a9f097e69d71e4c8fbb2eb17c7b83789fe"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MP_enum_stable X (p : X -> Prop) : MP -> enumerable p -> discrete X -> forall x, stable (p x).",
            "VernacStartTheoremProof",
            "dcbf8ddae413fb06129144d421ca798a377b5d57"
        ],
        [
            "intros MP [f Hf] [d Hd] x.",
            "VernacExtend",
            "6c6fd3a9903d1f03df0ddd5ebdbd915d9a4b44f8"
        ],
        [
            "eapply MP_to_decMP with (p := fun n => f n = Some x) in MP.",
            "VernacExtend",
            "3dac2efe54721025612a59ac13d52a1a555ca38d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite Hf in *.",
            "VernacExtend",
            "b595f570c0e0eecd77b0bef1f6b9dd9f4e112dd9"
        ],
        [
            "now eapply MP.",
            "VernacExtend",
            "5ba46113f7d0225148bbd4d729a898805661783b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (fun n => match f n with Some x' => d (x, x') | _ => false end).",
            "VernacExtend",
            "ed9cf19d352ecebfe79ba4ffc5d695813ee2164f"
        ],
        [
            "intros x0.",
            "VernacExtend",
            "09b79f25f84b65c9fb0970e97694a47d7bf25c51"
        ],
        [
            "destruct (f x0).",
            "VernacExtend",
            "d104a42a9928f2630f8995a311191dc104378aba"
        ],
        [
            "rewrite <- (Hd (x,x1)).",
            "VernacExtend",
            "c7cae97bcf70422357b49fdf2164021335586459"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "split; inversion 1.",
            "VernacExtend",
            "34ec1e1110f18667a6b74289a129abaaa399fef1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition POST' := forall X (p : X -> Prop), discrete X -> enumerable p -> enumerable (fun x => ~ p x) -> ldecidable p.",
            "VernacDefinition",
            "74e6f5b1d8522af80146abbdbb55edee19920176"
        ],
        [
            "Theorem MP_Post : MP -> POST'.",
            "VernacStartTheoremProof",
            "31a36fac42785238dd9f2f4e2900b741c97f74ef"
        ],
        [
            "intros mp X p HX [f Hf] [g Hg].",
            "VernacExtend",
            "5bec50316e6625d1e2a7d7829730c4e432beeb73"
        ],
        [
            "cut (forall x, exists n, f n = Some x \\/ g n = Some x).",
            "VernacExtend",
            "03bee235f4113e4c7ea1aa044e73e53b0ca90722"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H x.",
            "VernacExtend",
            "87be58c3f8601745cbeb0b5294cd08e90f1017b1"
        ],
        [
            "destruct (H x); firstorder.",
            "VernacExtend",
            "98914c5d901f0f879c7a3166fa5fe513eb96032a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply (MP_to_decMP mp).",
            "VernacExtend",
            "9e2e8d8baff04e80114d1dbfc4e599261956ff76"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply discrete_iff in HX as [H].",
            "VernacExtend",
            "ba641c77ebee7cc4f7409963d431262a2d7dd0ac"
        ],
        [
            "apply decidable_iff.",
            "VernacExtend",
            "58e913dc70f3a1d966b9467285dd28006cad9661"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "exact _.",
            "VernacExtend",
            "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "assert (H1 : ~ ~ (p x \\/ ~ p x)) by tauto.",
            "VernacExtend",
            "368b4d2caacd0dd86f12db2feacd429602adb0e9"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Post_to' : POST' -> MP.",
            "VernacStartTheoremProof",
            "10c6ae0e425d079c9cc6262e63c492c49cf2ba8c"
        ],
        [
            "intros HP.",
            "VernacExtend",
            "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
        ],
        [
            "apply eMP_to_MP.",
            "VernacExtend",
            "50bfeac4efc04b0a823949c019b9e1cf099c664d"
        ],
        [
            "apply decMP_to_eMP.",
            "VernacExtend",
            "17125dc5cd7b0e4689fd6875851494618ded91c5"
        ],
        [
            "intros p [Hp] % decidable_iff H.",
            "VernacExtend",
            "d92773d7c6e26a1c30a2a7ccd48fc5bb67a01c3a"
        ],
        [
            "destruct (HP nat (fun _ => exists n, p n)) with (x:=0); trivial.",
            "VernacExtend",
            "1f6508e7bfee09e8dc59ec6fbf7e79911d5a5ded"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply discrete_iff.",
            "VernacExtend",
            "7d80ab44ce68a9c81d13c48fc1e7568d94b900d7"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "exact _.",
            "VernacExtend",
            "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (enumerable (fun m => exists n, (fun (x : nat * nat) => p (snd x)) (m,n))).",
            "VernacExtend",
            "c842fc42bac1dea6ea450f2bf53923a0e8e2a055"
        ],
        [
            "apply projection.",
            "VernacExtend",
            "27787b177f8de4f8d1b144ee49adb689b7ab4b03"
        ],
        [
            "eapply dec_count_enum; try apply enumerable_nat_nat.",
            "VernacExtend",
            "24ac6ff4f7c3a2fb92aa277e7120c7ab4e9db67e"
        ],
        [
            "apply decidable_iff.",
            "VernacExtend",
            "58e913dc70f3a1d966b9467285dd28006cad9661"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros [n m].",
            "VernacExtend",
            "92becfaa1635c3fad0cf10ac4e323841a4b687ae"
        ],
        [
            "exact _.",
            "VernacExtend",
            "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (fun _ => None).",
            "VernacExtend",
            "d396947f6c8a2a0544fe6750e62f0f0f265cdc7a"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "firstorder congruence.",
            "VernacExtend",
            "d494e20fb7c93eead57d204ae9561abf48d5c03d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition POST := forall X (p : X -> Prop), discrete X -> enumerable p -> enumerable (fun x => ~ p x) -> decidable p.",
            "VernacDefinition",
            "d7d19b156f43bb62af1dad6177f4ae01381da71e"
        ],
        [
            "Lemma Post_MP : POST <-> MP.",
            "VernacStartTheoremProof",
            "515eba23d65b4cca5c63856e52e4bffd3419ae3d"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ?.",
            "VernacExtend",
            "5788280a665e6aa2c91e15fef1a838ff418c63fe"
        ],
        [
            "eapply Post_to'.",
            "VernacExtend",
            "a9420a39c5cb2313a7963a159d9452138bb7f323"
        ],
        [
            "intros ? ? ? ? ? ?.",
            "VernacExtend",
            "eb86612d98d6dbb7d88f03808b4ba9286d6b93b4"
        ],
        [
            "destruct (H X p H0 H1 H2) as [g].",
            "VernacExtend",
            "6d141c7cb3052ec7c79aa9f91b2c280b6fb506ef"
        ],
        [
            "specialize (H3 x).",
            "VernacExtend",
            "2ebc1440efab7b41f4f4f8b1757c3b61fd8bf779"
        ],
        [
            "destruct (g x); firstorder congruence.",
            "VernacExtend",
            "2ad83a9d8fdda66e90bb38fe4eee8da9371bff2f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ? ? ? ? ?.",
            "VernacExtend",
            "0cf8dd5e53b76160b696a0b73b23e8fec0b81782"
        ],
        [
            "eapply weakPost; eauto.",
            "VernacExtend",
            "bfa6b317263ef94b06c59539e518fe895031cf60"
        ],
        [
            "eapply MP_Post; eauto.",
            "VernacExtend",
            "b845ba9aba3cbe0b0d8c6606f895104b4e443c2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "mu",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "apply constructive_indefinite_ground_description_nat_Acc.",
                        "VernacExtend",
                        "d7346b43be314ba78dd8342e322b3bbfa9a01cbf"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Acc_ind_dep",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "refine (fix f H x h := match h with Acc_intro _ F => _ end).",
                        "VernacExtend",
                        "445efcbda09105b78f6815f120df460ff3ec6bd6"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply f, H.",
                        "VernacExtend",
                        "8a0caba02298b624449fcc13de181ae59ba62d70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mu_least",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros n H'.",
                        "VernacExtend",
                        "c5e15d288e71c7c4067088ce1e3eb273ec98abc8"
                    ]
                },
                {
                    "command": [
                        "unfold mu, constructive_indefinite_ground_description_nat_Acc.",
                        "VernacExtend",
                        "6cad16765ad7fe05f534f81e34d15c25838579e7"
                    ]
                },
                {
                    "command": [
                        "unfold acc_implies_P_eventually.",
                        "VernacExtend",
                        "6595d1cc3f84a6d0e3687e9f374f98f4b4fc1d07"
                    ]
                },
                {
                    "command": [
                        "assert (Hn : 0 <= n) by omega.",
                        "VernacExtend",
                        "225f1ea82c1ba5f18e2577529c681e3f3a7e468a"
                    ]
                },
                {
                    "command": [
                        "revert n H' Hn.",
                        "VernacExtend",
                        "07d969c12b8604e757154e05767018f17cb83325"
                    ]
                },
                {
                    "command": [
                        "generalize 0, (P_eventually_implies_acc_ex p H).",
                        "VernacExtend",
                        "78cf8701ae7885f78d0f1d75e729d337858e2944"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "intros k H.",
                        "VernacExtend",
                        "861d8637855845933b7ce128bca91fd0a76ed132"
                    ]
                },
                {
                    "command": [
                        "pattern k, H.",
                        "VernacExtend",
                        "e5a84ffd58e37bbdb2ff07795e7c303f94afc124"
                    ]
                },
                {
                    "command": [
                        "apply (@Acc_ind_dep nat (R p)).",
                        "VernacExtend",
                        "e6a64b2fdbec09f910075300d0d5f29b8a6b064c"
                    ]
                },
                {
                    "command": [
                        "clear k H.",
                        "VernacExtend",
                        "7bca741ae549b06290f0a04d17348834076f36b1"
                    ]
                },
                {
                    "command": [
                        "intros k F IH n H1 H2.",
                        "VernacExtend",
                        "ffa8dfd671b9f0765d3a2911cdef68defa80de8c"
                    ]
                },
                {
                    "command": [
                        "cbn.",
                        "VernacExtend",
                        "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
                    ]
                },
                {
                    "command": [
                        "destruct (d k) as [H|H]; trivial.",
                        "VernacExtend",
                        "6147e475e482d79d8bbacd3c0ec2a5c10156fee2"
                    ]
                },
                {
                    "command": [
                        "destruct Fix_F eqn : E.",
                        "VernacExtend",
                        "10c6bc70ec4ae3f9a57e319991046e8f12488faa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E.",
                        "VernacExtend",
                        "c62c6425624de37707b227590f371d7ae7fc2165"
                    ]
                },
                {
                    "command": [
                        "apply IH; trivial.",
                        "VernacExtend",
                        "d07baf6d5be047e14661f15d99492b83bd716ca7"
                    ]
                },
                {
                    "command": [
                        "clear E.",
                        "VernacExtend",
                        "c4264db66fb80327b8fb2d3acc1876cdfc4348d3"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_eq_dec in H2 as [H2|H2]; subst; tauto.",
                        "VernacExtend",
                        "315ad05a03cf4538764804d874184072d25f315d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weakPost",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros [E] % discrete_iff Hl [f Hf] [g Hg].",
                        "VernacExtend",
                        "445599a0306f3538d73657425dd0106b3b2a7f85"
                    ]
                },
                {
                    "command": [
                        "eapply decidable_iff.",
                        "VernacExtend",
                        "bc5aa7eaadd6c2d6e6e1b86b5cdcf75a3b17bf33"
                    ]
                },
                {
                    "command": [
                        "econstructor.",
                        "VernacExtend",
                        "57e0061dc596e77c9d30460f8165a53e99efafc2"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "assert (exists n, f n = Some x \\/ g n = Some x) by (destruct (Hl x); firstorder).",
                        "VernacExtend",
                        "cc672ec91388f0c6b7498050a989040daa3b5145"
                    ]
                },
                {
                    "command": [
                        "destruct (mu (p := fun n => f n = Some x \\/ g n = Some x)) as [n HN]; trivial.",
                        "VernacExtend",
                        "af48757629393826ae787f030b6054d03b7f3f29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "exact _.",
                        "VernacExtend",
                        "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "decide (f n = Some x); decide (g n = Some x); firstorder.",
                        "VernacExtend",
                        "74121fc8835c8052d5d442e1ff61b70888f6a39d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MP_to_decMP",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros H p [d Hd] ?.",
                        "VernacExtend",
                        "18c5ba22bf3015b6372afbb0449b353953a17b8c"
                    ]
                },
                {
                    "command": [
                        "specialize (H (fun x => if d x then true else false)).",
                        "VernacExtend",
                        "f7e81cd9b83ec8e5d3b163125b6968132a2667ac"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ?.",
                        "VernacExtend",
                        "5788280a665e6aa2c91e15fef1a838ff418c63fe"
                    ]
                },
                {
                    "command": [
                        "eapply H0.",
                        "VernacExtend",
                        "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
                    ]
                },
                {
                    "command": [
                        "intros [n].",
                        "VernacExtend",
                        "26a1230e204196fed8e13cae97a07395ec0331c7"
                    ]
                },
                {
                    "command": [
                        "eapply H.",
                        "VernacExtend",
                        "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "now eapply Hd in H1 as ->.",
                        "VernacExtend",
                        "393ebc2ae9aa1d792fbf16ea42fbfad826f6d65e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize (Hd x).",
                        "VernacExtend",
                        "59992baf2f2f3475b24b502cd17d05fca15157c5"
                    ]
                },
                {
                    "command": [
                        "destruct (d x); try congruence.",
                        "VernacExtend",
                        "0e77cf02641eddabf2d384c0ed75bddbd2f92ee4"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "now eapply Hd.",
                        "VernacExtend",
                        "142063f6690aec1b600e5d6098017701b831482c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decMP_to_eMP",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros dMP X p [e He] ?.",
                        "VernacExtend",
                        "4d209d796cd49fdec5ebefac2b3824edef32afa2"
                    ]
                },
                {
                    "command": [
                        "destruct (dMP (fun n => e n <> None)).",
                        "VernacExtend",
                        "af604d44a388cb710ebdcb369455f2aa8fe51306"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => match e n with Some _ => true | _ => false end).",
                        "VernacExtend",
                        "316564179a38a23dd8d8b79655b13be3c83de702"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (e x); firstorder congruence.",
                        "VernacExtend",
                        "34e6c99aa80fc8466ce15c5ae517e704cdfee135"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ?.",
                        "VernacExtend",
                        "5788280a665e6aa2c91e15fef1a838ff418c63fe"
                    ]
                },
                {
                    "command": [
                        "eapply H.",
                        "VernacExtend",
                        "cf02e2445d256ebbbf0bbedfdc7f26983e04ec5a"
                    ]
                },
                {
                    "command": [
                        "intros [x].",
                        "VernacExtend",
                        "b6f8a31ee6f91224682194402b42b1a1fbef88b9"
                    ]
                },
                {
                    "command": [
                        "eapply H0.",
                        "VernacExtend",
                        "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
                    ]
                },
                {
                    "command": [
                        "eapply He in H1 as [n].",
                        "VernacExtend",
                        "206d76156cfb954529157738563279491ba7a67e"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (e x) eqn:E; try congruence.",
                        "VernacExtend",
                        "917dc587f2e61b1d6a0bcffac4125fb6a4074687"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "eapply He.",
                        "VernacExtend",
                        "a73a5c861df77c1a9b9e80c41a03e1319813b381"
                    ]
                },
                {
                    "command": [
                        "now exists x.",
                        "VernacExtend",
                        "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eMP_to_MP",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros eMP f ?.",
                        "VernacExtend",
                        "68348b9b5d9d76d67b67de80db3188fd0fe402ff"
                    ]
                },
                {
                    "command": [
                        "destruct (eMP nat (fun n => f n = true)).",
                        "VernacExtend",
                        "bb536996a0125b294fa4042a17959fd64d44788c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply dec_count_enum.",
                        "VernacExtend",
                        "977936f6e3dfd291ca8cb16825ab954da90754ff"
                    ]
                },
                {
                    "command": [
                        "now exists f.",
                        "VernacExtend",
                        "a600bf7a517b68caa85efe8b45902831173f4308"
                    ]
                },
                {
                    "command": [
                        "exists Some.",
                        "VernacExtend",
                        "a72518a9f097e69d71e4c8fbb2eb17c7b83789fe"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MP_enum_stable",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros MP [f Hf] [d Hd] x.",
                        "VernacExtend",
                        "6c6fd3a9903d1f03df0ddd5ebdbd915d9a4b44f8"
                    ]
                },
                {
                    "command": [
                        "eapply MP_to_decMP with (p := fun n => f n = Some x) in MP.",
                        "VernacExtend",
                        "3dac2efe54721025612a59ac13d52a1a555ca38d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf in *.",
                        "VernacExtend",
                        "b595f570c0e0eecd77b0bef1f6b9dd9f4e112dd9"
                    ]
                },
                {
                    "command": [
                        "now eapply MP.",
                        "VernacExtend",
                        "5ba46113f7d0225148bbd4d729a898805661783b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => match f n with Some x' => d (x, x') | _ => false end).",
                        "VernacExtend",
                        "ed9cf19d352ecebfe79ba4ffc5d695813ee2164f"
                    ]
                },
                {
                    "command": [
                        "intros x0.",
                        "VernacExtend",
                        "09b79f25f84b65c9fb0970e97694a47d7bf25c51"
                    ]
                },
                {
                    "command": [
                        "destruct (f x0).",
                        "VernacExtend",
                        "d104a42a9928f2630f8995a311191dc104378aba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Hd (x,x1)).",
                        "VernacExtend",
                        "c7cae97bcf70422357b49fdf2164021335586459"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "split; inversion 1.",
                        "VernacExtend",
                        "34ec1e1110f18667a6b74289a129abaaa399fef1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MP_Post",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros mp X p HX [f Hf] [g Hg].",
                        "VernacExtend",
                        "5bec50316e6625d1e2a7d7829730c4e432beeb73"
                    ]
                },
                {
                    "command": [
                        "cut (forall x, exists n, f n = Some x \\/ g n = Some x).",
                        "VernacExtend",
                        "03bee235f4113e4c7ea1aa044e73e53b0ca90722"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H x.",
                        "VernacExtend",
                        "87be58c3f8601745cbeb0b5294cd08e90f1017b1"
                    ]
                },
                {
                    "command": [
                        "destruct (H x); firstorder.",
                        "VernacExtend",
                        "98914c5d901f0f879c7a3166fa5fe513eb96032a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply (MP_to_decMP mp).",
                        "VernacExtend",
                        "9e2e8d8baff04e80114d1dbfc4e599261956ff76"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply discrete_iff in HX as [H].",
                        "VernacExtend",
                        "ba641c77ebee7cc4f7409963d431262a2d7dd0ac"
                    ]
                },
                {
                    "command": [
                        "apply decidable_iff.",
                        "VernacExtend",
                        "58e913dc70f3a1d966b9467285dd28006cad9661"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "exact _.",
                        "VernacExtend",
                        "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : ~ ~ (p x \\/ ~ p x)) by tauto.",
                        "VernacExtend",
                        "368b4d2caacd0dd86f12db2feacd429602adb0e9"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Post_to'",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros HP.",
                        "VernacExtend",
                        "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
                    ]
                },
                {
                    "command": [
                        "apply eMP_to_MP.",
                        "VernacExtend",
                        "50bfeac4efc04b0a823949c019b9e1cf099c664d"
                    ]
                },
                {
                    "command": [
                        "apply decMP_to_eMP.",
                        "VernacExtend",
                        "17125dc5cd7b0e4689fd6875851494618ded91c5"
                    ]
                },
                {
                    "command": [
                        "intros p [Hp] % decidable_iff H.",
                        "VernacExtend",
                        "d92773d7c6e26a1c30a2a7ccd48fc5bb67a01c3a"
                    ]
                },
                {
                    "command": [
                        "destruct (HP nat (fun _ => exists n, p n)) with (x:=0); trivial.",
                        "VernacExtend",
                        "1f6508e7bfee09e8dc59ec6fbf7e79911d5a5ded"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply discrete_iff.",
                        "VernacExtend",
                        "7d80ab44ce68a9c81d13c48fc1e7568d94b900d7"
                    ]
                },
                {
                    "command": [
                        "econstructor.",
                        "VernacExtend",
                        "57e0061dc596e77c9d30460f8165a53e99efafc2"
                    ]
                },
                {
                    "command": [
                        "exact _.",
                        "VernacExtend",
                        "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (enumerable (fun m => exists n, (fun (x : nat * nat) => p (snd x)) (m,n))).",
                        "VernacExtend",
                        "c842fc42bac1dea6ea450f2bf53923a0e8e2a055"
                    ]
                },
                {
                    "command": [
                        "apply projection.",
                        "VernacExtend",
                        "27787b177f8de4f8d1b144ee49adb689b7ab4b03"
                    ]
                },
                {
                    "command": [
                        "eapply dec_count_enum; try apply enumerable_nat_nat.",
                        "VernacExtend",
                        "24ac6ff4f7c3a2fb92aa277e7120c7ab4e9db67e"
                    ]
                },
                {
                    "command": [
                        "apply decidable_iff.",
                        "VernacExtend",
                        "58e913dc70f3a1d966b9467285dd28006cad9661"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros [n m].",
                        "VernacExtend",
                        "92becfaa1635c3fad0cf10ac4e323841a4b687ae"
                    ]
                },
                {
                    "command": [
                        "exact _.",
                        "VernacExtend",
                        "72147f0b773d29663e09ad4da6c5f8d8aa73444b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (fun _ => None).",
                        "VernacExtend",
                        "d396947f6c8a2a0544fe6750e62f0f0f265cdc7a"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "firstorder congruence.",
                        "VernacExtend",
                        "d494e20fb7c93eead57d204ae9561abf48d5c03d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Post_MP",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ?.",
                        "VernacExtend",
                        "5788280a665e6aa2c91e15fef1a838ff418c63fe"
                    ]
                },
                {
                    "command": [
                        "eapply Post_to'.",
                        "VernacExtend",
                        "a9420a39c5cb2313a7963a159d9452138bb7f323"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ? ? ? ?.",
                        "VernacExtend",
                        "eb86612d98d6dbb7d88f03808b4ba9286d6b93b4"
                    ]
                },
                {
                    "command": [
                        "destruct (H X p H0 H1 H2) as [g].",
                        "VernacExtend",
                        "6d141c7cb3052ec7c79aa9f91b2c280b6fb506ef"
                    ]
                },
                {
                    "command": [
                        "specialize (H3 x).",
                        "VernacExtend",
                        "2ebc1440efab7b41f4f4f8b1757c3b61fd8bf779"
                    ]
                },
                {
                    "command": [
                        "destruct (g x); firstorder congruence.",
                        "VernacExtend",
                        "2ad83a9d8fdda66e90bb38fe4eee8da9371bff2f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ? ? ?.",
                        "VernacExtend",
                        "0cf8dd5e53b76160b696a0b73b23e8fec0b81782"
                    ]
                },
                {
                    "command": [
                        "eapply weakPost; eauto.",
                        "VernacExtend",
                        "bfa6b317263ef94b06c59539e518fe895031cf60"
                    ]
                },
                {
                    "command": [
                        "eapply MP_Post; eauto.",
                        "VernacExtend",
                        "b845ba9aba3cbe0b0d8c6606f895104b4e443c2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}