{
    "filename": "L/Tactics.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "From Undecidability.L Require Export L.",
            "VernacRequire",
            "c0357fb14e6a5ff1d8d62c96c7a86300316918fc"
        ],
        [
            "Lemma proc_closed p : proc p -> closed p.",
            "VernacStartTheoremProof",
            "b202607b385f84f950a8fe5c84db5315faead4fa"
        ],
        [
            "firstorder intuition.",
            "VernacExtend",
            "fbd48a81d12379b02a6497518bc3a1bdca9eb67f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma proc_lam p : proc p -> lam p.",
            "VernacStartTheoremProof",
            "3779b97ede3c95fa2031b52a060757b744bb1062"
        ],
        [
            "firstorder intuition.",
            "VernacExtend",
            "fbd48a81d12379b02a6497518bc3a1bdca9eb67f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve proc_closed proc_lam : cbv.",
            "VernacHints",
            "c37a402f4788f568da4be990de6abcac6ad1bf7e"
        ],
        [
            "Ltac value_context := try now match goal with | |- bound _ ?t = true => eapply bound_ge with (k := 0); [ change (closed t); auto 3 with cbv | omega ] end.",
            "VernacExtend",
            "607661c4d331bc031bc432e7dac2ff418cda9783"
        ],
        [
            "Ltac dvalue' := match goal with | |- closed _ => cbn; unfold closed | |- bound _ (if ?c then _ else _) = true => destruct c | |- bound _ (L.var _) = true => now constructor;omega | |- bound _ (L.app _ _) = true => constructor | |- bound _ (L.lambda _) = true => constructor | |- bound ?s _ = true => value_context || (unfold s;simpl) | |- context [ andb _ _ ] => rewrite Bool.andb_true_r; dvalue' | |- andb _ _ = _ => eapply Bool.andb_true_iff; split; dvalue' end.",
            "VernacExtend",
            "cc0fabafac72a7ab6e55388b2a5fb68e5ebfecec"
        ],
        [
            "Ltac dvalue := (try (progress unfold convert;cbv -[bound]; cbn)); repeat dvalue'; try (cbn; repeat dvalue').",
            "VernacExtend",
            "c56924d4bddf402a6e6e76cd61f8e16607d4d6d6"
        ],
        [
            "Ltac value' := match goal with | [ |- proc _ ] => (try eassumption; auto 3 with cbv; split; value') | [ |- lam _ ] => (try eassumption; auto 3 with cbv; eexists; reflexivity) | [ |- lam (if ?c then _ else _) ] => destruct c;(try eassumption; auto 3 with cbv; eexists; reflexivity) | [ |- closed _ ] => (try eassumption; auto 3 with cbv; value_context); dvalue | [ |- _ ] => idtac end .",
            "VernacExtend",
            "bc665794c7e2f1588665dd431824a246eb7e04f4"
        ],
        [
            "Tactic Notation \"value\" := value'.",
            "VernacExtend",
            "3faf74a7b871c6e18f81c6d1398eb85322f4b33a"
        ],
        [
            "Lemma beta s t u : lam u -> subst s 0 u = t -> (lambda s) u \u227b t.",
            "VernacStartTheoremProof",
            "a0d3ddf6b4f89b152b5e1927cd0bf71b4762a0ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Tactic Notation \"rewrite_cls\" open_constr(t) := let H := fresh \"H\" in enough (H : closed t); [rewrite (closed_subst _ _ H) | value]; clear H.",
            "VernacExtend",
            "2a215f2ae2a7bdebb2ac4185066d6f04e659cd23"
        ],
        [
            "Ltac rewrite_closed := repeat match goal with | [ |- context [subst ?s _ _] ] => rewrite_cls s end.",
            "VernacExtend",
            "08493c61742f74f9431fbdbd33ddb7e05af3102d"
        ],
        [
            "Lemma rho_correct s t : proc s -> proc t -> rho s t \u227b* s (rho s) t.",
            "VernacStartTheoremProof",
            "6a177039ab497c7bc35bdf29e21e0dcbe619f308"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "econstructor.",
            "VernacExtend",
            "57e0061dc596e77c9d30460f8165a53e99efafc2"
        ],
        [
            "eapply beta.",
            "VernacExtend",
            "af38226911ed0e4f1f17537f454216ec26e33d75"
        ],
        [
            "value.",
            "VernacExtend",
            "54a7f748ad1d0aff3cc71a46dc26b5af8e02e250"
        ],
        [
            "cbn.",
            "VernacExtend",
            "2de4be1c15e6f71a05c3809cbe562a67585b4b18"
        ],
        [
            "rewrite_closed.",
            "VernacExtend",
            "5dde99bcff1ad3d60699190ecde889fe40baf21e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "repeat (do 3 econstructor ; eapply beta; value; try now reflexivity).",
            "VernacExtend",
            "a1f6190544fbff52779bb49d627a64ad3b1042f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve rho_lam rho_closed : cbv.",
            "VernacHints",
            "44c4ea06ea0d6b9da4dfa7c0c9fe78ea05b0f97f"
        ],
        [
            "Ltac recStep id := unfold id; rewrite rho_correct;[fold id;simpl|(split;[vm_compute;reflexivity|value])|now value].",
            "VernacExtend",
            "785281daa8630cf104822c479ec37aa13df0d41d"
        ],
        [
            "Lemma equiv_R_trans s s' t : s \u227b s' -> s' \u2261 t -> s \u2261 t.",
            "VernacStartTheoremProof",
            "39cf85916f5cd5c62c59460625e2cbc6e1a9f28a"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "econstructor; eassumption.",
            "VernacExtend",
            "bbccf5f1a686cad564baf2112c863a269620e416"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac dobeta := match goal with | [ |- _ \u2261 _ ] => eapply equiv_R_trans; [ eapply beta; value; cbn; now rewrite_closed | ] | [ |- _ \u227b* _ ] => eapply star_step; [ eapply beta; value; cbn; now rewrite_closed | ] | [ |- _ \u227b _ ] => eapply beta; value; cbn; now rewrite_closed end.",
            "VernacExtend",
            "f97ba022713392ce3e480ec93b06cb49d5cf2b1d"
        ],
        [
            "Lemma star_trans_l s s' t : s \u227b* s' -> s t \u227b* s' t.",
            "VernacStartTheoremProof",
            "0d975ddc5c6e83cd99c961234689dff2984d4325"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma star_trans_r (s t t' : term) : t \u227b* t' -> s t \u227b* s t'.",
            "VernacStartTheoremProof",
            "5636c37d61570b17140368da45f1010b4f416443"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_trans_l s s' t : s \u2261 s' -> s t \u2261 s' t.",
            "VernacStartTheoremProof",
            "d60402778fb020f05fa3d2aa8cf6209d89b5d07b"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_trans_r (s t t' : term) : t \u2261 t' -> s t \u2261 s t'.",
            "VernacStartTheoremProof",
            "24f0afc587b89aae2293e2c3264fb1b520cd85b2"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac doleft := match goal with | [ |- _ \u2261 _ ] => etransitivity; [ (eapply equiv_trans_l) |] | [ |- _ \u227b* _ ] => etransitivity; [ (eapply star_trans_l) | ] | [ |- _ \u227b _ ] => eapply stepAppL end.",
            "VernacExtend",
            "cc8f8aed07bf82b3d09a4e0d7c957233b6984519"
        ],
        [
            "Ltac doright := match goal with | [ |- _ \u2261 _ ] => etransitivity; [ (eapply equiv_trans_r) |] | [ |- _ \u227b* _ ] => etransitivity; [ (eapply star_trans_r) | ] | [ |- _ \u227b _ ] => eapply stepAppR end.",
            "VernacExtend",
            "24e511714bf079097f04518fc4819252d24f7c1e"
        ],
        [
            "Ltac redL := let H := fresh \"H\" in unfold closed; match goal with | _ => etransitivity; [ eassumption | ] | [ |- ?G] => tryif has_evar G then fail else reflexivity | [ |- _ (app ?s ?t) _ ] => tryif (assert (H : lam s) by value; clear H) then (tryif (assert (H : lam t) by value; clear H) then dobeta else doright) else doleft | _ => reflexivity end.",
            "VernacExtend",
            "f9da3a1f8ab34926fcac15836106bb0cd89617b9"
        ],
        [
            "Ltac simplify_goal := try repeat match goal with | [ |- _ \u25b7 _ ] => eapply evaluates_equiv; split; value | [ H : _ \u25b7 _ |- _ ] => eapply evaluates_equiv in H as [] end.",
            "VernacExtend",
            "702c40ff076c39613483950c3d87f95dc82600ba"
        ],
        [
            "Ltac solveeq := simplify_goal; now repeat redL.",
            "VernacExtend",
            "51bb929aa6a00d1c29424f7cc5b2ffe47502fb0e"
        ],
        [
            "Ltac solvered := solveeq.",
            "VernacExtend",
            "28efbf6e598fac9e59b05c694b0e9125eb9b56c0"
        ],
        [
            "Definition Y : term := Eval cbn in .\\ \"f\"; (.\\ \"x\"; \"f\" (\"x\" \"x\")) (.\\ \"x\"; \"f\" (\"x\" \"x\")).",
            "VernacDefinition",
            "4493aa48bcfb424bd624fd59b91ef2fbd56a71c0"
        ],
        [
            "Lemma Y_spec u : proc u -> Y u \u2261 u (Y u).",
            "VernacStartTheoremProof",
            "cb61e4823d596e6cf52fe527b2a39a25e1056dd2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Y u \u2261 (lambda (u (O 0))) (lambda (u (O 0)))) as -> by solveeq.",
            "VernacExtend",
            "dc3f18f71ea8d94e11f2fd1896286b87d8e781c8"
        ],
        [
            "solvered.",
            "VernacExtend",
            "a487bd4047e82b97939264d0506c968abfc98ba2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "proc_closed",
            "line_nb": 1,
            "steps": [
                {
                    "command": [
                        "firstorder intuition.",
                        "VernacExtend",
                        "fbd48a81d12379b02a6497518bc3a1bdca9eb67f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proc_lam",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "firstorder intuition.",
                        "VernacExtend",
                        "fbd48a81d12379b02a6497518bc3a1bdca9eb67f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beta",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "econstructor.",
                        "VernacExtend",
                        "57e0061dc596e77c9d30460f8165a53e99efafc2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "star_trans_l",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "star_trans_r",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_trans_l",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_trans_r",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Y_spec",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Y u \u2261 (lambda (u (O 0))) (lambda (u (O 0)))) as -> by solveeq.",
                        "VernacExtend",
                        "dc3f18f71ea8d94e11f2fd1896286b87d8e781c8"
                    ]
                },
                {
                    "command": [
                        "solvered.",
                        "VernacExtend",
                        "a487bd4047e82b97939264d0506c968abfc98ba2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}