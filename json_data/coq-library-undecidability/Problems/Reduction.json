{
    "filename": "Problems/Reduction.v",
    "coq_project": "coq-library-undecidability",
    "vernac_cmds": [
        [
            "Require Export Shared.Prelim.",
            "VernacRequire",
            "70c64426ad207f2c64e3d313363a5398f3934ae9"
        ],
        [
            "Definition reduces X Y (p : X -> Prop) (q : Y -> Prop) := exists f : X -> Y, forall x, p x <-> q (f x).",
            "VernacDefinition",
            "f2896e805bcfcc585f10c4045c9c3678dcc7f523"
        ],
        [
            "Notation \"p \u2aaf q\" := (reduces p q) (at level 50).",
            "VernacNotation",
            "227fa26ed410b6d39cc829f487862001e7cb4c3e"
        ],
        [
            "Lemma reduces_reflexive X (p : X -> Prop) : p \u2aaf p.",
            "VernacStartTheoremProof",
            "ac65c22c659680d8c5b2aeb1126b0fb3be46c67a"
        ],
        [
            "exists (fun x => x); tauto.",
            "VernacExtend",
            "41854e451dd2b9d937a6c686a0a2fd20e240d5ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduces_transitive X Y Z (p : X -> Prop) (q : Y -> Prop) (r : Z -> Prop) : p \u2aaf q -> q \u2aaf r -> p \u2aaf r.",
            "VernacStartTheoremProof",
            "fe772ee519cc029ed9c78841fb1ad6267949ce02"
        ],
        [
            "intros [f ?] [g ?].",
            "VernacExtend",
            "4641934e46175ebc439a28e2714b8dec78a47126"
        ],
        [
            "exists (fun x => g (f x)).",
            "VernacExtend",
            "92856fd559b0407332f4675b282b4f7459890905"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "reduces_reflexive",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "exists (fun x => x); tauto.",
                        "VernacExtend",
                        "41854e451dd2b9d937a6c686a0a2fd20e240d5ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduces_transitive",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros [f ?] [g ?].",
                        "VernacExtend",
                        "4641934e46175ebc439a28e2714b8dec78a47126"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => g (f x)).",
                        "VernacExtend",
                        "92856fd559b0407332f4675b282b4f7459890905"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}