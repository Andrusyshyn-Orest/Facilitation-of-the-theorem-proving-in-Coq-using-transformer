{
    "filename": "LinAlg/bases_finite_dim.v",
    "coq_project": "lin-alg",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export bases_from_generating_sets.",
            "VernacRequire",
            "3cbbe3643b4cd9835414eb6e6275d2fb083ac7d2"
        ],
        [
            "Require Export replacement_corollaries.",
            "VernacRequire",
            "df0b1e3338726dba48bb6f7fe26b0a643a3eb861"
        ],
        [
            "Definition is_finite_dimensional (F : field) (V : vectorspace F) := exists beta : basis V, (exists n : Nat, has_n_elements n beta).",
            "VernacDefinition",
            "6b8bda160f9368ca67fad247748886c0a239b880"
        ],
        [
            "Definition is_infinite_dimensional (F : field) (V : vectorspace F) := forall (beta : basis V) (n : Nat), ~ has_n_elements n beta.",
            "VernacDefinition",
            "3fcbdcc5c56901fe0f4688f6b7bd6e11aa4fbf86"
        ],
        [
            "Definition has_dim (F : field) (n : Nat) (V : vectorspace F) := exists beta : basis V, has_n_elements n beta.",
            "VernacDefinition",
            "f45d1a138fd172f0f39c21951d895a213faa8ab2"
        ],
        [
            "Lemma finite_dim_vecsp_has_dim : forall (F : field) (V : vectorspace F), is_finite_dimensional V -> exists n : Nat, has_dim n V.",
            "VernacStartTheoremProof",
            "2a43219aae8d7ff1c97d5c29b1c0d193993b708d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rename x into beta.",
            "VernacExtend",
            "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rename x into n.",
            "VernacExtend",
            "88d3304850648292bba22621b827ce878e019ee1"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exists beta; auto.",
            "VernacExtend",
            "efa6432da83b679d6a2dfbd9ab62dcf80f32b337"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exists x0; auto.",
            "VernacExtend",
            "22d688388e0f7182748449b589a97b3a426b8fee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma has_dim_inj : forall (F : field) (V : vectorspace F) (n m : Nat), has_dim n V -> has_dim m V -> n =' m in _.",
            "VernacStartTheoremProof",
            "8c91ec08ce2be7d2b301e43d4b302d274d9554ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "assert (has_n_elements m x).",
            "VernacExtend",
            "eeb4f14726b867c67b49d385b8390806ba067cef"
        ],
        [
            "apply all_finite_bases_equally_big with x0; auto with algebra.",
            "VernacExtend",
            "d69d4481efe7f230866c4ebaf89150a1af12b4f1"
        ],
        [
            "generalize has_n_elements_inj; intro p.",
            "VernacExtend",
            "ac0d811eab0008d59fd85eac6c95601e670ffd6b"
        ],
        [
            "apply (p _ _ _ H1 _ _ H0); auto with algebra.",
            "VernacExtend",
            "afa726b4bb65cd9efedf29d8738799fd26586fae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma has_dim_easy : forall (F : field) (V : vectorspace F) (b : part_set V), is_basis b -> forall n : nat, has_n_elements n b -> has_dim n V.",
            "VernacStartTheoremProof",
            "3d99570c2aea92645af50176a9421729152f3aaf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exists (Build_basis H).",
            "VernacExtend",
            "3cce73416036cce6015479bf15b9d4196040f15c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Part_3.",
            "VernacBeginSection",
            "238adcd5d0e222fbae963657690c6091e17f2067"
        ],
        [
            "Lemma dimension_bounds_generating_set_size : forall (F : field) (V : vectorspace F) (n : Nat), has_dim n V -> forall S : part_set V, generates S (full V) -> has_at_most_n_elements n S -> is_basis S /\\ has_n_elements n S.",
            "VernacStartTheoremProof",
            "bc2cb93763eee9904796cff3cc46a5c346abf332"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (every_finite_generating_set_has_a_subset_that_is_a_basis (W0:=S)).",
            "VernacExtend",
            "0194f206c9ea4da7f36a6229e96561a6b745ec38"
        ],
        [
            "intro p.",
            "VernacExtend",
            "5aea32c2ecd07598789d82ffef7594239c3ee52b"
        ],
        [
            "assert (is_finite_subset S).",
            "VernacExtend",
            "49002e52cc30c380689c111263c2f01bd329356f"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "red in H1.",
            "VernacExtend",
            "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "generalize (n_element_subset_sequence H3).",
            "VernacExtend",
            "7640253fea828beb96b361110832b937b6eebe7b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "inversion_clear H4.",
            "VernacExtend",
            "48216828fc957e4d634a0462fc329b427275d260"
        ],
        [
            "exists x0; auto.",
            "VernacExtend",
            "22d688388e0f7182748449b589a97b3a426b8fee"
        ],
        [
            "generalize (p H2 H0); clear p; intro p.",
            "VernacExtend",
            "fc1b996a68ad6769e58302ef169da5287ed73f8c"
        ],
        [
            "inversion_clear p.",
            "VernacExtend",
            "e92d7a970efd6b8e5f3bb0346b9e69bf85578bb2"
        ],
        [
            "rename x into S1.",
            "VernacExtend",
            "e59444460c48c389cdb61a04a48498b371294666"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rename x into beta.",
            "VernacExtend",
            "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
        ],
        [
            "generalize (all_finite_bases_equally_big H4 (Build_basis H3)).",
            "VernacExtend",
            "2aff1c11a0eb64d17a6bd07da6276068fb9d124f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (has_n_elements n S1).",
            "VernacExtend",
            "cf9187789da66a2d664cfaa5d24a135d7ec5f997"
        ],
        [
            "apply inject_subsets_respects_has_n_elements; auto with algebra.",
            "VernacExtend",
            "af5e6def268596d2051c4d0a9a5bbd8985cf4750"
        ],
        [
            "assert (has_at_least_n_elements n S).",
            "VernacExtend",
            "1027c92b0a12608401d878e1e8786ec8be14d1a9"
        ],
        [
            "apply subset_bounds_set_size_from_below with S1; auto with algebra.",
            "VernacExtend",
            "c9df1378578d9bbb0ebdb7c48edb3558ca061a17"
        ],
        [
            "assert (has_n_elements n S).",
            "VernacExtend",
            "82632e3c16b636829740ea51e5a5fe174346f255"
        ],
        [
            "apply has_n_elements_by_at_least_at_most; auto with algebra.",
            "VernacExtend",
            "7bd94bab097614c0064e9add04c0ec125da5cc72"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply is_basis_comp with (inject_subsets S1); auto with algebra.",
            "VernacExtend",
            "5e0708ca0e445fbf9856a31f8e7398e73287869a"
        ],
        [
            "assert (S1 =' full S in _).",
            "VernacExtend",
            "97591f0f20a5a2758b5406cbb73499f91fdc2de6"
        ],
        [
            "apply subset_also_has_n_elements_then_it_is_full with n; auto with algebra.",
            "VernacExtend",
            "d8185534c2d8ed55fa13f8c73c483ec07cf6e1b9"
        ],
        [
            "apply Trans with (inject_subsets (full S)); auto with algebra.",
            "VernacExtend",
            "82ea7b74480715a8b28de32082e19aa137c2fe17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma every_lin_indep_set_can_be_extended_to_a_basis : forall (F : field) (V : vectorspace F), is_finite_dimensional V -> forall (beta : basis V) (Sset : part_set V), lin_indep Sset -> exists S1 : part_set V, included S1 beta /\\ is_basis (union Sset S1).",
            "VernacStartTheoremProof",
            "f67f98a2ff570fb37c3d2d225ba9fdd17daf6ae4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (finite_dim_vecsp_has_dim H); intro p.",
            "VernacExtend",
            "cf100631a3a506d99345137f87a32b216cd6b82c"
        ],
        [
            "inversion_clear p.",
            "VernacExtend",
            "e92d7a970efd6b8e5f3bb0346b9e69bf85578bb2"
        ],
        [
            "rename x into n.",
            "VernacExtend",
            "88d3304850648292bba22621b827ce878e019ee1"
        ],
        [
            "generalize H1; intro HH2.",
            "VernacExtend",
            "93dfb863a3c87550ff3607ee9cbbcb7eea30a8b3"
        ],
        [
            "red in H1.",
            "VernacExtend",
            "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "rename x into beta'.",
            "VernacExtend",
            "3f1ed6bc7b427efbd4ec1d5095579b283f9da77d"
        ],
        [
            "assert (has_n_elements n beta).",
            "VernacExtend",
            "ffd2337c7c5315063e9c458aa5c791fd58a48177"
        ],
        [
            "apply all_finite_bases_equally_big with beta'; auto with algebra.",
            "VernacExtend",
            "cd3d02d8a9ab4f3a9158e7c1c17e84366fefb90e"
        ],
        [
            "clear H2 beta'.",
            "VernacExtend",
            "0f4d7e03f2ac8871ed5588523cdf38c74edfdb71"
        ],
        [
            "assert (exists m : Nat, has_n_elements m Sset /\\ m <= n).",
            "VernacExtend",
            "783572e1a21b72fec8ba560c62d5d3a403b4e838"
        ],
        [
            "generalize (finite_basis_bounds_lin_indep_set_size' H1 H0); intros.",
            "VernacExtend",
            "0ca71c0acd2c6d6dfeb45e5de1727decb04da184"
        ],
        [
            "red in H2.",
            "VernacExtend",
            "5bba02de869f074af7f0a372976a9a820f412047"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "rename x into m.",
            "VernacExtend",
            "20be388e50a712a4d089678e787773172ddefe33"
        ],
        [
            "exists m; intuition.",
            "VernacExtend",
            "7ba04b32b00183832877621098114434cc503780"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "rename x into m.",
            "VernacExtend",
            "20be388e50a712a4d089678e787773172ddefe33"
        ],
        [
            "inversion_clear H3.",
            "VernacExtend",
            "36eaf986a968e31567b264d9a9c5b9d3482ec67e"
        ],
        [
            "generalize (replacement_theorem H1 H0 H4 H2); intro.",
            "VernacExtend",
            "a92685f409fdd32fb660af6a9d997944f26b8a82"
        ],
        [
            "inversion_clear H3.",
            "VernacExtend",
            "36eaf986a968e31567b264d9a9c5b9d3482ec67e"
        ],
        [
            "rename x into S1'.",
            "VernacExtend",
            "8897bc853852cbf931d5a0e82e2b403045919469"
        ],
        [
            "set (S1 := inject_subsets S1') in *.",
            "VernacExtend",
            "ddbe2aba59b9d8f15b26f82ee278402bb900c671"
        ],
        [
            "inversion_clear H5.",
            "VernacExtend",
            "1b6b963349bb6ca4033f93c87ba60dca619d5549"
        ],
        [
            "assert (has_at_most_n_elements n (union Sset S1)).",
            "VernacExtend",
            "50df07149a0d4223e1c7409f1378536413724d42"
        ],
        [
            "apply has_at_most_n_elements_comp with (m + (n - m)) (union Sset S1); auto with algebra.",
            "VernacExtend",
            "c3158f3719e337c43dd6576807f93890db634d46"
        ],
        [
            "2: auto with arith.",
            "VernacExtend",
            "7cf53251bf9667c18cc6029326921498c5e42fa0"
        ],
        [
            "apply union_has_at_most_n_plus_m_elements; auto with algebra.",
            "VernacExtend",
            "9e605636660d0b08d519d7ea9a1aea841c81c885"
        ],
        [
            "unfold S1 in |- *.",
            "VernacExtend",
            "8de7600a07a46c977205c330d7458ee95ad211eb"
        ],
        [
            "apply inject_subsets_preserves_has_n_elements; auto with algebra.",
            "VernacExtend",
            "a447c7a6a2e7a9e4104dfe20fdde8c5a15723b77"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "exists S1.",
            "VernacExtend",
            "c3a2ac19b95c2a37a0fc78a4641770e6174fc508"
        ],
        [
            "generalize (dimension_bounds_generating_set_size HH2 H6 H5).",
            "VernacExtend",
            "133a52e0395eec6c49b3f57bdf1fbeb35bf7b448"
        ],
        [
            "split; intuition.",
            "VernacExtend",
            "ad92f41c7c6120efbfc528c4c895eac1600e6297"
        ],
        [
            "unfold S1 in |- *.",
            "VernacExtend",
            "8de7600a07a46c977205c330d7458ee95ad211eb"
        ],
        [
            "apply inject_subsets_of_part_set_included.",
            "VernacExtend",
            "bb5eb5b42105f34108a62bd928adad6b8bc1d7b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma has_dim_zero_then_trivial : forall (F : field) (V : vectorspace F), has_dim 0 V -> full V =' single (zero V) in _.",
            "VernacStartTheoremProof",
            "042d82dd236826f00279e1ffba0f7f6d87f7dea0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rename x into beta.",
            "VernacExtend",
            "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
        ],
        [
            "generalize (is_basis_prf beta).",
            "VernacExtend",
            "78f5786373d3d6273b643f468d98875d12cfffd2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "red in H1.",
            "VernacExtend",
            "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
        ],
        [
            "apply Trans with (span beta:part_set _); auto with algebra.",
            "VernacExtend",
            "2e14e7c7f3b0758d8225de479e5dc65cd875e7a5"
        ],
        [
            "apply Trans with (span_ind beta:part_set _); auto with algebra.",
            "VernacExtend",
            "23b0e19e80c7cdb62c595a92cb278b66adbebd40"
        ],
        [
            "apply Trans with (span_ind (empty V):part_set _).",
            "VernacExtend",
            "c12d65ae0093af8e906605b9a00697b7856350ad"
        ],
        [
            "apply span_ind_comp; auto with algebra.",
            "VernacExtend",
            "e0d3435d59a9f8a7c7abbebf8549f1992512c885"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; simpl in |- *; intro.",
            "VernacExtend",
            "e4440bdb62bd3f708380aacb1a30e1541c47d522"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "generalize dependent x.",
            "VernacExtend",
            "50e76bb1cf2faba66dcbc28258c9c7ceb1f7dc4c"
        ],
        [
            "induction x0 as [| c| x1 IHx1 x2 IHx2| c x0 IHx0]; intros.",
            "VernacExtend",
            "7c3766ab65661cd09e6bf4c7433203868da907b0"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct c.",
            "VernacExtend",
            "a4012bbde27d6ea8adc781c7b9536f3e19fa929e"
        ],
        [
            "simpl in subtype_prf.",
            "VernacExtend",
            "e4906ebbcbf2c72d4454f2699f506db5cf66f8e4"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "apply Trans with (span_ind_injection x1 +' span_ind_injection x2); auto with algebra.",
            "VernacExtend",
            "754a17be07eb2d4ab29ef36fff6fecc783f068b9"
        ],
        [
            "apply Trans with (span_ind_injection x1 +' (zero V)); auto with algebra.",
            "VernacExtend",
            "8d6a8c4f5a3715b5f14cf730d89dc0456861875d"
        ],
        [
            "apply Trans with (span_ind_injection (Multvector c x0)); auto with algebra.",
            "VernacExtend",
            "67a22161adfe1820c39e364cd4e0d340d12fd642"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (c mX (zero V)); auto with algebra.",
            "VernacExtend",
            "f62e822e0ab52cbb47d8a17ed1037458ee37e68a"
        ],
        [
            "exists (Zerovector (empty V)).",
            "VernacExtend",
            "3efb2669d8161e2cd7480fce2b773addb6648495"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Part_3.",
            "VernacEndSegment",
            "8864dbb4d9562975fa23434f3e67539d8e9fd2a3"
        ],
        [
            "Record findimvecsp (F : field) : Type := {the_dim : nat; the_vectorspace :> module F ; dim_prf : has_dim the_dim the_vectorspace}.",
            "VernacInductive",
            "71ab7ccd83daa8c74721aceabc56d3adafddad9d"
        ]
    ],
    "proofs": [
        {
            "name": "finite_dim_vecsp_has_dim",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rename x into beta.",
                        "VernacExtend",
                        "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rename x into n.",
                        "VernacExtend",
                        "88d3304850648292bba22621b827ce878e019ee1"
                    ]
                },
                {
                    "command": [
                        "exists n.",
                        "VernacExtend",
                        "a97204a252e0d9b7444ffed9b38570a756391511"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "exists beta; auto.",
                        "VernacExtend",
                        "efa6432da83b679d6a2dfbd9ab62dcf80f32b337"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "exists x0; auto.",
                        "VernacExtend",
                        "22d688388e0f7182748449b589a97b3a426b8fee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_dim_inj",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "assert (has_n_elements m x).",
                        "VernacExtend",
                        "eeb4f14726b867c67b49d385b8390806ba067cef"
                    ]
                },
                {
                    "command": [
                        "apply all_finite_bases_equally_big with x0; auto with algebra.",
                        "VernacExtend",
                        "d69d4481efe7f230866c4ebaf89150a1af12b4f1"
                    ]
                },
                {
                    "command": [
                        "generalize has_n_elements_inj; intro p.",
                        "VernacExtend",
                        "ac0d811eab0008d59fd85eac6c95601e670ffd6b"
                    ]
                },
                {
                    "command": [
                        "apply (p _ _ _ H1 _ _ H0); auto with algebra.",
                        "VernacExtend",
                        "afa726b4bb65cd9efedf29d8738799fd26586fae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_dim_easy",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "exists (Build_basis H).",
                        "VernacExtend",
                        "3cce73416036cce6015479bf15b9d4196040f15c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dimension_bounds_generating_set_size",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (every_finite_generating_set_has_a_subset_that_is_a_basis (W0:=S)).",
                        "VernacExtend",
                        "0194f206c9ea4da7f36a6229e96561a6b745ec38"
                    ]
                },
                {
                    "command": [
                        "intro p.",
                        "VernacExtend",
                        "5aea32c2ecd07598789d82ffef7594239c3ee52b"
                    ]
                },
                {
                    "command": [
                        "assert (is_finite_subset S).",
                        "VernacExtend",
                        "49002e52cc30c380689c111263c2f01bd329356f"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "red in H1.",
                        "VernacExtend",
                        "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "generalize (n_element_subset_sequence H3).",
                        "VernacExtend",
                        "7640253fea828beb96b361110832b937b6eebe7b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H4.",
                        "VernacExtend",
                        "48216828fc957e4d634a0462fc329b427275d260"
                    ]
                },
                {
                    "command": [
                        "exists x0; auto.",
                        "VernacExtend",
                        "22d688388e0f7182748449b589a97b3a426b8fee"
                    ]
                },
                {
                    "command": [
                        "generalize (p H2 H0); clear p; intro p.",
                        "VernacExtend",
                        "fc1b996a68ad6769e58302ef169da5287ed73f8c"
                    ]
                },
                {
                    "command": [
                        "inversion_clear p.",
                        "VernacExtend",
                        "e92d7a970efd6b8e5f3bb0346b9e69bf85578bb2"
                    ]
                },
                {
                    "command": [
                        "rename x into S1.",
                        "VernacExtend",
                        "e59444460c48c389cdb61a04a48498b371294666"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rename x into beta.",
                        "VernacExtend",
                        "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
                    ]
                },
                {
                    "command": [
                        "generalize (all_finite_bases_equally_big H4 (Build_basis H3)).",
                        "VernacExtend",
                        "2aff1c11a0eb64d17a6bd07da6276068fb9d124f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (has_n_elements n S1).",
                        "VernacExtend",
                        "cf9187789da66a2d664cfaa5d24a135d7ec5f997"
                    ]
                },
                {
                    "command": [
                        "apply inject_subsets_respects_has_n_elements; auto with algebra.",
                        "VernacExtend",
                        "af5e6def268596d2051c4d0a9a5bbd8985cf4750"
                    ]
                },
                {
                    "command": [
                        "assert (has_at_least_n_elements n S).",
                        "VernacExtend",
                        "1027c92b0a12608401d878e1e8786ec8be14d1a9"
                    ]
                },
                {
                    "command": [
                        "apply subset_bounds_set_size_from_below with S1; auto with algebra.",
                        "VernacExtend",
                        "c9df1378578d9bbb0ebdb7c48edb3558ca061a17"
                    ]
                },
                {
                    "command": [
                        "assert (has_n_elements n S).",
                        "VernacExtend",
                        "82632e3c16b636829740ea51e5a5fe174346f255"
                    ]
                },
                {
                    "command": [
                        "apply has_n_elements_by_at_least_at_most; auto with algebra.",
                        "VernacExtend",
                        "7bd94bab097614c0064e9add04c0ec125da5cc72"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply is_basis_comp with (inject_subsets S1); auto with algebra.",
                        "VernacExtend",
                        "5e0708ca0e445fbf9856a31f8e7398e73287869a"
                    ]
                },
                {
                    "command": [
                        "assert (S1 =' full S in _).",
                        "VernacExtend",
                        "97591f0f20a5a2758b5406cbb73499f91fdc2de6"
                    ]
                },
                {
                    "command": [
                        "apply subset_also_has_n_elements_then_it_is_full with n; auto with algebra.",
                        "VernacExtend",
                        "d8185534c2d8ed55fa13f8c73c483ec07cf6e1b9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (inject_subsets (full S)); auto with algebra.",
                        "VernacExtend",
                        "82ea7b74480715a8b28de32082e19aa137c2fe17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "every_lin_indep_set_can_be_extended_to_a_basis",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (finite_dim_vecsp_has_dim H); intro p.",
                        "VernacExtend",
                        "cf100631a3a506d99345137f87a32b216cd6b82c"
                    ]
                },
                {
                    "command": [
                        "inversion_clear p.",
                        "VernacExtend",
                        "e92d7a970efd6b8e5f3bb0346b9e69bf85578bb2"
                    ]
                },
                {
                    "command": [
                        "rename x into n.",
                        "VernacExtend",
                        "88d3304850648292bba22621b827ce878e019ee1"
                    ]
                },
                {
                    "command": [
                        "generalize H1; intro HH2.",
                        "VernacExtend",
                        "93dfb863a3c87550ff3607ee9cbbcb7eea30a8b3"
                    ]
                },
                {
                    "command": [
                        "red in H1.",
                        "VernacExtend",
                        "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "rename x into beta'.",
                        "VernacExtend",
                        "3f1ed6bc7b427efbd4ec1d5095579b283f9da77d"
                    ]
                },
                {
                    "command": [
                        "assert (has_n_elements n beta).",
                        "VernacExtend",
                        "ffd2337c7c5315063e9c458aa5c791fd58a48177"
                    ]
                },
                {
                    "command": [
                        "apply all_finite_bases_equally_big with beta'; auto with algebra.",
                        "VernacExtend",
                        "cd3d02d8a9ab4f3a9158e7c1c17e84366fefb90e"
                    ]
                },
                {
                    "command": [
                        "clear H2 beta'.",
                        "VernacExtend",
                        "0f4d7e03f2ac8871ed5588523cdf38c74edfdb71"
                    ]
                },
                {
                    "command": [
                        "assert (exists m : Nat, has_n_elements m Sset /\\ m <= n).",
                        "VernacExtend",
                        "783572e1a21b72fec8ba560c62d5d3a403b4e838"
                    ]
                },
                {
                    "command": [
                        "generalize (finite_basis_bounds_lin_indep_set_size' H1 H0); intros.",
                        "VernacExtend",
                        "0ca71c0acd2c6d6dfeb45e5de1727decb04da184"
                    ]
                },
                {
                    "command": [
                        "red in H2.",
                        "VernacExtend",
                        "5bba02de869f074af7f0a372976a9a820f412047"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "rename x into m.",
                        "VernacExtend",
                        "20be388e50a712a4d089678e787773172ddefe33"
                    ]
                },
                {
                    "command": [
                        "exists m; intuition.",
                        "VernacExtend",
                        "7ba04b32b00183832877621098114434cc503780"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "rename x into m.",
                        "VernacExtend",
                        "20be388e50a712a4d089678e787773172ddefe33"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H3.",
                        "VernacExtend",
                        "36eaf986a968e31567b264d9a9c5b9d3482ec67e"
                    ]
                },
                {
                    "command": [
                        "generalize (replacement_theorem H1 H0 H4 H2); intro.",
                        "VernacExtend",
                        "a92685f409fdd32fb660af6a9d997944f26b8a82"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H3.",
                        "VernacExtend",
                        "36eaf986a968e31567b264d9a9c5b9d3482ec67e"
                    ]
                },
                {
                    "command": [
                        "rename x into S1'.",
                        "VernacExtend",
                        "8897bc853852cbf931d5a0e82e2b403045919469"
                    ]
                },
                {
                    "command": [
                        "set (S1 := inject_subsets S1') in *.",
                        "VernacExtend",
                        "ddbe2aba59b9d8f15b26f82ee278402bb900c671"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H5.",
                        "VernacExtend",
                        "1b6b963349bb6ca4033f93c87ba60dca619d5549"
                    ]
                },
                {
                    "command": [
                        "assert (has_at_most_n_elements n (union Sset S1)).",
                        "VernacExtend",
                        "50df07149a0d4223e1c7409f1378536413724d42"
                    ]
                },
                {
                    "command": [
                        "apply has_at_most_n_elements_comp with (m + (n - m)) (union Sset S1); auto with algebra.",
                        "VernacExtend",
                        "c3158f3719e337c43dd6576807f93890db634d46"
                    ]
                },
                {
                    "command": [
                        "2: auto with arith.",
                        "VernacExtend",
                        "7cf53251bf9667c18cc6029326921498c5e42fa0"
                    ]
                },
                {
                    "command": [
                        "apply union_has_at_most_n_plus_m_elements; auto with algebra.",
                        "VernacExtend",
                        "9e605636660d0b08d519d7ea9a1aea841c81c885"
                    ]
                },
                {
                    "command": [
                        "unfold S1 in |- *.",
                        "VernacExtend",
                        "8de7600a07a46c977205c330d7458ee95ad211eb"
                    ]
                },
                {
                    "command": [
                        "apply inject_subsets_preserves_has_n_elements; auto with algebra.",
                        "VernacExtend",
                        "a447c7a6a2e7a9e4104dfe20fdde8c5a15723b77"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "exists S1.",
                        "VernacExtend",
                        "c3a2ac19b95c2a37a0fc78a4641770e6174fc508"
                    ]
                },
                {
                    "command": [
                        "generalize (dimension_bounds_generating_set_size HH2 H6 H5).",
                        "VernacExtend",
                        "133a52e0395eec6c49b3f57bdf1fbeb35bf7b448"
                    ]
                },
                {
                    "command": [
                        "split; intuition.",
                        "VernacExtend",
                        "ad92f41c7c6120efbfc528c4c895eac1600e6297"
                    ]
                },
                {
                    "command": [
                        "unfold S1 in |- *.",
                        "VernacExtend",
                        "8de7600a07a46c977205c330d7458ee95ad211eb"
                    ]
                },
                {
                    "command": [
                        "apply inject_subsets_of_part_set_included.",
                        "VernacExtend",
                        "bb5eb5b42105f34108a62bd928adad6b8bc1d7b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "has_dim_zero_then_trivial",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rename x into beta.",
                        "VernacExtend",
                        "c37b0124bf5fd6a2d1333239c62efc40b8cce538"
                    ]
                },
                {
                    "command": [
                        "generalize (is_basis_prf beta).",
                        "VernacExtend",
                        "78f5786373d3d6273b643f468d98875d12cfffd2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "red in H1.",
                        "VernacExtend",
                        "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span beta:part_set _); auto with algebra.",
                        "VernacExtend",
                        "2e14e7c7f3b0758d8225de479e5dc65cd875e7a5"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span_ind beta:part_set _); auto with algebra.",
                        "VernacExtend",
                        "23b0e19e80c7cdb62c595a92cb278b66adbebd40"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span_ind (empty V):part_set _).",
                        "VernacExtend",
                        "c12d65ae0093af8e906605b9a00697b7856350ad"
                    ]
                },
                {
                    "command": [
                        "apply span_ind_comp; auto with algebra.",
                        "VernacExtend",
                        "e0d3435d59a9f8a7c7abbebf8549f1992512c885"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; simpl in |- *; intro.",
                        "VernacExtend",
                        "e4440bdb62bd3f708380aacb1a30e1541c47d522"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "generalize dependent x.",
                        "VernacExtend",
                        "50e76bb1cf2faba66dcbc28258c9c7ceb1f7dc4c"
                    ]
                },
                {
                    "command": [
                        "induction x0 as [| c| x1 IHx1 x2 IHx2| c x0 IHx0]; intros.",
                        "VernacExtend",
                        "7c3766ab65661cd09e6bf4c7433203868da907b0"
                    ]
                },
                {
                    "command": [
                        "simpl in H3.",
                        "VernacExtend",
                        "2a96f120ac764efacadc60b978d01343f60aafa0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct c.",
                        "VernacExtend",
                        "a4012bbde27d6ea8adc781c7b9536f3e19fa929e"
                    ]
                },
                {
                    "command": [
                        "simpl in subtype_prf.",
                        "VernacExtend",
                        "e4906ebbcbf2c72d4454f2699f506db5cf66f8e4"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "simpl in H3.",
                        "VernacExtend",
                        "2a96f120ac764efacadc60b978d01343f60aafa0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span_ind_injection x1 +' span_ind_injection x2); auto with algebra.",
                        "VernacExtend",
                        "754a17be07eb2d4ab29ef36fff6fecc783f068b9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span_ind_injection x1 +' (zero V)); auto with algebra.",
                        "VernacExtend",
                        "8d6a8c4f5a3715b5f14cf730d89dc0456861875d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (span_ind_injection (Multvector c x0)); auto with algebra.",
                        "VernacExtend",
                        "67a22161adfe1820c39e364cd4e0d340d12fd642"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (c mX (zero V)); auto with algebra.",
                        "VernacExtend",
                        "f62e822e0ab52cbb47d8a17ed1037458ee37e68a"
                    ]
                },
                {
                    "command": [
                        "exists (Zerovector (empty V)).",
                        "VernacExtend",
                        "3efb2669d8161e2cd7480fce2b773addb6648495"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}