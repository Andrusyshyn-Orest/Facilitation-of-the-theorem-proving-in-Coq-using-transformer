{
    "filename": "LinAlg/lin_combinations.v",
    "coq_project": "lin-alg",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export distinct.",
            "VernacRequire",
            "3f4aee4a268bee86d49d97f1bf89160c9bb0fcfa"
        ],
        [
            "Require Export distribution_lemmas.",
            "VernacRequire",
            "bb8dea91b39ced11ca03491aabc7595c2b0cfa50"
        ],
        [
            "Require Export sums2.",
            "VernacRequire",
            "600aeda83af4c8f528daa97b133255f0316b0a5d"
        ],
        [
            "Require Export omit_facts.",
            "VernacRequire",
            "00cf49792ce49a2d2c501575d5aaef54e3895a6e"
        ],
        [
            "Require Export cast_between_subsets.",
            "VernacRequire",
            "e89254e4b47cfc6521c1e157e6f6fc3d34abd780"
        ],
        [
            "Section lin_dep_def.",
            "VernacBeginSection",
            "6f0c975aaa004a048563a8485231b415ec7e6adb"
        ],
        [
            "Definition is_lin_comb (F : field) (V : vectorspace F) (x : V) (S : part_set V) := exists n : Nat, (exists a : seq n F, (exists v : seq n S, x =' sum (mult_by_scalars a (Map_embed v)) in _)).",
            "VernacDefinition",
            "7fd45f31c85f1ea5cb85c7b68babbe31da5a4e27"
        ],
        [
            "Lemma is_lin_comb_comp : forall (F : field) (V : vectorspace F) (x y : V) (S T : part_set V), S =' T in _ -> x =' y in _ -> is_lin_comb x S -> is_lin_comb y T.",
            "VernacStartTheoremProof",
            "f216b5bd2971c9d963cc734d96af41841ebc53ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (is_lin_comb x T).",
            "VernacExtend",
            "01972f4a7299edc57ed10ddf826b32321e3c68c9"
        ],
        [
            "red in |- *; red in H1.",
            "VernacExtend",
            "002bab789ad1e2133d89716c06391f74dae588bd"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "exists (Map_to_equal_subsets H x2).",
            "VernacExtend",
            "c4f6bf2076889ee30f8465bd29888448a2f63643"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x1 (Map_embed x2))); auto with algebra.",
            "VernacExtend",
            "205186e3519f0ad4759cb5a08ea4c0f2d027b87a"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "red in H2.",
            "VernacExtend",
            "5bba02de869f074af7f0a372976a9a820f412047"
        ],
        [
            "inversion H2.",
            "VernacExtend",
            "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "inversion H4.",
            "VernacExtend",
            "184e412874313f14014d688ef3b69568302d00ff"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "apply Trans with x; auto with algebra.",
            "VernacExtend",
            "99933685feee52d93762f7f5d8ac2c88f3f1ca98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve is_lin_comb_comp: algebra.",
            "VernacHints",
            "c175ab561c5ddec02614429417aa5702281510cd"
        ],
        [
            "Definition is_lin_comb_pred : forall (F : field) (V : vectorspace F), part_set V -> Predicate V.",
            "VernacDefinition",
            "4f7393060a80b5aa04f5582712f7c83bc9b49260"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Build_Predicate (Pred_fun:=fun x : V => is_lin_comb x X)).",
            "VernacExtend",
            "0bfe2cc7be7ecb115fa00ec3b27d4817269d9b63"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply is_lin_comb_comp with x X; auto with algebra.",
            "VernacExtend",
            "a7ab40245d15164beea73339d17c66401574187c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End lin_dep_def.",
            "VernacEndSegment",
            "5d867b4ac30ae1b5ea1e541bee4d4e6e2720b3db"
        ],
        [
            "Section condensing.",
            "VernacBeginSection",
            "bd8f0d720f96447fe5db4a2426df79440f36015e"
        ],
        [
            "Lemma lin_comb_with_distinct_vectors : forall (F : field) (V : vectorspace F) (x : V) (B : part_set V), is_lin_comb x B -> exists n : Nat, (exists a : seq n F, (exists v : seq n B, x =' sum (mult_by_scalars a (Map_embed v)) in _ /\\ distinct v)).",
            "VernacStartTheoremProof",
            "93ac0fbbe25943077a0de6815254975305e45172"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "generalize x0 H0; clear H0 x0.",
            "VernacExtend",
            "7860722aaa2de16ca55365bc8a3611b781297002"
        ],
        [
            "intro n; induction n as [| n Hrecn].",
            "VernacExtend",
            "4b855a0e54cd39ee865c26c1c98e8c398042bb09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply False_ind; auto with algebra.",
            "VernacExtend",
            "467d3e961c2c4f2afd49f6e62b23898ac9fd0a58"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "assert (distinct x1 \\/ ~ distinct x1).",
            "VernacExtend",
            "cdab2540d207b8f1980cf0c17d1b8b7dd66fca76"
        ],
        [
            "apply classic.",
            "VernacExtend",
            "1b2266ca37ff8ebb5c2e9f426bd31f7b454a9eaf"
        ],
        [
            "case H.",
            "VernacExtend",
            "ed133bc3c18fb327812c50c4771060c04c7f32b1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "exists (S n).",
            "VernacExtend",
            "cd2a24563bef1e96e5268d448b7159cbb0bda443"
        ],
        [
            "exists x0; exists x1; split; auto.",
            "VernacExtend",
            "2bd8c2f8963d277fccc446d4704735d3653a3a9c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold distinct in H1.",
            "VernacExtend",
            "0d4dec996b64363ea76521c7ed7ac1e54cff3a10"
        ],
        [
            "assert (exists i : fin (S n), (exists j : fin (S n), ~ i =' j in _ /\\ x1 i =' x1 j in _)).",
            "VernacExtend",
            "1f6c0b226b7fbbd3aea0e2eff8f5dc589df32ef7"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "red in H1.",
            "VernacExtend",
            "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
        ],
        [
            "intros; apply H1.",
            "VernacExtend",
            "312b6712f38e160adb0dc9f9059cdcab75ee81df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in |- *; red in H2.",
            "VernacExtend",
            "90addbdc5d22ea7c84b2e775d362b4240c289b86"
        ],
        [
            "intro; apply H2.",
            "VernacExtend",
            "f3b4a9b412a4f005816b3e5c70429aa7674cbea8"
        ],
        [
            "exists i; exists j; auto.",
            "VernacExtend",
            "cca2c6fbd435f03250ef2b65b997e95bb7624cc9"
        ],
        [
            "inversion_clear H2; inversion_clear H3.",
            "VernacExtend",
            "75bc4e80cee156c43c729a8ea10ee9cb9a96a944"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "exists (omit (modify_seq x0 x2 (x0 x2 +' x0 x3)) x3).",
            "VernacExtend",
            "488844f021acb7bb96e193a978a5c01c25208855"
        ],
        [
            "exists (omit x1 x3).",
            "VernacExtend",
            "897d0f43885e894f2ce2decb674c7ee785c9ca9b"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (omit (modify_seq x0 x2 (x0 x2 +' x0 x3)) x3) (omit (Map_embed x1) x3))).",
            "VernacExtend",
            "e56b0a17948b756a334a507fade02fba019b8d78"
        ],
        [
            "apply Trans with (sum (omit (mult_by_scalars (modify_seq x0 x2 (x0 x2 +' x0 x3)) (Map_embed x1)) x3)); auto with algebra.",
            "VernacExtend",
            "be25d852af0895c0d004d3fd891aae093609b008"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (modify_seq x0 x2 (x0 x2 +' x0 x3)) (Map_embed x1)) +' (min mult_by_scalars (modify_seq x0 x2 (x0 x2 +' x0 x3)) (Map_embed x1) x3)); auto with algebra.",
            "VernacExtend",
            "edc141f9cf8bf7ec1e39e23250f67d2154fb8a69"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (modify_seq x0 x2 (x0 x2 +' x0 x3)) (Map_embed x1)) +' (min x0 x3 mX Map_embed x1 x3)).",
            "VernacExtend",
            "b0ccbb20bf5635a35793d39227a97644667496cc"
        ],
        [
            "apply Trans with (sum (modify_seq (mult_by_scalars x0 (Map_embed x1)) x2 ((x0 x2 +' x0 x3) mX Map_embed x1 x2)) +' (min x0 x3 mX Map_embed x1 x3)); auto with algebra.",
            "VernacExtend",
            "8e9dcfd7f8320d3d7936febaed596d5f68e77442"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x0 (Map_embed x1)) +' (min mult_by_scalars x0 (Map_embed x1) x2) +' (x0 x2 +' x0 x3) mX Map_embed x1 x2 +' (min x0 x3 mX Map_embed x1 x3)); auto with algebra.",
            "VernacExtend",
            "3487b51121875810360a322323ad05fc080a0d09"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x0 (Map_embed x1)) +' ((min mult_by_scalars x0 (Map_embed x1) x2) +' (x0 x2 +' x0 x3) mX Map_embed x1 x2 +' (min x0 x3 mX Map_embed x1 x3))).",
            "VernacExtend",
            "444170e2d34328115ac6cdc0b8e0c8cdb5420bb9"
        ],
        [
            "2: apply Trans with (sum (mult_by_scalars x0 (Map_embed x1)) +' ((min mult_by_scalars x0 (Map_embed x1) x2) +' (x0 x2 +' x0 x3) mX Map_embed x1 x2) +' (min x0 x3 mX Map_embed x1 x3)); auto with algebra.",
            "VernacExtend",
            "2c81ec79dfdfaddb56909f6049b4180f7161c8bb"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x0 (Map_embed x1))); auto with algebra.",
            "VernacExtend",
            "3a1ebb55365bcf29324dae792c8554dd5be60d70"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x0 (Map_embed x1)) +' (zero V)); auto with algebra.",
            "VernacExtend",
            "24a00fa2296763b93cba038308475435feb13d01"
        ],
        [
            "apply SGROUP_comp; auto with algebra.",
            "VernacExtend",
            "1228d5420c7112d12f13dd08022ffbf79385f944"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply GROUP_reg_right with (x0 x3 mX subtype_elt (x1 x3)).",
            "VernacExtend",
            "b4f126545a623a8d02ff268f8e571bd56240cb68"
        ],
        [
            "apply Trans with (x0 x3 mX subtype_elt (x1 x3)); auto with algebra.",
            "VernacExtend",
            "6d5c73fc20ee1f938a8068a468e9673a92ac38e1"
        ],
        [
            "apply Trans with ((min x0 x2 mX subtype_elt (x1 x2)) +' (x0 x2 +' x0 x3) mX subtype_elt (x1 x2) +' ((min x0 x3 mX subtype_elt (x1 x3)) +' x0 x3 mX subtype_elt (x1 x3))); auto with algebra.",
            "VernacExtend",
            "1e90a0c729e86755da6d06edea5cb4d06b251a36"
        ],
        [
            "apply Trans with ((min x0 x2 mX subtype_elt (x1 x2)) +' (x0 x2 +' x0 x3) mX subtype_elt (x1 x2) +' (zero V)); auto with algebra.",
            "VernacExtend",
            "3d13bc4d7beaa806e8e7128181a710df09384033"
        ],
        [
            "apply Trans with ((min x0 x2 mX subtype_elt (x1 x2)) +' (x0 x2 +' x0 x3) mX subtype_elt (x1 x2)); auto with algebra.",
            "VernacExtend",
            "e0f1ce8677bed8b41ad83ed89d41536250f0b786"
        ],
        [
            "apply Trans with (x0 x3 mX subtype_elt (x1 x2)); auto with algebra.",
            "VernacExtend",
            "fa0303ed251058abd0decad4f17e2385454b83fd"
        ],
        [
            "apply Trans with ((min x0 x2) mX subtype_elt (x1 x2) +' (x0 x2 +' x0 x3) mX subtype_elt (x1 x2)); auto with algebra.",
            "VernacExtend",
            "c3e1ace768c5f0f6ae4ba50ab4e085fab779f7c6"
        ],
        [
            "apply Trans with (((min x0 x2) +' (x0 x2 +' x0 x3)) mX subtype_elt (x1 x2)); auto with algebra.",
            "VernacExtend",
            "c8561479f533f946188504e153da595695e81743"
        ],
        [
            "apply MODULE_comp; auto with algebra.",
            "VernacExtend",
            "113109922a6d63cfa8cfcd90817e490ef9438668"
        ],
        [
            "apply Trans with ((min x0 x2) +' x0 x2 +' x0 x3); auto with algebra.",
            "VernacExtend",
            "fe0c24bbf79c68613b4d87516ef3fbe68bf8cf45"
        ],
        [
            "apply Trans with ((zero F) +' x0 x3); auto with algebra.",
            "VernacExtend",
            "c6cc4944364f7cd6272f18fb51e0ce064e73e527"
        ],
        [
            "apply SGROUP_comp; auto with algebra.",
            "VernacExtend",
            "1228d5420c7112d12f13dd08022ffbf79385f944"
        ],
        [
            "apply GROUP_comp; auto with algebra.",
            "VernacExtend",
            "a06c41b705fc196361977b17a695500b7a357078"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply Trans with (modify_seq x0 x2 (x0 x2 +' x0 x3) x3 mX Map_embed x1 x3); auto with algebra.",
            "VernacExtend",
            "11b44537941ef5b4b7642efe6d8b56657a5ad678"
        ],
        [
            "apply MODULE_comp; auto with algebra.",
            "VernacExtend",
            "113109922a6d63cfa8cfcd90817e490ef9438668"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply modify_seq_modifies_one_elt; auto with algebra.",
            "VernacExtend",
            "8d5e74ba98aa162a3263d9bbe71f2f7482f1f428"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply sum_comp.",
            "VernacExtend",
            "a2ec8814a579ebab8d98cb93aa179934322b3154"
        ],
        [
            "apply toMap.",
            "VernacExtend",
            "0fce55dc71dffae900de11177621d32fc56a4db7"
        ],
        [
            "apply pointwise_comp; auto with algebra.",
            "VernacExtend",
            "6c6f4de18cc58cd3ce0f201b66b31eb52cd3fd9e"
        ],
        [
            "change (omit (Map_embed x1) x3 =' Map_embed (omit x1 x3) in _) in |- *.",
            "VernacExtend",
            "1d1814a639789f0353c177b4dc629318a4812721"
        ],
        [
            "apply omit_Map_embed.",
            "VernacExtend",
            "80b5dfb595e582c826f6e7ac1ff6307284cf0eac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lin_comb_condensed : forall (F : field) (V : vectorspace F) (B : part_set V) (n : Nat) (b : seq n V), B =' seq_set b in _ -> forall x : V, is_lin_comb x B -> exists a : seq n F, x =' sum (mult_by_scalars a b) in _.",
            "VernacStartTheoremProof",
            "92ab4e098230551be7590df687ef7bffac0c338b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "generalize x H1; clear H1 x.",
            "VernacExtend",
            "6a25cf4e64980b041696468a3368e722a9b6df8b"
        ],
        [
            "induction x0.",
            "VernacExtend",
            "ed7dfd40a1d2378e9907c43dd3fbba31813968ee"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (const_seq n (zero F)).",
            "VernacExtend",
            "990e3127d6fe5ff3cbd1c90860b23d741ce5d7c6"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "apply Trans with (zero V); auto with algebra.",
            "VernacExtend",
            "ed0547ae5efd2cc34a08cc3bdb0ec1f1c182f11f"
        ],
        [
            "apply Trans with (sum (const_seq n (zero V))); auto with algebra.",
            "VernacExtend",
            "65221a3149ab642feff1cc9926cd0fa7d51404c0"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply sum_of_zeros; auto with algebra.",
            "VernacExtend",
            "fb04f2895a37ccab8eb49a1148d3e9ae8b207b87"
        ],
        [
            "unfold const_seq in |- *.",
            "VernacExtend",
            "987396e54dae96153324184742ffff2d7934d2a4"
        ],
        [
            "apply sum_comp.",
            "VernacExtend",
            "a2ec8814a579ebab8d98cb93aa179934322b3154"
        ],
        [
            "intro; simpl in |- *; auto with algebra.",
            "VernacExtend",
            "27d3904ade1db83788658ba95a3afd49c31f1566"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "assert (exists i : fin n, B (head x2) =' b i in _).",
            "VernacExtend",
            "00fffcc641ff2fa3b9952e1fb0a7bf7ea1f9cb3d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "generalize (H (B (head x2))); intros (p, q).",
            "VernacExtend",
            "795b56e55d253efc32e4584374465e45d076bc6b"
        ],
        [
            "apply p; auto with algebra.",
            "VernacExtend",
            "7f6d25bf3a111ebf27c3a3f60060bad78080707b"
        ],
        [
            "apply in_part_comp_l with (subtype_elt (head x2)); auto with algebra.",
            "VernacExtend",
            "afd9441fd5c4985d5378754c279ead994ed39097"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "assert (x =' head x1 mX B (head x2) +' sum (mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2))) in _).",
            "VernacExtend",
            "3625fc14cb493276629e3546688caed18d0b1d58"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x1 (Map_embed x2))); auto with algebra.",
            "VernacExtend",
            "205186e3519f0ad4759cb5a08ea4c0f2d027b87a"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (hdtl x1) (Map_embed (hdtl x2)))).",
            "VernacExtend",
            "ee02a3994e23872d23f38544a2dd016cf5f4b4ea"
        ],
        [
            "unfold hdtl, mult_by_scalars in |- *.",
            "VernacExtend",
            "88261b7c5e11ec485bfc4cdebfa0b3923d81707c"
        ],
        [
            "apply sum_comp.",
            "VernacExtend",
            "a2ec8814a579ebab8d98cb93aa179934322b3154"
        ],
        [
            "unfold head in |- *.",
            "VernacExtend",
            "9d09038322535bb2bb0d7b30f3a27c3621e2a6fc"
        ],
        [
            "apply toMap.",
            "VernacExtend",
            "0fce55dc71dffae900de11177621d32fc56a4db7"
        ],
        [
            "apply pointwise_comp; auto with algebra.",
            "VernacExtend",
            "6c6f4de18cc58cd3ce0f201b66b31eb52cd3fd9e"
        ],
        [
            "unfold hdtl in |- *.",
            "VernacExtend",
            "5f2a6e0a92aa95fc15f7c15ebc4012423725717b"
        ],
        [
            "apply Trans with (sum (uncurry (MODULE_comp (Mod:=V)) (couple (head x1) (B (head x2)));; mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2)))); auto with algebra.",
            "VernacExtend",
            "f5e03002053b2aa8b6d196828f919b9192d79ebf"
        ],
        [
            "assert (exists a : seq x0 F, (exists v : seq x0 B, x +' (min head x1 mX B (head x2)) =' sum (mult_by_scalars a (Map_embed v)) in _)).",
            "VernacExtend",
            "ad3ddeef559c2cdfa3a4a524fd8301abdef09971"
        ],
        [
            "exists (Seqtl x1).",
            "VernacExtend",
            "4f27980e34035f8ed94b6f2f8a0821c1c90b20e6"
        ],
        [
            "exists (Seqtl x2).",
            "VernacExtend",
            "1bf51f3de0b2ed5812ab865642c017aab4e8f73e"
        ],
        [
            "apply Trans with (head x1 mX B (head x2) +' sum (mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2))) +' (min head x1 mX B (head x2))); auto with algebra.",
            "VernacExtend",
            "a160c27fc87affee3b18e7237d61782459707329"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2))) +' head x1 mX B (head x2) +' (min head x1 mX B (head x2))); auto with algebra.",
            "VernacExtend",
            "5e8846fd85289b2aaa1548ac085dfcf8868021d3"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2))) +' (head x1 mX B (head x2) +' (min head x1 mX B (head x2)))); auto with algebra.",
            "VernacExtend",
            "d5be0135270cd96bf0538d46e2ee61277ab6ec6a"
        ],
        [
            "apply Trans with (sum (mult_by_scalars (Seqtl x1) (Map_embed (Seqtl x2))) +' (zero V)); auto with algebra.",
            "VernacExtend",
            "fc85aec27c7a263e0b18d3fabc6deced87fc5321"
        ],
        [
            "generalize (IHx0 _ H3).",
            "VernacExtend",
            "29cdb9fb89fd3c6ab6a3668db0c78e4ca4b6b8ed"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "inversion_clear H4.",
            "VernacExtend",
            "48216828fc957e4d634a0462fc329b427275d260"
        ],
        [
            "exists (modify_seq x4 x3 (x4 x3 +' head x1)).",
            "VernacExtend",
            "44389858ad7e862ce2fd2c41f772d6ff0ad1a3db"
        ],
        [
            "apply Trans with (sum (modify_seq (mult_by_scalars x4 b) x3 ((x4 x3 +' head x1) mX b x3))); auto with algebra.",
            "VernacExtend",
            "5533b4b9ff616a518ba598f250f1f23cd8cb3531"
        ],
        [
            "apply Trans with (sum (mult_by_scalars x4 b) +' (min mult_by_scalars x4 b x3) +' (x4 x3 +' head x1) mX b x3).",
            "VernacExtend",
            "55aa8383be7a149d71fe828bf6c886f11bf01363"
        ],
        [
            "2: apply Sym; auto with algebra.",
            "VernacExtend",
            "736c91b98f35a28fdc92f31e1f74944e6a1b9c5d"
        ],
        [
            "apply Trans with (x +' (min head x1 mX B (head x2)) +' (min mult_by_scalars x4 b x3) +' (x4 x3 +' head x1) mX b x3); auto with algebra.",
            "VernacExtend",
            "3a765b21cd5654cf1281e11a3dc2b9f4627edfb3"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' (min x4 x3 mX b x3) +' (x4 x3 mX b x3 +' head x1 mX b x3)); auto with algebra.",
            "VernacExtend",
            "01ed25ea6b4cf0a8af1efc2f3fa5c19839cd5234"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' ((min x4 x3 mX b x3) +' (x4 x3 mX b x3 +' head x1 mX b x3))); auto with algebra.",
            "VernacExtend",
            "4632e8ba84638d10eee61b2613ccd92c06402ff3"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' ((min x4 x3 mX b x3) +' x4 x3 mX b x3 +' head x1 mX b x3)); auto with algebra.",
            "VernacExtend",
            "8228f89ee32770374ab562f24cbaf166bd3422a4"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' ((zero V) +' head x1 mX b x3)); auto with algebra.",
            "VernacExtend",
            "48dcf8a16cb650a1ae62adce0f9688a56ef6065e"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' head x1 mX b x3); auto with algebra.",
            "VernacExtend",
            "96a904ff757c26ec0b1db1e500444d47d1ff92f1"
        ],
        [
            "apply Trans with (x +' (min head x1 mX subtype_elt (head x2)) +' head x1 mX subtype_elt (head x2)); auto with algebra.",
            "VernacExtend",
            "2b0ca5f5cc637eadf9184b5f50d4fa6c037c923c"
        ],
        [
            "apply Trans with (x +' ((min head x1 mX subtype_elt (head x2)) +' head x1 mX subtype_elt (head x2))); auto with algebra.",
            "VernacExtend",
            "ca7767172a075169ce37c1f42315a0c52e958711"
        ],
        [
            "apply Trans with (x +' (zero V)); auto with algebra.",
            "VernacExtend",
            "27c60bd61be8f0953995750a00441f7ca0292c21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End condensing.",
            "VernacEndSegment",
            "938bf88b9f7dd564740b89a73075af0bd95f3441"
        ]
    ],
    "proofs": [
        {
            "name": "is_lin_comb_comp",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (is_lin_comb x T).",
                        "VernacExtend",
                        "01972f4a7299edc57ed10ddf826b32321e3c68c9"
                    ]
                },
                {
                    "command": [
                        "red in |- *; red in H1.",
                        "VernacExtend",
                        "002bab789ad1e2133d89716c06391f74dae588bd"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "exists (Map_to_equal_subsets H x2).",
                        "VernacExtend",
                        "c4f6bf2076889ee30f8465bd29888448a2f63643"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (sum (mult_by_scalars x1 (Map_embed x2))); auto with algebra.",
                        "VernacExtend",
                        "205186e3519f0ad4759cb5a08ea4c0f2d027b87a"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "red in H2.",
                        "VernacExtend",
                        "5bba02de869f074af7f0a372976a9a820f412047"
                    ]
                },
                {
                    "command": [
                        "inversion H2.",
                        "VernacExtend",
                        "afdc959ca1f20d64005a6cd95d8f83134e6ae5f8"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "inversion H4.",
                        "VernacExtend",
                        "184e412874313f14014d688ef3b69568302d00ff"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "exists x2.",
                        "VernacExtend",
                        "c66cfc490b972d4e27c8ead94cd5deb052231b69"
                    ]
                },
                {
                    "command": [
                        "apply Trans with x; auto with algebra.",
                        "VernacExtend",
                        "99933685feee52d93762f7f5d8ac2c88f3f1ca98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_lin_comb_pred",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Predicate (Pred_fun:=fun x : V => is_lin_comb x X)).",
                        "VernacExtend",
                        "0bfe2cc7be7ecb115fa00ec3b27d4817269d9b63"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply is_lin_comb_comp with x X; auto with algebra.",
                        "VernacExtend",
                        "a7ab40245d15164beea73339d17c66401574187c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}