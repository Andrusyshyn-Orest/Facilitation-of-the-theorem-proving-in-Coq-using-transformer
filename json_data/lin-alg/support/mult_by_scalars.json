{
    "filename": "support/mult_by_scalars.v",
    "coq_project": "lin-alg",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export pointwise.",
            "VernacRequire",
            "d7a3ff8a627e7d01ac918036d1d2e3edf32a832c"
        ],
        [
            "Require Export modify_seq.",
            "VernacRequire",
            "ce05b2aa167f2205d5899e1d344820753041f884"
        ],
        [
            "Require Export vecspaces_verybasic.",
            "VernacRequire",
            "330a36f446605a3300dea6135d09a4fcad7c65de"
        ],
        [
            "Definition mult_by_scalars (R : ring) (V : module R) (N : Nat) (a : Map (fin N) R) (v : Map (fin N) V) : MAP (fin N) V := pointwise (uncurry (MODULE_comp (Mod:=V))) a v.",
            "VernacDefinition",
            "ef322339a4f9eb69176ac141e177a40f35cb9040"
        ],
        [
            "Lemma mult_by_scalars_comp : forall (R : ring) (V : module R) (N : Nat) (a b : MAP (fin N) R) (v w : MAP (fin N) V), a =' b in _ -> v =' w in _ -> mult_by_scalars a v =' mult_by_scalars b w in _.",
            "VernacStartTheoremProof",
            "2a4e94671a3f7e5bb80b0fc4ccb9d166b8308aaa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply (pointwise_comp_general (A:=fin N) (B:=R) (C:=V) (D:=V)); auto with algebra.",
            "VernacExtend",
            "f24a13871d75eb4b25793a0d7c893ec49c4f79e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_by_scalars_fun2_compatible : forall (R : ring) (V : module R) (N : Nat), fun2_compatible (mult_by_scalars (V:=V) (N:=N):MAP _ _ -> MAP _ _ -> MAP _ _).",
            "VernacStartTheoremProof",
            "8842ec268669873b5917e7a6f97dbc341945d17f"
        ],
        [
            "exact mult_by_scalars_comp.",
            "VernacExtend",
            "0916d596d34463888719d19e8006851161112cb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mult_by_scalars_fun2_compatible mult_by_scalars_comp: algebra.",
            "VernacHints",
            "786a2ba9773eafd1a4907852491e1fcd1b15d16e"
        ],
        [
            "Lemma mult_by_scalars_Seqtl : forall (R : ring) (V : module R) (N : Nat) (a : Map (fin N) R) (v : Map (fin N) V), mult_by_scalars (Seqtl a) (Seqtl v) =' Seqtl (mult_by_scalars a v) in _.",
            "VernacStartTheoremProof",
            "106d9cd8be8f09dcc06b9f22c50f965953d18f2f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply Sym; auto with algebra.",
            "VernacExtend",
            "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mult_by_scalars_Seqtl: algebra.",
            "VernacHints",
            "a3c787c66d2ed3cd2f6a867a63b247d06967c6a2"
        ],
        [
            "Lemma mult_by_scalars_concat : forall (R : ring) (V : module R) (N M : Nat) (a : Map (fin N) R) (b : Map (fin M) R) (v : Map (fin N) V) (w : Map (fin M) V), mult_by_scalars (a ++ b) (v ++ w) =' mult_by_scalars a v ++ mult_by_scalars b w in _.",
            "VernacStartTheoremProof",
            "21480d72fc021f510cfe97dae90f4eb0f816c2c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mult_by_scalars_concat: algebra.",
            "VernacHints",
            "63a2297f773c2aa1e979c8e867b5d83684332aec"
        ],
        [
            "Lemma mult_by_scalars_modify_seq : forall (F : field) (V : vectorspace F) (n : Nat) (p : seq n F) (k : seq n V) (i : fin n) (q : F), mult_by_scalars (modify_seq p i q) k =' modify_seq (mult_by_scalars p k) i (q mX k i) in seq _ _.",
            "VernacStartTheoremProof",
            "8d6e2c669e558fde29cb451f3a6850a5700434cd"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros; inversion i; inversion in_range_prf.",
            "VernacExtend",
            "33488c4b878b30cb37275ab172101f2844fe7578"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case i.",
            "VernacExtend",
            "b4a783cafa5521836a9b3f45055303d5d6e0e1a6"
        ],
        [
            "intro; case index.",
            "VernacExtend",
            "0d2054d6bc4431cf2e6e0bbdb06e228ef55ae02b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Trans with (mult_by_scalars (q;; Seqtl p) k); auto with algebra.",
            "VernacExtend",
            "4c0bf63251f15b4d26753b71b36062a5ab195a64"
        ],
        [
            "apply Trans with (mult_by_scalars (q;; Seqtl p) (head k;; Seqtl k)).",
            "VernacExtend",
            "81b57b68d94c3d67b986389cd4e20371593aa2f7"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply toMap; apply pointwise_comp; auto with algebra.",
            "VernacExtend",
            "f2d97915ee56804b3b909fe2a161be59bd92a661"
        ],
        [
            "apply Trans with (q mX head k;; mult_by_scalars (Seqtl p) (Seqtl k)).",
            "VernacExtend",
            "df9bfe1e9544134b6aa65d4b225398019fb8b572"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply Trans with (uncurry (MODULE_comp (Mod:=V)) (couple q (head k));; pointwise (uncurry (MODULE_comp (R:=F) (Mod:=V))) (Seqtl p) (Seqtl k)); auto with algebra.",
            "VernacExtend",
            "b9ab0c7023ddb40ecd1149f7b3cb8bc547c82e9b"
        ],
        [
            "apply Trans with (q mX head k;; Seqtl (mult_by_scalars p k)).",
            "VernacExtend",
            "ce450e20e4b0dd9037e9417577c09bea6d63adf8"
        ],
        [
            "apply cons_comp; auto with algebra.",
            "VernacExtend",
            "da3591f5d667f6b800159da95cea28881511cfb2"
        ],
        [
            "unfold mult_by_scalars in |- *.",
            "VernacExtend",
            "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
        ],
        [
            "apply Trans with (q mX k (Build_finiteT in_range_prf);; Seqtl (mult_by_scalars p k)); auto with algebra.",
            "VernacExtend",
            "1c35a033ed8f2c12b9e1cd99b0170b95364f3daf"
        ],
        [
            "apply cons_comp; auto with algebra.",
            "VernacExtend",
            "da3591f5d667f6b800159da95cea28881511cfb2"
        ],
        [
            "intros m Hm.",
            "VernacExtend",
            "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
        ],
        [
            "set (Hm' := lt_S_n _ _ Hm) in *.",
            "VernacExtend",
            "5fb511d3046431dd8097289d04c5babe5569992f"
        ],
        [
            "apply Trans with (hdtl (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k)); auto with algebra.",
            "VernacExtend",
            "deec9c095ad1883c69a9eb8fef3ed3b80d868e03"
        ],
        [
            "apply Trans with (hdtl (modify_seq (mult_by_scalars p k) (Build_finiteT Hm) (q mX k (Build_finiteT Hm)))); auto with algebra.",
            "VernacExtend",
            "467e10590f4672a675f3d12c4d15551f22d8d7a2"
        ],
        [
            "unfold hdtl in |- *.",
            "VernacExtend",
            "5f2a6e0a92aa95fc15f7c15ebc4012423725717b"
        ],
        [
            "apply Trans with (head (mult_by_scalars p k);; Seqtl (modify_seq (mult_by_scalars p k) (Build_finiteT Hm) (q mX k (Build_finiteT Hm)))); auto with algebra.",
            "VernacExtend",
            "c70e0b4838a7d0c2cc9435016ff57c5b7b97f89b"
        ],
        [
            "apply Trans with (head (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k);; mult_by_scalars (Seqtl (modify_seq p (Build_finiteT Hm) q)) (Seqtl k)).",
            "VernacExtend",
            "e92899f2ea54bfb0c51c69f26e20c92544d85bd9"
        ],
        [
            "auto with algebra.",
            "VernacExtend",
            "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
        ],
        [
            "apply Trans with (head (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k);; mult_by_scalars (modify_seq (Seqtl p) (Build_finiteT Hm') q) (Seqtl k)).",
            "VernacExtend",
            "a78fa73d8ccfbcb2c594a5e10705bca939780d56"
        ],
        [
            "apply cons_comp; auto with algebra.",
            "VernacExtend",
            "da3591f5d667f6b800159da95cea28881511cfb2"
        ],
        [
            "apply cons_comp; auto with algebra.",
            "VernacExtend",
            "da3591f5d667f6b800159da95cea28881511cfb2"
        ],
        [
            "apply Trans with (mult_by_scalars (Seqtl (modify_seq p (Build_finiteT Hm) q)) (Seqtl k)); auto with algebra.",
            "VernacExtend",
            "01999be975e30209eed82456af9269be94e74d15"
        ],
        [
            "apply Trans with (modify_seq (Seqtl (mult_by_scalars p k)) (Build_finiteT Hm') (q mX k (Build_finiteT Hm))); auto with algebra.",
            "VernacExtend",
            "7869f60dbe1d00de6d445fe12f7569aa0d52ad33"
        ],
        [
            "apply Trans with (modify_seq (mult_by_scalars (Seqtl p) (Seqtl k)) (Build_finiteT Hm') (q mX k (Build_finiteT Hm))); auto with algebra.",
            "VernacExtend",
            "c88d8e1595ffc45fa09aadc2170cfb245cc08c19"
        ],
        [
            "apply Trans with (mult_by_scalars (modify_seq (Seqtl p) (Build_finiteT Hm') q) (Seqtl k)).",
            "VernacExtend",
            "51f2fc68cfd379fb5ec6680f47120882bd02aac1"
        ],
        [
            "apply toMap; apply mult_by_scalars_comp; auto with algebra.",
            "VernacExtend",
            "1fdc545c155d0a188ae40793ff3ac48f86dd9872"
        ],
        [
            "apply Trans with (modify_seq (mult_by_scalars (Seqtl p) (Seqtl k)) (Build_finiteT Hm') (q mX Seqtl k (Build_finiteT Hm'))); auto with algebra.",
            "VernacExtend",
            "855bd2f76094a341ea5c8eb197772a5f832dd916"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mult_by_scalars_modify_seq: algebra.",
            "VernacHints",
            "fc840a397defe80c7d8b3321e568af18d73324b1"
        ]
    ],
    "proofs": [
        {
            "name": "mult_by_scalars_comp",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "apply (pointwise_comp_general (A:=fin N) (B:=R) (C:=V) (D:=V)); auto with algebra.",
                        "VernacExtend",
                        "f24a13871d75eb4b25793a0d7c893ec49c4f79e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_by_scalars_fun2_compatible",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "exact mult_by_scalars_comp.",
                        "VernacExtend",
                        "0916d596d34463888719d19e8006851161112cb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_by_scalars_Seqtl",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "apply Sym; auto with algebra.",
                        "VernacExtend",
                        "b3bee29d7b524ba0bf156948eb04bb46ddb81e70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_by_scalars_concat",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_by_scalars_modify_seq",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros; inversion i; inversion in_range_prf.",
                        "VernacExtend",
                        "33488c4b878b30cb37275ab172101f2844fe7578"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case i.",
                        "VernacExtend",
                        "b4a783cafa5521836a9b3f45055303d5d6e0e1a6"
                    ]
                },
                {
                    "command": [
                        "intro; case index.",
                        "VernacExtend",
                        "0d2054d6bc4431cf2e6e0bbdb06e228ef55ae02b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (mult_by_scalars (q;; Seqtl p) k); auto with algebra.",
                        "VernacExtend",
                        "4c0bf63251f15b4d26753b71b36062a5ab195a64"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (mult_by_scalars (q;; Seqtl p) (head k;; Seqtl k)).",
                        "VernacExtend",
                        "81b57b68d94c3d67b986389cd4e20371593aa2f7"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "apply toMap; apply pointwise_comp; auto with algebra.",
                        "VernacExtend",
                        "f2d97915ee56804b3b909fe2a161be59bd92a661"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (q mX head k;; mult_by_scalars (Seqtl p) (Seqtl k)).",
                        "VernacExtend",
                        "df9bfe1e9544134b6aa65d4b225398019fb8b572"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (uncurry (MODULE_comp (Mod:=V)) (couple q (head k));; pointwise (uncurry (MODULE_comp (R:=F) (Mod:=V))) (Seqtl p) (Seqtl k)); auto with algebra.",
                        "VernacExtend",
                        "b9ab0c7023ddb40ecd1149f7b3cb8bc547c82e9b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (q mX head k;; Seqtl (mult_by_scalars p k)).",
                        "VernacExtend",
                        "ce450e20e4b0dd9037e9417577c09bea6d63adf8"
                    ]
                },
                {
                    "command": [
                        "apply cons_comp; auto with algebra.",
                        "VernacExtend",
                        "da3591f5d667f6b800159da95cea28881511cfb2"
                    ]
                },
                {
                    "command": [
                        "unfold mult_by_scalars in |- *.",
                        "VernacExtend",
                        "894fdc69ed30bd4248cd23c44b3cadacf4e36eeb"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (q mX k (Build_finiteT in_range_prf);; Seqtl (mult_by_scalars p k)); auto with algebra.",
                        "VernacExtend",
                        "1c35a033ed8f2c12b9e1cd99b0170b95364f3daf"
                    ]
                },
                {
                    "command": [
                        "apply cons_comp; auto with algebra.",
                        "VernacExtend",
                        "da3591f5d667f6b800159da95cea28881511cfb2"
                    ]
                },
                {
                    "command": [
                        "intros m Hm.",
                        "VernacExtend",
                        "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
                    ]
                },
                {
                    "command": [
                        "set (Hm' := lt_S_n _ _ Hm) in *.",
                        "VernacExtend",
                        "5fb511d3046431dd8097289d04c5babe5569992f"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (hdtl (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k)); auto with algebra.",
                        "VernacExtend",
                        "deec9c095ad1883c69a9eb8fef3ed3b80d868e03"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (hdtl (modify_seq (mult_by_scalars p k) (Build_finiteT Hm) (q mX k (Build_finiteT Hm)))); auto with algebra.",
                        "VernacExtend",
                        "467e10590f4672a675f3d12c4d15551f22d8d7a2"
                    ]
                },
                {
                    "command": [
                        "unfold hdtl in |- *.",
                        "VernacExtend",
                        "5f2a6e0a92aa95fc15f7c15ebc4012423725717b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (head (mult_by_scalars p k);; Seqtl (modify_seq (mult_by_scalars p k) (Build_finiteT Hm) (q mX k (Build_finiteT Hm)))); auto with algebra.",
                        "VernacExtend",
                        "c70e0b4838a7d0c2cc9435016ff57c5b7b97f89b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (head (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k);; mult_by_scalars (Seqtl (modify_seq p (Build_finiteT Hm) q)) (Seqtl k)).",
                        "VernacExtend",
                        "e92899f2ea54bfb0c51c69f26e20c92544d85bd9"
                    ]
                },
                {
                    "command": [
                        "auto with algebra.",
                        "VernacExtend",
                        "2a8b2ac72ff20b5f342f7b76f72f9b539e5a10f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (head (mult_by_scalars (modify_seq p (Build_finiteT Hm) q) k);; mult_by_scalars (modify_seq (Seqtl p) (Build_finiteT Hm') q) (Seqtl k)).",
                        "VernacExtend",
                        "a78fa73d8ccfbcb2c594a5e10705bca939780d56"
                    ]
                },
                {
                    "command": [
                        "apply cons_comp; auto with algebra.",
                        "VernacExtend",
                        "da3591f5d667f6b800159da95cea28881511cfb2"
                    ]
                },
                {
                    "command": [
                        "apply cons_comp; auto with algebra.",
                        "VernacExtend",
                        "da3591f5d667f6b800159da95cea28881511cfb2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (mult_by_scalars (Seqtl (modify_seq p (Build_finiteT Hm) q)) (Seqtl k)); auto with algebra.",
                        "VernacExtend",
                        "01999be975e30209eed82456af9269be94e74d15"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (modify_seq (Seqtl (mult_by_scalars p k)) (Build_finiteT Hm') (q mX k (Build_finiteT Hm))); auto with algebra.",
                        "VernacExtend",
                        "7869f60dbe1d00de6d445fe12f7569aa0d52ad33"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (modify_seq (mult_by_scalars (Seqtl p) (Seqtl k)) (Build_finiteT Hm') (q mX k (Build_finiteT Hm))); auto with algebra.",
                        "VernacExtend",
                        "c88d8e1595ffc45fa09aadc2170cfb245cc08c19"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (mult_by_scalars (modify_seq (Seqtl p) (Build_finiteT Hm') q) (Seqtl k)).",
                        "VernacExtend",
                        "51f2fc68cfd379fb5ec6680f47120882bd02aac1"
                    ]
                },
                {
                    "command": [
                        "apply toMap; apply mult_by_scalars_comp; auto with algebra.",
                        "VernacExtend",
                        "1fdc545c155d0a188ae40793ff3ac48f86dd9872"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (modify_seq (mult_by_scalars (Seqtl p) (Seqtl k)) (Build_finiteT Hm') (q mX Seqtl k (Build_finiteT Hm'))); auto with algebra.",
                        "VernacExtend",
                        "855bd2f76094a341ea5c8eb197772a5f832dd916"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}