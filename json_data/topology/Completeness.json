{
    "filename": "Completeness.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export MetricSpaces.",
            "VernacRequire",
            "063c57c7b2de268d41bd13d0bb847789f12c5d9c"
        ],
        [
            "Section Completeness.",
            "VernacBeginSection",
            "1d5a4aa9df7ed935664df07bbdcf1c2cf3a10ac3"
        ],
        [
            "Variable X:Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Variable d:X->X->R.",
            "VernacAssumption",
            "b4ea2ec3188ce978374377d11a7f6e8a6961ab0f"
        ],
        [
            "Hypothesis d_metric: metric d.",
            "VernacAssumption",
            "fecbf49e4b6b7c8155a94b6c07cac2d535614e74"
        ],
        [
            "Definition cauchy (x:nat->X) : Prop := forall eps:R, eps > 0 -> exists N:nat, forall m n:nat, (m >= N)%nat -> (n >= N)%nat -> d (x m) (x n) < eps.",
            "VernacDefinition",
            "71b27cfbb3a6ddf1f4ff75f9ca49d36b81c7a8a1"
        ],
        [
            "Lemma convergent_sequence_is_cauchy: forall (x:Net nat_DS (MetricTopology d d_metric)) (x0:point_set (MetricTopology d d_metric)), net_limit x x0 -> cauchy x.",
            "VernacStartTheoremProof",
            "d26f19259808572c9eb30bbf265e2ecb0b4d4d76"
        ],
        [
            "pose proof (MetricTopology_metrizable X d d_metric).",
            "VernacExtend",
            "3ab49ce5535cd5247ba82b0aebfe7d304d17da88"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (H x0).",
            "VernacExtend",
            "eabcec78ea26d313874070228ff8c1755e2731e8"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose (U := open_ball _ d x0 (eps/2)).",
            "VernacExtend",
            "d2c19f3896b21ddc5ce192e2746e198bf70876ff"
        ],
        [
            "destruct (H0 U) as [N].",
            "VernacExtend",
            "f43e91167134162a14df9f1d173a0328c8ccc94b"
        ],
        [
            "Opaque In.",
            "VernacSetOpacity",
            "c43a741615899099c7aaa4429725c2ee6998a178"
        ],
        [
            "apply open_neighborhood_basis_elements.",
            "VernacExtend",
            "8a62346abb0c43223f4fcd514ad9f1038a91b720"
        ],
        [
            "Transparent In.",
            "VernacSetOpacity",
            "1926991f8b5442726ff8652662c923cfcda05fdf"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Require Import Fourier.",
            "VernacRequire",
            "b1faf81affc36d90178938cafee4d59fdf2002f3"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite metric_zero; trivial.",
            "VernacExtend",
            "1e1dcfe572b6aecb272bc51be2f26ae31ac96015"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "simpl in N.",
            "VernacExtend",
            "c7dd4729f508e1ace80749b2f7cd9deb06ce09a9"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (H2 m H3).",
            "VernacExtend",
            "71818ec8754147d77bc79ec0b4f3baf00fbd219b"
        ],
        [
            "destruct (H2 n H4).",
            "VernacExtend",
            "6d11194159dd5eeda10baebfba088dca99aefbf1"
        ],
        [
            "apply Rle_lt_trans with (d x0 (x m) + d x0 (x n)).",
            "VernacExtend",
            "2033771af402345e9553afc933be35f964b815d7"
        ],
        [
            "rewrite (metric_sym _ _ d_metric x0 (x m)); trivial.",
            "VernacExtend",
            "cbcaa1984b910e8f3cebc6304284e0dae284cd3e"
        ],
        [
            "apply triangle_inequality; trivial.",
            "VernacExtend",
            "399460fa17a4b7282894e1db67992cd6db8155b7"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cauchy_sequence_with_cluster_point_converges: forall (x:Net nat_DS (MetricTopology d d_metric)) (x0:point_set (MetricTopology d d_metric)), cauchy x -> net_cluster_point x x0 -> net_limit x x0.",
            "VernacStartTheoremProof",
            "f47d2e6ad48bd5f986db82e257fd2ebbade25c13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply metric_space_net_limit with d.",
            "VernacExtend",
            "662c1c2f5e8f4876eb6b63225a72f85017b09554"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (H (eps/2)) as [N].",
            "VernacExtend",
            "27841d3998a9c64f14dbae50c3edb994fcf278a7"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "pose (U := open_ball X d x0 (eps/2)).",
            "VernacExtend",
            "bb7c9215b9c027b2845efe689200a15ff12bff00"
        ],
        [
            "assert (open_neighborhood U x0 (X:=MetricTopology d d_metric)).",
            "VernacExtend",
            "d4225f4e7c7e33dcb7a641ee1f077eaee6d2f3ac"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "destruct (H0 U H3 H4 N) as [m [? []]].",
            "VernacExtend",
            "bb0c7a00b9fe6e9915fd32261f159cf52e23cbb9"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "exists N; intros n ?.",
            "VernacExtend",
            "60f1027473a91209dd43b3299932b8de8bd5438c"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "apply Rle_lt_trans with (d x0 (x m) + d (x m) (x n)).",
            "VernacExtend",
            "8b491f515f390707bef0e75390fc1d7555e440cd"
        ],
        [
            "apply triangle_inequality; trivial.",
            "VernacExtend",
            "399460fa17a4b7282894e1db67992cd6db8155b7"
        ],
        [
            "assert (d (x m) (x n) < eps/2) by (apply H2; trivial).",
            "VernacExtend",
            "d0647f9b1054ee89f8790e63f6a7a1a21b3d86c6"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition complete : Prop := forall x:nat->X, cauchy x -> exists x0:X, net_limit x x0 (I:=nat_DS) (X:=MetricTopology d d_metric).",
            "VernacDefinition",
            "f2203e106726b2c5b1bde11298a1f0f1f8ef947f"
        ],
        [
            "End Completeness.",
            "VernacEndSegment",
            "b964826d1e476128b764f30d73ad96dd38e644d5"
        ],
        [
            "Arguments cauchy {X}.",
            "VernacArguments",
            "7b8fbe4ecae73b3ece5a3b9e02b3d3f721404fb9"
        ],
        [
            "Arguments complete {X}.",
            "VernacArguments",
            "27d7695c565c004021e61aa7f98090685f5f4be5"
        ],
        [
            "Section closed_subset_of_complete.",
            "VernacBeginSection",
            "9c79c78ea9ceae511c4ef2c3c10981947113ba88"
        ],
        [
            "Variable X:Type.",
            "VernacAssumption",
            "2fba665172aeff032c992687943429405e326173"
        ],
        [
            "Variable d:X->X->R.",
            "VernacAssumption",
            "b4ea2ec3188ce978374377d11a7f6e8a6961ab0f"
        ],
        [
            "Hypothesis d_metric:metric d.",
            "VernacAssumption",
            "fecbf49e4b6b7c8155a94b6c07cac2d535614e74"
        ],
        [
            "Variable F:Ensemble X.",
            "VernacAssumption",
            "8e3005ab09958a5912e32d7d755bf0243b9ec35f"
        ],
        [
            "Let FT := { x:X | In F x }.",
            "VernacDefinition",
            "0c6092102fccca2a14f06a1c57017a59fe1f3080"
        ],
        [
            "Let d_restriction := fun x y:FT => d (proj1_sig x) (proj1_sig y).",
            "VernacDefinition",
            "a4679c56305577ff19ad63ba19a38759295f720a"
        ],
        [
            "Lemma d_restriction_metric: metric d_restriction.",
            "VernacStartTheoremProof",
            "3faf18a1c33151aa9a68d9ae3c3f4b7b33038e1e"
        ],
        [
            "From ZornsLemma Require Import Proj1SigInjective.",
            "VernacRequire",
            "56b6143754293eea9757603c8bbb82454ab70eae"
        ],
        [
            "constructor; intros; try destruct x; try destruct y; try destruct z; try apply subset_eq_compatT; apply d_metric; trivial.",
            "VernacExtend",
            "33ab25640af5a3df2fd6c46470208e5abfe21043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_subset_of_complete_is_complete: complete d d_metric -> closed F (X:=MetricTopology d d_metric) -> complete d_restriction d_restriction_metric.",
            "VernacStartTheoremProof",
            "63bc2bfbc67d3b1260de14dd1e280e42c0a866a8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose (y := fun n:nat => proj1_sig (x n)).",
            "VernacExtend",
            "b9f695bac5139038df57ed4697c2a95c65569479"
        ],
        [
            "destruct (H y) as [y0].",
            "VernacExtend",
            "9e8e09e2fbd6e99b6d736a0c03b3be9690dd97e9"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (H1 eps H2) as [N].",
            "VernacExtend",
            "9fd60385113a75e2f67bf74120a6bef22a6655f4"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "exact H3.",
            "VernacExtend",
            "8a748b9864755088f1affa06f3aea57ca19b1ab0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (In F y0).",
            "VernacExtend",
            "1a62b464372c69113dd0c383209ebfa4ccbbd022"
        ],
        [
            "rewrite <- (closure_fixes_closed _ H0); trivial.",
            "VernacExtend",
            "76157f6e5e88d8458652f20fc37e54a22c149ead"
        ],
        [
            "apply @net_limit_in_closure with (I:=nat_DS) (x:=y); trivial.",
            "VernacExtend",
            "9a2de6e5474b38a98deabed8a950d45cacf5a46f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists i; split.",
            "VernacExtend",
            "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "unfold y.",
            "VernacExtend",
            "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
        ],
        [
            "destruct (x i); trivial.",
            "VernacExtend",
            "3ea17fbdb672c8a72b237d279039c547d0012aaf"
        ],
        [
            "exists (exist _ y0 H3).",
            "VernacExtend",
            "97e0589b88a8903d4daaea375a6493a4d39274eb"
        ],
        [
            "apply metric_space_net_limit with d_restriction.",
            "VernacExtend",
            "81995bd35f0011ea48d33b193d98077ed98c961d"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold d_restriction; simpl.",
            "VernacExtend",
            "9e0d4a26574214cd47ef4018ff47b95a6c12d43f"
        ],
        [
            "apply metric_space_net_limit_converse with (MetricTopology d d_metric); trivial.",
            "VernacExtend",
            "574fc29e1aa81e5fd24901f720a93edcc793e507"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma complete_subset_is_closed: complete d_restriction d_restriction_metric -> closed F (X:=MetricTopology d d_metric).",
            "VernacStartTheoremProof",
            "722ab96f4c07eb36f6aae723dcc01fe937ced85b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (Included (closure F (X:=MetricTopology d d_metric)) F).",
            "VernacExtend",
            "f8840453754fa0c4218cc97921ab1cee6870a167"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (closure F (X:=MetricTopology d d_metric) = F).",
            "VernacExtend",
            "bea7fa5a5f00c43d22ebc5ec1e634a12427a633e"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "split; trivial; apply closure_inflationary.",
            "VernacExtend",
            "8fb6bc3f9e29f974030d7cafe543ff066237dec9"
        ],
        [
            "rewrite <- H1; apply closure_closed.",
            "VernacExtend",
            "702f36c86a0c0f8ae5b6feec08532117e0ca0fe4"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (exists y:Net nat_DS (MetricTopology d d_metric), (forall n:nat, In F (y n)) /\\ net_limit y x).",
            "VernacExtend",
            "a37d8437f21a2f8bcedd0399a175eb82abc89355"
        ],
        [
            "apply first_countable_sequence_closure; trivial.",
            "VernacExtend",
            "2349ba4d859e82bcfbadf3a8431e9d2ce57608e6"
        ],
        [
            "apply metrizable_impl_first_countable.",
            "VernacExtend",
            "264ccdcfd41a59fc1d98f5840ac6ee76af50a3f3"
        ],
        [
            "exists d; trivial; apply MetricTopology_metrizable.",
            "VernacExtend",
            "c353ed37f272f60092a50ea420cc5fdf7802631d"
        ],
        [
            "destruct H1 as [y []].",
            "VernacExtend",
            "c78c72fd8d829ad9d5db235bcb71320da6bd8b47"
        ],
        [
            "pose (y' := ((fun n:nat => exist _ (y n) (H1 n)) : Net nat_DS (MetricTopology d_restriction d_restriction_metric))).",
            "VernacExtend",
            "0120813d381d5275aab6894d02a48e4c9cb17df8"
        ],
        [
            "assert (cauchy d y).",
            "VernacExtend",
            "f256ca87c1e5faac14ad767a383be9368872df31"
        ],
        [
            "apply convergent_sequence_is_cauchy with d_metric x; trivial.",
            "VernacExtend",
            "774cf020871a04b82d21524938fe30fabf14a695"
        ],
        [
            "assert (cauchy d_restriction y').",
            "VernacExtend",
            "f07b4275387607c46774ace62d5b5de9612e2b34"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (H3 eps H4) as [N].",
            "VernacExtend",
            "172422cdcac6285af723e89e9b11710cbb027a7c"
        ],
        [
            "exists N; intros.",
            "VernacExtend",
            "cfd63f1f7fafabc1d063c17632530a627ae99922"
        ],
        [
            "unfold d_restriction; unfold y'; simpl.",
            "VernacExtend",
            "0f1d23c70b94487fd69e1e87ddd45698a4d088fb"
        ],
        [
            "apply H5; trivial.",
            "VernacExtend",
            "22e53d109576f2be2d25dfc5bb6a48652de314af"
        ],
        [
            "destruct (H _ H4) as [[x0]].",
            "VernacExtend",
            "76d80e9a8d582ba7a71d1166b5bc2e9be3ec1aec"
        ],
        [
            "cut (net_limit y x0 (I:=nat_DS) (X:=MetricTopology d d_metric)).",
            "VernacExtend",
            "d48fc3dc11b9c5251de2516e7745ae8ed665ebe7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (x = x0).",
            "VernacExtend",
            "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
        ],
        [
            "assert (uniqueness (net_limit y (I:=nat_DS) (X:=MetricTopology d d_metric))).",
            "VernacExtend",
            "0ee425c610e32da96f16d30a48a36857cbd1e16b"
        ],
        [
            "apply Hausdorff_impl_net_limit_unique.",
            "VernacExtend",
            "9c87766010cf740f7bfa142f8ac4e89a6bb51ffb"
        ],
        [
            "apply T3_sep_impl_Hausdorff.",
            "VernacExtend",
            "fd27508b96d8a2739a2f922d0ae97941ad6b29bf"
        ],
        [
            "apply normal_sep_impl_T3_sep.",
            "VernacExtend",
            "db803794576b2f16507828aca26c30aed69f2d1e"
        ],
        [
            "apply metrizable_impl_normal_sep.",
            "VernacExtend",
            "f2369a45a019206597142e78a4ef6b999854f755"
        ],
        [
            "exists d; trivial.",
            "VernacExtend",
            "2db3418ba7860a1a5255a001a17aba6c41afdb66"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "apply H7; trivial.",
            "VernacExtend",
            "103d57ae4a42f27ed4952065755b829d37e6999c"
        ],
        [
            "rewrite H7; trivial.",
            "VernacExtend",
            "1280b16392ee9891d94ee071838bac2ec6538975"
        ],
        [
            "apply metric_space_net_limit with d.",
            "VernacExtend",
            "662c1c2f5e8f4876eb6b63225a72f85017b09554"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "exact (metric_space_net_limit_converse (MetricTopology d_restriction d_restriction_metric) d_restriction (MetricTopology_metrizable _ d_restriction d_restriction_metric) nat_DS y' (exist (fun x:X => In F x) x0 i) H5).",
            "VernacExtend",
            "70ca5ba6809601a8ab6f4d8d9fae35dfa3166278"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End closed_subset_of_complete.",
            "VernacEndSegment",
            "7ec7151c98f6f34b7178f4187e26d5866a796441"
        ]
    ],
    "proofs": [
        {
            "name": "cauchy_sequence_with_cluster_point_converges",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_net_limit with d.",
                        "VernacExtend",
                        "662c1c2f5e8f4876eb6b63225a72f85017b09554"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (H (eps/2)) as [N].",
                        "VernacExtend",
                        "27841d3998a9c64f14dbae50c3edb994fcf278a7"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "pose (U := open_ball X d x0 (eps/2)).",
                        "VernacExtend",
                        "bb7c9215b9c027b2845efe689200a15ff12bff00"
                    ]
                },
                {
                    "command": [
                        "assert (open_neighborhood U x0 (X:=MetricTopology d d_metric)).",
                        "VernacExtend",
                        "d4225f4e7c7e33dcb7a641ee1f077eaee6d2f3ac"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 U H3 H4 N) as [m [? []]].",
                        "VernacExtend",
                        "bb0c7a00b9fe6e9915fd32261f159cf52e23cbb9"
                    ]
                },
                {
                    "command": [
                        "simpl in H5.",
                        "VernacExtend",
                        "03fbfc7bb6b248b41f6241227db3e5c410547157"
                    ]
                },
                {
                    "command": [
                        "exists N; intros n ?.",
                        "VernacExtend",
                        "60f1027473a91209dd43b3299932b8de8bd5438c"
                    ]
                },
                {
                    "command": [
                        "simpl in H7.",
                        "VernacExtend",
                        "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (d x0 (x m) + d (x m) (x n)).",
                        "VernacExtend",
                        "8b491f515f390707bef0e75390fc1d7555e440cd"
                    ]
                },
                {
                    "command": [
                        "apply triangle_inequality; trivial.",
                        "VernacExtend",
                        "399460fa17a4b7282894e1db67992cd6db8155b7"
                    ]
                },
                {
                    "command": [
                        "assert (d (x m) (x n) < eps/2) by (apply H2; trivial).",
                        "VernacExtend",
                        "d0647f9b1054ee89f8790e63f6a7a1a21b3d86c6"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_subset_of_complete_is_complete",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose (y := fun n:nat => proj1_sig (x n)).",
                        "VernacExtend",
                        "b9f695bac5139038df57ed4697c2a95c65569479"
                    ]
                },
                {
                    "command": [
                        "destruct (H y) as [y0].",
                        "VernacExtend",
                        "9e8e09e2fbd6e99b6d736a0c03b3be9690dd97e9"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 eps H2) as [N].",
                        "VernacExtend",
                        "9fd60385113a75e2f67bf74120a6bef22a6655f4"
                    ]
                },
                {
                    "command": [
                        "exists N.",
                        "VernacExtend",
                        "3a77aef7937b4644ae655ca246f76b7aa0d197df"
                    ]
                },
                {
                    "command": [
                        "exact H3.",
                        "VernacExtend",
                        "8a748b9864755088f1affa06f3aea57ca19b1ab0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (In F y0).",
                        "VernacExtend",
                        "1a62b464372c69113dd0c383209ebfa4ccbbd022"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (closure_fixes_closed _ H0); trivial.",
                        "VernacExtend",
                        "76157f6e5e88d8458652f20fc37e54a22c149ead"
                    ]
                },
                {
                    "command": [
                        "apply @net_limit_in_closure with (I:=nat_DS) (x:=y); trivial.",
                        "VernacExtend",
                        "9a2de6e5474b38a98deabed8a950d45cacf5a46f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists i; split.",
                        "VernacExtend",
                        "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "unfold y.",
                        "VernacExtend",
                        "29a8f7868cdd745151dd20abb7f3c232bfc6cb70"
                    ]
                },
                {
                    "command": [
                        "destruct (x i); trivial.",
                        "VernacExtend",
                        "3ea17fbdb672c8a72b237d279039c547d0012aaf"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ y0 H3).",
                        "VernacExtend",
                        "97e0589b88a8903d4daaea375a6493a4d39274eb"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_net_limit with d_restriction.",
                        "VernacExtend",
                        "81995bd35f0011ea48d33b193d98077ed98c961d"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold d_restriction; simpl.",
                        "VernacExtend",
                        "9e0d4a26574214cd47ef4018ff47b95a6c12d43f"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_net_limit_converse with (MetricTopology d d_metric); trivial.",
                        "VernacExtend",
                        "574fc29e1aa81e5fd24901f720a93edcc793e507"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complete_subset_is_closed",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (Included (closure F (X:=MetricTopology d d_metric)) F).",
                        "VernacExtend",
                        "f8840453754fa0c4218cc97921ab1cee6870a167"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (closure F (X:=MetricTopology d d_metric) = F).",
                        "VernacExtend",
                        "bea7fa5a5f00c43d22ebc5ec1e634a12427a633e"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "split; trivial; apply closure_inflationary.",
                        "VernacExtend",
                        "8fb6bc3f9e29f974030d7cafe543ff066237dec9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; apply closure_closed.",
                        "VernacExtend",
                        "702f36c86a0c0f8ae5b6feec08532117e0ca0fe4"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (exists y:Net nat_DS (MetricTopology d d_metric), (forall n:nat, In F (y n)) /\\ net_limit y x).",
                        "VernacExtend",
                        "a37d8437f21a2f8bcedd0399a175eb82abc89355"
                    ]
                },
                {
                    "command": [
                        "apply first_countable_sequence_closure; trivial.",
                        "VernacExtend",
                        "2349ba4d859e82bcfbadf3a8431e9d2ce57608e6"
                    ]
                },
                {
                    "command": [
                        "apply metrizable_impl_first_countable.",
                        "VernacExtend",
                        "264ccdcfd41a59fc1d98f5840ac6ee76af50a3f3"
                    ]
                },
                {
                    "command": [
                        "exists d; trivial; apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "c353ed37f272f60092a50ea420cc5fdf7802631d"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [y []].",
                        "VernacExtend",
                        "c78c72fd8d829ad9d5db235bcb71320da6bd8b47"
                    ]
                },
                {
                    "command": [
                        "pose (y' := ((fun n:nat => exist _ (y n) (H1 n)) : Net nat_DS (MetricTopology d_restriction d_restriction_metric))).",
                        "VernacExtend",
                        "0120813d381d5275aab6894d02a48e4c9cb17df8"
                    ]
                },
                {
                    "command": [
                        "assert (cauchy d y).",
                        "VernacExtend",
                        "f256ca87c1e5faac14ad767a383be9368872df31"
                    ]
                },
                {
                    "command": [
                        "apply convergent_sequence_is_cauchy with d_metric x; trivial.",
                        "VernacExtend",
                        "774cf020871a04b82d21524938fe30fabf14a695"
                    ]
                },
                {
                    "command": [
                        "assert (cauchy d_restriction y').",
                        "VernacExtend",
                        "f07b4275387607c46774ace62d5b5de9612e2b34"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (H3 eps H4) as [N].",
                        "VernacExtend",
                        "172422cdcac6285af723e89e9b11710cbb027a7c"
                    ]
                },
                {
                    "command": [
                        "exists N; intros.",
                        "VernacExtend",
                        "cfd63f1f7fafabc1d063c17632530a627ae99922"
                    ]
                },
                {
                    "command": [
                        "unfold d_restriction; unfold y'; simpl.",
                        "VernacExtend",
                        "0f1d23c70b94487fd69e1e87ddd45698a4d088fb"
                    ]
                },
                {
                    "command": [
                        "apply H5; trivial.",
                        "VernacExtend",
                        "22e53d109576f2be2d25dfc5bb6a48652de314af"
                    ]
                },
                {
                    "command": [
                        "destruct (H _ H4) as [[x0]].",
                        "VernacExtend",
                        "76d80e9a8d582ba7a71d1166b5bc2e9be3ec1aec"
                    ]
                },
                {
                    "command": [
                        "cut (net_limit y x0 (I:=nat_DS) (X:=MetricTopology d d_metric)).",
                        "VernacExtend",
                        "d48fc3dc11b9c5251de2516e7745ae8ed665ebe7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (x = x0).",
                        "VernacExtend",
                        "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
                    ]
                },
                {
                    "command": [
                        "assert (uniqueness (net_limit y (I:=nat_DS) (X:=MetricTopology d d_metric))).",
                        "VernacExtend",
                        "0ee425c610e32da96f16d30a48a36857cbd1e16b"
                    ]
                },
                {
                    "command": [
                        "apply Hausdorff_impl_net_limit_unique.",
                        "VernacExtend",
                        "9c87766010cf740f7bfa142f8ac4e89a6bb51ffb"
                    ]
                },
                {
                    "command": [
                        "apply T3_sep_impl_Hausdorff.",
                        "VernacExtend",
                        "fd27508b96d8a2739a2f922d0ae97941ad6b29bf"
                    ]
                },
                {
                    "command": [
                        "apply normal_sep_impl_T3_sep.",
                        "VernacExtend",
                        "db803794576b2f16507828aca26c30aed69f2d1e"
                    ]
                },
                {
                    "command": [
                        "apply metrizable_impl_normal_sep.",
                        "VernacExtend",
                        "f2369a45a019206597142e78a4ef6b999854f755"
                    ]
                },
                {
                    "command": [
                        "exists d; trivial.",
                        "VernacExtend",
                        "2db3418ba7860a1a5255a001a17aba6c41afdb66"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "apply H7; trivial.",
                        "VernacExtend",
                        "103d57ae4a42f27ed4952065755b829d37e6999c"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; trivial.",
                        "VernacExtend",
                        "1280b16392ee9891d94ee071838bac2ec6538975"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_net_limit with d.",
                        "VernacExtend",
                        "662c1c2f5e8f4876eb6b63225a72f85017b09554"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "exact (metric_space_net_limit_converse (MetricTopology d_restriction d_restriction_metric) d_restriction (MetricTopology_metrizable _ d_restriction d_restriction_metric) nat_DS y' (exist (fun x:X => In F x) x0 i) H5).",
                        "VernacExtend",
                        "70ca5ba6809601a8ab6f4d8d9fae35dfa3166278"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}