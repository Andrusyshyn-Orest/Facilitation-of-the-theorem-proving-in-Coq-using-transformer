{
    "filename": "CountabilityAxioms.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export TopologicalSpaces.",
            "VernacRequire",
            "45674cb36fa7313eb78e1518bfa113cb38c877af"
        ],
        [
            "From ZornsLemma Require Export CountableTypes.",
            "VernacRequire",
            "c8d7a8173718363aa625ff93b2bd68ef13788b21"
        ],
        [
            "Require Export NeighborhoodBases.",
            "VernacRequire",
            "559b13069846b1f95645b25bbd94b6a0d6dc0f8e"
        ],
        [
            "From ZornsLemma Require Import EnsemblesSpec.",
            "VernacRequire",
            "9211920b1b2aa46f1669f312088349d1f9f71de5"
        ],
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Definition first_countable (X:TopologicalSpace) : Prop := forall x:point_set X, exists NBx:Family (point_set X), neighborhood_basis NBx x /\\ Countable NBx.",
            "VernacDefinition",
            "1be51f1ee6abeaff159310e03bb400673ca0e095"
        ],
        [
            "Lemma first_countable_open_neighborhood_bases: forall X:TopologicalSpace, first_countable X -> forall x:point_set X, exists NBx:Family (point_set X), open_neighborhood_basis NBx x /\\ Countable NBx.",
            "VernacStartTheoremProof",
            "a0177c0a62165a3bac4935c13381616e79b13405"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (H x) as [NBx [? ?]].",
            "VernacExtend",
            "25fcd583a8ebc2f10f71f7a7b0832b5053051237"
        ],
        [
            "exists (@Im (Ensemble (point_set X)) (Ensemble (point_set X)) NBx (@interior X)).",
            "VernacExtend",
            "8f2a9022b24d7f28161a0722631045a3e80851f7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H2 as [U].",
            "VernacExtend",
            "e3aed2edaf4ea56159f37af90ee69a606a6d0a93"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite H3; apply interior_open.",
            "VernacExtend",
            "383e855209c99fa35bf17c10a4ef984cf26ab145"
        ],
        [
            "rewrite H3; apply neighborhood_interior.",
            "VernacExtend",
            "13f5c83e826919aa96a773490ceb9177ba479aec"
        ],
        [
            "apply H0; trivial.",
            "VernacExtend",
            "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct (neighborhood_basis_cond U) as [N].",
            "VernacExtend",
            "cdefbfa5e0de3102f7ea3d893d84a543610f149d"
        ],
        [
            "apply open_neighborhood_is_neighborhood; trivial.",
            "VernacExtend",
            "84fe02ab30f2a5ac9a29eaeb81e2be833a729755"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists (interior N).",
            "VernacExtend",
            "5433fd178db3064b6ca5b1df0d8db8347cec0d0d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists N; trivial.",
            "VernacExtend",
            "d98aa17d29323def8c757a89a7d0fe6cb73641ec"
        ],
        [
            "pose proof (interior_deflationary N).",
            "VernacExtend",
            "82263a5ed75b63e4ee51a2bc6d93c0a6359525d0"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "apply countable_img; trivial.",
            "VernacExtend",
            "7aa5822db6e7ea200b47388c2facb8a9d3d77521"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export Nets.",
            "VernacRequire",
            "a6b918574dda8654aa6d7442d998db2abf712dbc"
        ],
        [
            "Lemma first_countable_sequence_closure: forall (X:TopologicalSpace) (S:Ensemble (point_set X)) (x:point_set X), first_countable X -> In (closure S) x -> exists y:Net nat_DS X, (forall n:nat, In S (y n)) /\\ net_limit y x.",
            "VernacStartTheoremProof",
            "58832ba7ffe2a5553f572992e5c25db372200ed5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (first_countable_open_neighborhood_bases _ H x) as [NB []].",
            "VernacExtend",
            "44e742cd7e288563a7d6146afd76004beb8f32d6"
        ],
        [
            "destruct H2 as [g].",
            "VernacExtend",
            "a541dd7690b9e5e0d359502f9e9d0c53db8c6da9"
        ],
        [
            "pose (U (n:nat) := IndexedIntersection (fun x: {x:{x:Ensemble (point_set X) | In NB x} | (g x < n)%nat} => proj1_sig (proj1_sig x))).",
            "VernacExtend",
            "e830334b675b4ccf238e968db642599c36694785"
        ],
        [
            "assert (forall n:nat, open (U n)).",
            "VernacExtend",
            "82b888957202475c64f9468fe7639c2058871e22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply open_finite_indexed_intersection.",
            "VernacExtend",
            "a94cb386a7b5cab0ed86aa162a6680f186a7ae5c"
        ],
        [
            "apply inj_finite with _ (fun x:{x:{x:Ensemble (point_set X) | In NB x} | (g x < n)%nat} => exist (fun m:nat => (m<n)%nat) (g (proj1_sig x)) (proj2_sig x)).",
            "VernacExtend",
            "2fa1b52ed93a294d24af09a89156a2b8a6d3dd16"
        ],
        [
            "From ZornsLemma Require Import InfiniteTypes.",
            "VernacRequire",
            "444214f267b399f8db964ffb46285be311e31b71"
        ],
        [
            "apply finite_nat_initial_segment.",
            "VernacExtend",
            "2f7a4695947a83ed1e7d3a31a9a5e9f78197b93c"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros [[x0 P] p] [[y0 Q] q] ?.",
            "VernacExtend",
            "955891704b5d8a42ca8b997a7b218b0d58415f71"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "From ZornsLemma Require Import Proj1SigInjective.",
            "VernacRequire",
            "56b6143754293eea9757603c8bbb82454ab70eae"
        ],
        [
            "apply subset_eq_compatT.",
            "VernacExtend",
            "72d6dff2668a07406e5bfa7fb9efa3693089fc04"
        ],
        [
            "apply subset_eq_compatT.",
            "VernacExtend",
            "72d6dff2668a07406e5bfa7fb9efa3693089fc04"
        ],
        [
            "injection H3; intros.",
            "VernacExtend",
            "318ead1592429399da19c7bb7fd1873412cfeef4"
        ],
        [
            "apply H2 in H4.",
            "VernacExtend",
            "dc2ffcb7300dc92bfd6ac004a2c7264db7e9a590"
        ],
        [
            "injection H4; trivial.",
            "VernacExtend",
            "33c929c9898928e28ce6c1c3aace614537d554b3"
        ],
        [
            "intros; apply classic.",
            "VernacExtend",
            "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a as [[x0]].",
            "VernacExtend",
            "308fc593e71f727f3dab0898c7713dc8ae454d7a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Opaque In.",
            "VernacSetOpacity",
            "c43a741615899099c7aaa4429725c2ee6998a178"
        ],
        [
            "apply H1; trivial.",
            "VernacExtend",
            "0267d3710abb1665708a5614187c94d8c85243a1"
        ],
        [
            "Transparent In.",
            "VernacSetOpacity",
            "1926991f8b5442726ff8652662c923cfcda05fdf"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "destruct (choice (fun (n:nat) (x:point_set X) => In (U n) x /\\ In S x)) as [y].",
            "VernacExtend",
            "16bccd0048233a34e66be220a0492f75628d61b8"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "destruct (closure_impl_meets_every_open_neighborhood _ _ _ H0 (U n)) as [y]; trivial.",
            "VernacExtend",
            "83939d9b22736608df0d40bf1a77fae2ca034c99"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "destruct a as [[x0]].",
            "VernacExtend",
            "308fc593e71f727f3dab0898c7713dc8ae454d7a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H1; trivial.",
            "VernacExtend",
            "0267d3710abb1665708a5614187c94d8c85243a1"
        ],
        [
            "exists y; destruct H4; split; trivial.",
            "VernacExtend",
            "546104e3adfecb09d9c240c1f6fd140c3617a4e0"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "red; intros V ? ?.",
            "VernacExtend",
            "4a8afae64a73027314ed57f93058588a66918023"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct (open_neighborhood_basis_cond V) as [W []].",
            "VernacExtend",
            "025b77cffab694b8b8d11cf31e511ba997db7ef5"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "pose (a := (exist _ W H1 : {x:Ensemble (point_set X)|In NB x})).",
            "VernacExtend",
            "dfd5c893695cb963fa30749662c37aa87c4f665a"
        ],
        [
            "exists (Datatypes.S (g a)).",
            "VernacExtend",
            "3aa2fdd7c86a1cda4bb07df587716cd5fe2ca11c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in j.",
            "VernacExtend",
            "4303c1e101f94f6e94b6b90057a9e4a10585576f"
        ],
        [
            "simpl in H8.",
            "VernacExtend",
            "3ffa163638f0cd702536b03d79bee02d960b0fdb"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "assert (Included (U j) W).",
            "VernacExtend",
            "7d998186a3918d7c2d610d95e11c93d3fffeb041"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H9.",
            "VernacExtend",
            "a9684c4d50d2ab7d92e4173403512b5b52a9a3de"
        ],
        [
            "exact (H9 (exist _ a H8)).",
            "VernacExtend",
            "c20c0cefc061e9eee3795746272883fef72a9e58"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive separable (X:TopologicalSpace) : Prop := | intro_dense_ctbl: forall S:Ensemble (point_set X), Countable S -> dense S -> separable X.",
            "VernacInductive",
            "c7b5e432f211fe49c2bdf53cece479c3d36dc01c"
        ],
        [
            "Definition Lindelof (X:TopologicalSpace) : Prop := forall cover:Family (point_set X), (forall U:Ensemble (point_set X), In cover U -> open U) -> FamilyUnion cover = Full_set -> exists subcover:Family (point_set X), Included subcover cover /\\ Countable subcover /\\ FamilyUnion subcover = Full_set.",
            "VernacDefinition",
            "2cdbfef736c3d6da9900184485c1fd5044ddb253"
        ],
        [
            "Inductive second_countable (X:TopologicalSpace) : Prop := | intro_ctbl_basis: forall B:Family (point_set X), open_basis B -> Countable B -> second_countable X.",
            "VernacInductive",
            "ea988d5299981b86a6b4b2b55910be004b2332c8"
        ],
        [
            "Lemma second_countable_impl_first_countable: forall X:TopologicalSpace, second_countable X -> first_countable X.",
            "VernacStartTheoremProof",
            "ec7fb07235fa940624a0e5958d51bc47061ae865"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists [ U:Ensemble (point_set X) | In B U /\\ In U x ]; split.",
            "VernacExtend",
            "818522a396727c170badda40fb0c247b1dc193fe"
        ],
        [
            "apply open_neighborhood_basis_is_neighborhood_basis.",
            "VernacExtend",
            "c808ddb2f1448f10cc9f42c18336303d760739cd"
        ],
        [
            "apply open_basis_to_open_neighborhood_basis; trivial.",
            "VernacExtend",
            "fb0f7becbf8293e1869dd50c926038175ff27660"
        ],
        [
            "apply countable_downward_closed with B; trivial.",
            "VernacExtend",
            "9f4868aa14ec88cc2cac0947893dbb7869671c3b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H1 as [[? ?]]; trivial.",
            "VernacExtend",
            "765d32f4cfe724e73151d1dea6513c6385023d91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma second_countable_impl_separable: forall X:TopologicalSpace, second_countable X -> separable X.",
            "VernacStartTheoremProof",
            "f4f02b3ed0dbd06e3b10532f4c5651f857e7417a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "destruct (choice (fun (U:{U:Ensemble (point_set X) | In B U /\\ Inhabited U}) (x:point_set X) => In (proj1_sig U) x)) as [choice_fun].",
            "VernacExtend",
            "ecbfc468ec9a07a63bdcb7719cf5433415d21cc6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [U [? ?]].",
            "VernacExtend",
            "db49c9ee0ba6fec84f1023dfbfbe11e8cdb4836a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct i0.",
            "VernacExtend",
            "bcd75de4ce4db4fc036a1c5a9e84795d3aa45277"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "exists (Im Full_set choice_fun).",
            "VernacExtend",
            "83d0f75210e5c54d4f6cb429c3dcde52a7253e50"
        ],
        [
            "apply countable_img.",
            "VernacExtend",
            "ba951376899054f5ecd68bbef4fcc8f6b3a1c9b7"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "match goal with |- CountableT ?S => pose (g := fun (x:S) => match x return {U:Ensemble (point_set X) | In B U} with | exist (exist U (conj i _)) _ => exist _ U i end) end.",
            "VernacExtend",
            "b66ed8933d6651a3d1b1b9e3ec47feb3db30d3bb"
        ],
        [
            "apply inj_countable with g.",
            "VernacExtend",
            "737fc1062b13e49997ece796b6fdb60203ff18dd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "unfold g in H2.",
            "VernacExtend",
            "2cc87f958a9442bf8881fcbee5eb9b805d3cb5e2"
        ],
        [
            "destruct x1 as [[U [? ?]]].",
            "VernacExtend",
            "f160334247011a37aaa2bc244ddaf54dcafa277b"
        ],
        [
            "destruct x2 as [[V [? ?]]].",
            "VernacExtend",
            "3428bac1e8c3ee49bfc8a5393d2d69e370caa4d8"
        ],
        [
            "From ZornsLemma Require Import Proj1SigInjective.",
            "VernacRequire",
            "56b6143754293eea9757603c8bbb82454ab70eae"
        ],
        [
            "apply subset_eq_compatT.",
            "VernacExtend",
            "72d6dff2668a07406e5bfa7fb9efa3693089fc04"
        ],
        [
            "apply subset_eq_compatT.",
            "VernacExtend",
            "72d6dff2668a07406e5bfa7fb9efa3693089fc04"
        ],
        [
            "injection H2; trivial.",
            "VernacExtend",
            "6ca4b94272c0966592f9176bf09130db719feb41"
        ],
        [
            "apply meets_every_nonempty_open_impl_dense.",
            "VernacExtend",
            "cbc0dde144312530665f4aadc3bc06ed3dc7c6bc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct (open_basis_cover x U) as [V [? [? ?]]]; trivial.",
            "VernacExtend",
            "f102faaebf8dcad1505b12876521e231a7828775"
        ],
        [
            "assert (In B V /\\ Inhabited V).",
            "VernacExtend",
            "06e915b293fe0f50c95dbb7e901871a4ca3fc758"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "exists (choice_fun (exist _ V H6)).",
            "VernacExtend",
            "15234b2315a5e1b27b7088898ac6df6fbb598bf8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "pose proof (H1 (exist _ V H6)).",
            "VernacExtend",
            "0b3c6e3cfff21b5421974c4cd1cfea61f4593828"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "exists (exist (fun U0:Ensemble (point_set X) => In B U0 /\\ Inhabited U0) V H6).",
            "VernacExtend",
            "6cb050e375727cc82ba85719e009ab30ad3e950e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "pose proof (H1 (exist _ V H6)).",
            "VernacExtend",
            "0b3c6e3cfff21b5421974c4cd1cfea61f4593828"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma second_countable_impl_Lindelof: forall X:TopologicalSpace, second_countable X -> Lindelof X.",
            "VernacStartTheoremProof",
            "b06c17332386fe3e898e9b8079c1452e13fee3ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose (basis_elts_contained_in_cover_elt := [ U:Ensemble (point_set X) | In B U /\\ Inhabited U /\\ exists V:Ensemble (point_set X), In cover V /\\ Included U V ]).",
            "VernacExtend",
            "0752a6c2d809d6b77194ea84a5575a0ec8e04f34"
        ],
        [
            "destruct (choice (fun (U:{U | In basis_elts_contained_in_cover_elt U}) (V:Ensemble (point_set X)) => In cover V /\\ Included (proj1_sig U) V)) as [choice_fun].",
            "VernacExtend",
            "0424be922164c792e662813a7fd5d2d6e089ac37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct i as [[? [? ?]]].",
            "VernacExtend",
            "41e9e5737d75267b379ebe265a3b33e4593c7f8b"
        ],
        [
            "exact H5.",
            "VernacExtend",
            "18fc2617830570c5ea1fa0105d7f7d549eae296e"
        ],
        [
            "exists (Im Full_set choice_fun).",
            "VernacExtend",
            "83d0f75210e5c54d4f6cb429c3dcde52a7253e50"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct (H3 x).",
            "VernacExtend",
            "0ab65461a385e8de5cdc8611c1dba1476d54b703"
        ],
        [
            "rewrite H5; assumption.",
            "VernacExtend",
            "ece15c23501a4e4583989940bb8912019665b6c6"
        ],
        [
            "apply countable_img.",
            "VernacExtend",
            "ba951376899054f5ecd68bbef4fcc8f6b3a1c9b7"
        ],
        [
            "apply countable_type_ensemble.",
            "VernacExtend",
            "a2ff8251a4dc431f93cdf9c0dcddbacbcca98aca"
        ],
        [
            "apply countable_downward_closed with B; trivial.",
            "VernacExtend",
            "9f4868aa14ec88cc2cac0947893dbb7869671c3b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H4 as [[]].",
            "VernacExtend",
            "ddeaf8408c45698b61ccfe6557ea2802a49e4816"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Extensionality_Ensembles; red; split; red; intros.",
            "VernacExtend",
            "fdd3226506a8bd18f07da4af0e4d5cebd929ddfb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "clear H4.",
            "VernacExtend",
            "b63698fbba7b38f68086944744e776a2fb5bc886"
        ],
        [
            "assert (In (FamilyUnion cover) x).",
            "VernacExtend",
            "bf22fbd2f18238c7eb4ae08f6b7c3d26852fc29e"
        ],
        [
            "rewrite H2; constructor.",
            "VernacExtend",
            "2f2c0fbcbf006f7e53e7401c1d62da3099fe4efc"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct (open_basis_cover x S) as [V]; trivial.",
            "VernacExtend",
            "ea8d5656533192c78648e40bbbef6426004a7bd8"
        ],
        [
            "apply H1; trivial.",
            "VernacExtend",
            "0267d3710abb1665708a5614187c94d8c85243a1"
        ],
        [
            "destruct H as [? [? ?]].",
            "VernacExtend",
            "7b80d34d0c991fb27b92313d17ea8675f1173807"
        ],
        [
            "assert (In basis_elts_contained_in_cover_elt V).",
            "VernacExtend",
            "ada44c9c2b356d84142ab313b3ccd416833919db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "exists S; split; trivial.",
            "VernacExtend",
            "628bde738ae29a9852fbd119dd8c548f8fe1d75a"
        ],
        [
            "exists (choice_fun (exist _ V H8)).",
            "VernacExtend",
            "ac4e8d29998cfbe0b526c7b7075d714f305e3546"
        ],
        [
            "exists (exist _ V H8).",
            "VernacExtend",
            "d2590b9aa59fa8564b3d5d28862fa2ce9e48e384"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "pose proof (H3 (exist _ V H8)).",
            "VernacExtend",
            "dfdf9be06e61a889f28be6b8eefe043f94522c9f"
        ],
        [
            "destruct H9.",
            "VernacExtend",
            "a9684c4d50d2ab7d92e4173403512b5b52a9a3de"
        ],
        [
            "simpl in H10.",
            "VernacExtend",
            "6acaa2af25fff35ccd9e9f70e896f9c83855b8e6"
        ],
        [
            "apply H10; trivial.",
            "VernacExtend",
            "405cb66015fb4ef29a0264993751adab392d8a4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "first_countable_open_neighborhood_bases",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (H x) as [NBx [? ?]].",
                        "VernacExtend",
                        "25fcd583a8ebc2f10f71f7a7b0832b5053051237"
                    ]
                },
                {
                    "command": [
                        "exists (@Im (Ensemble (point_set X)) (Ensemble (point_set X)) NBx (@interior X)).",
                        "VernacExtend",
                        "8f2a9022b24d7f28161a0722631045a3e80851f7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [U].",
                        "VernacExtend",
                        "e3aed2edaf4ea56159f37af90ee69a606a6d0a93"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply interior_open.",
                        "VernacExtend",
                        "383e855209c99fa35bf17c10a4ef984cf26ab145"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply neighborhood_interior.",
                        "VernacExtend",
                        "13f5c83e826919aa96a773490ceb9177ba479aec"
                    ]
                },
                {
                    "command": [
                        "apply H0; trivial.",
                        "VernacExtend",
                        "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct (neighborhood_basis_cond U) as [N].",
                        "VernacExtend",
                        "cdefbfa5e0de3102f7ea3d893d84a543610f149d"
                    ]
                },
                {
                    "command": [
                        "apply open_neighborhood_is_neighborhood; trivial.",
                        "VernacExtend",
                        "84fe02ab30f2a5ac9a29eaeb81e2be833a729755"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "exists (interior N).",
                        "VernacExtend",
                        "5433fd178db3064b6ca5b1df0d8db8347cec0d0d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists N; trivial.",
                        "VernacExtend",
                        "d98aa17d29323def8c757a89a7d0fe6cb73641ec"
                    ]
                },
                {
                    "command": [
                        "pose proof (interior_deflationary N).",
                        "VernacExtend",
                        "82263a5ed75b63e4ee51a2bc6d93c0a6359525d0"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "apply countable_img; trivial.",
                        "VernacExtend",
                        "7aa5822db6e7ea200b47388c2facb8a9d3d77521"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "second_countable_impl_first_countable",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists [ U:Ensemble (point_set X) | In B U /\\ In U x ]; split.",
                        "VernacExtend",
                        "818522a396727c170badda40fb0c247b1dc193fe"
                    ]
                },
                {
                    "command": [
                        "apply open_neighborhood_basis_is_neighborhood_basis.",
                        "VernacExtend",
                        "c808ddb2f1448f10cc9f42c18336303d760739cd"
                    ]
                },
                {
                    "command": [
                        "apply open_basis_to_open_neighborhood_basis; trivial.",
                        "VernacExtend",
                        "fb0f7becbf8293e1869dd50c926038175ff27660"
                    ]
                },
                {
                    "command": [
                        "apply countable_downward_closed with B; trivial.",
                        "VernacExtend",
                        "9f4868aa14ec88cc2cac0947893dbb7869671c3b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [[? ?]]; trivial.",
                        "VernacExtend",
                        "765d32f4cfe724e73151d1dea6513c6385023d91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "second_countable_impl_Lindelof",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose (basis_elts_contained_in_cover_elt := [ U:Ensemble (point_set X) | In B U /\\ Inhabited U /\\ exists V:Ensemble (point_set X), In cover V /\\ Included U V ]).",
                        "VernacExtend",
                        "0752a6c2d809d6b77194ea84a5575a0ec8e04f34"
                    ]
                },
                {
                    "command": [
                        "destruct (choice (fun (U:{U | In basis_elts_contained_in_cover_elt U}) (V:Ensemble (point_set X)) => In cover V /\\ Included (proj1_sig U) V)) as [choice_fun].",
                        "VernacExtend",
                        "0424be922164c792e662813a7fd5d2d6e089ac37"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct i as [[? [? ?]]].",
                        "VernacExtend",
                        "41e9e5737d75267b379ebe265a3b33e4593c7f8b"
                    ]
                },
                {
                    "command": [
                        "exact H5.",
                        "VernacExtend",
                        "18fc2617830570c5ea1fa0105d7f7d549eae296e"
                    ]
                },
                {
                    "command": [
                        "exists (Im Full_set choice_fun).",
                        "VernacExtend",
                        "83d0f75210e5c54d4f6cb429c3dcde52a7253e50"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct (H3 x).",
                        "VernacExtend",
                        "0ab65461a385e8de5cdc8611c1dba1476d54b703"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; assumption.",
                        "VernacExtend",
                        "ece15c23501a4e4583989940bb8912019665b6c6"
                    ]
                },
                {
                    "command": [
                        "apply countable_img.",
                        "VernacExtend",
                        "ba951376899054f5ecd68bbef4fcc8f6b3a1c9b7"
                    ]
                },
                {
                    "command": [
                        "apply countable_type_ensemble.",
                        "VernacExtend",
                        "a2ff8251a4dc431f93cdf9c0dcddbacbcca98aca"
                    ]
                },
                {
                    "command": [
                        "apply countable_downward_closed with B; trivial.",
                        "VernacExtend",
                        "9f4868aa14ec88cc2cac0947893dbb7869671c3b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H4 as [[]].",
                        "VernacExtend",
                        "ddeaf8408c45698b61ccfe6557ea2802a49e4816"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; red; split; red; intros.",
                        "VernacExtend",
                        "fdd3226506a8bd18f07da4af0e4d5cebd929ddfb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "clear H4.",
                        "VernacExtend",
                        "b63698fbba7b38f68086944744e776a2fb5bc886"
                    ]
                },
                {
                    "command": [
                        "assert (In (FamilyUnion cover) x).",
                        "VernacExtend",
                        "bf22fbd2f18238c7eb4ae08f6b7c3d26852fc29e"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; constructor.",
                        "VernacExtend",
                        "2f2c0fbcbf006f7e53e7401c1d62da3099fe4efc"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct (open_basis_cover x S) as [V]; trivial.",
                        "VernacExtend",
                        "ea8d5656533192c78648e40bbbef6426004a7bd8"
                    ]
                },
                {
                    "command": [
                        "apply H1; trivial.",
                        "VernacExtend",
                        "0267d3710abb1665708a5614187c94d8c85243a1"
                    ]
                },
                {
                    "command": [
                        "destruct H as [? [? ?]].",
                        "VernacExtend",
                        "7b80d34d0c991fb27b92313d17ea8675f1173807"
                    ]
                },
                {
                    "command": [
                        "assert (In basis_elts_contained_in_cover_elt V).",
                        "VernacExtend",
                        "ada44c9c2b356d84142ab313b3ccd416833919db"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "exists x; trivial.",
                        "VernacExtend",
                        "7285f236ab8c1f67b4215a83948007459abd7ae6"
                    ]
                },
                {
                    "command": [
                        "exists S; split; trivial.",
                        "VernacExtend",
                        "628bde738ae29a9852fbd119dd8c548f8fe1d75a"
                    ]
                },
                {
                    "command": [
                        "exists (choice_fun (exist _ V H8)).",
                        "VernacExtend",
                        "ac4e8d29998cfbe0b526c7b7075d714f305e3546"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ V H8).",
                        "VernacExtend",
                        "d2590b9aa59fa8564b3d5d28862fa2ce9e48e384"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "pose proof (H3 (exist _ V H8)).",
                        "VernacExtend",
                        "dfdf9be06e61a889f28be6b8eefe043f94522c9f"
                    ]
                },
                {
                    "command": [
                        "destruct H9.",
                        "VernacExtend",
                        "a9684c4d50d2ab7d92e4173403512b5b52a9a3de"
                    ]
                },
                {
                    "command": [
                        "simpl in H10.",
                        "VernacExtend",
                        "6acaa2af25fff35ccd9e9f70e896f9c83855b8e6"
                    ]
                },
                {
                    "command": [
                        "apply H10; trivial.",
                        "VernacExtend",
                        "405cb66015fb4ef29a0264993751adab392d8a4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}