{
    "filename": "Nets.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export TopologicalSpaces.",
            "VernacRequire",
            "45674cb36fa7313eb78e1518bfa113cb38c877af"
        ],
        [
            "Require Export DirectedSets.",
            "VernacRequire",
            "9df920407323e0ba1b2be4942c8ff8a33bcb1b6b"
        ],
        [
            "Require Export InteriorsClosures.",
            "VernacRequire",
            "16f00644f9a5256c74678578991bf069105c6a7b"
        ],
        [
            "Require Export Continuity.",
            "VernacRequire",
            "c5c65013f9f5873d0ae338d98029a0ee56e80fb5"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Section Net.",
            "VernacBeginSection",
            "b82e8a85f6b15237c3c84235e0a9dc62dd65b6f4"
        ],
        [
            "Variable I:DirectedSet.",
            "VernacAssumption",
            "c165ae66c9ae7d8f1715857172d79b44ae5693ac"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Definition Net := DS_set I -> point_set X.",
            "VernacDefinition",
            "99c1c1fc0cdce66ee17d62d1f16ec7dffef80507"
        ],
        [
            "Definition net_limit (x:Net) (x0:point_set X) : Prop := forall U:Ensemble (point_set X), open U -> In U x0 -> for large i:DS_set I, In U (x i).",
            "VernacDefinition",
            "add20e971e9258e2583af1a51f382849178e268a"
        ],
        [
            "Definition net_cluster_point (x:Net) (x0:point_set X) : Prop := forall U:Ensemble (point_set X), open U -> In U x0 -> exists arbitrarily large i:DS_set I, In U (x i).",
            "VernacDefinition",
            "fa1ad895a4affafdfb5b71259b9ec817864525e5"
        ],
        [
            "Lemma net_limit_is_cluster_point: forall (x:Net) (x0:point_set X), net_limit x x0 -> net_cluster_point x x0.",
            "VernacStartTheoremProof",
            "315dae3707f4e8a0415ee78b86e6e84e72b41f40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose proof (H U H0 H1).",
            "VernacExtend",
            "600f897b09ffdf2368529012491c9431647aad51"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct (DS_join_cond i x1).",
            "VernacExtend",
            "2403d2f9ed78fa2da9febe9c80899d1f096cc878"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "exists x2; split; trivial.",
            "VernacExtend",
            "f16d70ebf2d0216e8fabbf693673bbabca9a46ea"
        ],
        [
            "apply H2; trivial.",
            "VernacExtend",
            "91036970bc344118009ef71eaf39ec9fc45e9ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_limit_in_closure: forall (S:Ensemble (point_set X)) (x:Net) (x0:point_set X), (exists arbitrarily large i:DS_set I, In S (x i)) -> net_limit x x0 -> In (closure S) x0.",
            "VernacStartTheoremProof",
            "40d73f1b806d29c6598d1cb1b51666007593df3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "pose proof (H0 (Complement (closure S))).",
            "VernacExtend",
            "97402c42a9ea43664ac1854b1ae8c3c8b75f4eac"
        ],
        [
            "match type of H2 with | ?A -> ?B -> ?C => assert (C) end.",
            "VernacExtend",
            "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply closure_closed.",
            "VernacExtend",
            "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "pose proof (H x1).",
            "VernacExtend",
            "8a2ef8758eb99ba989ad8ef4eb0d0f7c6d4bc680"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "contradiction (H3 x2).",
            "VernacExtend",
            "7ef2bd8ee10d2da78bbccc0ebfa3d59b6a09ce7a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply closure_inflationary; tauto.",
            "VernacExtend",
            "2e87097968f03f49b9db0000a919da13c630c260"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_cluster_point_in_closure: forall (S:Ensemble (point_set X)) (x:Net) (x0:point_set X), (for large i:DS_set I, In S (x i)) -> net_cluster_point x x0 -> In (closure S) x0.",
            "VernacStartTheoremProof",
            "765ed097e55bacc3850e2ef605059ae18d713bf1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "pose proof (H0 (Complement (closure S))).",
            "VernacExtend",
            "97402c42a9ea43664ac1854b1ae8c3c8b75f4eac"
        ],
        [
            "match type of H2 with | ?A -> ?B -> ?C => assert (C) end.",
            "VernacExtend",
            "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply closure_closed.",
            "VernacExtend",
            "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct (H3 x1).",
            "VernacExtend",
            "f1d327fdd5c989d001c1dcd795d13224a7846e47"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "contradiction H5.",
            "VernacExtend",
            "9391af834bf331ad2c1be2f6310c10ced385e172"
        ],
        [
            "apply closure_inflationary.",
            "VernacExtend",
            "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Net.",
            "VernacEndSegment",
            "602535d404eca93aa6bfe6108d56e68c04502bf5"
        ],
        [
            "Arguments net_limit {I} {X}.",
            "VernacArguments",
            "757269ae03b29e344f3b77f317629c521f148744"
        ],
        [
            "Arguments net_cluster_point {I} {X}.",
            "VernacArguments",
            "4fbf4cdf4fdf8abe7f461e78b75898f318fc47cf"
        ],
        [
            "Arguments net_limit_is_cluster_point {I} {X}.",
            "VernacArguments",
            "a9b5d1098234bc7e921636392f13a53a8830aeb2"
        ],
        [
            "Arguments net_limit_in_closure {I} {X}.",
            "VernacArguments",
            "afebe5aff89073e793de00c9522e6a1685c68645"
        ],
        [
            "Arguments net_cluster_point_in_closure {I} {X}.",
            "VernacArguments",
            "2d993f0d2ab4979829d5dd6d244284505a255a67"
        ],
        [
            "Section neighborhood_net.",
            "VernacBeginSection",
            "ddcb9eb70764df971d81e0b3fa2ffbd42284c523"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Variable x:point_set X.",
            "VernacAssumption",
            "c16ec3440139d8466a784c34ec0e96067d76b286"
        ],
        [
            "Inductive neighborhood_net_DS_set : Type := | intro_neighborhood_net_DS : forall (U:Ensemble (point_set X)) (y:point_set X), open U -> In U x -> In U y -> neighborhood_net_DS_set.",
            "VernacInductive",
            "920949fb5299c2e4faab25a79355ff0b750d3c2a"
        ],
        [
            "Definition neighborhood_net_DS_ord (Uy Vz:neighborhood_net_DS_set) : Prop := match Uy, Vz with | intro_neighborhood_net_DS U _ _ _ _, intro_neighborhood_net_DS V _ _ _ _ => Included V U end.",
            "VernacDefinition",
            "fded1a5c1a4d297237f47c33ef51752732adef3c"
        ],
        [
            "Definition neighborhood_net_DS : DirectedSet.",
            "VernacDefinition",
            "45b9c785eb4224ad72bf0a0c86d7f990d4e89cd2"
        ],
        [
            "refine (Build_DirectedSet neighborhood_net_DS_set neighborhood_net_DS_ord _ _).",
            "VernacExtend",
            "230acb6e900fe154366ccacb93a48dbcc69359db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x0.",
            "VernacExtend",
            "080771fa4796a8f8a5b665c53a861793a726da17"
        ],
        [
            "simpl; auto with sets.",
            "VernacExtend",
            "873d6a16f0159f9944403a35db8b3ca9c0269e58"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x0; destruct y; destruct z.",
            "VernacExtend",
            "cfca433805395a556b50f39e168ae6ba82861e4d"
        ],
        [
            "simpl in H; simpl in H0; simpl.",
            "VernacExtend",
            "dfd125032285cb4864b49bacabec3656dd4a4417"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct i; destruct j.",
            "VernacExtend",
            "5cc01b86bcd743d81ec090033175800b0c0c420b"
        ],
        [
            "assert (open (Intersection U U0)).",
            "VernacExtend",
            "0c5aabf114b7516dba740ee6ee9750518198a13a"
        ],
        [
            "apply open_intersection2; trivial.",
            "VernacExtend",
            "c16417c24c7acdc84b68ad28aa07f3972a70bda9"
        ],
        [
            "assert (In (Intersection U U0) x); auto with sets.",
            "VernacExtend",
            "ce3189a5f67f091b53884cc7e63e1054c070116f"
        ],
        [
            "exists (intro_neighborhood_net_DS (Intersection U U0) x H H0 H0).",
            "VernacExtend",
            "dd70077f3c3736d6bdb0dc15b147edfaf336d2c2"
        ],
        [
            "simpl; auto with sets.",
            "VernacExtend",
            "873d6a16f0159f9944403a35db8b3ca9c0269e58"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition neighborhood_net : Net neighborhood_net_DS X := fun (x:neighborhood_net_DS_set) => match x with | intro_neighborhood_net_DS _ y _ _ _ => y end.",
            "VernacDefinition",
            "06ed3b18306c504134c36e470ea992b8d6367a88"
        ],
        [
            "Lemma neighborhood_net_limit: net_limit neighborhood_net x.",
            "VernacStartTheoremProof",
            "4e568c9cc97d0b38865c46c3b662c866908cb849"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists (intro_neighborhood_net_DS U x H H0 H0).",
            "VernacExtend",
            "95e3789bbc33b4c85633a420e67ba7bb043b59e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j.",
            "VernacExtend",
            "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End neighborhood_net.",
            "VernacEndSegment",
            "d6aa56f4783da93bb2fbd122a90a9d8626b56932"
        ],
        [
            "Lemma net_limits_determine_topology: forall {X:TopologicalSpace} (S:Ensemble (point_set X)) (x0:point_set X), In (closure S) x0 -> exists I:DirectedSet, exists x:Net I X, (forall i:DS_set I, In S (x i)) /\\ net_limit x x0.",
            "VernacStartTheoremProof",
            "92ffbcd1c5eb65530f070b4d4a86cc79f5d18299"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall U:Ensemble (point_set X), open U -> In U x0 -> Inhabited (Intersection S U)).",
            "VernacExtend",
            "29837d2fc59b51844bbaae024dd61d0760e28a94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "assert (Included (closure S) (Complement U)).",
            "VernacExtend",
            "be6e6493253fdcf8d81c19f602620e986404b26c"
        ],
        [
            "apply closure_minimal.",
            "VernacExtend",
            "8eba030667155f654a845d7efee69d240a0eaa36"
        ],
        [
            "red; rewrite Complement_Complement; assumption.",
            "VernacExtend",
            "7b5d9e8a448407f16b3acce851c1f94e8803f609"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; red; red; intros.",
            "VernacExtend",
            "176252f8e067fc3332cb6557defcbebb342d6449"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "exists x; auto with sets.",
            "VernacExtend",
            "84de534c617ae30322cea69828c06843e5da7542"
        ],
        [
            "contradict H1.",
            "VernacExtend",
            "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "pose (Ssel := fun n:neighborhood_net_DS_set X x0 => match n with | intro_neighborhood_net_DS V y _ _ _ => (In S y) end).",
            "VernacExtend",
            "f24c810e5b4f50199d7d9c686610ca80268f9192"
        ],
        [
            "pose (our_DS_set := {n:neighborhood_net_DS_set X x0 | Ssel n}).",
            "VernacExtend",
            "bdbc2790975b5a79c2ad39b4ec7c3b219bcd22d6"
        ],
        [
            "pose (our_DS_ord := fun (n1 n2:our_DS_set) => neighborhood_net_DS_ord X x0 (proj1_sig n1) (proj1_sig n2)).",
            "VernacExtend",
            "5f9e092f4eb7955fe7a904b19fd1e1c7ef1c1158"
        ],
        [
            "assert (preorder our_DS_ord).",
            "VernacExtend",
            "b2a98daa0d1d4e1126e14098233990ee6709756c"
        ],
        [
            "constructor; red.",
            "VernacExtend",
            "5533ddcbd8e085fd5a7fd4082246836ab818c93a"
        ],
        [
            "intros; red.",
            "VernacExtend",
            "3393be941ed81b8e4a79e80db41d01425f14b126"
        ],
        [
            "apply preord_refl.",
            "VernacExtend",
            "2346cfc4a4882cb4fad8af2d0029e7424f261a46"
        ],
        [
            "apply (@DS_ord_cond (neighborhood_net_DS X x0)).",
            "VernacExtend",
            "8f6c87da86ed3ac97594edc2b7780f53c29f794d"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "unfold our_DS_ord; apply preord_trans.",
            "VernacExtend",
            "502f88228401dc996ac3187a88ddadcc34c967ae"
        ],
        [
            "apply (@DS_ord_cond (neighborhood_net_DS X x0)).",
            "VernacExtend",
            "8f6c87da86ed3ac97594edc2b7780f53c29f794d"
        ],
        [
            "assert (forall i j:our_DS_set, exists k:our_DS_set, our_DS_ord i k /\\ our_DS_ord j k).",
            "VernacExtend",
            "4a716e8a0a89f0357bd3c73d4651082ab61dfee9"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "destruct j.",
            "VernacExtend",
            "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "assert (open (Intersection U U0)).",
            "VernacExtend",
            "0c5aabf114b7516dba740ee6ee9750518198a13a"
        ],
        [
            "apply open_intersection2; trivial.",
            "VernacExtend",
            "c16417c24c7acdc84b68ad28aa07f3972a70bda9"
        ],
        [
            "assert (In (Intersection U U0) x0).",
            "VernacExtend",
            "95891bc209034f7a7c8c2f00e90d50d079ccc158"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "assert (Inhabited (Intersection S (Intersection U U0))).",
            "VernacExtend",
            "d945fb4b56fef4eb9beae374400e23cdf00b82b4"
        ],
        [
            "apply H0; trivial.",
            "VernacExtend",
            "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "pose (k0 := intro_neighborhood_net_DS X x0 (Intersection U U0) x H2 H3 H5).",
            "VernacExtend",
            "ef4dc4083156c087d65eb4016be301b058e73963"
        ],
        [
            "assert (Ssel k0).",
            "VernacExtend",
            "3d187dd1984e423ad537310748f9f08897c1e0d3"
        ],
        [
            "red; unfold k0; simpl.",
            "VernacExtend",
            "943625b27f2c921e6aed8829de81acb14a8875fb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists (exist _ k0 H6).",
            "VernacExtend",
            "39fc97f20af90e6a765ffcad0e4535f87d7f12c6"
        ],
        [
            "split; red; simpl; auto with sets.",
            "VernacExtend",
            "d18dd641d4a30d328ef01a1359c76c04b6a9f120"
        ],
        [
            "pose (our_DS := Build_DirectedSet our_DS_set our_DS_ord H1 H2).",
            "VernacExtend",
            "e432ef41ac83b00f2007e9d3888a39cdf17e2f7c"
        ],
        [
            "exists our_DS.",
            "VernacExtend",
            "4d2d285c678f866cee582c11ad0607937811acfb"
        ],
        [
            "exists (fun i:our_DS_set => neighborhood_net X x0 (proj1_sig i)).",
            "VernacExtend",
            "4076dd316e66eadcd8aa7133e9adee44fb3f6c7e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in s.",
            "VernacExtend",
            "ec9529ffc917caf6498792bc65f47c9bea38a23e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (Inhabited (Intersection S U)).",
            "VernacExtend",
            "463f62fea3355e02910313640d1f3e498d47e185"
        ],
        [
            "apply H0; trivial.",
            "VernacExtend",
            "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "pose (i0 := intro_neighborhood_net_DS X x0 U x H3 H4 H6).",
            "VernacExtend",
            "b92e87d560c7f50f10cdb8171bd77f935d4f694f"
        ],
        [
            "assert (Ssel i0).",
            "VernacExtend",
            "df045e9454899f8901659d2c79d6d6a064ea3aeb"
        ],
        [
            "simpl; assumption.",
            "VernacExtend",
            "b1f9ad3a64b2d320fc95a4fc7d31f60651bfdba6"
        ],
        [
            "exists (exist _ i0 H7).",
            "VernacExtend",
            "c0d853ce28204c4f76e0d9952e30a5e5de201beb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j.",
            "VernacExtend",
            "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
        ],
        [
            "destruct x1.",
            "VernacExtend",
            "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
        ],
        [
            "simpl in H8.",
            "VernacExtend",
            "3ffa163638f0cd702536b03d79bee02d960b0fdb"
        ],
        [
            "red in H8; simpl in H8.",
            "VernacExtend",
            "818e9ff272776e0ee91bc3927fad1b26834b60d8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Nets_and_continuity.",
            "VernacBeginSection",
            "e9841a2385a579aa4263de162e8903372358d8b2"
        ],
        [
            "Variable X Y:TopologicalSpace.",
            "VernacAssumption",
            "258bab42ca2ec1516cf9c44cfbd9f83a73e9ad02"
        ],
        [
            "Variable f:point_set X -> point_set Y.",
            "VernacAssumption",
            "2773994da9997abc31aa292d087798198c25c2f8"
        ],
        [
            "Lemma continuous_func_preserves_net_limits: forall {I:DirectedSet} (x:Net I X) (x0:point_set X), net_limit x x0 -> continuous_at f x0 -> net_limit (fun i:DS_set I => f (x i)) (f x0).",
            "VernacStartTheoremProof",
            "a8426ca179fbe4466975e65d7b8b5af5e286e34a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros V ? ?.",
            "VernacExtend",
            "4a8afae64a73027314ed57f93058588a66918023"
        ],
        [
            "assert (neighborhood V (f x0)).",
            "VernacExtend",
            "8f2ff7352820f4ca6e6700cac4eef6d701b89dbe"
        ],
        [
            "apply open_neighborhood_is_neighborhood; split; trivial.",
            "VernacExtend",
            "5079d66ff7e5c1e06bb75bdb68a6821e32c6eab2"
        ],
        [
            "pose proof (H0 V H3).",
            "VernacExtend",
            "020ddb8107a796a39a534e2880283fc8f6ee6b34"
        ],
        [
            "destruct H4 as [U [? ?]].",
            "VernacExtend",
            "8adab24d2bd72fa7a57ace286777c4eebc1990b3"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "pose proof (H U H4 H6).",
            "VernacExtend",
            "37458d02d19be2a7c6d538e1d23ea7147aeb2fba"
        ],
        [
            "apply eventually_impl_base with (fun i:DS_set I => In U (x i)); trivial.",
            "VernacExtend",
            "27b2b964c051f3cec9bc496430e6f8ff781140aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (In (inverse_image f V) (x i)); auto with sets.",
            "VernacExtend",
            "c1d76c4e74a5d5635e6d9b2862e0bbbe4ff9bcc5"
        ],
        [
            "destruct H9; trivial.",
            "VernacExtend",
            "6a29ad59dc1a9998256a37da9b33c8255d4d469a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma func_preserving_net_limits_is_continuous: forall x0:point_set X, (forall (I:DirectedSet) (x:Net I X), net_limit x x0 -> net_limit (fun i:DS_set I => f (x i)) (f x0)) -> continuous_at f x0.",
            "VernacStartTheoremProof",
            "1cb1299d49369cebbc4bf0a09a3e1dc1172494e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (H (neighborhood_net_DS X x0) (neighborhood_net X x0) (neighborhood_net_limit X x0)).",
            "VernacExtend",
            "ba9e902f91e9672573b53576d5492454b3e3c5da"
        ],
        [
            "apply continuous_at_open_neighborhoods; intros.",
            "VernacExtend",
            "6414afabf7024bed8e8bfd5452d5e949f2b260e5"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose proof (H0 V H1 H2).",
            "VernacExtend",
            "3205744e1f01c081718da870f2ae15f90e09d2d4"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "destruct x as [U].",
            "VernacExtend",
            "e06a0a85ec4a7ff82a30ebdc2bde478dcd9d9851"
        ],
        [
            "exists U; repeat split; trivial.",
            "VernacExtend",
            "40a11cf54b5d47df15f715cb47232b54b792b2aa"
        ],
        [
            "pose proof (H3 (intro_neighborhood_net_DS X x0 U x o i H4)).",
            "VernacExtend",
            "a016ae655e9b47c2588c0e62ca9dc200c634680e"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "simpl; auto with sets.",
            "VernacExtend",
            "873d6a16f0159f9944403a35db8b3ca9c0269e58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Nets_and_continuity.",
            "VernacEndSegment",
            "1fdcac1649239968dc396edf9bbdcc4480f901aa"
        ],
        [
            "Section Subnet.",
            "VernacBeginSection",
            "c4d409cd9562d0352d369b967d2c1ff235187afd"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Variable I:DirectedSet.",
            "VernacAssumption",
            "c165ae66c9ae7d8f1715857172d79b44ae5693ac"
        ],
        [
            "Variable x:Net I X.",
            "VernacAssumption",
            "62c632a8b7dbddc9fe6ee6eea6a4303b0d0e2c8e"
        ],
        [
            "Inductive Subnet {J:DirectedSet} : Net J X -> Prop := | intro_subnet: forall h:DS_set J -> DS_set I, (forall j1 j2:DS_set J, DS_ord j1 j2 -> DS_ord (h j1) (h j2)) -> (exists arbitrarily large i:DS_set I, exists j:DS_set J, h j = i) -> Subnet (fun j:DS_set J => x (h j)).",
            "VernacInductive",
            "e74c13cc53ab2729941e915ca79f89c428ab8eac"
        ],
        [
            "Lemma subnet_limit: forall (x0:point_set X) {J:DirectedSet} (y:Net J X), net_limit x x0 -> Subnet y -> net_limit y x0.",
            "VernacStartTheoremProof",
            "f7e14931363b71832b9f2340cce891f8a57324ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose proof (H U H2 H3).",
            "VernacExtend",
            "2cce32b6526832443d6e1d7c5ee13b3e8e743484"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct (H1 x1).",
            "VernacExtend",
            "980826a46c2cbd11715f81ff7450777275d3c9f4"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "exists x3.",
            "VernacExtend",
            "fdf676e105ec13f635c8882c91b4fdae5ec87366"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply preord_trans with x2.",
            "VernacExtend",
            "c6f3ab55ec0ed09bb24760d2ef0a71741f67e464"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subnet_cluster_point: forall (x0:point_set X) {J:DirectedSet} (y:Net J X), net_cluster_point y x0 -> Subnet y -> net_cluster_point x x0.",
            "VernacStartTheoremProof",
            "aeba07d495829632fb6e30cef89625590a8c113a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [h h_increasing h_dominant].",
            "VernacExtend",
            "70113be767d66d71aae2aa74d31accd3ace36ed4"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose proof (h_dominant i).",
            "VernacExtend",
            "3ba195635441908d686907bbfd74458e64fb7fce"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "pose proof (H U H0 H1 x2).",
            "VernacExtend",
            "2604f6bf15eec91c33a072c8294419e7d809f460"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "exists (h x3).",
            "VernacExtend",
            "516c75ef70b1348c58c09d6bf073efd189a15e20"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply preord_trans with x1.",
            "VernacExtend",
            "5d10cc5a998a1448c7c105ed507f688bd60c38ff"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "apply h_increasing; assumption.",
            "VernacExtend",
            "dc10776ef93e1fdbec475c25d10c089afafe4dbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section cluster_point_subnet.",
            "VernacBeginSection",
            "6c67cb4a8bb68e8bc2b0e13a6eb1771ce4c946a0"
        ],
        [
            "Variable x0:point_set X.",
            "VernacAssumption",
            "a9b3917ea221e3f91e2b0aef5292b10f313120f5"
        ],
        [
            "Hypothesis x0_cluster_point: net_cluster_point x x0.",
            "VernacAssumption",
            "8f6721e832fe3a09a631fd3eb83e22d42228fa74"
        ],
        [
            "Hypothesis I_nonempty: inhabited (DS_set I).",
            "VernacAssumption",
            "74bd7d23a524d09e428809082dd84b8b25ae5a7b"
        ],
        [
            "Record cluster_point_subnet_DS_set : Type := { cps_i:DS_set I; cps_U:Ensemble (point_set X); cps_U_open_neigh: open_neighborhood cps_U x0; cps_xi_in_U: In cps_U (x cps_i) }.",
            "VernacInductive",
            "58709e0ccf644a8a60b7b1810196abddb597cb44"
        ],
        [
            "Definition cluster_point_subnet_DS_ord (iU1 iU2 : cluster_point_subnet_DS_set) : Prop := DS_ord (cps_i iU1) (cps_i iU2) /\\ Included (cps_U iU2) (cps_U iU1).",
            "VernacDefinition",
            "8d4da6c1d07ba097600452359d75368593899c1f"
        ],
        [
            "Definition cluster_point_subnet_DS : DirectedSet.",
            "VernacDefinition",
            "90bacee61da8bf8f88261655dbaf80ef4306bae0"
        ],
        [
            "refine (Build_DirectedSet cluster_point_subnet_DS_set cluster_point_subnet_DS_ord _ _).",
            "VernacExtend",
            "f7916631c2cd6df37b161d25ebde51caacbff81b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "red; intros; split; auto with sets.",
            "VernacExtend",
            "53fe7f254eff5a31174644d52508925b7b95bac1"
        ],
        [
            "apply preord_refl.",
            "VernacExtend",
            "2346cfc4a4882cb4fad8af2d0029e7424f261a46"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H; destruct H0.",
            "VernacExtend",
            "38ce24e768d236828eb7ecf6275c249693553750"
        ],
        [
            "red; split; auto with sets.",
            "VernacExtend",
            "9cb56462c2fcbfcfc8abadefd90bf3c0bf4cfe59"
        ],
        [
            "apply preord_trans with (cps_i y); trivial.",
            "VernacExtend",
            "130067cc48c3d666e19a59793e62f5b1bd99dde7"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct i as [i0 U0 ? ?]; destruct j as [i1 U1 ? ?].",
            "VernacExtend",
            "2f06679110258b22f2080e834afd955808735ee1"
        ],
        [
            "destruct (DS_join_cond i0 i1).",
            "VernacExtend",
            "44593f1390ffab54062182b7c4e412a5ed408812"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "pose proof (x0_cluster_point (Intersection U0 U1)).",
            "VernacExtend",
            "4d0b989dc772075f15a8481e8db9577a9bb69fff"
        ],
        [
            "match type of H1 with | _ -> _ -> ?C => assert C end.",
            "VernacExtend",
            "5bfc09fbeb0058ac174403fe33c00c4f7b5551e4"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply open_intersection2; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
            "VernacExtend",
            "7a8caf3ecfcaa7cff6f5be417f542707af347aeb"
        ],
        [
            "constructor; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
            "VernacExtend",
            "19f0d33710ba17a86d09bce88a34896e65e214f9"
        ],
        [
            "destruct (H2 x1).",
            "VernacExtend",
            "8978df36fb8b2733a3ea8803beecb16be99beb3b"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "pose (ki := x2).",
            "VernacExtend",
            "f586fc7e2e7b18bee5d9ead86c4be421721d7a5f"
        ],
        [
            "pose (kU := Intersection U0 U1).",
            "VernacExtend",
            "35c2e133ff9c443dac023d621a9d0dfc8607e106"
        ],
        [
            "assert (open_neighborhood kU x0).",
            "VernacExtend",
            "096d85cdae18d969770f49746c75e1c9ae9ffe8a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply open_intersection2.",
            "VernacExtend",
            "c6082e9109ebbc0ad1374f079c698b49a64c6083"
        ],
        [
            "apply cps_U_open_neigh0.",
            "VernacExtend",
            "b3d93f09e28b17d7e0d7bfea5e77b1c662399760"
        ],
        [
            "apply cps_U_open_neigh1.",
            "VernacExtend",
            "71a37df4bb4c07346d3eb6c029b753dd5dfebf26"
        ],
        [
            "constructor; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
            "VernacExtend",
            "19f0d33710ba17a86d09bce88a34896e65e214f9"
        ],
        [
            "assert (In kU (x ki)).",
            "VernacExtend",
            "10874afa8ea569c9065edd17cf3c3f7f534f5fdc"
        ],
        [
            "exact H4.",
            "VernacExtend",
            "861b0a8cbc78b24a3c2c92390110f650f7a9aa8d"
        ],
        [
            "exists (Build_cluster_point_subnet_DS_set ki kU H5 H6).",
            "VernacExtend",
            "19ccaf7af8b71af2bfcc146913d3eb10a0ebd7b4"
        ],
        [
            "split; red; simpl; split.",
            "VernacExtend",
            "44c7588c48fed15afe7183e6485cbb291a86ca71"
        ],
        [
            "apply preord_trans with x1; trivial.",
            "VernacExtend",
            "f599848d407040a852ad632eab4c3d544e196622"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H7; trivial.",
            "VernacExtend",
            "109497877204277122d59ad24784245f6fd75eb1"
        ],
        [
            "apply preord_trans with x1; trivial.",
            "VernacExtend",
            "f599848d407040a852ad632eab4c3d544e196622"
        ],
        [
            "apply DS_ord_cond.",
            "VernacExtend",
            "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H7; trivial.",
            "VernacExtend",
            "109497877204277122d59ad24784245f6fd75eb1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition cluster_point_subnet : Net cluster_point_subnet_DS X := fun (iU:DS_set cluster_point_subnet_DS) => x (cps_i iU).",
            "VernacDefinition",
            "77214cbafd8a4c693f2a39cf3b63796249afdda0"
        ],
        [
            "Lemma cluster_point_subnet_is_subnet: Subnet cluster_point_subnet.",
            "VernacStartTheoremProof",
            "10a66e603a2e2e6031aeaed42c59b8ea6203de61"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j1; destruct j2.",
            "VernacExtend",
            "963854cdbb06da07960e5c3a0636befb17d4251e"
        ],
        [
            "simpl in H; simpl.",
            "VernacExtend",
            "d3da8c062a72e8e7d902ef704809403c33de7a3d"
        ],
        [
            "red in H; tauto.",
            "VernacExtend",
            "bb9fcace28103f1be5538d3bfa1b7b68997c9eaf"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists i; split.",
            "VernacExtend",
            "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
        ],
        [
            "apply preord_refl; apply DS_ord_cond.",
            "VernacExtend",
            "f11ffa145626c9ea3adaace2667a13c5b04ef92c"
        ],
        [
            "assert (open_neighborhood Full_set x0).",
            "VernacExtend",
            "353d2445731fe980447c908d39e0949a586b6028"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply open_full.",
            "VernacExtend",
            "f900ff977cf6905b0471287a8924982fbf2a3e0b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (In Full_set (x i)).",
            "VernacExtend",
            "2a1a3e8c50049dcec7b2d5af4876cf8d2cd0ede8"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists (Build_cluster_point_subnet_DS_set i Full_set H H0).",
            "VernacExtend",
            "39bec6fb777c60123f8a2b90f022c34e48c20794"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cluster_point_subnet_converges: net_limit cluster_point_subnet x0.",
            "VernacStartTheoremProof",
            "4462364b34ab5d81a7d55eb7fa1e99d14198068d"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct I_nonempty as [i0].",
            "VernacExtend",
            "7e9e04a4f99ff1338aeb28cbd2ce8d8257f11b3b"
        ],
        [
            "destruct (x0_cluster_point U H H0 i0).",
            "VernacExtend",
            "614c5dc9b171604456bef1b1f5b5e9926b9ce6df"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "assert (open_neighborhood U x0).",
            "VernacExtend",
            "0f598c088afb3af49cc69ac5583c1bd1e53cc78f"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "exists (Build_cluster_point_subnet_DS_set x1 U H3 H2).",
            "VernacExtend",
            "ea45276c6f8c68ca65b9f50c11b8715f245e0f7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct j.",
            "VernacExtend",
            "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
        ],
        [
            "red in H4; simpl in H4.",
            "VernacExtend",
            "023124be126bfac9db82f1f1bf641aa8159bc1bb"
        ],
        [
            "red in H4; simpl in H4.",
            "VernacExtend",
            "023124be126bfac9db82f1f1bf641aa8159bc1bb"
        ],
        [
            "unfold cluster_point_subnet; simpl.",
            "VernacExtend",
            "f46922ce634bcb4aba940c25e009c8cc199af185"
        ],
        [
            "destruct H4; auto with sets.",
            "VernacExtend",
            "dd3ee848769e8fd3ef806006a43c6ef2cb1bb121"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_cluster_point_impl_subnet_converges: exists J:DirectedSet, exists y:Net J X, Subnet y /\\ net_limit y x0.",
            "VernacStartTheoremProof",
            "a2d2cad9cb0a5634d5fa0cead14fb7a1576c6172"
        ],
        [
            "exists cluster_point_subnet_DS.",
            "VernacExtend",
            "38cecced291c839c120a286f76104b160033cbed"
        ],
        [
            "exists cluster_point_subnet.",
            "VernacExtend",
            "7b0e430081041af2e35e1b047856cbad231dc63c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact cluster_point_subnet_is_subnet.",
            "VernacExtend",
            "7451366e91d5bdf12375ef7c4ab4ba0946420b22"
        ],
        [
            "exact cluster_point_subnet_converges.",
            "VernacExtend",
            "abf5090cc50df7f17a60b8f060ef89bf4b274282"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End cluster_point_subnet.",
            "VernacEndSegment",
            "12f1c834b21eae1cdd7dd79c67106bd474024f97"
        ],
        [
            "End Subnet.",
            "VernacEndSegment",
            "a4a41a712865cd8958ee14c2ed1f4d004224f284"
        ]
    ],
    "proofs": [
        {
            "name": "net_limit_is_cluster_point",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose proof (H U H0 H1).",
                        "VernacExtend",
                        "600f897b09ffdf2368529012491c9431647aad51"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct (DS_join_cond i x1).",
                        "VernacExtend",
                        "2403d2f9ed78fa2da9febe9c80899d1f096cc878"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "exists x2; split; trivial.",
                        "VernacExtend",
                        "f16d70ebf2d0216e8fabbf693673bbabca9a46ea"
                    ]
                },
                {
                    "command": [
                        "apply H2; trivial.",
                        "VernacExtend",
                        "91036970bc344118009ef71eaf39ec9fc45e9ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_limit_in_closure",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 (Complement (closure S))).",
                        "VernacExtend",
                        "97402c42a9ea43664ac1854b1ae8c3c8b75f4eac"
                    ]
                },
                {
                    "command": [
                        "match type of H2 with | ?A -> ?B -> ?C => assert (C) end.",
                        "VernacExtend",
                        "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply closure_closed.",
                        "VernacExtend",
                        "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "pose proof (H x1).",
                        "VernacExtend",
                        "8a2ef8758eb99ba989ad8ef4eb0d0f7c6d4bc680"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "contradiction (H3 x2).",
                        "VernacExtend",
                        "7ef2bd8ee10d2da78bbccc0ebfa3d59b6a09ce7a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply closure_inflationary; tauto.",
                        "VernacExtend",
                        "2e87097968f03f49b9db0000a919da13c630c260"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_cluster_point_in_closure",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 (Complement (closure S))).",
                        "VernacExtend",
                        "97402c42a9ea43664ac1854b1ae8c3c8b75f4eac"
                    ]
                },
                {
                    "command": [
                        "match type of H2 with | ?A -> ?B -> ?C => assert (C) end.",
                        "VernacExtend",
                        "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply closure_closed.",
                        "VernacExtend",
                        "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct (H3 x1).",
                        "VernacExtend",
                        "f1d327fdd5c989d001c1dcd795d13224a7846e47"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "contradiction H5.",
                        "VernacExtend",
                        "9391af834bf331ad2c1be2f6310c10ced385e172"
                    ]
                },
                {
                    "command": [
                        "apply closure_inflationary.",
                        "VernacExtend",
                        "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
                    ]
                },
                {
                    "command": [
                        "apply H; trivial.",
                        "VernacExtend",
                        "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neighborhood_net_DS",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "refine (Build_DirectedSet neighborhood_net_DS_set neighborhood_net_DS_ord _ _).",
                        "VernacExtend",
                        "230acb6e900fe154366ccacb93a48dbcc69359db"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x0.",
                        "VernacExtend",
                        "080771fa4796a8f8a5b665c53a861793a726da17"
                    ]
                },
                {
                    "command": [
                        "simpl; auto with sets.",
                        "VernacExtend",
                        "873d6a16f0159f9944403a35db8b3ca9c0269e58"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x0; destruct y; destruct z.",
                        "VernacExtend",
                        "cfca433805395a556b50f39e168ae6ba82861e4d"
                    ]
                },
                {
                    "command": [
                        "simpl in H; simpl in H0; simpl.",
                        "VernacExtend",
                        "dfd125032285cb4864b49bacabec3656dd4a4417"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct i; destruct j.",
                        "VernacExtend",
                        "5cc01b86bcd743d81ec090033175800b0c0c420b"
                    ]
                },
                {
                    "command": [
                        "assert (open (Intersection U U0)).",
                        "VernacExtend",
                        "0c5aabf114b7516dba740ee6ee9750518198a13a"
                    ]
                },
                {
                    "command": [
                        "apply open_intersection2; trivial.",
                        "VernacExtend",
                        "c16417c24c7acdc84b68ad28aa07f3972a70bda9"
                    ]
                },
                {
                    "command": [
                        "assert (In (Intersection U U0) x); auto with sets.",
                        "VernacExtend",
                        "ce3189a5f67f091b53884cc7e63e1054c070116f"
                    ]
                },
                {
                    "command": [
                        "exists (intro_neighborhood_net_DS (Intersection U U0) x H H0 H0).",
                        "VernacExtend",
                        "dd70077f3c3736d6bdb0dc15b147edfaf336d2c2"
                    ]
                },
                {
                    "command": [
                        "simpl; auto with sets.",
                        "VernacExtend",
                        "873d6a16f0159f9944403a35db8b3ca9c0269e58"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "neighborhood_net_limit",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists (intro_neighborhood_net_DS U x H H0 H0).",
                        "VernacExtend",
                        "95e3789bbc33b4c85633a420e67ba7bb043b59e6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j.",
                        "VernacExtend",
                        "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_limits_determine_topology",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall U:Ensemble (point_set X), open U -> In U x0 -> Inhabited (Intersection S U)).",
                        "VernacExtend",
                        "29837d2fc59b51844bbaae024dd61d0760e28a94"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "assert (Included (closure S) (Complement U)).",
                        "VernacExtend",
                        "be6e6493253fdcf8d81c19f602620e986404b26c"
                    ]
                },
                {
                    "command": [
                        "apply closure_minimal.",
                        "VernacExtend",
                        "8eba030667155f654a845d7efee69d240a0eaa36"
                    ]
                },
                {
                    "command": [
                        "red; rewrite Complement_Complement; assumption.",
                        "VernacExtend",
                        "7b5d9e8a448407f16b3acce851c1f94e8803f609"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "red; red; red; intros.",
                        "VernacExtend",
                        "176252f8e067fc3332cb6557defcbebb342d6449"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "exists x; auto with sets.",
                        "VernacExtend",
                        "84de534c617ae30322cea69828c06843e5da7542"
                    ]
                },
                {
                    "command": [
                        "contradict H1.",
                        "VernacExtend",
                        "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "pose (Ssel := fun n:neighborhood_net_DS_set X x0 => match n with | intro_neighborhood_net_DS V y _ _ _ => (In S y) end).",
                        "VernacExtend",
                        "f24c810e5b4f50199d7d9c686610ca80268f9192"
                    ]
                },
                {
                    "command": [
                        "pose (our_DS_set := {n:neighborhood_net_DS_set X x0 | Ssel n}).",
                        "VernacExtend",
                        "bdbc2790975b5a79c2ad39b4ec7c3b219bcd22d6"
                    ]
                },
                {
                    "command": [
                        "pose (our_DS_ord := fun (n1 n2:our_DS_set) => neighborhood_net_DS_ord X x0 (proj1_sig n1) (proj1_sig n2)).",
                        "VernacExtend",
                        "5f9e092f4eb7955fe7a904b19fd1e1c7ef1c1158"
                    ]
                },
                {
                    "command": [
                        "assert (preorder our_DS_ord).",
                        "VernacExtend",
                        "b2a98daa0d1d4e1126e14098233990ee6709756c"
                    ]
                },
                {
                    "command": [
                        "constructor; red.",
                        "VernacExtend",
                        "5533ddcbd8e085fd5a7fd4082246836ab818c93a"
                    ]
                },
                {
                    "command": [
                        "intros; red.",
                        "VernacExtend",
                        "3393be941ed81b8e4a79e80db41d01425f14b126"
                    ]
                },
                {
                    "command": [
                        "apply preord_refl.",
                        "VernacExtend",
                        "2346cfc4a4882cb4fad8af2d0029e7424f261a46"
                    ]
                },
                {
                    "command": [
                        "apply (@DS_ord_cond (neighborhood_net_DS X x0)).",
                        "VernacExtend",
                        "8f6c87da86ed3ac97594edc2b7780f53c29f794d"
                    ]
                },
                {
                    "command": [
                        "intros x y z.",
                        "VernacExtend",
                        "8357c7ce661033f932c65582aab008de3b5d8530"
                    ]
                },
                {
                    "command": [
                        "unfold our_DS_ord; apply preord_trans.",
                        "VernacExtend",
                        "502f88228401dc996ac3187a88ddadcc34c967ae"
                    ]
                },
                {
                    "command": [
                        "apply (@DS_ord_cond (neighborhood_net_DS X x0)).",
                        "VernacExtend",
                        "8f6c87da86ed3ac97594edc2b7780f53c29f794d"
                    ]
                },
                {
                    "command": [
                        "assert (forall i j:our_DS_set, exists k:our_DS_set, our_DS_ord i k /\\ our_DS_ord j k).",
                        "VernacExtend",
                        "4a716e8a0a89f0357bd3c73d4651082ab61dfee9"
                    ]
                },
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "destruct j.",
                        "VernacExtend",
                        "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "assert (open (Intersection U U0)).",
                        "VernacExtend",
                        "0c5aabf114b7516dba740ee6ee9750518198a13a"
                    ]
                },
                {
                    "command": [
                        "apply open_intersection2; trivial.",
                        "VernacExtend",
                        "c16417c24c7acdc84b68ad28aa07f3972a70bda9"
                    ]
                },
                {
                    "command": [
                        "assert (In (Intersection U U0) x0).",
                        "VernacExtend",
                        "95891bc209034f7a7c8c2f00e90d50d079ccc158"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "assert (Inhabited (Intersection S (Intersection U U0))).",
                        "VernacExtend",
                        "d945fb4b56fef4eb9beae374400e23cdf00b82b4"
                    ]
                },
                {
                    "command": [
                        "apply H0; trivial.",
                        "VernacExtend",
                        "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "pose (k0 := intro_neighborhood_net_DS X x0 (Intersection U U0) x H2 H3 H5).",
                        "VernacExtend",
                        "ef4dc4083156c087d65eb4016be301b058e73963"
                    ]
                },
                {
                    "command": [
                        "assert (Ssel k0).",
                        "VernacExtend",
                        "3d187dd1984e423ad537310748f9f08897c1e0d3"
                    ]
                },
                {
                    "command": [
                        "red; unfold k0; simpl.",
                        "VernacExtend",
                        "943625b27f2c921e6aed8829de81acb14a8875fb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ k0 H6).",
                        "VernacExtend",
                        "39fc97f20af90e6a765ffcad0e4535f87d7f12c6"
                    ]
                },
                {
                    "command": [
                        "split; red; simpl; auto with sets.",
                        "VernacExtend",
                        "d18dd641d4a30d328ef01a1359c76c04b6a9f120"
                    ]
                },
                {
                    "command": [
                        "pose (our_DS := Build_DirectedSet our_DS_set our_DS_ord H1 H2).",
                        "VernacExtend",
                        "e432ef41ac83b00f2007e9d3888a39cdf17e2f7c"
                    ]
                },
                {
                    "command": [
                        "exists our_DS.",
                        "VernacExtend",
                        "4d2d285c678f866cee582c11ad0607937811acfb"
                    ]
                },
                {
                    "command": [
                        "exists (fun i:our_DS_set => neighborhood_net X x0 (proj1_sig i)).",
                        "VernacExtend",
                        "4076dd316e66eadcd8aa7133e9adee44fb3f6c7e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in s.",
                        "VernacExtend",
                        "ec9529ffc917caf6498792bc65f47c9bea38a23e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (Inhabited (Intersection S U)).",
                        "VernacExtend",
                        "463f62fea3355e02910313640d1f3e498d47e185"
                    ]
                },
                {
                    "command": [
                        "apply H0; trivial.",
                        "VernacExtend",
                        "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "pose (i0 := intro_neighborhood_net_DS X x0 U x H3 H4 H6).",
                        "VernacExtend",
                        "b92e87d560c7f50f10cdb8171bd77f935d4f694f"
                    ]
                },
                {
                    "command": [
                        "assert (Ssel i0).",
                        "VernacExtend",
                        "df045e9454899f8901659d2c79d6d6a064ea3aeb"
                    ]
                },
                {
                    "command": [
                        "simpl; assumption.",
                        "VernacExtend",
                        "b1f9ad3a64b2d320fc95a4fc7d31f60651bfdba6"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ i0 H7).",
                        "VernacExtend",
                        "c0d853ce28204c4f76e0d9952e30a5e5de201beb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j.",
                        "VernacExtend",
                        "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
                    ]
                },
                {
                    "command": [
                        "destruct x1.",
                        "VernacExtend",
                        "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
                    ]
                },
                {
                    "command": [
                        "simpl in H8.",
                        "VernacExtend",
                        "3ffa163638f0cd702536b03d79bee02d960b0fdb"
                    ]
                },
                {
                    "command": [
                        "red in H8; simpl in H8.",
                        "VernacExtend",
                        "818e9ff272776e0ee91bc3927fad1b26834b60d8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_func_preserves_net_limits",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros V ? ?.",
                        "VernacExtend",
                        "4a8afae64a73027314ed57f93058588a66918023"
                    ]
                },
                {
                    "command": [
                        "assert (neighborhood V (f x0)).",
                        "VernacExtend",
                        "8f2ff7352820f4ca6e6700cac4eef6d701b89dbe"
                    ]
                },
                {
                    "command": [
                        "apply open_neighborhood_is_neighborhood; split; trivial.",
                        "VernacExtend",
                        "5079d66ff7e5c1e06bb75bdb68a6821e32c6eab2"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 V H3).",
                        "VernacExtend",
                        "020ddb8107a796a39a534e2880283fc8f6ee6b34"
                    ]
                },
                {
                    "command": [
                        "destruct H4 as [U [? ?]].",
                        "VernacExtend",
                        "8adab24d2bd72fa7a57ace286777c4eebc1990b3"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "pose proof (H U H4 H6).",
                        "VernacExtend",
                        "37458d02d19be2a7c6d538e1d23ea7147aeb2fba"
                    ]
                },
                {
                    "command": [
                        "apply eventually_impl_base with (fun i:DS_set I => In U (x i)); trivial.",
                        "VernacExtend",
                        "27b2b964c051f3cec9bc496430e6f8ff781140aa"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (In (inverse_image f V) (x i)); auto with sets.",
                        "VernacExtend",
                        "c1d76c4e74a5d5635e6d9b2862e0bbbe4ff9bcc5"
                    ]
                },
                {
                    "command": [
                        "destruct H9; trivial.",
                        "VernacExtend",
                        "6a29ad59dc1a9998256a37da9b33c8255d4d469a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "func_preserving_net_limits_is_continuous",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (H (neighborhood_net_DS X x0) (neighborhood_net X x0) (neighborhood_net_limit X x0)).",
                        "VernacExtend",
                        "ba9e902f91e9672573b53576d5492454b3e3c5da"
                    ]
                },
                {
                    "command": [
                        "apply continuous_at_open_neighborhoods; intros.",
                        "VernacExtend",
                        "6414afabf7024bed8e8bfd5452d5e949f2b260e5"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 V H1 H2).",
                        "VernacExtend",
                        "3205744e1f01c081718da870f2ae15f90e09d2d4"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "destruct x as [U].",
                        "VernacExtend",
                        "e06a0a85ec4a7ff82a30ebdc2bde478dcd9d9851"
                    ]
                },
                {
                    "command": [
                        "exists U; repeat split; trivial.",
                        "VernacExtend",
                        "40a11cf54b5d47df15f715cb47232b54b792b2aa"
                    ]
                },
                {
                    "command": [
                        "pose proof (H3 (intro_neighborhood_net_DS X x0 U x o i H4)).",
                        "VernacExtend",
                        "a016ae655e9b47c2588c0e62ca9dc200c634680e"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "simpl; auto with sets.",
                        "VernacExtend",
                        "873d6a16f0159f9944403a35db8b3ca9c0269e58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subnet_limit",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose proof (H U H2 H3).",
                        "VernacExtend",
                        "2cce32b6526832443d6e1d7c5ee13b3e8e743484"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 x1).",
                        "VernacExtend",
                        "980826a46c2cbd11715f81ff7450777275d3c9f4"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "exists x3.",
                        "VernacExtend",
                        "fdf676e105ec13f635c8882c91b4fdae5ec87366"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "apply preord_trans with x2.",
                        "VernacExtend",
                        "c6f3ab55ec0ed09bb24760d2ef0a71741f67e464"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H6.",
                        "VernacExtend",
                        "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subnet_cluster_point",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [h h_increasing h_dominant].",
                        "VernacExtend",
                        "70113be767d66d71aae2aa74d31accd3ace36ed4"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose proof (h_dominant i).",
                        "VernacExtend",
                        "3ba195635441908d686907bbfd74458e64fb7fce"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "pose proof (H U H0 H1 x2).",
                        "VernacExtend",
                        "2604f6bf15eec91c33a072c8294419e7d809f460"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "exists (h x3).",
                        "VernacExtend",
                        "516c75ef70b1348c58c09d6bf073efd189a15e20"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply preord_trans with x1.",
                        "VernacExtend",
                        "5d10cc5a998a1448c7c105ed507f688bd60c38ff"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H3.",
                        "VernacExtend",
                        "1eb91ccefb59c504d04364b76e0995592b63f60e"
                    ]
                },
                {
                    "command": [
                        "apply h_increasing; assumption.",
                        "VernacExtend",
                        "dc10776ef93e1fdbec475c25d10c089afafe4dbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cluster_point_subnet_DS",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "refine (Build_DirectedSet cluster_point_subnet_DS_set cluster_point_subnet_DS_ord _ _).",
                        "VernacExtend",
                        "f7916631c2cd6df37b161d25ebde51caacbff81b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "red; intros; split; auto with sets.",
                        "VernacExtend",
                        "53fe7f254eff5a31174644d52508925b7b95bac1"
                    ]
                },
                {
                    "command": [
                        "apply preord_refl.",
                        "VernacExtend",
                        "2346cfc4a4882cb4fad8af2d0029e7424f261a46"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H; destruct H0.",
                        "VernacExtend",
                        "38ce24e768d236828eb7ecf6275c249693553750"
                    ]
                },
                {
                    "command": [
                        "red; split; auto with sets.",
                        "VernacExtend",
                        "9cb56462c2fcbfcfc8abadefd90bf3c0bf4cfe59"
                    ]
                },
                {
                    "command": [
                        "apply preord_trans with (cps_i y); trivial.",
                        "VernacExtend",
                        "130067cc48c3d666e19a59793e62f5b1bd99dde7"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct i as [i0 U0 ? ?]; destruct j as [i1 U1 ? ?].",
                        "VernacExtend",
                        "2f06679110258b22f2080e834afd955808735ee1"
                    ]
                },
                {
                    "command": [
                        "destruct (DS_join_cond i0 i1).",
                        "VernacExtend",
                        "44593f1390ffab54062182b7c4e412a5ed408812"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "pose proof (x0_cluster_point (Intersection U0 U1)).",
                        "VernacExtend",
                        "4d0b989dc772075f15a8481e8db9577a9bb69fff"
                    ]
                },
                {
                    "command": [
                        "match type of H1 with | _ -> _ -> ?C => assert C end.",
                        "VernacExtend",
                        "5bfc09fbeb0058ac174403fe33c00c4f7b5551e4"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply open_intersection2; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
                        "VernacExtend",
                        "7a8caf3ecfcaa7cff6f5be417f542707af347aeb"
                    ]
                },
                {
                    "command": [
                        "constructor; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
                        "VernacExtend",
                        "19f0d33710ba17a86d09bce88a34896e65e214f9"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 x1).",
                        "VernacExtend",
                        "8978df36fb8b2733a3ea8803beecb16be99beb3b"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "pose (ki := x2).",
                        "VernacExtend",
                        "f586fc7e2e7b18bee5d9ead86c4be421721d7a5f"
                    ]
                },
                {
                    "command": [
                        "pose (kU := Intersection U0 U1).",
                        "VernacExtend",
                        "35c2e133ff9c443dac023d621a9d0dfc8607e106"
                    ]
                },
                {
                    "command": [
                        "assert (open_neighborhood kU x0).",
                        "VernacExtend",
                        "096d85cdae18d969770f49746c75e1c9ae9ffe8a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply open_intersection2.",
                        "VernacExtend",
                        "c6082e9109ebbc0ad1374f079c698b49a64c6083"
                    ]
                },
                {
                    "command": [
                        "apply cps_U_open_neigh0.",
                        "VernacExtend",
                        "b3d93f09e28b17d7e0d7bfea5e77b1c662399760"
                    ]
                },
                {
                    "command": [
                        "apply cps_U_open_neigh1.",
                        "VernacExtend",
                        "71a37df4bb4c07346d3eb6c029b753dd5dfebf26"
                    ]
                },
                {
                    "command": [
                        "constructor; (apply cps_U_open_neigh0 || apply cps_U_open_neigh1).",
                        "VernacExtend",
                        "19f0d33710ba17a86d09bce88a34896e65e214f9"
                    ]
                },
                {
                    "command": [
                        "assert (In kU (x ki)).",
                        "VernacExtend",
                        "10874afa8ea569c9065edd17cf3c3f7f534f5fdc"
                    ]
                },
                {
                    "command": [
                        "exact H4.",
                        "VernacExtend",
                        "861b0a8cbc78b24a3c2c92390110f650f7a9aa8d"
                    ]
                },
                {
                    "command": [
                        "exists (Build_cluster_point_subnet_DS_set ki kU H5 H6).",
                        "VernacExtend",
                        "19ccaf7af8b71af2bfcc146913d3eb10a0ebd7b4"
                    ]
                },
                {
                    "command": [
                        "split; red; simpl; split.",
                        "VernacExtend",
                        "44c7588c48fed15afe7183e6485cbb291a86ca71"
                    ]
                },
                {
                    "command": [
                        "apply preord_trans with x1; trivial.",
                        "VernacExtend",
                        "f599848d407040a852ad632eab4c3d544e196622"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H7; trivial.",
                        "VernacExtend",
                        "109497877204277122d59ad24784245f6fd75eb1"
                    ]
                },
                {
                    "command": [
                        "apply preord_trans with x1; trivial.",
                        "VernacExtend",
                        "f599848d407040a852ad632eab4c3d544e196622"
                    ]
                },
                {
                    "command": [
                        "apply DS_ord_cond.",
                        "VernacExtend",
                        "8f6e119f55b8c0e98bb6e64bf4693914ab9946de"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H7; trivial.",
                        "VernacExtend",
                        "109497877204277122d59ad24784245f6fd75eb1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cluster_point_subnet_is_subnet",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j1; destruct j2.",
                        "VernacExtend",
                        "963854cdbb06da07960e5c3a0636befb17d4251e"
                    ]
                },
                {
                    "command": [
                        "simpl in H; simpl.",
                        "VernacExtend",
                        "d3da8c062a72e8e7d902ef704809403c33de7a3d"
                    ]
                },
                {
                    "command": [
                        "red in H; tauto.",
                        "VernacExtend",
                        "bb9fcace28103f1be5538d3bfa1b7b68997c9eaf"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists i; split.",
                        "VernacExtend",
                        "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
                    ]
                },
                {
                    "command": [
                        "apply preord_refl; apply DS_ord_cond.",
                        "VernacExtend",
                        "f11ffa145626c9ea3adaace2667a13c5b04ef92c"
                    ]
                },
                {
                    "command": [
                        "assert (open_neighborhood Full_set x0).",
                        "VernacExtend",
                        "353d2445731fe980447c908d39e0949a586b6028"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply open_full.",
                        "VernacExtend",
                        "f900ff977cf6905b0471287a8924982fbf2a3e0b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert (In Full_set (x i)).",
                        "VernacExtend",
                        "2a1a3e8c50049dcec7b2d5af4876cf8d2cd0ede8"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists (Build_cluster_point_subnet_DS_set i Full_set H H0).",
                        "VernacExtend",
                        "39bec6fb777c60123f8a2b90f022c34e48c20794"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cluster_point_subnet_converges",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct I_nonempty as [i0].",
                        "VernacExtend",
                        "7e9e04a4f99ff1338aeb28cbd2ce8d8257f11b3b"
                    ]
                },
                {
                    "command": [
                        "destruct (x0_cluster_point U H H0 i0).",
                        "VernacExtend",
                        "614c5dc9b171604456bef1b1f5b5e9926b9ce6df"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "assert (open_neighborhood U x0).",
                        "VernacExtend",
                        "0f598c088afb3af49cc69ac5583c1bd1e53cc78f"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "exists (Build_cluster_point_subnet_DS_set x1 U H3 H2).",
                        "VernacExtend",
                        "ea45276c6f8c68ca65b9f50c11b8715f245e0f7d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct j.",
                        "VernacExtend",
                        "01d6a18cdb100d2afee8d77e7fe64aa0aa4a1e68"
                    ]
                },
                {
                    "command": [
                        "red in H4; simpl in H4.",
                        "VernacExtend",
                        "023124be126bfac9db82f1f1bf641aa8159bc1bb"
                    ]
                },
                {
                    "command": [
                        "red in H4; simpl in H4.",
                        "VernacExtend",
                        "023124be126bfac9db82f1f1bf641aa8159bc1bb"
                    ]
                },
                {
                    "command": [
                        "unfold cluster_point_subnet; simpl.",
                        "VernacExtend",
                        "f46922ce634bcb4aba940c25e009c8cc199af185"
                    ]
                },
                {
                    "command": [
                        "destruct H4; auto with sets.",
                        "VernacExtend",
                        "dd3ee848769e8fd3ef806006a43c6ef2cb1bb121"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_cluster_point_impl_subnet_converges",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "exists cluster_point_subnet_DS.",
                        "VernacExtend",
                        "38cecced291c839c120a286f76104b160033cbed"
                    ]
                },
                {
                    "command": [
                        "exists cluster_point_subnet.",
                        "VernacExtend",
                        "7b0e430081041af2e35e1b047856cbad231dc63c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact cluster_point_subnet_is_subnet.",
                        "VernacExtend",
                        "7451366e91d5bdf12375ef7c4ab4ba0946420b22"
                    ]
                },
                {
                    "command": [
                        "exact cluster_point_subnet_converges.",
                        "VernacExtend",
                        "abf5090cc50df7f17a60b8f060ef89bf4b274282"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}