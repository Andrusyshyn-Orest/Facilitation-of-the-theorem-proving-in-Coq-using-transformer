{
    "filename": "Compactness.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export TopologicalSpaces.",
            "VernacRequire",
            "45674cb36fa7313eb78e1518bfa113cb38c877af"
        ],
        [
            "Require Export Nets.",
            "VernacRequire",
            "a6b918574dda8654aa6d7442d998db2abf712dbc"
        ],
        [
            "Require Export FilterLimits.",
            "VernacRequire",
            "2897c98978ff9ebfbc4039549dff5ec70d19966e"
        ],
        [
            "Require Export Continuity.",
            "VernacRequire",
            "c5c65013f9f5873d0ae338d98029a0ee56e80fb5"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Definition compact (X:TopologicalSpace) := forall C:Family (point_set X), (forall U:Ensemble (point_set X), In C U -> open U) -> FamilyUnion C = Full_set -> exists C':Family (point_set X), Finite _ C' /\\ Included C' C /\\ FamilyUnion C' = Full_set.",
            "VernacDefinition",
            "3f11a3675b189a8bb7c24f99d7ce49cdba049cd1"
        ],
        [
            "Lemma compactness_on_indexed_covers: forall (X:TopologicalSpace) (A:Type) (C:IndexedFamily A (point_set X)), compact X -> (forall a:A, open (C a)) -> IndexedUnion C = Full_set -> exists A':Ensemble A, Finite _ A' /\\ IndexedUnion (fun a':{a':A | In A' a'} => C (proj1_sig a')) = Full_set.",
            "VernacStartTheoremProof",
            "2cc9aeab85e746d7e3cdf3d23dfb2152d2c6bd96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose (cover := ImageFamily C).",
            "VernacExtend",
            "5746900e11f0fb55408719003abee2a9e42f4c0d"
        ],
        [
            "destruct (H cover) as [subcover].",
            "VernacExtend",
            "e22db289f3450b6fa26c745320cfc9ddd0aedab6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "rewrite H3; apply H0.",
            "VernacExtend",
            "502cc5c1e6a87d9a9eda8e17b4e6f284a29f697b"
        ],
        [
            "unfold cover; rewrite <- indexed_to_family_union; trivial.",
            "VernacExtend",
            "5e879aa3fcdc5387b8fe59ae49941bb5fea48e8e"
        ],
        [
            "destruct H2 as [? []].",
            "VernacExtend",
            "f26282f7fcf51cf31c4556c96e1da43e29c52a4f"
        ],
        [
            "destruct (finite_choice _ _ (fun (U:{U:Ensemble (point_set X) | In subcover U}) (a:A) => proj1_sig U = C a)) as [choice_fun].",
            "VernacExtend",
            "c45731f2504a86ba611847a549e3525bd03320b3"
        ],
        [
            "apply Finite_ens_type; trivial.",
            "VernacExtend",
            "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
        ],
        [
            "destruct x as [U].",
            "VernacExtend",
            "e06a0a85ec4a7ff82a30ebdc2bde478dcd9d9851"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H3 in i.",
            "VernacExtend",
            "7f28eca40b792bcfacdf47bc3be4eb6536fc9227"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "exists (Im Full_set choice_fun).",
            "VernacExtend",
            "83d0f75210e5c54d4f6cb429c3dcde52a7253e50"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply FiniteT_img.",
            "VernacExtend",
            "538e66e7585c29985235e1eebec0578e3ac259ce"
        ],
        [
            "apply Finite_ens_type; trivial.",
            "VernacExtend",
            "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
        ],
        [
            "intros; apply classic.",
            "VernacExtend",
            "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite <- H4 in H6.",
            "VernacExtend",
            "97a93c20fc88763c6d91ebe6ade709db41d4af5e"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "assert (In (Im Full_set choice_fun) (choice_fun (exist _ S H6))).",
            "VernacExtend",
            "61b7e723ab26c5e4af84e1deeb6edb81ed7c943f"
        ],
        [
            "exists (exist _ S H6).",
            "VernacExtend",
            "8e16aedbc52001f969ff5e7bf0cb542ffcfe78cd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exists (exist _ (choice_fun (exist _ S H6)) H8).",
            "VernacExtend",
            "1e01c776497c6ee2ce48855a004c7a7e37121409"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compact_finite_nonempty_closed_intersection: forall X:TopologicalSpace, compact X -> forall F:Family (point_set X), (forall G:Ensemble (point_set X), In F G -> closed G) -> (forall F':Family (point_set X), Finite _ F' -> Included F' F -> Inhabited (FamilyIntersection F')) -> Inhabited (FamilyIntersection F).",
            "VernacStartTheoremProof",
            "afad9d7aabcb538a4ecca34b454fc83bdb60229a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "pose (C := [ U:Ensemble (point_set X) | In F (Complement U) ]).",
            "VernacExtend",
            "3222eb6e360f7aae342c029396771b9e0be72f50"
        ],
        [
            "unshelve refine (let H3:=(H C _ _) in _).",
            "VernacExtend",
            "64cd0e57d76172a3a3dfcc17f008d5fad68bf328"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "apply H0 in H3.",
            "VernacExtend",
            "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
        ],
        [
            "apply closed_complement_open; trivial.",
            "VernacExtend",
            "8411a01c5e6767d0b873def06848a00813b5026c"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "contradiction H4.",
            "VernacExtend",
            "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
        ],
        [
            "exists (Complement S).",
            "VernacExtend",
            "a984a6ee84648949a093284c103f6edc389a85b4"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
        ],
        [
            "exact H6.",
            "VernacExtend",
            "50182aa41a20945b5f59106131b0993d3e1cc628"
        ],
        [
            "destruct H3 as [C' [? [? ?]]].",
            "VernacExtend",
            "8fbfc9ab11636d90d5c3769a7aad79c1fe4bca12"
        ],
        [
            "pose (F' := [G : Ensemble (point_set X) | In C' (Complement G)]).",
            "VernacExtend",
            "c196c853ebb8c80779a746f46a5d860eb6d11091"
        ],
        [
            "unshelve refine (let H6 := (H1 F' _ _) in _).",
            "VernacExtend",
            "56637a3a84ed24fabd7686388fd349f3ac56672c"
        ],
        [
            "assert (F' = Im C' Complement).",
            "VernacExtend",
            "7ab0ea57a75b7ab42f58dd8c1288dbf2d755dece"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "exists (Complement x); trivial.",
            "VernacExtend",
            "14bc9ffd3d3531b287bd0fece57a8d86bd240c79"
        ],
        [
            "symmetry; apply Complement_Complement.",
            "VernacExtend",
            "0a1a167f9f8c4f543489be7634bdeb567e88e29b"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite H7; rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "02ab19fc9e9940bd0586d1bde690822ffc5f54a4"
        ],
        [
            "rewrite H6; apply finite_image.",
            "VernacExtend",
            "939ed6b9909918588df6aaaf3678ba026b988217"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "apply H4 in H6.",
            "VernacExtend",
            "74b9325551ba595a896b7fdfa6f911d6ec3bc143"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "rewrite Complement_Complement in H6; trivial.",
            "VernacExtend",
            "6e8e510a5864225001907a6bb99cbad3613ba832"
        ],
        [
            "destruct H6 as [x0].",
            "VernacExtend",
            "1592986861b824f77f19104132c576d2cbccaa73"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "assert (In (FamilyUnion C') x).",
            "VernacExtend",
            "e2f8f399a654ca821ef8a6b569c789c5c2ce34a4"
        ],
        [
            "rewrite H5; constructor.",
            "VernacExtend",
            "53a98c559a94fa3b9ad58717544b77736dde7d4a"
        ],
        [
            "destruct H7.",
            "VernacExtend",
            "f6b4c745a19e0b13add33f75bb62e394f2c83618"
        ],
        [
            "assert (In (Complement S) x).",
            "VernacExtend",
            "e0f4f949bda07124dd23fbe4d265aff3f0bc2732"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
        ],
        [
            "contradiction H9.",
            "VernacExtend",
            "7cc52213081000a3b14a104e654d740455ab6917"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_nonempty_closed_intersection_impl_compact: forall X:TopologicalSpace, (forall F:Family (point_set X), (forall G:Ensemble (point_set X), In F G -> closed G) -> (forall F':Family (point_set X), Finite _ F' -> Included F' F -> Inhabited (FamilyIntersection F')) -> Inhabited (FamilyIntersection F)) -> compact X.",
            "VernacStartTheoremProof",
            "e4fcc8957aef7fc6a94165736444c3739a935fd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "pose (F := [ G:Ensemble (point_set X) | In C (Complement G) ]).",
            "VernacExtend",
            "41fe98f523d519977673c149ea53380c46e6a215"
        ],
        [
            "unshelve refine (let H3 := (H F _ _) in _).",
            "VernacExtend",
            "8c063e514e2fa441c44ab1832e3d2256c86c57fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "apply H0; trivial.",
            "VernacExtend",
            "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "exists [ U:Ensemble (point_set X) | In F' (Complement U) ].",
            "VernacExtend",
            "ea42b7bf9ac7c79354dcdd21b3b6008f7a914625"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "assert ([U:Ensemble (point_set X) | In F' (Complement U)] = Im F' Complement).",
            "VernacExtend",
            "d4a43ba5efef52ca715815bd0d6edebd85a426d7"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "exists (Complement x); trivial.",
            "VernacExtend",
            "14bc9ffd3d3531b287bd0fece57a8d86bd240c79"
        ],
        [
            "symmetry; apply Complement_Complement.",
            "VernacExtend",
            "0a1a167f9f8c4f543489be7634bdeb567e88e29b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "rewrite H7; rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "02ab19fc9e9940bd0586d1bde690822ffc5f54a4"
        ],
        [
            "rewrite H6; apply finite_image; trivial.",
            "VernacExtend",
            "1f80a5d657accf22fad0f4682375cc6415066a32"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "apply H4 in H6.",
            "VernacExtend",
            "74b9325551ba595a896b7fdfa6f911d6ec3bc143"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "rewrite Complement_Complement in H6; trivial.",
            "VernacExtend",
            "6e8e510a5864225001907a6bb99cbad3613ba832"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "contradiction H5.",
            "VernacExtend",
            "9391af834bf331ad2c1be2f6310c10ced385e172"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP; red; intro.",
            "VernacExtend",
            "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
        ],
        [
            "contradiction H7.",
            "VernacExtend",
            "47523d9070973516bc7a3cb24cc82cc2e9dd2ab0"
        ],
        [
            "exists (Complement S).",
            "VernacExtend",
            "a984a6ee84648949a093284c103f6edc389a85b4"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
        ],
        [
            "exact H9.",
            "VernacExtend",
            "6afcdb5a3ddac99d13c019fefd4457c64d0b9ba5"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "assert (In (FamilyUnion C) x).",
            "VernacExtend",
            "f1ecfa70c3091e62b2aabb6f89b3ed97e4432f3d"
        ],
        [
            "rewrite H1; constructor.",
            "VernacExtend",
            "9a5caad8f37577aab4893d099285fbce5b872bb3"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "assert (In (Complement S) x).",
            "VernacExtend",
            "e0f4f949bda07124dd23fbe4d265aff3f0bc2732"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
        ],
        [
            "contradiction H6.",
            "VernacExtend",
            "2c94f28dff1340ba5d7c0fd720a0fb1084c60dc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compact_impl_filter_cluster_point: forall X:TopologicalSpace, compact X -> forall F:Filter (point_set X), exists x0:point_set X, filter_cluster_point F x0.",
            "VernacStartTheoremProof",
            "937f0f33c2d0fb12e9d367a0d2d9c551dfb29849"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (compact_finite_nonempty_closed_intersection _ H [ G:Ensemble (point_set X) | In (filter_family F) G /\\ closed G ]) as [x0].",
            "VernacExtend",
            "f36548de9b04a2336515e6f3ae60fee2a3882bc5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0 as [[]]; trivial.",
            "VernacExtend",
            "594814a30ec118ad6eca82454a70318d610036b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (closed (FamilyIntersection F')).",
            "VernacExtend",
            "e1d441f4d0161758e79e617e81cc7579d5d1ce22"
        ],
        [
            "apply closed_family_intersection.",
            "VernacExtend",
            "d3078420e976599c427faf794741b2e75c86f3ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H1 in H2.",
            "VernacExtend",
            "d3132def680733ecd29eb5bc865040ad28c4dfa0"
        ],
        [
            "destruct H2 as [[]]; trivial.",
            "VernacExtend",
            "677cd5ab35d7ef54797a64a691482507e9228c0d"
        ],
        [
            "assert (In (filter_family F) (FamilyIntersection F')).",
            "VernacExtend",
            "673d343e67f3ed2bb7587e4f20113baa49a3131a"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "rewrite empty_family_intersection.",
            "VernacExtend",
            "ab048e73614d165c02e20ad98c560170b2ab4e9e"
        ],
        [
            "apply filter_full.",
            "VernacExtend",
            "b7609a27fd1698573f204246956e7be964a50517"
        ],
        [
            "replace (FamilyIntersection (Add A x)) with (Intersection (FamilyIntersection A) x).",
            "VernacExtend",
            "aa7367cb2624f3758bc2e17936f2e3c66053cf82"
        ],
        [
            "apply filter_intersection.",
            "VernacExtend",
            "d58545a8734282cd50895888963335c531417992"
        ],
        [
            "apply IHFinite.",
            "VernacExtend",
            "5a95fcd27e91ab5fc8a3de3a60cec30f77efc076"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "assert (In (Add A x) x) by (right; constructor).",
            "VernacExtend",
            "3dbd7204a5521c2da745584749ab0ebf53641d94"
        ],
        [
            "apply H1 in H3.",
            "VernacExtend",
            "dd08684d66bb4636666a3dcf829310c46bb9bf9d"
        ],
        [
            "destruct H3 as [[]]; trivial.",
            "VernacExtend",
            "ad465971e3d68a24c46a51b4a88b63a3398264fc"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "apply H3; trivial.",
            "VernacExtend",
            "d51b130dcb254ceaa7e48b350c576ecd56255d34"
        ],
        [
            "destruct H5; trivial.",
            "VernacExtend",
            "1042e4df48a019668038591898ad361c3c4aeb42"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "apply NNPP; intro.",
            "VernacExtend",
            "55e5f4eb66528dc4c7274b2b611cda0433510c40"
        ],
        [
            "contradiction (filter_empty _ F).",
            "VernacExtend",
            "0ecf1899ba9c8209d345f19bddbc3a8eb62393c9"
        ],
        [
            "replace (@Empty_set (point_set X)) with (FamilyIntersection F'); trivial.",
            "VernacExtend",
            "1ba02b869da228095667ef8fa64f53d00e93add3"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "contradiction H4.",
            "VernacExtend",
            "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply filter_upward_closed with S; trivial.",
            "VernacExtend",
            "78d1d6b12f869365038bdb07a117947edac8945a"
        ],
        [
            "apply closure_inflationary.",
            "VernacExtend",
            "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
        ],
        [
            "apply closure_closed.",
            "VernacExtend",
            "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_cluster_point_impl_compact: forall X:TopologicalSpace, (forall F:Filter (point_set X), exists x0:point_set X, filter_cluster_point F x0) -> compact X.",
            "VernacStartTheoremProof",
            "2149e9ca2eef4c72bd59d019cf30fe9c4b2a9e94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply finite_nonempty_closed_intersection_impl_compact.",
            "VernacExtend",
            "8de7200caa9e3b1ac562391e962b226cbf51a0e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unshelve refine (let H2:=_ in let filt := Build_Filter_from_subbasis F H2 in _).",
            "VernacExtend",
            "c07de7f6a5f06b47cde2e7169c2852e1afd401a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite indexed_to_family_intersection.",
            "VernacExtend",
            "4345b09d6a6a082eeec047fe4ca1925426d031be"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply FiniteT_img; trivial.",
            "VernacExtend",
            "34399d150e3ff0412508c9edd7d13ecd9334f579"
        ],
        [
            "intros; apply classic.",
            "VernacExtend",
            "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "rewrite H5; apply H3.",
            "VernacExtend",
            "d56922a06b51b56d6479364d6a55764c2c323579"
        ],
        [
            "assert (filter_subbasis filt F) by apply filter_from_subbasis_subbasis.",
            "VernacExtend",
            "d466eedf320da7945f878bbbee210dde32a61b8d"
        ],
        [
            "destruct (H filt) as [x0].",
            "VernacExtend",
            "1e75dcc61b9e57a12915342096055dd6da34565d"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "assert (closed S) by (apply H0; trivial).",
            "VernacExtend",
            "9baad26a64a715bcf7b83df374c18c7730c14d37"
        ],
        [
            "assert (In (filter_family filt) S).",
            "VernacExtend",
            "78c6995a9e8f6441770667427a966dbd172354b3"
        ],
        [
            "apply (filter_subbasis_elements _ _ H3); trivial.",
            "VernacExtend",
            "ed3fa3015f2eae433e400c9e8b074abd138a201c"
        ],
        [
            "pose proof (H4 _ H7).",
            "VernacExtend",
            "c70a7ba418c4e442f2d99ad784533186e06e0812"
        ],
        [
            "rewrite closure_fixes_closed in H8; trivial.",
            "VernacExtend",
            "1a52b48886f12d34611d8958fcf9575794af43b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ultrafilter_limit_impl_compact: forall X:TopologicalSpace, (forall U:Filter (point_set X), ultrafilter U -> exists x0:point_set X, filter_limit U x0) -> compact X.",
            "VernacStartTheoremProof",
            "3e71c4e45da224231a91ecf6228f8d3f8813c09b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply filter_cluster_point_impl_compact.",
            "VernacExtend",
            "f028993bd4a736f30de4bf1ece4cfd5071ab33fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (ultrafilter_extension F) as [U].",
            "VernacExtend",
            "58f8055e2e53277117f0d5e35a6d1721740888e3"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct (H _ H1) as [x0].",
            "VernacExtend",
            "aa4a80591e6ef6097185dc395c62110411bb0860"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply filter_limit_is_cluster_point in H2.",
            "VernacExtend",
            "5dd7bffe8afbd7e4d99a448f508d47b20dad0690"
        ],
        [
            "apply H0 in H3.",
            "VernacExtend",
            "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
        ],
        [
            "apply H2; trivial.",
            "VernacExtend",
            "91036970bc344118009ef71eaf39ec9fc45e9ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compact_impl_net_cluster_point: forall X:TopologicalSpace, compact X -> forall (I:DirectedSet) (x:Net I X), inhabited (DS_set I) -> exists x0:point_set X, net_cluster_point x x0.",
            "VernacStartTheoremProof",
            "eff5105d89bef73ab4a536da438a1a393c0964b6"
        ],
        [
            "Require Import FiltersAndNets.",
            "VernacRequire",
            "f5cb97cf1d270065848f91b40d57f83e587864e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (compact_impl_filter_cluster_point _ H (tail_filter x H0)) as [x0].",
            "VernacExtend",
            "1576b27ffdb71e2070d9729bb8c4b2fc50519840"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "apply tail_filter_cluster_point_impl_net_cluster_point with H0.",
            "VernacExtend",
            "b8dbe1c0a739356d389eb8089e0faca56ab992b6"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_cluster_point_impl_compact: forall X:TopologicalSpace, (forall (I:DirectedSet) (x:Net I X), inhabited (DS_set I) -> exists x0:point_set X, net_cluster_point x x0) -> compact X.",
            "VernacStartTheoremProof",
            "bdac5d1a3eeb46cee12a4ce174592da33f11942f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply filter_cluster_point_impl_compact.",
            "VernacExtend",
            "f028993bd4a736f30de4bf1ece4cfd5071ab33fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (H _ (filter_to_net _ F)) as [x0].",
            "VernacExtend",
            "b5d9bd5046d4a3c755c103d9be1c4f8a3bec7c65"
        ],
        [
            "cut (inhabited (point_set X)).",
            "VernacExtend",
            "0114a0ac05d501af5d6192fc32c9297a7bf08e27"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct H0 as [x].",
            "VernacExtend",
            "f84b11e2df7efa945c2ce65cc7178328c0501c06"
        ],
        [
            "exists.",
            "VernacExtend",
            "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Build_filter_to_net_DS_set with Full_set x.",
            "VernacExtend",
            "c686bf86ffd028ac9ae851d3cb8106e4391a688d"
        ],
        [
            "apply filter_full.",
            "VernacExtend",
            "b7609a27fd1698573f204246956e7be964a50517"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply NNPP; intro.",
            "VernacExtend",
            "55e5f4eb66528dc4c7274b2b611cda0433510c40"
        ],
        [
            "contradiction (filter_empty _ F).",
            "VernacExtend",
            "0ecf1899ba9c8209d345f19bddbc3a8eb62393c9"
        ],
        [
            "replace (@Empty_set (point_set X)) with (@Full_set (point_set X)).",
            "VernacExtend",
            "de0c15214091580e9d065f27b5358d3f4f25470f"
        ],
        [
            "apply filter_full.",
            "VernacExtend",
            "b7609a27fd1698573f204246956e7be964a50517"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "contradiction H0.",
            "VernacExtend",
            "198cc5fe08678df71b7d70ff1acc682532bbeeca"
        ],
        [
            "exists; exact x.",
            "VernacExtend",
            "b41d38fcfb0b887cf0dc3367167a790102767404"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "apply filter_to_net_cluster_point_impl_filter_cluster_point.",
            "VernacExtend",
            "94603527e582fc037767f4dcf4be7b64b965b4d5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export SeparatednessAxioms.",
            "VernacRequire",
            "e1a159ab203858049c09e06df34b034c7bd8854b"
        ],
        [
            "Require Export SubspaceTopology.",
            "VernacRequire",
            "a237fbe5ad767779a0de99f89e25e49c7cb880de"
        ],
        [
            "Lemma compact_closed: forall (X:TopologicalSpace) (S:Ensemble (point_set X)), Hausdorff X -> compact (SubspaceTopology S) -> closed S.",
            "VernacStartTheoremProof",
            "6a7f40fedc3ac64bfeebe7b7c867fb2d6f1d4fec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (classic (Inhabited S)).",
            "VernacExtend",
            "d338d0b748d3937c77f751a50a75b2bdd08babbe"
        ],
        [
            "assert (closure S = S).",
            "VernacExtend",
            "5228d6d683f8121f816e567b7dafd0ff95643985"
        ],
        [
            "apply Extensionality_Ensembles; split.",
            "VernacExtend",
            "a4c57ea69808be923621e13ef05d8e11d11caf6f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (net_limits_determine_topology _ _ H2) as [I0 [y []]].",
            "VernacExtend",
            "a7112ee9b988135c9fe3f6343b0af6e8eeca8a0e"
        ],
        [
            "pose (yS (i:DS_set I0) := exist (fun x:point_set X => In S x) (y i) (H3 i)).",
            "VernacExtend",
            "e560db1099e35c6031c5f0c33cbf15e3e1347450"
        ],
        [
            "assert (inhabited (point_set (SubspaceTopology S))).",
            "VernacExtend",
            "42c8fe0aef8fb00c85332081b26bb049348d8d0d"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "exists.",
            "VernacExtend",
            "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
        ],
        [
            "exists x0; trivial.",
            "VernacExtend",
            "3c02462b19bf4d0b1ef395171cd136c8c89d9991"
        ],
        [
            "assert (inhabited (DS_set I0)) as HinhI0.",
            "VernacExtend",
            "1e3d9d70a4c1b0c2030ce1bf1d9c5285c842548b"
        ],
        [
            "red in H4.",
            "VernacExtend",
            "fb009c7187d3c583c5dfa4ed8fab60659bf67bec"
        ],
        [
            "destruct (H4 Full_set) as [i0]; auto with topology.",
            "VernacExtend",
            "25b2d545e44e3ecdef1078320b807c00d4f7110c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "pose proof (compact_impl_net_cluster_point (SubspaceTopology S) H0 _ yS HinhI0).",
            "VernacExtend",
            "7b5cfe5ccbde9eed03531bd6cdb6d186dcb9044f"
        ],
        [
            "destruct H6 as [[x0]].",
            "VernacExtend",
            "e8f4a2c085fa2f15f289cdd23307f65dee858102"
        ],
        [
            "apply net_cluster_point_impl_subnet_converges in H6.",
            "VernacExtend",
            "263a262fce20b3cc76bcc6e667db19cc7f2be896"
        ],
        [
            "destruct H6 as [J [y' []]].",
            "VernacExtend",
            "5568769bfa484675839c852a715108d8db69be27"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "assert (net_limit (fun j:DS_set J => y (h j)) x0).",
            "VernacExtend",
            "dc69ddd9dc42258c9ba5d2ab258cc5fbf2788440"
        ],
        [
            "apply continuous_func_preserves_net_limits with (f:=subspace_inc S) (Y:=X) in H7.",
            "VernacExtend",
            "faeb7c55c98d04be1ac062d4a2a626d5494184dc"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply continuous_func_continuous_everywhere.",
            "VernacExtend",
            "66315e214acc36a7b42d68e92f06119372c45a83"
        ],
        [
            "apply subspace_inc_continuous.",
            "VernacExtend",
            "a867e71345fc191aaa382d77e27f46da75e8c4a4"
        ],
        [
            "assert (net_limit (fun j:DS_set J => y (h j)) x).",
            "VernacExtend",
            "2b23fb1d62547c5e4e78a389e38792f0917b1343"
        ],
        [
            "apply subnet_limit with I0 y; trivial.",
            "VernacExtend",
            "0a9c1b67eefbed22c64646270dac78387fb3c50f"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "assert (x = x0).",
            "VernacExtend",
            "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
        ],
        [
            "exact (Hausdorff_impl_net_limit_unique _ H _ _ H10 H9).",
            "VernacExtend",
            "d94f6d3e36cadf14ac5034e31a029b9bcc53da0e"
        ],
        [
            "rewrite H11; trivial.",
            "VernacExtend",
            "3e180f800717f8a505514c151c80440d97db06cf"
        ],
        [
            "destruct (H4 Full_set).",
            "VernacExtend",
            "f87a711539f657a53cca5bff162ed21f69be83eb"
        ],
        [
            "apply open_full.",
            "VernacExtend",
            "f900ff977cf6905b0471287a8924982fbf2a3e0b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists; exact x1.",
            "VernacExtend",
            "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "apply closure_inflationary.",
            "VernacExtend",
            "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
        ],
        [
            "rewrite <- H2; apply closure_closed.",
            "VernacExtend",
            "0a7a6ac713070416233ca1fe7206aeda0087acd5"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "assert (Complement S = Full_set).",
            "VernacExtend",
            "5d5f5c7cfc6f05c3b0fe702eb937ffdd2de90f0b"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "contradiction H1; exists x; trivial.",
            "VernacExtend",
            "36b3567be445853054de56cde81966cc57ab1e82"
        ],
        [
            "rewrite H2; apply open_full.",
            "VernacExtend",
            "9c785bcac5fb5c80658d49788cf7cd214265f279"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_compact: forall (X:TopologicalSpace) (S:Ensemble (point_set X)), compact X -> closed S -> compact (SubspaceTopology S).",
            "VernacStartTheoremProof",
            "0903d5bb869e8a85d84c0ce7d575c0cf6faec5d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply net_cluster_point_impl_compact.",
            "VernacExtend",
            "7630d9c7a4db2bd6d03ee5ea1abd2cd8bb6180c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (compact_impl_net_cluster_point _ H _ (fun i:DS_set I => subspace_inc _ (x i))) as [x0].",
            "VernacExtend",
            "0df0294f298dda264edc2f47c291c7d31196232f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assert (In S x0).",
            "VernacExtend",
            "1509c15a814f70d9a6cf544a0477ff4493ab0397"
        ],
        [
            "rewrite <- (closure_fixes_closed S); trivial.",
            "VernacExtend",
            "34ee4f0f404b760c16be2ad8798002d1f9484353"
        ],
        [
            "apply net_cluster_point_in_closure with (2:=H2).",
            "VernacExtend",
            "dd28532396b10de8f7319e1d7246a96c5ea4fc49"
        ],
        [
            "destruct H1 as [i0].",
            "VernacExtend",
            "a833ad996c5186358f75d2622207157e0325abb0"
        ],
        [
            "exists i0.",
            "VernacExtend",
            "145e6965fdbf4c08d7d04db51a555a18926e959f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (x j).",
            "VernacExtend",
            "eeab7b93e94758ba4d1a0ba96a2672c727b1fb1a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "exists (exist _ x0 H3).",
            "VernacExtend",
            "5d68d2df54126afcbd1433ac1bddf507c9ab3779"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (subspace_topology_topology _ _ _ H4) as [V []].",
            "VernacExtend",
            "9ea564cab755935bcf0a66b596d885c7fe527023"
        ],
        [
            "rewrite H7 in H5.",
            "VernacExtend",
            "e92784956538dea547fb4d09620f99424e4a73cc"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "destruct (H2 V H6 H5 i) as [j []]; trivial.",
            "VernacExtend",
            "61bfd8a886c654f74e570be01113c130b669eb7a"
        ],
        [
            "exists j; split; trivial.",
            "VernacExtend",
            "61eabc3d0804f6914a3c6bf0ee34afe021c1bdd4"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compact_image: forall {X Y:TopologicalSpace} (f:point_set X->point_set Y), compact X -> continuous f -> surjective f -> compact Y.",
            "VernacStartTheoremProof",
            "4674845683859001701ee36bf2e194224410ced3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose (B := fun U:{U:Ensemble (point_set Y) | In C U} => inverse_image f (proj1_sig U)).",
            "VernacExtend",
            "52cca6be092ca10d84947b453bf214c25e3c6701"
        ],
        [
            "destruct (compactness_on_indexed_covers _ _ B H) as [subcover].",
            "VernacExtend",
            "0674e76b877caa554f583da19e46988d73944318"
        ],
        [
            "destruct a as [U].",
            "VernacExtend",
            "24d3b7ebd43e7bd56f73dd8d8efb865c568b1bb8"
        ],
        [
            "unfold B; simpl.",
            "VernacExtend",
            "2abf187907e6d703f821e9622e714c1ba32eeb0a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H2; trivial.",
            "VernacExtend",
            "91036970bc344118009ef71eaf39ec9fc45e9ef2"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (In (FamilyUnion C) (f x)).",
            "VernacExtend",
            "267f0eba2c57c26fb1600272f82ed34b74bc45bf"
        ],
        [
            "rewrite H3; constructor.",
            "VernacExtend",
            "2ae4c54340025dd35d7802be6850594b44fdca8a"
        ],
        [
            "inversion_clear H5 as [V].",
            "VernacExtend",
            "f101be6d949b47bd70add87f1f9eb2668c7497d1"
        ],
        [
            "exists (exist _ V H6).",
            "VernacExtend",
            "b392d2e8f53d1e8a4287f7142cd28655c89a7584"
        ],
        [
            "unfold B; simpl.",
            "VernacExtend",
            "2abf187907e6d703f821e9622e714c1ba32eeb0a"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "exists (Im subcover (@proj1_sig _ (fun U:Ensemble (point_set Y) => In C U))).",
            "VernacExtend",
            "b7f98deed9051a10393830c15961012c4712d6b7"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply finite_image; trivial.",
            "VernacExtend",
            "0e504cb7ed4b51f172242f8d83b7901a32a7e207"
        ],
        [
            "red; intros V ?.",
            "VernacExtend",
            "eb2a363faf62c757de7d6a93c8889f8f0367fbac"
        ],
        [
            "destruct H6 as [[U]].",
            "VernacExtend",
            "0c1e5345b699e2be06b8a5449fd1a11f1199e5d9"
        ],
        [
            "simpl in H7.",
            "VernacExtend",
            "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros y ?.",
            "VernacExtend",
            "3a1ae9634ca0471c55a8f2c0506ca4e582893399"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct (H1 y) as [x].",
            "VernacExtend",
            "1535c6a1d06175ebf714d2db3eebc0ba607ec088"
        ],
        [
            "assert (In (IndexedUnion (fun a':{a' | In subcover a'} => B (proj1_sig a'))) x).",
            "VernacExtend",
            "e112e42748a1df357622bcd31818172e2104eaa1"
        ],
        [
            "rewrite H5; constructor.",
            "VernacExtend",
            "53a98c559a94fa3b9ad58717544b77736dde7d4a"
        ],
        [
            "destruct H8 as [[[U]]].",
            "VernacExtend",
            "7a00e21b093c91f8d42642d04ff654eaab05cb38"
        ],
        [
            "exists U.",
            "VernacExtend",
            "5fa927449745739df126de32a00d9a77c57aa9f7"
        ],
        [
            "simpl in H8.",
            "VernacExtend",
            "3ffa163638f0cd702536b03d79bee02d960b0fdb"
        ],
        [
            "exists (exist _ U i); trivial.",
            "VernacExtend",
            "14f231f165f01ef6f4aa3c85981787e8efcdb229"
        ],
        [
            "unfold B in H8; simpl in H8.",
            "VernacExtend",
            "3538bd92bfd88dd1027efb443f4a05c141e51655"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compact_Hausdorff_impl_normal_sep: forall X:TopologicalSpace, compact X -> Hausdorff X -> normal_sep X.",
            "VernacStartTheoremProof",
            "d529df8f9bae9f6e356a9a43e254996ce2e6c842"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T3_sep X).",
            "VernacExtend",
            "96ce88655e6cf070f36462df5286619513481c2f"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "destruct (choice (fun (xy:{xy:point_set X * point_set X | let (x,y):=xy in x <> y}) (UV:Ensemble (point_set X) * Ensemble (point_set X)) => match xy with | exist (x,y) i => let (U,V):=UV in open U /\\ open V /\\ In U x /\\ In V y /\\ Intersection U V = Empty_set end)) as [choice_fun].",
            "VernacExtend",
            "ea8f5db97563a0d58a54e34f489c3d288b277bdc"
        ],
        [
            "destruct x as [[x y] i].",
            "VernacExtend",
            "bc0a14a7e16c94d5213457a27a4625575dea8c23"
        ],
        [
            "destruct (H0 _ _ i) as [U [V]].",
            "VernacExtend",
            "1eb8019b3cbad850f94246ffc47c6ebad13bcd6b"
        ],
        [
            "exists (U, V); trivial.",
            "VernacExtend",
            "c112754bc325b946d7e41ae140613d0c428db106"
        ],
        [
            "pose (choice_fun_U := fun (x y:point_set X) (Hineq:x<>y) => fst (choice_fun (exist _ (x,y) Hineq))).",
            "VernacExtend",
            "f6af3a950a85ddbb6b70ba487fff36b4e32480d9"
        ],
        [
            "pose (choice_fun_V := fun (x y:point_set X) (Hineq:x<>y) => snd (choice_fun (exist _ (x,y) Hineq))).",
            "VernacExtend",
            "2783f5476ff46f1a57af440bcfa3224b547f3a0a"
        ],
        [
            "assert (forall (x y:point_set X) (Hineq:x<>y), open (choice_fun_U x y Hineq) /\\ open (choice_fun_V x y Hineq) /\\ In (choice_fun_U x y Hineq) x /\\ In (choice_fun_V x y Hineq) y /\\ Intersection (choice_fun_U x y Hineq) (choice_fun_V x y Hineq) = Empty_set).",
            "VernacExtend",
            "960813526994f250b7bfcb3ad7ee1ce14400d880"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold choice_fun_U; unfold choice_fun_V.",
            "VernacExtend",
            "30f0f07cac1aaecdc2e262b255145ebeeb8b953a"
        ],
        [
            "pose proof (H1 (exist _ (x,y) Hineq)).",
            "VernacExtend",
            "0959fe460266a70bd14266d60838d4b8f7f3c25f"
        ],
        [
            "destruct (choice_fun (exist _ (x,y) Hineq)).",
            "VernacExtend",
            "7bdeb594ac76b1685110c12255de2259db256f23"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "clearbody choice_fun_U choice_fun_V; clear choice_fun H1.",
            "VernacExtend",
            "053ea35cc6b25efc7da828dec8ae11f5749c123c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hausdorff_impl_T1_sep; trivial.",
            "VernacExtend",
            "e367d4654055e2698e76db84e20180b5b5414184"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (closed_compact _ _ H H1).",
            "VernacExtend",
            "27f6b9bf37a156b3c54ed5249143f195d50e6623"
        ],
        [
            "assert (forall y:point_set X, In F y -> x <> y).",
            "VernacExtend",
            "4fc6b771adb91407d4a59fc6cb1c0d382b773077"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "pose (cover := fun (y:point_set (SubspaceTopology F)) => let (y,i):=y in inverse_image (subspace_inc F) (choice_fun_V x y (H5 y i))).",
            "VernacExtend",
            "b8c6cc3f241e9d7f3601fb7dbc24def50faaad17"
        ],
        [
            "destruct (compactness_on_indexed_covers _ _ cover H4) as [subcover].",
            "VernacExtend",
            "ac302725e3605add627d168a0bc54b61338802f4"
        ],
        [
            "destruct a as [y i].",
            "VernacExtend",
            "71ef064cfae56e5c8d87030b95d3b095f26786c7"
        ],
        [
            "apply subspace_inc_continuous.",
            "VernacExtend",
            "a867e71345fc191aaa382d77e27f46da75e8c4a4"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros y ?.",
            "VernacExtend",
            "3a1ae9634ca0471c55a8f2c0506ca4e582893399"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "destruct y as [y i].",
            "VernacExtend",
            "c608bd9ea8b6c203dee5f088d533eefea8ab1f52"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "exists (IndexedIntersection (fun y:{y:point_set (SubspaceTopology F) | In subcover y} => let (y,_):=y in let (y,i):=y in choice_fun_U x y (H5 y i))).",
            "VernacExtend",
            "be29de326c718f1ab2a4c3545505cb7b571cfe53"
        ],
        [
            "exists (IndexedUnion (fun y:{y:point_set (SubspaceTopology F) | In subcover y} => let (y,_):=y in let (y,i):=y in choice_fun_V x y (H5 y i))).",
            "VernacExtend",
            "e7cb49431e6a0ede818c40ea6fe61a592b97b10f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply open_finite_indexed_intersection.",
            "VernacExtend",
            "a94cb386a7b5cab0ed86aa162a6680f186a7ae5c"
        ],
        [
            "apply Finite_ens_type; trivial.",
            "VernacExtend",
            "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
        ],
        [
            "destruct a as [[y]].",
            "VernacExtend",
            "2aa443095171b0abae4875432d016956bf466786"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply open_indexed_union.",
            "VernacExtend",
            "1a2c9d33f1a4af4d6bb467ac473b95e3197127b5"
        ],
        [
            "destruct a as [[y]].",
            "VernacExtend",
            "2aa443095171b0abae4875432d016956bf466786"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "destruct a as [[y]].",
            "VernacExtend",
            "2aa443095171b0abae4875432d016956bf466786"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "red; intros y ?.",
            "VernacExtend",
            "7ce7109d32bdcab981327fb22d4a2b1256d269ac"
        ],
        [
            "assert (In (IndexedUnion (fun y:{y:point_set (SubspaceTopology F) | In subcover y} => cover (proj1_sig y))) (exist _ y H8)).",
            "VernacExtend",
            "6fa63cb424ad4449450bfdd67362a5525c2dfa70"
        ],
        [
            "rewrite H7; constructor.",
            "VernacExtend",
            "1fb6a74785df330ca668dbaa87de20244e8a395e"
        ],
        [
            "remember (exist (In F) y H8) as ysig.",
            "VernacExtend",
            "a4387dd6c070b93994cd0d12d07776a4a592a7e6"
        ],
        [
            "destruct H9 as [[y']].",
            "VernacExtend",
            "c39d9fe0023ff598918eed3036fec2bb11b3cb37"
        ],
        [
            "rewrite Heqysig in H9; clear x0 Heqysig.",
            "VernacExtend",
            "3bb595fc21d39c4e44ad5bb096524bfd9abd4a09"
        ],
        [
            "simpl in H9.",
            "VernacExtend",
            "5b379363c2d34afdec2cbb09e66c6d51d6b54f24"
        ],
        [
            "destruct y' as [y'].",
            "VernacExtend",
            "b1e8f0934140e2f2af063b98ea17dcb7503c557e"
        ],
        [
            "simpl in H9.",
            "VernacExtend",
            "5b379363c2d34afdec2cbb09e66c6d51d6b54f24"
        ],
        [
            "destruct H9.",
            "VernacExtend",
            "a9684c4d50d2ab7d92e4173403512b5b52a9a3de"
        ],
        [
            "simpl in H9.",
            "VernacExtend",
            "5b379363c2d34afdec2cbb09e66c6d51d6b54f24"
        ],
        [
            "exists (exist _ (exist _ y' i0) i).",
            "VernacExtend",
            "be77e4e2d426e3cab21ff636c3d24cff471c25ab"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets; red; intros y ?.",
            "VernacExtend",
            "abc376da1e6536283ff89ba7b3a92b31a80ec151"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "destruct H9.",
            "VernacExtend",
            "a9684c4d50d2ab7d92e4173403512b5b52a9a3de"
        ],
        [
            "pose proof (H8 a).",
            "VernacExtend",
            "276c2c8bf07e530b6b4d3d7f6f72ca28b752abfc"
        ],
        [
            "destruct a as [[y]].",
            "VernacExtend",
            "2aa443095171b0abae4875432d016956bf466786"
        ],
        [
            "replace (@Empty_set (point_set X)) with (Intersection (choice_fun_U x y (H5 y i)) (choice_fun_V x y (H5 y i))).",
            "VernacExtend",
            "10824809a78b7cd7652a845a395a39f5f0a684bf"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "destruct (choice (fun (xF:{p:point_set X * Ensemble (point_set X) | let (x,F):=p in closed F /\\ ~ In F x}) (UV:Ensemble (point_set X) * Ensemble (point_set X)) => let (p,i):=xF in let (x,F):=p in let (U,V):=UV in open U /\\ open V /\\ In U x /\\ Included F V /\\ Intersection U V = Empty_set)) as [choice_fun].",
            "VernacExtend",
            "57682464fb062bf7327bc43803e32f6e00649b86"
        ],
        [
            "destruct x as [[x F] []].",
            "VernacExtend",
            "ed02b532c4a5a02b00b1acf7e4ae62c7b4785466"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct (H4 x F H2 H3) as [U [V]].",
            "VernacExtend",
            "2b175a3017d4dea95d6b66ce9fbc1118383e135e"
        ],
        [
            "exists (U,V); trivial.",
            "VernacExtend",
            "c112754bc325b946d7e41ae140613d0c428db106"
        ],
        [
            "pose (choice_fun_U := fun (x:point_set X) (F:Ensemble (point_set X)) (HC:closed F) (Hni:~ In F x) => fst (choice_fun (exist _ (x,F) (conj HC Hni)))).",
            "VernacExtend",
            "81763896ea83ba5f37aac90b8be3f666940a87fe"
        ],
        [
            "pose (choice_fun_V := fun (x:point_set X) (F:Ensemble (point_set X)) (HC:closed F) (Hni:~ In F x) => snd (choice_fun (exist _ (x,F) (conj HC Hni)))).",
            "VernacExtend",
            "aa7bd681dae49574ae15906898289a2973733056"
        ],
        [
            "assert (forall (x:point_set X) (F:Ensemble (point_set X)) (HC:closed F) (Hni:~ In F x), open (choice_fun_U x F HC Hni) /\\ open (choice_fun_V x F HC Hni) /\\ In (choice_fun_U x F HC Hni) x /\\ Included F (choice_fun_V x F HC Hni) /\\ Intersection (choice_fun_U x F HC Hni) (choice_fun_V x F HC Hni) = Empty_set).",
            "VernacExtend",
            "734043efea675c702ed9b67268679961e26c2c68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (H2 (exist _ (x,F) (conj HC Hni))).",
            "VernacExtend",
            "37dbc5c70b2e12fbef96bef9e11e16b9fbde0b24"
        ],
        [
            "unfold choice_fun_U; unfold choice_fun_V; destruct (choice_fun (exist _ (x,F) (conj HC Hni))); trivial.",
            "VernacExtend",
            "6b9e158df89b0d2ba3c08ea52790c4fd798c79ee"
        ],
        [
            "clearbody choice_fun_U choice_fun_V; clear choice_fun H2.",
            "VernacExtend",
            "cc04bff0063d450d295959318142f9e7d5c30d5e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (closed_compact _ _ H H2).",
            "VernacExtend",
            "b6c222dec331850285ad3aefdd04f68e91d17014"
        ],
        [
            "assert (forall x:point_set X, In F x -> ~ In G x).",
            "VernacExtend",
            "00fc3d568d8dbb7a3da911acbae3238023b9eeba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (In Empty_set x).",
            "VernacExtend",
            "4d4b40f34ec25dd6647a1458eaef3c33e2054336"
        ],
        [
            "red; destruct 1.",
            "VernacExtend",
            "e5f9c7eb34e8253c2cd9a016acc6f56595dd4f8d"
        ],
        [
            "rewrite <- H5; split; trivial.",
            "VernacExtend",
            "bd2c827b62b6ddd3f70da2c1eeaf10b62f0096e9"
        ],
        [
            "pose (cover := fun x:point_set (SubspaceTopology F) => let (x,i):=x in inverse_image (subspace_inc F) (choice_fun_U x G H4 (H7 x i))).",
            "VernacExtend",
            "29fc29dafa61ffcf9748350bb0ca9b9bed1579f4"
        ],
        [
            "destruct (compactness_on_indexed_covers _ _ cover H6) as [subcover].",
            "VernacExtend",
            "e897ee86579df4632b92a37ea5d669dc82a63f8e"
        ],
        [
            "destruct a as [x i].",
            "VernacExtend",
            "435dac3a51ae49fdd5e17dae1f715ccc8faa5c2c"
        ],
        [
            "apply subspace_inc_continuous.",
            "VernacExtend",
            "a867e71345fc191aaa382d77e27f46da75e8c4a4"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl cover.",
            "VernacExtend",
            "54d1c9b21c81772ffa8b1d9cb75308bd5a7c9955"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "exists (IndexedUnion (fun x:{x:point_set (SubspaceTopology F) | In subcover x} => let (x,i):=proj1_sig x in choice_fun_U x G H4 (H7 x i))).",
            "VernacExtend",
            "19e005380744eaaa0d86a5eb8153e81261110d92"
        ],
        [
            "exists (IndexedIntersection (fun x:{x:point_set (SubspaceTopology F) | In subcover x} => let (x,i):=proj1_sig x in choice_fun_V x G H4 (H7 x i))).",
            "VernacExtend",
            "f73e1746344ae5bb6bc3b89ef98263447dc66b85"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply open_indexed_union.",
            "VernacExtend",
            "1a2c9d33f1a4af4d6bb467ac473b95e3197127b5"
        ],
        [
            "destruct a as [[x]].",
            "VernacExtend",
            "dce3bf6f2f4729a4f46be73e950159f3505ed6b4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply open_finite_indexed_intersection.",
            "VernacExtend",
            "a94cb386a7b5cab0ed86aa162a6680f186a7ae5c"
        ],
        [
            "apply Finite_ens_type; trivial.",
            "VernacExtend",
            "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
        ],
        [
            "destruct a as [[x]].",
            "VernacExtend",
            "dce3bf6f2f4729a4f46be73e950159f3505ed6b4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "intros x ?.",
            "VernacExtend",
            "bfdd4c2bcbbe2e719ec18723137b8a9e953c1f36"
        ],
        [
            "assert (In (@Full_set (point_set (SubspaceTopology F))) (exist _ x H10)) by constructor.",
            "VernacExtend",
            "edb0666c8f7c02051891884ee9bc5423c106cc40"
        ],
        [
            "rewrite <- H9 in H11.",
            "VernacExtend",
            "8c65138c8f329f8e1439d5b05baff2fca091162a"
        ],
        [
            "remember (exist _ x H10) as xsig.",
            "VernacExtend",
            "9ddba3b418c2f429396f99a85c40ed0091a76193"
        ],
        [
            "destruct H11.",
            "VernacExtend",
            "f9356eb773be7520ebefe6aa4934a6b1dd23e506"
        ],
        [
            "destruct a as [x'].",
            "VernacExtend",
            "26a025d0f333672d686db996b243cf58a2e8d859"
        ],
        [
            "destruct x' as [x'].",
            "VernacExtend",
            "02d1570d17445672a747b7e9eb2a35979cf84467"
        ],
        [
            "rewrite Heqxsig in H11; clear x0 Heqxsig.",
            "VernacExtend",
            "7fa45a2bb5b08f476e012f14b900d4ab3832962a"
        ],
        [
            "simpl in H11.",
            "VernacExtend",
            "f2ac9771be73bd1822b73a4ad13392ccef382f09"
        ],
        [
            "destruct H11.",
            "VernacExtend",
            "f9356eb773be7520ebefe6aa4934a6b1dd23e506"
        ],
        [
            "simpl in H11.",
            "VernacExtend",
            "f2ac9771be73bd1822b73a4ad13392ccef382f09"
        ],
        [
            "exists (exist _ (exist _ x' i0) i).",
            "VernacExtend",
            "d974e429a05dee9a6ff323a2cf5d1cb19b515da7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct a as [x'].",
            "VernacExtend",
            "26a025d0f333672d686db996b243cf58a2e8d859"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct x' as [x'].",
            "VernacExtend",
            "02d1570d17445672a747b7e9eb2a35979cf84467"
        ],
        [
            "assert (Included G (choice_fun_V x' G H4 (H7 x' i0))) by apply H3.",
            "VernacExtend",
            "08fe6a1352e62a3fd35af523fd238854c9af3ff0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets; red; intros.",
            "VernacExtend",
            "e719e538bbc3ef5b9d86dde4dadb26c96c4dca7e"
        ],
        [
            "destruct H10.",
            "VernacExtend",
            "cb31aaea41a55b08f29b80063ae904139e35c440"
        ],
        [
            "destruct H10.",
            "VernacExtend",
            "cb31aaea41a55b08f29b80063ae904139e35c440"
        ],
        [
            "destruct H11.",
            "VernacExtend",
            "f9356eb773be7520ebefe6aa4934a6b1dd23e506"
        ],
        [
            "pose proof (H11 a).",
            "VernacExtend",
            "3d879e2cbbb28498a42eeb1911526469ad299e48"
        ],
        [
            "destruct a as [[x']].",
            "VernacExtend",
            "839da35f71a7a4a69914f38376b3ca8d4bf4dd83"
        ],
        [
            "simpl in H12.",
            "VernacExtend",
            "370c3a9d3731cb09079b40ee4a5c3b318ce6302c"
        ],
        [
            "simpl in H10.",
            "VernacExtend",
            "6acaa2af25fff35ccd9e9f70e896f9c83855b8e6"
        ],
        [
            "replace (@Empty_set (point_set X)) with (Intersection (choice_fun_U x' G H4 (H7 x' i)) (choice_fun_V x' G H4 (H7 x' i))).",
            "VernacExtend",
            "c1d20d33a70f6d3a801104c754c6bbe0e3d1396f"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "compactness_on_indexed_covers",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose (cover := ImageFamily C).",
                        "VernacExtend",
                        "5746900e11f0fb55408719003abee2a9e42f4c0d"
                    ]
                },
                {
                    "command": [
                        "destruct (H cover) as [subcover].",
                        "VernacExtend",
                        "e22db289f3450b6fa26c745320cfc9ddd0aedab6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; apply H0.",
                        "VernacExtend",
                        "502cc5c1e6a87d9a9eda8e17b4e6f284a29f697b"
                    ]
                },
                {
                    "command": [
                        "unfold cover; rewrite <- indexed_to_family_union; trivial.",
                        "VernacExtend",
                        "5e879aa3fcdc5387b8fe59ae49941bb5fea48e8e"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [? []].",
                        "VernacExtend",
                        "f26282f7fcf51cf31c4556c96e1da43e29c52a4f"
                    ]
                },
                {
                    "command": [
                        "destruct (finite_choice _ _ (fun (U:{U:Ensemble (point_set X) | In subcover U}) (a:A) => proj1_sig U = C a)) as [choice_fun].",
                        "VernacExtend",
                        "c45731f2504a86ba611847a549e3525bd03320b3"
                    ]
                },
                {
                    "command": [
                        "apply Finite_ens_type; trivial.",
                        "VernacExtend",
                        "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
                    ]
                },
                {
                    "command": [
                        "destruct x as [U].",
                        "VernacExtend",
                        "e06a0a85ec4a7ff82a30ebdc2bde478dcd9d9851"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply H3 in i.",
                        "VernacExtend",
                        "7f28eca40b792bcfacdf47bc3be4eb6536fc9227"
                    ]
                },
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "exists x; trivial.",
                        "VernacExtend",
                        "7285f236ab8c1f67b4215a83948007459abd7ae6"
                    ]
                },
                {
                    "command": [
                        "exists (Im Full_set choice_fun).",
                        "VernacExtend",
                        "83d0f75210e5c54d4f6cb429c3dcde52a7253e50"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_img.",
                        "VernacExtend",
                        "538e66e7585c29985235e1eebec0578e3ac259ce"
                    ]
                },
                {
                    "command": [
                        "apply Finite_ens_type; trivial.",
                        "VernacExtend",
                        "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
                    ]
                },
                {
                    "command": [
                        "intros; apply classic.",
                        "VernacExtend",
                        "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4 in H6.",
                        "VernacExtend",
                        "97a93c20fc88763c6d91ebe6ade709db41d4af5e"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "assert (In (Im Full_set choice_fun) (choice_fun (exist _ S H6))).",
                        "VernacExtend",
                        "61b7e723ab26c5e4af84e1deeb6edb81ed7c943f"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ S H6).",
                        "VernacExtend",
                        "8e16aedbc52001f969ff5e7bf0cb542ffcfe78cd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ (choice_fun (exist _ S H6)) H8).",
                        "VernacExtend",
                        "1e01c776497c6ee2ce48855a004c7a7e37121409"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5.",
                        "VernacExtend",
                        "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compact_finite_nonempty_closed_intersection",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "pose (C := [ U:Ensemble (point_set X) | In F (Complement U) ]).",
                        "VernacExtend",
                        "3222eb6e360f7aae342c029396771b9e0be72f50"
                    ]
                },
                {
                    "command": [
                        "unshelve refine (let H3:=(H C _ _) in _).",
                        "VernacExtend",
                        "64cd0e57d76172a3a3dfcc17f008d5fad68bf328"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H3.",
                        "VernacExtend",
                        "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
                    ]
                },
                {
                    "command": [
                        "apply closed_complement_open; trivial.",
                        "VernacExtend",
                        "8411a01c5e6767d0b873def06848a00813b5026c"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "contradiction H4.",
                        "VernacExtend",
                        "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
                    ]
                },
                {
                    "command": [
                        "exists (Complement S).",
                        "VernacExtend",
                        "a984a6ee84648949a093284c103f6edc389a85b4"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
                    ]
                },
                {
                    "command": [
                        "exact H6.",
                        "VernacExtend",
                        "50182aa41a20945b5f59106131b0993d3e1cc628"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [C' [? [? ?]]].",
                        "VernacExtend",
                        "8fbfc9ab11636d90d5c3769a7aad79c1fe4bca12"
                    ]
                },
                {
                    "command": [
                        "pose (F' := [G : Ensemble (point_set X) | In C' (Complement G)]).",
                        "VernacExtend",
                        "c196c853ebb8c80779a746f46a5d860eb6d11091"
                    ]
                },
                {
                    "command": [
                        "unshelve refine (let H6 := (H1 F' _ _) in _).",
                        "VernacExtend",
                        "56637a3a84ed24fabd7686388fd349f3ac56672c"
                    ]
                },
                {
                    "command": [
                        "assert (F' = Im C' Complement).",
                        "VernacExtend",
                        "7ab0ea57a75b7ab42f58dd8c1288dbf2d755dece"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "exists (Complement x); trivial.",
                        "VernacExtend",
                        "14bc9ffd3d3531b287bd0fece57a8d86bd240c79"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Complement_Complement.",
                        "VernacExtend",
                        "0a1a167f9f8c4f543489be7634bdeb567e88e29b"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "02ab19fc9e9940bd0586d1bde690822ffc5f54a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H6; apply finite_image.",
                        "VernacExtend",
                        "939ed6b9909918588df6aaaf3678ba026b988217"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "apply H4 in H6.",
                        "VernacExtend",
                        "74b9325551ba595a896b7fdfa6f911d6ec3bc143"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement in H6; trivial.",
                        "VernacExtend",
                        "6e8e510a5864225001907a6bb99cbad3613ba832"
                    ]
                },
                {
                    "command": [
                        "destruct H6 as [x0].",
                        "VernacExtend",
                        "1592986861b824f77f19104132c576d2cbccaa73"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "assert (In (FamilyUnion C') x).",
                        "VernacExtend",
                        "e2f8f399a654ca821ef8a6b569c789c5c2ce34a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; constructor.",
                        "VernacExtend",
                        "53a98c559a94fa3b9ad58717544b77736dde7d4a"
                    ]
                },
                {
                    "command": [
                        "destruct H7.",
                        "VernacExtend",
                        "f6b4c745a19e0b13add33f75bb62e394f2c83618"
                    ]
                },
                {
                    "command": [
                        "assert (In (Complement S) x).",
                        "VernacExtend",
                        "e0f4f949bda07124dd23fbe4d265aff3f0bc2732"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
                    ]
                },
                {
                    "command": [
                        "contradiction H9.",
                        "VernacExtend",
                        "7cc52213081000a3b14a104e654d740455ab6917"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_nonempty_closed_intersection_impl_compact",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "pose (F := [ G:Ensemble (point_set X) | In C (Complement G) ]).",
                        "VernacExtend",
                        "41fe98f523d519977673c149ea53380c46e6a215"
                    ]
                },
                {
                    "command": [
                        "unshelve refine (let H3 := (H F _ _) in _).",
                        "VernacExtend",
                        "8c063e514e2fa441c44ab1832e3d2256c86c57fb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "apply H0; trivial.",
                        "VernacExtend",
                        "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "exists [ U:Ensemble (point_set X) | In F' (Complement U) ].",
                        "VernacExtend",
                        "ea42b7bf9ac7c79354dcdd21b3b6008f7a914625"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "assert ([U:Ensemble (point_set X) | In F' (Complement U)] = Im F' Complement).",
                        "VernacExtend",
                        "d4a43ba5efef52ca715815bd0d6edebd85a426d7"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "exists (Complement x); trivial.",
                        "VernacExtend",
                        "14bc9ffd3d3531b287bd0fece57a8d86bd240c79"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Complement_Complement.",
                        "VernacExtend",
                        "0a1a167f9f8c4f543489be7634bdeb567e88e29b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "rewrite H7; rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "02ab19fc9e9940bd0586d1bde690822ffc5f54a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H6; apply finite_image; trivial.",
                        "VernacExtend",
                        "1f80a5d657accf22fad0f4682375cc6415066a32"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "apply H4 in H6.",
                        "VernacExtend",
                        "74b9325551ba595a896b7fdfa6f911d6ec3bc143"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement in H6; trivial.",
                        "VernacExtend",
                        "6e8e510a5864225001907a6bb99cbad3613ba832"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "contradiction H5.",
                        "VernacExtend",
                        "9391af834bf331ad2c1be2f6310c10ced385e172"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; red; intro.",
                        "VernacExtend",
                        "2a5a8dc9a03c840ced88d09c15af6a418b2051d2"
                    ]
                },
                {
                    "command": [
                        "contradiction H7.",
                        "VernacExtend",
                        "47523d9070973516bc7a3cb24cc82cc2e9dd2ab0"
                    ]
                },
                {
                    "command": [
                        "exists (Complement S).",
                        "VernacExtend",
                        "a984a6ee84648949a093284c103f6edc389a85b4"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
                    ]
                },
                {
                    "command": [
                        "exact H9.",
                        "VernacExtend",
                        "6afcdb5a3ddac99d13c019fefd4457c64d0b9ba5"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "assert (In (FamilyUnion C) x).",
                        "VernacExtend",
                        "f1ecfa70c3091e62b2aabb6f89b3ed97e4432f3d"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; constructor.",
                        "VernacExtend",
                        "9a5caad8f37577aab4893d099285fbce5b872bb3"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "assert (In (Complement S) x).",
                        "VernacExtend",
                        "e0f4f949bda07124dd23fbe4d265aff3f0bc2732"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "54544f3890fd7b9d00aa3d6e9730d8b01426cd93"
                    ]
                },
                {
                    "command": [
                        "contradiction H6.",
                        "VernacExtend",
                        "2c94f28dff1340ba5d7c0fd720a0fb1084c60dc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compact_impl_filter_cluster_point",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (compact_finite_nonempty_closed_intersection _ H [ G:Ensemble (point_set X) | In (filter_family F) G /\\ closed G ]) as [x0].",
                        "VernacExtend",
                        "f36548de9b04a2336515e6f3ae60fee2a3882bc5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [[]]; trivial.",
                        "VernacExtend",
                        "594814a30ec118ad6eca82454a70318d610036b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (closed (FamilyIntersection F')).",
                        "VernacExtend",
                        "e1d441f4d0161758e79e617e81cc7579d5d1ce22"
                    ]
                },
                {
                    "command": [
                        "apply closed_family_intersection.",
                        "VernacExtend",
                        "d3078420e976599c427faf794741b2e75c86f3ed"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H2.",
                        "VernacExtend",
                        "d3132def680733ecd29eb5bc865040ad28c4dfa0"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[]]; trivial.",
                        "VernacExtend",
                        "677cd5ab35d7ef54797a64a691482507e9228c0d"
                    ]
                },
                {
                    "command": [
                        "assert (In (filter_family F) (FamilyIntersection F')).",
                        "VernacExtend",
                        "673d343e67f3ed2bb7587e4f20113baa49a3131a"
                    ]
                },
                {
                    "command": [
                        "clear H2.",
                        "VernacExtend",
                        "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_family_intersection.",
                        "VernacExtend",
                        "ab048e73614d165c02e20ad98c560170b2ab4e9e"
                    ]
                },
                {
                    "command": [
                        "apply filter_full.",
                        "VernacExtend",
                        "b7609a27fd1698573f204246956e7be964a50517"
                    ]
                },
                {
                    "command": [
                        "replace (FamilyIntersection (Add A x)) with (Intersection (FamilyIntersection A) x).",
                        "VernacExtend",
                        "aa7367cb2624f3758bc2e17936f2e3c66053cf82"
                    ]
                },
                {
                    "command": [
                        "apply filter_intersection.",
                        "VernacExtend",
                        "d58545a8734282cd50895888963335c531417992"
                    ]
                },
                {
                    "command": [
                        "apply IHFinite.",
                        "VernacExtend",
                        "5a95fcd27e91ab5fc8a3de3a60cec30f77efc076"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "assert (In (Add A x) x) by (right; constructor).",
                        "VernacExtend",
                        "3dbd7204a5521c2da745584749ab0ebf53641d94"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H3.",
                        "VernacExtend",
                        "dd08684d66bb4636666a3dcf829310c46bb9bf9d"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [[]]; trivial.",
                        "VernacExtend",
                        "ad465971e3d68a24c46a51b4a88b63a3398264fc"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "apply H3; trivial.",
                        "VernacExtend",
                        "d51b130dcb254ceaa7e48b350c576ecd56255d34"
                    ]
                },
                {
                    "command": [
                        "destruct H5; trivial.",
                        "VernacExtend",
                        "1042e4df48a019668038591898ad361c3c4aeb42"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intro.",
                        "VernacExtend",
                        "55e5f4eb66528dc4c7274b2b611cda0433510c40"
                    ]
                },
                {
                    "command": [
                        "contradiction (filter_empty _ F).",
                        "VernacExtend",
                        "0ecf1899ba9c8209d345f19bddbc3a8eb62393c9"
                    ]
                },
                {
                    "command": [
                        "replace (@Empty_set (point_set X)) with (FamilyIntersection F'); trivial.",
                        "VernacExtend",
                        "1ba02b869da228095667ef8fa64f53d00e93add3"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "contradiction H4.",
                        "VernacExtend",
                        "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
                    ]
                },
                {
                    "command": [
                        "exists x; trivial.",
                        "VernacExtend",
                        "7285f236ab8c1f67b4215a83948007459abd7ae6"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply filter_upward_closed with S; trivial.",
                        "VernacExtend",
                        "78d1d6b12f869365038bdb07a117947edac8945a"
                    ]
                },
                {
                    "command": [
                        "apply closure_inflationary.",
                        "VernacExtend",
                        "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
                    ]
                },
                {
                    "command": [
                        "apply closure_closed.",
                        "VernacExtend",
                        "aaac271b971cb06e123ccb1a2bdbf617e7a4c119"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_cluster_point_impl_compact",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply finite_nonempty_closed_intersection_impl_compact.",
                        "VernacExtend",
                        "8de7200caa9e3b1ac562391e962b226cbf51a0e0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unshelve refine (let H2:=_ in let filt := Build_Filter_from_subbasis F H2 in _).",
                        "VernacExtend",
                        "c07de7f6a5f06b47cde2e7169c2852e1afd401a3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite indexed_to_family_intersection.",
                        "VernacExtend",
                        "4345b09d6a6a082eeec047fe4ca1925426d031be"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_img; trivial.",
                        "VernacExtend",
                        "34399d150e3ff0412508c9edd7d13ecd9334f579"
                    ]
                },
                {
                    "command": [
                        "intros; apply classic.",
                        "VernacExtend",
                        "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; apply H3.",
                        "VernacExtend",
                        "d56922a06b51b56d6479364d6a55764c2c323579"
                    ]
                },
                {
                    "command": [
                        "assert (filter_subbasis filt F) by apply filter_from_subbasis_subbasis.",
                        "VernacExtend",
                        "d466eedf320da7945f878bbbee210dde32a61b8d"
                    ]
                },
                {
                    "command": [
                        "destruct (H filt) as [x0].",
                        "VernacExtend",
                        "1e75dcc61b9e57a12915342096055dd6da34565d"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "constructor; intros.",
                        "VernacExtend",
                        "6563c593bcf639ae667d436a08cab59e1ac2dcce"
                    ]
                },
                {
                    "command": [
                        "assert (closed S) by (apply H0; trivial).",
                        "VernacExtend",
                        "9baad26a64a715bcf7b83df374c18c7730c14d37"
                    ]
                },
                {
                    "command": [
                        "assert (In (filter_family filt) S).",
                        "VernacExtend",
                        "78c6995a9e8f6441770667427a966dbd172354b3"
                    ]
                },
                {
                    "command": [
                        "apply (filter_subbasis_elements _ _ H3); trivial.",
                        "VernacExtend",
                        "ed3fa3015f2eae433e400c9e8b074abd138a201c"
                    ]
                },
                {
                    "command": [
                        "pose proof (H4 _ H7).",
                        "VernacExtend",
                        "c70a7ba418c4e442f2d99ad784533186e06e0812"
                    ]
                },
                {
                    "command": [
                        "rewrite closure_fixes_closed in H8; trivial.",
                        "VernacExtend",
                        "1a52b48886f12d34611d8958fcf9575794af43b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ultrafilter_limit_impl_compact",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply filter_cluster_point_impl_compact.",
                        "VernacExtend",
                        "f028993bd4a736f30de4bf1ece4cfd5071ab33fd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (ultrafilter_extension F) as [U].",
                        "VernacExtend",
                        "58f8055e2e53277117f0d5e35a6d1721740888e3"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct (H _ H1) as [x0].",
                        "VernacExtend",
                        "aa4a80591e6ef6097185dc395c62110411bb0860"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply filter_limit_is_cluster_point in H2.",
                        "VernacExtend",
                        "5dd7bffe8afbd7e4d99a448f508d47b20dad0690"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H3.",
                        "VernacExtend",
                        "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
                    ]
                },
                {
                    "command": [
                        "apply H2; trivial.",
                        "VernacExtend",
                        "91036970bc344118009ef71eaf39ec9fc45e9ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_cluster_point_impl_compact",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply filter_cluster_point_impl_compact.",
                        "VernacExtend",
                        "f028993bd4a736f30de4bf1ece4cfd5071ab33fd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (H _ (filter_to_net _ F)) as [x0].",
                        "VernacExtend",
                        "b5d9bd5046d4a3c755c103d9be1c4f8a3bec7c65"
                    ]
                },
                {
                    "command": [
                        "cut (inhabited (point_set X)).",
                        "VernacExtend",
                        "0114a0ac05d501af5d6192fc32c9297a7bf08e27"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [x].",
                        "VernacExtend",
                        "f84b11e2df7efa945c2ce65cc7178328c0501c06"
                    ]
                },
                {
                    "command": [
                        "exists.",
                        "VernacExtend",
                        "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Build_filter_to_net_DS_set with Full_set x.",
                        "VernacExtend",
                        "c686bf86ffd028ac9ae851d3cb8106e4391a688d"
                    ]
                },
                {
                    "command": [
                        "apply filter_full.",
                        "VernacExtend",
                        "b7609a27fd1698573f204246956e7be964a50517"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intro.",
                        "VernacExtend",
                        "55e5f4eb66528dc4c7274b2b611cda0433510c40"
                    ]
                },
                {
                    "command": [
                        "contradiction (filter_empty _ F).",
                        "VernacExtend",
                        "0ecf1899ba9c8209d345f19bddbc3a8eb62393c9"
                    ]
                },
                {
                    "command": [
                        "replace (@Empty_set (point_set X)) with (@Full_set (point_set X)).",
                        "VernacExtend",
                        "de0c15214091580e9d065f27b5358d3f4f25470f"
                    ]
                },
                {
                    "command": [
                        "apply filter_full.",
                        "VernacExtend",
                        "b7609a27fd1698573f204246956e7be964a50517"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "contradiction H0.",
                        "VernacExtend",
                        "198cc5fe08678df71b7d70ff1acc682532bbeeca"
                    ]
                },
                {
                    "command": [
                        "exists; exact x.",
                        "VernacExtend",
                        "b41d38fcfb0b887cf0dc3367167a790102767404"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "apply filter_to_net_cluster_point_impl_filter_cluster_point.",
                        "VernacExtend",
                        "94603527e582fc037767f4dcf4be7b64b965b4d5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compact_closed",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (classic (Inhabited S)).",
                        "VernacExtend",
                        "d338d0b748d3937c77f751a50a75b2bdd08babbe"
                    ]
                },
                {
                    "command": [
                        "assert (closure S = S).",
                        "VernacExtend",
                        "5228d6d683f8121f816e567b7dafd0ff95643985"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split.",
                        "VernacExtend",
                        "a4c57ea69808be923621e13ef05d8e11d11caf6f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (net_limits_determine_topology _ _ H2) as [I0 [y []]].",
                        "VernacExtend",
                        "a7112ee9b988135c9fe3f6343b0af6e8eeca8a0e"
                    ]
                },
                {
                    "command": [
                        "pose (yS (i:DS_set I0) := exist (fun x:point_set X => In S x) (y i) (H3 i)).",
                        "VernacExtend",
                        "e560db1099e35c6031c5f0c33cbf15e3e1347450"
                    ]
                },
                {
                    "command": [
                        "assert (inhabited (point_set (SubspaceTopology S))).",
                        "VernacExtend",
                        "42c8fe0aef8fb00c85332081b26bb049348d8d0d"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "exists.",
                        "VernacExtend",
                        "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
                    ]
                },
                {
                    "command": [
                        "exists x0; trivial.",
                        "VernacExtend",
                        "3c02462b19bf4d0b1ef395171cd136c8c89d9991"
                    ]
                },
                {
                    "command": [
                        "assert (inhabited (DS_set I0)) as HinhI0.",
                        "VernacExtend",
                        "1e3d9d70a4c1b0c2030ce1bf1d9c5285c842548b"
                    ]
                },
                {
                    "command": [
                        "red in H4.",
                        "VernacExtend",
                        "fb009c7187d3c583c5dfa4ed8fab60659bf67bec"
                    ]
                },
                {
                    "command": [
                        "destruct (H4 Full_set) as [i0]; auto with topology.",
                        "VernacExtend",
                        "25b2d545e44e3ecdef1078320b807c00d4f7110c"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "pose proof (compact_impl_net_cluster_point (SubspaceTopology S) H0 _ yS HinhI0).",
                        "VernacExtend",
                        "7b5cfe5ccbde9eed03531bd6cdb6d186dcb9044f"
                    ]
                },
                {
                    "command": [
                        "destruct H6 as [[x0]].",
                        "VernacExtend",
                        "e8f4a2c085fa2f15f289cdd23307f65dee858102"
                    ]
                },
                {
                    "command": [
                        "apply net_cluster_point_impl_subnet_converges in H6.",
                        "VernacExtend",
                        "263a262fce20b3cc76bcc6e667db19cc7f2be896"
                    ]
                },
                {
                    "command": [
                        "destruct H6 as [J [y' []]].",
                        "VernacExtend",
                        "5568769bfa484675839c852a715108d8db69be27"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "assert (net_limit (fun j:DS_set J => y (h j)) x0).",
                        "VernacExtend",
                        "dc69ddd9dc42258c9ba5d2ab258cc5fbf2788440"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_preserves_net_limits with (f:=subspace_inc S) (Y:=X) in H7.",
                        "VernacExtend",
                        "faeb7c55c98d04be1ac062d4a2a626d5494184dc"
                    ]
                },
                {
                    "command": [
                        "simpl in H7.",
                        "VernacExtend",
                        "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere.",
                        "VernacExtend",
                        "66315e214acc36a7b42d68e92f06119372c45a83"
                    ]
                },
                {
                    "command": [
                        "apply subspace_inc_continuous.",
                        "VernacExtend",
                        "a867e71345fc191aaa382d77e27f46da75e8c4a4"
                    ]
                },
                {
                    "command": [
                        "assert (net_limit (fun j:DS_set J => y (h j)) x).",
                        "VernacExtend",
                        "2b23fb1d62547c5e4e78a389e38792f0917b1343"
                    ]
                },
                {
                    "command": [
                        "apply subnet_limit with I0 y; trivial.",
                        "VernacExtend",
                        "0a9c1b67eefbed22c64646270dac78387fb3c50f"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "assert (x = x0).",
                        "VernacExtend",
                        "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
                    ]
                },
                {
                    "command": [
                        "exact (Hausdorff_impl_net_limit_unique _ H _ _ H10 H9).",
                        "VernacExtend",
                        "d94f6d3e36cadf14ac5034e31a029b9bcc53da0e"
                    ]
                },
                {
                    "command": [
                        "rewrite H11; trivial.",
                        "VernacExtend",
                        "3e180f800717f8a505514c151c80440d97db06cf"
                    ]
                },
                {
                    "command": [
                        "destruct (H4 Full_set).",
                        "VernacExtend",
                        "f87a711539f657a53cca5bff162ed21f69be83eb"
                    ]
                },
                {
                    "command": [
                        "apply open_full.",
                        "VernacExtend",
                        "f900ff977cf6905b0471287a8924982fbf2a3e0b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists; exact x1.",
                        "VernacExtend",
                        "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "apply closure_inflationary.",
                        "VernacExtend",
                        "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; apply closure_closed.",
                        "VernacExtend",
                        "0a7a6ac713070416233ca1fe7206aeda0087acd5"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "assert (Complement S = Full_set).",
                        "VernacExtend",
                        "5d5f5c7cfc6f05c3b0fe702eb937ffdd2de90f0b"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "contradiction H1; exists x; trivial.",
                        "VernacExtend",
                        "36b3567be445853054de56cde81966cc57ab1e82"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; apply open_full.",
                        "VernacExtend",
                        "9c785bcac5fb5c80658d49788cf7cd214265f279"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_compact",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply net_cluster_point_impl_compact.",
                        "VernacExtend",
                        "7630d9c7a4db2bd6d03ee5ea1abd2cd8bb6180c7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (compact_impl_net_cluster_point _ H _ (fun i:DS_set I => subspace_inc _ (x i))) as [x0].",
                        "VernacExtend",
                        "0df0294f298dda264edc2f47c291c7d31196232f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assert (In S x0).",
                        "VernacExtend",
                        "1509c15a814f70d9a6cf544a0477ff4493ab0397"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (closure_fixes_closed S); trivial.",
                        "VernacExtend",
                        "34ee4f0f404b760c16be2ad8798002d1f9484353"
                    ]
                },
                {
                    "command": [
                        "apply net_cluster_point_in_closure with (2:=H2).",
                        "VernacExtend",
                        "dd28532396b10de8f7319e1d7246a96c5ea4fc49"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [i0].",
                        "VernacExtend",
                        "a833ad996c5186358f75d2622207157e0325abb0"
                    ]
                },
                {
                    "command": [
                        "exists i0.",
                        "VernacExtend",
                        "145e6965fdbf4c08d7d04db51a555a18926e959f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (x j).",
                        "VernacExtend",
                        "eeab7b93e94758ba4d1a0ba96a2672c727b1fb1a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ x0 H3).",
                        "VernacExtend",
                        "5d68d2df54126afcbd1433ac1bddf507c9ab3779"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (subspace_topology_topology _ _ _ H4) as [V []].",
                        "VernacExtend",
                        "9ea564cab755935bcf0a66b596d885c7fe527023"
                    ]
                },
                {
                    "command": [
                        "rewrite H7 in H5.",
                        "VernacExtend",
                        "e92784956538dea547fb4d09620f99424e4a73cc"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "simpl in H5.",
                        "VernacExtend",
                        "03fbfc7bb6b248b41f6241227db3e5c410547157"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 V H6 H5 i) as [j []]; trivial.",
                        "VernacExtend",
                        "61bfd8a886c654f74e570be01113c130b669eb7a"
                    ]
                },
                {
                    "command": [
                        "exists j; split; trivial.",
                        "VernacExtend",
                        "61eabc3d0804f6914a3c6bf0ee34afe021c1bdd4"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compact_image",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose (B := fun U:{U:Ensemble (point_set Y) | In C U} => inverse_image f (proj1_sig U)).",
                        "VernacExtend",
                        "52cca6be092ca10d84947b453bf214c25e3c6701"
                    ]
                },
                {
                    "command": [
                        "destruct (compactness_on_indexed_covers _ _ B H) as [subcover].",
                        "VernacExtend",
                        "0674e76b877caa554f583da19e46988d73944318"
                    ]
                },
                {
                    "command": [
                        "destruct a as [U].",
                        "VernacExtend",
                        "24d3b7ebd43e7bd56f73dd8d8efb865c568b1bb8"
                    ]
                },
                {
                    "command": [
                        "unfold B; simpl.",
                        "VernacExtend",
                        "2abf187907e6d703f821e9622e714c1ba32eeb0a"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply H2; trivial.",
                        "VernacExtend",
                        "91036970bc344118009ef71eaf39ec9fc45e9ef2"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert (In (FamilyUnion C) (f x)).",
                        "VernacExtend",
                        "267f0eba2c57c26fb1600272f82ed34b74bc45bf"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; constructor.",
                        "VernacExtend",
                        "2ae4c54340025dd35d7802be6850594b44fdca8a"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H5 as [V].",
                        "VernacExtend",
                        "f101be6d949b47bd70add87f1f9eb2668c7497d1"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ V H6).",
                        "VernacExtend",
                        "b392d2e8f53d1e8a4287f7142cd28655c89a7584"
                    ]
                },
                {
                    "command": [
                        "unfold B; simpl.",
                        "VernacExtend",
                        "2abf187907e6d703f821e9622e714c1ba32eeb0a"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "exists (Im subcover (@proj1_sig _ (fun U:Ensemble (point_set Y) => In C U))).",
                        "VernacExtend",
                        "b7f98deed9051a10393830c15961012c4712d6b7"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply finite_image; trivial.",
                        "VernacExtend",
                        "0e504cb7ed4b51f172242f8d83b7901a32a7e207"
                    ]
                },
                {
                    "command": [
                        "red; intros V ?.",
                        "VernacExtend",
                        "eb2a363faf62c757de7d6a93c8889f8f0367fbac"
                    ]
                },
                {
                    "command": [
                        "destruct H6 as [[U]].",
                        "VernacExtend",
                        "0c1e5345b699e2be06b8a5449fd1a11f1199e5d9"
                    ]
                },
                {
                    "command": [
                        "simpl in H7.",
                        "VernacExtend",
                        "3dd5ef80f970001d4ad1d0945b0bcb5718f14bc3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros y ?.",
                        "VernacExtend",
                        "3a1ae9634ca0471c55a8f2c0506ca4e582893399"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 y) as [x].",
                        "VernacExtend",
                        "1535c6a1d06175ebf714d2db3eebc0ba607ec088"
                    ]
                },
                {
                    "command": [
                        "assert (In (IndexedUnion (fun a':{a' | In subcover a'} => B (proj1_sig a'))) x).",
                        "VernacExtend",
                        "e112e42748a1df357622bcd31818172e2104eaa1"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; constructor.",
                        "VernacExtend",
                        "53a98c559a94fa3b9ad58717544b77736dde7d4a"
                    ]
                },
                {
                    "command": [
                        "destruct H8 as [[[U]]].",
                        "VernacExtend",
                        "7a00e21b093c91f8d42642d04ff654eaab05cb38"
                    ]
                },
                {
                    "command": [
                        "exists U.",
                        "VernacExtend",
                        "5fa927449745739df126de32a00d9a77c57aa9f7"
                    ]
                },
                {
                    "command": [
                        "simpl in H8.",
                        "VernacExtend",
                        "3ffa163638f0cd702536b03d79bee02d960b0fdb"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ U i); trivial.",
                        "VernacExtend",
                        "14f231f165f01ef6f4aa3c85981787e8efcdb229"
                    ]
                },
                {
                    "command": [
                        "unfold B in H8; simpl in H8.",
                        "VernacExtend",
                        "3538bd92bfd88dd1027efb443f4a05c141e51655"
                    ]
                },
                {
                    "command": [
                        "destruct H8.",
                        "VernacExtend",
                        "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}