{
    "filename": "SeparatednessAxioms.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export TopologicalSpaces.",
            "VernacRequire",
            "45674cb36fa7313eb78e1518bfa113cb38c877af"
        ],
        [
            "Require Import InteriorsClosures.",
            "VernacRequire",
            "8ae9bf2d9a2b62e8b8cc1c502c657414289f57f3"
        ],
        [
            "Definition T0_sep (X:TopologicalSpace) : Prop := forall x y:point_set X, x <> y -> (exists U:Ensemble (point_set X), open U /\\ In U x /\\ ~ In U y) \\/ (exists U:Ensemble (point_set X), open U /\\ ~ In U x /\\ In U y).",
            "VernacDefinition",
            "37f86426985db29f8aef57967e4625f780db2fa9"
        ],
        [
            "Definition T1_sep (X:TopologicalSpace) : Prop := forall x:point_set X, closed (Singleton x).",
            "VernacDefinition",
            "07d445704ea82aefc9776992fecac6a2788f25f6"
        ],
        [
            "Definition Hausdorff (X:TopologicalSpace) : Prop := forall x y:point_set X, x <> y -> exists U:Ensemble (point_set X), exists V:Ensemble (point_set X), open U /\\ open V /\\ In U x /\\ In V y /\\ Intersection U V = Empty_set.",
            "VernacDefinition",
            "e189bd7c36581944b86712420d48d7c17c169acf"
        ],
        [
            "Definition T2_sep := Hausdorff.",
            "VernacDefinition",
            "b6eb37f2d67afe75227382c6b4042f56a4abc5da"
        ],
        [
            "Definition T3_sep (X:TopologicalSpace) : Prop := T1_sep X /\\ forall (x:point_set X) (F:Ensemble (point_set X)), closed F -> ~ In F x -> exists U:Ensemble (point_set X), exists V:Ensemble (point_set X), open U /\\ open V /\\ In U x /\\ Included F V /\\ Intersection U V = Empty_set.",
            "VernacDefinition",
            "47e5f23f9a39da906b1c5bdbd4aceb85e3ff0129"
        ],
        [
            "Definition normal_sep (X:TopologicalSpace) : Prop := T1_sep X /\\ forall (F G:Ensemble (point_set X)), closed F -> closed G -> Intersection F G = Empty_set -> exists U:Ensemble (point_set X), exists V:Ensemble (point_set X), open U /\\ open V /\\ Included F U /\\ Included G V /\\ Intersection U V = Empty_set.",
            "VernacDefinition",
            "4c093cfd81bee9cd9e8b4c5021c515b8de9e99a7"
        ],
        [
            "Definition T4_sep := normal_sep.",
            "VernacDefinition",
            "d8546abb39a4485d133fc95559cbce0d7b0f59b9"
        ],
        [
            "Lemma T1_sep_impl_T0_sep: forall X:TopologicalSpace, T1_sep X -> T0_sep X.",
            "VernacStartTheoremProof",
            "da26b1d42a00a43be30c36b5279d2a0667f6712d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (Complement (Singleton y)); repeat split.",
            "VernacExtend",
            "39a016ebe1f409ed50d77f7f1db20b2fbfb58c26"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "repeat red; intro.",
            "VernacExtend",
            "85d8fdec20e7c94c78327784ff0e3c20d95d0d56"
        ],
        [
            "destruct H1; contradiction H0; trivial.",
            "VernacExtend",
            "cd0d17c6078b58907a6bc664ef86278e29c4836c"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "repeat red in H1.",
            "VernacExtend",
            "1317857796856dea692adc6b14bc531bd0c57c31"
        ],
        [
            "apply H1; constructor.",
            "VernacExtend",
            "b849637d610fac2d6cd5e88495b237a5f11b1654"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hausdorff_impl_T1_sep: forall X:TopologicalSpace, Hausdorff X -> T1_sep X.",
            "VernacStartTheoremProof",
            "0da04403acafbab226a333134aacca11ecd57daa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (closure (Singleton x) = Singleton x).",
            "VernacExtend",
            "f249e432ac0699486e8d7b3346ef45016489f7f9"
        ],
        [
            "apply Extensionality_Ensembles; split.",
            "VernacExtend",
            "a4c57ea69808be923621e13ef05d8e11d11caf6f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (x = x0).",
            "VernacExtend",
            "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "pose proof (H x x0 H1).",
            "VernacExtend",
            "f095347131b658792dcdce88bdd92419a8ae5e67"
        ],
        [
            "destruct H2 as [U [V ?]].",
            "VernacExtend",
            "749aab12fefcc5f2e7d1d6e61bf7691f9029c7e1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (In (interior (Complement (Singleton x))) x0).",
            "VernacExtend",
            "7255df70d2557156046e487e294d59a06e561ffd"
        ],
        [
            "exists V.",
            "VernacExtend",
            "656d4fbb78ad53baa725f01ee06fa8cd2f57fea0"
        ],
        [
            "constructor; split; trivial.",
            "VernacExtend",
            "c913fb65b6f896d5820490532803225d9b0c29f6"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "red; red; intro.",
            "VernacExtend",
            "aab219fe6e484559b9390506d9bde4709bd43e8d"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "assert (In Empty_set x).",
            "VernacExtend",
            "a0043194f1c238af9e1b53bfe8b51136b304c302"
        ],
        [
            "rewrite <- H7.",
            "VernacExtend",
            "15eb34513c3298e9d5b8731fdb6616cb0a4f6a80"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite interior_complement in H6.",
            "VernacExtend",
            "6e273326afb1dc63059b500df545f94978c2f963"
        ],
        [
            "contradiction H6; exact H0.",
            "VernacExtend",
            "5120cb5901fe45226e00c6c94910f084ad46ae73"
        ],
        [
            "destruct H1; constructor.",
            "VernacExtend",
            "10fb88e823112201a0b5788fe38307b136c7a39d"
        ],
        [
            "apply closure_inflationary.",
            "VernacExtend",
            "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
        ],
        [
            "rewrite <- H0; apply closure_closed.",
            "VernacExtend",
            "c7fb991766db8177ee03b6cd94cd695665ec674b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma T3_sep_impl_Hausdorff: forall X:TopologicalSpace, T3_sep X -> Hausdorff X.",
            "VernacStartTheoremProof",
            "6c316c60e85b808bea6aee3e7739e01c0aa550cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "pose proof (H0 x (Singleton y)).",
            "VernacExtend",
            "8573dc9c1ce3e5471d00c10adcb647ebc13110a2"
        ],
        [
            "match type of H2 with | ?A -> ?B -> ?C => assert C end.",
            "VernacExtend",
            "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "contradiction H1; trivial.",
            "VernacExtend",
            "73c8676164e911bc23e1c1d1359c35e1db25c53c"
        ],
        [
            "destruct H3 as [U [V [? [? [? [? ?]]]]]].",
            "VernacExtend",
            "e12ec708d023f80d0c84d17bb1e90b7d15e20170"
        ],
        [
            "exists U; exists V; repeat split; auto with sets.",
            "VernacExtend",
            "411efc4e17ab887be0b2f45b60a48cbca3ec545c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma normal_sep_impl_T3_sep: forall X:TopologicalSpace, normal_sep X -> T3_sep X.",
            "VernacStartTheoremProof",
            "3cce0ad4e9d8e6c576560a1835023f87edbc3732"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (H0 (Singleton x) F).",
            "VernacExtend",
            "61df1d9bb8aa459a1fd8fb64418166e700add968"
        ],
        [
            "match type of H3 with | ?A -> ?B -> ?C -> ?D => assert D end.",
            "VernacExtend",
            "34d1fa32d1a746a65d56fbdf88c3d783e3e1b57e"
        ],
        [
            "apply H3; trivial.",
            "VernacExtend",
            "d51b130dcb254ceaa7e48b350c576ecd56255d34"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets.",
            "VernacExtend",
            "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H4 as [? []].",
            "VernacExtend",
            "af6f352f904f58ccb7cda6ec20913fd5d33ffd4c"
        ],
        [
            "contradiction H2.",
            "VernacExtend",
            "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
        ],
        [
            "destruct H4 as [U [V [? [? [? [? ?]]]]]].",
            "VernacExtend",
            "ee55f585fd5f815676af2f88ef77ef78d146b795"
        ],
        [
            "exists U; exists V; repeat split; auto with sets.",
            "VernacExtend",
            "411efc4e17ab887be0b2f45b60a48cbca3ec545c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Hausdorff_and_nets.",
            "VernacBeginSection",
            "aaacd78c73e922be11c26172a45366ca9a9e673c"
        ],
        [
            "Require Export Nets.",
            "VernacRequire",
            "a6b918574dda8654aa6d7442d998db2abf712dbc"
        ],
        [
            "Lemma Hausdorff_impl_net_limit_unique: forall {X:TopologicalSpace} {I:DirectedSet} (x:Net I X), Hausdorff X -> uniqueness (net_limit x).",
            "VernacStartTheoremProof",
            "44ca49a0130171d3b1747fa9c8c1cda6113c680a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros x1 x2 ? ?.",
            "VernacExtend",
            "23561c78a814d5972da2a96caf754f1b086123ad"
        ],
        [
            "apply NNPP; intro.",
            "VernacExtend",
            "55e5f4eb66528dc4c7274b2b611cda0433510c40"
        ],
        [
            "destruct (H x1 x2) as [U [V [? [? [? [? ?]]]]]]; trivial.",
            "VernacExtend",
            "b3bde614a66d346a179d753660355a3232bb2264"
        ],
        [
            "destruct (H0 U H3 H5) as [i].",
            "VernacExtend",
            "430521d9291a21972973af0f80d38e608291e820"
        ],
        [
            "destruct (H1 V H4 H6) as [j].",
            "VernacExtend",
            "58bbd30e3eea15813fbd31a1ce93de178a041568"
        ],
        [
            "destruct (DS_join_cond i j) as [k [? ?]].",
            "VernacExtend",
            "ec2e5b2e84459ed0fded6b2efd4c8cd619b5675a"
        ],
        [
            "assert (In (Intersection U V) (x k)).",
            "VernacExtend",
            "5f2849e43b7952db0d1472a4bbab9ba062237358"
        ],
        [
            "constructor; (apply H8 || apply H9); trivial.",
            "VernacExtend",
            "420eaa580e7385bd152c20b3d75c377a9cdbc83a"
        ],
        [
            "rewrite H7 in H12.",
            "VernacExtend",
            "e75409cc20d2c04dea399b847fdd3ad2f8606bfc"
        ],
        [
            "destruct H12.",
            "VernacExtend",
            "6c994fb9526bc4338db0a75acec1496fff587b6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Hausdorff_impl_net_limit_is_unique_cluster_point: forall {X:TopologicalSpace} {I:DirectedSet} (x:Net I X) (x0:point_set X), Hausdorff X -> net_limit x x0 -> forall y:point_set X, net_cluster_point x y -> y = x0.",
            "VernacStartTheoremProof",
            "00d91115ddd851b9086b7148bd58d85264652e6d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (net_cluster_point_impl_subnet_converges _ _ x y H1) as [J [x' [? ?]]].",
            "VernacExtend",
            "be2a672c4f3e99dfad5c50364d50bf19dec30d54"
        ],
        [
            "destruct (H0 Full_set).",
            "VernacExtend",
            "58e16d3ed0db8fba19bb8362141454004e021a83"
        ],
        [
            "apply open_full.",
            "VernacExtend",
            "f900ff977cf6905b0471287a8924982fbf2a3e0b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists; exact x1.",
            "VernacExtend",
            "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
        ],
        [
            "assert (net_limit x' x0).",
            "VernacExtend",
            "566af768c25d7e06eeaf09fe52db23b0cc2140b9"
        ],
        [
            "apply subnet_limit with _ x; trivial.",
            "VernacExtend",
            "60373024ab4efba7a9c86e705d45030fb08d6ace"
        ],
        [
            "apply Hausdorff_impl_net_limit_unique with x'; trivial.",
            "VernacExtend",
            "cfe8600aa4224ed80ee460c295a9b2efef8219e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_limit_is_unique_cluster_point_impl_Hausdorff: forall (X:TopologicalSpace), (forall (I:DirectedSet) (x:Net I X) (x0 y:point_set X), net_limit x x0 -> net_cluster_point x y -> y = x0) -> Hausdorff X.",
            "VernacStartTheoremProof",
            "1a678730af94b96ea7fb40fc826c17c0341d39f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (~ net_cluster_point (neighborhood_net _ x) y).",
            "VernacExtend",
            "bc383d4b4177d456958fac477518edb5500dea8e"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "contradiction H0.",
            "VernacExtend",
            "198cc5fe08678df71b7d70ff1acc682532bbeeca"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply H with _ (neighborhood_net _ x).",
            "VernacExtend",
            "ef41ff16f1aad2bd63957cf455db6e2a52979de2"
        ],
        [
            "apply neighborhood_net_limit.",
            "VernacExtend",
            "8dbf4c861bd142e0c7e3262be46919b9e5ecb824"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply not_all_ex_not in H1.",
            "VernacExtend",
            "e53bb58673d6623d346fe06b908a4a95d96d9180"
        ],
        [
            "destruct H1 as [V].",
            "VernacExtend",
            "c145351386eafee01d8d4d4fd1d8016c3caa762b"
        ],
        [
            "apply imply_to_and in H1.",
            "VernacExtend",
            "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "apply imply_to_and in H2.",
            "VernacExtend",
            "e16da1d14ec478a91aed81b619c738403d60a47c"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "apply not_all_ex_not in H3.",
            "VernacExtend",
            "ddbbeb7b955eaa020995273d119aceccbbb75139"
        ],
        [
            "destruct H3 as [[U]].",
            "VernacExtend",
            "fdcdad89c87864a857c4eb68f9ddbfa8e6c51ccc"
        ],
        [
            "exists U; exists V; repeat split; trivial.",
            "VernacExtend",
            "eba6db68750a6d3b88070381f684d1695068cc8c"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets.",
            "VernacExtend",
            "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "contradiction H3.",
            "VernacExtend",
            "054027d52351421eaf3068785d563f4bce8f5bda"
        ],
        [
            "exists (intro_neighborhood_net_DS X x U x0 o i H4).",
            "VernacExtend",
            "7c14848e4441a9bf098ae0a639c3eb5c103ca627"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl; auto with sets.",
            "VernacExtend",
            "873d6a16f0159f9944403a35db8b3ca9c0269e58"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma net_limit_uniqueness_impl_Hausdorff: forall X:TopologicalSpace, (forall (I:DirectedSet) (x:Net I X), uniqueness (net_limit x)) -> Hausdorff X.",
            "VernacStartTheoremProof",
            "e2ccb7d8c26176d399034f07af01436e0a6c5b5f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply net_limit_is_unique_cluster_point_impl_Hausdorff.",
            "VernacExtend",
            "ed3ed515769500ffc65a3bd28d9e84b7e38d30b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (net_cluster_point_impl_subnet_converges _ _ _ _ H1).",
            "VernacExtend",
            "f6cacc56fabd8dd8a51f0bb416480db401c3a845"
        ],
        [
            "destruct H2 as [J [x' [? ?]]].",
            "VernacExtend",
            "e03a0873154b53dc7b28afe4ad62e18d278700c0"
        ],
        [
            "destruct (H0 Full_set).",
            "VernacExtend",
            "58e16d3ed0db8fba19bb8362141454004e021a83"
        ],
        [
            "apply open_full.",
            "VernacExtend",
            "f900ff977cf6905b0471287a8924982fbf2a3e0b"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists; exact x1.",
            "VernacExtend",
            "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
        ],
        [
            "assert (net_limit x' x0).",
            "VernacExtend",
            "566af768c25d7e06eeaf09fe52db23b0cc2140b9"
        ],
        [
            "apply subnet_limit with _ x; trivial.",
            "VernacExtend",
            "60373024ab4efba7a9c86e705d45030fb08d6ace"
        ],
        [
            "unfold uniqueness in H.",
            "VernacExtend",
            "d6cc779f5dfa32b94d7c274454287517930dfa4f"
        ],
        [
            "apply H with _ x'; trivial.",
            "VernacExtend",
            "837705d37ad3c6ea9ef91bb9c1ef72638e14babd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Hausdorff_and_nets.",
            "VernacEndSegment",
            "a2fbacff7cf7c89fb2e933135319c653dc9c4dd5"
        ]
    ],
    "proofs": [
        {
            "name": "T1_sep_impl_T0_sep",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists (Complement (Singleton y)); repeat split.",
                        "VernacExtend",
                        "39a016ebe1f409ed50d77f7f1db20b2fbfb58c26"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "repeat red; intro.",
                        "VernacExtend",
                        "85d8fdec20e7c94c78327784ff0e3c20d95d0d56"
                    ]
                },
                {
                    "command": [
                        "destruct H1; contradiction H0; trivial.",
                        "VernacExtend",
                        "cd0d17c6078b58907a6bc664ef86278e29c4836c"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "repeat red in H1.",
                        "VernacExtend",
                        "1317857796856dea692adc6b14bc531bd0c57c31"
                    ]
                },
                {
                    "command": [
                        "apply H1; constructor.",
                        "VernacExtend",
                        "b849637d610fac2d6cd5e88495b237a5f11b1654"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hausdorff_impl_T1_sep",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (closure (Singleton x) = Singleton x).",
                        "VernacExtend",
                        "f249e432ac0699486e8d7b3346ef45016489f7f9"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split.",
                        "VernacExtend",
                        "a4c57ea69808be923621e13ef05d8e11d11caf6f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (x = x0).",
                        "VernacExtend",
                        "55ab26b03a7fce41ac4fc93e7016adae2e19d5b4"
                    ]
                },
                {
                    "command": [
                        "apply NNPP.",
                        "VernacExtend",
                        "c972af1947412f7363e48b809906d3283d0fb638"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "pose proof (H x x0 H1).",
                        "VernacExtend",
                        "f095347131b658792dcdce88bdd92419a8ae5e67"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [U [V ?]].",
                        "VernacExtend",
                        "749aab12fefcc5f2e7d1d6e61bf7691f9029c7e1"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert (In (interior (Complement (Singleton x))) x0).",
                        "VernacExtend",
                        "7255df70d2557156046e487e294d59a06e561ffd"
                    ]
                },
                {
                    "command": [
                        "exists V.",
                        "VernacExtend",
                        "656d4fbb78ad53baa725f01ee06fa8cd2f57fea0"
                    ]
                },
                {
                    "command": [
                        "constructor; split; trivial.",
                        "VernacExtend",
                        "c913fb65b6f896d5820490532803225d9b0c29f6"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "red; red; intro.",
                        "VernacExtend",
                        "aab219fe6e484559b9390506d9bde4709bd43e8d"
                    ]
                },
                {
                    "command": [
                        "destruct H8.",
                        "VernacExtend",
                        "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
                    ]
                },
                {
                    "command": [
                        "assert (In Empty_set x).",
                        "VernacExtend",
                        "a0043194f1c238af9e1b53bfe8b51136b304c302"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H7.",
                        "VernacExtend",
                        "15eb34513c3298e9d5b8731fdb6616cb0a4f6a80"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "destruct H8.",
                        "VernacExtend",
                        "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite interior_complement in H6.",
                        "VernacExtend",
                        "6e273326afb1dc63059b500df545f94978c2f963"
                    ]
                },
                {
                    "command": [
                        "contradiction H6; exact H0.",
                        "VernacExtend",
                        "5120cb5901fe45226e00c6c94910f084ad46ae73"
                    ]
                },
                {
                    "command": [
                        "destruct H1; constructor.",
                        "VernacExtend",
                        "10fb88e823112201a0b5788fe38307b136c7a39d"
                    ]
                },
                {
                    "command": [
                        "apply closure_inflationary.",
                        "VernacExtend",
                        "33decb71efe3ae7b37ee8a72777ce6c3fcd9de48"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; apply closure_closed.",
                        "VernacExtend",
                        "c7fb991766db8177ee03b6cd94cd695665ec674b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T3_sep_impl_Hausdorff",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 x (Singleton y)).",
                        "VernacExtend",
                        "8573dc9c1ce3e5471d00c10adcb647ebc13110a2"
                    ]
                },
                {
                    "command": [
                        "match type of H2 with | ?A -> ?B -> ?C => assert C end.",
                        "VernacExtend",
                        "0d835166a2d8b0ed5947bd2c6e8347c7a00b80f7"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "contradiction H1; trivial.",
                        "VernacExtend",
                        "73c8676164e911bc23e1c1d1359c35e1db25c53c"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [U [V [? [? [? [? ?]]]]]].",
                        "VernacExtend",
                        "e12ec708d023f80d0c84d17bb1e90b7d15e20170"
                    ]
                },
                {
                    "command": [
                        "exists U; exists V; repeat split; auto with sets.",
                        "VernacExtend",
                        "411efc4e17ab887be0b2f45b60a48cbca3ec545c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "normal_sep_impl_T3_sep",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 (Singleton x) F).",
                        "VernacExtend",
                        "61df1d9bb8aa459a1fd8fb64418166e700add968"
                    ]
                },
                {
                    "command": [
                        "match type of H3 with | ?A -> ?B -> ?C -> ?D => assert D end.",
                        "VernacExtend",
                        "34d1fa32d1a746a65d56fbdf88c3d783e3e1b57e"
                    ]
                },
                {
                    "command": [
                        "apply H3; trivial.",
                        "VernacExtend",
                        "d51b130dcb254ceaa7e48b350c576ecd56255d34"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; auto with sets.",
                        "VernacExtend",
                        "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H4 as [? []].",
                        "VernacExtend",
                        "af6f352f904f58ccb7cda6ec20913fd5d33ffd4c"
                    ]
                },
                {
                    "command": [
                        "contradiction H2.",
                        "VernacExtend",
                        "c81698c6e33eaeee2c5e10eab97e4613dc058dc1"
                    ]
                },
                {
                    "command": [
                        "destruct H4 as [U [V [? [? [? [? ?]]]]]].",
                        "VernacExtend",
                        "ee55f585fd5f815676af2f88ef77ef78d146b795"
                    ]
                },
                {
                    "command": [
                        "exists U; exists V; repeat split; auto with sets.",
                        "VernacExtend",
                        "411efc4e17ab887be0b2f45b60a48cbca3ec545c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hausdorff_impl_net_limit_unique",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros x1 x2 ? ?.",
                        "VernacExtend",
                        "23561c78a814d5972da2a96caf754f1b086123ad"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intro.",
                        "VernacExtend",
                        "55e5f4eb66528dc4c7274b2b611cda0433510c40"
                    ]
                },
                {
                    "command": [
                        "destruct (H x1 x2) as [U [V [? [? [? [? ?]]]]]]; trivial.",
                        "VernacExtend",
                        "b3bde614a66d346a179d753660355a3232bb2264"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 U H3 H5) as [i].",
                        "VernacExtend",
                        "430521d9291a21972973af0f80d38e608291e820"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 V H4 H6) as [j].",
                        "VernacExtend",
                        "58bbd30e3eea15813fbd31a1ce93de178a041568"
                    ]
                },
                {
                    "command": [
                        "destruct (DS_join_cond i j) as [k [? ?]].",
                        "VernacExtend",
                        "ec2e5b2e84459ed0fded6b2efd4c8cd619b5675a"
                    ]
                },
                {
                    "command": [
                        "assert (In (Intersection U V) (x k)).",
                        "VernacExtend",
                        "5f2849e43b7952db0d1472a4bbab9ba062237358"
                    ]
                },
                {
                    "command": [
                        "constructor; (apply H8 || apply H9); trivial.",
                        "VernacExtend",
                        "420eaa580e7385bd152c20b3d75c377a9cdbc83a"
                    ]
                },
                {
                    "command": [
                        "rewrite H7 in H12.",
                        "VernacExtend",
                        "e75409cc20d2c04dea399b847fdd3ad2f8606bfc"
                    ]
                },
                {
                    "command": [
                        "destruct H12.",
                        "VernacExtend",
                        "6c994fb9526bc4338db0a75acec1496fff587b6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Hausdorff_impl_net_limit_is_unique_cluster_point",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (net_cluster_point_impl_subnet_converges _ _ x y H1) as [J [x' [? ?]]].",
                        "VernacExtend",
                        "be2a672c4f3e99dfad5c50364d50bf19dec30d54"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 Full_set).",
                        "VernacExtend",
                        "58e16d3ed0db8fba19bb8362141454004e021a83"
                    ]
                },
                {
                    "command": [
                        "apply open_full.",
                        "VernacExtend",
                        "f900ff977cf6905b0471287a8924982fbf2a3e0b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists; exact x1.",
                        "VernacExtend",
                        "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
                    ]
                },
                {
                    "command": [
                        "assert (net_limit x' x0).",
                        "VernacExtend",
                        "566af768c25d7e06eeaf09fe52db23b0cc2140b9"
                    ]
                },
                {
                    "command": [
                        "apply subnet_limit with _ x; trivial.",
                        "VernacExtend",
                        "60373024ab4efba7a9c86e705d45030fb08d6ace"
                    ]
                },
                {
                    "command": [
                        "apply Hausdorff_impl_net_limit_unique with x'; trivial.",
                        "VernacExtend",
                        "cfe8600aa4224ed80ee460c295a9b2efef8219e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_limit_is_unique_cluster_point_impl_Hausdorff",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (~ net_cluster_point (neighborhood_net _ x) y).",
                        "VernacExtend",
                        "bc383d4b4177d456958fac477518edb5500dea8e"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "contradiction H0.",
                        "VernacExtend",
                        "198cc5fe08678df71b7d70ff1acc682532bbeeca"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply H with _ (neighborhood_net _ x).",
                        "VernacExtend",
                        "ef41ff16f1aad2bd63957cf455db6e2a52979de2"
                    ]
                },
                {
                    "command": [
                        "apply neighborhood_net_limit.",
                        "VernacExtend",
                        "8dbf4c861bd142e0c7e3262be46919b9e5ecb824"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H1.",
                        "VernacExtend",
                        "e53bb58673d6623d346fe06b908a4a95d96d9180"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [V].",
                        "VernacExtend",
                        "c145351386eafee01d8d4d4fd1d8016c3caa762b"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H1.",
                        "VernacExtend",
                        "6ea3d1b5ef0d47cb8b915f7e750aca5e8977a1e2"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "apply imply_to_and in H2.",
                        "VernacExtend",
                        "e16da1d14ec478a91aed81b619c738403d60a47c"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "apply not_all_ex_not in H3.",
                        "VernacExtend",
                        "ddbbeb7b955eaa020995273d119aceccbbb75139"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as [[U]].",
                        "VernacExtend",
                        "fdcdad89c87864a857c4eb68f9ddbfa8e6c51ccc"
                    ]
                },
                {
                    "command": [
                        "exists U; exists V; repeat split; trivial.",
                        "VernacExtend",
                        "eba6db68750a6d3b88070381f684d1695068cc8c"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; auto with sets.",
                        "VernacExtend",
                        "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "contradiction H3.",
                        "VernacExtend",
                        "054027d52351421eaf3068785d563f4bce8f5bda"
                    ]
                },
                {
                    "command": [
                        "exists (intro_neighborhood_net_DS X x U x0 o i H4).",
                        "VernacExtend",
                        "7c14848e4441a9bf098ae0a639c3eb5c103ca627"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "simpl; auto with sets.",
                        "VernacExtend",
                        "873d6a16f0159f9944403a35db8b3ca9c0269e58"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "net_limit_uniqueness_impl_Hausdorff",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply net_limit_is_unique_cluster_point_impl_Hausdorff.",
                        "VernacExtend",
                        "ed3ed515769500ffc65a3bd28d9e84b7e38d30b4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (net_cluster_point_impl_subnet_converges _ _ _ _ H1).",
                        "VernacExtend",
                        "f6cacc56fabd8dd8a51f0bb416480db401c3a845"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [J [x' [? ?]]].",
                        "VernacExtend",
                        "e03a0873154b53dc7b28afe4ad62e18d278700c0"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 Full_set).",
                        "VernacExtend",
                        "58e16d3ed0db8fba19bb8362141454004e021a83"
                    ]
                },
                {
                    "command": [
                        "apply open_full.",
                        "VernacExtend",
                        "f900ff977cf6905b0471287a8924982fbf2a3e0b"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists; exact x1.",
                        "VernacExtend",
                        "f7d987939ec21fb7423083f9a0648ff4ebc7d832"
                    ]
                },
                {
                    "command": [
                        "assert (net_limit x' x0).",
                        "VernacExtend",
                        "566af768c25d7e06eeaf09fe52db23b0cc2140b9"
                    ]
                },
                {
                    "command": [
                        "apply subnet_limit with _ x; trivial.",
                        "VernacExtend",
                        "60373024ab4efba7a9c86e705d45030fb08d6ace"
                    ]
                },
                {
                    "command": [
                        "unfold uniqueness in H.",
                        "VernacExtend",
                        "d6cc779f5dfa32b94d7c274454287517930dfa4f"
                    ]
                },
                {
                    "command": [
                        "apply H with _ x'; trivial.",
                        "VernacExtend",
                        "837705d37ad3c6ea9ef91bb9c1ef72638e14babd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}