{
    "filename": "UniformTopology.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export MetricSpaces.",
            "VernacRequire",
            "063c57c7b2de268d41bd13d0bb847789f12c5d9c"
        ],
        [
            "Section UniformTopology.",
            "VernacBeginSection",
            "1a28f571ab1a5670392ca1bb05adc99847db288c"
        ],
        [
            "Variable X Y:Type.",
            "VernacAssumption",
            "e185af0746ba866ddb02110f36408332cec5d1a7"
        ],
        [
            "Variable d:Y->Y->R.",
            "VernacAssumption",
            "67acac6812907c614212ffc743d9462c4cced4f5"
        ],
        [
            "Variable y0:X->Y.",
            "VernacAssumption",
            "fac7a6adb44286d37f8bf7953cf8a0cc5e4a3878"
        ],
        [
            "Hypothesis d_metric: metric d.",
            "VernacAssumption",
            "fecbf49e4b6b7c8155a94b6c07cac2d535614e74"
        ],
        [
            "Hypothesis X_inhabited: inhabited X.",
            "VernacAssumption",
            "d3862b60002f1066ca09d394fe051283485d968c"
        ],
        [
            "Definition uniform_space := { f:X->Y | bound (Im Full_set (fun x:X => d (y0 x) (f x))) }.",
            "VernacDefinition",
            "561fa5df1124b93fe5450f12cbe4e9bde28c1692"
        ],
        [
            "Definition uniform_metric (f g:uniform_space) : R.",
            "VernacDefinition",
            "a0784b9f6cac2ff0b4e1aaf22e762970004e556d"
        ],
        [
            "refine (match f, g with exist f0 Hf, exist g0 Hg => proj1_sig (sup (Im Full_set (fun x:X => d (f0 x) (g0 x))) _ _) end).",
            "VernacExtend",
            "3a93bb9755db7a2ffcb344bede23ee482724a3f1"
        ],
        [
            "destruct Hf as [mf].",
            "VernacExtend",
            "1d92375385f334a872857159dc5c285b0b58da5b"
        ],
        [
            "destruct Hg as [mg].",
            "VernacExtend",
            "53ab3559faa639dd363ae9cc4b19de0248a20bf5"
        ],
        [
            "exists (mf + mg).",
            "VernacExtend",
            "b2b47ca07fd62ae4bacc4c9ab72ed6b1036b0c31"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply Rle_trans with (d (y0 x) (f0 x) + d (y0 x) (g0 x)).",
            "VernacExtend",
            "54dd8659f4142769c9cfcb18abb664d8eab5805d"
        ],
        [
            "rewrite (metric_sym _ d d_metric (y0 x) (f0 x)); trivial; apply triangle_inequality; trivial.",
            "VernacExtend",
            "7886c74613f69059cc2eade1c6a066cb5f2d8674"
        ],
        [
            "assert (d (y0 x) (f0 x) <= mf) by (apply H; exists x; trivial).",
            "VernacExtend",
            "0dff2324814fb33aac9d689a2c2f89119fa923da"
        ],
        [
            "assert (d (y0 x) (g0 x) <= mg) by (apply H0; exists x; trivial).",
            "VernacExtend",
            "e83b2c6e2f300841c4f34a5a6cae3c43776013be"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "destruct X_inhabited as [x0].",
            "VernacExtend",
            "13277abed902bb4a1694551be78ac94fa400ac11"
        ],
        [
            "exists (d (f0 x0) (g0 x0)); exists x0; trivial; constructor.",
            "VernacExtend",
            "62f6a3f45fc7d2b95433db1e2f3b386e4e5c4658"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma uniform_metric_is_metric: metric uniform_metric.",
            "VernacStartTheoremProof",
            "6dfb45f81be504831b3c2dd9fdb8888e53e10a7d"
        ],
        [
            "constructor; intros.",
            "VernacExtend",
            "6563c593bcf639ae667d436a08cab59e1ac2dcce"
        ],
        [
            "unfold uniform_metric.",
            "VernacExtend",
            "2bbec0a9d77ea1477e7d45b62e5fb68dd1f78ce9"
        ],
        [
            "destruct x as [f0 Hf]; destruct y as [g0 Hg]; destruct sup.",
            "VernacExtend",
            "79014f79fd17218c633529523c8a3e575e8210ae"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct X_inhabited as [x0].",
            "VernacExtend",
            "13277abed902bb4a1694551be78ac94fa400ac11"
        ],
        [
            "apply Rge_trans with (d (f0 x0) (g0 x0)).",
            "VernacExtend",
            "9666044e886590544c95355270b08476d0e9fa87"
        ],
        [
            "cut (d (f0 x0) (g0 x0) <= x); auto with real.",
            "VernacExtend",
            "4a76b597376b754130cc947f580b5bed329f070a"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists x0; trivial.",
            "VernacExtend",
            "3c02462b19bf4d0b1ef395171cd136c8c89d9991"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "unfold uniform_metric.",
            "VernacExtend",
            "2bbec0a9d77ea1477e7d45b62e5fb68dd1f78ce9"
        ],
        [
            "destruct x as [f0 Hf]; destruct y as [g0 Hg].",
            "VernacExtend",
            "d06e6b67c708d74f50ee80d28d045be1b4a6dc45"
        ],
        [
            "destruct sup.",
            "VernacExtend",
            "b59f8d6e2881d522e56cc2e399fd8f3b0b94061b"
        ],
        [
            "destruct sup.",
            "VernacExtend",
            "b59f8d6e2881d522e56cc2e399fd8f3b0b94061b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (Im Full_set (fun x:X => d (f0 x) (g0 x)) = Im Full_set (fun x:X => d (g0 x) (f0 x))).",
            "VernacExtend",
            "61ae3d5a9a3fd9950f27bc1d743cb5b0507a45da"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite metric_sym; trivial.",
            "VernacExtend",
            "fc53f0537116ca6ecd079d7beea9b896d081f2d5"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite metric_sym; trivial.",
            "VernacExtend",
            "fc53f0537116ca6ecd079d7beea9b896d081f2d5"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply i0.",
            "VernacExtend",
            "3123558b3246b5b564534e4eaebaa9d9906dd7a4"
        ],
        [
            "apply i0.",
            "VernacExtend",
            "3123558b3246b5b564534e4eaebaa9d9906dd7a4"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "destruct x as [f0 Hf]; destruct y as [g0 Hg]; destruct z as [h0 Hh].",
            "VernacExtend",
            "e35645c0615d59cb7234cf0340ff440ce2116aa4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat destruct sup; simpl.",
            "VernacExtend",
            "32bc75fb43b14559f17d12e847b54229aba2c4bf"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply Rle_trans with (d (f0 x2) (g0 x2) + d (g0 x2) (h0 x2)).",
            "VernacExtend",
            "56203c64d132ea2c6a1f7265a29c35d059ea7637"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "assert (d (f0 x2) (g0 x2) <= x0) by (apply i0; exists x2; trivial).",
            "VernacExtend",
            "fa5b9460cf59438205b8602a0c93a66c36d3337a"
        ],
        [
            "assert (d (g0 x2) (h0 x2) <= x1) by (apply i1; exists x2; trivial).",
            "VernacExtend",
            "c8590f84fcc80a5ccc40604f0572ef24e255576d"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "destruct x as [f0 Hf].",
            "VernacExtend",
            "e79efeae096bc0e037b0be1ee85130c0dc18c8a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct sup; simpl.",
            "VernacExtend",
            "bb16157f9ddd6b87ab51141a35bda399ea0b6fd9"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite metric_zero in H0; trivial.",
            "VernacExtend",
            "2b8f417722821e1586d9c52e90e3606e6c9cc17d"
        ],
        [
            "right; trivial.",
            "VernacExtend",
            "0340ad4c708a2ae89a0d63d55c2e24a5dd555b53"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "destruct X_inhabited as [x0].",
            "VernacExtend",
            "13277abed902bb4a1694551be78ac94fa400ac11"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "symmetry; apply d_metric.",
            "VernacExtend",
            "ad43df0112b9de5880817c7064532889e2302e70"
        ],
        [
            "destruct x as [f0 Hf]; destruct y as [g0 Hg].",
            "VernacExtend",
            "d06e6b67c708d74f50ee80d28d045be1b4a6dc45"
        ],
        [
            "From ZornsLemma Require Import Proj1SigInjective.",
            "VernacRequire",
            "56b6143754293eea9757603c8bbb82454ab70eae"
        ],
        [
            "apply subset_eq_compatT.",
            "VernacExtend",
            "72d6dff2668a07406e5bfa7fb9efa3693089fc04"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "extensionality x.",
            "VernacExtend",
            "a02a0d77f789b5337c65fc4009fcc8ebde3d5cef"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "destruct sup in H.",
            "VernacExtend",
            "8b55ff34715df41f7b2bebefb8d57ef51f28825c"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite H in i; clear H.",
            "VernacExtend",
            "41fb3d84d29237ab3aadc9e757e030c080d370be"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply i; exists x; trivial.",
            "VernacExtend",
            "c7785fc1d95c926c16d5e70707a6f63404389606"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "cut (d (f0 x) (g0 x) >= 0); auto with real.",
            "VernacExtend",
            "1bda5c0a65df329a9405380ebf2dc37063e424d9"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition UniformTopology : TopologicalSpace := MetricTopology uniform_metric uniform_metric_is_metric.",
            "VernacDefinition",
            "0e56564c8659ec62332536dc1cdd7c88a2b802b0"
        ],
        [
            "Require Export Completeness.",
            "VernacRequire",
            "23a530312aca410e3e06bf430c6d195d8433dbbe"
        ],
        [
            "Lemma uniform_metric_complete: complete d d_metric -> complete uniform_metric uniform_metric_is_metric.",
            "VernacStartTheoremProof",
            "c2b423435317f65fc0dd63872d2c2c32030b5ca4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall y:Net nat_DS (MetricTopology d d_metric), cauchy d y -> { y0:Y | net_limit y y0 }) as cauchy_limit.",
            "VernacExtend",
            "94c332b6a322a4f76775d91bd1065ecbb3e4641f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Require Import Description.",
            "VernacRequire",
            "3644f4855d7da47082e2bb606a55e6fb76db38fc"
        ],
        [
            "apply constructive_definite_description.",
            "VernacExtend",
            "b2eb1a3e024c625f457ac9ed1cbe627dbc746f4b"
        ],
        [
            "apply -> unique_existence; split.",
            "VernacExtend",
            "ad4085619486794b0f51dc2939aba81209a50ecf"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "apply (Hausdorff_impl_net_limit_unique y).",
            "VernacExtend",
            "d48dfa3d79c234dadf1d9e63d0adfe2b2d4d6e2a"
        ],
        [
            "apply T3_sep_impl_Hausdorff.",
            "VernacExtend",
            "fd27508b96d8a2739a2f922d0ae97941ad6b29bf"
        ],
        [
            "apply normal_sep_impl_T3_sep.",
            "VernacExtend",
            "db803794576b2f16507828aca26c30aed69f2d1e"
        ],
        [
            "apply metrizable_impl_normal_sep.",
            "VernacExtend",
            "f2369a45a019206597142e78a4ef6b999854f755"
        ],
        [
            "exists d; trivial; apply MetricTopology_metrizable.",
            "VernacExtend",
            "c353ed37f272f60092a50ea420cc5fdf7802631d"
        ],
        [
            "red; intros f ?.",
            "VernacExtend",
            "6db00efa2847985917a2351fdec564f956465b88"
        ],
        [
            "unshelve refine (let H1 := _ in let H2 := _ in ex_intro _ (exist _ (fun x:X => proj1_sig (cauchy_limit (fun n:nat => proj1_sig (f n) x) (H1 x))) H2) _); [ | clearbody H1 | clearbody H1 H2 ].",
            "VernacExtend",
            "280f7b1920a3ebb7cec18ab372741124156a0c7e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (H0 eps H1) as [N].",
            "VernacExtend",
            "cd59e9c5d42fcdc04d083402a419df22e18a4478"
        ],
        [
            "exists N; intros.",
            "VernacExtend",
            "cfd63f1f7fafabc1d063c17632530a627ae99922"
        ],
        [
            "apply Rle_lt_trans with (uniform_metric (f m) (f n)).",
            "VernacExtend",
            "3da1d351a6068edb41be15cdc4aea84852218990"
        ],
        [
            "unfold uniform_metric.",
            "VernacExtend",
            "2bbec0a9d77ea1477e7d45b62e5fb68dd1f78ce9"
        ],
        [
            "destruct (f m) as [f0 Hf]; destruct (f n) as [g0 Hg]; destruct sup.",
            "VernacExtend",
            "76b902eb69cc3eb8681061ff87dd9c2f3951d405"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists x; trivial; constructor.",
            "VernacExtend",
            "5b79e5bd10b0115982d1c988613dc7e1ce1ad4a2"
        ],
        [
            "apply H2; trivial.",
            "VernacExtend",
            "91036970bc344118009ef71eaf39ec9fc45e9ef2"
        ],
        [
            "assert (1 > 0) by (red; auto with real).",
            "VernacExtend",
            "1ec5200225e91ba382da4fe9104201eea632a693"
        ],
        [
            "destruct (H0 1 H2) as [N].",
            "VernacExtend",
            "64486434fb762b855753e2c8660a1e8a0dd67f30"
        ],
        [
            "pose (fN := f N).",
            "VernacExtend",
            "37476fa75940f9c1cddc736301251f4339e9bcb5"
        ],
        [
            "assert (f N = fN) by reflexivity.",
            "VernacExtend",
            "d8d716bd2baf73e1194df314c7c8937e0ab4438e"
        ],
        [
            "destruct fN as [fN [M]].",
            "VernacExtend",
            "9fe19ed5e1effc86c50f59eba43db43b6eaeabf9"
        ],
        [
            "assert (forall (n:nat) (x:X), (n >= N)%nat -> d (proj1_sig (f n) x) (proj1_sig (f N) x) < 1).",
            "VernacExtend",
            "f2ee859ffad1086b26f53de79a66189d49cbf663"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rle_lt_trans with (uniform_metric (f n) (f N)).",
            "VernacExtend",
            "0f6e9d6cfe834ba109ca36212f53211d8e48f75e"
        ],
        [
            "unfold uniform_metric; destruct (f n) as [f0 Hf]; destruct (f N) as [g0 Hg]; destruct sup; simpl.",
            "VernacExtend",
            "4e2ea82a8f6c9b2af719afa0b8f6589d954b38cb"
        ],
        [
            "apply i0.",
            "VernacExtend",
            "3123558b3246b5b564534e4eaebaa9d9906dd7a4"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply H3; trivial.",
            "VernacExtend",
            "d51b130dcb254ceaa7e48b350c576ecd56255d34"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (forall x:X, d (fN x) (proj1_sig (cauchy_limit _ (H1 x))) <= 1).",
            "VernacExtend",
            "aa4fce2d86a0a035f200420f97fdc562046532ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_plus_epsilon_le.",
            "VernacExtend",
            "fe1365db30e5d0974d81b73fdee113b052080b29"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct cauchy_limit; simpl.",
            "VernacExtend",
            "f2ea9999a403e2ecc7de49adaa597b4e6079030a"
        ],
        [
            "pose proof (metric_space_net_limit_converse _ _ (MetricTopology_metrizable _ d d_metric) nat_DS (fun n:nat => proj1_sig (f n) x) x0 n).",
            "VernacExtend",
            "b03adaaf4359c289551d286dcec088a55a6e2f0e"
        ],
        [
            "destruct (H7 eps H6) as [i0].",
            "VernacExtend",
            "4a8c74625b90b6cbab5e78170f627f4608efd844"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "pose (N' := max N i0).",
            "VernacExtend",
            "f2365997455e7bc90f7cc49e19635aa3a657a123"
        ],
        [
            "apply Rle_lt_trans with (d (fN x) (proj1_sig (f N') x) + d x0 (proj1_sig (f N') x)).",
            "VernacExtend",
            "8d243e0e1da349b275076883a18c05fadccc61bf"
        ],
        [
            "rewrite metric_sym with (x:=x0) (y:=proj1_sig (f N') x); trivial.",
            "VernacExtend",
            "912567f3e9b3a5a9203c3adf3f35ef89071fe3fb"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "replace (fN x) with (proj1_sig (f N) x).",
            "VernacExtend",
            "5271463aadaee8c7b2241ffa167279aac49609b0"
        ],
        [
            "assert (d (proj1_sig (f N) x) (proj1_sig (f N') x) < 1).",
            "VernacExtend",
            "c1f8e3fa08d219123cd741c36b7f33bd474ea293"
        ],
        [
            "rewrite metric_sym; trivial.",
            "VernacExtend",
            "fc53f0537116ca6ecd079d7beea9b896d081f2d5"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply le_max_l.",
            "VernacExtend",
            "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
        ],
        [
            "assert (d x0 (proj1_sig (f N') x) < eps).",
            "VernacExtend",
            "fa9476065b210a7f52acfc12534362503fe1df4e"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "rewrite H4; reflexivity.",
            "VernacExtend",
            "687219922233d81cbf8f50b0d11782d5d5a7eddf"
        ],
        [
            "exists (M+1).",
            "VernacExtend",
            "8f4ac1e4bb73f23cfeae0b92818cda0ff31b22e5"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H7.",
            "VernacExtend",
            "f6b4c745a19e0b13add33f75bb62e394f2c83618"
        ],
        [
            "rewrite H8; clear H8.",
            "VernacExtend",
            "93be3bff4723cd76d33fa7f9bd725485e75ddc17"
        ],
        [
            "apply Rle_trans with (d (y0 x) (fN x) + d (fN x) (proj1_sig (cauchy_limit _ (H1 x)))).",
            "VernacExtend",
            "1cb6e6940cce70ebdc0c1973128a79a48091bde3"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "assert (d (y0 x) (fN x) <= M).",
            "VernacExtend",
            "1323395c2a37ba127ff7bd75855a652097e5f1af"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists x; trivial.",
            "VernacExtend",
            "7285f236ab8c1f67b4215a83948007459abd7ae6"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "apply metric_space_net_limit with uniform_metric.",
            "VernacExtend",
            "e7379982def1954f33ee0fa9e9c978f8c1859d09"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Require Import Fourier.",
            "VernacRequire",
            "b1faf81affc36d90178938cafee4d59fdf2002f3"
        ],
        [
            "assert (eps/2 > 0) by fourier.",
            "VernacExtend",
            "08a8b0a170797bc644e0dce4caac77118d0ae18a"
        ],
        [
            "destruct (H0 (eps/2) H4) as [N].",
            "VernacExtend",
            "701974e733337bb63bb73007e03d8f98caa26c96"
        ],
        [
            "exists N; intros.",
            "VernacExtend",
            "cfd63f1f7fafabc1d063c17632530a627ae99922"
        ],
        [
            "apply Rle_lt_trans with (eps/2); try fourier.",
            "VernacExtend",
            "ff6e48988fdfb7fce3532eadea94509d79b35827"
        ],
        [
            "unfold uniform_metric; remember (f j) as fj; destruct fj as [fj].",
            "VernacExtend",
            "66e48eac8abc0079974bb7db1ff8c0c521c527de"
        ],
        [
            "destruct sup; simpl.",
            "VernacExtend",
            "bb16157f9ddd6b87ab51141a35bda399ea0b6fd9"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H7.",
            "VernacExtend",
            "f6b4c745a19e0b13add33f75bb62e394f2c83618"
        ],
        [
            "rewrite H8; clear y H8.",
            "VernacExtend",
            "3fa778f8e503ca476e3dcb61559c286b54ba9ac8"
        ],
        [
            "apply lt_plus_epsilon_le; intros.",
            "VernacExtend",
            "55e56cf5788fd6a90928fb5f2724a8db43f23610"
        ],
        [
            "destruct (cauchy_limit (fun n:nat => proj1_sig (f n) x0) (H1 x0)); simpl.",
            "VernacExtend",
            "52a27dd6bf8eea04487da67707d5e4e79a4bce16"
        ],
        [
            "pose proof (metric_space_net_limit_converse _ _ (MetricTopology_metrizable _ d d_metric) nat_DS (fun n:nat => proj1_sig (f n) x0) x1 n).",
            "VernacExtend",
            "eaa7f646d82e4a8dc323772de51d1c20852cda4f"
        ],
        [
            "destruct (H9 eps0 H8) as [N'].",
            "VernacExtend",
            "c27070a2c3ea90014f80f43e127bddbdd25f8b71"
        ],
        [
            "pose (N'' := max N N').",
            "VernacExtend",
            "6ecdd9095b8e3fe8d79e6b99e8e4347480e4933e"
        ],
        [
            "apply Rle_lt_trans with (d x1 (proj1_sig (f N'') x0) + d (proj1_sig (f N'') x0) (proj1_sig (f j) x0)).",
            "VernacExtend",
            "9d789c098123e14472306824d53d7c496ea4cf47"
        ],
        [
            "repeat rewrite <- Heqfj; simpl.",
            "VernacExtend",
            "909fec932877a567b228dfe4072b19583921e9d2"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "assert (d x1 (proj1_sig (f N'') x0) < eps0).",
            "VernacExtend",
            "084471fd1251b9837a9528ebdef554502fcfc21b"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "assert (d (proj1_sig (f N'') x0) (proj1_sig (f j) x0) < eps/2).",
            "VernacExtend",
            "ca6dbf558e275c4155e8053beade0a5d8215606a"
        ],
        [
            "apply Rle_lt_trans with (uniform_metric (f N'') (f j)).",
            "VernacExtend",
            "b3419812a89608d09630b0233c779a34e2a73cbf"
        ],
        [
            "unfold uniform_metric; destruct (f N'') as [f1]; destruct (f j) as [f2]; destruct sup; simpl.",
            "VernacExtend",
            "cd5eb833754bb8dbe0374265c9d3b77c87895c59"
        ],
        [
            "apply i0; exists x0; trivial.",
            "VernacExtend",
            "f5aa3b8add6ad73ef582d72fcfd188decc52fdbf"
        ],
        [
            "apply H5; trivial.",
            "VernacExtend",
            "22e53d109576f2be2d25dfc5bb6a48652de314af"
        ],
        [
            "apply le_max_l.",
            "VernacExtend",
            "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
        ],
        [
            "rewrite (Rplus_comm (eps/2) eps0).",
            "VernacExtend",
            "8d9eb7983dd29f970373c1df958181268042c5be"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UniformTopology.",
            "VernacEndSegment",
            "9c12d7859d4d1ccda6a37507fbd09d3fd2615154"
        ],
        [
            "Arguments uniform_space {X} {Y}.",
            "VernacArguments",
            "bb444677bc626e0575a170f34f706ebbfe9abc0d"
        ],
        [
            "Arguments uniform_metric {X} {Y}.",
            "VernacArguments",
            "a667d08f8ef88b08ff6504c6d21915286cc28487"
        ],
        [
            "Arguments UniformTopology {X} {Y}.",
            "VernacArguments",
            "23170a8244255913c1cb44caf9dbf72481b71c07"
        ],
        [
            "Section UniformTopology_and_continuity.",
            "VernacBeginSection",
            "618a31c0ede62e2879419b8bb4c06c887ae4300b"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Variable Y:Type.",
            "VernacAssumption",
            "b48e67558b80cbef6ea8c1988e3ef5b49b7a6199"
        ],
        [
            "Variable d:Y->Y->R.",
            "VernacAssumption",
            "67acac6812907c614212ffc743d9462c4cced4f5"
        ],
        [
            "Variable y0:point_set X -> Y.",
            "VernacAssumption",
            "508cef1d0705daba5ec1279e54706761c28ed4ae"
        ],
        [
            "Hypothesis d_metric: metric d.",
            "VernacAssumption",
            "fecbf49e4b6b7c8155a94b6c07cac2d535614e74"
        ],
        [
            "Hypothesis X_inh: inhabited (point_set X).",
            "VernacAssumption",
            "c0a70fb352d7ca9eee5517a1ee1949c2722f4bd6"
        ],
        [
            "Lemma continuous_functions_at_point_closed_in_uniform_metric: forall x0:point_set X, closed (fun f:uniform_space d y0 => continuous_at (proj1_sig f) x0 (Y:=MetricTopology d d_metric)) (X:=UniformTopology d y0 d_metric X_inh).",
            "VernacStartTheoremProof",
            "f6c6a5d83fff113315edc2598ace4c760a141e5a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "match goal with |- @closed ?X ?F => cut (Included (@closure X F) F) end.",
            "VernacExtend",
            "17766f24e823de1a1a9cb49f07b0ab4a4d5f75ba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "match type of H with | Included ?A ?B => assert (A=B) end.",
            "VernacExtend",
            "db271dd0984aab5040d39392784138513ffd4160"
        ],
        [
            "apply Extensionality_Ensembles; split; trivial; apply closure_inflationary.",
            "VernacExtend",
            "3fa1351bd88b1ce8ef2b06e132d6317fce8b9563"
        ],
        [
            "rewrite <- H0; apply closure_closed.",
            "VernacExtend",
            "c7fb991766db8177ee03b6cd94cd695665ec674b"
        ],
        [
            "red; intros f0 ?.",
            "VernacExtend",
            "386c9498f96ab1e537cc66b45bef4edf95a19c01"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "apply first_countable_sequence_closure in H.",
            "VernacExtend",
            "d464920c0a73c9719649b7d54cf9722ff6a71406"
        ],
        [
            "destruct H as [f []].",
            "VernacExtend",
            "17e54ffcff00c88457b21be27918d891b95576c0"
        ],
        [
            "pose proof (MetricTopology_metrizable _ d d_metric (proj1_sig f0 x0)).",
            "VernacExtend",
            "9eff8dbe05469708566cb5101ab2cb15a92befbe"
        ],
        [
            "apply open_neighborhood_basis_is_neighborhood_basis in H1.",
            "VernacExtend",
            "1201699be4ebeba751e7036a8129dd7100eb662a"
        ],
        [
            "apply continuous_at_neighborhood_basis with (1:=H1).",
            "VernacExtend",
            "1b4db19664ce39322c5802cc20e98f96401e918e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "assert (r/3>0) by fourier.",
            "VernacExtend",
            "0d612a8ff7caa056e76c8a06c2751a902ad2ef3d"
        ],
        [
            "destruct (metric_space_net_limit_converse _ _ (MetricTopology_metrizable _ _ (uniform_metric_is_metric _ _ d y0 d_metric X_inh)) nat_DS f f0 H0 (r/3) H3) as [N].",
            "VernacExtend",
            "a1a491699bce7621d87f48d769b59b36ec550800"
        ],
        [
            "assert (neighborhood (inverse_image (proj1_sig (f N)) (open_ball _ d (proj1_sig (f N) x0) (r/3))) x0).",
            "VernacExtend",
            "16ad39f3db2c418038c395c95d6de0717be452bd"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "pose proof (MetricTopology_metrizable _ d d_metric (proj1_sig (f N) x0)).",
            "VernacExtend",
            "15c031f6b0aab5ab04476ea56b6a26630e6e0304"
        ],
        [
            "apply open_neighborhood_basis_is_neighborhood_basis in H5.",
            "VernacExtend",
            "761c1990f90bcd5f9f3283d793a111f6fec55abc"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "match goal with H5:neighborhood ?U x0 |- neighborhood ?V x0 => cut (Included U V) end.",
            "VernacExtend",
            "91793a89a8e845962d6042a2e0cf30f73391aecb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H5 as [U []].",
            "VernacExtend",
            "c1f1ccc8f5b63a21bc87952c80b5a51336fb7c4e"
        ],
        [
            "exists U; auto with sets.",
            "VernacExtend",
            "292cf711d825035a2b981e86c4cea981d3d2d9f7"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Rle_lt_trans with (d (proj1_sig f0 x0) (proj1_sig (f N) x0) + d (proj1_sig (f N) x0) (proj1_sig f0 x)).",
            "VernacExtend",
            "7a7d7301ce798e7b1a55d2a2603c45aab0c007f7"
        ],
        [
            "apply d_metric.",
            "VernacExtend",
            "1bd73f41774997c8e523dfacb6d3878c1239923c"
        ],
        [
            "apply Rle_lt_trans with (d (proj1_sig f0 x0) (proj1_sig (f N) x0) + d (proj1_sig (f N) x0) (proj1_sig (f N) x) + d (proj1_sig (f N) x) (proj1_sig f0 x)).",
            "VernacExtend",
            "d4c6e93a467d4ea2b0b10ad02c1a064f5a105c1f"
        ],
        [
            "assert (d (proj1_sig (f N) x0) (proj1_sig f0 x) <= d (proj1_sig (f N) x0) (proj1_sig (f N) x) + d (proj1_sig (f N) x) (proj1_sig f0 x)) by apply d_metric.",
            "VernacExtend",
            "b9842d4e133026ae5b573d826d3b539729994ded"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "assert (forall x':point_set X, d (proj1_sig f0 x') (proj1_sig (f N) x') < r/3).",
            "VernacExtend",
            "47ccbef09b57dbcaee447833d589ed379acf7c45"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rle_lt_trans with (uniform_metric d y0 d_metric X_inh f0 (f N)).",
            "VernacExtend",
            "1b7673d465e14e230233bab90062e317f148fea4"
        ],
        [
            "unfold uniform_metric; destruct f0 as [f0]; destruct (f N) as [fN]; destruct sup; simpl.",
            "VernacExtend",
            "b59500dc0bd0bedd336c9b0e2816cd71e01fa8a3"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists x'; trivial.",
            "VernacExtend",
            "a98a5a6dc018e356529504249a56188be521b31d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply H4; simpl; auto with arith.",
            "VernacExtend",
            "7d3d2f993779ed94b87052ccb74d52a3f3dd8664"
        ],
        [
            "rewrite (metric_sym _ d d_metric (proj1_sig (f N) x) (proj1_sig f0 x)).",
            "VernacExtend",
            "e51b216955bfb122c731221236996cf7fdd4f6e8"
        ],
        [
            "pose proof (H7 x0); pose proof (H7 x).",
            "VernacExtend",
            "ba2bd61e47ce3140e353dbf2cdf7e95a2883cd44"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "apply metrizable_impl_first_countable.",
            "VernacExtend",
            "264ccdcfd41a59fc1d98f5840ac6ee76af50a3f3"
        ],
        [
            "exists (uniform_metric d y0 d_metric X_inh).",
            "VernacExtend",
            "ae67332cfae1aa6f8d10a3491c17e8406d6d7e65"
        ],
        [
            "exact (uniform_metric_is_metric _ _ d y0 d_metric X_inh).",
            "VernacExtend",
            "bf76cffa152653ec95f3e2ddf2e7cad548b5993d"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuous_functions_closed_in_uniform_metric: closed (fun f:uniform_space d y0 => continuous (proj1_sig f) (Y:=MetricTopology d d_metric)) (X:=UniformTopology d y0 d_metric X_inh).",
            "VernacStartTheoremProof",
            "592439c22bf279af2b4016b16b4f0b6c466cc377"
        ],
        [
            "replace (fun f:uniform_space d y0 => continuous (proj1_sig f) (Y:=MetricTopology d d_metric)) with (IndexedIntersection (fun (x0:point_set X) (f:uniform_space d y0) => continuous_at (proj1_sig f) x0 (Y:=MetricTopology d d_metric))).",
            "VernacExtend",
            "ec9983d50765482c64520594e740bb91539c6ca7"
        ],
        [
            "apply (@closed_indexed_intersection (UniformTopology d y0 d_metric X_inh)).",
            "VernacExtend",
            "f8a52081c61dad76157356501f05a4ace2c9e43b"
        ],
        [
            "apply continuous_functions_at_point_closed_in_uniform_metric.",
            "VernacExtend",
            "7246c08b4b8f1f5d001c55760679683425cb5fce"
        ],
        [
            "apply Extensionality_Ensembles; split; intros f ?.",
            "VernacExtend",
            "964fe506de44979376e0f8c2e46353154e9e2f32"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply pointwise_continuity; trivial.",
            "VernacExtend",
            "5f9e1fa826fcb1577e09821403d6f71a5a8d97b3"
        ],
        [
            "constructor; intros x.",
            "VernacExtend",
            "33f24f2819ce5dcfbfe4ec1a19d4755c032a6320"
        ],
        [
            "unfold In in H |-*.",
            "VernacExtend",
            "d457be78d30ac244fff9f8c3ae0c181f152f4d8a"
        ],
        [
            "apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UniformTopology_and_continuity.",
            "VernacEndSegment",
            "a585f8eac37ba5e1415ad432b70750397355f9df"
        ]
    ],
    "proofs": [
        {
            "name": "uniform_metric",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "refine (match f, g with exist f0 Hf, exist g0 Hg => proj1_sig (sup (Im Full_set (fun x:X => d (f0 x) (g0 x))) _ _) end).",
                        "VernacExtend",
                        "3a93bb9755db7a2ffcb344bede23ee482724a3f1"
                    ]
                },
                {
                    "command": [
                        "destruct Hf as [mf].",
                        "VernacExtend",
                        "1d92375385f334a872857159dc5c285b0b58da5b"
                    ]
                },
                {
                    "command": [
                        "destruct Hg as [mg].",
                        "VernacExtend",
                        "53ab3559faa639dd363ae9cc4b19de0248a20bf5"
                    ]
                },
                {
                    "command": [
                        "exists (mf + mg).",
                        "VernacExtend",
                        "b2b47ca07fd62ae4bacc4c9ab72ed6b1036b0c31"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (d (y0 x) (f0 x) + d (y0 x) (g0 x)).",
                        "VernacExtend",
                        "54dd8659f4142769c9cfcb18abb664d8eab5805d"
                    ]
                },
                {
                    "command": [
                        "rewrite (metric_sym _ d d_metric (y0 x) (f0 x)); trivial; apply triangle_inequality; trivial.",
                        "VernacExtend",
                        "7886c74613f69059cc2eade1c6a066cb5f2d8674"
                    ]
                },
                {
                    "command": [
                        "assert (d (y0 x) (f0 x) <= mf) by (apply H; exists x; trivial).",
                        "VernacExtend",
                        "0dff2324814fb33aac9d689a2c2f89119fa923da"
                    ]
                },
                {
                    "command": [
                        "assert (d (y0 x) (g0 x) <= mg) by (apply H0; exists x; trivial).",
                        "VernacExtend",
                        "e83b2c6e2f300841c4f34a5a6cae3c43776013be"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "destruct X_inhabited as [x0].",
                        "VernacExtend",
                        "13277abed902bb4a1694551be78ac94fa400ac11"
                    ]
                },
                {
                    "command": [
                        "exists (d (f0 x0) (g0 x0)); exists x0; trivial; constructor.",
                        "VernacExtend",
                        "62f6a3f45fc7d2b95433db1e2f3b386e4e5c4658"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "continuous_functions_at_point_closed_in_uniform_metric",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "match goal with |- @closed ?X ?F => cut (Included (@closure X F) F) end.",
                        "VernacExtend",
                        "17766f24e823de1a1a9cb49f07b0ab4a4d5f75ba"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "match type of H with | Included ?A ?B => assert (A=B) end.",
                        "VernacExtend",
                        "db271dd0984aab5040d39392784138513ffd4160"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; trivial; apply closure_inflationary.",
                        "VernacExtend",
                        "3fa1351bd88b1ce8ef2b06e132d6317fce8b9563"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; apply closure_closed.",
                        "VernacExtend",
                        "c7fb991766db8177ee03b6cd94cd695665ec674b"
                    ]
                },
                {
                    "command": [
                        "red; intros f0 ?.",
                        "VernacExtend",
                        "386c9498f96ab1e537cc66b45bef4edf95a19c01"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "apply first_countable_sequence_closure in H.",
                        "VernacExtend",
                        "d464920c0a73c9719649b7d54cf9722ff6a71406"
                    ]
                },
                {
                    "command": [
                        "destruct H as [f []].",
                        "VernacExtend",
                        "17e54ffcff00c88457b21be27918d891b95576c0"
                    ]
                },
                {
                    "command": [
                        "pose proof (MetricTopology_metrizable _ d d_metric (proj1_sig f0 x0)).",
                        "VernacExtend",
                        "9eff8dbe05469708566cb5101ab2cb15a92befbe"
                    ]
                },
                {
                    "command": [
                        "apply open_neighborhood_basis_is_neighborhood_basis in H1.",
                        "VernacExtend",
                        "1201699be4ebeba751e7036a8129dd7100eb662a"
                    ]
                },
                {
                    "command": [
                        "apply continuous_at_neighborhood_basis with (1:=H1).",
                        "VernacExtend",
                        "1b4db19664ce39322c5802cc20e98f96401e918e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "assert (r/3>0) by fourier.",
                        "VernacExtend",
                        "0d612a8ff7caa056e76c8a06c2751a902ad2ef3d"
                    ]
                },
                {
                    "command": [
                        "destruct (metric_space_net_limit_converse _ _ (MetricTopology_metrizable _ _ (uniform_metric_is_metric _ _ d y0 d_metric X_inh)) nat_DS f f0 H0 (r/3) H3) as [N].",
                        "VernacExtend",
                        "a1a491699bce7621d87f48d769b59b36ec550800"
                    ]
                },
                {
                    "command": [
                        "assert (neighborhood (inverse_image (proj1_sig (f N)) (open_ball _ d (proj1_sig (f N) x0) (r/3))) x0).",
                        "VernacExtend",
                        "16ad39f3db2c418038c395c95d6de0717be452bd"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "pose proof (MetricTopology_metrizable _ d d_metric (proj1_sig (f N) x0)).",
                        "VernacExtend",
                        "15c031f6b0aab5ab04476ea56b6a26630e6e0304"
                    ]
                },
                {
                    "command": [
                        "apply open_neighborhood_basis_is_neighborhood_basis in H5.",
                        "VernacExtend",
                        "761c1990f90bcd5f9f3283d793a111f6fec55abc"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "match goal with H5:neighborhood ?U x0 |- neighborhood ?V x0 => cut (Included U V) end.",
                        "VernacExtend",
                        "91793a89a8e845962d6042a2e0cf30f73391aecb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H5 as [U []].",
                        "VernacExtend",
                        "c1f1ccc8f5b63a21bc87952c80b5a51336fb7c4e"
                    ]
                },
                {
                    "command": [
                        "exists U; auto with sets.",
                        "VernacExtend",
                        "292cf711d825035a2b981e86c4cea981d3d2d9f7"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (d (proj1_sig f0 x0) (proj1_sig (f N) x0) + d (proj1_sig (f N) x0) (proj1_sig f0 x)).",
                        "VernacExtend",
                        "7a7d7301ce798e7b1a55d2a2603c45aab0c007f7"
                    ]
                },
                {
                    "command": [
                        "apply d_metric.",
                        "VernacExtend",
                        "1bd73f41774997c8e523dfacb6d3878c1239923c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (d (proj1_sig f0 x0) (proj1_sig (f N) x0) + d (proj1_sig (f N) x0) (proj1_sig (f N) x) + d (proj1_sig (f N) x) (proj1_sig f0 x)).",
                        "VernacExtend",
                        "d4c6e93a467d4ea2b0b10ad02c1a064f5a105c1f"
                    ]
                },
                {
                    "command": [
                        "assert (d (proj1_sig (f N) x0) (proj1_sig f0 x) <= d (proj1_sig (f N) x0) (proj1_sig (f N) x) + d (proj1_sig (f N) x) (proj1_sig f0 x)) by apply d_metric.",
                        "VernacExtend",
                        "b9842d4e133026ae5b573d826d3b539729994ded"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "assert (forall x':point_set X, d (proj1_sig f0 x') (proj1_sig (f N) x') < r/3).",
                        "VernacExtend",
                        "47ccbef09b57dbcaee447833d589ed379acf7c45"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (uniform_metric d y0 d_metric X_inh f0 (f N)).",
                        "VernacExtend",
                        "1b7673d465e14e230233bab90062e317f148fea4"
                    ]
                },
                {
                    "command": [
                        "unfold uniform_metric; destruct f0 as [f0]; destruct (f N) as [fN]; destruct sup; simpl.",
                        "VernacExtend",
                        "b59500dc0bd0bedd336c9b0e2816cd71e01fa8a3"
                    ]
                },
                {
                    "command": [
                        "apply i.",
                        "VernacExtend",
                        "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
                    ]
                },
                {
                    "command": [
                        "exists x'; trivial.",
                        "VernacExtend",
                        "a98a5a6dc018e356529504249a56188be521b31d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply H4; simpl; auto with arith.",
                        "VernacExtend",
                        "7d3d2f993779ed94b87052ccb74d52a3f3dd8664"
                    ]
                },
                {
                    "command": [
                        "rewrite (metric_sym _ d d_metric (proj1_sig (f N) x) (proj1_sig f0 x)).",
                        "VernacExtend",
                        "e51b216955bfb122c731221236996cf7fdd4f6e8"
                    ]
                },
                {
                    "command": [
                        "pose proof (H7 x0); pose proof (H7 x).",
                        "VernacExtend",
                        "ba2bd61e47ce3140e353dbf2cdf7e95a2883cd44"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "apply metrizable_impl_first_countable.",
                        "VernacExtend",
                        "264ccdcfd41a59fc1d98f5840ac6ee76af50a3f3"
                    ]
                },
                {
                    "command": [
                        "exists (uniform_metric d y0 d_metric X_inh).",
                        "VernacExtend",
                        "ae67332cfae1aa6f8d10a3491c17e8406d6d7e65"
                    ]
                },
                {
                    "command": [
                        "exact (uniform_metric_is_metric _ _ d y0 d_metric X_inh).",
                        "VernacExtend",
                        "bf76cffa152653ec95f3e2ddf2e7cad548b5993d"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuous_functions_closed_in_uniform_metric",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "replace (fun f:uniform_space d y0 => continuous (proj1_sig f) (Y:=MetricTopology d d_metric)) with (IndexedIntersection (fun (x0:point_set X) (f:uniform_space d y0) => continuous_at (proj1_sig f) x0 (Y:=MetricTopology d d_metric))).",
                        "VernacExtend",
                        "ec9983d50765482c64520594e740bb91539c6ca7"
                    ]
                },
                {
                    "command": [
                        "apply (@closed_indexed_intersection (UniformTopology d y0 d_metric X_inh)).",
                        "VernacExtend",
                        "f8a52081c61dad76157356501f05a4ace2c9e43b"
                    ]
                },
                {
                    "command": [
                        "apply continuous_functions_at_point_closed_in_uniform_metric.",
                        "VernacExtend",
                        "7246c08b4b8f1f5d001c55760679683425cb5fce"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; intros f ?.",
                        "VernacExtend",
                        "964fe506de44979376e0f8c2e46353154e9e2f32"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; trivial.",
                        "VernacExtend",
                        "5f9e1fa826fcb1577e09821403d6f71a5a8d97b3"
                    ]
                },
                {
                    "command": [
                        "constructor; intros x.",
                        "VernacExtend",
                        "33f24f2819ce5dcfbfe4ec1a19d4755c032a6320"
                    ]
                },
                {
                    "command": [
                        "unfold In in H |-*.",
                        "VernacExtend",
                        "d457be78d30ac244fff9f8c3ae0c181f152f4d8a"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere; trivial.",
                        "VernacExtend",
                        "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}