{
    "filename": "TietzeExtension.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export RTopology.",
            "VernacRequire",
            "d22293a028e28b741d89e15acf8ca6b192327374"
        ],
        [
            "Require Export SeparatednessAxioms.",
            "VernacRequire",
            "e1a159ab203858049c09e06df34b034c7bd8854b"
        ],
        [
            "Section Tietze_extension_construction.",
            "VernacBeginSection",
            "e47dec186ba3a9a46ec1151d02b59931640625ef"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Variable F:Ensemble (point_set X).",
            "VernacAssumption",
            "42c3e71d2836f9067053224a3d850589bc28c443"
        ],
        [
            "Hypothesis F_closed: closed F.",
            "VernacAssumption",
            "00d139f11a39b959ec10fc95c8c1590f43d33136"
        ],
        [
            "Variable f:point_set (SubspaceTopology F) -> point_set RTop.",
            "VernacAssumption",
            "8d492dfc67e749a60fd4b009c4bca4501fbb6477"
        ],
        [
            "Hypothesis f_continuous: continuous f.",
            "VernacAssumption",
            "7a272f05c0ede6f02b560b062abbca05261139bd"
        ],
        [
            "Hypothesis f_bound: forall x:point_set (SubspaceTopology F), -1 <= f x <= 1.",
            "VernacAssumption",
            "e413d26a14519d68e9b8725ebd0c174ecfd955bc"
        ],
        [
            "Hypothesis X_nonempty: inhabited (point_set X).",
            "VernacAssumption",
            "23c1ba9500eefd0fa07de699d7f4a536b02d7281"
        ],
        [
            "Variable Urysohns_lemma_function: forall F G:Ensemble (point_set X), closed F -> closed G -> Intersection F G = Empty_set -> { f:point_set X -> point_set RTop | continuous f /\\ (forall x:point_set X, 0 <= f x <= 1) /\\ (forall x:point_set X, In F x -> f x = 0) /\\ (forall x:point_set X, In G x -> f x = 1) }.",
            "VernacAssumption",
            "4ce7e03f6c2cdeca150ddb339b4ec5a6c1ebd452"
        ],
        [
            "Lemma subspace_inc_takes_closed_to_closed: forall G:Ensemble (point_set (SubspaceTopology F)), closed G -> closed (Im G (subspace_inc F)).",
            "VernacStartTheoremProof",
            "f0b54100c543a6a90d75a0a9bd063cb5e36f3b68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (subspace_topology_topology _ _ _ H) as [U []].",
            "VernacExtend",
            "fab18963d34a913b76afcbe0cacb0c4b5a95437c"
        ],
        [
            "replace (Im G (subspace_inc F)) with (Intersection F (Complement U)).",
            "VernacExtend",
            "31fa66db57df913934959c89e2affa51b07a2228"
        ],
        [
            "apply closed_intersection2; trivial.",
            "VernacExtend",
            "9a262560fd9b4b199ffccc140c39e631bbd5998e"
        ],
        [
            "red; rewrite Complement_Complement; trivial.",
            "VernacExtend",
            "55b71e9612fed055a89b57ce503120f8b9923277"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (exist _ x H2); trivial.",
            "VernacExtend",
            "99e4c54aaa7251b0f85fae9fa8c16bf2bf35320b"
        ],
        [
            "apply NNPP; intro.",
            "VernacExtend",
            "55e5f4eb66528dc4c7274b2b611cda0433510c40"
        ],
        [
            "change (In (Complement G) (exist (In F) x H2)) in H4.",
            "VernacExtend",
            "458dea34e761b449b9932f0d664e6063eaa62ccd"
        ],
        [
            "rewrite H1 in H4.",
            "VernacExtend",
            "b9e2c31ed60bbabdfde4a836d5d490897638472a"
        ],
        [
            "destruct H4.",
            "VernacExtend",
            "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "contradiction H3.",
            "VernacExtend",
            "054027d52351421eaf3068785d563f4bce8f5bda"
        ],
        [
            "destruct H2 as [[y]].",
            "VernacExtend",
            "d7b06a019f176debfda8ff9ccf9008271f261bf9"
        ],
        [
            "rewrite H3; clear y0 H3.",
            "VernacExtend",
            "141e917fdc50ce8fdc00520e8d95ddef71963f00"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (In (Complement G) (exist (fun x => In F x) y i)).",
            "VernacExtend",
            "ea7b8e024c554ea2a5f7094ebead6b57df1a4d3e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "contradiction H4.",
            "VernacExtend",
            "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_order: order Rle.",
            "VernacStartTheoremProof",
            "77b67b68f0cd9df1203ebdd4afb99eb5e99590db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "red; intros; apply Rle_refl.",
            "VernacExtend",
            "be11c6e3421b77d74f242c55a22fdc9f3542de3c"
        ],
        [
            "red; intros; eapply Rle_trans; [ apply H | apply H0 ].",
            "VernacExtend",
            "48c03490f3666685c2bbc8198af52889267e8a3c"
        ],
        [
            "red; intros; apply Rle_antisym; trivial.",
            "VernacExtend",
            "4141169a877dd5f3ae91ad3cab3ebc34cb647afc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section extension_approximation.",
            "VernacBeginSection",
            "08f89f93cf5ebcc33f18a97dd2c17b221f68121e"
        ],
        [
            "Variable f0:point_set (SubspaceTopology F) -> point_set RTop.",
            "VernacAssumption",
            "953e3d58d908f90dc79599b778d1127f9882fe21"
        ],
        [
            "Hypothesis f0_cont: continuous f0.",
            "VernacAssumption",
            "b88e6e152167c43a9c31924a97dd25863c2684cf"
        ],
        [
            "Hypothesis f0_bound: forall x:point_set (SubspaceTopology F), -1 <= f0 x <= 1.",
            "VernacAssumption",
            "fe28bfccc58b8c41075c199ce7308bb5b8533ced"
        ],
        [
            "Definition extension_approximation: point_set X -> point_set RTop.",
            "VernacDefinition",
            "52a114fe93d53afd33cfd20a9c7661b1f49a8369"
        ],
        [
            "refine ( let F0:=Im [ x:point_set (SubspaceTopology F) | f0 x <= -1/3 ] (subspace_inc F) in let G0:=Im [ x:point_set (SubspaceTopology F) | f0 x >= 1/3 ] (subspace_inc F) in let g:=proj1_sig (Urysohns_lemma_function F0 G0 _ _ _) in fun x:point_set X => -1/3 + 2/3 * g x).",
            "VernacExtend",
            "5763695b103ace9d9934d4455ca24b84df2f8bdb"
        ],
        [
            "apply subspace_inc_takes_closed_to_closed.",
            "VernacExtend",
            "76caadc1f3e5afb33d8e5c0ff64e71cde1ff0b02"
        ],
        [
            "replace ([ x:point_set (SubspaceTopology F) | f0 x <= -1/3 ]) with (inverse_image f0 [ y:point_set RTop | y <= -1/3 ]).",
            "VernacExtend",
            "5268e1b058ee3871762c8764b5b6f6e0f31f4d63"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "rewrite <- inverse_image_complement.",
            "VernacExtend",
            "563ce30f982e13ae9f29b3b4579d83d8c875afa3"
        ],
        [
            "apply f0_cont.",
            "VernacExtend",
            "a27642fade0800b3a92d58b09fd368f13e4ebefc"
        ],
        [
            "apply lower_closed_interval_closed.",
            "VernacExtend",
            "da9027928899d90f867d3c59c8c4c5b854d37cd7"
        ],
        [
            "apply Rle_order.",
            "VernacExtend",
            "3862b91bd7465d4ff11c2264b12ede0b7e6e7581"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (total_order_T x y) as [[|]|]; auto with real.",
            "VernacExtend",
            "38f5fb4e6e885c6baf035ab5d4b7b2d37660d5d5"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H as [[]]; constructor; trivial.",
            "VernacExtend",
            "97c64556cef17175f812c38856765a0673ea7b93"
        ],
        [
            "destruct H; constructor; constructor; trivial.",
            "VernacExtend",
            "8bfc6c8ac6a737ad9a874650256728f0be11fd07"
        ],
        [
            "apply subspace_inc_takes_closed_to_closed.",
            "VernacExtend",
            "76caadc1f3e5afb33d8e5c0ff64e71cde1ff0b02"
        ],
        [
            "replace ([ x:point_set (SubspaceTopology F) | f0 x >= 1/3 ]) with (inverse_image f0 [ y:point_set RTop | 1/3 <= y ]).",
            "VernacExtend",
            "26f475fba65bc89420f934bd42c03311c31107d6"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "rewrite <- inverse_image_complement.",
            "VernacExtend",
            "563ce30f982e13ae9f29b3b4579d83d8c875afa3"
        ],
        [
            "apply f0_cont.",
            "VernacExtend",
            "a27642fade0800b3a92d58b09fd368f13e4ebefc"
        ],
        [
            "apply upper_closed_interval_closed.",
            "VernacExtend",
            "47cc328ddaef7f14fca794177a9be17a382ab2be"
        ],
        [
            "apply Rle_order.",
            "VernacExtend",
            "3862b91bd7465d4ff11c2264b12ede0b7e6e7581"
        ],
        [
            "intros; destruct (total_order_T x y) as [[|]|]; auto with real.",
            "VernacExtend",
            "00a7fca9ed3ad0582854921736638268aa503fb5"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H as [[]]; constructor; auto with real.",
            "VernacExtend",
            "03e71e9408a558b711fc974b01d18997bc25115a"
        ],
        [
            "destruct H; constructor; constructor; auto with real.",
            "VernacExtend",
            "a6f0adffd24f497238cf746a5e40db5cc2189a6f"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets; red; intros.",
            "VernacExtend",
            "e719e538bbc3ef5b9d86dde4dadb26c96c4dca7e"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H as [[y] []].",
            "VernacExtend",
            "d1f1624f6989b4fe1c6db56285c91412a51c918f"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "destruct H0 as [[z] []].",
            "VernacExtend",
            "8b25539a5c6e470fafa178104280d834498d14a0"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "destruct H1; destruct H2.",
            "VernacExtend",
            "fc250a2f79bed1d5805a865abafd87d890a91f22"
        ],
        [
            "destruct (proof_irrelevance _ i i0).",
            "VernacExtend",
            "79ffc064b748309b6f382fde59dbf539530905d9"
        ],
        [
            "Require Import Fourier.",
            "VernacRequire",
            "b1faf81affc36d90178938cafee4d59fdf2002f3"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma extension_approximation_bound: forall x:point_set X, -1/3 <= extension_approximation x <= 1/3.",
            "VernacStartTheoremProof",
            "6bb99e8f777bcaa7f293e82abfb0f3a9a1b37123"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold extension_approximation.",
            "VernacExtend",
            "27034828037385d5285a81492216a09feb083e79"
        ],
        [
            "destruct Urysohns_lemma_function as [g].",
            "VernacExtend",
            "4ef62ee3645a1f5b7aa79a7b3ad65c55a7789729"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct a as [? [? []]].",
            "VernacExtend",
            "ef59e33943fbe0a9f3f61b093f5ff71b0fdf807e"
        ],
        [
            "destruct (H0 x).",
            "VernacExtend",
            "5be1bfa6b828f3ae7125c5e3c8c92fbd5209f3a3"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_approximation_diff_bound: forall x:point_set (SubspaceTopology F), -2/3 <= f0 x - extension_approximation (subspace_inc F x) <= 2/3.",
            "VernacStartTheoremProof",
            "025daeb28f105709c808ede9a88d202c12c328d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold extension_approximation; destruct Urysohns_lemma_function as [g [? [? []]]]; simpl.",
            "VernacExtend",
            "191881631271999c4be8c993fdcaed8858a84558"
        ],
        [
            "destruct (f0_bound x).",
            "VernacExtend",
            "55426a26ead3da457511e5187f75f1d332c21d57"
        ],
        [
            "destruct (Rle_or_lt (f0 x) (-1/3)).",
            "VernacExtend",
            "f3567af36c5119440eca3f56beeea2ad870b908c"
        ],
        [
            "replace (g (subspace_inc F x)) with 0.",
            "VernacExtend",
            "45ba126da3cd06825481b6cd5fd6a00b138f57a2"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "symmetry; apply e.",
            "VernacExtend",
            "5ccb4b48ad2fa57b5fd43e6b484ecbc954b3380c"
        ],
        [
            "econstructor; trivial.",
            "VernacExtend",
            "fb8dd853d8f590ecfcb303786fdd1f65dbffc6d5"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "destruct (Rle_or_lt (1/3) (f0 x)).",
            "VernacExtend",
            "4ad746d7f6e20a5d97963b9681e9c8ec85df7fca"
        ],
        [
            "replace (g (subspace_inc F x)) with 1.",
            "VernacExtend",
            "89001587e16426a693d18d6a16c1f48d457046bc"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "symmetry; apply e0.",
            "VernacExtend",
            "8ec86d4dcb0ce89d22cf0cc32f69f1b4133b37f4"
        ],
        [
            "econstructor; trivial.",
            "VernacExtend",
            "fb8dd853d8f590ecfcb303786fdd1f65dbffc6d5"
        ],
        [
            "constructor; auto with real.",
            "VernacExtend",
            "4270b36f9ba81648c4a2769341029372ea874e66"
        ],
        [
            "destruct (a (subspace_inc F x)).",
            "VernacExtend",
            "c3f764a2a15332acd439108775345999ee8bbbde"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_approximation_continuous: continuous extension_approximation.",
            "VernacStartTheoremProof",
            "a5fbe8d245864e729c5df6925927967f9eb38909"
        ],
        [
            "unfold extension_approximation; destruct Urysohns_lemma_function as [g [? [? []]]]; simpl.",
            "VernacExtend",
            "191881631271999c4be8c993fdcaed8858a84558"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "Require Import RFuncContinuity.",
            "VernacRequire",
            "f0fe994cebb5a7fdcb34c28d7fe78ddddcfea37c"
        ],
        [
            "apply sum_continuous.",
            "VernacExtend",
            "681c47cc39685429cf79ce4050296221b74f3315"
        ],
        [
            "apply continuous_func_continuous_everywhere; apply continuous_constant.",
            "VernacExtend",
            "02708ee817212a5b75bad5106e6cf13c48c598c2"
        ],
        [
            "apply const_multiple_continuous.",
            "VernacExtend",
            "0a6c43514326967333e29bb2ddfa941d431ee5a5"
        ],
        [
            "apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End extension_approximation.",
            "VernacEndSegment",
            "c8206cdfdb65687970ebfba65e63030c0c7a4ffe"
        ],
        [
            "Lemma missing_pow_mult: forall (x y:R) (n:nat), (x*y)^n = x^n * y^n.",
            "VernacStartTheoremProof",
            "f6bbb1c8da9086a7e2ba98973a37b122cf36dba5"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IHn; ring.",
            "VernacExtend",
            "3bab8d710779bfe37df95b26604624e67ce26512"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition extension_approximation_seq: forall n:nat, { g0:point_set X -> point_set RTop | continuous g0 /\\ (forall x:point_set X, -1 + (2/3)^n <= g0 x <= 1 - (2/3)^n) /\\ (forall x:point_set (SubspaceTopology F), -(2/3)^n <= f x - g0 (subspace_inc F x) <= (2/3)^n) }.",
            "VernacDefinition",
            "96f61f0f0e1d48df8c4246dc4dd387769eb3aaa8"
        ],
        [
            "simple refine (fix g (n:nat) {struct n} := match n return { g0:point_set X -> point_set RTop | continuous g0 /\\ (forall x:point_set X, -1 + (2/3)^n <= g0 x <= 1 - (2/3)^n) /\\ (forall x:point_set (SubspaceTopology F), -(2/3)^n <= f x - g0 (subspace_inc F x) <= (2/3)^n) } with | O => exist _ (fun _ => 0) _ | S m => match g m with | exist gm y => let H := _ in let approx := extension_approximation (fun x:point_set (SubspaceTopology F) => (3/2)^m * (f x - gm (subspace_inc F x))) H in exist _ (fun x:point_set X => gm x + (2/3)^m * approx x) _ end end); clear g; [ | | clearbody H ].",
            "VernacExtend",
            "5ae67739d1756f029d1302d388a8dcb533479a87"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply continuous_constant.",
            "VernacExtend",
            "6bc7cabfd636343a8d917565d7fbed6fd6ad18d4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros; split; ring_simplify; auto with real.",
            "VernacExtend",
            "940e36088c8be0764809597f4bfe8251f2ca653b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (f_bound x).",
            "VernacExtend",
            "ea80396725df56206d0b30de50910d7dfb8cdfd4"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "apply const_multiple_continuous.",
            "VernacExtend",
            "0a6c43514326967333e29bb2ddfa941d431ee5a5"
        ],
        [
            "apply diff_continuous.",
            "VernacExtend",
            "a08ab98b43bb88172b64ed849f339f9372e65611"
        ],
        [
            "apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
        ],
        [
            "apply continuous_composition_at.",
            "VernacExtend",
            "d5e4d2519966be7ec1ad9d13d514bb2094520417"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
        ],
        [
            "apply continuous_func_continuous_everywhere; apply subspace_inc_continuous.",
            "VernacExtend",
            "c2b34e69933d8403d0ce6fbe664b839540845cd6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (H023m: 0 <= (2/3)^m).",
            "VernacExtend",
            "4bce648c0d3ef1204fc7403eb06bad1ed84ba053"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply pow_le; fourier.",
            "VernacExtend",
            "7da04af5913a10691f6e5de356655f6f65f41b33"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (H032m: 0 <= (3/2)^m).",
            "VernacExtend",
            "3c90d9c8e4941b582b165d6228a5ecd146a5f35f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply pow_le; fourier.",
            "VernacExtend",
            "7da04af5913a10691f6e5de356655f6f65f41b33"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall x:point_set (SubspaceTopology F), -1 <= (3/2)^m * (f x - gm (subspace_inc F x)) <= 1).",
            "VernacExtend",
            "f862c5115216ccf2b7a808e32f42dd709821cac4"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct y as [? []].",
            "VernacExtend",
            "4c4a6a477cd08150a0b3740895e70fed26240052"
        ],
        [
            "destruct (H2 x).",
            "VernacExtend",
            "7c8c961480b1a357ba6918b1d3e0e31f68e32365"
        ],
        [
            "assert ((3/2)^m * (2/3)^m = 1).",
            "VernacExtend",
            "efaf085e9975efda7c0a1a517fc98e1bcf6e5e79"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- missing_pow_mult.",
            "VernacExtend",
            "b62c7776e2ba6b64077094d9eed30c44dd18a334"
        ],
        [
            "replace (3/2*(2/3)) with 1 by field.",
            "VernacExtend",
            "a43b9ad29d04ae63fd0cfbbb394d5d9256f03b73"
        ],
        [
            "apply pow1.",
            "VernacExtend",
            "330624b49be08458a411f71b24870c1a131fbb29"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "replace (-1) with ((3/2)^m * (- (2/3)^m)).",
            "VernacExtend",
            "f143e740c97ae0d2da43f21c259b3d0d42c9d17c"
        ],
        [
            "pattern 1 at 0, 1; replace 1 with ((3/2)^m * (2/3)^m).",
            "VernacExtend",
            "941368a023b4a44f6c1a8bb8a342c392d8f460a4"
        ],
        [
            "split; apply Rmult_le_compat_l; trivial.",
            "VernacExtend",
            "7b4024c28c1fd30599529191c9a2b636699e74a3"
        ],
        [
            "replace ((3/2)^m * -(2/3)^m) with (- ((3/2)^m * (2/3)^m)) by ring.",
            "VernacExtend",
            "2e88e1d2d22a049064ff63b5388ecf2767775c19"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall x:point_set X, -1/3 <= approx x <= 1/3).",
            "VernacExtend",
            "2c849c5768368849409f3c699c77a96a79d11dcc"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply extension_approximation_bound.",
            "VernacExtend",
            "f65afd4f18d95c0330307c16fa85a118669e1179"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (forall x:point_set (SubspaceTopology F), -2/3 <= (3/2)^m * (f x - gm (subspace_inc F x)) - approx (subspace_inc F x) <= 2/3).",
            "VernacExtend",
            "7c447c8c565c6a2e68ab80a70cf8867a17fa1ea5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply extension_approximation_diff_bound; trivial.",
            "VernacExtend",
            "215518849adb968e4467e0c5d1f9970e47b125cb"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct y as [? []].",
            "VernacExtend",
            "4c4a6a477cd08150a0b3740895e70fed26240052"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "apply sum_continuous.",
            "VernacExtend",
            "681c47cc39685429cf79ce4050296221b74f3315"
        ],
        [
            "apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
        ],
        [
            "apply const_multiple_continuous.",
            "VernacExtend",
            "0a6c43514326967333e29bb2ddfa941d431ee5a5"
        ],
        [
            "apply continuous_func_continuous_everywhere.",
            "VernacExtend",
            "66315e214acc36a7b42d68e92f06119372c45a83"
        ],
        [
            "apply extension_approximation_continuous.",
            "VernacExtend",
            "4f334d114366a462f0fcbdbdd8b2fe79f0edbfd0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (H4 x).",
            "VernacExtend",
            "f716f614fba2a73a6075dc6527d2e23497efaf65"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (H1 x).",
            "VernacExtend",
            "6389610dc8962fc835049be1d767d5b9d85b5e10"
        ],
        [
            "assert (0 <= (2/3)^m).",
            "VernacExtend",
            "711a121388dd3d802e85a87aa1860963e59e591c"
        ],
        [
            "apply pow_le; fourier.",
            "VernacExtend",
            "7da04af5913a10691f6e5de356655f6f65f41b33"
        ],
        [
            "assert ((2/3)^m * (-1/3) <= (2/3)^m * approx x <= (2/3)^m * (1/3)).",
            "VernacExtend",
            "476d91cc9374789017223859883e740eda1a4e4f"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; apply Rmult_le_compat_l; trivial.",
            "VernacExtend",
            "7b4024c28c1fd30599529191c9a2b636699e74a3"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct H11.",
            "VernacExtend",
            "f9356eb773be7520ebefe6aa4934a6b1dd23e506"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (-(2/3*(2/3)^m)) with ((2/3)^m * (-2/3)) by field.",
            "VernacExtend",
            "1dc9b59c5eea4fef8eac3279cefb8765e3c848ff"
        ],
        [
            "replace (2/3*(2/3)^m) with ((2/3)^m * (2/3)) by ring.",
            "VernacExtend",
            "73161a1c21b81cf9b4bfe7756ea848fd7dc6efc3"
        ],
        [
            "replace (f x - (gm (subspace_inc F x) + (2/3)^m * approx (subspace_inc F x))) with ((2/3)^m * ((3/2)^m * (f x - gm (subspace_inc F x)) - approx (subspace_inc F x))).",
            "VernacExtend",
            "6f2194dc6bb06f1e1c1d56fcfdf61d62a1e08651"
        ],
        [
            "destruct (H2 x).",
            "VernacExtend",
            "7c8c961480b1a357ba6918b1d3e0e31f68e32365"
        ],
        [
            "split; apply Rmult_le_compat_l; trivial.",
            "VernacExtend",
            "7b4024c28c1fd30599529191c9a2b636699e74a3"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "replace ((2/3)^m*(3/2)^m) with 1.",
            "VernacExtend",
            "03649349c5949ada9e8ca16d19ef3f4e10bcee9a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite <- missing_pow_mult.",
            "VernacExtend",
            "b62c7776e2ba6b64077094d9eed30c44dd18a334"
        ],
        [
            "replace (2/3*(3/2)) with 1 by field.",
            "VernacExtend",
            "7fe6c226b1c7ff25cd50d8ea5abc15b2b8d58399"
        ],
        [
            "symmetry; apply pow1.",
            "VernacExtend",
            "1466dbb0c83a58ed570848740d6287ac869d055e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma extension_approximation_seq_diff: forall (n:nat) (x:point_set X), -(1/3 * (2/3)^n) <= proj1_sig (extension_approximation_seq (S n)) x - proj1_sig (extension_approximation_seq n) x <= 1/3*(2/3)^n.",
            "VernacStartTheoremProof",
            "31c43f729de18b1294f8d97ee8fcf82aa1cac04c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl extension_approximation_seq.",
            "VernacExtend",
            "d35482abde67ad270eb209b1abc2814d8157e3a6"
        ],
        [
            "destruct extension_approximation_seq; simpl.",
            "VernacExtend",
            "b4ec3c80be20a7a16062ae4c97f3a3c49503254a"
        ],
        [
            "match goal with |- context [extension_approximation ?A ?B x] => cut (-1/3 <= extension_approximation A B x <= 1/3); [ generalize (extension_approximation A B x) | apply extension_approximation_bound ] end.",
            "VernacExtend",
            "9accd4135a933b7b41b0aceeccf443217369322d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (0 <= (2/3)^n).",
            "VernacExtend",
            "130c4dcaf905a3f95b881cbc3cf38740f71949eb"
        ],
        [
            "apply pow_le; fourier.",
            "VernacExtend",
            "7da04af5913a10691f6e5de356655f6f65f41b33"
        ],
        [
            "replace (-(1/3*(2/3)^n)) with ((2/3)^n*(-1/3)) by field.",
            "VernacExtend",
            "b3a4f007c1a6fdb8321d6b478c0cbe6b6fb2bc37"
        ],
        [
            "replace (1/3*(2/3)^n) with ((2/3)^n*(1/3)) by ring.",
            "VernacExtend",
            "1a9170114831240bb9b1ec4c5f7cb43056e06864"
        ],
        [
            "replace (x0 x + (2/3)^n*p - x0 x) with ((2/3)^n*p) by ring.",
            "VernacExtend",
            "9bf68f2dd0fdf62eeea30c616a72360dabf8dd46"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "split; apply Rmult_le_compat_l; trivial.",
            "VernacExtend",
            "7b4024c28c1fd30599529191c9a2b636699e74a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Opaque extension_approximation_seq.",
            "VernacSetOpacity",
            "23f78db598233146546da0cb70263ff0d4a83753"
        ],
        [
            "Opaque extension_approximation_seq.",
            "VernacSetOpacity",
            "3ab1294e537182fd176c05f18e055331948b2cba"
        ],
        [
            "Lemma Rle_R1_pow: forall (x:R) (m n:nat), 0 <= x <= 1 -> (m <= n)%nat -> x^n <= x^m.",
            "VernacStartTheoremProof",
            "55f7cff2de43e8e54926afc396b94504489fe84d"
        ],
        [
            "induction 2.",
            "VernacExtend",
            "1af3b9f2643066cd76726ca6025cb318959840d3"
        ],
        [
            "auto with real.",
            "VernacExtend",
            "2995b59d794585bf85ae99aac74dfded28d91a3e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (x^m) with (1*x^m) by auto with real.",
            "VernacExtend",
            "1389d70170ae2aaf11743d8e9d2dda1272566eab"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply Rmult_le_compat; trivial.",
            "VernacExtend",
            "f1f7c0e7532d949b9dda3f590f5d0f0f10789b2e"
        ],
        [
            "apply pow_le; trivial.",
            "VernacExtend",
            "3e3bc0148ec7c5d2746e19b0f819a7cf26fef4fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extension_approximation_seq_cauchy_aux: forall (m n:nat) (x:point_set X), Rabs (proj1_sig (extension_approximation_seq m) x - proj1_sig (extension_approximation_seq n) x) <= Rabs ((2/3)^m - (2/3)^n).",
            "VernacStartTheoremProof",
            "1037759deed1ca8b8b93362cda532fa98f04aa23"
        ],
        [
            "cut (forall (m n:nat) (x:point_set X), (m <= n)%nat -> Rabs (proj1_sig (extension_approximation_seq m) x - proj1_sig (extension_approximation_seq n) x) <= (2/3)^m - (2/3)^n).",
            "VernacExtend",
            "62fb6b25482d1e2f4b1bc79373bace88705ab074"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_or_lt m n).",
            "VernacExtend",
            "de8d9eb36b6ef81b5408ca4e7300c993e8417c99"
        ],
        [
            "rewrite (Rabs_right ((2/3)^m - (2/3)^n)).",
            "VernacExtend",
            "b30eee9fa8e7c91e5a1d2086104bcba695a914c9"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "apply Rge_minus.",
            "VernacExtend",
            "a4511845a3392e6b50fa37e8429010098a62df7d"
        ],
        [
            "cut ((2/3)^n <= (2/3)^m); auto with real.",
            "VernacExtend",
            "a10f9b765bef1465aa9db0f115a53de7ccf9049e"
        ],
        [
            "apply Rle_R1_pow; trivial.",
            "VernacExtend",
            "f4f300913c89551bd31bf9d1a1958b78860a8c3e"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "apply lt_le_weak in H0.",
            "VernacExtend",
            "5a7e81560cc7080b1697888356c3e51b73d7da30"
        ],
        [
            "rewrite (Rabs_left1 ((2/3)^m - (2/3)^n)).",
            "VernacExtend",
            "d731d2642c8c77dc18e95684cdefd99f9425265b"
        ],
        [
            "replace (- ((2/3)^m - (2/3)^n)) with ((2/3)^n - (2/3)^m) by ring.",
            "VernacExtend",
            "6c686f6be881eed94735b7811d5be85a968040a4"
        ],
        [
            "rewrite Rabs_minus_sym.",
            "VernacExtend",
            "ddb6224679ef13d2115963f7fdb5e59e73f39ad2"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "apply Rle_minus.",
            "VernacExtend",
            "7e46e8a6683420ce8b2242ac68da7361c6b86840"
        ],
        [
            "apply Rle_R1_pow; trivial.",
            "VernacExtend",
            "f4f300913c89551bd31bf9d1a1958b78860a8c3e"
        ],
        [
            "split; fourier.",
            "VernacExtend",
            "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "repeat match goal with |- context [ ?y - ?y ] => replace (y-y) with 0 by ring end.",
            "VernacExtend",
            "229525d7a37ca37defcbefb48f92dfe00d57fcd2"
        ],
        [
            "rewrite Rabs_R0; apply Rle_refl.",
            "VernacExtend",
            "2589c0228835a281c1277f9e907732082052cf1c"
        ],
        [
            "simpl pow.",
            "VernacExtend",
            "e238f4f24156f93599c988ae082bf68873c6cabc"
        ],
        [
            "apply Rle_trans with (Rabs (proj1_sig (extension_approximation_seq m) x - proj1_sig (extension_approximation_seq m0) x) + Rabs (proj1_sig (extension_approximation_seq m0) x - proj1_sig (extension_approximation_seq (S m0)) x)).",
            "VernacExtend",
            "ae951ec416a737ee322b430abe4167db1d5ecbb4"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "apply R_metric_is_metric.",
            "VernacExtend",
            "2734f0f82df672b7f52699b9132ca3d97cb0cd3b"
        ],
        [
            "pose proof (extension_approximation_seq_diff m0 x).",
            "VernacExtend",
            "e9ec6a548caaab9169125e1a3f7a1009466b76a8"
        ],
        [
            "assert (Rabs (proj1_sig (extension_approximation_seq m0) x - proj1_sig (extension_approximation_seq (S m0)) x) <= 1/3 * (2/3)^m0).",
            "VernacExtend",
            "149e00dcd4d331ad50e0913415fb25d003d29107"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "unfold Rabs.",
            "VernacExtend",
            "32b62f5465b04c4380fa7a8bf154e157fb296719"
        ],
        [
            "destruct Rcase_abs; fourier.",
            "VernacExtend",
            "a357cf6100bcc1fa548183baeb9287ec8da12928"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import UniformTopology.",
            "VernacRequire",
            "f38dbc692ef82858ccb95ebd6b50be5fd569e4d2"
        ],
        [
            "Definition convert_approx_to_uniform_space: nat -> uniform_space R_metric (fun _:point_set X => 0).",
            "VernacDefinition",
            "fcea377181ee04b32b943f4ed67afebacd5f4057"
        ],
        [
            "refine (fun n:nat => exist _ (proj1_sig (extension_approximation_seq n)) _).",
            "VernacExtend",
            "de7beba56a639780c3bd8d813ed63911dde56754"
        ],
        [
            "destruct extension_approximation_seq as [g [? []]].",
            "VernacExtend",
            "f2e3c29f58c05323b2ede961e91c480d01d1c3a8"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold R_metric.",
            "VernacExtend",
            "613d4b706655ea7813b5f3111d4f14c13f70321c"
        ],
        [
            "exists (1 - (2/3)^n).",
            "VernacExtend",
            "9f2c1b622e967002d14b7716f840eef93dce6df7"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite H0; clear y H0.",
            "VernacExtend",
            "d125bc8a9f64c166af7d24d982521b10be525b34"
        ],
        [
            "destruct (a x).",
            "VernacExtend",
            "f2343d14237b845bd027446c41c52505db9314b1"
        ],
        [
            "unfold Rabs; destruct Rcase_abs; fourier.",
            "VernacExtend",
            "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma extension_approximation_seq_cauchy: cauchy (uniform_metric R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty) convert_approx_to_uniform_space.",
            "VernacStartTheoremProof",
            "9a12918842e699f96d2cf1c7761d0278a0d848d8"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (Rabs (2/3) < 1).",
            "VernacExtend",
            "954b9935af43bc437106a8b0efa85e28f64c83b1"
        ],
        [
            "rewrite Rabs_right; fourier.",
            "VernacExtend",
            "e0c2f24914afc1620385ff4a46a168edd1a6207b"
        ],
        [
            "assert (0 < eps/2) by fourier.",
            "VernacExtend",
            "cd9aab541bab25653ee07339e4f3d4e3d878af01"
        ],
        [
            "destruct (pow_lt_1_zero (2/3) H0 (eps/2) H1) as [N].",
            "VernacExtend",
            "387e9ea21297800713ab4c037344ccb322ea1361"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rle_lt_trans with (Rabs ((2/3)^m - (2/3)^n)).",
            "VernacExtend",
            "3283f16385d7f4766a50cb41439efba33ee3a5aa"
        ],
        [
            "unfold uniform_metric; unfold convert_approx_to_uniform_space; destruct sup; simpl.",
            "VernacExtend",
            "5685a775a88734779bcd627fb71a0635620a4064"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H5.",
            "VernacExtend",
            "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
        ],
        [
            "rewrite H6; clear y H6.",
            "VernacExtend",
            "efbc036df56279b70033fae630f14e52679fec2b"
        ],
        [
            "rewrite metric_sym.",
            "VernacExtend",
            "5285a5e6e9ad8fb1ef26ec6bc8a41f54867d67d2"
        ],
        [
            "apply extension_approximation_seq_cauchy_aux.",
            "VernacExtend",
            "958ae8066504b3a5cade86fb80fc05cdf8c5afff"
        ],
        [
            "exact R_metric_is_metric.",
            "VernacExtend",
            "c83baa6d924cc0fd2fc7d4c280f5065f549d24f3"
        ],
        [
            "apply Rle_lt_trans with (Rabs ((2/3)^m) + Rabs((2/3)^n)).",
            "VernacExtend",
            "0839ad48f9dc69c225069ec7290eff02fc9a5148"
        ],
        [
            "rewrite <- (Rabs_Ropp ((2/3)^n)).",
            "VernacExtend",
            "0eea52edd6b08f6da48c98a0a81fdc41c5e84d4c"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "replace eps with (eps/2 + eps/2) by field.",
            "VernacExtend",
            "ae28027106d70b55d71f9e3ff5279dcf42f407e1"
        ],
        [
            "apply Rplus_lt_compat; apply H2; trivial.",
            "VernacExtend",
            "2e760937c3fa816c32197fee405713347fd2980d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Tietze_extension_func : point_set X -> point_set RTop.",
            "VernacDefinition",
            "727bcda272b9eee9ae01032646b51ca72e18a51b"
        ],
        [
            "Require Import Description.",
            "VernacRequire",
            "3644f4855d7da47082e2bb606a55e6fb76db38fc"
        ],
        [
            "refine (proj1_sig (proj1_sig (constructive_definite_description (fun f:point_set (UniformTopology R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty) => net_limit convert_approx_to_uniform_space f (I:=nat_DS) (X:=UniformTopology R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty)) _))).",
            "VernacExtend",
            "0e83a771958576d1c9454da0b1ebd3c32062c4aa"
        ],
        [
            "apply -> unique_existence; split.",
            "VernacExtend",
            "ad4085619486794b0f51dc2939aba81209a50ecf"
        ],
        [
            "assert (complete (uniform_metric R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty) (uniform_metric_is_metric _ _ _ _ _ _)).",
            "VernacExtend",
            "09461e06a6d35dd51ef08189e8f98437561b3763"
        ],
        [
            "apply uniform_metric_complete.",
            "VernacExtend",
            "32499987c1b5e2fcbcbfb4a014752e3aee861877"
        ],
        [
            "exact R_metric_complete.",
            "VernacExtend",
            "7f6a4c95d2cbdce9b9ef679019d7ac485032016e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact extension_approximation_seq_cauchy.",
            "VernacExtend",
            "a6b903e44a39cd3c1f1f7c9673108b0a02e662e5"
        ],
        [
            "apply Hausdorff_impl_net_limit_unique.",
            "VernacExtend",
            "9c87766010cf740f7bfa142f8ac4e89a6bb51ffb"
        ],
        [
            "apply T3_sep_impl_Hausdorff.",
            "VernacExtend",
            "fd27508b96d8a2739a2f922d0ae97941ad6b29bf"
        ],
        [
            "apply normal_sep_impl_T3_sep.",
            "VernacExtend",
            "db803794576b2f16507828aca26c30aed69f2d1e"
        ],
        [
            "apply metrizable_impl_normal_sep.",
            "VernacExtend",
            "f2369a45a019206597142e78a4ef6b999854f755"
        ],
        [
            "exists (uniform_metric R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty).",
            "VernacExtend",
            "06a2c10e667aa27574284d7396f0ded406ce733d"
        ],
        [
            "apply (uniform_metric_is_metric _ _ R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty).",
            "VernacExtend",
            "c2df17bc1b8fe7e87dc667fb91f574901a3cde96"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Tietze_extension_func_bound: forall x:point_set X, -1 <= Tietze_extension_func x <= 1.",
            "VernacStartTheoremProof",
            "38c66ef255b870bc3874d0ad1c8e68918b256119"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (Rabs (Tietze_extension_func x) <= 1).",
            "VernacExtend",
            "8d8a693bc3996bce457c0adf7bc27ec3ed02c780"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Rabs in H; destruct Rcase_abs in H; split; fourier.",
            "VernacExtend",
            "8fd474b9b40dddea8ba7b3b2396a7a1a416c84c5"
        ],
        [
            "unfold Tietze_extension_func; destruct constructive_definite_description as [[g]].",
            "VernacExtend",
            "44cd114596330d985f8c7d97e57a7e03de7777b6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (bound (Im Full_set (fun x:point_set X => R_metric 0 0))).",
            "VernacExtend",
            "5cac944f209d13041dd184d2a1c8b80c2655ef8b"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite H0; apply R_metric_is_metric.",
            "VernacExtend",
            "80da94ada147849db79582e88f145468ff2848cb"
        ],
        [
            "apply Rle_trans with (uniform_metric _ _ R_metric_is_metric X_nonempty (exist _ (fun _:point_set X => 0) H) (exist _ g b)).",
            "VernacExtend",
            "188d3651115e8641c7e1234c57be2c5ea64c10c6"
        ],
        [
            "unfold uniform_metric; simpl; destruct sup; simpl.",
            "VernacExtend",
            "9b9ed5706b3ff650a246c083f611876c7cfd8ebb"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold R_metric; f_equal; auto with real.",
            "VernacExtend",
            "0dde84dd2d21c7102fdc915a4ecfd07dae2281b7"
        ],
        [
            "apply lt_plus_epsilon_le; intros.",
            "VernacExtend",
            "55e56cf5788fd6a90928fb5f2724a8db43f23610"
        ],
        [
            "unshelve refine (let H1:=metric_space_net_limit_converse _ _ _ _ _ _ n eps H0 in _); [ | | clearbody H1 ]; shelve_unifiable.",
            "VernacExtend",
            "2f9957029c26cc067496da523332881891ae84bc"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "destruct H1 as [N].",
            "VernacExtend",
            "632a4d6f44f509a98fa6740830c39fff8ed874e3"
        ],
        [
            "refine (Rle_lt_trans _ _ _ (triangle_inequality _ _ _ _ (convert_approx_to_uniform_space N) _) _).",
            "VernacExtend",
            "261fccf1da0027fbdf04f46bb3d9df47844746bf"
        ],
        [
            "apply uniform_metric_is_metric.",
            "VernacExtend",
            "99889fe55bf1fd3af10a7f27b13d8edc440c64fd"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply Rle_lt_trans with (1 - (2/3)^N).",
            "VernacExtend",
            "4322495ca414c6018f4e34dd55e29ce70c7b2b11"
        ],
        [
            "unfold uniform_metric; simpl; destruct sup; simpl.",
            "VernacExtend",
            "9b9ed5706b3ff650a246c083f611876c7cfd8ebb"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "rewrite H3; clear y H3.",
            "VernacExtend",
            "5c65aaf08921ebe5e72a72b627e77ee46e016e4c"
        ],
        [
            "unfold R_metric.",
            "VernacExtend",
            "613d4b706655ea7813b5f3111d4f14c13f70321c"
        ],
        [
            "destruct extension_approximation_seq as [h [? []]].",
            "VernacExtend",
            "65b4c3d43f8c92b14b22ea259c71c9de8c676cc5"
        ],
        [
            "destruct (a x1).",
            "VernacExtend",
            "028410b757ee5fc85918fb3089579df3d0e32aeb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold Rabs; destruct Rcase_abs; fourier.",
            "VernacExtend",
            "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
        ],
        [
            "assert ((2/3)^N > 0).",
            "VernacExtend",
            "94500846d8a9aab83ad2259446ae95249b932658"
        ],
        [
            "apply pow_lt; fourier.",
            "VernacExtend",
            "3b8fa10a431da28c8978edfa943682f2fff2ddf4"
        ],
        [
            "fourier.",
            "VernacExtend",
            "7c61df2f7a75861b72510391198365d1ca7ca625"
        ],
        [
            "rewrite metric_sym; try apply uniform_metric_is_metric.",
            "VernacExtend",
            "8bb4988d1c678d3581a828854b38d11289ef46e9"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold DS_ord; constructor.",
            "VernacExtend",
            "f739ae3ac137fa7024cd0a4fc9833edb3924c50d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Tietze_extension_func_is_extension: forall x:point_set (SubspaceTopology F), Tietze_extension_func (subspace_inc F x) = f x.",
            "VernacStartTheoremProof",
            "1c48f2f809d95d6e1934a69644e9016567854fff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply R_metric_is_metric.",
            "VernacExtend",
            "2734f0f82df672b7f52699b9132ca3d97cb0cd3b"
        ],
        [
            "apply Rle_antisym; try (apply Rge_le; apply R_metric_is_metric).",
            "VernacExtend",
            "02d002985e3eecc3421e5e4efca401638c847876"
        ],
        [
            "apply lt_plus_epsilon_le; intros.",
            "VernacExtend",
            "55e56cf5788fd6a90928fb5f2724a8db43f23610"
        ],
        [
            "unfold Tietze_extension_func; destruct constructive_definite_description as [[g]]; simpl.",
            "VernacExtend",
            "de6808d4f5d74133b616c729117f6504aee2118f"
        ],
        [
            "assert (eps/2 > 0) by fourier.",
            "VernacExtend",
            "08a8b0a170797bc644e0dce4caac77118d0ae18a"
        ],
        [
            "unshelve refine (let H1:=metric_space_net_limit_converse _ _ _ _ _ _ n (eps/2) H0 in _); [ | | clearbody H1 ]; shelve_unifiable.",
            "VernacExtend",
            "c3e271b179024f8def99e5f2d6e827da6a203e09"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "destruct H1 as [N1].",
            "VernacExtend",
            "ef1e4d18660749fd9d39b3ca26483069942e07f4"
        ],
        [
            "assert (Rabs (2/3) < 1).",
            "VernacExtend",
            "954b9935af43bc437106a8b0efa85e28f64c83b1"
        ],
        [
            "rewrite Rabs_right; fourier.",
            "VernacExtend",
            "e0c2f24914afc1620385ff4a46a168edd1a6207b"
        ],
        [
            "destruct (pow_lt_1_zero (2/3) H2 (eps/2) H0) as [N2].",
            "VernacExtend",
            "91477765a43ac6c0941276224453cb48a515f241"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "pose (N := max N1 N2).",
            "VernacExtend",
            "2f654b88642c3464598452c2da7ca759ffada5d3"
        ],
        [
            "apply Rle_lt_trans with (R_metric (g (subspace_inc F x)) (proj1_sig (extension_approximation_seq N) (subspace_inc F x)) + R_metric (proj1_sig (extension_approximation_seq N) (subspace_inc F x)) (f x)).",
            "VernacExtend",
            "805b92066add41d75004f226443261efa363de59"
        ],
        [
            "apply triangle_inequality; apply R_metric_is_metric.",
            "VernacExtend",
            "4d73c290a9ecc5a968bcf814fe56deebfb913bb1"
        ],
        [
            "replace (0+eps) with (eps/2+eps/2) by field.",
            "VernacExtend",
            "9dded9bc583b1d37f463a843666d5fccfc4c9057"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "rewrite metric_sym; try apply R_metric_is_metric.",
            "VernacExtend",
            "ac822884e7f744a2b8b98171ca3a10b9c5e81472"
        ],
        [
            "assert (DS_ord N1 N) by apply le_max_l.",
            "VernacExtend",
            "43c0766fd53ddc470eb30471d1839b3c150be76b"
        ],
        [
            "apply Rle_lt_trans with (2:=H1 N H4).",
            "VernacExtend",
            "e676e5c6bc4b8b02a58ffc2021c6e78a600f7ba0"
        ],
        [
            "unfold uniform_metric; simpl; destruct sup; simpl.",
            "VernacExtend",
            "9b9ed5706b3ff650a246c083f611876c7cfd8ebb"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "exists (subspace_inc F x).",
            "VernacExtend",
            "51bf73a9c2de879730b2efe037331ba996d20b24"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply R_metric_is_metric.",
            "VernacExtend",
            "2734f0f82df672b7f52699b9132ca3d97cb0cd3b"
        ],
        [
            "assert ((N >= N2)%nat) by apply le_max_r.",
            "VernacExtend",
            "902b518dbb276646e0608aed5a9f95de7db2df0f"
        ],
        [
            "apply Rle_lt_trans with (2:=H3 N H4).",
            "VernacExtend",
            "73e956e2bb6fabc8ae5b6ed151df1a503c89c5fb"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "destruct extension_approximation_seq as [h [? []]]; simpl.",
            "VernacExtend",
            "2ad21ecfba8fd8731664eac308168b69c026e076"
        ],
        [
            "unfold R_metric.",
            "VernacExtend",
            "613d4b706655ea7813b5f3111d4f14c13f70321c"
        ],
        [
            "destruct (a0 x).",
            "VernacExtend",
            "a68062c8263fad0048004217c00ee981509822a2"
        ],
        [
            "unfold Rabs; destruct Rcase_abs; fourier.",
            "VernacExtend",
            "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply pow_le; fourier.",
            "VernacExtend",
            "7da04af5913a10691f6e5de356655f6f65f41b33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let convert_continuity: forall h:point_set X -> R, continuous h (Y:=RTop) <-> continuous h (Y:=MetricTopology R_metric R_metric_is_metric).",
            "VernacDefinition",
            "6e6964ca55bb6d03119ae189e26b3c7cb7e445f8"
        ],
        [
            "assert (continuous (fun x:R => x) (X:=RTop) (Y:=MetricTopology R_metric R_metric_is_metric)).",
            "VernacExtend",
            "d971cae94a9ccb6b299eafd8aa4e103d11621d44"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "apply metric_space_fun_continuity with R_metric R_metric; intros.",
            "VernacExtend",
            "f427be545cdaf0e6d69e1ae9814c1f9d2ba221ea"
        ],
        [
            "apply RTop_metrization.",
            "VernacExtend",
            "acf1d39b8983201fcf16c9cad8b64bf04f6ced79"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "exists eps; split; trivial.",
            "VernacExtend",
            "54056b1e94fed84f22f2ecc2b6c81600fa72d2da"
        ],
        [
            "assert (continuous (fun x:R => x) (X:=MetricTopology R_metric R_metric_is_metric) (Y:=RTop)).",
            "VernacExtend",
            "cd72752878a2fec83300b00f28fac5a5cb558a36"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "apply metric_space_fun_continuity with R_metric R_metric; intros.",
            "VernacExtend",
            "f427be545cdaf0e6d69e1ae9814c1f9d2ba221ea"
        ],
        [
            "apply MetricTopology_metrizable.",
            "VernacExtend",
            "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
        ],
        [
            "apply RTop_metrization.",
            "VernacExtend",
            "acf1d39b8983201fcf16c9cad8b64bf04f6ced79"
        ],
        [
            "exists eps; split; trivial.",
            "VernacExtend",
            "54056b1e94fed84f22f2ecc2b6c81600fa72d2da"
        ],
        [
            "intros; split; intros.",
            "VernacExtend",
            "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
        ],
        [
            "apply continuous_composition with (1:=H) (2:=H1).",
            "VernacExtend",
            "62f02feba29fdecaa712c81add535659b7d1105c"
        ],
        [
            "apply continuous_composition with (1:=H0) (2:=H1).",
            "VernacExtend",
            "547e5cd7586736bd79f4218aa135eb8436bbcee2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Tietze_extension_func_continuous: continuous Tietze_extension_func.",
            "VernacStartTheoremProof",
            "ae485566adfc8f82432024fd7896fda1164aed32"
        ],
        [
            "unfold Tietze_extension_func; destruct constructive_definite_description as [g]; simpl.",
            "VernacExtend",
            "961dca9542fddc0ce3c4966ba1f58eec06d68b81"
        ],
        [
            "apply net_limit_in_closure with (S:=fun h:point_set (UniformTopology R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty) => continuous (proj1_sig h) (Y:=MetricTopology R_metric R_metric_is_metric)) in n.",
            "VernacExtend",
            "39bb0b578a42483531ceb076fb424424b0782100"
        ],
        [
            "rewrite closure_fixes_closed in n.",
            "VernacExtend",
            "562964d59ebfa4407b0e436ee4dfc3927cea1263"
        ],
        [
            "unfold In in n.",
            "VernacExtend",
            "2d4ecd2866b9bbb09bf6293ec63ac9ef4c5a2009"
        ],
        [
            "apply <- convert_continuity; trivial.",
            "VernacExtend",
            "ab415e109b924387dd8c65ce81e673d73562a402"
        ],
        [
            "apply continuous_functions_closed_in_uniform_metric.",
            "VernacExtend",
            "494222868029af38bb468bbaf50c2501a3ff455b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists i; split.",
            "VernacExtend",
            "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
        ],
        [
            "simpl; constructor.",
            "VernacExtend",
            "ac61261ad3f03698bb630fde3118b8936863f48a"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold convert_approx_to_uniform_space; simpl.",
            "VernacExtend",
            "83f2a8a3c51ec075c6e8c0248041e007bfbfd8f5"
        ],
        [
            "destruct extension_approximation_seq as [h [? []]]; simpl.",
            "VernacExtend",
            "2ad21ecfba8fd8731664eac308168b69c026e076"
        ],
        [
            "apply -> convert_continuity; trivial.",
            "VernacExtend",
            "9a9a3caf6e6aad7db8cd9e6e5f4fe42bb0ba41bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Tietze_extension_construction.",
            "VernacEndSegment",
            "f86edd49d5e9fb13f18cdb6da48d0ec261d5f6eb"
        ],
        [
            "Lemma bounded_Tietze_extension_theorem: forall (X:TopologicalSpace) (F:Ensemble (point_set X)) (f:point_set (SubspaceTopology F) -> point_set RTop), normal_sep X -> closed F -> continuous f -> (forall x:point_set (SubspaceTopology F), -1 <= f x <= 1) -> exists g:point_set X -> point_set RTop, continuous g /\\ (forall x:point_set (SubspaceTopology F), g (subspace_inc F x) = f x) /\\ (forall x:point_set X, -1 <= g x <= 1).",
            "VernacStartTheoremProof",
            "13f47aa11e50561b5fc7cf8624ab22b8e8970298"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (classic (inhabited (point_set X))) as [Hinh|Hempty].",
            "VernacExtend",
            "69a22366d5e4c5ced2389a4e3d0a06ee745c545d"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "destruct (choice (fun (FG:{FG:Ensemble (point_set X) * Ensemble (point_set X) | let (F,G):=FG in closed F /\\ closed G /\\ Intersection F G = Empty_set}) (phi:point_set X -> point_set RTop) => let (F,G):=proj1_sig FG in continuous phi /\\ (forall x:point_set X, 0 <= phi x <= 1) /\\ (forall x:point_set X, In F x -> phi x = 0) /\\ (forall x:point_set X, In G x -> phi x = 1))) as [choice_fun].",
            "VernacExtend",
            "c12f536144f5df3a4e2fd450ee5c01c3cfe52b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x as [[F' G] [? []]].",
            "VernacExtend",
            "598e61ba2b084f97ba1d448e7fdfb9908687d078"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Require Import UrysohnsLemma.",
            "VernacRequire",
            "6521d2465a3823bcbbca84c0fc377776e5c0a844"
        ],
        [
            "apply UrysohnsLemma; trivial.",
            "VernacExtend",
            "2f082e6e93d5e94443b86eb11eca8cd5f47562b9"
        ],
        [
            "pose (Urysohns_lemma_function := fun (F G:Ensemble (point_set X)) (HF:closed F) (HG:closed G) (Hdisj:Intersection F G = Empty_set) => exist (fun (f:point_set X -> point_set RTop) => continuous f /\\ (forall x:point_set X, 0 <= f x <= 1) /\\ (forall x:point_set X, In F x -> f x = 0) /\\ (forall x:point_set X, In G x -> f x = 1)) (choice_fun (exist _ (F,G) (conj HF (conj HG Hdisj)))) (H3 (exist _ (F,G) (conj HF (conj HG Hdisj))))).",
            "VernacExtend",
            "d6112d9fda5613187bb499ab96ace75179b19a82"
        ],
        [
            "clearbody Urysohns_lemma_function; clear choice_fun H3.",
            "VernacExtend",
            "290b0819dfba4c8874c980e454c9e42153408d42"
        ],
        [
            "exists (Tietze_extension_func X F H0 f H1 H2 Hinh Urysohns_lemma_function).",
            "VernacExtend",
            "44395003b7c085411dead1b91bda99be291de881"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Tietze_extension_func_continuous.",
            "VernacExtend",
            "246c844b3ec0508dcd1f3a88d85652c54a4775ed"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply Tietze_extension_func_is_extension.",
            "VernacExtend",
            "2cc4a87167f2e55e832b41b2cc1d1447f737e832"
        ],
        [
            "apply Tietze_extension_func_bound.",
            "VernacExtend",
            "526994f86dd741b47d6cdc32bbf514949219196b"
        ],
        [
            "exists (fun x:point_set X => False_rect _ (Hempty (inhabits x))).",
            "VernacExtend",
            "aa5a4e9b3808c423e723a2997ca87aea9ea6f283"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply pointwise_continuity.",
            "VernacExtend",
            "16d55307e1ef25b3379ab94aab40c55da4a79d2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Hempty (inhabits x)).",
            "VernacExtend",
            "351fdbc9ed9d1a61293b298bb44bd5dc567574bd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "destruct (Hempty (inhabits x)).",
            "VernacExtend",
            "351fdbc9ed9d1a61293b298bb44bd5dc567574bd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Hempty (inhabits x)).",
            "VernacExtend",
            "351fdbc9ed9d1a61293b298bb44bd5dc567574bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma open_bounded_Tietze_extension_theorem: forall (X:TopologicalSpace) (F:Ensemble (point_set X)) (f:point_set (SubspaceTopology F) -> point_set RTop), normal_sep X -> closed F -> continuous f -> (forall x:point_set (SubspaceTopology F), -1 < f x < 1) -> exists g:point_set X -> point_set RTop, continuous g /\\ (forall x:point_set (SubspaceTopology F), g (subspace_inc F x) = f x) /\\ (forall x:point_set X, -1 < g x < 1).",
            "VernacStartTheoremProof",
            "faae75e510885cef1fd8a2f8816f3a25fdb77d5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (bounded_Tietze_extension_theorem _ F f) as [g0 [? []]]; trivial.",
            "VernacExtend",
            "4cd01560643911628403860cda9b233d54bf0161"
        ],
        [
            "intros; split; left; apply H2.",
            "VernacExtend",
            "4f15770e74c28a16be95ea0421f7360e32c96b54"
        ],
        [
            "pose (G := characteristic_function_to_ensemble (fun x:point_set X => g0 x = 1 \\/ g0 x = -1)).",
            "VernacExtend",
            "75a62a3fcae35216248738d0edb253e7d2a94dc1"
        ],
        [
            "destruct (UrysohnsLemma _ H G F) as [phi [? [? []]]]; trivial.",
            "VernacExtend",
            "cd674ef1e98223ed479742f39ca3ae856eeb83c7"
        ],
        [
            "replace G with (inverse_image g0 (Union (Singleton 1) (Singleton (-1)))).",
            "VernacExtend",
            "c863e569a9170a3029b4f45e13ddc545551020b8"
        ],
        [
            "red; rewrite <- inverse_image_complement.",
            "VernacExtend",
            "f27e7e6a1cf960de37b9ba358e183bd69b5f3167"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply (closed_union2 (X:=RTop)); apply Hausdorff_impl_T1_sep; apply T3_sep_impl_Hausdorff; apply normal_sep_impl_T3_sep; apply metrizable_impl_normal_sep; exists R_metric; (apply R_metric_is_metric || apply RTop_metrization).",
            "VernacExtend",
            "6fa1c42b80ebd04339dd4ba1252d3cae84efcfcd"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros.",
            "VernacExtend",
            "b8809005fbc1b613df32ddbcb1b0a950642327e5"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "left; destruct H6; trivial.",
            "VernacExtend",
            "b5b4d5ee508f2b0f14c5acf2e6ccc895d4ac0973"
        ],
        [
            "right; destruct H6; trivial.",
            "VernacExtend",
            "5d9941cb0e09e7342399a4762a49a4861caa36ad"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct H6; [ left | right ]; rewrite H6; constructor.",
            "VernacExtend",
            "fa89ca6d9a0ec1b47b2d875e1d39d1a46b5cad7d"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets; red; intros.",
            "VernacExtend",
            "e719e538bbc3ef5b9d86dde4dadb26c96c4dca7e"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "assert (-1 < g0 x < 1).",
            "VernacExtend",
            "276fa19c756106e4ef868df477b1e0ad56006c6d"
        ],
        [
            "replace x with (subspace_inc F (exist _ x H7)) by reflexivity.",
            "VernacExtend",
            "fb6d2fc7de3b730fd8528c819a3ed73831daebed"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "destruct H8.",
            "VernacExtend",
            "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
        ],
        [
            "destruct H6.",
            "VernacExtend",
            "bc461651d0c512c537c7e617c1056b84fca2b832"
        ],
        [
            "absurd (1 < 1); [ apply Rlt_irrefl | congruence ].",
            "VernacExtend",
            "6bba872f75576ec27f0052bd531f07dbf1a5f1e9"
        ],
        [
            "absurd (-1 < -1); [ apply Rlt_irrefl | congruence ].",
            "VernacExtend",
            "0d82e539d01373a46c5ccc84dff37d18add0325b"
        ],
        [
            "exists (fun x:point_set X => phi x * g0 x).",
            "VernacExtend",
            "5021e1da67e02892e3ada0fb4cb3e713155e03a0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply pointwise_continuity; intros.",
            "VernacExtend",
            "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
        ],
        [
            "apply product_continuous; apply continuous_func_continuous_everywhere; trivial.",
            "VernacExtend",
            "bf5de17a3798cf46ef03c57e4155741b9c3af808"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "replace (1*g0 (subspace_inc F x)) with (g0 (subspace_inc F x)) by auto with real.",
            "VernacExtend",
            "133f3af2cc87ed0035de594699cf662694068b18"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "destruct x; trivial.",
            "VernacExtend",
            "bbff326ec32235fabdefaa17829f382a345b7d0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply and_comm; apply Rabs_def2.",
            "VernacExtend",
            "c4a471a509bbb6d23725a218e7f2caf5d5c59445"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite (Rabs_right (phi x)); try (apply Rle_ge; apply H7).",
            "VernacExtend",
            "8ca67c4f645d7f979cb1842f9ade1b3a3179fbbb"
        ],
        [
            "destruct (classic (In G x)).",
            "VernacExtend",
            "d3a2bb4e94262cc0c822ec766dea719f75483fb4"
        ],
        [
            "rewrite H8; trivial.",
            "VernacExtend",
            "c815208b0185596145182ae1b98659b9bf77205c"
        ],
        [
            "replace (0*Rabs (g0 x)) with 0; auto with real.",
            "VernacExtend",
            "81ac7b52d25bbe2a0d5613ce2598a35c06d132d1"
        ],
        [
            "assert (Rabs (g0 x) < 1).",
            "VernacExtend",
            "65cb83fda8e7f2c77c163304f3cde28e7a3ea81a"
        ],
        [
            "assert (Rabs (g0 x) <= 1).",
            "VernacExtend",
            "ee0e948215f8348f6f599853792345a287731a18"
        ],
        [
            "destruct (H5 x).",
            "VernacExtend",
            "b0d5aefcbb0cb0fb6f53db072a0d8811f995ce94"
        ],
        [
            "unfold Rabs; destruct Rcase_abs; fourier.",
            "VernacExtend",
            "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
        ],
        [
            "destruct H11; trivial.",
            "VernacExtend",
            "b5b5bf7807ba11813c13d661f246edec271dd9d0"
        ],
        [
            "contradiction H10.",
            "VernacExtend",
            "9cd6a990783c9f0fd0192d90fe9c80a83715b2d7"
        ],
        [
            "unfold Rabs in H11; destruct Rcase_abs in H11.",
            "VernacExtend",
            "957b40468d079684625d0ed3906288e2609df37f"
        ],
        [
            "constructor; right.",
            "VernacExtend",
            "61cc1ded7d53681769ab30d9df5847ce13b641ac"
        ],
        [
            "replace (g0 x) with (- -(g0 x)) by auto with real.",
            "VernacExtend",
            "1a1f18cb4cccc01b1b32190cf029445c2fd956ac"
        ],
        [
            "change (-1) with (Ropp 1).",
            "VernacExtend",
            "42463092a9499795b4fb727af0baff3358ee3bf8"
        ],
        [
            "f_equal; trivial.",
            "VernacExtend",
            "232e01a4ac5b3c7b3afa8e2ea5ea4fd4a55d1e22"
        ],
        [
            "constructor; left; trivial.",
            "VernacExtend",
            "b4fdda639a531f058d34f776618fe9d528ef9807"
        ],
        [
            "destruct (H7 x).",
            "VernacExtend",
            "cc9f4a8f96389af066286bb4dc3ca40b043216b0"
        ],
        [
            "apply Rle_lt_trans with (Rabs (g0 x)); trivial.",
            "VernacExtend",
            "50454b2a485feaabb8bc4bffae3388d64eb67cf5"
        ],
        [
            "pattern (Rabs (g0 x)) at 2; replace (Rabs (g0 x)) with (1*Rabs (g0 x)) by auto with real.",
            "VernacExtend",
            "c09fd2134d0623a3b64cc43573efed6e003236bf"
        ],
        [
            "apply Rmult_le_compat_r; trivial.",
            "VernacExtend",
            "96461b5678e0790b02592a35569340bf95209975"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Tietze_extension_theorem: forall (X:TopologicalSpace) (F:Ensemble (point_set X)) (f:point_set (SubspaceTopology F) -> point_set RTop), normal_sep X -> closed F -> continuous f -> exists g:point_set X -> point_set RTop, continuous g /\\ (forall x:point_set (SubspaceTopology F), g (subspace_inc F x) = f x).",
            "VernacStartTheoremProof",
            "ec41d4a158eee29c171deb45ccd8311fc7e99a10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose (U := characteristic_function_to_ensemble (fun x:point_set RTop => -1 < x < 1)).",
            "VernacExtend",
            "38019eabc07e15b90a3e8a4825d972714887f8c8"
        ],
        [
            "pose proof (open_interval_homeomorphic_to_real_line).",
            "VernacExtend",
            "aaff49a8ecf0c6ae415ccba0b6426f1210b28ebe"
        ],
        [
            "fold U in H2.",
            "VernacExtend",
            "001ff2790d4d68829066cd79c5e26f6adccf8c99"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "destruct H2 as [a [b]].",
            "VernacExtend",
            "328d5fa413e3c60fef16020739919c38671701dd"
        ],
        [
            "pose (f0 := fun x:point_set (SubspaceTopology F) => subspace_inc U (a (f x))).",
            "VernacExtend",
            "64417ab76670da13fdca2a481b15ece2c7696149"
        ],
        [
            "destruct (open_bounded_Tietze_extension_theorem X F f0) as [g0 [? []]]; trivial.",
            "VernacExtend",
            "2da47ee19f8854bf81f3aac32bd032c4220347f9"
        ],
        [
            "unfold f0.",
            "VernacExtend",
            "b30cc31b2d2ad3d7478c3accc74332f6d70108e2"
        ],
        [
            "apply continuous_composition.",
            "VernacExtend",
            "8e5ba57f367304ab8752b9b1e2d6bee167d6ba5c"
        ],
        [
            "apply subspace_inc_continuous.",
            "VernacExtend",
            "a867e71345fc191aaa382d77e27f46da75e8c4a4"
        ],
        [
            "apply continuous_composition; trivial.",
            "VernacExtend",
            "14e8d3f32f0992b4ac7482674dd6b930a0960660"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold f0.",
            "VernacExtend",
            "b30cc31b2d2ad3d7478c3accc74332f6d70108e2"
        ],
        [
            "destruct (a (f x)).",
            "VernacExtend",
            "e09190fd4dac23248795f26b2d6d5acee536e975"
        ],
        [
            "destruct i; trivial.",
            "VernacExtend",
            "6a07f60a90a9814f11d4417e507584eab760b0dc"
        ],
        [
            "assert (forall x:point_set X, In U (g0 x)).",
            "VernacExtend",
            "f9edad0eb664b7c3d5fa9de8ef2415fbf1fd1c55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "constructor; apply H8.",
            "VernacExtend",
            "2e75ab4a39845173ae37cc378060fec960bd7972"
        ],
        [
            "Require Import ContinuousFactorization.",
            "VernacRequire",
            "a8e5e019d1223568fcaccdcf068b342d11d89b13"
        ],
        [
            "pose (g0_U := continuous_factorization g0 U H9).",
            "VernacExtend",
            "5525e48b44bd5db0e76b4d6d62e88c086c45973c"
        ],
        [
            "assert (continuous g0_U).",
            "VernacExtend",
            "886c2d2a3f3da9879f44e1b63d53bff060f202c0"
        ],
        [
            "apply factorization_is_continuous; trivial.",
            "VernacExtend",
            "779e8fe9dd70906966190b7f05f9cdcd401e1a1c"
        ],
        [
            "exists (fun x:point_set X => b (g0_U x)).",
            "VernacExtend",
            "d5fb1925186e8bd578ecd5a85c61ae71fb0276ac"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply continuous_composition; trivial.",
            "VernacExtend",
            "14e8d3f32f0992b4ac7482674dd6b930a0960660"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold g0_U; unfold continuous_factorization.",
            "VernacExtend",
            "e000ce5e4a3b64ffc80f05a1ed7aecc3a02e710b"
        ],
        [
            "generalize (H9 (subspace_inc F x)).",
            "VernacExtend",
            "0f129f98c2c1d687d715ffeba9f6d64f7d7e4d67"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (exist _ (f0 x) i) with (a (f x)).",
            "VernacExtend",
            "b58f71ed5989a5b607d45c42aefd5fb13dca4c6e"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "From ZornsLemma Require Import Proj1SigInjective.",
            "VernacRequire",
            "56b6143754293eea9757603c8bbb82454ab70eae"
        ],
        [
            "apply (proj1_sig_injective (In U)).",
            "VernacExtend",
            "c6c409ba729fd858c41ca86e6afbda77ffd72ddf"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "subspace_inc_takes_closed_to_closed",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (subspace_topology_topology _ _ _ H) as [U []].",
                        "VernacExtend",
                        "fab18963d34a913b76afcbe0cacb0c4b5a95437c"
                    ]
                },
                {
                    "command": [
                        "replace (Im G (subspace_inc F)) with (Intersection F (Complement U)).",
                        "VernacExtend",
                        "31fa66db57df913934959c89e2affa51b07a2228"
                    ]
                },
                {
                    "command": [
                        "apply closed_intersection2; trivial.",
                        "VernacExtend",
                        "9a262560fd9b4b199ffccc140c39e631bbd5998e"
                    ]
                },
                {
                    "command": [
                        "red; rewrite Complement_Complement; trivial.",
                        "VernacExtend",
                        "55b71e9612fed055a89b57ce503120f8b9923277"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ x H2); trivial.",
                        "VernacExtend",
                        "99e4c54aaa7251b0f85fae9fa8c16bf2bf35320b"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; intro.",
                        "VernacExtend",
                        "55e5f4eb66528dc4c7274b2b611cda0433510c40"
                    ]
                },
                {
                    "command": [
                        "change (In (Complement G) (exist (In F) x H2)) in H4.",
                        "VernacExtend",
                        "458dea34e761b449b9932f0d664e6063eaa62ccd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H4.",
                        "VernacExtend",
                        "b9e2c31ed60bbabdfde4a836d5d490897638472a"
                    ]
                },
                {
                    "command": [
                        "destruct H4.",
                        "VernacExtend",
                        "9ae390e4b039d96b643e4c1e0cd28291b37e7b3e"
                    ]
                },
                {
                    "command": [
                        "simpl in H4.",
                        "VernacExtend",
                        "31358c428a532f17f4c3cd16100d65b9f5ba8243"
                    ]
                },
                {
                    "command": [
                        "contradiction H3.",
                        "VernacExtend",
                        "054027d52351421eaf3068785d563f4bce8f5bda"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as [[y]].",
                        "VernacExtend",
                        "d7b06a019f176debfda8ff9ccf9008271f261bf9"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; clear y0 H3.",
                        "VernacExtend",
                        "141e917fdc50ce8fdc00520e8d95ddef71963f00"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "absurd (In (Complement G) (exist (fun x => In F x) y i)).",
                        "VernacExtend",
                        "ea7b8e024c554ea2a5f7094ebead6b57df1a4d3e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "contradiction H4.",
                        "VernacExtend",
                        "36a5f87a9e4f004b0d14e87408a1d6a295af4ff5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_order",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "red; intros; apply Rle_refl.",
                        "VernacExtend",
                        "be11c6e3421b77d74f242c55a22fdc9f3542de3c"
                    ]
                },
                {
                    "command": [
                        "red; intros; eapply Rle_trans; [ apply H | apply H0 ].",
                        "VernacExtend",
                        "48c03490f3666685c2bbc8198af52889267e8a3c"
                    ]
                },
                {
                    "command": [
                        "red; intros; apply Rle_antisym; trivial.",
                        "VernacExtend",
                        "4141169a877dd5f3ae91ad3cab3ebc34cb647afc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_bound",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold extension_approximation.",
                        "VernacExtend",
                        "27034828037385d5285a81492216a09feb083e79"
                    ]
                },
                {
                    "command": [
                        "destruct Urysohns_lemma_function as [g].",
                        "VernacExtend",
                        "4ef62ee3645a1f5b7aa79a7b3ad65c55a7789729"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct a as [? [? []]].",
                        "VernacExtend",
                        "ef59e33943fbe0a9f3f61b093f5ff71b0fdf807e"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 x).",
                        "VernacExtend",
                        "5be1bfa6b828f3ae7125c5e3c8c92fbd5209f3a3"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_diff_bound",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold extension_approximation; destruct Urysohns_lemma_function as [g [? [? []]]]; simpl.",
                        "VernacExtend",
                        "191881631271999c4be8c993fdcaed8858a84558"
                    ]
                },
                {
                    "command": [
                        "destruct (f0_bound x).",
                        "VernacExtend",
                        "55426a26ead3da457511e5187f75f1d332c21d57"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt (f0 x) (-1/3)).",
                        "VernacExtend",
                        "f3567af36c5119440eca3f56beeea2ad870b908c"
                    ]
                },
                {
                    "command": [
                        "replace (g (subspace_inc F x)) with 0.",
                        "VernacExtend",
                        "45ba126da3cd06825481b6cd5fd6a00b138f57a2"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply e.",
                        "VernacExtend",
                        "5ccb4b48ad2fa57b5fd43e6b484ecbc954b3380c"
                    ]
                },
                {
                    "command": [
                        "econstructor; trivial.",
                        "VernacExtend",
                        "fb8dd853d8f590ecfcb303786fdd1f65dbffc6d5"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt (1/3) (f0 x)).",
                        "VernacExtend",
                        "4ad746d7f6e20a5d97963b9681e9c8ec85df7fca"
                    ]
                },
                {
                    "command": [
                        "replace (g (subspace_inc F x)) with 1.",
                        "VernacExtend",
                        "89001587e16426a693d18d6a16c1f48d457046bc"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply e0.",
                        "VernacExtend",
                        "8ec86d4dcb0ce89d22cf0cc32f69f1b4133b37f4"
                    ]
                },
                {
                    "command": [
                        "econstructor; trivial.",
                        "VernacExtend",
                        "fb8dd853d8f590ecfcb303786fdd1f65dbffc6d5"
                    ]
                },
                {
                    "command": [
                        "constructor; auto with real.",
                        "VernacExtend",
                        "4270b36f9ba81648c4a2769341029372ea874e66"
                    ]
                },
                {
                    "command": [
                        "destruct (a (subspace_inc F x)).",
                        "VernacExtend",
                        "c3f764a2a15332acd439108775345999ee8bbbde"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "missing_pow_mult",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn; ring.",
                        "VernacExtend",
                        "3bab8d710779bfe37df95b26604624e67ce26512"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_seq",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "simple refine (fix g (n:nat) {struct n} := match n return { g0:point_set X -> point_set RTop | continuous g0 /\\ (forall x:point_set X, -1 + (2/3)^n <= g0 x <= 1 - (2/3)^n) /\\ (forall x:point_set (SubspaceTopology F), -(2/3)^n <= f x - g0 (subspace_inc F x) <= (2/3)^n) } with | O => exist _ (fun _ => 0) _ | S m => match g m with | exist gm y => let H := _ in let approx := extension_approximation (fun x:point_set (SubspaceTopology F) => (3/2)^m * (f x - gm (subspace_inc F x))) H in exist _ (fun x:point_set X => gm x + (2/3)^m * approx x) _ end end); clear g; [ | | clearbody H ].",
                        "VernacExtend",
                        "5ae67739d1756f029d1302d388a8dcb533479a87"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply continuous_constant.",
                        "VernacExtend",
                        "6bc7cabfd636343a8d917565d7fbed6fd6ad18d4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros; split; ring_simplify; auto with real.",
                        "VernacExtend",
                        "940e36088c8be0764809597f4bfe8251f2ca653b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (f_bound x).",
                        "VernacExtend",
                        "ea80396725df56206d0b30de50910d7dfb8cdfd4"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; intros.",
                        "VernacExtend",
                        "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
                    ]
                },
                {
                    "command": [
                        "apply const_multiple_continuous.",
                        "VernacExtend",
                        "0a6c43514326967333e29bb2ddfa941d431ee5a5"
                    ]
                },
                {
                    "command": [
                        "apply diff_continuous.",
                        "VernacExtend",
                        "a08ab98b43bb88172b64ed849f339f9372e65611"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere; trivial.",
                        "VernacExtend",
                        "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
                    ]
                },
                {
                    "command": [
                        "apply continuous_composition_at.",
                        "VernacExtend",
                        "d5e4d2519966be7ec1ad9d13d514bb2094520417"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere; trivial.",
                        "VernacExtend",
                        "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere; apply subspace_inc_continuous.",
                        "VernacExtend",
                        "c2b34e69933d8403d0ce6fbe664b839540845cd6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (H023m: 0 <= (2/3)^m).",
                        "VernacExtend",
                        "4bce648c0d3ef1204fc7403eb06bad1ed84ba053"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; fourier.",
                        "VernacExtend",
                        "7da04af5913a10691f6e5de356655f6f65f41b33"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (H032m: 0 <= (3/2)^m).",
                        "VernacExtend",
                        "3c90d9c8e4941b582b165d6228a5ecd146a5f35f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; fourier.",
                        "VernacExtend",
                        "7da04af5913a10691f6e5de356655f6f65f41b33"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:point_set (SubspaceTopology F), -1 <= (3/2)^m * (f x - gm (subspace_inc F x)) <= 1).",
                        "VernacExtend",
                        "f862c5115216ccf2b7a808e32f42dd709821cac4"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct y as [? []].",
                        "VernacExtend",
                        "4c4a6a477cd08150a0b3740895e70fed26240052"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 x).",
                        "VernacExtend",
                        "7c8c961480b1a357ba6918b1d3e0e31f68e32365"
                    ]
                },
                {
                    "command": [
                        "assert ((3/2)^m * (2/3)^m = 1).",
                        "VernacExtend",
                        "efaf085e9975efda7c0a1a517fc98e1bcf6e5e79"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- missing_pow_mult.",
                        "VernacExtend",
                        "b62c7776e2ba6b64077094d9eed30c44dd18a334"
                    ]
                },
                {
                    "command": [
                        "replace (3/2*(2/3)) with 1 by field.",
                        "VernacExtend",
                        "a43b9ad29d04ae63fd0cfbbb394d5d9256f03b73"
                    ]
                },
                {
                    "command": [
                        "apply pow1.",
                        "VernacExtend",
                        "330624b49be08458a411f71b24870c1a131fbb29"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "replace (-1) with ((3/2)^m * (- (2/3)^m)).",
                        "VernacExtend",
                        "f143e740c97ae0d2da43f21c259b3d0d42c9d17c"
                    ]
                },
                {
                    "command": [
                        "pattern 1 at 0, 1; replace 1 with ((3/2)^m * (2/3)^m).",
                        "VernacExtend",
                        "941368a023b4a44f6c1a8bb8a342c392d8f460a4"
                    ]
                },
                {
                    "command": [
                        "split; apply Rmult_le_compat_l; trivial.",
                        "VernacExtend",
                        "7b4024c28c1fd30599529191c9a2b636699e74a3"
                    ]
                },
                {
                    "command": [
                        "replace ((3/2)^m * -(2/3)^m) with (- ((3/2)^m * (2/3)^m)) by ring.",
                        "VernacExtend",
                        "2e88e1d2d22a049064ff63b5388ecf2767775c19"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:point_set X, -1/3 <= approx x <= 1/3).",
                        "VernacExtend",
                        "2c849c5768368849409f3c699c77a96a79d11dcc"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply extension_approximation_bound.",
                        "VernacExtend",
                        "f65afd4f18d95c0330307c16fa85a118669e1179"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:point_set (SubspaceTopology F), -2/3 <= (3/2)^m * (f x - gm (subspace_inc F x)) - approx (subspace_inc F x) <= 2/3).",
                        "VernacExtend",
                        "7c447c8c565c6a2e68ab80a70cf8867a17fa1ea5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply extension_approximation_diff_bound; trivial.",
                        "VernacExtend",
                        "215518849adb968e4467e0c5d1f9970e47b125cb"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct y as [? []].",
                        "VernacExtend",
                        "4c4a6a477cd08150a0b3740895e70fed26240052"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; intros.",
                        "VernacExtend",
                        "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
                    ]
                },
                {
                    "command": [
                        "apply sum_continuous.",
                        "VernacExtend",
                        "681c47cc39685429cf79ce4050296221b74f3315"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere; trivial.",
                        "VernacExtend",
                        "c7f52cbde5816d9707ae8f41ed57e5b9d31e30e1"
                    ]
                },
                {
                    "command": [
                        "apply const_multiple_continuous.",
                        "VernacExtend",
                        "0a6c43514326967333e29bb2ddfa941d431ee5a5"
                    ]
                },
                {
                    "command": [
                        "apply continuous_func_continuous_everywhere.",
                        "VernacExtend",
                        "66315e214acc36a7b42d68e92f06119372c45a83"
                    ]
                },
                {
                    "command": [
                        "apply extension_approximation_continuous.",
                        "VernacExtend",
                        "4f334d114366a462f0fcbdbdd8b2fe79f0edbfd0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (H4 x).",
                        "VernacExtend",
                        "f716f614fba2a73a6075dc6527d2e23497efaf65"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 x).",
                        "VernacExtend",
                        "6389610dc8962fc835049be1d767d5b9d85b5e10"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= (2/3)^m).",
                        "VernacExtend",
                        "711a121388dd3d802e85a87aa1860963e59e591c"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; fourier.",
                        "VernacExtend",
                        "7da04af5913a10691f6e5de356655f6f65f41b33"
                    ]
                },
                {
                    "command": [
                        "assert ((2/3)^m * (-1/3) <= (2/3)^m * approx x <= (2/3)^m * (1/3)).",
                        "VernacExtend",
                        "476d91cc9374789017223859883e740eda1a4e4f"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; apply Rmult_le_compat_l; trivial.",
                        "VernacExtend",
                        "7b4024c28c1fd30599529191c9a2b636699e74a3"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct H11.",
                        "VernacExtend",
                        "f9356eb773be7520ebefe6aa4934a6b1dd23e506"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (-(2/3*(2/3)^m)) with ((2/3)^m * (-2/3)) by field.",
                        "VernacExtend",
                        "1dc9b59c5eea4fef8eac3279cefb8765e3c848ff"
                    ]
                },
                {
                    "command": [
                        "replace (2/3*(2/3)^m) with ((2/3)^m * (2/3)) by ring.",
                        "VernacExtend",
                        "73161a1c21b81cf9b4bfe7756ea848fd7dc6efc3"
                    ]
                },
                {
                    "command": [
                        "replace (f x - (gm (subspace_inc F x) + (2/3)^m * approx (subspace_inc F x))) with ((2/3)^m * ((3/2)^m * (f x - gm (subspace_inc F x)) - approx (subspace_inc F x))).",
                        "VernacExtend",
                        "6f2194dc6bb06f1e1c1d56fcfdf61d62a1e08651"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 x).",
                        "VernacExtend",
                        "7c8c961480b1a357ba6918b1d3e0e31f68e32365"
                    ]
                },
                {
                    "command": [
                        "split; apply Rmult_le_compat_l; trivial.",
                        "VernacExtend",
                        "7b4024c28c1fd30599529191c9a2b636699e74a3"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "replace ((2/3)^m*(3/2)^m) with 1.",
                        "VernacExtend",
                        "03649349c5949ada9e8ca16d19ef3f4e10bcee9a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- missing_pow_mult.",
                        "VernacExtend",
                        "b62c7776e2ba6b64077094d9eed30c44dd18a334"
                    ]
                },
                {
                    "command": [
                        "replace (2/3*(3/2)) with 1 by field.",
                        "VernacExtend",
                        "7fe6c226b1c7ff25cd50d8ea5abc15b2b8d58399"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply pow1.",
                        "VernacExtend",
                        "1466dbb0c83a58ed570848740d6287ac869d055e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_seq_diff",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl extension_approximation_seq.",
                        "VernacExtend",
                        "d35482abde67ad270eb209b1abc2814d8157e3a6"
                    ]
                },
                {
                    "command": [
                        "destruct extension_approximation_seq; simpl.",
                        "VernacExtend",
                        "b4ec3c80be20a7a16062ae4c97f3a3c49503254a"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context [extension_approximation ?A ?B x] => cut (-1/3 <= extension_approximation A B x <= 1/3); [ generalize (extension_approximation A B x) | apply extension_approximation_bound ] end.",
                        "VernacExtend",
                        "9accd4135a933b7b41b0aceeccf443217369322d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= (2/3)^n).",
                        "VernacExtend",
                        "130c4dcaf905a3f95b881cbc3cf38740f71949eb"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; fourier.",
                        "VernacExtend",
                        "7da04af5913a10691f6e5de356655f6f65f41b33"
                    ]
                },
                {
                    "command": [
                        "replace (-(1/3*(2/3)^n)) with ((2/3)^n*(-1/3)) by field.",
                        "VernacExtend",
                        "b3a4f007c1a6fdb8321d6b478c0cbe6b6fb2bc37"
                    ]
                },
                {
                    "command": [
                        "replace (1/3*(2/3)^n) with ((2/3)^n*(1/3)) by ring.",
                        "VernacExtend",
                        "1a9170114831240bb9b1ec4c5f7cb43056e06864"
                    ]
                },
                {
                    "command": [
                        "replace (x0 x + (2/3)^n*p - x0 x) with ((2/3)^n*p) by ring.",
                        "VernacExtend",
                        "9bf68f2dd0fdf62eeea30c616a72360dabf8dd46"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "split; apply Rmult_le_compat_l; trivial.",
                        "VernacExtend",
                        "7b4024c28c1fd30599529191c9a2b636699e74a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_R1_pow",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "induction 2.",
                        "VernacExtend",
                        "1af3b9f2643066cd76726ca6025cb318959840d3"
                    ]
                },
                {
                    "command": [
                        "auto with real.",
                        "VernacExtend",
                        "2995b59d794585bf85ae99aac74dfded28d91a3e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (x^m) with (1*x^m) by auto with real.",
                        "VernacExtend",
                        "1389d70170ae2aaf11743d8e9d2dda1272566eab"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat; trivial.",
                        "VernacExtend",
                        "f1f7c0e7532d949b9dda3f590f5d0f0f10789b2e"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; trivial.",
                        "VernacExtend",
                        "3e3bc0148ec7c5d2746e19b0f819a7cf26fef4fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_seq_cauchy_aux",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "cut (forall (m n:nat) (x:point_set X), (m <= n)%nat -> Rabs (proj1_sig (extension_approximation_seq m) x - proj1_sig (extension_approximation_seq n) x) <= (2/3)^m - (2/3)^n).",
                        "VernacExtend",
                        "62fb6b25482d1e2f4b1bc79373bace88705ab074"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_or_lt m n).",
                        "VernacExtend",
                        "de8d9eb36b6ef81b5408ca4e7300c993e8417c99"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right ((2/3)^m - (2/3)^n)).",
                        "VernacExtend",
                        "b30eee9fa8e7c91e5a1d2086104bcba695a914c9"
                    ]
                },
                {
                    "command": [
                        "apply H; trivial.",
                        "VernacExtend",
                        "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
                    ]
                },
                {
                    "command": [
                        "apply Rge_minus.",
                        "VernacExtend",
                        "a4511845a3392e6b50fa37e8429010098a62df7d"
                    ]
                },
                {
                    "command": [
                        "cut ((2/3)^n <= (2/3)^m); auto with real.",
                        "VernacExtend",
                        "a10f9b765bef1465aa9db0f115a53de7ccf9049e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_R1_pow; trivial.",
                        "VernacExtend",
                        "f4f300913c89551bd31bf9d1a1958b78860a8c3e"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak in H0.",
                        "VernacExtend",
                        "5a7e81560cc7080b1697888356c3e51b73d7da30"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left1 ((2/3)^m - (2/3)^n)).",
                        "VernacExtend",
                        "d731d2642c8c77dc18e95684cdefd99f9425265b"
                    ]
                },
                {
                    "command": [
                        "replace (- ((2/3)^m - (2/3)^n)) with ((2/3)^n - (2/3)^m) by ring.",
                        "VernacExtend",
                        "6c686f6be881eed94735b7811d5be85a968040a4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_minus_sym.",
                        "VernacExtend",
                        "ddb6224679ef13d2115963f7fdb5e59e73f39ad2"
                    ]
                },
                {
                    "command": [
                        "apply H; trivial.",
                        "VernacExtend",
                        "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus.",
                        "VernacExtend",
                        "7e46e8a6683420ce8b2242ac68da7361c6b86840"
                    ]
                },
                {
                    "command": [
                        "apply Rle_R1_pow; trivial.",
                        "VernacExtend",
                        "f4f300913c89551bd31bf9d1a1958b78860a8c3e"
                    ]
                },
                {
                    "command": [
                        "split; fourier.",
                        "VernacExtend",
                        "3f72ccceaa8467d019b5ada9df7c7437ba5fcd1e"
                    ]
                },
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with |- context [ ?y - ?y ] => replace (y-y) with 0 by ring end.",
                        "VernacExtend",
                        "229525d7a37ca37defcbefb48f92dfe00d57fcd2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0; apply Rle_refl.",
                        "VernacExtend",
                        "2589c0228835a281c1277f9e907732082052cf1c"
                    ]
                },
                {
                    "command": [
                        "simpl pow.",
                        "VernacExtend",
                        "e238f4f24156f93599c988ae082bf68873c6cabc"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (proj1_sig (extension_approximation_seq m) x - proj1_sig (extension_approximation_seq m0) x) + Rabs (proj1_sig (extension_approximation_seq m0) x - proj1_sig (extension_approximation_seq (S m0)) x)).",
                        "VernacExtend",
                        "ae951ec416a737ee322b430abe4167db1d5ecbb4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "apply R_metric_is_metric.",
                        "VernacExtend",
                        "2734f0f82df672b7f52699b9132ca3d97cb0cd3b"
                    ]
                },
                {
                    "command": [
                        "pose proof (extension_approximation_seq_diff m0 x).",
                        "VernacExtend",
                        "e9ec6a548caaab9169125e1a3f7a1009466b76a8"
                    ]
                },
                {
                    "command": [
                        "assert (Rabs (proj1_sig (extension_approximation_seq m0) x - proj1_sig (extension_approximation_seq (S m0)) x) <= 1/3 * (2/3)^m0).",
                        "VernacExtend",
                        "149e00dcd4d331ad50e0913415fb25d003d29107"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs.",
                        "VernacExtend",
                        "32b62f5465b04c4380fa7a8bf154e157fb296719"
                    ]
                },
                {
                    "command": [
                        "destruct Rcase_abs; fourier.",
                        "VernacExtend",
                        "a357cf6100bcc1fa548183baeb9287ec8da12928"
                    ]
                },
                {
                    "command": [
                        "fourier.",
                        "VernacExtend",
                        "7c61df2f7a75861b72510391198365d1ca7ca625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "convert_approx_to_uniform_space",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "refine (fun n:nat => exist _ (proj1_sig (extension_approximation_seq n)) _).",
                        "VernacExtend",
                        "de7beba56a639780c3bd8d813ed63911dde56754"
                    ]
                },
                {
                    "command": [
                        "destruct extension_approximation_seq as [g [? []]].",
                        "VernacExtend",
                        "f2e3c29f58c05323b2ede961e91c480d01d1c3a8"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold R_metric.",
                        "VernacExtend",
                        "613d4b706655ea7813b5f3111d4f14c13f70321c"
                    ]
                },
                {
                    "command": [
                        "exists (1 - (2/3)^n).",
                        "VernacExtend",
                        "9f2c1b622e967002d14b7716f840eef93dce6df7"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear y H0.",
                        "VernacExtend",
                        "d125bc8a9f64c166af7d24d982521b10be525b34"
                    ]
                },
                {
                    "command": [
                        "destruct (a x).",
                        "VernacExtend",
                        "f2343d14237b845bd027446c41c52505db9314b1"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; destruct Rcase_abs; fourier.",
                        "VernacExtend",
                        "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "extension_approximation_seq_cauchy",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (Rabs (2/3) < 1).",
                        "VernacExtend",
                        "954b9935af43bc437106a8b0efa85e28f64c83b1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right; fourier.",
                        "VernacExtend",
                        "e0c2f24914afc1620385ff4a46a168edd1a6207b"
                    ]
                },
                {
                    "command": [
                        "assert (0 < eps/2) by fourier.",
                        "VernacExtend",
                        "cd9aab541bab25653ee07339e4f3d4e3d878af01"
                    ]
                },
                {
                    "command": [
                        "destruct (pow_lt_1_zero (2/3) H0 (eps/2) H1) as [N].",
                        "VernacExtend",
                        "387e9ea21297800713ab4c037344ccb322ea1361"
                    ]
                },
                {
                    "command": [
                        "exists N.",
                        "VernacExtend",
                        "3a77aef7937b4644ae655ca246f76b7aa0d197df"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs ((2/3)^m - (2/3)^n)).",
                        "VernacExtend",
                        "3283f16385d7f4766a50cb41439efba33ee3a5aa"
                    ]
                },
                {
                    "command": [
                        "unfold uniform_metric; unfold convert_approx_to_uniform_space; destruct sup; simpl.",
                        "VernacExtend",
                        "5685a775a88734779bcd627fb71a0635620a4064"
                    ]
                },
                {
                    "command": [
                        "apply i.",
                        "VernacExtend",
                        "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H5.",
                        "VernacExtend",
                        "ed9c2c1b0fd20c14ad03acc37362cc2c315199ed"
                    ]
                },
                {
                    "command": [
                        "rewrite H6; clear y H6.",
                        "VernacExtend",
                        "efbc036df56279b70033fae630f14e52679fec2b"
                    ]
                },
                {
                    "command": [
                        "rewrite metric_sym.",
                        "VernacExtend",
                        "5285a5e6e9ad8fb1ef26ec6bc8a41f54867d67d2"
                    ]
                },
                {
                    "command": [
                        "apply extension_approximation_seq_cauchy_aux.",
                        "VernacExtend",
                        "958ae8066504b3a5cade86fb80fc05cdf8c5afff"
                    ]
                },
                {
                    "command": [
                        "exact R_metric_is_metric.",
                        "VernacExtend",
                        "c83baa6d924cc0fd2fc7d4c280f5065f549d24f3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs ((2/3)^m) + Rabs((2/3)^n)).",
                        "VernacExtend",
                        "0839ad48f9dc69c225069ec7290eff02fc9a5148"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rabs_Ropp ((2/3)^n)).",
                        "VernacExtend",
                        "0eea52edd6b08f6da48c98a0a81fdc41c5e84d4c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "replace eps with (eps/2 + eps/2) by field.",
                        "VernacExtend",
                        "ae28027106d70b55d71f9e3ff5279dcf42f407e1"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat; apply H2; trivial.",
                        "VernacExtend",
                        "2e760937c3fa816c32197fee405713347fd2980d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "convert_continuity",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "assert (continuous (fun x:R => x) (X:=RTop) (Y:=MetricTopology R_metric R_metric_is_metric)).",
                        "VernacExtend",
                        "d971cae94a9ccb6b299eafd8aa4e103d11621d44"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; intros.",
                        "VernacExtend",
                        "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_fun_continuity with R_metric R_metric; intros.",
                        "VernacExtend",
                        "f427be545cdaf0e6d69e1ae9814c1f9d2ba221ea"
                    ]
                },
                {
                    "command": [
                        "apply RTop_metrization.",
                        "VernacExtend",
                        "acf1d39b8983201fcf16c9cad8b64bf04f6ced79"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "exists eps; split; trivial.",
                        "VernacExtend",
                        "54056b1e94fed84f22f2ecc2b6c81600fa72d2da"
                    ]
                },
                {
                    "command": [
                        "assert (continuous (fun x:R => x) (X:=MetricTopology R_metric R_metric_is_metric) (Y:=RTop)).",
                        "VernacExtend",
                        "cd72752878a2fec83300b00f28fac5a5cb558a36"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; intros.",
                        "VernacExtend",
                        "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
                    ]
                },
                {
                    "command": [
                        "apply metric_space_fun_continuity with R_metric R_metric; intros.",
                        "VernacExtend",
                        "f427be545cdaf0e6d69e1ae9814c1f9d2ba221ea"
                    ]
                },
                {
                    "command": [
                        "apply MetricTopology_metrizable.",
                        "VernacExtend",
                        "5337467dbf1204ac8dbca8f0444a94bb348e6a88"
                    ]
                },
                {
                    "command": [
                        "apply RTop_metrization.",
                        "VernacExtend",
                        "acf1d39b8983201fcf16c9cad8b64bf04f6ced79"
                    ]
                },
                {
                    "command": [
                        "exists eps; split; trivial.",
                        "VernacExtend",
                        "54056b1e94fed84f22f2ecc2b6c81600fa72d2da"
                    ]
                },
                {
                    "command": [
                        "intros; split; intros.",
                        "VernacExtend",
                        "c2ba330b9c2c5e22fd554cd9ccb5c9ade0d6123e"
                    ]
                },
                {
                    "command": [
                        "apply continuous_composition with (1:=H) (2:=H1).",
                        "VernacExtend",
                        "62f02feba29fdecaa712c81add535659b7d1105c"
                    ]
                },
                {
                    "command": [
                        "apply continuous_composition with (1:=H0) (2:=H1).",
                        "VernacExtend",
                        "547e5cd7586736bd79f4218aa135eb8436bbcee2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Tietze_extension_func_continuous",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "unfold Tietze_extension_func; destruct constructive_definite_description as [g]; simpl.",
                        "VernacExtend",
                        "961dca9542fddc0ce3c4966ba1f58eec06d68b81"
                    ]
                },
                {
                    "command": [
                        "apply net_limit_in_closure with (S:=fun h:point_set (UniformTopology R_metric (fun _:point_set X => 0) R_metric_is_metric X_nonempty) => continuous (proj1_sig h) (Y:=MetricTopology R_metric R_metric_is_metric)) in n.",
                        "VernacExtend",
                        "39bb0b578a42483531ceb076fb424424b0782100"
                    ]
                },
                {
                    "command": [
                        "rewrite closure_fixes_closed in n.",
                        "VernacExtend",
                        "562964d59ebfa4407b0e436ee4dfc3927cea1263"
                    ]
                },
                {
                    "command": [
                        "unfold In in n.",
                        "VernacExtend",
                        "2d4ecd2866b9bbb09bf6293ec63ac9ef4c5a2009"
                    ]
                },
                {
                    "command": [
                        "apply <- convert_continuity; trivial.",
                        "VernacExtend",
                        "ab415e109b924387dd8c65ce81e673d73562a402"
                    ]
                },
                {
                    "command": [
                        "apply continuous_functions_closed_in_uniform_metric.",
                        "VernacExtend",
                        "494222868029af38bb468bbaf50c2501a3ff455b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists i; split.",
                        "VernacExtend",
                        "477bb23b46dc1bfd6deddc09865e4321a0ecea0c"
                    ]
                },
                {
                    "command": [
                        "simpl; constructor.",
                        "VernacExtend",
                        "ac61261ad3f03698bb630fde3118b8936863f48a"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold convert_approx_to_uniform_space; simpl.",
                        "VernacExtend",
                        "83f2a8a3c51ec075c6e8c0248041e007bfbfd8f5"
                    ]
                },
                {
                    "command": [
                        "destruct extension_approximation_seq as [h [? []]]; simpl.",
                        "VernacExtend",
                        "2ad21ecfba8fd8731664eac308168b69c026e076"
                    ]
                },
                {
                    "command": [
                        "apply -> convert_continuity; trivial.",
                        "VernacExtend",
                        "9a9a3caf6e6aad7db8cd9e6e5f4fe42bb0ba41bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "open_bounded_Tietze_extension_theorem",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (bounded_Tietze_extension_theorem _ F f) as [g0 [? []]]; trivial.",
                        "VernacExtend",
                        "4cd01560643911628403860cda9b233d54bf0161"
                    ]
                },
                {
                    "command": [
                        "intros; split; left; apply H2.",
                        "VernacExtend",
                        "4f15770e74c28a16be95ea0421f7360e32c96b54"
                    ]
                },
                {
                    "command": [
                        "pose (G := characteristic_function_to_ensemble (fun x:point_set X => g0 x = 1 \\/ g0 x = -1)).",
                        "VernacExtend",
                        "75a62a3fcae35216248738d0edb253e7d2a94dc1"
                    ]
                },
                {
                    "command": [
                        "destruct (UrysohnsLemma _ H G F) as [phi [? [? []]]]; trivial.",
                        "VernacExtend",
                        "cd674ef1e98223ed479742f39ca3ae856eeb83c7"
                    ]
                },
                {
                    "command": [
                        "replace G with (inverse_image g0 (Union (Singleton 1) (Singleton (-1)))).",
                        "VernacExtend",
                        "c863e569a9170a3029b4f45e13ddc545551020b8"
                    ]
                },
                {
                    "command": [
                        "red; rewrite <- inverse_image_complement.",
                        "VernacExtend",
                        "f27e7e6a1cf960de37b9ba358e183bd69b5f3167"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "apply (closed_union2 (X:=RTop)); apply Hausdorff_impl_T1_sep; apply T3_sep_impl_Hausdorff; apply normal_sep_impl_T3_sep; apply metrizable_impl_normal_sep; exists R_metric; (apply R_metric_is_metric || apply RTop_metrization).",
                        "VernacExtend",
                        "6fa1c42b80ebd04339dd4ba1252d3cae84efcfcd"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros.",
                        "VernacExtend",
                        "b8809005fbc1b613df32ddbcb1b0a950642327e5"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "left; destruct H6; trivial.",
                        "VernacExtend",
                        "b5b4d5ee508f2b0f14c5acf2e6ccc895d4ac0973"
                    ]
                },
                {
                    "command": [
                        "right; destruct H6; trivial.",
                        "VernacExtend",
                        "5d9941cb0e09e7342399a4762a49a4861caa36ad"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct H6; [ left | right ]; rewrite H6; constructor.",
                        "VernacExtend",
                        "fa89ca6d9a0ec1b47b2d875e1d39d1a46b5cad7d"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; auto with sets; red; intros.",
                        "VernacExtend",
                        "e719e538bbc3ef5b9d86dde4dadb26c96c4dca7e"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "assert (-1 < g0 x < 1).",
                        "VernacExtend",
                        "276fa19c756106e4ef868df477b1e0ad56006c6d"
                    ]
                },
                {
                    "command": [
                        "replace x with (subspace_inc F (exist _ x H7)) by reflexivity.",
                        "VernacExtend",
                        "fb6d2fc7de3b730fd8528c819a3ed73831daebed"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "destruct H8.",
                        "VernacExtend",
                        "9fb2c61f93ea55d054a69439c04b3c885f0137a6"
                    ]
                },
                {
                    "command": [
                        "destruct H6.",
                        "VernacExtend",
                        "bc461651d0c512c537c7e617c1056b84fca2b832"
                    ]
                },
                {
                    "command": [
                        "absurd (1 < 1); [ apply Rlt_irrefl | congruence ].",
                        "VernacExtend",
                        "6bba872f75576ec27f0052bd531f07dbf1a5f1e9"
                    ]
                },
                {
                    "command": [
                        "absurd (-1 < -1); [ apply Rlt_irrefl | congruence ].",
                        "VernacExtend",
                        "0d82e539d01373a46c5ccc84dff37d18add0325b"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:point_set X => phi x * g0 x).",
                        "VernacExtend",
                        "5021e1da67e02892e3ada0fb4cb3e713155e03a0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply pointwise_continuity; intros.",
                        "VernacExtend",
                        "d44e16b19c1c2e9f86b4755a4e6d24a5c2fa17ca"
                    ]
                },
                {
                    "command": [
                        "apply product_continuous; apply continuous_func_continuous_everywhere; trivial.",
                        "VernacExtend",
                        "bf5de17a3798cf46ef03c57e4155741b9c3af808"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H9.",
                        "VernacExtend",
                        "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
                    ]
                },
                {
                    "command": [
                        "replace (1*g0 (subspace_inc F x)) with (g0 (subspace_inc F x)) by auto with real.",
                        "VernacExtend",
                        "133f3af2cc87ed0035de594699cf662694068b18"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "destruct x; trivial.",
                        "VernacExtend",
                        "bbff326ec32235fabdefaa17829f382a345b7d0f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply and_comm; apply Rabs_def2.",
                        "VernacExtend",
                        "c4a471a509bbb6d23725a218e7f2caf5d5c59445"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (phi x)); try (apply Rle_ge; apply H7).",
                        "VernacExtend",
                        "8ca67c4f645d7f979cb1842f9ade1b3a3179fbbb"
                    ]
                },
                {
                    "command": [
                        "destruct (classic (In G x)).",
                        "VernacExtend",
                        "d3a2bb4e94262cc0c822ec766dea719f75483fb4"
                    ]
                },
                {
                    "command": [
                        "rewrite H8; trivial.",
                        "VernacExtend",
                        "c815208b0185596145182ae1b98659b9bf77205c"
                    ]
                },
                {
                    "command": [
                        "replace (0*Rabs (g0 x)) with 0; auto with real.",
                        "VernacExtend",
                        "81ac7b52d25bbe2a0d5613ce2598a35c06d132d1"
                    ]
                },
                {
                    "command": [
                        "assert (Rabs (g0 x) < 1).",
                        "VernacExtend",
                        "65cb83fda8e7f2c77c163304f3cde28e7a3ea81a"
                    ]
                },
                {
                    "command": [
                        "assert (Rabs (g0 x) <= 1).",
                        "VernacExtend",
                        "ee0e948215f8348f6f599853792345a287731a18"
                    ]
                },
                {
                    "command": [
                        "destruct (H5 x).",
                        "VernacExtend",
                        "b0d5aefcbb0cb0fb6f53db072a0d8811f995ce94"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; destruct Rcase_abs; fourier.",
                        "VernacExtend",
                        "2b0d4f9d5fff374e17a96a878fbf2ed953878d02"
                    ]
                },
                {
                    "command": [
                        "destruct H11; trivial.",
                        "VernacExtend",
                        "b5b5bf7807ba11813c13d661f246edec271dd9d0"
                    ]
                },
                {
                    "command": [
                        "contradiction H10.",
                        "VernacExtend",
                        "9cd6a990783c9f0fd0192d90fe9c80a83715b2d7"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs in H11; destruct Rcase_abs in H11.",
                        "VernacExtend",
                        "957b40468d079684625d0ed3906288e2609df37f"
                    ]
                },
                {
                    "command": [
                        "constructor; right.",
                        "VernacExtend",
                        "61cc1ded7d53681769ab30d9df5847ce13b641ac"
                    ]
                },
                {
                    "command": [
                        "replace (g0 x) with (- -(g0 x)) by auto with real.",
                        "VernacExtend",
                        "1a1f18cb4cccc01b1b32190cf029445c2fd956ac"
                    ]
                },
                {
                    "command": [
                        "change (-1) with (Ropp 1).",
                        "VernacExtend",
                        "42463092a9499795b4fb727af0baff3358ee3bf8"
                    ]
                },
                {
                    "command": [
                        "f_equal; trivial.",
                        "VernacExtend",
                        "232e01a4ac5b3c7b3afa8e2ea5ea4fd4a55d1e22"
                    ]
                },
                {
                    "command": [
                        "constructor; left; trivial.",
                        "VernacExtend",
                        "b4fdda639a531f058d34f776618fe9d528ef9807"
                    ]
                },
                {
                    "command": [
                        "destruct (H7 x).",
                        "VernacExtend",
                        "cc9f4a8f96389af066286bb4dc3ca40b043216b0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (g0 x)); trivial.",
                        "VernacExtend",
                        "50454b2a485feaabb8bc4bffae3388d64eb67cf5"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs (g0 x)) at 2; replace (Rabs (g0 x)) with (1*Rabs (g0 x)) by auto with real.",
                        "VernacExtend",
                        "c09fd2134d0623a3b64cc43573efed6e003236bf"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; trivial.",
                        "VernacExtend",
                        "96461b5678e0790b02592a35569340bf95209975"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}