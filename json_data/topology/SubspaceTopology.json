{
    "filename": "SubspaceTopology.v",
    "coq_project": "topology",
    "vernac_cmds": [
        [
            "Require Export TopologicalSpaces.",
            "VernacRequire",
            "45674cb36fa7313eb78e1518bfa113cb38c877af"
        ],
        [
            "Require Import WeakTopology.",
            "VernacRequire",
            "789dd74075ffbb3e2c1a25bc091f55b3d3c94eec"
        ],
        [
            "Section Subspace.",
            "VernacBeginSection",
            "31f8f1fe52bbb51b5cd96822c7548c45fbecf567"
        ],
        [
            "Variable X:TopologicalSpace.",
            "VernacAssumption",
            "61ca65a1329da3c1cce736cf909bcbd0ea4e492a"
        ],
        [
            "Variable A:Ensemble (point_set X).",
            "VernacAssumption",
            "e616eaf18ab58f70bbdd1d46acec2ffe1cddef44"
        ],
        [
            "Definition SubspaceTopology : TopologicalSpace := WeakTopology1 (proj1_sig (P:=fun x:point_set X => In A x)).",
            "VernacDefinition",
            "77197fec70637767c7502dfdf45d82e1fa216593"
        ],
        [
            "Definition subspace_inc : point_set SubspaceTopology -> point_set X := proj1_sig (P:=fun x:point_set X => In A x).",
            "VernacDefinition",
            "14a7783ff410df10629170c641d1ab24ff57892b"
        ],
        [
            "Lemma subspace_topology_topology: forall U:Ensemble {x:point_set X | In A x}, @open SubspaceTopology U -> exists V:Ensemble (point_set X), open V /\\ U = inverse_image subspace_inc V.",
            "VernacStartTheoremProof",
            "a565e5fac4985615ebca2a268dd0a8ff7ce4be42"
        ],
        [
            "apply weak_topology1_topology.",
            "VernacExtend",
            "f85faf8ed2d9b08315fc3fb8948d1df9491fe20f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subspace_inc_continuous: continuous subspace_inc.",
            "VernacStartTheoremProof",
            "36d8199a0ef5991caed03e6e5b2fd6130853e6a8"
        ],
        [
            "apply weak_topology1_makes_continuous_func.",
            "VernacExtend",
            "a6253dec1af88f69e4b95e8402301bd3c7986428"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Subspace.",
            "VernacEndSegment",
            "2f6328683b651d34b591a9b7e8764effae355d69"
        ],
        [
            "Arguments SubspaceTopology {X}.",
            "VernacArguments",
            "da1ec31b56d34a2dc764dff3a8e8983e268679d6"
        ],
        [
            "Arguments subspace_inc {X}.",
            "VernacArguments",
            "5cba18e3a9d684e30433c826e7787f34cde7bb9e"
        ]
    ],
    "proofs": [
        {
            "name": "subspace_topology_topology",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "apply weak_topology1_topology.",
                        "VernacExtend",
                        "f85faf8ed2d9b08315fc3fb8948d1df9491fe20f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subspace_inc_continuous",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "apply weak_topology1_makes_continuous_func.",
                        "VernacExtend",
                        "a6253dec1af88f69e4b95e8402301bd3c7986428"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}