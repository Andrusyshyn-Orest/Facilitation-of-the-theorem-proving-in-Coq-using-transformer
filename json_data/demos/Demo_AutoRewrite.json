{
    "filename": "Demo_AutoRewrite.v",
    "coq_project": "demos",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Section Ackermann.",
            "VernacBeginSection",
            "790bf068ea2bae73800667526f1208dde40dc97a"
        ],
        [
            "Variable Ack : nat -> nat -> nat.",
            "VernacAssumption",
            "2fd8452c7c5b75ab59704f6fef494725d87d3ce8"
        ],
        [
            "Axiom Ack0 : forall m : nat, Ack 0 m = S m.",
            "VernacAssumption",
            "1267dd93adfbfdb745f0adde11af49f2bc04920d"
        ],
        [
            "Axiom Ack1 : forall n : nat, Ack (S n) 0 = Ack n 1.",
            "VernacAssumption",
            "4ff78d9e85f57a0bdb2ce3c7b0413d6dcba642f8"
        ],
        [
            "Axiom Ack2 : forall n m : nat, Ack (S n) (S m) = Ack n (Ack (S n) m).",
            "VernacAssumption",
            "694abcd5936e6ccb9d4af73adf616ccc1c5e8a8f"
        ],
        [
            "Hint Rewrite Ack0 Ack1 Ack2 : base0.",
            "VernacExtend",
            "c3cbc6561c1d3006e086f98a0e42fdd735ec607e"
        ],
        [
            "Lemma ResAck0 : Ack 3 2 = 29.",
            "VernacStartTheoremProof",
            "bd01700597889b1a3c86f0e04fb3eb23e2e0368e"
        ],
        [
            "autorewrite with base0 using try reflexivity.",
            "VernacExtend",
            "8a5e8bd75a21b46dfc474460a76f3aa81d85a3ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Ackermann.",
            "VernacEndSegment",
            "374d11957149ee79eea8cafdc97ff928a25573ee"
        ],
        [
            "Section McCarthy.",
            "VernacBeginSection",
            "e2d20408a4f2c824518e69ec1035489c17a51252"
        ],
        [
            "Variable g : nat -> nat -> nat.",
            "VernacAssumption",
            "d3f944489ccd3733285f9100c648fd0d883907fd"
        ],
        [
            "Axiom g0 : forall m : nat, g 0 m = m.",
            "VernacAssumption",
            "d45c99bcb984945ecdec0ebf7c4eccf541db9500"
        ],
        [
            "Axiom g1 : forall n m : nat, n > 0 -> m > 100 -> g n m = g (pred n) (m - 10).",
            "VernacAssumption",
            "969e56eb797a723c743c7d0609403b7f781d9f1c"
        ],
        [
            "Axiom g2 : forall n m : nat, n > 0 -> m <= 100 -> g n m = g (S n) (m + 11).",
            "VernacAssumption",
            "040011b26d2ad252c718206e1d1e8537f705680f"
        ],
        [
            "Hint Rewrite g0 g1 g2 using omega : base1.",
            "VernacExtend",
            "3a134d5ce7cbaafd8513f1dce2afbe5537ee34ac"
        ],
        [
            "Lemma Resg0 : g 1 110 = 100.",
            "VernacStartTheoremProof",
            "af5768c638197649965b98ddcdea468d454c37c2"
        ],
        [
            "autorewrite with base1 using reflexivity || simpl in |- *.",
            "VernacExtend",
            "665e742e6415ce062b1c630a144a7a3ab2b582ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Resg1 : g 1 95 = 91.",
            "VernacStartTheoremProof",
            "8fd39ffcd71f80c6275e3781ec923de61665e045"
        ],
        [
            "autorewrite with base1 using reflexivity || simpl in |- *.",
            "VernacExtend",
            "665e742e6415ce062b1c630a144a7a3ab2b582ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End McCarthy.",
            "VernacEndSegment",
            "0d4ea8809d1faaa162d2601a851505cae7c34a15"
        ]
    ],
    "proofs": [
        {
            "name": "ResAck0",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "autorewrite with base0 using try reflexivity.",
                        "VernacExtend",
                        "8a5e8bd75a21b46dfc474460a76f3aa81d85a3ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Resg0",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "autorewrite with base1 using reflexivity || simpl in |- *.",
                        "VernacExtend",
                        "665e742e6415ce062b1c630a144a7a3ab2b582ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Resg1",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "autorewrite with base1 using reflexivity || simpl in |- *.",
                        "VernacExtend",
                        "665e742e6415ce062b1c630a144a7a3ab2b582ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}