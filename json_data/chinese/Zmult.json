{
    "filename": "Zmult.v",
    "coq_project": "chinese",
    "vernac_cmds": [
        [
            "Require Export Lci.",
            "VernacRequire",
            "eb7507a237f196fb88ae818a186d576c6e8b9110"
        ],
        [
            "Require Export misc.",
            "VernacRequire",
            "c61f9258a5a7d418c12369fa470e92f8b401827a"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Require Export Nat_complements.",
            "VernacRequire",
            "4d877fe080742834f638f04606a769a1be0357e4"
        ],
        [
            "Require Export groups.",
            "VernacRequire",
            "663c1f88c6a93304652015fd80ff8f2410cf49bb"
        ],
        [
            "Require Export rings.",
            "VernacRequire",
            "3ebcd4f102843b41e52dbd31b085207ba603935c"
        ],
        [
            "Require Export Zbase.",
            "VernacRequire",
            "90086057a1e27e47013d08b1052f4c5fbd9802d9"
        ],
        [
            "Require Export Z_succ_pred.",
            "VernacRequire",
            "e54e03665436093926052af7ebaa94d87e9e9e69"
        ],
        [
            "Require Export Zadd.",
            "VernacRequire",
            "1e90725df8bb4b0c4c6af3bc951d1e93eaeef285"
        ],
        [
            "Fixpoint multpos (x2 : Z) (n : nat) {struct n} : Z := match n with | O => x2 | S n0 => addZ (multpos x2 n0) x2 end.",
            "VernacFixpoint",
            "eae0fc73fbc8ebdb672c6d7ad7c738944697ae13"
        ],
        [
            "Fixpoint multneg (x2 : Z) (n : nat) {struct n} : Z := match n with | O => oppZ x2 | S n0 => addZ (multneg x2 n0) (oppZ x2) end.",
            "VernacFixpoint",
            "e24d14a73322ccbe1a9742d6c14dec15d4018f03"
        ],
        [
            "Definition multZ (x1 x2 : Z) := match x1 with | OZ => OZ | pos n => multpos x2 n | neg n => multneg x2 n end.",
            "VernacDefinition",
            "88d7cccd763256c06f455c9aa33df35bb38b3ede"
        ],
        [
            "Lemma multZ_eq1 : forall n : Z, multZ OZ n = OZ.",
            "VernacStartTheoremProof",
            "88789f37efe6a599cfe813a72bbafa6429825c40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multZ_eq2 : forall n : Z, multZ (pos 0) n = n.",
            "VernacStartTheoremProof",
            "dba0181d6e1d2599840f88807fd129bed67c3c81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multZ_eq3 : forall (n1 : nat) (n : Z), multZ (pos (S n1)) n = addZ (multZ (pos n1) n) n.",
            "VernacStartTheoremProof",
            "a642af66f8de23fb79f2cfcf81faa61277471fcf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multZ_eq4 : forall n : Z, multZ (neg 0) n = oppZ n.",
            "VernacStartTheoremProof",
            "c4b5fafe5f3531c955fad6e8145e19269f8ccdf0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multZ_eq5 : forall (n1 : nat) (n : Z), multZ (neg (S n1)) n = addZ (multZ (neg n1) n) (oppZ n).",
            "VernacStartTheoremProof",
            "bf83980d7f0a71153030ede827e5314cb06dc03a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_posZ : forall (x : nat) (y : Z), multZ (pos (S x)) y = addZ (multZ (pos x) y) y.",
            "VernacStartTheoremProof",
            "a9364d27e4e966f5602058ad6e2048270d7c6f36"
        ],
        [
            "Proof multZ_eq3.",
            "VernacExactProof",
            "578543e2d6b966ea73e1762a9b5763727014dc55"
        ],
        [
            "Lemma tech_mult_negZ : forall (x : nat) (y : Z), multZ (neg (S x)) y = addZ (multZ (neg x) y) (oppZ y).",
            "VernacStartTheoremProof",
            "32e2e7c381d0200e7a0de2dacbda1f83de97b98f"
        ],
        [
            "Proof multZ_eq5.",
            "VernacExactProof",
            "5facf82219a031015c6bcfa9447ce3f3b4d993bf"
        ],
        [
            "Lemma mult_succZ_l : forall x y : Z, multZ (succZ x) y = addZ (multZ x y) y.",
            "VernacStartTheoremProof",
            "2210561de2edded0895c61fe3c6822f390bcdba3"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "simpl in |- *; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "intros; simpl in |- *; reflexivity.",
            "VernacExtend",
            "854cdc9d9e97990c301aa41eba8e57e0e92b6986"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; symmetry in |- *.",
            "VernacExtend",
            "cd63abc54a6f74a8de567d20cffa866ba89d3d8d"
        ],
        [
            "elim (addZ_opposite y I); intros.",
            "VernacExtend",
            "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
        ],
        [
            "elim H0; intros; elim H2; intros; exact H4.",
            "VernacExtend",
            "dffa9e22b8c85dbaca8dc648d2a0e36a15e926a7"
        ],
        [
            "intros; unfold succZ in |- *; rewrite (tech_mult_negZ n0 y).",
            "VernacExtend",
            "8f0fd43c1b039687de6280a983666b932c798c6b"
        ],
        [
            "elim (addZ_associativity (multZ (neg n0) y) (oppZ y) y).",
            "VernacExtend",
            "3749f5d1210fe1ad1a6844e49249ab8c84b41414"
        ],
        [
            "elim (addZ_opposite y I); intros.",
            "VernacExtend",
            "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
        ],
        [
            "elim H1; intros; elim H3; intros.",
            "VernacExtend",
            "26bdd277638877608b445ab3777a35dad3a05f60"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "symmetry in |- *; exact (add_OZ (multZ (neg n0) y)).",
            "VernacExtend",
            "05591ad28bbc55cb7b656f5ff57c21bc7b19ca8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_predZ_l : forall x y : Z, multZ (predZ x) y = addZ (multZ x y) (oppZ y).",
            "VernacStartTheoremProof",
            "ca0df4e7a992e6644577bc687855e955462f96a7"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "simpl in |- *; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; symmetry in |- *.",
            "VernacExtend",
            "cd63abc54a6f74a8de567d20cffa866ba89d3d8d"
        ],
        [
            "elim (addZ_opposite y I); intros.",
            "VernacExtend",
            "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
        ],
        [
            "elim H0; intros; elim H2; intros; exact H3.",
            "VernacExtend",
            "5702cec2244d22a49c76cea1e201f59b98af92a5"
        ],
        [
            "intros; unfold predZ in |- *; rewrite (tech_mult_posZ n0 y).",
            "VernacExtend",
            "5a465bb218ae5c5ec1c0cc7e7d77320ece47241d"
        ],
        [
            "elim (addZ_associativity (multZ (pos n0) y) y (oppZ y)).",
            "VernacExtend",
            "8a555b6883b6e11009508111e7432f63cfa1f0a6"
        ],
        [
            "elim (addZ_opposite y I); intros.",
            "VernacExtend",
            "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
        ],
        [
            "elim H1; intros; elim H3; intros; rewrite H4.",
            "VernacExtend",
            "d7bce2edae98d61b3d3ceca3c1b09c6e8de77ac1"
        ],
        [
            "rewrite (add_OZ (multZ (pos n0) y)); reflexivity.",
            "VernacExtend",
            "588b3f06ecac756d978d7d69f0bc825ab3bfb587"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_succZ_r : forall x y : Z, multZ x (succZ y) = addZ (multZ x y) x.",
            "VernacStartTheoremProof",
            "51eb89ddf6dbd3a2c0c793eadc8822c08ccdfe7b"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "symmetry in |- *; exact (add_IZ_succZ y).",
            "VernacExtend",
            "dba756872ddd6fd752808588bffb43a0a2882a1e"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
            "VernacExtend",
            "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
        ],
        [
            "rewrite H; elim (addZ_commutativity (pos y0) (multZ (pos y0) y)).",
            "VernacExtend",
            "b471c1b74189298aa863ad928a45c125efc69e2e"
        ],
        [
            "elim (addZ_associativity (pos y0) (multZ (pos y0) y) (succZ y)).",
            "VernacExtend",
            "05fde4a46e9a36efc7d4f5552578d950cb49dcc7"
        ],
        [
            "elim (addZ_commutativity (addZ (multZ (pos y0) y) (succZ y)) (pos y0)).",
            "VernacExtend",
            "ec49792a912ba6dc7be1acbea09afed93773e006"
        ],
        [
            "rewrite (succ_addZ_r (multZ (pos y0) y) y).",
            "VernacExtend",
            "190a6ecd1765ee90c1a616ae2582deb91cf3eaa5"
        ],
        [
            "rewrite (succ_addZ_l (addZ (multZ (pos y0) y) y) (pos y0)).",
            "VernacExtend",
            "7b090a29be8cae8285ce8e74c401fc72f68c3e64"
        ],
        [
            "elim (succ_addZ_r (addZ (multZ (pos y0) y) y) (pos y0)).",
            "VernacExtend",
            "ca36d57f9010f6e13d0ead879d3ddb69cef28035"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; rewrite (add_mIZ_predZ (oppZ y)); exact (opp_succZ y).",
            "VernacExtend",
            "c54006c8422e9ab2c31748cea9b5b673f45d113a"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
            "VernacExtend",
            "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
        ],
        [
            "elim H; elim (addZ_commutativity (oppZ y) (multZ (neg y0) y)).",
            "VernacExtend",
            "59d1d19acca64f66f49ecfcc5966a8c0231d23c4"
        ],
        [
            "elim (addZ_associativity (oppZ y) (multZ (neg y0) y) (neg (S y0))).",
            "VernacExtend",
            "8bbc43ed83b2c0aadd69c668e433bd2ed5fe7d04"
        ],
        [
            "elim (addZ_commutativity (addZ (multZ (neg y0) y) (neg (S y0))) (oppZ y)).",
            "VernacExtend",
            "fd03b2270bf459d99ab7da1e32119c9153fc914d"
        ],
        [
            "rewrite (opp_succZ y).",
            "VernacExtend",
            "7918cd06525231f3a8257d69d4649e36b56da61d"
        ],
        [
            "rewrite (pred_addZ_r (multZ (neg y0) (succZ y)) (oppZ y)).",
            "VernacExtend",
            "fc242296d8b5e12bc62ff6e79172ec086e26d24b"
        ],
        [
            "rewrite H; elim (pred_addZ_l (addZ (multZ (neg y0) y) (neg y0)) (oppZ y)).",
            "VernacExtend",
            "5585783333fece2bc25b8e615cd83ab4b900aec2"
        ],
        [
            "elim (pred_addZ_r (multZ (neg y0) y) (neg y0)); unfold predZ in |- *; reflexivity.",
            "VernacExtend",
            "ffc3f56774c75c5a1eb40be299571acebdc00076"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_predZ_r : forall x y : Z, multZ x (predZ y) = addZ (multZ x y) (oppZ x).",
            "VernacStartTheoremProof",
            "9d4fb400f4d880dd1d42cc007102275ce95963e7"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (add_mIZ_predZ y).",
            "VernacExtend",
            "126c60214bd0366853d34b89b89e8aaf2112b207"
        ],
        [
            "intros n0 H; unfold oppZ in |- *; do 2 rewrite (tech_mult_posZ n0).",
            "VernacExtend",
            "0dce3dcfd85a98e90b3de014d861528016cf4925"
        ],
        [
            "rewrite (pred_addZ_r (multZ (pos n0) (predZ y)) y).",
            "VernacExtend",
            "80a84c9b573e49b031fac717e0eeaf09aaf9f30a"
        ],
        [
            "elim (pred_addZ_l (multZ (pos n0) (predZ y)) y).",
            "VernacExtend",
            "03e5aaa78902ecefba887103da6c9f6073f47c41"
        ],
        [
            "elim (addZ_commutativity y (multZ (pos n0) y)).",
            "VernacExtend",
            "768a0542fba7d2a9a26a04d3c2affcf4d465aef0"
        ],
        [
            "elim (addZ_associativity y (multZ (pos n0) y) (neg (S n0))).",
            "VernacExtend",
            "c3fda671c4ed386d26f27a8cf4ac9ed8aa0bae12"
        ],
        [
            "elim (addZ_commutativity (addZ (multZ (pos n0) y) (neg (S n0))) y).",
            "VernacExtend",
            "dacf50381da8fc34529483deff7f35417f417b43"
        ],
        [
            "rewrite H; elim (pred_addZ_r (multZ (pos n0) y) (oppZ (pos n0))).",
            "VernacExtend",
            "d260da76c18d5c9f735b67c8c5ecf868203963c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (pos 0) with IZ; auto.",
            "VernacExtend",
            "6bbf690b2d63a16cf71cda1d774e61aa3d55d43a"
        ],
        [
            "rewrite (add_IZ_succZ (oppZ y)).",
            "VernacExtend",
            "81ecd35d81983e970e3e9cb28f1aace04ef04066"
        ],
        [
            "exact (opp_predZ y).",
            "VernacExtend",
            "ee769f2c3dbd6b7bdd1d669d10fa511b0eeab440"
        ],
        [
            "intros n0 H; do 2 rewrite (tech_mult_negZ n0).",
            "VernacExtend",
            "84404954a9574edb5229e69135ed08108dd9089b"
        ],
        [
            "rewrite H; rewrite (opp_predZ y).",
            "VernacExtend",
            "5cdbd651cb9fcf2d5f4101696c9aaeb253fb0c98"
        ],
        [
            "elim (addZ_commutativity (oppZ (neg n0)) (multZ (neg n0) y)).",
            "VernacExtend",
            "7702b4c8329650e593111184ed17113b6f55a59f"
        ],
        [
            "elim (addZ_associativity (oppZ (neg n0)) (multZ (neg n0) y) (succZ (oppZ y))).",
            "VernacExtend",
            "4b4aa37424ea2f16186e1fc403011ddac6645465"
        ],
        [
            "elim (addZ_commutativity (addZ (multZ (neg n0) y) (succZ (oppZ y))) (oppZ (neg n0))).",
            "VernacExtend",
            "8bf261ae2c2249b3c1fe52af03ef899fadbf2c83"
        ],
        [
            "rewrite (succ_addZ_r (multZ (neg n0) y) (oppZ y)).",
            "VernacExtend",
            "2edf0211b8dd27a03075b377d3a0bb9e6e281841"
        ],
        [
            "rewrite (succ_addZ_l (addZ (multZ (neg n0) y) (oppZ y)) (oppZ (neg n0))).",
            "VernacExtend",
            "8040c7a728c20575afaca5da8ab4e9c8d3682804"
        ],
        [
            "elim (succ_addZ_r (addZ (multZ (neg n0) y) (oppZ y)) (oppZ (neg n0))).",
            "VernacExtend",
            "dcb9520a2533f1f6e33bf57f55c0f8a4d157888c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_OZ : forall x : Z, multZ x OZ = OZ.",
            "VernacStartTheoremProof",
            "a15a3ea54c6502c4b343d639ac48ff42073686b8"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_posZ y OZ); rewrite H; reflexivity.",
            "VernacExtend",
            "922630376c45704cfe14761509946b1cfa81e9a4"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_negZ y OZ); rewrite H; reflexivity.",
            "VernacExtend",
            "2847fe1037a5d2058416c3fb982748ae4ea4eccc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_IZ : forall x : Z, multZ x IZ = x.",
            "VernacStartTheoremProof",
            "ff42315b6da9c799e6f0121e19c979c853cbc258"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_posZ y IZ); rewrite H.",
            "VernacExtend",
            "439a290d5dd07b0620ab143ccd3e9f514d811638"
        ],
        [
            "rewrite (add_IZ_succZ (pos y)); reflexivity.",
            "VernacExtend",
            "9cbf1970ce9a2845102d7876069ecb6e4826f8ce"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_negZ y IZ); rewrite H; unfold IZ in |- *; unfold oppZ in |- *.",
            "VernacExtend",
            "45ce1e0316243d31f340c94eecc1cacd20e3da5e"
        ],
        [
            "rewrite (add_mIZ_predZ (neg y)); reflexivity.",
            "VernacExtend",
            "5691d687b5b5bcfdd680b32b1b594cac862874c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_mIZ : forall x : Z, multZ x (neg 0) = oppZ x.",
            "VernacStartTheoremProof",
            "a07ca9d40f94823cd1e7ade4600eac8f1afb963e"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_posZ y (neg 0)); rewrite H.",
            "VernacExtend",
            "b1f6445acdf6ced44ea2cd1306a3ebdd817ba4ac"
        ],
        [
            "rewrite (add_mIZ_predZ (oppZ (pos y))); reflexivity.",
            "VernacExtend",
            "e3ca9606bb029bdfc4aee588e20316c9f9700680"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_negZ y (neg 0)); rewrite H.",
            "VernacExtend",
            "f0732278ccf0bebe1e5a4b8b5b5a45d0d41e3005"
        ],
        [
            "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (neg y) (neg 0) I I).",
            "VernacExtend",
            "32b03a896fa32eb92797c6652c391bfbd6a3912a"
        ],
        [
            "rewrite (add_mIZ_predZ (neg y)); reflexivity.",
            "VernacExtend",
            "5691d687b5b5bcfdd680b32b1b594cac862874c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multZ_commutativity : commutativity Z multZ.",
            "VernacStartTheoremProof",
            "ae1f6b114681da11585c4b0284f6b84a0cbe8f05"
        ],
        [
            "unfold commutativity in |- *; intros; elim x.",
            "VernacExtend",
            "a7d7f1c060b33cae4ab1dfc59906378d13185ef9"
        ],
        [
            "rewrite (mult_OZ y); unfold multZ in |- *; reflexivity.",
            "VernacExtend",
            "b300e29107252e8e63a8bdca7008be2edfd0163e"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (mult_IZ y).",
            "VernacExtend",
            "1d661fb4519457884e8aad3e8f56fd2983c5d78e"
        ],
        [
            "intros y0 H; rewrite (tech_mult_posZ y0 y); rewrite H.",
            "VernacExtend",
            "3e74460be7365366309e5d33995d61f03a5d006d"
        ],
        [
            "elim (mult_succZ_r y (pos y0)); unfold succZ in |- *; reflexivity.",
            "VernacExtend",
            "591c0190c27fef53f9e85b5873384a564617ac6c"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (mult_mIZ y).",
            "VernacExtend",
            "8eb49b8ee9870572d83a870c6f05e238b3c97933"
        ],
        [
            "intros y0 H; rewrite (tech_mult_negZ y0 y); rewrite H.",
            "VernacExtend",
            "9c5527ecd10c4d02cc62ab6b8377069d403ac566"
        ],
        [
            "elim (mult_predZ_r y (neg y0)); unfold predZ in |- *; reflexivity.",
            "VernacExtend",
            "c15c3caf6cc0d65799682b032dbc91996e879f1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multZ_neutral : neutral Z IdZ multZ IZ.",
            "VernacStartTheoremProof",
            "b5f18f4da1c77c087924107e1936a0d4eb765084"
        ],
        [
            "unfold neutral in |- *.",
            "VernacExtend",
            "8ec77b90546aac99b38f9d90cf695c533bcfe8fc"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact I.",
            "VernacExtend",
            "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim (multZ_commutativity IZ x); reflexivity.",
            "VernacExtend",
            "cb3a2a35626c25d7e308ab5be2c0f5cce331cd3e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mult_add_distributivity : distributivity Z addZ multZ.",
            "VernacStartTheoremProof",
            "29ad99c0cfecc01bc22fc4ca26be8c028af37f7f"
        ],
        [
            "unfold distributivity in |- *; intros; case x.",
            "VernacExtend",
            "66c30d51092df42040a3a03744ca81d963f88d20"
        ],
        [
            "split; reflexivity.",
            "VernacExtend",
            "4dcd3619ac711de01342cf915900e96e80b675e1"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite addZ_eq2; rewrite multZ_eq2.",
            "VernacExtend",
            "a65f624089f07bf537b0aa03762a78a9d8ef9faf"
        ],
        [
            "rewrite (mult_succZ_l y z); exact (addZ_commutativity (multZ y z) z).",
            "VernacExtend",
            "708515978d5e115857cee8f2104caf028b1d0d59"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y0 H.",
            "VernacExtend",
            "7052e396dc7111595e7c710220756e3f2a2e1c42"
        ],
        [
            "elim H; intros; split.",
            "VernacExtend",
            "915e14b1fdcac9db79d4977de3c9c24e0b713c05"
        ],
        [
            "rewrite addZ_eq3; rewrite multZ_eq3.",
            "VernacExtend",
            "413cbf169d1dc98660db95bc427a5c5d54d26c24"
        ],
        [
            "rewrite mult_succZ_l; rewrite H0.",
            "VernacExtend",
            "0ecb29bdcc4f2aee7cc6ac597540a29b644687bb"
        ],
        [
            "elim (addZ_associativity (multZ (pos y0) z) (multZ y z) z).",
            "VernacExtend",
            "966b397346bbdceced2ed86f223d29a637d142ea"
        ],
        [
            "elim (addZ_commutativity z (multZ y z)).",
            "VernacExtend",
            "8a13d576bc26116857f0b9569316f4995cbce6d4"
        ],
        [
            "apply addZ_associativity.",
            "VernacExtend",
            "2892d8ab37d5f325929770223218cd51bef42a92"
        ],
        [
            "do 3 rewrite multZ_eq3.",
            "VernacExtend",
            "01bb63beccb002574deecea4aaaca560e3925a8a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply (add_add Z addZ addZ_commutativity addZ_associativity).",
            "VernacExtend",
            "03aad695648e98f0cc6a7ae17a63f768d89651d1"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite addZ_eq4; rewrite multZ_eq4; rewrite (mult_predZ_l y z).",
            "VernacExtend",
            "b20a01d87e71e5a617fee4c41f84ada1bb836cdc"
        ],
        [
            "exact (addZ_commutativity (multZ y z) (oppZ z)).",
            "VernacExtend",
            "7cefffdc334f60b9af63968fcf12165b228ceff0"
        ],
        [
            "rewrite multZ_eq4.",
            "VernacExtend",
            "108890a7603d34f54a886b7bf6de1a23ace55009"
        ],
        [
            "apply (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity y z I I).",
            "VernacExtend",
            "6b7c7ce2ac17c9e4a2fe538b4f6d2876a9c3f826"
        ],
        [
            "intros y0 H.",
            "VernacExtend",
            "7052e396dc7111595e7c710220756e3f2a2e1c42"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite (tech_add_neg_predZ y0 y); rewrite (mult_predZ_l (addZ (neg y0) y) z).",
            "VernacExtend",
            "3c1340ef910a762622a3b9a2b6ba6dfc70d816ef"
        ],
        [
            "elim H; intros.",
            "VernacExtend",
            "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "elim (addZ_associativity (multZ (neg y0) z) (multZ y z) (oppZ z)).",
            "VernacExtend",
            "d24495f4246e38a600e93021cd982a8853f9da78"
        ],
        [
            "elim (addZ_commutativity (oppZ z) (multZ y z)).",
            "VernacExtend",
            "7320f048d703c3d9b1beb695f2c0a4c45296c4de"
        ],
        [
            "rewrite (addZ_associativity (multZ (neg y0) z) (oppZ z) (multZ y z)).",
            "VernacExtend",
            "46b8ad40657e44732a1ce69b63d4dee843ca5632"
        ],
        [
            "elim (tech_mult_negZ y0 z); reflexivity.",
            "VernacExtend",
            "e2a41382f72a52f939edd536a376385ca5844b48"
        ],
        [
            "rewrite (tech_mult_negZ y0 (addZ y z)); rewrite (tech_mult_negZ y0 y).",
            "VernacExtend",
            "b1d22fc2da736cbb179b57c0aaa92af9ebb6cba0"
        ],
        [
            "rewrite (tech_mult_negZ y0 z); elim H; intros; rewrite H1.",
            "VernacExtend",
            "4ebfa528347196d2c855b009c39d58dfaf1a3dac"
        ],
        [
            "elim (add_add Z addZ addZ_commutativity addZ_associativity (multZ (neg y0) y) (multZ (neg y0) z) (oppZ y) (oppZ z)).",
            "VernacExtend",
            "ddddc0508e34b04c93f5e87599024d6bc06d62a6"
        ],
        [
            "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity y z I I).",
            "VernacExtend",
            "866bce2aa8b14b59544d6ad549c7cb6cf68bd1da"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_oppZ_r : forall x y : Z, multZ x (oppZ y) = oppZ (multZ x y).",
            "VernacStartTheoremProof",
            "fa2a308c867a1050a3aa4c413492828a2189c8c6"
        ],
        [
            "intros; case x.",
            "VernacExtend",
            "c9f85d54695eab4e79a1f1700970bb3f9b65e0b4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
            "VernacExtend",
            "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
        ],
        [
            "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y0) y) y I I).",
            "VernacExtend",
            "a6c3b7f37690af15ed9fb0ca29ad3cd7dc96f2b5"
        ],
        [
            "elim H; reflexivity.",
            "VernacExtend",
            "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
            "VernacExtend",
            "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
        ],
        [
            "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (neg y0) y) (oppZ y) I I).",
            "VernacExtend",
            "d9f5978f5fd2ee994f28f81b7f2d2098588f22c6"
        ],
        [
            "elim H; reflexivity.",
            "VernacExtend",
            "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mult_oppZ_l : forall x y : Z, multZ (oppZ x) y = oppZ (multZ x y).",
            "VernacStartTheoremProof",
            "ecb593ddd2ea683eb9cf3784259e8b39c581cf58"
        ],
        [
            "simple destruct y.",
            "VernacExtend",
            "9d80a3357c9c8f06cea5e282253be2dea9ef3301"
        ],
        [
            "rewrite (mult_OZ (oppZ x)); rewrite (mult_OZ x); reflexivity.",
            "VernacExtend",
            "fb91796f0baef7d210ab10a7eb7c8999683ee3cb"
        ],
        [
            "intros; elim (multZ_commutativity (pos n) (oppZ x)).",
            "VernacExtend",
            "7c86f505a63fba6ea266cf0156f399175d8ec809"
        ],
        [
            "elim (multZ_commutativity (pos n) x); elim n.",
            "VernacExtend",
            "9c0d7131d079870efd23452f56240d83ce82f0d2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
            "VernacExtend",
            "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
        ],
        [
            "rewrite H; symmetry in |- *.",
            "VernacExtend",
            "17af33a0733499322b20057a1a1df8ef189d4ed3"
        ],
        [
            "exact (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y0) x) x I I).",
            "VernacExtend",
            "2773ced6093fc544db28b2a3508b249016f60cec"
        ],
        [
            "intros; elim (multZ_commutativity (neg n) (oppZ x)).",
            "VernacExtend",
            "83fb7a5003cd7a6cd220bf1a9f15cd9179aae594"
        ],
        [
            "elim (multZ_commutativity (neg n) x); elim n.",
            "VernacExtend",
            "0e730cbec716124779ace7457e55a49bc00c840d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
            "VernacExtend",
            "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
        ],
        [
            "rewrite H; symmetry in |- *.",
            "VernacExtend",
            "17af33a0733499322b20057a1a1df8ef189d4ed3"
        ],
        [
            "exact (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (neg y0) x) (oppZ x) I I).",
            "VernacExtend",
            "648d76e1296fc9387586b0ae48c5588b4b004f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_multZ_negO : forall x : Z, multZ (neg 0) x = oppZ x.",
            "VernacStartTheoremProof",
            "c45e78de148aa69235cace05d6efb11687735867"
        ],
        [
            "Proof multZ_eq4.",
            "VernacExactProof",
            "ed84f6fd8760cbeea2fca4e8625b27718e80c21a"
        ],
        [
            "Lemma tech_mult_pos_posZ : forall n m : nat, multZ (pos n) (pos m) = pos (n * m + (n + m)).",
            "VernacStartTheoremProof",
            "f0f6ddca0c36bb0a49ba417695da2d50f5076e5c"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_posZ y (pos m)); rewrite H.",
            "VernacExtend",
            "ffed53dac223d3d43358235c653fc5db65fc5fe0"
        ],
        [
            "rewrite (tech_add_pos_posZ (y * m + (y + m)) m).",
            "VernacExtend",
            "593209b5bf4fde8dc39b0e542b5f3134ea4da653"
        ],
        [
            "elim (technical_lemma y m); reflexivity.",
            "VernacExtend",
            "1c1721288955c7fc5185d10798f8452542f8c9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_neg_negZ : forall n m : nat, multZ (neg n) (neg m) = pos (n * m + (n + m)).",
            "VernacStartTheoremProof",
            "836dca7ac543d7a9d7cdbecfca655953705c9385"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; rewrite (tech_mult_negZ y (neg m)); rewrite H; unfold oppZ in |- *.",
            "VernacExtend",
            "3eec4f1f0a79b2f2346b1a92c1080a505d063da7"
        ],
        [
            "rewrite (tech_add_pos_posZ (y * m + (y + m)) m).",
            "VernacExtend",
            "593209b5bf4fde8dc39b0e542b5f3134ea4da653"
        ],
        [
            "elim (technical_lemma y m); reflexivity.",
            "VernacExtend",
            "1c1721288955c7fc5185d10798f8452542f8c9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_pos_negZ : forall n m : nat, multZ (pos n) (neg m) = neg (n * m + (n + m)).",
            "VernacStartTheoremProof",
            "4cc025241b7cd3527cae50edd43b90f0634afe8b"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "intros y H; rewrite (tech_mult_posZ y (neg m)); rewrite H.",
            "VernacExtend",
            "b6af6f3538fc1f915226f678741144b45baf79a0"
        ],
        [
            "rewrite (tech_add_neg_negZ (y * m + (y + m)) m).",
            "VernacExtend",
            "1b1bb0b9293dc43623ef1c6820b0eb3c9997d2a4"
        ],
        [
            "elim (technical_lemma y m); reflexivity.",
            "VernacExtend",
            "1c1721288955c7fc5185d10798f8452542f8c9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_neg_posZ : forall n m : nat, multZ (neg n) (pos m) = neg (n * m + (n + m)).",
            "VernacStartTheoremProof",
            "ff27b1a9af833a240bd543038df2d488a447c709"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "intros y H; rewrite (tech_mult_negZ y (pos m)); unfold oppZ in |- *; rewrite H.",
            "VernacExtend",
            "eb4d005305976b8d66f39ea7410da1a1c7fcbf59"
        ],
        [
            "rewrite (tech_add_neg_negZ (y * m + (y + m)) m).",
            "VernacExtend",
            "1b1bb0b9293dc43623ef1c6820b0eb3c9997d2a4"
        ],
        [
            "elim (technical_lemma y m); reflexivity.",
            "VernacExtend",
            "1c1721288955c7fc5185d10798f8452542f8c9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem multZ_associativity : associativity Z multZ.",
            "VernacStartTheoremProof",
            "a45c7480612077845b6bc117cef749e6db7243bc"
        ],
        [
            "unfold associativity in |- *; intros; elim x.",
            "VernacExtend",
            "0281fc9d0134cce6d8ca12668e82ee9d6aad17c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "unfold multZ in |- *; reflexivity.",
            "VernacExtend",
            "a23e80d7f507542079c19abc3efbe15a0c2b19c3"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
            "VernacExtend",
            "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
        ],
        [
            "rewrite H; elim (mult_oppZ_l y z).",
            "VernacExtend",
            "89c63f553e615e6bb68d073c2eac9a67b1c7f0d4"
        ],
        [
            "elim (mult_add_distributivity (multZ (pos y0) y) y z); intros.",
            "VernacExtend",
            "38ff8280eb066d433b773eec6162589099f16792"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (mult_oppZ_l y z).",
            "VernacExtend",
            "4ea230d4c560eba977c0d9c2ef2cad68dcc57adc"
        ],
        [
            "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
            "VernacExtend",
            "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
        ],
        [
            "rewrite H; elim (mult_oppZ_l y z).",
            "VernacExtend",
            "89c63f553e615e6bb68d073c2eac9a67b1c7f0d4"
        ],
        [
            "elim (mult_add_distributivity (multZ (neg y0) y) (oppZ y) z); intros.",
            "VernacExtend",
            "5a7004ab336ee6459a80db7fcbddd02cd9c4182a"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z_ring : is_ring Z IdZ addZ multZ OZ oppZ.",
            "VernacStartTheoremProof",
            "9ea0ac0444d94e94b6525ba7ef06a26584c487bb"
        ],
        [
            "unfold is_ring in |- *.",
            "VernacExtend",
            "f475a6fce6bf8ed04b3ae912f8a79610550ac50c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact addZ_commutativity.",
            "VernacExtend",
            "2a3a28a6c8f0a068e56b174cffe5978e991f68a6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Z_group.",
            "VernacExtend",
            "a52fdca2b1a644f72ad4ce7a6dadb5e34d00e373"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold intern in |- *.",
            "VernacExtend",
            "3355d7ecf4bd4c1c3c6b788572f791a43534686b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exact I.",
            "VernacExtend",
            "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact multZ_associativity.",
            "VernacExtend",
            "e797cdd454e18b3615134fb936676dc1d694ea8d"
        ],
        [
            "exact mult_add_distributivity.",
            "VernacExtend",
            "b6aeab15264a336aa6e85f396a7a86f2bce58410"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z_unitary_commutative_ring : is_unitary_commutative_ring Z IdZ addZ multZ OZ IZ oppZ.",
            "VernacStartTheoremProof",
            "0ef9ad4b465c8d12f8f42f3f12ba44a184d4b55f"
        ],
        [
            "unfold is_unitary_commutative_ring in |- *.",
            "VernacExtend",
            "4185ccbc8c9675afef2d64cb00420af83004f0d9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact Z_ring.",
            "VernacExtend",
            "1995a7004230c9f7e0754ee8a85e9cccea8cd7d4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact multZ_commutativity.",
            "VernacExtend",
            "777aa8b8cfbe3e464cc84ed63a68376e68fc7a93"
        ],
        [
            "exact multZ_neutral.",
            "VernacExtend",
            "009b431f0777e6b83eb515682872bebd63e88807"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_integ_posZ : forall (n : nat) (x : Z), multZ (pos n) x = OZ -> x = OZ.",
            "VernacStartTheoremProof",
            "3feeeffef461503791cde5264bc821fba5bdb304"
        ],
        [
            "intros n x; elim x.",
            "VernacExtend",
            "730711cb0964720a8213bf3e1c98122f67866e30"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros n0; rewrite (tech_mult_pos_posZ n n0); intros.",
            "VernacExtend",
            "65d9b47e46d05bb7b00141fa10755eb50aaa7808"
        ],
        [
            "absurd (pos (n * n0 + (n + n0)) = OZ).",
            "VernacExtend",
            "6ae8256da1f65f595654f3fea008bfde0ef9e8cd"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "intros n0; rewrite (tech_mult_pos_negZ n n0); intros.",
            "VernacExtend",
            "d1fb69a1db687d6f77b26d6a2983b68793686ef8"
        ],
        [
            "absurd (neg (n * n0 + (n + n0)) = OZ).",
            "VernacExtend",
            "cd61a79f3a794957d9224d332cd3e680de391356"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_integ_negZ : forall (n : nat) (x : Z), multZ (neg n) x = OZ -> x = OZ.",
            "VernacStartTheoremProof",
            "6137097741ad9bf3583dc825e8f8268f8bf41074"
        ],
        [
            "intros n x; elim x.",
            "VernacExtend",
            "730711cb0964720a8213bf3e1c98122f67866e30"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros n0; rewrite (tech_mult_neg_posZ n n0); intros.",
            "VernacExtend",
            "3d15c220d2b15334109c6fbe440720f36b06955d"
        ],
        [
            "absurd (neg (n * n0 + (n + n0)) = OZ).",
            "VernacExtend",
            "cd61a79f3a794957d9224d332cd3e680de391356"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "intros n0; rewrite (tech_mult_neg_negZ n n0); intros.",
            "VernacExtend",
            "21426af4b43037b8ce68e722ba179bff7a0c0a4d"
        ],
        [
            "absurd (pos (n * n0 + (n + n0)) = OZ).",
            "VernacExtend",
            "6ae8256da1f65f595654f3fea008bfde0ef9e8cd"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem integrityZ : integrity Z multZ OZ.",
            "VernacStartTheoremProof",
            "7dae3cfa68679cbcd6dd91be3df4d1a3bf54c417"
        ],
        [
            "unfold integrity in |- *; intros a b; elim a.",
            "VernacExtend",
            "6ea7471db7aeedd87af7ed1ad44c6d8a05bd062f"
        ],
        [
            "intros; left; reflexivity.",
            "VernacExtend",
            "1477db432f3847ba88525e5a158bfdc21cac38aa"
        ],
        [
            "intros; right; apply (tech_integ_posZ n b); exact H.",
            "VernacExtend",
            "1b9250c34dd00a60265be217de4c4b4c21850793"
        ],
        [
            "intros; right; apply (tech_integ_negZ n b); exact H.",
            "VernacExtend",
            "e0c5f985bb39b3641afdd5dd4f18971734730fbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_pos_succZ : forall n m : nat, posOZ (S n * S m) = multZ (pos n) (pos m).",
            "VernacStartTheoremProof",
            "2cb7722bfa12e5690be811e0d8d3d9825064db2b"
        ],
        [
            "intros; elim m.",
            "VernacExtend",
            "0ac52100abea4402dacbcf4edb3eb5a210514cb1"
        ],
        [
            "elim multZ_neutral; intros; elim (H0 (pos n) I); intros.",
            "VernacExtend",
            "f97793bed44b3ee06b6a959228ab79243b3ada00"
        ],
        [
            "replace (pos 0) with IZ; auto.",
            "VernacExtend",
            "6bbf690b2d63a16cf71cda1d774e61aa3d55d43a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "elim (mult_commut 1 (S n)).",
            "VernacExtend",
            "2e784b953d16c6020a7fdd371cf6aaa45ca8984f"
        ],
        [
            "rewrite (mult_neutr (S n)).",
            "VernacExtend",
            "fc4b138275c3868b3062aaa5f2623bcff96e7855"
        ],
        [
            "unfold posOZ in |- *; reflexivity.",
            "VernacExtend",
            "7867771d0799099147091183b7818637f4636b96"
        ],
        [
            "intros y H; elim (multZ_commutativity (pos (S y)) (pos n)).",
            "VernacExtend",
            "0c4e00f060762c4619b8e38b1a1e18ff6ed8b9f2"
        ],
        [
            "rewrite (tech_mult_posZ y (pos n)); elim (multZ_commutativity (pos n) (pos y)).",
            "VernacExtend",
            "0962ec280de87fd6aa81a39f3671c383e7b9d80e"
        ],
        [
            "elim H; elim (mult_n_Sm (S n) (S y)); elim (plus_n_Sm (S n * S y) n).",
            "VernacExtend",
            "2359f7681af012c31d661225a2bafb6d4b4d74cc"
        ],
        [
            "elim (mult_n_Sm (S n) y); elim (plus_n_Sm (S n * y) n).",
            "VernacExtend",
            "7e4c0af19285b7818954dfebaa62f225e4966c2e"
        ],
        [
            "unfold posOZ in |- *; rewrite (tech_add_pos_posZ (S n * y + n) n).",
            "VernacExtend",
            "52910582dd349aaa643c0a8e8e83022143440bb1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_mult_pos_succZ2 : forall n m : nat, multZ (pos n) (pos m) = pos (S n * m + n).",
            "VernacStartTheoremProof",
            "830eed2d5503ead06a76f6aa9ae6357278ec69ad"
        ],
        [
            "intros; elim (tech_mult_pos_succZ n m).",
            "VernacExtend",
            "204d99dfcce020a9b7b29a5585c7b765139b8396"
        ],
        [
            "simpl in |- *; elim (mult_n_Sm n m); elim (plus_assoc m (n * m) n); reflexivity.",
            "VernacExtend",
            "75afbc1c619609c3c1ae77f23b32bc5a0dfa2180"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div1 : forall n0 n q r : nat, S n0 = q * S n + r -> pos n0 = addZ (multZ (pos n) (posOZ q)) (posOZ r).",
            "VernacStartTheoremProof",
            "8b2b583f60c23b62735790df54a2215b0a4ee412"
        ],
        [
            "intros n0 n q r; elim q.",
            "VernacExtend",
            "a8edc335036c7678821adca91717e6a4f52732a6"
        ],
        [
            "elim r.",
            "VernacExtend",
            "f99b1ae24cc2c5248147c1733759e83678932dc0"
        ],
        [
            "intros; absurd (S n0 = 0).",
            "VernacExtend",
            "82af140e49910d4266aac40cd626d08cf93cb1c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "intros y H; unfold posOZ in |- *; rewrite (mult_OZ (pos n)).",
            "VernacExtend",
            "11f95477ae6c30db0d16a1c2908935288a7bb776"
        ],
        [
            "simpl in |- *; intros; elim (eq_add_S n0 y H0); reflexivity.",
            "VernacExtend",
            "10ffb9bf973c2cf22c3480edb7d4fd95abbe9117"
        ],
        [
            "elim r.",
            "VernacExtend",
            "f99b1ae24cc2c5248147c1733759e83678932dc0"
        ],
        [
            "intros y H; unfold posOZ in |- *; elim (plus_n_O (S y * S n)).",
            "VernacExtend",
            "d4b19b9be77a8b864630dbf80ea9219fd776b28c"
        ],
        [
            "rewrite (add_OZ (multZ (pos n) (pos y))); elim (tech_mult_pos_succZ n y).",
            "VernacExtend",
            "f92523dd7fa75c050673a53d9c5af0a790a5fb3d"
        ],
        [
            "elim (mult_commut (S n) (S y)); intros; elim H0; unfold posOZ in |- *; reflexivity.",
            "VernacExtend",
            "869633979134c0fb3ce09a585bf15e55dff84dff"
        ],
        [
            "intros y H y0 H0; unfold posOZ in |- *; elim (plus_n_Sm (S y0 * S n) y).",
            "VernacExtend",
            "55e0f2add995391c662d7232edf2e39083cad8f4"
        ],
        [
            "intros; rewrite (eq_add_S n0 (S y0 * S n + y) H1).",
            "VernacExtend",
            "9a1b08cc5acdaac5cfbc28347cc6b52f1bd6bc81"
        ],
        [
            "rewrite (tech_mult_pos_succZ2 n y0).",
            "VernacExtend",
            "efa5173b9bdc24ef1288f7829390ea4b10b41cc3"
        ],
        [
            "rewrite (tech_add_pos_posZ (S n * y0 + n) y).",
            "VernacExtend",
            "b8d7f72b268835f8b8b324a4c44928dfe997d46c"
        ],
        [
            "elim (plus_comm n (S n * y0)); elim (mult_commut y0 (S n)); simpl in |- *.",
            "VernacExtend",
            "9c4c299ee1006f315c05616d4abb96b86625b8fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div2 : forall n0 n q : nat, S n0 = q * S n -> neg n0 = multZ (pos n) (negOZ q).",
            "VernacStartTheoremProof",
            "5fd923fb1c7665e995eb67c6b5af846b5524c4eb"
        ],
        [
            "intros n0 n q; elim q.",
            "VernacExtend",
            "464a42a93453f695c080a708678a70b2728ddd7b"
        ],
        [
            "simpl in |- *; intros; absurd (S n0 = 0).",
            "VernacExtend",
            "a77bafb914d4f2eee5701e2d0043f7027ed76812"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "intros y H; unfold negOZ in |- *.",
            "VernacExtend",
            "5e0fc5c50d87c10dd0f4622c21e611cb0eb6d423"
        ],
        [
            "rewrite (tech_mult_pos_negZ n y); intros.",
            "VernacExtend",
            "354ab0e5c07c1daa50de17c58a2e15cf3c515654"
        ],
        [
            "simpl in H0; rewrite (eq_add_S _ _ H0).",
            "VernacExtend",
            "524584922225e0b4dfb5cc8c9b57d1f0656c28a1"
        ],
        [
            "elim (mult_commut (S n) y); simpl in |- *; elim (plus_comm (n + y) (n * y)).",
            "VernacExtend",
            "9e40f8731368ee8827b4b235faeca4867a2e6f74"
        ],
        [
            "elim (plus_assoc n y (n * y)); reflexivity.",
            "VernacExtend",
            "7418f7cdbc80526b040798c01a8846435207e75f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div31 : forall n q : nat, addZ (oppZ (multZ (pos n) (pos q))) (pos n) = oppZ (multZ (pos n) (posOZ q)).",
            "VernacStartTheoremProof",
            "35f573f02075838b9cc93b62edca44ceb419bb38"
        ],
        [
            "intros; elim q.",
            "VernacExtend",
            "1eaf087ebe421cd94c7b36f965da9d25244492c5"
        ],
        [
            "unfold posOZ in |- *; rewrite (mult_OZ (pos n)).",
            "VernacExtend",
            "184ac2ab6ef709231b6d5d89c8f2e00143f045d2"
        ],
        [
            "cut (IZ = pos 0); intros.",
            "VernacExtend",
            "8cf6c467bc97f604e02153267e072432fd3dadb0"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite (mult_IZ (pos n)).",
            "VernacExtend",
            "45c17c247b2bae2675cf072a915b3249108e1727"
        ],
        [
            "elim (addZ_opposite (pos n) I); intros; elim H1; intros; elim H3; intros.",
            "VernacExtend",
            "3c4cc7cca3a5e5defc5a3e78d7a9925daca72297"
        ],
        [
            "rewrite H5; reflexivity.",
            "VernacExtend",
            "0077277cac813ddf2c88f46d77690cbddb8a1e88"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; unfold posOZ in |- *; elim (multZ_commutativity (pos (S y)) (pos n)).",
            "VernacExtend",
            "07b2e18ae4add8e33f521b7bebfc88893193da6b"
        ],
        [
            "rewrite (tech_mult_posZ y (pos n)).",
            "VernacExtend",
            "fd037b1f68573c7e30a2d23c037bce1d95e7ecc3"
        ],
        [
            "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y) (pos n)) (pos n) I I).",
            "VernacExtend",
            "a9964d1c26d5814e5def1353d864b99c630b3ec5"
        ],
        [
            "elim (addZ_associativity (oppZ (multZ (pos y) (pos n))) (oppZ (pos n)) (pos n)).",
            "VernacExtend",
            "5697d2843817844d940dc0df5cec348d73f104c7"
        ],
        [
            "elim (addZ_opposite (pos n) I); intros; elim H1; intros; elim H3; intros.",
            "VernacExtend",
            "3c4cc7cca3a5e5defc5a3e78d7a9925daca72297"
        ],
        [
            "rewrite H5; rewrite (add_OZ (oppZ (multZ (pos y) (pos n)))).",
            "VernacExtend",
            "4f0e2078ea91c4523aef4b7c0e964db9b8dac122"
        ],
        [
            "elim (multZ_commutativity (pos y) (pos n)); reflexivity.",
            "VernacExtend",
            "d5f0a0eb3dff238920154ba46cccfb72da90e5ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div32 : forall n q r : nat, S n > r -> pos (n - r) = addZ (pos n) (oppZ (posOZ r)).",
            "VernacStartTheoremProof",
            "4d7f6bd7304faae7656a77de68e6f7890b875601"
        ],
        [
            "intros n q r; elim r.",
            "VernacExtend",
            "8c6a835f61e47604a77585ad6261e8bac826f15b"
        ],
        [
            "unfold posOZ in |- *; unfold oppZ in |- *; rewrite (add_OZ (pos n)); elim (minus_n_O n).",
            "VernacExtend",
            "84f6bee04d7c212979669bac4b084801b0b46444"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros y H; unfold posOZ in |- *; unfold oppZ in |- *; symmetry in |- *.",
            "VernacExtend",
            "6a19adcfc96bc05d807cb31585197ca5a5193a85"
        ],
        [
            "exact (tech_add_pos_neg_posZ n y (gt_S_n y n H0)).",
            "VernacExtend",
            "8e1d46f8f5c42cc58005530bedfafb80496ca23c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div3 : forall n0 n q r : nat, S n0 = q * S n + r -> S n > r -> neg n0 = addZ (multZ (pos n) (neg q)) (pos (n - r)).",
            "VernacStartTheoremProof",
            "61c9ebf266f48b0eb6d13ffd8532aa335fa22251"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (tech_opp_pos_negZ q); intros; elim H1.",
            "VernacExtend",
            "55c3419f8605dcf019689a0bc1606a5c4c89cbb9"
        ],
        [
            "rewrite (mult_oppZ_r (pos n) (pos q)); rewrite (tech_div32 n q r H0).",
            "VernacExtend",
            "170dc0696d1774ec548d67e17fabc792ff86bd92"
        ],
        [
            "rewrite (addZ_associativity (oppZ (multZ (pos n) (pos q))) (pos n) (oppZ (posOZ r))) .",
            "VernacExtend",
            "3ecbfffec0c756f57e9510c7fdd7d3883d4c8e9b"
        ],
        [
            "rewrite (tech_div31 n q).",
            "VernacExtend",
            "83a5958377e89034d7ddd52d2192185212be31c9"
        ],
        [
            "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos n) (posOZ q)) (posOZ r) I I).",
            "VernacExtend",
            "d03d8261a48fa7cf4083fbf9488a70fe4917d307"
        ],
        [
            "elim (tech_div1 n0 n q r H); reflexivity.",
            "VernacExtend",
            "fb80940fc1acc2ff6569b3b503f67fff4045ba4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div4 : forall n0 n q r : nat, S n0 = q * S n + r -> pos n0 = addZ (multZ (neg n) (negOZ q)) (posOZ r).",
            "VernacStartTheoremProof",
            "9868a64ade7097de84dab0c6eb2bc8d0cab39ab7"
        ],
        [
            "intros; cut (multZ (neg n) (negOZ q) = multZ (pos n) (posOZ q)); intros.",
            "VernacExtend",
            "1b5b648d9739c7c271b23569b7f0ca7e6ba40d9c"
        ],
        [
            "rewrite H0; intros; exact (tech_div1 n0 n q r H).",
            "VernacExtend",
            "9c2ebb346a87d9d14f33794bf20a7197165a68db"
        ],
        [
            "cut (negOZ q = oppZ (posOZ q)); intros.",
            "VernacExtend",
            "6e8be2c7db83cfb8f9d56d340413d72397f35473"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "elim (tech_opp_pos_negZ n); intros; elim H1.",
            "VernacExtend",
            "239b8272058598358ab308a68958f25fd7cafaba"
        ],
        [
            "apply (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (posOZ q) I I).",
            "VernacExtend",
            "15f2ac1df868cc0b9ac82fdc12d09cb4fdf12be6"
        ],
        [
            "elim q; reflexivity.",
            "VernacExtend",
            "952c950a89781956606bb859d4d7360fe23bc480"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div5 : forall n0 n q : nat, S n0 = q * S n -> neg n0 = multZ (neg n) (posOZ q).",
            "VernacStartTheoremProof",
            "692e1f52b0ca4880537f45146c412104b4754114"
        ],
        [
            "intros; cut (posOZ q = oppZ (negOZ q)); intros.",
            "VernacExtend",
            "654c45672c4075481716d42650a7123fa792a2fa"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "elim (tech_opp_pos_negZ n); intros; elim H1.",
            "VernacExtend",
            "239b8272058598358ab308a68958f25fd7cafaba"
        ],
        [
            "rewrite (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (negOZ q) I I).",
            "VernacExtend",
            "eb8e46ad30f17035624bd9c7b15dfbbe6c9410a4"
        ],
        [
            "exact (tech_div2 n0 n q H).",
            "VernacExtend",
            "da747861ea9b682f422d802e99471075c13742fb"
        ],
        [
            "elim q; reflexivity.",
            "VernacExtend",
            "952c950a89781956606bb859d4d7360fe23bc480"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_div6 : forall n0 n q r : nat, S n0 = q * S n + r -> S n > r -> neg n0 = addZ (multZ (neg n) (pos q)) (pos (n - r)).",
            "VernacStartTheoremProof",
            "c1f00fb2d7ce25aebffebc9a5ec789827d40c669"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (tech_opp_pos_negZ q); intros; elim H2.",
            "VernacExtend",
            "c05b76ac76a62bf8484b906a313b426a7751f406"
        ],
        [
            "elim (tech_opp_pos_negZ n); intros; elim H3.",
            "VernacExtend",
            "9219aa9c14d443b12899e91beb6e86989e4a5616"
        ],
        [
            "rewrite (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (neg q) I I).",
            "VernacExtend",
            "b15469a669ad30e0a6ade5101fe700b53578e1a9"
        ],
        [
            "apply (tech_div3 n0 n q r H H0).",
            "VernacExtend",
            "8451e38ad719308c8fba0e406a8f1d3ba5533202"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversibleZ : forall x : Z, inversible Z multZ IZ x -> x = IZ \\/ x = oppZ IZ.",
            "VernacStartTheoremProof",
            "069e6367b66dbb3c51a91687f0c023d9bc2f39f3"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "intros; elim H; intros; elim H0; intros; elim H1.",
            "VernacExtend",
            "55c3c4df0ba49dd1a8fabd3791a95a8d2cacb3d6"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros; left; reflexivity.",
            "VernacExtend",
            "1477db432f3847ba88525e5a158bfdc21cac38aa"
        ],
        [
            "intros y H H0; elim H0; intros; elim H1; intros.",
            "VernacExtend",
            "8b7c3f6885a617cd4fcf4279f5d35a2ff1a9aa00"
        ],
        [
            "absurd (multZ (pos (S y)) x0 = IZ).",
            "VernacExtend",
            "942e6a68d6cba564a24f3cbb266baa057d1deeff"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "rewrite (mult_OZ (pos (S y))).",
            "VernacExtend",
            "e2f85e63b0899bb88ea7b007a4646dbf22f4434c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros; rewrite (tech_mult_pos_posZ (S y) n0).",
            "VernacExtend",
            "2916e9309a91548debc5c574a2c92ec5449100c5"
        ],
        [
            "elim (plus_comm (S y + n0) (S y * n0)).",
            "VernacExtend",
            "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
        ],
        [
            "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *.",
            "VernacExtend",
            "ab80200aba11625207ef9d48b5eea4ffe3413b97"
        ],
        [
            "apply (tech_pos_not_posZ (S (y + (n0 + (n0 + y * n0)))) 0).",
            "VernacExtend",
            "364151be7c48ffd5a129ffec6dc7cd15672d88b5"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros; rewrite (tech_mult_pos_negZ (S y) n0).",
            "VernacExtend",
            "0365a524a824ead9a1ff4ab7d584bdf0b1108a84"
        ],
        [
            "elim (plus_comm (S y + n0) (S y * n0)).",
            "VernacExtend",
            "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
        ],
        [
            "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *; discriminate.",
            "VernacExtend",
            "dd028954981ed04dd7a573832a92a25d03aceb86"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "intros y H H0; elim H0; intros; elim H1; intros.",
            "VernacExtend",
            "8b7c3f6885a617cd4fcf4279f5d35a2ff1a9aa00"
        ],
        [
            "absurd (multZ (neg (S y)) x0 = IZ).",
            "VernacExtend",
            "6367776a03dfaea3065012c25e0884edbf264d58"
        ],
        [
            "elim x0.",
            "VernacExtend",
            "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
        ],
        [
            "rewrite (mult_OZ (neg (S y))).",
            "VernacExtend",
            "fadc86ff33951ad29eb8f798c24938a7b91258fd"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros; rewrite (tech_mult_neg_posZ (S y) n0).",
            "VernacExtend",
            "c291aa864103be67dbbc7f4babf8a490cde57fa1"
        ],
        [
            "elim (plus_comm (S y + n0) (S y * n0)).",
            "VernacExtend",
            "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
        ],
        [
            "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *; discriminate.",
            "VernacExtend",
            "dd028954981ed04dd7a573832a92a25d03aceb86"
        ],
        [
            "intros; rewrite (tech_mult_neg_negZ (S y) n0).",
            "VernacExtend",
            "e9a073de1d8646e5583fccf680d3da5fe6165c48"
        ],
        [
            "elim (plus_comm (S y + n0) (S y * n0)).",
            "VernacExtend",
            "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
        ],
        [
            "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *.",
            "VernacExtend",
            "ab80200aba11625207ef9d48b5eea4ffe3413b97"
        ],
        [
            "apply (tech_pos_not_posZ (S (y + (n0 + (n0 + y * n0)))) 0).",
            "VernacExtend",
            "364151be7c48ffd5a129ffec6dc7cd15672d88b5"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "exact H2.",
            "VernacExtend",
            "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgn_abs : forall x : Z, multZ x (sgnZ x) = absZ x.",
            "VernacStartTheoremProof",
            "b23480aa51e179a97f60b7cc0bc12cee0eaf5494"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; exact (mult_IZ (pos n)).",
            "VernacExtend",
            "b1f7ecf6edffbd484b8c8d4b167eea1c82c57d15"
        ],
        [
            "intros; exact (mult_mIZ (neg n)).",
            "VernacExtend",
            "e0080896c1b30b0822964caf54fcad0a22d96816"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "multZ_eq1",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_eq2",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_eq3",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_eq4",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_eq5",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_succZ_l",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "intros; simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "854cdc9d9e97990c301aa41eba8e57e0e92b6986"
                    ]
                },
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *.",
                        "VernacExtend",
                        "cd63abc54a6f74a8de567d20cffa866ba89d3d8d"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite y I); intros.",
                        "VernacExtend",
                        "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; elim H2; intros; exact H4.",
                        "VernacExtend",
                        "dffa9e22b8c85dbaca8dc648d2a0e36a15e926a7"
                    ]
                },
                {
                    "command": [
                        "intros; unfold succZ in |- *; rewrite (tech_mult_negZ n0 y).",
                        "VernacExtend",
                        "8f0fd43c1b039687de6280a983666b932c798c6b"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (multZ (neg n0) y) (oppZ y) y).",
                        "VernacExtend",
                        "3749f5d1210fe1ad1a6844e49249ab8c84b41414"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite y I); intros.",
                        "VernacExtend",
                        "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; elim H3; intros.",
                        "VernacExtend",
                        "26bdd277638877608b445ab3777a35dad3a05f60"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; exact (add_OZ (multZ (neg n0) y)).",
                        "VernacExtend",
                        "05591ad28bbc55cb7b656f5ff57c21bc7b19ca8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_predZ_l",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *.",
                        "VernacExtend",
                        "cd63abc54a6f74a8de567d20cffa866ba89d3d8d"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite y I); intros.",
                        "VernacExtend",
                        "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; elim H2; intros; exact H3.",
                        "VernacExtend",
                        "5702cec2244d22a49c76cea1e201f59b98af92a5"
                    ]
                },
                {
                    "command": [
                        "intros; unfold predZ in |- *; rewrite (tech_mult_posZ n0 y).",
                        "VernacExtend",
                        "5a465bb218ae5c5ec1c0cc7e7d77320ece47241d"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (multZ (pos n0) y) y (oppZ y)).",
                        "VernacExtend",
                        "8a555b6883b6e11009508111e7432f63cfa1f0a6"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite y I); intros.",
                        "VernacExtend",
                        "b969df8a9dc5e957dc4ef033c5965d7c70f0958f"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; elim H3; intros; rewrite H4.",
                        "VernacExtend",
                        "d7bce2edae98d61b3d3ceca3c1b09c6e8de77ac1"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_OZ (multZ (pos n0) y)); reflexivity.",
                        "VernacExtend",
                        "588b3f06ecac756d978d7d69f0bc825ab3bfb587"
                    ]
                },
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_succZ_r",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; exact (add_IZ_succZ y).",
                        "VernacExtend",
                        "dba756872ddd6fd752808588bffb43a0a2882a1e"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
                        "VernacExtend",
                        "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; elim (addZ_commutativity (pos y0) (multZ (pos y0) y)).",
                        "VernacExtend",
                        "b471c1b74189298aa863ad928a45c125efc69e2e"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (pos y0) (multZ (pos y0) y) (succZ y)).",
                        "VernacExtend",
                        "05fde4a46e9a36efc7d4f5552578d950cb49dcc7"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (addZ (multZ (pos y0) y) (succZ y)) (pos y0)).",
                        "VernacExtend",
                        "ec49792a912ba6dc7be1acbea09afed93773e006"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_r (multZ (pos y0) y) y).",
                        "VernacExtend",
                        "190a6ecd1765ee90c1a616ae2582deb91cf3eaa5"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_l (addZ (multZ (pos y0) y) y) (pos y0)).",
                        "VernacExtend",
                        "7b090a29be8cae8285ce8e74c401fc72f68c3e64"
                    ]
                },
                {
                    "command": [
                        "elim (succ_addZ_r (addZ (multZ (pos y0) y) y) (pos y0)).",
                        "VernacExtend",
                        "ca36d57f9010f6e13d0ead879d3ddb69cef28035"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite (add_mIZ_predZ (oppZ y)); exact (opp_succZ y).",
                        "VernacExtend",
                        "c54006c8422e9ab2c31748cea9b5b673f45d113a"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
                        "VernacExtend",
                        "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
                    ]
                },
                {
                    "command": [
                        "elim H; elim (addZ_commutativity (oppZ y) (multZ (neg y0) y)).",
                        "VernacExtend",
                        "59d1d19acca64f66f49ecfcc5966a8c0231d23c4"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (oppZ y) (multZ (neg y0) y) (neg (S y0))).",
                        "VernacExtend",
                        "8bbc43ed83b2c0aadd69c668e433bd2ed5fe7d04"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (addZ (multZ (neg y0) y) (neg (S y0))) (oppZ y)).",
                        "VernacExtend",
                        "fd03b2270bf459d99ab7da1e32119c9153fc914d"
                    ]
                },
                {
                    "command": [
                        "rewrite (opp_succZ y).",
                        "VernacExtend",
                        "7918cd06525231f3a8257d69d4649e36b56da61d"
                    ]
                },
                {
                    "command": [
                        "rewrite (pred_addZ_r (multZ (neg y0) (succZ y)) (oppZ y)).",
                        "VernacExtend",
                        "fc242296d8b5e12bc62ff6e79172ec086e26d24b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; elim (pred_addZ_l (addZ (multZ (neg y0) y) (neg y0)) (oppZ y)).",
                        "VernacExtend",
                        "5585783333fece2bc25b8e615cd83ab4b900aec2"
                    ]
                },
                {
                    "command": [
                        "elim (pred_addZ_r (multZ (neg y0) y) (neg y0)); unfold predZ in |- *; reflexivity.",
                        "VernacExtend",
                        "ffc3f56774c75c5a1eb40be299571acebdc00076"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_predZ_r",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (add_mIZ_predZ y).",
                        "VernacExtend",
                        "126c60214bd0366853d34b89b89e8aaf2112b207"
                    ]
                },
                {
                    "command": [
                        "intros n0 H; unfold oppZ in |- *; do 2 rewrite (tech_mult_posZ n0).",
                        "VernacExtend",
                        "0dce3dcfd85a98e90b3de014d861528016cf4925"
                    ]
                },
                {
                    "command": [
                        "rewrite (pred_addZ_r (multZ (pos n0) (predZ y)) y).",
                        "VernacExtend",
                        "80a84c9b573e49b031fac717e0eeaf09aaf9f30a"
                    ]
                },
                {
                    "command": [
                        "elim (pred_addZ_l (multZ (pos n0) (predZ y)) y).",
                        "VernacExtend",
                        "03e5aaa78902ecefba887103da6c9f6073f47c41"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity y (multZ (pos n0) y)).",
                        "VernacExtend",
                        "768a0542fba7d2a9a26a04d3c2affcf4d465aef0"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity y (multZ (pos n0) y) (neg (S n0))).",
                        "VernacExtend",
                        "c3fda671c4ed386d26f27a8cf4ac9ed8aa0bae12"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (addZ (multZ (pos n0) y) (neg (S n0))) y).",
                        "VernacExtend",
                        "dacf50381da8fc34529483deff7f35417f417b43"
                    ]
                },
                {
                    "command": [
                        "rewrite H; elim (pred_addZ_r (multZ (pos n0) y) (oppZ (pos n0))).",
                        "VernacExtend",
                        "d260da76c18d5c9f735b67c8c5ecf868203963c5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (pos 0) with IZ; auto.",
                        "VernacExtend",
                        "6bbf690b2d63a16cf71cda1d774e61aa3d55d43a"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_IZ_succZ (oppZ y)).",
                        "VernacExtend",
                        "81ecd35d81983e970e3e9cb28f1aace04ef04066"
                    ]
                },
                {
                    "command": [
                        "exact (opp_predZ y).",
                        "VernacExtend",
                        "ee769f2c3dbd6b7bdd1d669d10fa511b0eeab440"
                    ]
                },
                {
                    "command": [
                        "intros n0 H; do 2 rewrite (tech_mult_negZ n0).",
                        "VernacExtend",
                        "84404954a9574edb5229e69135ed08108dd9089b"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite (opp_predZ y).",
                        "VernacExtend",
                        "5cdbd651cb9fcf2d5f4101696c9aaeb253fb0c98"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (oppZ (neg n0)) (multZ (neg n0) y)).",
                        "VernacExtend",
                        "7702b4c8329650e593111184ed17113b6f55a59f"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (oppZ (neg n0)) (multZ (neg n0) y) (succZ (oppZ y))).",
                        "VernacExtend",
                        "4b4aa37424ea2f16186e1fc403011ddac6645465"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (addZ (multZ (neg n0) y) (succZ (oppZ y))) (oppZ (neg n0))).",
                        "VernacExtend",
                        "8bf261ae2c2249b3c1fe52af03ef899fadbf2c83"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_r (multZ (neg n0) y) (oppZ y)).",
                        "VernacExtend",
                        "2edf0211b8dd27a03075b377d3a0bb9e6e281841"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_l (addZ (multZ (neg n0) y) (oppZ y)) (oppZ (neg n0))).",
                        "VernacExtend",
                        "8040c7a728c20575afaca5da8ab4e9c8d3682804"
                    ]
                },
                {
                    "command": [
                        "elim (succ_addZ_r (addZ (multZ (neg n0) y) (oppZ y)) (oppZ (neg n0))).",
                        "VernacExtend",
                        "dcb9520a2533f1f6e33bf57f55c0f8a4d157888c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_OZ",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_posZ y OZ); rewrite H; reflexivity.",
                        "VernacExtend",
                        "922630376c45704cfe14761509946b1cfa81e9a4"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_negZ y OZ); rewrite H; reflexivity.",
                        "VernacExtend",
                        "2847fe1037a5d2058416c3fb982748ae4ea4eccc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_IZ",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_posZ y IZ); rewrite H.",
                        "VernacExtend",
                        "439a290d5dd07b0620ab143ccd3e9f514d811638"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_IZ_succZ (pos y)); reflexivity.",
                        "VernacExtend",
                        "9cbf1970ce9a2845102d7876069ecb6e4826f8ce"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_negZ y IZ); rewrite H; unfold IZ in |- *; unfold oppZ in |- *.",
                        "VernacExtend",
                        "45ce1e0316243d31f340c94eecc1cacd20e3da5e"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_mIZ_predZ (neg y)); reflexivity.",
                        "VernacExtend",
                        "5691d687b5b5bcfdd680b32b1b594cac862874c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_mIZ",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_posZ y (neg 0)); rewrite H.",
                        "VernacExtend",
                        "b1f6445acdf6ced44ea2cd1306a3ebdd817ba4ac"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_mIZ_predZ (oppZ (pos y))); reflexivity.",
                        "VernacExtend",
                        "e3ca9606bb029bdfc4aee588e20316c9f9700680"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_negZ y (neg 0)); rewrite H.",
                        "VernacExtend",
                        "f0732278ccf0bebe1e5a4b8b5b5a45d0d41e3005"
                    ]
                },
                {
                    "command": [
                        "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (neg y) (neg 0) I I).",
                        "VernacExtend",
                        "32b03a896fa32eb92797c6652c391bfbd6a3912a"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_mIZ_predZ (neg y)); reflexivity.",
                        "VernacExtend",
                        "5691d687b5b5bcfdd680b32b1b594cac862874c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_commutativity",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "unfold commutativity in |- *; intros; elim x.",
                        "VernacExtend",
                        "a7d7f1c060b33cae4ab1dfc59906378d13185ef9"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_OZ y); unfold multZ in |- *; reflexivity.",
                        "VernacExtend",
                        "b300e29107252e8e63a8bdca7008be2edfd0163e"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (mult_IZ y).",
                        "VernacExtend",
                        "1d661fb4519457884e8aad3e8f56fd2983c5d78e"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; rewrite (tech_mult_posZ y0 y); rewrite H.",
                        "VernacExtend",
                        "3e74460be7365366309e5d33995d61f03a5d006d"
                    ]
                },
                {
                    "command": [
                        "elim (mult_succZ_r y (pos y0)); unfold succZ in |- *; reflexivity.",
                        "VernacExtend",
                        "591c0190c27fef53f9e85b5873384a564617ac6c"
                    ]
                },
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (mult_mIZ y).",
                        "VernacExtend",
                        "8eb49b8ee9870572d83a870c6f05e238b3c97933"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; rewrite (tech_mult_negZ y0 y); rewrite H.",
                        "VernacExtend",
                        "9c5527ecd10c4d02cc62ab6b8377069d403ac566"
                    ]
                },
                {
                    "command": [
                        "elim (mult_predZ_r y (neg y0)); unfold predZ in |- *; reflexivity.",
                        "VernacExtend",
                        "c15c3caf6cc0d65799682b032dbc91996e879f1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_neutral",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "unfold neutral in |- *.",
                        "VernacExtend",
                        "8ec77b90546aac99b38f9d90cf695c533bcfe8fc"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact I.",
                        "VernacExtend",
                        "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim (multZ_commutativity IZ x); reflexivity.",
                        "VernacExtend",
                        "cb3a2a35626c25d7e308ab5be2c0f5cce331cd3e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_add_distributivity",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "unfold distributivity in |- *; intros; case x.",
                        "VernacExtend",
                        "66c30d51092df42040a3a03744ca81d963f88d20"
                    ]
                },
                {
                    "command": [
                        "split; reflexivity.",
                        "VernacExtend",
                        "4dcd3619ac711de01342cf915900e96e80b675e1"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite addZ_eq2; rewrite multZ_eq2.",
                        "VernacExtend",
                        "a65f624089f07bf537b0aa03762a78a9d8ef9faf"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_succZ_l y z); exact (addZ_commutativity (multZ y z) z).",
                        "VernacExtend",
                        "708515978d5e115857cee8f2104caf028b1d0d59"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y0 H.",
                        "VernacExtend",
                        "7052e396dc7111595e7c710220756e3f2a2e1c42"
                    ]
                },
                {
                    "command": [
                        "elim H; intros; split.",
                        "VernacExtend",
                        "915e14b1fdcac9db79d4977de3c9c24e0b713c05"
                    ]
                },
                {
                    "command": [
                        "rewrite addZ_eq3; rewrite multZ_eq3.",
                        "VernacExtend",
                        "413cbf169d1dc98660db95bc427a5c5d54d26c24"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_succZ_l; rewrite H0.",
                        "VernacExtend",
                        "0ecb29bdcc4f2aee7cc6ac597540a29b644687bb"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (multZ (pos y0) z) (multZ y z) z).",
                        "VernacExtend",
                        "966b397346bbdceced2ed86f223d29a637d142ea"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity z (multZ y z)).",
                        "VernacExtend",
                        "8a13d576bc26116857f0b9569316f4995cbce6d4"
                    ]
                },
                {
                    "command": [
                        "apply addZ_associativity.",
                        "VernacExtend",
                        "2892d8ab37d5f325929770223218cd51bef42a92"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite multZ_eq3.",
                        "VernacExtend",
                        "01bb63beccb002574deecea4aaaca560e3925a8a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply (add_add Z addZ addZ_commutativity addZ_associativity).",
                        "VernacExtend",
                        "03aad695648e98f0cc6a7ae17a63f768d89651d1"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite addZ_eq4; rewrite multZ_eq4; rewrite (mult_predZ_l y z).",
                        "VernacExtend",
                        "b20a01d87e71e5a617fee4c41f84ada1bb836cdc"
                    ]
                },
                {
                    "command": [
                        "exact (addZ_commutativity (multZ y z) (oppZ z)).",
                        "VernacExtend",
                        "7cefffdc334f60b9af63968fcf12165b228ceff0"
                    ]
                },
                {
                    "command": [
                        "rewrite multZ_eq4.",
                        "VernacExtend",
                        "108890a7603d34f54a886b7bf6de1a23ace55009"
                    ]
                },
                {
                    "command": [
                        "apply (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity y z I I).",
                        "VernacExtend",
                        "6b7c7ce2ac17c9e4a2fe538b4f6d2876a9c3f826"
                    ]
                },
                {
                    "command": [
                        "intros y0 H.",
                        "VernacExtend",
                        "7052e396dc7111595e7c710220756e3f2a2e1c42"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_neg_predZ y0 y); rewrite (mult_predZ_l (addZ (neg y0) y) z).",
                        "VernacExtend",
                        "3c1340ef910a762622a3b9a2b6ba6dfc70d816ef"
                    ]
                },
                {
                    "command": [
                        "elim H; intros.",
                        "VernacExtend",
                        "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (multZ (neg y0) z) (multZ y z) (oppZ z)).",
                        "VernacExtend",
                        "d24495f4246e38a600e93021cd982a8853f9da78"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (oppZ z) (multZ y z)).",
                        "VernacExtend",
                        "7320f048d703c3d9b1beb695f2c0a4c45296c4de"
                    ]
                },
                {
                    "command": [
                        "rewrite (addZ_associativity (multZ (neg y0) z) (oppZ z) (multZ y z)).",
                        "VernacExtend",
                        "46b8ad40657e44732a1ce69b63d4dee843ca5632"
                    ]
                },
                {
                    "command": [
                        "elim (tech_mult_negZ y0 z); reflexivity.",
                        "VernacExtend",
                        "e2a41382f72a52f939edd536a376385ca5844b48"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_negZ y0 (addZ y z)); rewrite (tech_mult_negZ y0 y).",
                        "VernacExtend",
                        "b1d22fc2da736cbb179b57c0aaa92af9ebb6cba0"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_negZ y0 z); elim H; intros; rewrite H1.",
                        "VernacExtend",
                        "4ebfa528347196d2c855b009c39d58dfaf1a3dac"
                    ]
                },
                {
                    "command": [
                        "elim (add_add Z addZ addZ_commutativity addZ_associativity (multZ (neg y0) y) (multZ (neg y0) z) (oppZ y) (oppZ z)).",
                        "VernacExtend",
                        "ddddc0508e34b04c93f5e87599024d6bc06d62a6"
                    ]
                },
                {
                    "command": [
                        "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity y z I I).",
                        "VernacExtend",
                        "866bce2aa8b14b59544d6ad549c7cb6cf68bd1da"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_oppZ_r",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros; case x.",
                        "VernacExtend",
                        "c9f85d54695eab4e79a1f1700970bb3f9b65e0b4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
                        "VernacExtend",
                        "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
                    ]
                },
                {
                    "command": [
                        "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y0) y) y I I).",
                        "VernacExtend",
                        "a6c3b7f37690af15ed9fb0ca29ad3cd7dc96f2b5"
                    ]
                },
                {
                    "command": [
                        "elim H; reflexivity.",
                        "VernacExtend",
                        "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
                    ]
                },
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
                        "VernacExtend",
                        "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (neg y0) y) (oppZ y) I I).",
                        "VernacExtend",
                        "d9f5978f5fd2ee994f28f81b7f2d2098588f22c6"
                    ]
                },
                {
                    "command": [
                        "elim H; reflexivity.",
                        "VernacExtend",
                        "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_oppZ_l",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "simple destruct y.",
                        "VernacExtend",
                        "9d80a3357c9c8f06cea5e282253be2dea9ef3301"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_OZ (oppZ x)); rewrite (mult_OZ x); reflexivity.",
                        "VernacExtend",
                        "fb91796f0baef7d210ab10a7eb7c8999683ee3cb"
                    ]
                },
                {
                    "command": [
                        "intros; elim (multZ_commutativity (pos n) (oppZ x)).",
                        "VernacExtend",
                        "7c86f505a63fba6ea266cf0156f399175d8ec809"
                    ]
                },
                {
                    "command": [
                        "elim (multZ_commutativity (pos n) x); elim n.",
                        "VernacExtend",
                        "9c0d7131d079870efd23452f56240d83ce82f0d2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
                        "VernacExtend",
                        "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; symmetry in |- *.",
                        "VernacExtend",
                        "17af33a0733499322b20057a1a1df8ef189d4ed3"
                    ]
                },
                {
                    "command": [
                        "exact (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y0) x) x I I).",
                        "VernacExtend",
                        "2773ced6093fc544db28b2a3508b249016f60cec"
                    ]
                },
                {
                    "command": [
                        "intros; elim (multZ_commutativity (neg n) (oppZ x)).",
                        "VernacExtend",
                        "83fb7a5003cd7a6cd220bf1a9f15cd9179aae594"
                    ]
                },
                {
                    "command": [
                        "elim (multZ_commutativity (neg n) x); elim n.",
                        "VernacExtend",
                        "0e730cbec716124779ace7457e55a49bc00c840d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
                        "VernacExtend",
                        "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H; symmetry in |- *.",
                        "VernacExtend",
                        "17af33a0733499322b20057a1a1df8ef189d4ed3"
                    ]
                },
                {
                    "command": [
                        "exact (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (neg y0) x) (oppZ x) I I).",
                        "VernacExtend",
                        "648d76e1296fc9387586b0ae48c5588b4b004f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_pos_posZ",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_posZ y (pos m)); rewrite H.",
                        "VernacExtend",
                        "ffed53dac223d3d43358235c653fc5db65fc5fe0"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_pos_posZ (y * m + (y + m)) m).",
                        "VernacExtend",
                        "593209b5bf4fde8dc39b0e542b5f3134ea4da653"
                    ]
                },
                {
                    "command": [
                        "elim (technical_lemma y m); reflexivity.",
                        "VernacExtend",
                        "1c1721288955c7fc5185d10798f8452542f8c9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_neg_negZ",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_negZ y (neg m)); rewrite H; unfold oppZ in |- *.",
                        "VernacExtend",
                        "3eec4f1f0a79b2f2346b1a92c1080a505d063da7"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_pos_posZ (y * m + (y + m)) m).",
                        "VernacExtend",
                        "593209b5bf4fde8dc39b0e542b5f3134ea4da653"
                    ]
                },
                {
                    "command": [
                        "elim (technical_lemma y m); reflexivity.",
                        "VernacExtend",
                        "1c1721288955c7fc5185d10798f8452542f8c9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_pos_negZ",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_posZ y (neg m)); rewrite H.",
                        "VernacExtend",
                        "b6af6f3538fc1f915226f678741144b45baf79a0"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_neg_negZ (y * m + (y + m)) m).",
                        "VernacExtend",
                        "1b1bb0b9293dc43623ef1c6820b0eb3c9997d2a4"
                    ]
                },
                {
                    "command": [
                        "elim (technical_lemma y m); reflexivity.",
                        "VernacExtend",
                        "1c1721288955c7fc5185d10798f8452542f8c9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_neg_posZ",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "intros y H; rewrite (tech_mult_negZ y (pos m)); unfold oppZ in |- *; rewrite H.",
                        "VernacExtend",
                        "eb4d005305976b8d66f39ea7410da1a1c7fcbf59"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_neg_negZ (y * m + (y + m)) m).",
                        "VernacExtend",
                        "1b1bb0b9293dc43623ef1c6820b0eb3c9997d2a4"
                    ]
                },
                {
                    "command": [
                        "elim (technical_lemma y m); reflexivity.",
                        "VernacExtend",
                        "1c1721288955c7fc5185d10798f8452542f8c9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multZ_associativity",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold associativity in |- *; intros; elim x.",
                        "VernacExtend",
                        "0281fc9d0134cce6d8ca12668e82ee9d6aad17c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "unfold multZ in |- *; reflexivity.",
                        "VernacExtend",
                        "a23e80d7f507542079c19abc3efbe15a0c2b19c3"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_posZ y0).",
                        "VernacExtend",
                        "c497c0d51a5a49cf79f95f9069cbd3534622b01f"
                    ]
                },
                {
                    "command": [
                        "rewrite H; elim (mult_oppZ_l y z).",
                        "VernacExtend",
                        "89c63f553e615e6bb68d073c2eac9a67b1c7f0d4"
                    ]
                },
                {
                    "command": [
                        "elim (mult_add_distributivity (multZ (pos y0) y) y z); intros.",
                        "VernacExtend",
                        "38ff8280eb066d433b773eec6162589099f16792"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (mult_oppZ_l y z).",
                        "VernacExtend",
                        "4ea230d4c560eba977c0d9c2ef2cad68dcc57adc"
                    ]
                },
                {
                    "command": [
                        "intros y0 H; do 2 rewrite (tech_mult_negZ y0).",
                        "VernacExtend",
                        "38e4714a627af4d4d2b71535232620ca1f6ea7f9"
                    ]
                },
                {
                    "command": [
                        "rewrite H; elim (mult_oppZ_l y z).",
                        "VernacExtend",
                        "89c63f553e615e6bb68d073c2eac9a67b1c7f0d4"
                    ]
                },
                {
                    "command": [
                        "elim (mult_add_distributivity (multZ (neg y0) y) (oppZ y) z); intros.",
                        "VernacExtend",
                        "5a7004ab336ee6459a80db7fcbddd02cd9c4182a"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_ring",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "unfold is_ring in |- *.",
                        "VernacExtend",
                        "f475a6fce6bf8ed04b3ae912f8a79610550ac50c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact addZ_commutativity.",
                        "VernacExtend",
                        "2a3a28a6c8f0a068e56b174cffe5978e991f68a6"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Z_group.",
                        "VernacExtend",
                        "a52fdca2b1a644f72ad4ce7a6dadb5e34d00e373"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold intern in |- *.",
                        "VernacExtend",
                        "3355d7ecf4bd4c1c3c6b788572f791a43534686b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exact I.",
                        "VernacExtend",
                        "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact multZ_associativity.",
                        "VernacExtend",
                        "e797cdd454e18b3615134fb936676dc1d694ea8d"
                    ]
                },
                {
                    "command": [
                        "exact mult_add_distributivity.",
                        "VernacExtend",
                        "b6aeab15264a336aa6e85f396a7a86f2bce58410"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_unitary_commutative_ring",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "unfold is_unitary_commutative_ring in |- *.",
                        "VernacExtend",
                        "4185ccbc8c9675afef2d64cb00420af83004f0d9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact Z_ring.",
                        "VernacExtend",
                        "1995a7004230c9f7e0754ee8a85e9cccea8cd7d4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact multZ_commutativity.",
                        "VernacExtend",
                        "777aa8b8cfbe3e464cc84ed63a68376e68fc7a93"
                    ]
                },
                {
                    "command": [
                        "exact multZ_neutral.",
                        "VernacExtend",
                        "009b431f0777e6b83eb515682872bebd63e88807"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_integ_posZ",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "intros n x; elim x.",
                        "VernacExtend",
                        "730711cb0964720a8213bf3e1c98122f67866e30"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros n0; rewrite (tech_mult_pos_posZ n n0); intros.",
                        "VernacExtend",
                        "65d9b47e46d05bb7b00141fa10755eb50aaa7808"
                    ]
                },
                {
                    "command": [
                        "absurd (pos (n * n0 + (n + n0)) = OZ).",
                        "VernacExtend",
                        "6ae8256da1f65f595654f3fea008bfde0ef9e8cd"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "intros n0; rewrite (tech_mult_pos_negZ n n0); intros.",
                        "VernacExtend",
                        "d1fb69a1db687d6f77b26d6a2983b68793686ef8"
                    ]
                },
                {
                    "command": [
                        "absurd (neg (n * n0 + (n + n0)) = OZ).",
                        "VernacExtend",
                        "cd61a79f3a794957d9224d332cd3e680de391356"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_integ_negZ",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "intros n x; elim x.",
                        "VernacExtend",
                        "730711cb0964720a8213bf3e1c98122f67866e30"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros n0; rewrite (tech_mult_neg_posZ n n0); intros.",
                        "VernacExtend",
                        "3d15c220d2b15334109c6fbe440720f36b06955d"
                    ]
                },
                {
                    "command": [
                        "absurd (neg (n * n0 + (n + n0)) = OZ).",
                        "VernacExtend",
                        "cd61a79f3a794957d9224d332cd3e680de391356"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "intros n0; rewrite (tech_mult_neg_negZ n n0); intros.",
                        "VernacExtend",
                        "21426af4b43037b8ce68e722ba179bff7a0c0a4d"
                    ]
                },
                {
                    "command": [
                        "absurd (pos (n * n0 + (n + n0)) = OZ).",
                        "VernacExtend",
                        "6ae8256da1f65f595654f3fea008bfde0ef9e8cd"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "integrityZ",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "unfold integrity in |- *; intros a b; elim a.",
                        "VernacExtend",
                        "6ea7471db7aeedd87af7ed1ad44c6d8a05bd062f"
                    ]
                },
                {
                    "command": [
                        "intros; left; reflexivity.",
                        "VernacExtend",
                        "1477db432f3847ba88525e5a158bfdc21cac38aa"
                    ]
                },
                {
                    "command": [
                        "intros; right; apply (tech_integ_posZ n b); exact H.",
                        "VernacExtend",
                        "1b9250c34dd00a60265be217de4c4b4c21850793"
                    ]
                },
                {
                    "command": [
                        "intros; right; apply (tech_integ_negZ n b); exact H.",
                        "VernacExtend",
                        "e0c5f985bb39b3641afdd5dd4f18971734730fbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_pos_succZ",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros; elim m.",
                        "VernacExtend",
                        "0ac52100abea4402dacbcf4edb3eb5a210514cb1"
                    ]
                },
                {
                    "command": [
                        "elim multZ_neutral; intros; elim (H0 (pos n) I); intros.",
                        "VernacExtend",
                        "f97793bed44b3ee06b6a959228ab79243b3ada00"
                    ]
                },
                {
                    "command": [
                        "replace (pos 0) with IZ; auto.",
                        "VernacExtend",
                        "6bbf690b2d63a16cf71cda1d774e61aa3d55d43a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "elim (mult_commut 1 (S n)).",
                        "VernacExtend",
                        "2e784b953d16c6020a7fdd371cf6aaa45ca8984f"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_neutr (S n)).",
                        "VernacExtend",
                        "fc4b138275c3868b3062aaa5f2623bcff96e7855"
                    ]
                },
                {
                    "command": [
                        "unfold posOZ in |- *; reflexivity.",
                        "VernacExtend",
                        "7867771d0799099147091183b7818637f4636b96"
                    ]
                },
                {
                    "command": [
                        "intros y H; elim (multZ_commutativity (pos (S y)) (pos n)).",
                        "VernacExtend",
                        "0c4e00f060762c4619b8e38b1a1e18ff6ed8b9f2"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_posZ y (pos n)); elim (multZ_commutativity (pos n) (pos y)).",
                        "VernacExtend",
                        "0962ec280de87fd6aa81a39f3671c383e7b9d80e"
                    ]
                },
                {
                    "command": [
                        "elim H; elim (mult_n_Sm (S n) (S y)); elim (plus_n_Sm (S n * S y) n).",
                        "VernacExtend",
                        "2359f7681af012c31d661225a2bafb6d4b4d74cc"
                    ]
                },
                {
                    "command": [
                        "elim (mult_n_Sm (S n) y); elim (plus_n_Sm (S n * y) n).",
                        "VernacExtend",
                        "7e4c0af19285b7818954dfebaa62f225e4966c2e"
                    ]
                },
                {
                    "command": [
                        "unfold posOZ in |- *; rewrite (tech_add_pos_posZ (S n * y + n) n).",
                        "VernacExtend",
                        "52910582dd349aaa643c0a8e8e83022143440bb1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_mult_pos_succZ2",
            "line_nb": 352,
            "steps": [
                {
                    "command": [
                        "intros; elim (tech_mult_pos_succZ n m).",
                        "VernacExtend",
                        "204d99dfcce020a9b7b29a5585c7b765139b8396"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; elim (mult_n_Sm n m); elim (plus_assoc m (n * m) n); reflexivity.",
                        "VernacExtend",
                        "75afbc1c619609c3c1ae77f23b32bc5a0dfa2180"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div1",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros n0 n q r; elim q.",
                        "VernacExtend",
                        "a8edc335036c7678821adca91717e6a4f52732a6"
                    ]
                },
                {
                    "command": [
                        "elim r.",
                        "VernacExtend",
                        "f99b1ae24cc2c5248147c1733759e83678932dc0"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (S n0 = 0).",
                        "VernacExtend",
                        "82af140e49910d4266aac40cd626d08cf93cb1c8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "intros y H; unfold posOZ in |- *; rewrite (mult_OZ (pos n)).",
                        "VernacExtend",
                        "11f95477ae6c30db0d16a1c2908935288a7bb776"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros; elim (eq_add_S n0 y H0); reflexivity.",
                        "VernacExtend",
                        "10ffb9bf973c2cf22c3480edb7d4fd95abbe9117"
                    ]
                },
                {
                    "command": [
                        "elim r.",
                        "VernacExtend",
                        "f99b1ae24cc2c5248147c1733759e83678932dc0"
                    ]
                },
                {
                    "command": [
                        "intros y H; unfold posOZ in |- *; elim (plus_n_O (S y * S n)).",
                        "VernacExtend",
                        "d4b19b9be77a8b864630dbf80ea9219fd776b28c"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_OZ (multZ (pos n) (pos y))); elim (tech_mult_pos_succZ n y).",
                        "VernacExtend",
                        "f92523dd7fa75c050673a53d9c5af0a790a5fb3d"
                    ]
                },
                {
                    "command": [
                        "elim (mult_commut (S n) (S y)); intros; elim H0; unfold posOZ in |- *; reflexivity.",
                        "VernacExtend",
                        "869633979134c0fb3ce09a585bf15e55dff84dff"
                    ]
                },
                {
                    "command": [
                        "intros y H y0 H0; unfold posOZ in |- *; elim (plus_n_Sm (S y0 * S n) y).",
                        "VernacExtend",
                        "55e0f2add995391c662d7232edf2e39083cad8f4"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (eq_add_S n0 (S y0 * S n + y) H1).",
                        "VernacExtend",
                        "9a1b08cc5acdaac5cfbc28347cc6b52f1bd6bc81"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_pos_succZ2 n y0).",
                        "VernacExtend",
                        "efa5173b9bdc24ef1288f7829390ea4b10b41cc3"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_pos_posZ (S n * y0 + n) y).",
                        "VernacExtend",
                        "b8d7f72b268835f8b8b324a4c44928dfe997d46c"
                    ]
                },
                {
                    "command": [
                        "elim (plus_comm n (S n * y0)); elim (mult_commut y0 (S n)); simpl in |- *.",
                        "VernacExtend",
                        "9c4c299ee1006f315c05616d4abb96b86625b8fb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div2",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "intros n0 n q; elim q.",
                        "VernacExtend",
                        "464a42a93453f695c080a708678a70b2728ddd7b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros; absurd (S n0 = 0).",
                        "VernacExtend",
                        "a77bafb914d4f2eee5701e2d0043f7027ed76812"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "intros y H; unfold negOZ in |- *.",
                        "VernacExtend",
                        "5e0fc5c50d87c10dd0f4622c21e611cb0eb6d423"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_pos_negZ n y); intros.",
                        "VernacExtend",
                        "354ab0e5c07c1daa50de17c58a2e15cf3c515654"
                    ]
                },
                {
                    "command": [
                        "simpl in H0; rewrite (eq_add_S _ _ H0).",
                        "VernacExtend",
                        "524584922225e0b4dfb5cc8c9b57d1f0656c28a1"
                    ]
                },
                {
                    "command": [
                        "elim (mult_commut (S n) y); simpl in |- *; elim (plus_comm (n + y) (n * y)).",
                        "VernacExtend",
                        "9e40f8731368ee8827b4b235faeca4867a2e6f74"
                    ]
                },
                {
                    "command": [
                        "elim (plus_assoc n y (n * y)); reflexivity.",
                        "VernacExtend",
                        "7418f7cdbc80526b040798c01a8846435207e75f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div31",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros; elim q.",
                        "VernacExtend",
                        "1eaf087ebe421cd94c7b36f965da9d25244492c5"
                    ]
                },
                {
                    "command": [
                        "unfold posOZ in |- *; rewrite (mult_OZ (pos n)).",
                        "VernacExtend",
                        "184ac2ab6ef709231b6d5d89c8f2e00143f045d2"
                    ]
                },
                {
                    "command": [
                        "cut (IZ = pos 0); intros.",
                        "VernacExtend",
                        "8cf6c467bc97f604e02153267e072432fd3dadb0"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_IZ (pos n)).",
                        "VernacExtend",
                        "45c17c247b2bae2675cf072a915b3249108e1727"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite (pos n) I); intros; elim H1; intros; elim H3; intros.",
                        "VernacExtend",
                        "3c4cc7cca3a5e5defc5a3e78d7a9925daca72297"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; reflexivity.",
                        "VernacExtend",
                        "0077277cac813ddf2c88f46d77690cbddb8a1e88"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; unfold posOZ in |- *; elim (multZ_commutativity (pos (S y)) (pos n)).",
                        "VernacExtend",
                        "07b2e18ae4add8e33f521b7bebfc88893193da6b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_mult_posZ y (pos n)).",
                        "VernacExtend",
                        "fd037b1f68573c7e30a2d23c037bce1d95e7ecc3"
                    ]
                },
                {
                    "command": [
                        "rewrite (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos y) (pos n)) (pos n) I I).",
                        "VernacExtend",
                        "a9964d1c26d5814e5def1353d864b99c630b3ec5"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_associativity (oppZ (multZ (pos y) (pos n))) (oppZ (pos n)) (pos n)).",
                        "VernacExtend",
                        "5697d2843817844d940dc0df5cec348d73f104c7"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_opposite (pos n) I); intros; elim H1; intros; elim H3; intros.",
                        "VernacExtend",
                        "3c4cc7cca3a5e5defc5a3e78d7a9925daca72297"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; rewrite (add_OZ (oppZ (multZ (pos y) (pos n)))).",
                        "VernacExtend",
                        "4f0e2078ea91c4523aef4b7c0e964db9b8dac122"
                    ]
                },
                {
                    "command": [
                        "elim (multZ_commutativity (pos y) (pos n)); reflexivity.",
                        "VernacExtend",
                        "d5f0a0eb3dff238920154ba46cccfb72da90e5ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div32",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "intros n q r; elim r.",
                        "VernacExtend",
                        "8c6a835f61e47604a77585ad6261e8bac826f15b"
                    ]
                },
                {
                    "command": [
                        "unfold posOZ in |- *; unfold oppZ in |- *; rewrite (add_OZ (pos n)); elim (minus_n_O n).",
                        "VernacExtend",
                        "84f6bee04d7c212979669bac4b084801b0b46444"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros y H; unfold posOZ in |- *; unfold oppZ in |- *; symmetry in |- *.",
                        "VernacExtend",
                        "6a19adcfc96bc05d807cb31585197ca5a5193a85"
                    ]
                },
                {
                    "command": [
                        "exact (tech_add_pos_neg_posZ n y (gt_S_n y n H0)).",
                        "VernacExtend",
                        "8e1d46f8f5c42cc58005530bedfafb80496ca23c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div3",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (tech_opp_pos_negZ q); intros; elim H1.",
                        "VernacExtend",
                        "55c3419f8605dcf019689a0bc1606a5c4c89cbb9"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_oppZ_r (pos n) (pos q)); rewrite (tech_div32 n q r H0).",
                        "VernacExtend",
                        "170dc0696d1774ec548d67e17fabc792ff86bd92"
                    ]
                },
                {
                    "command": [
                        "rewrite (addZ_associativity (oppZ (multZ (pos n) (pos q))) (pos n) (oppZ (posOZ r))) .",
                        "VernacExtend",
                        "3ecbfffec0c756f57e9510c7fdd7d3883d4c8e9b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_div31 n q).",
                        "VernacExtend",
                        "83a5958377e89034d7ddd52d2192185212be31c9"
                    ]
                },
                {
                    "command": [
                        "elim (opp_add Z IdZ addZ OZ oppZ Z_group addZ_commutativity (multZ (pos n) (posOZ q)) (posOZ r) I I).",
                        "VernacExtend",
                        "d03d8261a48fa7cf4083fbf9488a70fe4917d307"
                    ]
                },
                {
                    "command": [
                        "elim (tech_div1 n0 n q r H); reflexivity.",
                        "VernacExtend",
                        "fb80940fc1acc2ff6569b3b503f67fff4045ba4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div4",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "intros; cut (multZ (neg n) (negOZ q) = multZ (pos n) (posOZ q)); intros.",
                        "VernacExtend",
                        "1b5b648d9739c7c271b23569b7f0ca7e6ba40d9c"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; intros; exact (tech_div1 n0 n q r H).",
                        "VernacExtend",
                        "9c2ebb346a87d9d14f33794bf20a7197165a68db"
                    ]
                },
                {
                    "command": [
                        "cut (negOZ q = oppZ (posOZ q)); intros.",
                        "VernacExtend",
                        "6e8be2c7db83cfb8f9d56d340413d72397f35473"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "elim (tech_opp_pos_negZ n); intros; elim H1.",
                        "VernacExtend",
                        "239b8272058598358ab308a68958f25fd7cafaba"
                    ]
                },
                {
                    "command": [
                        "apply (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (posOZ q) I I).",
                        "VernacExtend",
                        "15f2ac1df868cc0b9ac82fdc12d09cb4fdf12be6"
                    ]
                },
                {
                    "command": [
                        "elim q; reflexivity.",
                        "VernacExtend",
                        "952c950a89781956606bb859d4d7360fe23bc480"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div5",
            "line_nb": 428,
            "steps": [
                {
                    "command": [
                        "intros; cut (posOZ q = oppZ (negOZ q)); intros.",
                        "VernacExtend",
                        "654c45672c4075481716d42650a7123fa792a2fa"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "elim (tech_opp_pos_negZ n); intros; elim H1.",
                        "VernacExtend",
                        "239b8272058598358ab308a68958f25fd7cafaba"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (negOZ q) I I).",
                        "VernacExtend",
                        "eb8e46ad30f17035624bd9c7b15dfbbe6c9410a4"
                    ]
                },
                {
                    "command": [
                        "exact (tech_div2 n0 n q H).",
                        "VernacExtend",
                        "da747861ea9b682f422d802e99471075c13742fb"
                    ]
                },
                {
                    "command": [
                        "elim q; reflexivity.",
                        "VernacExtend",
                        "952c950a89781956606bb859d4d7360fe23bc480"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_div6",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (tech_opp_pos_negZ q); intros; elim H2.",
                        "VernacExtend",
                        "c05b76ac76a62bf8484b906a313b426a7751f406"
                    ]
                },
                {
                    "command": [
                        "elim (tech_opp_pos_negZ n); intros; elim H3.",
                        "VernacExtend",
                        "9219aa9c14d443b12899e91beb6e86989e4a5616"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_opp_opp Z IdZ addZ multZ OZ oppZ Z_ring (pos n) (neg q) I I).",
                        "VernacExtend",
                        "b15469a669ad30e0a6ade5101fe700b53578e1a9"
                    ]
                },
                {
                    "command": [
                        "apply (tech_div3 n0 n q r H H0).",
                        "VernacExtend",
                        "8451e38ad719308c8fba0e406a8f1d3ba5533202"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversibleZ",
            "line_nb": 443,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "intros; elim H; intros; elim H0; intros; elim H1.",
                        "VernacExtend",
                        "55c3c4df0ba49dd1a8fabd3791a95a8d2cacb3d6"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros; left; reflexivity.",
                        "VernacExtend",
                        "1477db432f3847ba88525e5a158bfdc21cac38aa"
                    ]
                },
                {
                    "command": [
                        "intros y H H0; elim H0; intros; elim H1; intros.",
                        "VernacExtend",
                        "8b7c3f6885a617cd4fcf4279f5d35a2ff1a9aa00"
                    ]
                },
                {
                    "command": [
                        "absurd (multZ (pos (S y)) x0 = IZ).",
                        "VernacExtend",
                        "942e6a68d6cba564a24f3cbb266baa057d1deeff"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_OZ (pos (S y))).",
                        "VernacExtend",
                        "e2f85e63b0899bb88ea7b007a4646dbf22f4434c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_mult_pos_posZ (S y) n0).",
                        "VernacExtend",
                        "2916e9309a91548debc5c574a2c92ec5449100c5"
                    ]
                },
                {
                    "command": [
                        "elim (plus_comm (S y + n0) (S y * n0)).",
                        "VernacExtend",
                        "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
                    ]
                },
                {
                    "command": [
                        "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *.",
                        "VernacExtend",
                        "ab80200aba11625207ef9d48b5eea4ffe3413b97"
                    ]
                },
                {
                    "command": [
                        "apply (tech_pos_not_posZ (S (y + (n0 + (n0 + y * n0)))) 0).",
                        "VernacExtend",
                        "364151be7c48ffd5a129ffec6dc7cd15672d88b5"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_mult_pos_negZ (S y) n0).",
                        "VernacExtend",
                        "0365a524a824ead9a1ff4ab7d584bdf0b1108a84"
                    ]
                },
                {
                    "command": [
                        "elim (plus_comm (S y + n0) (S y * n0)).",
                        "VernacExtend",
                        "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
                    ]
                },
                {
                    "command": [
                        "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *; discriminate.",
                        "VernacExtend",
                        "dd028954981ed04dd7a573832a92a25d03aceb86"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "intros y H H0; elim H0; intros; elim H1; intros.",
                        "VernacExtend",
                        "8b7c3f6885a617cd4fcf4279f5d35a2ff1a9aa00"
                    ]
                },
                {
                    "command": [
                        "absurd (multZ (neg (S y)) x0 = IZ).",
                        "VernacExtend",
                        "6367776a03dfaea3065012c25e0884edbf264d58"
                    ]
                },
                {
                    "command": [
                        "elim x0.",
                        "VernacExtend",
                        "1155801c0eeffb3f5e993dea5a1f3c2ebc1c8663"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_OZ (neg (S y))).",
                        "VernacExtend",
                        "fadc86ff33951ad29eb8f798c24938a7b91258fd"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_mult_neg_posZ (S y) n0).",
                        "VernacExtend",
                        "c291aa864103be67dbbc7f4babf8a490cde57fa1"
                    ]
                },
                {
                    "command": [
                        "elim (plus_comm (S y + n0) (S y * n0)).",
                        "VernacExtend",
                        "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
                    ]
                },
                {
                    "command": [
                        "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *; discriminate.",
                        "VernacExtend",
                        "dd028954981ed04dd7a573832a92a25d03aceb86"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_mult_neg_negZ (S y) n0).",
                        "VernacExtend",
                        "e9a073de1d8646e5583fccf680d3da5fe6165c48"
                    ]
                },
                {
                    "command": [
                        "elim (plus_comm (S y + n0) (S y * n0)).",
                        "VernacExtend",
                        "b7a2f81d00a7fadfe574fb100599fb5a6f8b145e"
                    ]
                },
                {
                    "command": [
                        "elim (plus_assoc (S y) n0 (S y * n0)); simpl in |- *.",
                        "VernacExtend",
                        "ab80200aba11625207ef9d48b5eea4ffe3413b97"
                    ]
                },
                {
                    "command": [
                        "apply (tech_pos_not_posZ (S (y + (n0 + (n0 + y * n0)))) 0).",
                        "VernacExtend",
                        "364151be7c48ffd5a129ffec6dc7cd15672d88b5"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "exact H2.",
                        "VernacExtend",
                        "6cf1ccd4f667f962fca87ce20ad22b06c15c53ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgn_abs",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; exact (mult_IZ (pos n)).",
                        "VernacExtend",
                        "b1f7ecf6edffbd484b8c8d4b167eea1c82c57d15"
                    ]
                },
                {
                    "command": [
                        "intros; exact (mult_mIZ (neg n)).",
                        "VernacExtend",
                        "e0080896c1b30b0822964caf54fcad0a22d96816"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}