{
    "filename": "ChargeCore/src/ChargeCore/Tactics/Model.v",
    "coq_project": "ChargeCore",
    "vernac_cmds": [
        [
            "Require Import ChargeCore.Logics.ILogic.",
            "VernacRequire",
            "6ba13bedc854e90a13d97484d868c0e3e2910a6c"
        ],
        [
            "Require Import ChargeCore.Logics.ILInsts.",
            "VernacRequire",
            "8f5ce31964506962fdfef63a2e256eeac0e0ab47"
        ],
        [
            "Require Import ChargeCore.Logics.BILInsts.",
            "VernacRequire",
            "296556d99bd210d7cb8e5b5f101675e8abd71ba4"
        ],
        [
            "Require Import ChargeCore.Logics.Later.",
            "VernacRequire",
            "cbde920ac51925903be9978aab259ea9a0119604"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Set Maximal Implicit Insertion.",
            "VernacSetOption",
            "74a1aa9246bc7e55f0ede6e97269d0019e15194e"
        ],
        [
            "Local Existing Instance ILPre_Ops.",
            "VernacDeclareInstances",
            "158c347c63cae75bec1ae68b3b02f0de8564d82e"
        ],
        [
            "Local Existing Instance ILPre_ILogic.",
            "VernacDeclareInstances",
            "5ee0c4086127fe96af1036a323f494f2eeda8ef1"
        ],
        [
            "Local Existing Instance ILFun_Ops.",
            "VernacDeclareInstances",
            "76404e4d614ffccdfbc21a6df5188687d17b832c"
        ],
        [
            "Local Existing Instance ILFun_ILogic.",
            "VernacDeclareInstances",
            "62345881600abf409fc3376dddb7675f1395402d"
        ],
        [
            "Local Transparent ILPre_Ops.",
            "VernacSetOpacity",
            "ac7dad553aadddc4be4d5807f059268ebf8e8aef"
        ],
        [
            "Local Transparent ILFun_Ops.",
            "VernacSetOpacity",
            "3a3650253f079b3d6d79a7f3ac88a322b213d48f"
        ],
        [
            "Local Transparent BILPre_Ops.",
            "VernacSetOpacity",
            "7d96422b58fb57199887eb24d3f58cf380e932b8"
        ],
        [
            "Local Transparent BILFun_Ops.",
            "VernacSetOpacity",
            "42afef2a02c95a43a56ec48e2768ba9ed6eee80e"
        ],
        [
            "Local Transparent ILLaterPreOps.",
            "VernacSetOpacity",
            "d000ccbe5ab49b72c28da83a36f64a7ae8d6a7ed"
        ],
        [
            "Local Transparent ILLaterNatOps.",
            "VernacSetOpacity",
            "c7cad04154d5d23eaf41f3b2f5e4156e889153a3"
        ],
        [
            "Section ILogic_Pre.",
            "VernacBeginSection",
            "0bfd8bcd44e5166f9c84f2a91f74ce0067fa058c"
        ],
        [
            "Context T (ord: relation T) {HPre : PreOrder ord}.",
            "VernacContext",
            "07183a21cf4d667c61e8687ec3f112a00b3b8347"
        ],
        [
            "Context {A : Type} `{IL: ILogic A}.",
            "VernacContext",
            "7a2c15e0a515912d2d9a438c3bc84aa62ffd6cb9"
        ],
        [
            "Lemma ILPreFrm_fold_entails x y (P Q : ILPreFrm ord _) (Hord : ord x y) (H : P |-- Q) : P x |-- Q y.",
            "VernacStartTheoremProof",
            "e685d25a9c776a4fc9c2405211d6c82bb403f765"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply ILPreFrm_closed.",
            "VernacExtend",
            "fcab1b7bee2e49e2abbe53f1ecd4fa43e020c396"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ILPreFrm_intro (P Q : ILPreFrm ord _) (H : forall x, P x |-- Q x) : P |-- Q.",
            "VernacStartTheoremProof",
            "6af391672d139a531b2bab3d1c7872d2bbe13934"
        ],
        [
            "intros x; apply H.",
            "VernacExtend",
            "d4a8d5233399f95fdd28f25bfb1d9743d7e615e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ILPreFrm_apply {P Q : ILPreFrm ord _} (x : T) (H : P |-- Q) : P x |-- Q x.",
            "VernacStartTheoremProof",
            "b6758cad6b81ed568ee0b5fb9e7290f9e979ea47"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ILogic_Pre.",
            "VernacEndSegment",
            "fef6d4b248b0fcbe08921366c99adacb9e317efd"
        ],
        [
            "Section ILogic_Fun.",
            "VernacBeginSection",
            "f75bf06ef001c37dde7425eea5b79f2f3d2c94fc"
        ],
        [
            "Context (T: Type).",
            "VernacContext",
            "56cd07de713b6bdd04bbded088eb85f634344635"
        ],
        [
            "Context {A : Type} {IL: ILogicOps A}.",
            "VernacContext",
            "3d17328adf8e009a895765f8f592abe0097d9030"
        ],
        [
            "Lemma ILFun_fold_entails x y (P Q : Fun T A) (Hxy : x = y) (HPQ : P |-- Q) : P x |-- Q y.",
            "VernacStartTheoremProof",
            "d113c41d912f44e1dcd06aefbbddf4852801285c"
        ],
        [
            "rewrite Hxy; apply HPQ.",
            "VernacExtend",
            "643e2fa964f0a7ddd4a5d1591dd6bc1ad7a4e9d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ILFun_intro (P Q : Fun T A) (H : forall x, P x |-- Q x) : P |-- Q.",
            "VernacStartTheoremProof",
            "899443f00bcedd4346a2d6f01cbe764210ac3c87"
        ],
        [
            "intros x; apply H.",
            "VernacExtend",
            "d4a8d5233399f95fdd28f25bfb1d9743d7e615e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ILFun_apply {P Q : Fun T A} (x : T) (H : P |-- Q) : P x |-- Q x.",
            "VernacStartTheoremProof",
            "50f99f2dd34dfc3df73b3912fe24e664e30a9622"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ILogic_Fun.",
            "VernacEndSegment",
            "4af031655392e7fe12e84c84eae697d6c641fd4d"
        ],
        [
            "Ltac solve_atom := match goal with | |- ?P => first [has_evar P | reflexivity | omega | assumption | idtac] end.",
            "VernacExtend",
            "dcb15e6d4ea8ea1335eecded9b8b837217a026da"
        ],
        [
            "Ltac solve_model_aux := match goal with | |- ?P ?a |-- ?Q ?b => first [apply ILPreFrm_fold_entails; [solve_atom|solve_model_aux] | apply ILFun_fold_entails; [solve_atom|solve_model_aux]] | |- ?P |-- ?Q => try reflexivity end.",
            "VernacExtend",
            "61ff3af335b000516041f9b2328ea7636b4b308f"
        ],
        [
            "Ltac solve_model x := let H := fresh \"H\" in match goal with | |- ?Q => let P := type of x in assert (P |-- Q) as H; [solve_model_aux|apply H; apply x] end.",
            "VernacExtend",
            "b32fe8b9b49f477146698e206ed8ee2bb4a11f1d"
        ],
        [
            "Ltac ilapply_aux t H := match t with | ?f ?x => ilapply_aux f H; first [apply (ILPreFrm_apply x) in H | apply (ILFun_apply x) in H] | _ => idtac end.",
            "VernacExtend",
            "d2312c41d1e71b6c1d507dbb08bf5d317f0999f7"
        ],
        [
            "Ltac ilapply H := let H1 := fresh \"H\" in pose proof H as H1; match goal with | |- ?f ?x => ilapply_aux (f x) H1; apply H1; clear H1 end.",
            "VernacExtend",
            "225df44d6d935d3152480efc59a5dbd09e4a7aac"
        ],
        [
            "Ltac lintros_aux n := first [apply ILPreFrm_intro | apply ILFun_intro]; intro n.",
            "VernacExtend",
            "7e6abe97a950f339397350477999037e7be7ddad"
        ],
        [
            "Tactic Notation \"lintros\" ident(n) := lintros_aux n.",
            "VernacExtend",
            "8c401b16efd2680f5e574de0f4be921ce31937e0"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) := lintros n1; lintros n2.",
            "VernacExtend",
            "20a657c5380f37a048d2f4ba3f0e5b04ea8b9036"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) := lintros n1 n2; lintros n3.",
            "VernacExtend",
            "ea9c34dfbbda61effc2f1c7d56054e7094134c49"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) := lintros n1 n2 n3; lintros n4.",
            "VernacExtend",
            "ac03032197ffd07e0be42703792e3d2766b65bce"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) := lintros n1 n2 n3 n4; lintros n5.",
            "VernacExtend",
            "aeefd500c51140094ac22558de7afdb114549956"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) ident(n6) := lintros n1 n2 n3 n4 n5; lintros n6.",
            "VernacExtend",
            "3b6379a65d14afd856011bb529eafd0b8548fa7a"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) ident(n6) ident(n7) := lintros n1 n2 n3 n4 n5 n6; lintros n7.",
            "VernacExtend",
            "72a48a564a499a680f9d0772d9ec2b47e1760f9c"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) ident(n6) ident(n7) ident(n8) := lintros n1 n2 n3 n4 n5 n6 n7; lintros n8.",
            "VernacExtend",
            "9b75db6b62b0ec630a090800b9b50d4d76dc415c"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) ident(n6) ident(n7) ident(n8) ident(n9) := lintros n1 n2 n3 n4 n5 n6 n7 n8; lintros n9.",
            "VernacExtend",
            "f93e98077ad0e4fe8c365181e88835307e08c7d3"
        ],
        [
            "Tactic Notation \"lintros\" ident(n1) ident(n2) ident(n3) ident(n4) ident(n5) ident(n6) ident(n7) ident(n8) ident(n9) ident(n10) := lintros n1 n2 n3 n4 n5 n6 n7 n8 n9; lintros n10.",
            "VernacExtend",
            "295e0ced347c5f92dbaeaba10a402d1b1955c3af"
        ]
    ],
    "proofs": [
        {
            "name": "ILPreFrm_intro",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros x; apply H.",
                        "VernacExtend",
                        "d4a8d5233399f95fdd28f25bfb1d9743d7e615e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ILPreFrm_apply",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ILFun_fold_entails",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "rewrite Hxy; apply HPQ.",
                        "VernacExtend",
                        "643e2fa964f0a7ddd4a5d1591dd6bc1ad7a4e9d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ILFun_intro",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros x; apply H.",
                        "VernacExtend",
                        "d4a8d5233399f95fdd28f25bfb1d9743d7e615e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ILFun_apply",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}