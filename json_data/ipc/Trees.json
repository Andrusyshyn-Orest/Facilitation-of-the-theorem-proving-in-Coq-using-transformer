{
    "filename": "Trees.v",
    "coq_project": "ipc",
    "vernac_cmds": [
        [
            "Require Export My_Arith.",
            "VernacRequire",
            "4a35977058637925186b87ab59551ef9b72ebda7"
        ],
        [
            "Require Import Le.",
            "VernacRequire",
            "838bfe0aac98b4a25730898d79830c3f8329aec1"
        ],
        [
            "Section Trees.",
            "VernacBeginSection",
            "c5414820353fa5ab58c9483575a0defd2f265349"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Inductive Tree : Set := node : A -> Forest -> Tree with Forest : Set := | Nil_Forest : Forest | Cons_Forest : Tree -> Forest -> Forest.",
            "VernacInductive",
            "e20592a6eb9a22ba0ab101acc61f182dbc7e3c07"
        ],
        [
            "Fixpoint height_tree (t : Tree) : nat := match t with | node a succs => S (height_forest succs) end with height_forest (succs : Forest) : nat := match succs with | Nil_Forest => 0 | Cons_Forest t0 succs => max (height_tree t0) (height_forest succs) end.",
            "VernacFixpoint",
            "4a964466ac4afdfce7846168523b19274743e8d9"
        ],
        [
            "Definition root (t : Tree) := match t with | node a _ => a end.",
            "VernacDefinition",
            "13d3fd965c5835e7991ebf1f6233d847659fed79"
        ],
        [
            "Definition successors (t : Tree) := match t with | node _ succs => succs end.",
            "VernacDefinition",
            "6502d624a39b269396737500509fb92734d87134"
        ],
        [
            "Inductive In_Forest (t0 : Tree) : Forest -> Prop := | in_forest_head : forall succs : Forest, In_Forest t0 (Cons_Forest t0 succs) | in_forest_tail : forall (t1 : Tree) (succs : Forest), In_Forest t0 succs -> In_Forest t0 (Cons_Forest t1 succs).",
            "VernacInductive",
            "95a563b5c184fde1fe66e412e8ba55e0ce893868"
        ],
        [
            "Lemma height_in_le : forall (t : Tree) (succs : Forest), In_Forest t succs -> height_tree t <= height_forest succs.",
            "VernacStartTheoremProof",
            "7710c2d595d6803e66bce8d64aa7b7a5e90ca06e"
        ],
        [
            "intros t succs in_t.",
            "VernacExtend",
            "9378e87ec52273e17d94165b8b206c40f823e1c7"
        ],
        [
            "elim in_t; clear in_t succs.",
            "VernacExtend",
            "b80985546725eab5a3bb91a45111f7ac19095c45"
        ],
        [
            "intros succs.",
            "VernacExtend",
            "a2db8cbcd23c6e7963bc9d41b01ca2d9079d1deb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_n_max1.",
            "VernacExtend",
            "25f3bb2d70e4726d6dfc0d69765591d817af0207"
        ],
        [
            "intros t1 succs in_t le_t.",
            "VernacExtend",
            "0ce94fe33e8bd21ba6897e4b2a66815a244e6eb6"
        ],
        [
            "apply le_trans with (height_forest succs).",
            "VernacExtend",
            "aa1d64d84eb13475c90192f5ba2c2d8b2bfd0411"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_n_max2.",
            "VernacExtend",
            "6ba7c77340d33588acf9fb24df05608d72deec28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma My_Tree_ind : forall P : Tree -> Prop, (forall (a : A) (succs : Forest), (forall t : Tree, In_Forest t succs -> P t) -> P (node a succs)) -> forall t : Tree, P t.",
            "VernacStartTheoremProof",
            "4d5409fded19ba50073e5952ef78fcb4b390bfdc"
        ],
        [
            "intros P step.",
            "VernacExtend",
            "779afe1eb71104aebdd5a8c3260f5fcd74f9ee70"
        ],
        [
            "cut (forall (n : nat) (t : Tree), height_tree t <= n -> P t).",
            "VernacExtend",
            "5f140230e3a8f07f7c04bb7da692a7bdfb132096"
        ],
        [
            "intro claim.",
            "VernacExtend",
            "934b87468a5cb059ca69f0c0b8130109ac40a52a"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "apply claim with (height_tree t).",
            "VernacExtend",
            "6bb5f391b60b7714d63e6e17c8f616c8e58bdce0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros n; elim n; clear n.",
            "VernacExtend",
            "94d9045eba1972bbdd86b7712bc12e70b8c2d85c"
        ],
        [
            "intros t; elim t; clear t.",
            "VernacExtend",
            "6eb672b06b1206c01631e5e8ee1cc6a07a465ea8"
        ],
        [
            "intros a succs u0.",
            "VernacExtend",
            "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "inversion_clear u0.",
            "VernacExtend",
            "19c5a44a1d215e8c997ff104bd1211c4d86c716d"
        ],
        [
            "intros n ih t.",
            "VernacExtend",
            "dc653dc2a81a51fffdfbb3de8fd89e4750429367"
        ],
        [
            "elim t; clear t.",
            "VernacExtend",
            "6a325d46627c68320f12cefc68a25d79a79a580a"
        ],
        [
            "intros a succs u0.",
            "VernacExtend",
            "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
        ],
        [
            "apply step; clear step.",
            "VernacExtend",
            "13c4e9a50e71f27255dc637ddfad70e5cc3a023c"
        ],
        [
            "intros t in_t.",
            "VernacExtend",
            "fbfd9fc5636ff54c705a7425f4b509ed58dd23b0"
        ],
        [
            "apply ih; clear ih P.",
            "VernacExtend",
            "5373ca42bb9455c323b5779ed417bac54689aa6e"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "apply le_trans with (S (height_forest succs)).",
            "VernacExtend",
            "4d49733bb2aa2bbe8abaa8a0b5b2db07ea5ad20b"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply height_in_le; assumption.",
            "VernacExtend",
            "0ce7bb8287e6ac7907b3a0e8d493c7f0a3d5ff60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma My_Tree_rec : forall P : Tree -> Set, (forall (a : A) (succs : Forest), (forall t : Tree, In_Forest t succs -> P t) -> P (node a succs)) -> forall t : Tree, P t.",
            "VernacStartTheoremProof",
            "90cb4adcf03ca4497588c893cef17bfb4d5c0367"
        ],
        [
            "intros P step.",
            "VernacExtend",
            "779afe1eb71104aebdd5a8c3260f5fcd74f9ee70"
        ],
        [
            "cut (forall (n : nat) (t : Tree), height_tree t <= n -> P t).",
            "VernacExtend",
            "5f140230e3a8f07f7c04bb7da692a7bdfb132096"
        ],
        [
            "intro claim.",
            "VernacExtend",
            "934b87468a5cb059ca69f0c0b8130109ac40a52a"
        ],
        [
            "intro t.",
            "VernacExtend",
            "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
        ],
        [
            "apply claim with (height_tree t).",
            "VernacExtend",
            "6bb5f391b60b7714d63e6e17c8f616c8e58bdce0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros n; elim n; clear n.",
            "VernacExtend",
            "94d9045eba1972bbdd86b7712bc12e70b8c2d85c"
        ],
        [
            "intros t; elim t; clear t.",
            "VernacExtend",
            "6eb672b06b1206c01631e5e8ee1cc6a07a465ea8"
        ],
        [
            "intros a succs u0.",
            "VernacExtend",
            "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "inversion_clear u0.",
            "VernacExtend",
            "19c5a44a1d215e8c997ff104bd1211c4d86c716d"
        ],
        [
            "intros n ih t.",
            "VernacExtend",
            "dc653dc2a81a51fffdfbb3de8fd89e4750429367"
        ],
        [
            "elim t; clear t.",
            "VernacExtend",
            "6a325d46627c68320f12cefc68a25d79a79a580a"
        ],
        [
            "intros a succs u0.",
            "VernacExtend",
            "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
        ],
        [
            "apply step; clear step.",
            "VernacExtend",
            "13c4e9a50e71f27255dc637ddfad70e5cc3a023c"
        ],
        [
            "intros t in_t.",
            "VernacExtend",
            "fbfd9fc5636ff54c705a7425f4b509ed58dd23b0"
        ],
        [
            "apply ih; clear ih P.",
            "VernacExtend",
            "5373ca42bb9455c323b5779ed417bac54689aa6e"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "apply le_trans with (S (height_forest succs)).",
            "VernacExtend",
            "4d49733bb2aa2bbe8abaa8a0b5b2db07ea5ad20b"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply height_in_le; assumption.",
            "VernacExtend",
            "0ce7bb8287e6ac7907b3a0e8d493c7f0a3d5ff60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Successor : Tree -> Tree -> Prop := | successor_refl : forall t : Tree, Successor t t | successor_trans : forall t0 t1 : Tree, In_Forest t1 (successors t0) -> forall t2 : Tree, Successor t2 t1 -> Successor t2 t0.",
            "VernacInductive",
            "b0f69f4d7a90805b6c49908eb7ca103634d753bb"
        ],
        [
            "Lemma succs_trans : forall t1 t2 : Tree, Successor t2 t1 -> forall t0 : Tree, Successor t1 t0 -> Successor t2 t0.",
            "VernacStartTheoremProof",
            "3b356346bec8e473505d1a7b53a0645b4d5a54a8"
        ],
        [
            "intros t1 t2 u0 t0 u1.",
            "VernacExtend",
            "52f652cec096cf8cc7ee58e35ec06503f7aea4f4"
        ],
        [
            "generalize u0; clear u0.",
            "VernacExtend",
            "617901fbe8cf9605be255bfe50065dc907b50b27"
        ],
        [
            "elim u1; clear u1 t0 t1.",
            "VernacExtend",
            "e2e08c4d81f325a97566cbcc87e9f9135ba97849"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros t0 t1 in_t1 t3 suc_t3_t1 ih suc_t2_t3.",
            "VernacExtend",
            "35903381e2999f734a483125cedb1f1aa77f9f15"
        ],
        [
            "apply (successor_trans t0 t1 in_t1 t2).",
            "VernacExtend",
            "c8e3007129c599033a058c91d0b58b36cbb14311"
        ],
        [
            "apply ih; assumption.",
            "VernacExtend",
            "686c32e43be7a3db3504707cccfd5b2a9fd6b27e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succs_refl : forall t : Tree, Successor t t.",
            "VernacStartTheoremProof",
            "7cbd78b29f032991ca88dd782e6c4ff0df5aa1b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply successor_refl.",
            "VernacExtend",
            "9c154864406d67ed2397306a6e6001c59acdc1bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Succs_Tree_ind : forall P : Tree -> Prop, (forall a : A, P (node a Nil_Forest)) -> (forall t0 t1 : Tree, Successor t0 t1 -> P t0 -> P t1) -> forall t : Tree, P t.",
            "VernacStartTheoremProof",
            "6c2853edc10686a281ea1ac0b67882254553b89d"
        ],
        [
            "intros P leaf step t.",
            "VernacExtend",
            "a2a15eb38f83f1a6e0fe235203cffb9e51d7e4bd"
        ],
        [
            "apply My_Tree_ind.",
            "VernacExtend",
            "39d018d20322289c2de3a6b2c9d9a4329360fef8"
        ],
        [
            "intros a succs; case succs; clear succs.",
            "VernacExtend",
            "41ef4ba79d566e685f41fa5ecde8b400e949b7df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply leaf.",
            "VernacExtend",
            "ad26293624a95e5a52d049b619316bd597651e2c"
        ],
        [
            "intros t0 succs ih.",
            "VernacExtend",
            "f583d0b091064a6afb38c0ed3cb4a6beaa0ef5e4"
        ],
        [
            "apply step with t0.",
            "VernacExtend",
            "39bf5a7d5b57808dba01becbf789208684aba6a7"
        ],
        [
            "apply successor_trans with t0.",
            "VernacExtend",
            "71fc1a04b5b7ec9b5d7b6013d6cdf75220a21e63"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply in_forest_head.",
            "VernacExtend",
            "1d6afe1f0482eb92a8400a7797f812dcd446bd5a"
        ],
        [
            "apply successor_refl.",
            "VernacExtend",
            "9c154864406d67ed2397306a6e6001c59acdc1bc"
        ],
        [
            "apply ih.",
            "VernacExtend",
            "fc391394da4e361fd63edf988695d64806d368c8"
        ],
        [
            "apply in_forest_head.",
            "VernacExtend",
            "1d6afe1f0482eb92a8400a7797f812dcd446bd5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive In_tree : A -> Tree -> Prop := | in_leave : forall (a : A) (succs : Forest), In_tree a (node a succs) | in_succs : forall (succs : Forest) (t : Tree), In_Forest t succs -> forall a : A, In_tree a t -> forall a' : A, In_tree a (node a' succs).",
            "VernacInductive",
            "cd145f6f5b931628f60089905dbf2df333964d0c"
        ],
        [
            "Lemma in_successor_in : forall (a : A) (t : Tree), In_tree a t -> forall t' : Tree, Successor t t' -> In_tree a t'.",
            "VernacStartTheoremProof",
            "52b23267c2e63c72174c28f075624dd0b155986e"
        ],
        [
            "intros a t in_t t' suc.",
            "VernacExtend",
            "af9fe0c2a5c990aa8ddefcf26d7362ffd5fee948"
        ],
        [
            "generalize in_t; clear in_t.",
            "VernacExtend",
            "7a0af8083fd6e7e4cc43546694728f547f0c00db"
        ],
        [
            "elim suc; clear suc.",
            "VernacExtend",
            "143c35816f1e0962b77548bf199ee86539c3398a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "clear t t'.",
            "VernacExtend",
            "17f85f556fcbfdb196a63171271d394255d8f256"
        ],
        [
            "intros t0 t1 in_t1 t2 suc_t2 ih in_t2.",
            "VernacExtend",
            "2edf17dad0368e9210664977c6e323152e2dcbea"
        ],
        [
            "generalize in_t1; clear in_t1.",
            "VernacExtend",
            "cb226d68334f76548c723260d92e2ca0034f56e8"
        ],
        [
            "elim t0; clear t0.",
            "VernacExtend",
            "5bb8b9d6bde194299163113442a99766b7646fd4"
        ],
        [
            "intros a' succs in_t1.",
            "VernacExtend",
            "b438b06a42b9d8e465c92e94985158787643c2d4"
        ],
        [
            "apply in_succs with (t := t1).",
            "VernacExtend",
            "c71b419f32aac5d70d0740bf17682a441f7008ca"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply ih.",
            "VernacExtend",
            "fc391394da4e361fd63edf988695d64806d368c8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable I : Set.",
            "VernacAssumption",
            "fac7d663d6780a966b6a51c82536dd6be6707d1a"
        ],
        [
            "Variable P : A -> I -> Prop.",
            "VernacAssumption",
            "5f0a4f4174973928455e6776dadda52fb34e44f3"
        ],
        [
            "Inductive Is_Monotone_Tree : Tree -> Prop := is_monotone_tree_intro : forall (a : A) (succs : Forest), Is_Monotone_Forest a succs -> Is_Monotone_Tree (node a succs) with Is_Monotone_Forest : A -> Forest -> Prop := | is_monotone_forest_nil : forall a : A, Is_Monotone_Forest a Nil_Forest | is_monotone_forest_cons : forall (a : A) (t : Tree) (succs : Forest), (forall i : I, P a i -> P (root t) i) -> Is_Monotone_Tree t -> Is_Monotone_Forest a succs -> Is_Monotone_Forest a (Cons_Forest t succs).",
            "VernacInductive",
            "25c5e3d380703826b6a2283f2cf2ddda3140d318"
        ],
        [
            "Lemma is_monotone_tree_successor : forall t : Tree, Is_Monotone_Tree t -> forall t0 : Tree, Successor t0 t -> Is_Monotone_Tree t0.",
            "VernacStartTheoremProof",
            "d4850728941fb2ec73461032f88332f9b240d832"
        ],
        [
            "intros t is_mon_t t0 suc_t0.",
            "VernacExtend",
            "7ce9668bbecc72c1a5b983085c36afdd7be4039c"
        ],
        [
            "generalize is_mon_t; clear is_mon_t.",
            "VernacExtend",
            "9742eda2176c001232eb45f011c55b17061826a3"
        ],
        [
            "elim suc_t0; clear suc_t0 t0.",
            "VernacExtend",
            "5249554e9e8108cf2a4823db5921093322157805"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros t0 t1 in_t1 t2 suc_t2 ih is_mon_t0.",
            "VernacExtend",
            "debe611af49faf90caf9a0935a8c6a04dd29dc01"
        ],
        [
            "apply ih; clear ih suc_t2 t2.",
            "VernacExtend",
            "f03e7ddf51e9e35728854d8183bb54a0cd747a15"
        ],
        [
            "generalize in_t1; clear in_t1.",
            "VernacExtend",
            "cb226d68334f76548c723260d92e2ca0034f56e8"
        ],
        [
            "inversion_clear is_mon_t0.",
            "VernacExtend",
            "8001cf478649c9168cce1816b98db4ed463d7424"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize H; clear H.",
            "VernacExtend",
            "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
        ],
        [
            "elim succs; clear succs.",
            "VernacExtend",
            "e24e645cfd0a876d79354619cdff19bde4579c28"
        ],
        [
            "intros H in_t1.",
            "VernacExtend",
            "edf41943b74c2c83a440deb9e9717884776b7c6e"
        ],
        [
            "inversion_clear in_t1.",
            "VernacExtend",
            "e21005467c6590c9ae6eeb90f97055914d9d5831"
        ],
        [
            "intros t2 succs ih H in_t1.",
            "VernacExtend",
            "a978ea2c412a0efe7a6d6904886db362199e5c73"
        ],
        [
            "inversion_clear in_t1.",
            "VernacExtend",
            "e21005467c6590c9ae6eeb90f97055914d9d5831"
        ],
        [
            "inversion_clear H; assumption.",
            "VernacExtend",
            "2bdf05cb6bc79f5dae0d78cb4982f611585c43ab"
        ],
        [
            "apply ih.",
            "VernacExtend",
            "fc391394da4e361fd63edf988695d64806d368c8"
        ],
        [
            "inversion_clear H; assumption.",
            "VernacExtend",
            "2bdf05cb6bc79f5dae0d78cb4982f611585c43ab"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive Is_Monotone (t : Tree) : Prop := is_monotone_intro : (forall t0 : Tree, Successor t0 t -> forall i : I, P (root t0) i -> forall t1 : Tree, Successor t1 t0 -> P (root t1) i) -> Is_Monotone t.",
            "VernacInductive",
            "369528ccfae75b490b3a690ec53ce915893c730b"
        ],
        [
            "Lemma is_monotone_successor : forall T : Tree, Is_Monotone T -> forall t : Tree, Successor t T -> Is_Monotone t.",
            "VernacStartTheoremProof",
            "9968d2de31878d1e3ac5a32b8e32dd37c00ae822"
        ],
        [
            "intros T mon_T t suc_t.",
            "VernacExtend",
            "53af7d033ac3ff555e36e3a786cbd4404f064ad5"
        ],
        [
            "apply is_monotone_intro.",
            "VernacExtend",
            "5fc219559c78736c536c159e61df7efb4dec9ef5"
        ],
        [
            "intros t0 suc_t0 i Pa t1 suc_1.",
            "VernacExtend",
            "9c6568d78dc9f57cc4874f00fabf907172aa4d69"
        ],
        [
            "inversion_clear mon_T.",
            "VernacExtend",
            "645cff9ef3e5b1039a9cd4f1909586549c5ff9b6"
        ],
        [
            "apply H with t0.",
            "VernacExtend",
            "810d8a8b28cc3a5dd09504b601b8099a6b559e52"
        ],
        [
            "apply succs_trans with t; assumption.",
            "VernacExtend",
            "babce4c4aab3a56f70fa08a40ec31c6cb8e7d4a3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_monotone_tree_is_monotone : forall t : Tree, Is_Monotone_Tree t -> Is_Monotone t.",
            "VernacStartTheoremProof",
            "00d3e9921c9abf23da72cfdc39537e0d1242dace"
        ],
        [
            "intros t H.",
            "VernacExtend",
            "475698d739ae2eaf1c0e4f992363cb01cfb29b5b"
        ],
        [
            "apply is_monotone_intro.",
            "VernacExtend",
            "5fc219559c78736c536c159e61df7efb4dec9ef5"
        ],
        [
            "intros t0 suc_t0.",
            "VernacExtend",
            "72a3044297891f0322cbbef20f6c0b8209f29cdb"
        ],
        [
            "generalize (is_monotone_tree_successor t H t0 suc_t0); clear H suc_t0 t.",
            "VernacExtend",
            "ee1161a52b0f9b2d31af31b531e2cc8027808fbe"
        ],
        [
            "intros H i P0 t1 suc_t1.",
            "VernacExtend",
            "3a6488adbea7129bd1b2df34c1727074ed60f45c"
        ],
        [
            "generalize P0; clear P0.",
            "VernacExtend",
            "2a2654628b7218dfac4dd31a826f5c3dd1936d17"
        ],
        [
            "generalize H; clear H.",
            "VernacExtend",
            "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
        ],
        [
            "elim suc_t1; clear suc_t1 t0 t1.",
            "VernacExtend",
            "f74d220ec5137548954e08620a197335c39b469c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros t0 t1 in_t1 t2 suc_t2 ih H P0.",
            "VernacExtend",
            "99366bdc53da50b48b8c7cdbceed94e17853420b"
        ],
        [
            "apply ih; clear ih.",
            "VernacExtend",
            "90211f694ff6bb84e0c3c90d28e378f9ee89a046"
        ],
        [
            "apply is_monotone_tree_successor with t0.",
            "VernacExtend",
            "c23352c91bc7794b2e4a5670aaa24263ea951898"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply successor_trans with t1.",
            "VernacExtend",
            "9683ef236baa2ec267e8a53328d0a3a919c79733"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply successor_refl.",
            "VernacExtend",
            "9c154864406d67ed2397306a6e6001c59acdc1bc"
        ],
        [
            "generalize P0; clear P0.",
            "VernacExtend",
            "2a2654628b7218dfac4dd31a826f5c3dd1936d17"
        ],
        [
            "generalize in_t1; clear in_t1.",
            "VernacExtend",
            "cb226d68334f76548c723260d92e2ca0034f56e8"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros in_t1 Pa.",
            "VernacExtend",
            "0692541bf8f4f21d8c7ed11edd2475265890776e"
        ],
        [
            "generalize H0; clear H0.",
            "VernacExtend",
            "7d16253efe4141f19ee59163ebd13339b124da19"
        ],
        [
            "generalize in_t1; clear in_t1.",
            "VernacExtend",
            "cb226d68334f76548c723260d92e2ca0034f56e8"
        ],
        [
            "elim succs; clear succs.",
            "VernacExtend",
            "e24e645cfd0a876d79354619cdff19bde4579c28"
        ],
        [
            "intros in_t1 H0.",
            "VernacExtend",
            "49f90b7630cb8a4775624da3a28e8fe38a4e207e"
        ],
        [
            "inversion_clear in_t1.",
            "VernacExtend",
            "e21005467c6590c9ae6eeb90f97055914d9d5831"
        ],
        [
            "intros t3 succs ih in_t1 H0.",
            "VernacExtend",
            "16d68531f68b40334b0f0371673d696cc4f915d1"
        ],
        [
            "inversion_clear in_t1.",
            "VernacExtend",
            "e21005467c6590c9ae6eeb90f97055914d9d5831"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "apply H; assumption.",
            "VernacExtend",
            "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
        ],
        [
            "apply ih.",
            "VernacExtend",
            "fc391394da4e361fd63edf988695d64806d368c8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "inversion_clear H0; assumption.",
            "VernacExtend",
            "ffbb31f75f2b77d9964e884a803963910a46f130"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Trees.",
            "VernacEndSegment",
            "8f7bd4a53ff0c9c5078bf6acbd55d9f3ecd097e7"
        ]
    ],
    "proofs": [
        {
            "name": "height_in_le",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros t succs in_t.",
                        "VernacExtend",
                        "9378e87ec52273e17d94165b8b206c40f823e1c7"
                    ]
                },
                {
                    "command": [
                        "elim in_t; clear in_t succs.",
                        "VernacExtend",
                        "b80985546725eab5a3bb91a45111f7ac19095c45"
                    ]
                },
                {
                    "command": [
                        "intros succs.",
                        "VernacExtend",
                        "a2db8cbcd23c6e7963bc9d41b01ca2d9079d1deb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_n_max1.",
                        "VernacExtend",
                        "25f3bb2d70e4726d6dfc0d69765591d817af0207"
                    ]
                },
                {
                    "command": [
                        "intros t1 succs in_t le_t.",
                        "VernacExtend",
                        "0ce94fe33e8bd21ba6897e4b2a66815a244e6eb6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (height_forest succs).",
                        "VernacExtend",
                        "aa1d64d84eb13475c90192f5ba2c2d8b2bfd0411"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_n_max2.",
                        "VernacExtend",
                        "6ba7c77340d33588acf9fb24df05608d72deec28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "My_Tree_ind",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros P step.",
                        "VernacExtend",
                        "779afe1eb71104aebdd5a8c3260f5fcd74f9ee70"
                    ]
                },
                {
                    "command": [
                        "cut (forall (n : nat) (t : Tree), height_tree t <= n -> P t).",
                        "VernacExtend",
                        "5f140230e3a8f07f7c04bb7da692a7bdfb132096"
                    ]
                },
                {
                    "command": [
                        "intro claim.",
                        "VernacExtend",
                        "934b87468a5cb059ca69f0c0b8130109ac40a52a"
                    ]
                },
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "apply claim with (height_tree t).",
                        "VernacExtend",
                        "6bb5f391b60b7714d63e6e17c8f616c8e58bdce0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros n; elim n; clear n.",
                        "VernacExtend",
                        "94d9045eba1972bbdd86b7712bc12e70b8c2d85c"
                    ]
                },
                {
                    "command": [
                        "intros t; elim t; clear t.",
                        "VernacExtend",
                        "6eb672b06b1206c01631e5e8ee1cc6a07a465ea8"
                    ]
                },
                {
                    "command": [
                        "intros a succs u0.",
                        "VernacExtend",
                        "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "inversion_clear u0.",
                        "VernacExtend",
                        "19c5a44a1d215e8c997ff104bd1211c4d86c716d"
                    ]
                },
                {
                    "command": [
                        "intros n ih t.",
                        "VernacExtend",
                        "dc653dc2a81a51fffdfbb3de8fd89e4750429367"
                    ]
                },
                {
                    "command": [
                        "elim t; clear t.",
                        "VernacExtend",
                        "6a325d46627c68320f12cefc68a25d79a79a580a"
                    ]
                },
                {
                    "command": [
                        "intros a succs u0.",
                        "VernacExtend",
                        "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
                    ]
                },
                {
                    "command": [
                        "apply step; clear step.",
                        "VernacExtend",
                        "13c4e9a50e71f27255dc637ddfad70e5cc3a023c"
                    ]
                },
                {
                    "command": [
                        "intros t in_t.",
                        "VernacExtend",
                        "fbfd9fc5636ff54c705a7425f4b509ed58dd23b0"
                    ]
                },
                {
                    "command": [
                        "apply ih; clear ih P.",
                        "VernacExtend",
                        "5373ca42bb9455c323b5779ed417bac54689aa6e"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S (height_forest succs)).",
                        "VernacExtend",
                        "4d49733bb2aa2bbe8abaa8a0b5b2db07ea5ad20b"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply height_in_le; assumption.",
                        "VernacExtend",
                        "0ce7bb8287e6ac7907b3a0e8d493c7f0a3d5ff60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "My_Tree_rec",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros P step.",
                        "VernacExtend",
                        "779afe1eb71104aebdd5a8c3260f5fcd74f9ee70"
                    ]
                },
                {
                    "command": [
                        "cut (forall (n : nat) (t : Tree), height_tree t <= n -> P t).",
                        "VernacExtend",
                        "5f140230e3a8f07f7c04bb7da692a7bdfb132096"
                    ]
                },
                {
                    "command": [
                        "intro claim.",
                        "VernacExtend",
                        "934b87468a5cb059ca69f0c0b8130109ac40a52a"
                    ]
                },
                {
                    "command": [
                        "intro t.",
                        "VernacExtend",
                        "0f1e2ed40751c280bb4adb99a86b36c003f05ffd"
                    ]
                },
                {
                    "command": [
                        "apply claim with (height_tree t).",
                        "VernacExtend",
                        "6bb5f391b60b7714d63e6e17c8f616c8e58bdce0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros n; elim n; clear n.",
                        "VernacExtend",
                        "94d9045eba1972bbdd86b7712bc12e70b8c2d85c"
                    ]
                },
                {
                    "command": [
                        "intros t; elim t; clear t.",
                        "VernacExtend",
                        "6eb672b06b1206c01631e5e8ee1cc6a07a465ea8"
                    ]
                },
                {
                    "command": [
                        "intros a succs u0.",
                        "VernacExtend",
                        "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "inversion_clear u0.",
                        "VernacExtend",
                        "19c5a44a1d215e8c997ff104bd1211c4d86c716d"
                    ]
                },
                {
                    "command": [
                        "intros n ih t.",
                        "VernacExtend",
                        "dc653dc2a81a51fffdfbb3de8fd89e4750429367"
                    ]
                },
                {
                    "command": [
                        "elim t; clear t.",
                        "VernacExtend",
                        "6a325d46627c68320f12cefc68a25d79a79a580a"
                    ]
                },
                {
                    "command": [
                        "intros a succs u0.",
                        "VernacExtend",
                        "a84704dea55e9e57b7180d2fca3ee5ae710c5520"
                    ]
                },
                {
                    "command": [
                        "apply step; clear step.",
                        "VernacExtend",
                        "13c4e9a50e71f27255dc637ddfad70e5cc3a023c"
                    ]
                },
                {
                    "command": [
                        "intros t in_t.",
                        "VernacExtend",
                        "fbfd9fc5636ff54c705a7425f4b509ed58dd23b0"
                    ]
                },
                {
                    "command": [
                        "apply ih; clear ih P.",
                        "VernacExtend",
                        "5373ca42bb9455c323b5779ed417bac54689aa6e"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S (height_forest succs)).",
                        "VernacExtend",
                        "4d49733bb2aa2bbe8abaa8a0b5b2db07ea5ad20b"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply height_in_le; assumption.",
                        "VernacExtend",
                        "0ce7bb8287e6ac7907b3a0e8d493c7f0a3d5ff60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succs_trans",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros t1 t2 u0 t0 u1.",
                        "VernacExtend",
                        "52f652cec096cf8cc7ee58e35ec06503f7aea4f4"
                    ]
                },
                {
                    "command": [
                        "generalize u0; clear u0.",
                        "VernacExtend",
                        "617901fbe8cf9605be255bfe50065dc907b50b27"
                    ]
                },
                {
                    "command": [
                        "elim u1; clear u1 t0 t1.",
                        "VernacExtend",
                        "e2e08c4d81f325a97566cbcc87e9f9135ba97849"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros t0 t1 in_t1 t3 suc_t3_t1 ih suc_t2_t3.",
                        "VernacExtend",
                        "35903381e2999f734a483125cedb1f1aa77f9f15"
                    ]
                },
                {
                    "command": [
                        "apply (successor_trans t0 t1 in_t1 t2).",
                        "VernacExtend",
                        "c8e3007129c599033a058c91d0b58b36cbb14311"
                    ]
                },
                {
                    "command": [
                        "apply ih; assumption.",
                        "VernacExtend",
                        "686c32e43be7a3db3504707cccfd5b2a9fd6b27e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succs_refl",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply successor_refl.",
                        "VernacExtend",
                        "9c154864406d67ed2397306a6e6001c59acdc1bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Succs_Tree_ind",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros P leaf step t.",
                        "VernacExtend",
                        "a2a15eb38f83f1a6e0fe235203cffb9e51d7e4bd"
                    ]
                },
                {
                    "command": [
                        "apply My_Tree_ind.",
                        "VernacExtend",
                        "39d018d20322289c2de3a6b2c9d9a4329360fef8"
                    ]
                },
                {
                    "command": [
                        "intros a succs; case succs; clear succs.",
                        "VernacExtend",
                        "41ef4ba79d566e685f41fa5ecde8b400e949b7df"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply leaf.",
                        "VernacExtend",
                        "ad26293624a95e5a52d049b619316bd597651e2c"
                    ]
                },
                {
                    "command": [
                        "intros t0 succs ih.",
                        "VernacExtend",
                        "f583d0b091064a6afb38c0ed3cb4a6beaa0ef5e4"
                    ]
                },
                {
                    "command": [
                        "apply step with t0.",
                        "VernacExtend",
                        "39bf5a7d5b57808dba01becbf789208684aba6a7"
                    ]
                },
                {
                    "command": [
                        "apply successor_trans with t0.",
                        "VernacExtend",
                        "71fc1a04b5b7ec9b5d7b6013d6cdf75220a21e63"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply in_forest_head.",
                        "VernacExtend",
                        "1d6afe1f0482eb92a8400a7797f812dcd446bd5a"
                    ]
                },
                {
                    "command": [
                        "apply successor_refl.",
                        "VernacExtend",
                        "9c154864406d67ed2397306a6e6001c59acdc1bc"
                    ]
                },
                {
                    "command": [
                        "apply ih.",
                        "VernacExtend",
                        "fc391394da4e361fd63edf988695d64806d368c8"
                    ]
                },
                {
                    "command": [
                        "apply in_forest_head.",
                        "VernacExtend",
                        "1d6afe1f0482eb92a8400a7797f812dcd446bd5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_successor_in",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros a t in_t t' suc.",
                        "VernacExtend",
                        "af9fe0c2a5c990aa8ddefcf26d7362ffd5fee948"
                    ]
                },
                {
                    "command": [
                        "generalize in_t; clear in_t.",
                        "VernacExtend",
                        "7a0af8083fd6e7e4cc43546694728f547f0c00db"
                    ]
                },
                {
                    "command": [
                        "elim suc; clear suc.",
                        "VernacExtend",
                        "143c35816f1e0962b77548bf199ee86539c3398a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "clear t t'.",
                        "VernacExtend",
                        "17f85f556fcbfdb196a63171271d394255d8f256"
                    ]
                },
                {
                    "command": [
                        "intros t0 t1 in_t1 t2 suc_t2 ih in_t2.",
                        "VernacExtend",
                        "2edf17dad0368e9210664977c6e323152e2dcbea"
                    ]
                },
                {
                    "command": [
                        "generalize in_t1; clear in_t1.",
                        "VernacExtend",
                        "cb226d68334f76548c723260d92e2ca0034f56e8"
                    ]
                },
                {
                    "command": [
                        "elim t0; clear t0.",
                        "VernacExtend",
                        "5bb8b9d6bde194299163113442a99766b7646fd4"
                    ]
                },
                {
                    "command": [
                        "intros a' succs in_t1.",
                        "VernacExtend",
                        "b438b06a42b9d8e465c92e94985158787643c2d4"
                    ]
                },
                {
                    "command": [
                        "apply in_succs with (t := t1).",
                        "VernacExtend",
                        "c71b419f32aac5d70d0740bf17682a441f7008ca"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply ih.",
                        "VernacExtend",
                        "fc391394da4e361fd63edf988695d64806d368c8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_monotone_tree_successor",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros t is_mon_t t0 suc_t0.",
                        "VernacExtend",
                        "7ce9668bbecc72c1a5b983085c36afdd7be4039c"
                    ]
                },
                {
                    "command": [
                        "generalize is_mon_t; clear is_mon_t.",
                        "VernacExtend",
                        "9742eda2176c001232eb45f011c55b17061826a3"
                    ]
                },
                {
                    "command": [
                        "elim suc_t0; clear suc_t0 t0.",
                        "VernacExtend",
                        "5249554e9e8108cf2a4823db5921093322157805"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros t0 t1 in_t1 t2 suc_t2 ih is_mon_t0.",
                        "VernacExtend",
                        "debe611af49faf90caf9a0935a8c6a04dd29dc01"
                    ]
                },
                {
                    "command": [
                        "apply ih; clear ih suc_t2 t2.",
                        "VernacExtend",
                        "f03e7ddf51e9e35728854d8183bb54a0cd747a15"
                    ]
                },
                {
                    "command": [
                        "generalize in_t1; clear in_t1.",
                        "VernacExtend",
                        "cb226d68334f76548c723260d92e2ca0034f56e8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear is_mon_t0.",
                        "VernacExtend",
                        "8001cf478649c9168cce1816b98db4ed463d7424"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize H; clear H.",
                        "VernacExtend",
                        "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
                    ]
                },
                {
                    "command": [
                        "elim succs; clear succs.",
                        "VernacExtend",
                        "e24e645cfd0a876d79354619cdff19bde4579c28"
                    ]
                },
                {
                    "command": [
                        "intros H in_t1.",
                        "VernacExtend",
                        "edf41943b74c2c83a440deb9e9717884776b7c6e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_t1.",
                        "VernacExtend",
                        "e21005467c6590c9ae6eeb90f97055914d9d5831"
                    ]
                },
                {
                    "command": [
                        "intros t2 succs ih H in_t1.",
                        "VernacExtend",
                        "a978ea2c412a0efe7a6d6904886db362199e5c73"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_t1.",
                        "VernacExtend",
                        "e21005467c6590c9ae6eeb90f97055914d9d5831"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; assumption.",
                        "VernacExtend",
                        "2bdf05cb6bc79f5dae0d78cb4982f611585c43ab"
                    ]
                },
                {
                    "command": [
                        "apply ih.",
                        "VernacExtend",
                        "fc391394da4e361fd63edf988695d64806d368c8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; assumption.",
                        "VernacExtend",
                        "2bdf05cb6bc79f5dae0d78cb4982f611585c43ab"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_monotone_successor",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros T mon_T t suc_t.",
                        "VernacExtend",
                        "53af7d033ac3ff555e36e3a786cbd4404f064ad5"
                    ]
                },
                {
                    "command": [
                        "apply is_monotone_intro.",
                        "VernacExtend",
                        "5fc219559c78736c536c159e61df7efb4dec9ef5"
                    ]
                },
                {
                    "command": [
                        "intros t0 suc_t0 i Pa t1 suc_1.",
                        "VernacExtend",
                        "9c6568d78dc9f57cc4874f00fabf907172aa4d69"
                    ]
                },
                {
                    "command": [
                        "inversion_clear mon_T.",
                        "VernacExtend",
                        "645cff9ef3e5b1039a9cd4f1909586549c5ff9b6"
                    ]
                },
                {
                    "command": [
                        "apply H with t0.",
                        "VernacExtend",
                        "810d8a8b28cc3a5dd09504b601b8099a6b559e52"
                    ]
                },
                {
                    "command": [
                        "apply succs_trans with t; assumption.",
                        "VernacExtend",
                        "babce4c4aab3a56f70fa08a40ec31c6cb8e7d4a3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_monotone_tree_is_monotone",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros t H.",
                        "VernacExtend",
                        "475698d739ae2eaf1c0e4f992363cb01cfb29b5b"
                    ]
                },
                {
                    "command": [
                        "apply is_monotone_intro.",
                        "VernacExtend",
                        "5fc219559c78736c536c159e61df7efb4dec9ef5"
                    ]
                },
                {
                    "command": [
                        "intros t0 suc_t0.",
                        "VernacExtend",
                        "72a3044297891f0322cbbef20f6c0b8209f29cdb"
                    ]
                },
                {
                    "command": [
                        "generalize (is_monotone_tree_successor t H t0 suc_t0); clear H suc_t0 t.",
                        "VernacExtend",
                        "ee1161a52b0f9b2d31af31b531e2cc8027808fbe"
                    ]
                },
                {
                    "command": [
                        "intros H i P0 t1 suc_t1.",
                        "VernacExtend",
                        "3a6488adbea7129bd1b2df34c1727074ed60f45c"
                    ]
                },
                {
                    "command": [
                        "generalize P0; clear P0.",
                        "VernacExtend",
                        "2a2654628b7218dfac4dd31a826f5c3dd1936d17"
                    ]
                },
                {
                    "command": [
                        "generalize H; clear H.",
                        "VernacExtend",
                        "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
                    ]
                },
                {
                    "command": [
                        "elim suc_t1; clear suc_t1 t0 t1.",
                        "VernacExtend",
                        "f74d220ec5137548954e08620a197335c39b469c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros t0 t1 in_t1 t2 suc_t2 ih H P0.",
                        "VernacExtend",
                        "99366bdc53da50b48b8c7cdbceed94e17853420b"
                    ]
                },
                {
                    "command": [
                        "apply ih; clear ih.",
                        "VernacExtend",
                        "90211f694ff6bb84e0c3c90d28e378f9ee89a046"
                    ]
                },
                {
                    "command": [
                        "apply is_monotone_tree_successor with t0.",
                        "VernacExtend",
                        "c23352c91bc7794b2e4a5670aaa24263ea951898"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply successor_trans with t1.",
                        "VernacExtend",
                        "9683ef236baa2ec267e8a53328d0a3a919c79733"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply successor_refl.",
                        "VernacExtend",
                        "9c154864406d67ed2397306a6e6001c59acdc1bc"
                    ]
                },
                {
                    "command": [
                        "generalize P0; clear P0.",
                        "VernacExtend",
                        "2a2654628b7218dfac4dd31a826f5c3dd1936d17"
                    ]
                },
                {
                    "command": [
                        "generalize in_t1; clear in_t1.",
                        "VernacExtend",
                        "cb226d68334f76548c723260d92e2ca0034f56e8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros in_t1 Pa.",
                        "VernacExtend",
                        "0692541bf8f4f21d8c7ed11edd2475265890776e"
                    ]
                },
                {
                    "command": [
                        "generalize H0; clear H0.",
                        "VernacExtend",
                        "7d16253efe4141f19ee59163ebd13339b124da19"
                    ]
                },
                {
                    "command": [
                        "generalize in_t1; clear in_t1.",
                        "VernacExtend",
                        "cb226d68334f76548c723260d92e2ca0034f56e8"
                    ]
                },
                {
                    "command": [
                        "elim succs; clear succs.",
                        "VernacExtend",
                        "e24e645cfd0a876d79354619cdff19bde4579c28"
                    ]
                },
                {
                    "command": [
                        "intros in_t1 H0.",
                        "VernacExtend",
                        "49f90b7630cb8a4775624da3a28e8fe38a4e207e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_t1.",
                        "VernacExtend",
                        "e21005467c6590c9ae6eeb90f97055914d9d5831"
                    ]
                },
                {
                    "command": [
                        "intros t3 succs ih in_t1 H0.",
                        "VernacExtend",
                        "16d68531f68b40334b0f0371673d696cc4f915d1"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_t1.",
                        "VernacExtend",
                        "e21005467c6590c9ae6eeb90f97055914d9d5831"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "apply H; assumption.",
                        "VernacExtend",
                        "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
                    ]
                },
                {
                    "command": [
                        "apply ih.",
                        "VernacExtend",
                        "fc391394da4e361fd63edf988695d64806d368c8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0; assumption.",
                        "VernacExtend",
                        "ffbb31f75f2b77d9964e884a803963910a46f130"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}