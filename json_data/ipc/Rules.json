{
    "filename": "Rules.v",
    "coq_project": "ipc",
    "vernac_cmds": [
        [
            "Require Export Minimal.",
            "VernacRequire",
            "92d9058c81a0115fe683e06823b34b953b112a94"
        ],
        [
            "Require Export Sound.",
            "VernacRequire",
            "cf1414b92c13630446bf0bd68aea85e051c190b1"
        ],
        [
            "Require Export NSearch.",
            "VernacRequire",
            "e98d611c9f5628c01cc8b1e386d2fd38fdcd484b"
        ],
        [
            "Inductive search_spec_aux (goal : form) (gamma : flist) (work : nf_list) (context : flist) : Set := | derivable : Derivable context goal -> search_spec_aux goal gamma work context | refutable : forall k : kripke_tree, Is_Monotone_kripke_tree k -> forces_gamma gamma work k -> (forces_t k goal -> False) -> search_spec_aux goal gamma work context.",
            "VernacInductive",
            "63c6b85b5bd5ce477de57ec8bba9815c5c5e6670"
        ],
        [
            "Definition search_spec (goal : form) (gamma : flist) (work : nf_list) (context : flist) (i : Int) := below_form goal i -> below_list gamma i -> below_list context i -> sound gamma work context -> minimal gamma work context -> search_spec_aux goal gamma work context.",
            "VernacDefinition",
            "c35bd5839e948fe7954284e3fd8e75cfc6340e0b"
        ],
        [
            "Lemma rule_shift_gamma_work : forall (goal : form) (l : list Int) (a : normal_form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal gamma (nvimp l a :: work) context j -> search_spec goal (vimp l (nf2form a) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "6328aea39a090c4a78fcae1267dbaee074aa2b02"
        ],
        [
            "intros goal l a gamma work context j spec0.",
            "VernacExtend",
            "ba76b8fc66fdb987e806c576e0d6864a84449db1"
        ],
        [
            "rewrite (vimp_eq_nvimp l a).",
            "VernacExtend",
            "8d577f7650b3bb0e3f8ef69498b76e6a23e46cba"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_shift_work_gamma; assumption.",
            "VernacExtend",
            "d5869ec860210f064e7b94132a511432504d55bc"
        ],
        [
            "apply below_cons_list_tail with (nf2form (nvimp l a)); assumption.",
            "VernacExtend",
            "78b9c9f85d0a84653b628a2f87599bdfbd38e243"
        ],
        [
            "apply sound_shift_gamma_work; assumption.",
            "VernacExtend",
            "3bda70fd186247708509d88a6e90cf21fcb398c1"
        ],
        [
            "apply minimal_shift_gamma_work; assumption.",
            "VernacExtend",
            "19c405a5a00a9de1904d82d419eb77e62f376bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma search_spec_subst_gamma_pos : forall (goal : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int) (a b c : form), Less j j1 -> (below_form c j -> below_form a j /\\ below_form b j1 /\\ subst_form j a b = c) -> (forall k : kripke_tree, Is_Monotone_kripke_tree k -> forces_t k b -> forces_t k (Imp (Atom j) a) -> forces_t k c) -> search_spec goal (b :: Imp (Atom j) a :: gamma) work (b :: Imp (Atom j) a :: context) j1 -> search_spec goal (c :: gamma) work context j.",
            "VernacStartTheoremProof",
            "084665c42c3043f3d3e8f33f6d0537c21e677ac4"
        ],
        [
            "intros goal gamma work context j j1 a b c less1 below_x forces0 spec0.",
            "VernacExtend",
            "49ff7b0b44e870fe7da061753b98603818b6d392"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "generalize (below_cons_list_head c gamma j below_gamma).",
            "VernacExtend",
            "1659da8a6eebdd45f4b71d33df7a67d201c5be39"
        ],
        [
            "intros below_c.",
            "VernacExtend",
            "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
        ],
        [
            "generalize (below_x below_c); clear below_x; intros below_x.",
            "VernacExtend",
            "74eb84e050c536b091b55433313b7f96268a5661"
        ],
        [
            "elim below_x; clear below_x; intros below_a below_x.",
            "VernacExtend",
            "4a8bfb67d3ebb6c7194bd8c7345d68d9a3bcfa56"
        ],
        [
            "elim below_x; clear below_x; intros below_b eq_c.",
            "VernacExtend",
            "5ba60c737f65408e889f876afc8c00e4094c91bf"
        ],
        [
            "generalize (below_cons_list_tail c gamma j below_gamma); clear below_gamma; intros below_gamma.",
            "VernacExtend",
            "d1b8ca25af6ecbecebb097bb907696635547c1d2"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "clear minimal0 forces0.",
            "VernacExtend",
            "f3c4583a2f6333e8fd4cf21c82535aac91217fc5"
        ],
        [
            "intros derivable_i.",
            "VernacExtend",
            "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "apply derivable_cut with (subst_form j a (Imp (Atom j) a)).",
            "VernacExtend",
            "b4c7b61f301498798305ee7f6d951a9e93dfa26c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j a a); try assumption.",
            "VernacExtend",
            "9fa7e809ca3496a243eabd4f5592d0dceb2a7cba"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "apply derivable_a_imp_a.",
            "VernacExtend",
            "ed56dce36877f302eb84c6e07a282e95be7c5cdb"
        ],
        [
            "apply derivable_cut_merge with c.",
            "VernacExtend",
            "294f988d7629bc7b3197757710c3f0feaa405103"
        ],
        [
            "apply derivable_weak.",
            "VernacExtend",
            "34a7d0d837ef5fce171b8fa14b0a8191f5501ead"
        ],
        [
            "apply sound0.",
            "VernacExtend",
            "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "rewrite <- eq_c.",
            "VernacExtend",
            "f42bde3da8d6803c9d4f5398bf88c620dd2b7f94"
        ],
        [
            "rewrite <- (subst_form_below j a goal); try assumption.",
            "VernacExtend",
            "f86ca3cb234be3d5b831e3ef12bc34b4d624f9f0"
        ],
        [
            "rewrite <- (subst_list_below j a context); try assumption.",
            "VernacExtend",
            "83c2c7f418299f390804bc1300f117c7f0169253"
        ],
        [
            "change (Derivable (subst_list j a (b :: Imp (Atom j) a :: context)) (subst_form j a goal)) in |- *.",
            "VernacExtend",
            "51c3602f772c5b6be0c6d82079c4af22680745c0"
        ],
        [
            "apply derivable_subst; assumption.",
            "VernacExtend",
            "c20303980b82fea8387f8c9c2fdc0872745b9201"
        ],
        [
            "clear minimal0 sound0 below_context below_gamma below_goal.",
            "VernacExtend",
            "34068a90159f4be8b974c08e9f1b6ac4395ebde3"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with b (Imp (Atom j) a); try assumption.",
            "VernacExtend",
            "ec28df5186686b9bec5f7f7515a90bfa94b1079c"
        ],
        [
            "intros forces1 forces2.",
            "VernacExtend",
            "e9cfdbd463268538fea07713681735641320cc20"
        ],
        [
            "apply forces0; assumption.",
            "VernacExtend",
            "273eadcd1879c85fbd1b792d08cbd1e6c6c1f043"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "clear minimal0 sound0 forces0.",
            "VernacExtend",
            "5c30cbc7ddccd943f57137178cee884afb6252eb"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "clear minimal0 below_context below_gamma below_goal forces0.",
            "VernacExtend",
            "7476b995d58d82f4a0a67323838425a87936b2ef"
        ],
        [
            "apply sound_cons_gamma_cons_context.",
            "VernacExtend",
            "fc2a81b7983459cc46a334a80cccdaae444668a3"
        ],
        [
            "apply sound_cons_gamma_cons_context.",
            "VernacExtend",
            "fc2a81b7983459cc46a334a80cccdaae444668a3"
        ],
        [
            "apply sound_cons_gamma_tail with c; assumption.",
            "VernacExtend",
            "3cc1fad55c85fb1b39c77a33f5c859f5e4f2c3b9"
        ],
        [
            "clear sound0 below_context below_gamma below_goal below_b below_a.",
            "VernacExtend",
            "c1e57c4f5e8a45714fafc23cb5fa3f6fc6eef2fc"
        ],
        [
            "unfold minimal in |- *.",
            "VernacExtend",
            "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
        ],
        [
            "intros x k k_is_mon k_forces_gamma in_x.",
            "VernacExtend",
            "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
        ],
        [
            "inversion_clear in_x.",
            "VernacExtend",
            "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
        ],
        [
            "rewrite <- H; clear H x.",
            "VernacExtend",
            "54b1a174beda6adb1f281f9116cee479d107aa66"
        ],
        [
            "apply k_forces_gamma.",
            "VernacExtend",
            "3df971a27c83101f540da90e890694ecec8563c1"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rewrite <- H0; clear H0 x.",
            "VernacExtend",
            "3ec9239a18cf814dbb19a62674e3884ae96565a0"
        ],
        [
            "apply k_forces_gamma.",
            "VernacExtend",
            "3df971a27c83101f540da90e890694ecec8563c1"
        ],
        [
            "apply in_gamma_cons_gamma_tail.",
            "VernacExtend",
            "dc7f2292fdc59a041893ae6a198b47b5df0359a4"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "apply minimal0; try assumption.",
            "VernacExtend",
            "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
        ],
        [
            "clear H0 x.",
            "VernacExtend",
            "5d2b3256b3cc412cca3ab781938aa42dfc6a8ed9"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with b (Imp (Atom j) a); try assumption.",
            "VernacExtend",
            "ec28df5186686b9bec5f7f7515a90bfa94b1079c"
        ],
        [
            "intros forces1 forces2.",
            "VernacExtend",
            "e9cfdbd463268538fea07713681735641320cc20"
        ],
        [
            "apply forces0; assumption.",
            "VernacExtend",
            "273eadcd1879c85fbd1b792d08cbd1e6c6c1f043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_a_gamma : forall (goal : form) (l : list Int) (a : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp (j :: nil) a :: gamma) (nvimp l (NAtom j) :: work) (vimp l (Atom j) :: Imp (Atom j) a :: context) j1 -> search_spec goal (vimp l a :: gamma) work context j.",
            "VernacStartTheoremProof",
            "5d7760247b70999ccbb89a44c0e4fad50f63dea1"
        ],
        [
            "intros goal l a gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "20ce24ce11fd1532697e16780c114f28ec8ee5c6"
        ],
        [
            "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (Atom j)); try assumption.",
            "VernacExtend",
            "9a8a92bc9ae37caba8d161b5c46124f495fb3a7e"
        ],
        [
            "intros below_c.",
            "VernacExtend",
            "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
        ],
        [
            "generalize (below_vimp_tail j l a below_c).",
            "VernacExtend",
            "9c0b704e8797048918d3d6e5ef9d454357a39066"
        ],
        [
            "generalize (below_vimp_head j l a below_c); clear below_c.",
            "VernacExtend",
            "ba9f1c605e37ff1b26f1d7cba4363be34a1a6197"
        ],
        [
            "intros below_a below_l.",
            "VernacExtend",
            "1cdcd48309a6b4897cc464978a6bbd4ade0f3ed7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp_split; try assumption.",
            "VernacExtend",
            "01760550687f0141d466fb992f5394a04509d048"
        ],
        [
            "intros i in0.",
            "VernacExtend",
            "5ceb94c74c8d92b9047261dcf620a27a6630f588"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "rewrite (subst_vimp_head j a l (Atom j)); try assumption.",
            "VernacExtend",
            "2f64046caa221e055f764f21db0329d786c501fb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp with (Atom j); try assumption.",
            "VernacExtend",
            "83c3273e4d806eee273db5956bce6ea43523cb3a"
        ],
        [
            "intros k' suc1 forces_j.",
            "VernacExtend",
            "2f1032f0fe49c75e14d6741796427a00cda4747c"
        ],
        [
            "apply (forces2 k'); assumption.",
            "VernacExtend",
            "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
        ],
        [
            "apply rule_shift_gamma_work with (a := NAtom j); assumption.",
            "VernacExtend",
            "f44fa45af0b7c26290ee219c0ea4929e9be06fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_imp_gamma : forall (goal : form) (l : list Int) (a b : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (Imp a (Atom j)) :: vimp (j :: nil) b :: gamma) work (vimp l (Imp a (Atom j)) :: Imp (Atom j) b :: context) j1 -> search_spec goal (vimp l (Imp a b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "ace056168261771b30ac0cecffc73dfeb84704e8"
        ],
        [
            "intros goal l a b gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "ff5317376259cbdb4cabb6ea729a62b86697a68e"
        ],
        [
            "apply search_spec_subst_gamma_pos with (j1 := j1) (a := b) (b := vimp l (Imp a (Atom j))); try assumption; clear spec0.",
            "VernacExtend",
            "8838f678408a8e6464c5e9b081f52845c1fb0d35"
        ],
        [
            "intros below_c.",
            "VernacExtend",
            "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
        ],
        [
            "generalize (below_vimp_tail j l (Imp a b) below_c).",
            "VernacExtend",
            "17d25d29b7df0f7e509b44c67afbf7d6752a495b"
        ],
        [
            "generalize (below_vimp_head j l (Imp a b) below_c); clear below_c.",
            "VernacExtend",
            "376f83eb26f46525524b920864c18803ee853d3d"
        ],
        [
            "intros below_ab below_l; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "95975dd6e5e4f5741a9a7152784b473af2bd8281"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp_split; try assumption.",
            "VernacExtend",
            "01760550687f0141d466fb992f5394a04509d048"
        ],
        [
            "intros i in0.",
            "VernacExtend",
            "5ceb94c74c8d92b9047261dcf620a27a6630f588"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (subst_vimp_head j b l (Imp a (Atom j))); try assumption.",
            "VernacExtend",
            "d7414657a62f8bd4c55c07d861a087cc37b78dfe"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (equal_dec_refl j form b (Atom j)).",
            "VernacExtend",
            "7dfce149bd439ba2378bf46a33e9c0280679998b"
        ],
        [
            "rewrite (subst_form_below j b a); try assumption.",
            "VernacExtend",
            "8da5a05581e01be90a3958be2607f9bb48a3ca43"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp with (Imp a (Atom j)); try assumption.",
            "VernacExtend",
            "d6e8b618d703870aabd0b8aa253a1949385aeffb"
        ],
        [
            "intros k' suc1 forces_j.",
            "VernacExtend",
            "2f1032f0fe49c75e14d6741796427a00cda4747c"
        ],
        [
            "unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
        ],
        [
            "intros k'' suc2 suc3 forces_a.",
            "VernacExtend",
            "cbbb13da9381d93d8d3648ca25c6d856ed0ed8d5"
        ],
        [
            "apply (forces2 k''); try assumption.",
            "VernacExtend",
            "b771f7afabdba682bcebffb97c54bac7ce3b6629"
        ],
        [
            "apply (forces_j k''); assumption.",
            "VernacExtend",
            "e3719a2f55b718c0e66f9f8e98374573ec298061"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_gamma_falsum : forall (gamma : flist) (work : nf_list) (context : flist) (i j : Int), Less i j -> search_spec (Atom i) gamma work context j -> search_spec Falsum gamma work context i.",
            "VernacStartTheoremProof",
            "53ec1a58eab7e1ba5004cee5ec1ceba9158f0825"
        ],
        [
            "intros gamma work context i j less_ij spec0.",
            "VernacExtend",
            "68dcb0e8bb95d8f34fb4d1864b9c47c45de5944d"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros derivable_i.",
            "VernacExtend",
            "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "apply snd_order_inst with i; assumption.",
            "VernacExtend",
            "08d76989f7ddeddd52f3593f430184604db421c8"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_i.",
            "VernacExtend",
            "7f21fbd7a3137d5ebc3e5beb5f531096776d6494"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply below_list_less_below_list with i; assumption.",
            "VernacExtend",
            "a10b8557b2aff15d46a8fe3f86047a001d57cf97"
        ],
        [
            "apply below_list_less_below_list with i; assumption.",
            "VernacExtend",
            "a10b8557b2aff15d46a8fe3f86047a001d57cf97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_gamma_a_imp_b : forall (a b : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec b (a :: gamma) work (a :: context) j -> search_spec (Imp a b) gamma work context j.",
            "VernacStartTheoremProof",
            "feda9777918d23c1d1bf82e4b4f3c1f73ef5903e"
        ],
        [
            "intros a b gamma work context j spec0.",
            "VernacExtend",
            "03769a3fa3f00463a32bfa9ead072379151ddbc0"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim below_goal; clear below_goal; intros below_a below_b.",
            "VernacExtend",
            "821665bc1a8283cd998c7ad4e6fadb9718c4c59f"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros derivable_i.",
            "VernacExtend",
            "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "elim derivable_i; clear derivable_i; intros t der_t.",
            "VernacExtend",
            "5c11cb4d0532d971c16b7419cce52959fb0f588f"
        ],
        [
            "apply Derivable_Intro with (Abs a t).",
            "VernacExtend",
            "b64dd6c2f812dc9afe69969b1383e3a1593ef94f"
        ],
        [
            "apply ImpIntro; assumption.",
            "VernacExtend",
            "45e9f7e8755540fd9b0740b545878e66f946fa6f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_b.",
            "VernacExtend",
            "03c0d82b5a85a9731875b95e609202a2f7f541bc"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_tail with a; assumption.",
            "VernacExtend",
            "d7a1ecac07efa0d7e51a081a5a338e4994b066f8"
        ],
        [
            "intros forces_ab.",
            "VernacExtend",
            "a6c311affb74860420867914b9cd809823301a7e"
        ],
        [
            "apply k_notforces_b.",
            "VernacExtend",
            "8118428ed04e12eb4888126af6394c4c1183e150"
        ],
        [
            "apply forces_a_a_imp_b__forces_b_t with a; try assumption.",
            "VernacExtend",
            "1cc881b94142488f1428faaae8239964c1ceb057"
        ],
        [
            "apply forces_gamma_cons_gamma_head with gamma work; assumption.",
            "VernacExtend",
            "1c08a5d8d35f50df0dc971fda61271de3b70126f"
        ],
        [
            "apply below_cons_list; assumption.",
            "VernacExtend",
            "ab4c8c257044b2de1c142488816eef3b98f9a674"
        ],
        [
            "apply below_cons_list; assumption.",
            "VernacExtend",
            "ab4c8c257044b2de1c142488816eef3b98f9a674"
        ],
        [
            "apply sound_cons_gamma_cons_context; assumption.",
            "VernacExtend",
            "616cb163e1ec47bb6f517e35cd83d1ef1fd16353"
        ],
        [
            "apply minimal_cons_gamma_cons_context; assumption.",
            "VernacExtend",
            "d545c1dfbf2396df6eaf248314f00203d8a89f32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_gamma_a : forall (a : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec (Atom j) (Imp a (Atom j) :: gamma) work (Imp a (Atom j) :: context) j1 -> search_spec a gamma work context j.",
            "VernacStartTheoremProof",
            "fc56143248786d3513300370295564f5462b81d8"
        ],
        [
            "intros a gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "f06f5679ffefd8b1d6c783abead410546883d5cd"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "clear minimal0 sound0.",
            "VernacExtend",
            "742df674494d7606c849e6ae23f5c87848254699"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "apply derivable_cut with (Imp a a).",
            "VernacExtend",
            "c7fb6ba2d050d7b2ce20b5d92f33e27cbc47d309"
        ],
        [
            "apply derivable_a_imp_a.",
            "VernacExtend",
            "ed56dce36877f302eb84c6e07a282e95be7c5cdb"
        ],
        [
            "apply derivable_eq with (subst_list j a (Imp a (Atom j) :: context)) (subst_form j a (Atom j)).",
            "VernacExtend",
            "18ae6483755c3e8f5d6459a53221a15d8cf3d973"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j a a); try assumption.",
            "VernacExtend",
            "9fa7e809ca3496a243eabd4f5592d0dceb2a7cba"
        ],
        [
            "rewrite (subst_list_below j a context); try assumption.",
            "VernacExtend",
            "4f18186db17be7737edceadfae15d2c5dcd733c2"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply equal_dec_refl.",
            "VernacExtend",
            "5ae88b0186c71d205784d51601bd9c4c6d026960"
        ],
        [
            "apply derivable_subst; assumption.",
            "VernacExtend",
            "c20303980b82fea8387f8c9c2fdc0872745b9201"
        ],
        [
            "clear minimal0 sound0.",
            "VernacExtend",
            "742df674494d7606c849e6ae23f5c87848254699"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_j.",
            "VernacExtend",
            "55e2f01d3281411ec2960ee07a9d57e846e95471"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_tail with (Imp a (Atom j)); assumption.",
            "VernacExtend",
            "8ef0472acdf9cffc55d6c73e753232d27094a4f9"
        ],
        [
            "intros forces_a.",
            "VernacExtend",
            "33cc687c25afd7c1f588674c49bc3711da57aa6c"
        ],
        [
            "apply k_notforces_j.",
            "VernacExtend",
            "8c0cb23c42dfa2f2b7747724d3022d7e26461118"
        ],
        [
            "apply forces_a_a_imp_b__forces_b_t with a; try assumption.",
            "VernacExtend",
            "1cc881b94142488f1428faaae8239964c1ceb057"
        ],
        [
            "apply forces_gamma_cons_gamma_head with gamma work; assumption.",
            "VernacExtend",
            "1c08a5d8d35f50df0dc971fda61271de3b70126f"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply sound_cons_gamma_cons_context; assumption.",
            "VernacExtend",
            "616cb163e1ec47bb6f517e35cd83d1ef1fd16353"
        ],
        [
            "apply minimal_cons_gamma_cons_context; assumption.",
            "VernacExtend",
            "d545c1dfbf2396df6eaf248314f00203d8a89f32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_conj_gamma : forall (goal : form) (l : list Int) (b0 b1 : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l b0 :: vimp l b1 :: gamma) work context j -> search_spec goal (vimp l (AndF b0 b1) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "03e3394176f1367c4d9891ff5d1c1e029c761e77"
        ],
        [
            "intros goal l b0 b1 gamma work context j spec0.",
            "VernacExtend",
            "f19339c7c175677d1ed0ee2316399b002eee74a9"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with (vimp l b0) (vimp l b1); try assumption.",
            "VernacExtend",
            "b5797dba4086ca66183dcbdf67a9f7e8a3828a8f"
        ],
        [
            "intros forces_ab0 forces_ab1.",
            "VernacExtend",
            "69a8edeabdbe4e90ce61dd8db56ad80d16e76dee"
        ],
        [
            "apply forces_vimp2 with b0 b1; try assumption.",
            "VernacExtend",
            "10b63b718e952f02d4a1d07f8199d5f6c1452f59"
        ],
        [
            "intros; split; assumption.",
            "VernacExtend",
            "49c46d9f1fd859107496d451098646c0e5d7842e"
        ],
        [
            "apply below_list_weak2 with (vimp l (AndF b0 b1)); try assumption.",
            "VernacExtend",
            "48286dc8e1041832703d2815600f772bb4fa93e0"
        ],
        [
            "intros below_ab0b1.",
            "VernacExtend",
            "d433e945be3baed510cbbafba958fb5b00140f61"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp with (AndF b0 b1); try assumption.",
            "VernacExtend",
            "da238b9cc81afb9ecd4a80c738379c479345b60b"
        ],
        [
            "intros j' below_b0b1; elim below_b0b1; clear below_b0b1; intros; assumption.",
            "VernacExtend",
            "81075fd616b19926d1cc193a66899fe212abd0e4"
        ],
        [
            "apply below_vimp with (AndF b0 b1); try assumption.",
            "VernacExtend",
            "da238b9cc81afb9ecd4a80c738379c479345b60b"
        ],
        [
            "intros j' below_b0b1; elim below_b0b1; clear below_b0b1; intros; assumption.",
            "VernacExtend",
            "81075fd616b19926d1cc193a66899fe212abd0e4"
        ],
        [
            "apply sound_cons_gamma_weak2 with (vimp l (AndF b0 b1)); try assumption.",
            "VernacExtend",
            "8de2103e539a8ae5689d5910f78a911b42877114"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply derivable_vimp with (AndF b0 b1); try assumption.",
            "VernacExtend",
            "703c72a31908ef0ccb3d38d28491f6ede2447aad"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply (derivable_a_and_b__derivable_a b0 b1 context'); assumption.",
            "VernacExtend",
            "fbcf3b7714f9e3d3167388c30b14a4fb0c36f30b"
        ],
        [
            "apply derivable_vimp with (AndF b0 b1); try assumption.",
            "VernacExtend",
            "703c72a31908ef0ccb3d38d28491f6ede2447aad"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply (derivable_a_and_b__derivable_b b0 b1 context'); assumption.",
            "VernacExtend",
            "4adb8ca39f349485ee363c7cc4570f7de93ddcc3"
        ],
        [
            "apply minimal_cons_gamma_weak2 with (vimp l (AndF b0 b1)); try assumption.",
            "VernacExtend",
            "fe35d063b073c9c7004331c30b8885c574ae5bac"
        ],
        [
            "intros k k_is_mon forces_b0 forces_b1.",
            "VernacExtend",
            "6c1fa60a4008ff6a30c1d4209065530225bfa8d1"
        ],
        [
            "apply forces_vimp2 with b0 b1; try assumption.",
            "VernacExtend",
            "10b63b718e952f02d4a1d07f8199d5f6c1452f59"
        ],
        [
            "intros; split; assumption.",
            "VernacExtend",
            "49c46d9f1fd859107496d451098646c0e5d7842e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_conj_gamma_new : forall (goal : form) (l : list Int) (b0 b1 : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp (j :: nil) b0 :: vimp (j :: nil) b1 :: gamma) (nvimp l (NAtom j) :: work) (vimp l (Atom j) :: Imp (Atom j) (AndF b0 b1) :: context) j1 -> search_spec goal (vimp l (AndF b0 b1) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "ee822a05e4367739d45acf9ea7cbea22ff242934"
        ],
        [
            "intros goal l b0 b1 gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "ad59b69b62b29d98fb1d2ccf606e42f458074858"
        ],
        [
            "apply rule_vimp_a_gamma with j1; try assumption.",
            "VernacExtend",
            "6cc4c806c539d70a36ca13e0b8968ceeeb9f5f0c"
        ],
        [
            "apply rule_vimp_conj_gamma; assumption.",
            "VernacExtend",
            "fec398b6ca529362875e5fb903884185f7531af1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_falsum_or_a_gamma : forall (goal : form) (l : list Int) (a : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l a :: gamma) work context j -> search_spec goal (vimp l (OrF Falsum a) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "10784d13d4a65a3a4dec6cfe8b4c13a305dd27be"
        ],
        [
            "intros goal l a gamma work context j spec0.",
            "VernacExtend",
            "ba76b8fc66fdb987e806c576e0d6864a84449db1"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros derivable_i; apply derivable; assumption.",
            "VernacExtend",
            "36702e27474774529c7835e9a5d19e96cc6d129d"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l a); try assumption.",
            "VernacExtend",
            "ec789f53b689faaaccf249a27447fb7501a387a4"
        ],
        [
            "intros forces_la.",
            "VernacExtend",
            "474bb2cd681dc817581a2f7c6c02393265857b90"
        ],
        [
            "apply forces_vimp with a.",
            "VernacExtend",
            "97d170c0f304d9b8a32d0a4c0907787040149de4"
        ],
        [
            "intros; right; assumption.",
            "VernacExtend",
            "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_weak with (vimp l (OrF Falsum a)); try assumption.",
            "VernacExtend",
            "666f64c9013a9f67055c36557cbba1117c570a19"
        ],
        [
            "intros below_x.",
            "VernacExtend",
            "442b41238c96b0439bfd1efc5fb01b03a246ee47"
        ],
        [
            "apply below_vimp with (OrF Falsum a); try assumption.",
            "VernacExtend",
            "209a0b4a33f2d98f1f07babe909aa7f6141f22e8"
        ],
        [
            "intros j0 below_or; elim below_or; intros; assumption.",
            "VernacExtend",
            "3b164e80352fd91b7982b37eb9a2b11bc3b42081"
        ],
        [
            "apply sound_cons_gamma_weak with (vimp l (OrF Falsum a)); try assumption.",
            "VernacExtend",
            "b61bd63170e1c05dde4ac1be6c46a618f21f5357"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "apply derivable_vimp with (OrF Falsum a); try assumption.",
            "VernacExtend",
            "5678cd04332be79d0aec892aa97e15af0d993e16"
        ],
        [
            "intros context0 der0.",
            "VernacExtend",
            "9ba33c60bf32382d74b13b866d1c82160cd17bb9"
        ],
        [
            "apply derivable_falsum_or_a__derivable_a; assumption.",
            "VernacExtend",
            "225b6dadc8ea43f420bf02895f8fa755f41e86ee"
        ],
        [
            "apply minimal_cons_gamma_weak with (vimp l (OrF Falsum a)); try assumption.",
            "VernacExtend",
            "03f24193a07256c0635df5d57459cdc8c32b107f"
        ],
        [
            "intros k k_is_mon k_forces_la.",
            "VernacExtend",
            "c1990cd0262e8aed0baab0f8f7dc7a5fdd3449fc"
        ],
        [
            "apply forces_vimp with a; try assumption.",
            "VernacExtend",
            "e319598ed37f0ae89f80f3479f71843faa3ddbc6"
        ],
        [
            "intros; right; assumption.",
            "VernacExtend",
            "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_a_or_falsum_gamma : forall (goal : form) (l : list Int) (a : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l a :: gamma) work context j -> search_spec goal (vimp l (OrF a Falsum) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "0851421db0a90276168ea4bee9260308e981fbcb"
        ],
        [
            "intros goal l a gamma work context j spec0.",
            "VernacExtend",
            "ba76b8fc66fdb987e806c576e0d6864a84449db1"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros derivable_i; apply derivable; assumption.",
            "VernacExtend",
            "36702e27474774529c7835e9a5d19e96cc6d129d"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l a); try assumption.",
            "VernacExtend",
            "ec789f53b689faaaccf249a27447fb7501a387a4"
        ],
        [
            "intros forces_la.",
            "VernacExtend",
            "474bb2cd681dc817581a2f7c6c02393265857b90"
        ],
        [
            "apply forces_vimp with a.",
            "VernacExtend",
            "97d170c0f304d9b8a32d0a4c0907787040149de4"
        ],
        [
            "intros; left; assumption.",
            "VernacExtend",
            "5eaad269be30c76205577d46b9a9e30a5b5329c1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_weak with (vimp l (OrF a Falsum)); try assumption.",
            "VernacExtend",
            "df9abf47f6a624353c399640fa192d14a9435be8"
        ],
        [
            "intros below_x.",
            "VernacExtend",
            "442b41238c96b0439bfd1efc5fb01b03a246ee47"
        ],
        [
            "apply below_vimp with (OrF a Falsum); try assumption.",
            "VernacExtend",
            "9ff6d25005a4509321c34864ce77bc84853ffc45"
        ],
        [
            "intros j0 below_or; elim below_or; intros; assumption.",
            "VernacExtend",
            "3b164e80352fd91b7982b37eb9a2b11bc3b42081"
        ],
        [
            "apply sound_cons_gamma_weak with (vimp l (OrF a Falsum)); try assumption.",
            "VernacExtend",
            "fd93a47dcb139259769f6b3194263f779d35c99a"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "apply derivable_vimp with (OrF a Falsum); try assumption.",
            "VernacExtend",
            "45ae5317b0602b348fc70321806625dedf7ae079"
        ],
        [
            "intros context0 der0.",
            "VernacExtend",
            "9ba33c60bf32382d74b13b866d1c82160cd17bb9"
        ],
        [
            "apply derivable_a_or_falsum__derivable_a; assumption.",
            "VernacExtend",
            "d65937dea3daf3a8a8fdd153348291e12d08290c"
        ],
        [
            "apply minimal_cons_gamma_weak with (vimp l (OrF a Falsum)); try assumption.",
            "VernacExtend",
            "6175de524aa3012bb6af355e973c25611383cef9"
        ],
        [
            "intros k k_is_mon k_forces_la.",
            "VernacExtend",
            "c1990cd0262e8aed0baab0f8f7dc7a5fdd3449fc"
        ],
        [
            "apply forces_vimp with a; try assumption.",
            "VernacExtend",
            "e319598ed37f0ae89f80f3479f71843faa3ddbc6"
        ],
        [
            "intros; left; assumption.",
            "VernacExtend",
            "5eaad269be30c76205577d46b9a9e30a5b5329c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_atom_or_a_gamma : forall (goal : form) (l : list Int) (i : Int) (a : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (Imp (Atom j) a :: gamma) (nvimp l (NDisj i j) :: work) (vimp l (OrF (Atom i) (Atom j)) :: Imp (Atom j) a :: context) j1 -> search_spec goal (vimp l (OrF (Atom i) a) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "a4ec516c860ae63e60e6f0bb5e75448c1d1fc724"
        ],
        [
            "intros goal l i a gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "9b07644277b4ed3ce6155c34d5bcd2b139d85fdd"
        ],
        [
            "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (OrF (Atom i) (Atom j))); try assumption.",
            "VernacExtend",
            "2781da9f15989982ed33a32d786e7c05328045bb"
        ],
        [
            "intros below_c.",
            "VernacExtend",
            "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
        ],
        [
            "generalize (below_vimp_tail j l (OrF (Atom i) a) below_c).",
            "VernacExtend",
            "8848192f58b9ccbb30ae2d53db7d1c5afcdb6f42"
        ],
        [
            "generalize (below_vimp_head j l (OrF (Atom i) a) below_c); clear below_c.",
            "VernacExtend",
            "5a6fed9005fa2e68944f67817685926bdd2ff49d"
        ],
        [
            "intros below_c below_l; elim below_c; clear below_c; intros below_i below_a.",
            "VernacExtend",
            "fa44a6abdf8e8040a043f358997bf97ff2ac9061"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0.",
            "VernacExtend",
            "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; try assumption.",
            "VernacExtend",
            "8992a45069f229b3a82ce9b597f31205d53a7cc4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (subst_vimp_head j a l (OrF (Atom i) (Atom j))); try assumption.",
            "VernacExtend",
            "6505d32b0c806b1117ce6985739b2fe00fa85312"
        ],
        [
            "change (vimp l (OrF (subst_form j a (Atom i)) (subst_form j a (Atom j))) = vimp l (OrF (Atom i) a)) in |- *.",
            "VernacExtend",
            "881d49859572b94de96d5a8685e9be0c6fba9ceb"
        ],
        [
            "rewrite (subst_form_below j a (Atom i)); try assumption.",
            "VernacExtend",
            "082e11f7ad20f4d8dd9a2e8c2195641f9125cf72"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp with (OrF (Atom i) (Atom j)).",
            "VernacExtend",
            "8f8df9a224b24a4cff507b84bf4ba53a0245cdf0"
        ],
        [
            "intros k' suc1 forces_ij.",
            "VernacExtend",
            "e5bd7902d0ba1ec1ebc0d62819f62bf141934bc7"
        ],
        [
            "elim forces_ij; clear forces_ij.",
            "VernacExtend",
            "deb7575423de49b011b5ae8ae49b707480789c0c"
        ],
        [
            "intros; left; assumption.",
            "VernacExtend",
            "5eaad269be30c76205577d46b9a9e30a5b5329c1"
        ],
        [
            "intros; right.",
            "VernacExtend",
            "0c97a3d964169defe64399098f1fa99f7c30db48"
        ],
        [
            "change (forces_t2 k k' a) in |- *.",
            "VernacExtend",
            "3be34cd7bad853ed4349c60c65790f44ea11f3c9"
        ],
        [
            "apply (forces2 k'); assumption.",
            "VernacExtend",
            "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply rule_shift_gamma_work with (a := NDisj i j); assumption.",
            "VernacExtend",
            "2b34861b94351aa896bd5dd0aeb38af32e65b093"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_a_or_b_gamma : forall (goal : form) (l : list Int) (a b : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (OrF (Atom j) b) :: vimp (j :: nil) a :: gamma) work (vimp l (OrF (Atom j) b) :: Imp (Atom j) a :: context) j1 -> search_spec goal (vimp l (OrF a b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "af953d95495f57c683f5c513f567620a6a4e5376"
        ],
        [
            "intros goal l a b gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "ff5317376259cbdb4cabb6ea729a62b86697a68e"
        ],
        [
            "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (OrF (Atom j) b)); try assumption; clear spec0.",
            "VernacExtend",
            "45ca3bef63c128dee6b4d79d9c9a4cad3ccaef13"
        ],
        [
            "intros below_c.",
            "VernacExtend",
            "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
        ],
        [
            "generalize (below_vimp_tail j l (OrF a b) below_c).",
            "VernacExtend",
            "34b512f2236ede9ef01fbadf83ec9c9a51cd5c87"
        ],
        [
            "generalize (below_vimp_head j l (OrF a b) below_c); clear below_c.",
            "VernacExtend",
            "94983eb96b575efdfb18947169ad0e552e670a55"
        ],
        [
            "intros below_ab below_l; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "95975dd6e5e4f5741a9a7152784b473af2bd8281"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0.",
            "VernacExtend",
            "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; try assumption.",
            "VernacExtend",
            "8992a45069f229b3a82ce9b597f31205d53a7cc4"
        ],
        [
            "rewrite (subst_vimp_head j a l (OrF (Atom j) b)); try assumption.",
            "VernacExtend",
            "80f5942d6a98970d9a2104193595ef44b7adb4e2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j a b); try assumption.",
            "VernacExtend",
            "045be8076ecc62cd6d00cf3f0e91f76b5d3d00e3"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp with (OrF (Atom j) b).",
            "VernacExtend",
            "184cddc25c7142506768256ba49915710ec78206"
        ],
        [
            "intros k' suc1 forces_jb.",
            "VernacExtend",
            "d50b807dbbab172bcfb6446b2ed679ae28806811"
        ],
        [
            "elim forces_jb; clear forces_jb.",
            "VernacExtend",
            "b8c15a093348688481f96346e53209518721e563"
        ],
        [
            "intros; left.",
            "VernacExtend",
            "ac6a63bd865b5b85308e2efd94d504b97c83e2fb"
        ],
        [
            "change (forces_t2 k k' a) in |- *.",
            "VernacExtend",
            "3be34cd7bad853ed4349c60c65790f44ea11f3c9"
        ],
        [
            "apply (forces2 k'); assumption.",
            "VernacExtend",
            "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
        ],
        [
            "intros; right; assumption.",
            "VernacExtend",
            "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_falsum_imp_b_gamma : forall (goal : form) (l : list Int) (b : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal gamma work context j -> search_spec goal (vimp l (Imp Falsum b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "03382065a06682666ddf199e4cc505811e8dd1cb"
        ],
        [
            "intros goal l b gamma work context j spec0.",
            "VernacExtend",
            "6a59a4f6485bbdc3ed3d4e804198b355717f4454"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma; try assumption.",
            "VernacExtend",
            "870dc4869f031688aac79314262b61c7927638be"
        ],
        [
            "apply forces_vimp0.",
            "VernacExtend",
            "1f48172ece7b8dc76928806be5c3053bdac830e9"
        ],
        [
            "intros k' suc1.",
            "VernacExtend",
            "5d5e48d7503fb63038e8c0748929040601793294"
        ],
        [
            "unfold forces_t in |- *; unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "dd4cc642b14055eb0b548d7248fdb7e08466a81c"
        ],
        [
            "intros; elimtype False; assumption.",
            "VernacExtend",
            "0c7895896fc37b89498ced9caac7eccf693b9ca2"
        ],
        [
            "apply below_cons_list_tail with (vimp l (Imp Falsum b)); assumption.",
            "VernacExtend",
            "56f298b0081c537494a2c730ceb30bd4983d3ce2"
        ],
        [
            "apply sound_cons_gamma_tail with (vimp l (Imp Falsum b)); assumption.",
            "VernacExtend",
            "7197db90bce66bf04394f95741ae93df3346b3b2"
        ],
        [
            "unfold minimal in |- *.",
            "VernacExtend",
            "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
        ],
        [
            "intros c k k_is_mon k_forces_gamma in_c.",
            "VernacExtend",
            "4399dd09924521590d6b7612b2d74afebe369e84"
        ],
        [
            "apply minimal0; try assumption.",
            "VernacExtend",
            "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
        ],
        [
            "apply forces_gamma_cons_gamma; try assumption.",
            "VernacExtend",
            "870dc4869f031688aac79314262b61c7927638be"
        ],
        [
            "apply forces_vimp0.",
            "VernacExtend",
            "1f48172ece7b8dc76928806be5c3053bdac830e9"
        ],
        [
            "intros k' suc1.",
            "VernacExtend",
            "5d5e48d7503fb63038e8c0748929040601793294"
        ],
        [
            "unfold forces_t in |- *; unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "dd4cc642b14055eb0b548d7248fdb7e08466a81c"
        ],
        [
            "intros; elimtype False; assumption.",
            "VernacExtend",
            "0c7895896fc37b89498ced9caac7eccf693b9ca2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_atom_imp_b_gamma : forall (goal : form) (l : list Int) (i : Int) (b : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp (i :: l) b :: gamma) work context j -> search_spec goal (vimp l (Imp (Atom i) b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "bc1c7cc8eedc7fbd198df55f0899d4c559012999"
        ],
        [
            "intros; assumption.",
            "VernacExtend",
            "5cc15d3651e27d2e3e1e2b44ec8880d58345a162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_and_imp_gamma : forall (goal : form) (l : list Int) (a0 a1 b : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l (Imp a0 (Imp a1 b)) :: gamma) work context j -> search_spec goal (vimp l (Imp (AndF a0 a1) b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "764d529a3cefe314c2e1ef1b744a6c556a24d819"
        ],
        [
            "intros goal l a0 a1 b gamma work context j spec0.",
            "VernacExtend",
            "20b9e8e05d0d67a9fc37f67aff79cf65e241f5e6"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l (Imp a0 (Imp a1 b))); try assumption.",
            "VernacExtend",
            "b56745768b9b1dcef5d1684cbe25061d1bea5dff"
        ],
        [
            "intros forces_a0a1b.",
            "VernacExtend",
            "3426656f2b275070a7b7572d58e4c1bd3d682310"
        ],
        [
            "apply forces_vimp with (Imp a0 (Imp a1 b)); try assumption.",
            "VernacExtend",
            "72d758650c5628574a7bf629cfbbc279b7f359b6"
        ],
        [
            "intros k' suc1 forces1.",
            "VernacExtend",
            "d29bd33bf8aef489f2ce0ee749a55d35273553ac"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_a0_imp_a1_imp_b__forces_a0_and_a1_imp_b; try assumption.",
            "VernacExtend",
            "860a13c677839c1d1e43dc8517aa90f89201c075"
        ],
        [
            "apply kripke_tree_kripke_model; assumption.",
            "VernacExtend",
            "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
        ],
        [
            "apply below_list_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
            "VernacExtend",
            "2f3709815c74afa1cf66f32c43a65eef298e7c99"
        ],
        [
            "intros below_lab.",
            "VernacExtend",
            "99b5e7ba57769796075c98cee22fc0273a1c3dd9"
        ],
        [
            "apply below_vimp with (Imp (AndF a0 a1) b); try assumption.",
            "VernacExtend",
            "216c7a15f5545f66005eae4beb0231fc840ec1a1"
        ],
        [
            "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
        ],
        [
            "elim below_a; clear below_a; intros below_a0 below_a1.",
            "VernacExtend",
            "b2449891648ceae70ddc83c59feceaea1d4fd330"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply sound_cons_gamma_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
            "VernacExtend",
            "0d9b6b74e63ecf2db9fb5c537daaf1e9fffffc3f"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "apply derivable_vimp with (Imp (AndF a0 a1) b); try assumption.",
            "VernacExtend",
            "5fc911d1293c960d18f6655eecb042a31c16bb8f"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply derivable_a0_and_a1_imp_b__derivable_a0_imp_a1_imp_b; assumption.",
            "VernacExtend",
            "c682e779af0aafd6e35238bdc87438e4cc83093d"
        ],
        [
            "apply minimal_cons_gamma_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
            "VernacExtend",
            "6baf535daea25397a4f642bdb7f69af04b7d642f"
        ],
        [
            "intros k k_is_mon forces1.",
            "VernacExtend",
            "b0c550071645fc6b98690b110b3117c34d42f543"
        ],
        [
            "apply forces_vimp with (Imp a0 (Imp a1 b)); try assumption.",
            "VernacExtend",
            "72d758650c5628574a7bf629cfbbc279b7f359b6"
        ],
        [
            "intros k' suc1 forces'.",
            "VernacExtend",
            "209d4745d945446102cbfa3fca90634eb9fc50f5"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_a0_imp_a1_imp_b__forces_a0_and_a1_imp_b; try assumption.",
            "VernacExtend",
            "860a13c677839c1d1e43dc8517aa90f89201c075"
        ],
        [
            "apply kripke_tree_kripke_model; assumption.",
            "VernacExtend",
            "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_or_imp_gamma : forall (goal : form) (l : list Int) (a0 a1 b : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l (Imp a0 b) :: vimp l (Imp a1 b) :: gamma) work context j -> search_spec goal (vimp l (Imp (OrF a0 a1) b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "2ca858eff75a1c06bd04cd5d751f88eaa972a158"
        ],
        [
            "intros goal l a0 a1 b gamma work context j spec0.",
            "VernacExtend",
            "20b9e8e05d0d67a9fc37f67aff79cf65e241f5e6"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp a0 b)) (vimp l (Imp a1 b)); try assumption.",
            "VernacExtend",
            "999f99f815ba6823c94fc26c3f115f4d67ab65a0"
        ],
        [
            "intros forces1 forces2.",
            "VernacExtend",
            "e9cfdbd463268538fea07713681735641320cc20"
        ],
        [
            "apply forces_vimp2 with (Imp a0 b) (Imp a1 b); try assumption.",
            "VernacExtend",
            "8882379f520833a0fee04997a3d0735c4287262c"
        ],
        [
            "intros k' suc1 forces_a0b forces_a1b.",
            "VernacExtend",
            "66d8a4788ecd02aacbc45c495f73532809495960"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_a0_imp_b_and_a1_imp_b__forces_a0_or_a1_imp_b; try assumption.",
            "VernacExtend",
            "929a4a285f76dda569f7ea9520a12a75fd8be736"
        ],
        [
            "apply below_list_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
            "VernacExtend",
            "21578794c4142e84e5e946cf860d887e03f65197"
        ],
        [
            "intros below1.",
            "VernacExtend",
            "e50115ab29bc91777deec00291d21d3f768300b8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp with (Imp (OrF a0 a1) b); try assumption.",
            "VernacExtend",
            "77d92d048e4d154d7a291f4c7228737c62d92f90"
        ],
        [
            "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
        ],
        [
            "elim below_a; clear below_a; intros below_a0 below_a1.",
            "VernacExtend",
            "b2449891648ceae70ddc83c59feceaea1d4fd330"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply below_vimp with (Imp (OrF a0 a1) b); try assumption.",
            "VernacExtend",
            "77d92d048e4d154d7a291f4c7228737c62d92f90"
        ],
        [
            "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
        ],
        [
            "elim below_a; clear below_a; intros below_a0 below_a1.",
            "VernacExtend",
            "b2449891648ceae70ddc83c59feceaea1d4fd330"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "apply sound_cons_gamma_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
            "VernacExtend",
            "4d17d93de1a7f08394b601628d19b5a542aed899"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply derivable_vimp with (Imp (OrF a0 a1) b); try assumption.",
            "VernacExtend",
            "722591b1daaac58032e5e82344efedc828bab4ab"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply (derivable_a0_or_a1_imp_b__derivable_a0_imp_b context' a0 a1 b der'); assumption.",
            "VernacExtend",
            "20f97c221e9f4bbc4f3aa6330a96b387e36cfe46"
        ],
        [
            "apply derivable_vimp with (Imp (OrF a0 a1) b); try assumption.",
            "VernacExtend",
            "722591b1daaac58032e5e82344efedc828bab4ab"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply (derivable_a0_or_a1_imp_b__derivable_a1_imp_b context' a0 a1 b der'); assumption.",
            "VernacExtend",
            "4dcb30b8fc13908716cd3e15711555b8c80b3dca"
        ],
        [
            "apply minimal_cons_gamma_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
            "VernacExtend",
            "f40f846a9e89672ef73a8593a61666ea41682aa3"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp2 with (Imp a0 b) (Imp a1 b); try assumption.",
            "VernacExtend",
            "8882379f520833a0fee04997a3d0735c4287262c"
        ],
        [
            "intros k' suc1 forces_a0b forces_a1b.",
            "VernacExtend",
            "66d8a4788ecd02aacbc45c495f73532809495960"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_a0_imp_b_and_a1_imp_b__forces_a0_or_a1_imp_b; try assumption.",
            "VernacExtend",
            "929a4a285f76dda569f7ea9520a12a75fd8be736"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_or_imp_gamma_new : forall (goal : form) (l : list Int) (a0 a1 b : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (Imp a0 (Atom j)) :: vimp l (Imp a1 (Atom j)) :: vimp (j :: nil) b :: gamma) work (vimp l (Imp (OrF a0 a1) (Atom j)) :: Imp (Atom j) b :: context) j1 -> search_spec goal (vimp l (Imp (OrF a0 a1) b) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "44bdaa9c858237a2b9819fbec623e37d6d639027"
        ],
        [
            "intros goal l a0 a1 b gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "ebfffa235a3f77653d3bc1983cb676d8efc8267b"
        ],
        [
            "apply rule_vimp_imp_gamma with j1; try assumption.",
            "VernacExtend",
            "b6f5bbdb08b671d805a7550b8cd8c03f681dafa7"
        ],
        [
            "apply rule_vimp_or_imp_gamma; assumption.",
            "VernacExtend",
            "f705612d5ed87de750a064a18510a825cc467dca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_falsum_imp_imp_gamma : forall (goal : form) (l : list Int) (b c : form) (gamma : flist) (work : nf_list) (context : flist) (j : Int), search_spec goal (vimp l c :: gamma) work context j -> search_spec goal (vimp l (Imp (Imp Falsum b) c) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "6c872848744192081ee6d01af53ba9f83552539f"
        ],
        [
            "intros goal l b c gamma work context j spec0.",
            "VernacExtend",
            "6b448942293cda4e37380f60a2e8e9945c53e75c"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "intros der_goal; apply derivable; assumption.",
            "VernacExtend",
            "74c4ff23a0429290be5e2cae32ed51ec8229245f"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l c); try assumption.",
            "VernacExtend",
            "85e18f97b920d5bbac7bd53424b6116fa73e170d"
        ],
        [
            "intros forces_lc.",
            "VernacExtend",
            "b9b3c2dd3aeb5de278ee04073aa5d1bb56f3942f"
        ],
        [
            "apply forces_vimp with c; try assumption.",
            "VernacExtend",
            "00e98d8fb7ffd6d5dffae0746a38c1f0a39177fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_b__forces_a_imp_b; try assumption.",
            "VernacExtend",
            "14afeb90a985ba10945b17550b97694ba9645805"
        ],
        [
            "apply kripke_tree_kripke_model; assumption.",
            "VernacExtend",
            "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
        ],
        [
            "apply below_list_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
            "VernacExtend",
            "0b8d6b58b4fb95ba00cd5c53265c995d57c35e8b"
        ],
        [
            "intros below_lc.",
            "VernacExtend",
            "5ec5ea1d009eb456c823d30f42841e2423b0e2b8"
        ],
        [
            "apply below_vimp with (Imp (Imp Falsum b) c); try assumption.",
            "VernacExtend",
            "9d55361e61a7ae3ff9eb861ff232ff92ad81a4fb"
        ],
        [
            "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply sound_cons_gamma_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
            "VernacExtend",
            "3d3cca3537dd34ba283a71937dec8a59ffddf25a"
        ],
        [
            "intros der.",
            "VernacExtend",
            "fc09ac69579a9cfd0c427737a1017b53d133434e"
        ],
        [
            "apply derivable_vimp with (Imp (Imp Falsum b) c).",
            "VernacExtend",
            "af7767d8df45e8325a8120b14a799710eea85f0e"
        ],
        [
            "intros context' der'.",
            "VernacExtend",
            "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
        ],
        [
            "apply derivable_falsum_imp_b_imp_c__derivable_c with b; assumption.",
            "VernacExtend",
            "5e348c6c5acdcca5b5e331cfa518995d23b590f9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply minimal_cons_gamma_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
            "VernacExtend",
            "233f6240bdaf6ec85cd63450564dbc6b75c7cfdd"
        ],
        [
            "intros k k_is_mon forces1.",
            "VernacExtend",
            "b0c550071645fc6b98690b110b3117c34d42f543"
        ],
        [
            "apply forces_vimp with c; try assumption.",
            "VernacExtend",
            "00e98d8fb7ffd6d5dffae0746a38c1f0a39177fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold forces_t2 in |- *; apply forces_b__forces_a_imp_b; try assumption.",
            "VernacExtend",
            "14afeb90a985ba10945b17550b97694ba9645805"
        ],
        [
            "apply kripke_tree_kripke_model; assumption.",
            "VernacExtend",
            "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_vimp_imp_falsum_imp_gamma : forall (goal : form) (l : list Int) (a c : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (Imp (Imp a (Atom j)) c) :: gamma) work (vimp l (Imp (Imp a (Atom j)) c) :: context) j1 -> search_spec goal (vimp l (Imp (Imp a Falsum) c) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "44eb2b96e8867be94dbfe0c5d6aa4ccc68224bcd"
        ],
        [
            "intros goal l a c gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "01d5eb5dc697e15c857a77f94d6217f25faa1f4f"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "generalize (below_cons_list_head (vimp l (Imp (Imp a Falsum) c)) gamma j below_gamma).",
            "VernacExtend",
            "1de3ff0c133931ae92b5b12a2bc7d90e1d31a9f2"
        ],
        [
            "intros below_lc.",
            "VernacExtend",
            "5ec5ea1d009eb456c823d30f42841e2423b0e2b8"
        ],
        [
            "generalize (below_cons_list_tail (vimp l (Imp (Imp a Falsum) c)) gamma j below_gamma).",
            "VernacExtend",
            "68330c682cb102e7534b595a721b15b4fae66ac3"
        ],
        [
            "clear below_gamma; intros below_gamma.",
            "VernacExtend",
            "de960df0b4d1566832cd91fe45a3bda5bd3ca448"
        ],
        [
            "elim (below_vimp_head j l (Imp (Imp a Falsum) c) below_lc).",
            "VernacExtend",
            "ffca3938d56cef387af24065644415d959ebd749"
        ],
        [
            "intros below_a_falsum; elim below_a_falsum; clear below_a_falsum.",
            "VernacExtend",
            "24b8184413d96cac76ea50886d59274a719c4dd3"
        ],
        [
            "intros below_a below_falsum below_c.",
            "VernacExtend",
            "8d57b68c7af71dfa6883456e972e6226c4d78e47"
        ],
        [
            "generalize (below_vimp_tail j l (Imp (Imp a Falsum) c) below_lc); clear below_lc.",
            "VernacExtend",
            "c3ad1aa2c659b14c680c71ec22a074e4be5ea403"
        ],
        [
            "intros below_l.",
            "VernacExtend",
            "4d0e40c07e465394bef0ba4be24b409ca7157ae9"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "clear minimal0.",
            "VernacExtend",
            "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
        ],
        [
            "intros der_goal.",
            "VernacExtend",
            "927ad17a3b27fcefc1a0b77e5d0b8574b8926920"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "apply derivable_cut_merge with (vimp l (Imp (Imp a Falsum) c)).",
            "VernacExtend",
            "176d1f6a59e9c274c7327401e65be8300e376cb7"
        ],
        [
            "apply sound0.",
            "VernacExtend",
            "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "apply derivable_eq with (subst_list j Falsum (vimp l (Imp (Imp a (Atom j)) c) :: context)) (subst_form j Falsum goal).",
            "VernacExtend",
            "2e985ef2ddb872a70285c6d4c40b72fd86756c02"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_vimp_head j Falsum l (Imp (Imp a (Atom j)) c)).",
            "VernacExtend",
            "46a6eb50c95ca7fea44a98ceb02fbad3d3a84f0a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j Falsum a); try assumption.",
            "VernacExtend",
            "0d4170429582cc46fdd5870aa034380b2ae299e9"
        ],
        [
            "rewrite (subst_form_below j Falsum c); try assumption.",
            "VernacExtend",
            "ea522ef176402355a4340ade3335f57c6f197c1d"
        ],
        [
            "rewrite (equal_dec_refl j form Falsum (Atom j)).",
            "VernacExtend",
            "b8571505bd18354853c401f0ad5c62f9eece83d4"
        ],
        [
            "rewrite (subst_list_below j Falsum context); try assumption.",
            "VernacExtend",
            "6ccc6acc485c7ac5dfa619d13bddd896e03dfcd7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply subst_form_below; assumption.",
            "VernacExtend",
            "3418d3687492a98aa575660122ec86ab96ee1f7a"
        ],
        [
            "apply derivable_subst; assumption.",
            "VernacExtend",
            "c20303980b82fea8387f8c9c2fdc0872745b9201"
        ],
        [
            "clear minimal0.",
            "VernacExtend",
            "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l (Imp (Imp a (Atom j)) c)); try assumption.",
            "VernacExtend",
            "e1b781f215de564c4d362fb93baedd4f7624270f"
        ],
        [
            "intros forces_lc.",
            "VernacExtend",
            "b9b3c2dd3aeb5de278ee04073aa5d1bb56f3942f"
        ],
        [
            "apply forces_vimp with (Imp (Imp a (Atom j)) c); try assumption.",
            "VernacExtend",
            "860124c69d31d53b7a7f2745a10ec79b35691c8b"
        ],
        [
            "intros k' suc1 forces1.",
            "VernacExtend",
            "d29bd33bf8aef489f2ce0ee749a55d35273553ac"
        ],
        [
            "apply forces_a_imp_b_imp_c__forces_a_imp_falsum_imp_c_t2 with (Atom j); assumption.",
            "VernacExtend",
            "1a9157c90927ed5930a510dc587b4158d5f8fb13"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0.",
            "VernacExtend",
            "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0.",
            "VernacExtend",
            "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
        ],
        [
            "apply less_trans with j; try assumption.",
            "VernacExtend",
            "f1091d6425a3830c078b3e55ea727568766b9a1d"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply sound_cons_gamma_cons_context.",
            "VernacExtend",
            "fc2a81b7983459cc46a334a80cccdaae444668a3"
        ],
        [
            "apply sound_cons_gamma_tail with (vimp l (Imp (Imp a Falsum) c)); assumption.",
            "VernacExtend",
            "1eeef82c4c06c0fc1d7ee5dccef556bf3cbbf45b"
        ],
        [
            "unfold minimal in |- *.",
            "VernacExtend",
            "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
        ],
        [
            "intros x k k_is_mon k_forces_gamma in_x.",
            "VernacExtend",
            "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
        ],
        [
            "inversion_clear in_x.",
            "VernacExtend",
            "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
        ],
        [
            "rewrite <- H; clear H x.",
            "VernacExtend",
            "54b1a174beda6adb1f281f9116cee479d107aa66"
        ],
        [
            "apply k_forces_gamma.",
            "VernacExtend",
            "3df971a27c83101f540da90e890694ecec8563c1"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "apply minimal0; try assumption; clear H.",
            "VernacExtend",
            "efc030cb67752c3fd79d0e6c5bd65c53c7a0e2fb"
        ],
        [
            "apply forces_gamma_cons_gamma_weak with (vimp l (Imp (Imp a (Atom j)) c)); try assumption.",
            "VernacExtend",
            "e1b781f215de564c4d362fb93baedd4f7624270f"
        ],
        [
            "intros forces1.",
            "VernacExtend",
            "e722809d6284ca19a41ed9728ad599112cf506ce"
        ],
        [
            "apply forces_vimp with (Imp (Imp a (Atom j)) c); try assumption.",
            "VernacExtend",
            "860124c69d31d53b7a7f2745a10ec79b35691c8b"
        ],
        [
            "intros k' suc1 forces2.",
            "VernacExtend",
            "cbed7bacaedbc8605c17b6f7ad164c6ae76a1f97"
        ],
        [
            "apply forces_a_imp_b_imp_c__forces_a_imp_falsum_imp_c_t2 with (Atom j); assumption.",
            "VernacExtend",
            "1a9157c90927ed5930a510dc587b4158d5f8fb13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_atom_imp_atom_imp_c_gamma : forall (goal : form) (l : list Int) (a b : Int) (c : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (Imp (Atom j) c :: gamma) (nvimp l (NImp_NF (NImp a b (NAtom j))) :: work) (vimp l (Imp (Imp (Atom a) (Atom b)) (Atom j)) :: Imp (Atom j) c :: context) j1 -> search_spec goal (vimp l (Imp (Imp (Atom a) (Atom b)) c) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "5ee50586050aed9734608ad1953297bbbc2ac2e2"
        ],
        [
            "intros goal l a b c gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
        ],
        [
            "apply rule_vimp_imp_gamma with j1; try assumption.",
            "VernacExtend",
            "b6f5bbdb08b671d805a7550b8cd8c03f681dafa7"
        ],
        [
            "apply rule_shift_gamma_work with (a := NImp_NF (NImp a b (NAtom j))); assumption.",
            "VernacExtend",
            "341cb7e8ff342164ff70ede6a2029a6a8189759e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_atom_imp_b_imp_c_gamma : forall (goal : form) (l : list Int) (a : Int) (b c : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (Imp (Imp (Atom a) (Atom j)) c) :: vimp (a :: l) (Imp b (Atom j)) :: gamma) work (vimp l (Imp (Imp (Atom a) (Atom j)) c) :: vimp (a :: l) (Imp b (Atom j)) :: context) j1 -> search_spec goal (vimp l (Imp (Imp (Atom a) b) c) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "7fb8d610b8c14f1eb4d88352a0cba7215ed65800"
        ],
        [
            "intros goal l a b c gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
        ],
        [
            "unfold search_spec in |- *.",
            "VernacExtend",
            "e8d046764817a1e6654471c87f1df0673c0f8738"
        ],
        [
            "intros below_goal below_gamma below_context sound0 minimal0.",
            "VernacExtend",
            "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
        ],
        [
            "generalize (below_cons_list_head (vimp l (Imp (Imp (Atom a) b) c)) gamma j below_gamma).",
            "VernacExtend",
            "2a22aa39fc54ce1ebf2e14d82ab75501d7817c18"
        ],
        [
            "generalize (below_cons_list_tail (vimp l (Imp (Imp (Atom a) b) c)) gamma j below_gamma); clear below_gamma.",
            "VernacExtend",
            "894c9064b557a112493336aac65ded30bb7cb22e"
        ],
        [
            "intros below_gamma below_x.",
            "VernacExtend",
            "7cfa4ce8cc5fed11e20f4de0ec6043d290003d4d"
        ],
        [
            "generalize (below_vimp_head j l (Imp (Imp (Atom a) b) c) below_x).",
            "VernacExtend",
            "12e68e34b2077c41b4d24d707b5ad3ad1aba23bd"
        ],
        [
            "generalize (below_vimp_tail j l (Imp (Imp (Atom a) b) c) below_x); clear below_x.",
            "VernacExtend",
            "7cf3e4e2801b82d97691334c63ae2740b3b37f4a"
        ],
        [
            "intros below_l below_x.",
            "VernacExtend",
            "49476db23ba3ee4d0ced5717bc047b1532ae8919"
        ],
        [
            "elim below_x; clear below_x; intros below_x below_c.",
            "VernacExtend",
            "7b09d0791f876f1063c57f3d69e8bb5a716f7f25"
        ],
        [
            "elim below_x; clear below_x; intros below_a below_b.",
            "VernacExtend",
            "daaa38bae313366880fdf52a29eff85d19680359"
        ],
        [
            "elim spec0; clear spec0; try assumption.",
            "VernacExtend",
            "bf3978f518aaa8e47ff09da86295194e9280c636"
        ],
        [
            "clear minimal0.",
            "VernacExtend",
            "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
        ],
        [
            "intros derivable_i.",
            "VernacExtend",
            "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
        ],
        [
            "apply derivable.",
            "VernacExtend",
            "0c551b944a991955216deb61591e3bb1ca482dbf"
        ],
        [
            "apply derivable_cut with (subst_form j b (vimp l (Imp (Atom a) (Imp b (Atom j))))).",
            "VernacExtend",
            "789d8b83da40de303b2b8d2d81e6ca731afd07d6"
        ],
        [
            "rewrite (subst_vimp_head j b l (Imp (Atom a) (Imp b (Atom j)))); try assumption.",
            "VernacExtend",
            "fde4fb6df7b410c8716126e8a959510b6d437127"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j b b); try assumption.",
            "VernacExtend",
            "079f34d3258cf330be48b1ebd76572ac36f24583"
        ],
        [
            "rewrite (equal_dec_refl j form b (Atom j)).",
            "VernacExtend",
            "7dfce149bd439ba2378bf46a33e9c0280679998b"
        ],
        [
            "change (Derivable fnil (vimp l (Imp (subst_form j b (Atom a)) (Imp b b)))) in |- *.",
            "VernacExtend",
            "520a1c9bbb17aa0b52ea0f26bc1180fd08ce617e"
        ],
        [
            "rewrite (subst_form_below j b (Atom a)); try assumption.",
            "VernacExtend",
            "3bee53ff7be65c908e4e72d8fa3d2d60b5606490"
        ],
        [
            "change (Derivable fnil (vimp (a :: l) (Imp b b))) in |- *.",
            "VernacExtend",
            "941bc6c58ad49d1d4e0c2fde2ea6cb809150b7b7"
        ],
        [
            "apply derivable_vimp0.",
            "VernacExtend",
            "18c97b9e0d6a2d3eac359d1b7e8d9eb0fe15b672"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Derivable_Intro with (Abs b (Var 0)).",
            "VernacExtend",
            "2c1eb16f18a02ce37419eb0178fad305f3e50403"
        ],
        [
            "apply ImpIntro.",
            "VernacExtend",
            "76cadfe776bad195ef203476b6283b0845f11fcb"
        ],
        [
            "apply ByAssumption.",
            "VernacExtend",
            "d60fa1166b1a7c127ebccc43a95f34ad5d5e3538"
        ],
        [
            "apply My_NthO.",
            "VernacExtend",
            "75ed1333b25f8cc4ea876f4e62b3416f23c7b90a"
        ],
        [
            "apply derivable_cut_merge with (subst_form j b (vimp l (Imp (Imp (Atom a) (Atom j)) c))).",
            "VernacExtend",
            "be1821b1c7fd2cdff1ad0418cc2250fa0112c382"
        ],
        [
            "apply derivable_weak.",
            "VernacExtend",
            "34a7d0d837ef5fce171b8fa14b0a8191f5501ead"
        ],
        [
            "rewrite (subst_vimp_head j b l (Imp (Imp (Atom a) (Atom j)) c)); try assumption.",
            "VernacExtend",
            "aba4fac32e628b8cf4e41ba1ab98af5853f83eb2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j b c); try assumption.",
            "VernacExtend",
            "7ad2f30fdf3d213fb7d684b3d8adad5461e7018b"
        ],
        [
            "rewrite (equal_dec_refl j form b (Atom j)).",
            "VernacExtend",
            "7dfce149bd439ba2378bf46a33e9c0280679998b"
        ],
        [
            "change (Derivable context (vimp l (Imp (Imp (subst_form j b (Atom a)) b) c))) in |- *.",
            "VernacExtend",
            "bfffc4d43b73f757baceeeaf22898f2c065347b5"
        ],
        [
            "rewrite (subst_form_below j b (Atom a)); try assumption.",
            "VernacExtend",
            "3bee53ff7be65c908e4e72d8fa3d2d60b5606490"
        ],
        [
            "apply sound0.",
            "VernacExtend",
            "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "rewrite <- (subst_form_below j b goal); try assumption.",
            "VernacExtend",
            "5651adf8bb7fbc09a7aa3c2e73c28ef98ea80209"
        ],
        [
            "rewrite <- (subst_list_below j b context); try assumption.",
            "VernacExtend",
            "7267319fa774f776baffc36cba3ce9f7c36ed24c"
        ],
        [
            "change (Derivable (subst_list j b (vimp l (Imp (Imp (Atom a) (Atom j)) c) :: vimp l (Imp (Atom a) (Imp b (Atom j))) :: context)) (subst_form j b goal)) in |- *.",
            "VernacExtend",
            "e723bcf1d7dcfa8fca6160ef095ce1f766265d2c"
        ],
        [
            "apply derivable_subst; assumption.",
            "VernacExtend",
            "c20303980b82fea8387f8c9c2fdc0872745b9201"
        ],
        [
            "clear minimal0 sound0 below_context below_gamma below_goal.",
            "VernacExtend",
            "34068a90159f4be8b974c08e9f1b6ac4395ebde3"
        ],
        [
            "intros k k_is_mon k_forces_gamma k_notforces_goal.",
            "VernacExtend",
            "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
        ],
        [
            "apply refutable with k; try assumption.",
            "VernacExtend",
            "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp (Imp (Atom a) (Atom j)) c)) (vimp (a :: l) (Imp b (Atom j))); try assumption.",
            "VernacExtend",
            "113f13cbf957e8e58cfba88b9dde4d8f4a4b319d"
        ],
        [
            "intros forces1 forces2.",
            "VernacExtend",
            "e9cfdbd463268538fea07713681735641320cc20"
        ],
        [
            "apply forces_vimp2 with (Imp (Imp (Atom a) (Atom j)) c) (Imp (Atom a) (Imp b (Atom j))); try assumption.",
            "VernacExtend",
            "c8eeec181da7f4b5f12456476372f187c212606b"
        ],
        [
            "intros k' suc1 forces_ajc forces_abj.",
            "VernacExtend",
            "634426aaefef006b92a0f17a17e492969de38445"
        ],
        [
            "unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
        ],
        [
            "intros k'' suc2 suc3.",
            "VernacExtend",
            "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
        ],
        [
            "change (forces_t2 k k'' (Imp (Atom a) b) -> forces_t2 k k'' c) in |- *.",
            "VernacExtend",
            "cc5dc28eee89a419d549396a451182f3dcb9effd"
        ],
        [
            "intros forces_ab.",
            "VernacExtend",
            "a6c311affb74860420867914b9cd809823301a7e"
        ],
        [
            "apply (forces_ajc k''); try assumption.",
            "VernacExtend",
            "f988f23b5f7d372a7133f4dd6cbc83aae236bc52"
        ],
        [
            "intros k''' suc4 suc5.",
            "VernacExtend",
            "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
        ],
        [
            "change (forces_t2 k k''' (Atom a) -> forces_t2 k k''' (Atom j)) in |- *.",
            "VernacExtend",
            "13bab5f1fb917a26c91aabf172deabdd53759cff"
        ],
        [
            "intros forces_a.",
            "VernacExtend",
            "33cc687c25afd7c1f588674c49bc3711da57aa6c"
        ],
        [
            "generalize (forces_abj k''' suc4).",
            "VernacExtend",
            "ae3bed41f51b0c8e5257839c39ec462492e6d56a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold forces in |- *.",
            "VernacExtend",
            "d4ffa91d600a677c8890c7de9dd7d05e5c42e224"
        ],
        [
            "clear forces_abj; intros forces_abj.",
            "VernacExtend",
            "14f248dfd1463826d71ed90152d318d2f03e7d4a"
        ],
        [
            "unfold forces_t2 in |- *.",
            "VernacExtend",
            "6593350d7f9352d06123ea1f5d47c529eb830573"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply forces_abj; try assumption.",
            "VernacExtend",
            "aa3ab6d81c6865184c4352edeb3086d389874ec5"
        ],
        [
            "unfold Suc in |- *; apply succs_trans with k''; try assumption.",
            "VernacExtend",
            "9c43740f4b6cd310b3f06e9a916d05d495bd8713"
        ],
        [
            "unfold Suc in |- *; apply successor_refl.",
            "VernacExtend",
            "8aa941fcac10ab8c9b4a87d5d9ca992f77ccbecc"
        ],
        [
            "apply forces_ab; try assumption.",
            "VernacExtend",
            "652ed08898e6e49408bdbdd1dc1893fad376318e"
        ],
        [
            "clear minimal0 sound0.",
            "VernacExtend",
            "742df674494d7606c849e6ae23f5c87848254699"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0; apply less_trans with j.",
            "VernacExtend",
            "1ebf3fdadd4064af5e8b936e710fe3cc0096b2e0"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0; apply less_trans with j; try assumption.",
            "VernacExtend",
            "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0; apply less_trans with j; try assumption.",
            "VernacExtend",
            "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_cons_list.",
            "VernacExtend",
            "f8863bff408f592649e820edd515fbbe01255b1c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0; apply less_trans with j; try assumption.",
            "VernacExtend",
            "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_list_less_below_list with j; assumption.",
            "VernacExtend",
            "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
        ],
        [
            "clear minimal0 below_context below_gamma below_goal.",
            "VernacExtend",
            "f3b866c56ff89cffc8eb01f7fe39c9eaefccca83"
        ],
        [
            "apply sound_cons_gamma_cons_context.",
            "VernacExtend",
            "fc2a81b7983459cc46a334a80cccdaae444668a3"
        ],
        [
            "apply sound_cons_gamma_cons_context.",
            "VernacExtend",
            "fc2a81b7983459cc46a334a80cccdaae444668a3"
        ],
        [
            "apply sound_cons_gamma_tail with (vimp l (Imp (Imp (Atom a) b) c)); assumption.",
            "VernacExtend",
            "417c5c8bebaa1508502a42dd631e1a38402117c5"
        ],
        [
            "clear sound0 below_context below_gamma below_goal below_b below_a.",
            "VernacExtend",
            "c1e57c4f5e8a45714fafc23cb5fa3f6fc6eef2fc"
        ],
        [
            "unfold minimal in |- *.",
            "VernacExtend",
            "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
        ],
        [
            "intros x k k_is_mon k_forces_gamma in_x.",
            "VernacExtend",
            "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
        ],
        [
            "inversion_clear in_x.",
            "VernacExtend",
            "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
        ],
        [
            "rewrite <- H; clear H x.",
            "VernacExtend",
            "54b1a174beda6adb1f281f9116cee479d107aa66"
        ],
        [
            "apply k_forces_gamma.",
            "VernacExtend",
            "3df971a27c83101f540da90e890694ecec8563c1"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rewrite <- H0; clear H0 x.",
            "VernacExtend",
            "3ec9239a18cf814dbb19a62674e3884ae96565a0"
        ],
        [
            "apply k_forces_gamma.",
            "VernacExtend",
            "3df971a27c83101f540da90e890694ecec8563c1"
        ],
        [
            "apply in_gamma_cons_gamma_tail.",
            "VernacExtend",
            "dc7f2292fdc59a041893ae6a198b47b5df0359a4"
        ],
        [
            "apply in_gamma_cons_gamma_head.",
            "VernacExtend",
            "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
        ],
        [
            "apply minimal0; try assumption.",
            "VernacExtend",
            "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
        ],
        [
            "clear H0 x.",
            "VernacExtend",
            "5d2b3256b3cc412cca3ab781938aa42dfc6a8ed9"
        ],
        [
            "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp (Imp (Atom a) (Atom j)) c)) (vimp (a :: l) (Imp b (Atom j))); try assumption.",
            "VernacExtend",
            "113f13cbf957e8e58cfba88b9dde4d8f4a4b319d"
        ],
        [
            "intros forces1 forces2.",
            "VernacExtend",
            "e9cfdbd463268538fea07713681735641320cc20"
        ],
        [
            "apply forces_vimp2 with (Imp (Imp (Atom a) (Atom j)) c) (Imp (Atom a) (Imp b (Atom j))); try assumption.",
            "VernacExtend",
            "c8eeec181da7f4b5f12456476372f187c212606b"
        ],
        [
            "intros k' suc1 forces_ajc forces_abj.",
            "VernacExtend",
            "634426aaefef006b92a0f17a17e492969de38445"
        ],
        [
            "unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
        ],
        [
            "intros k'' suc2 suc3.",
            "VernacExtend",
            "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
        ],
        [
            "change (forces_t2 k k'' (Imp (Atom a) b) -> forces_t2 k k'' c) in |- *.",
            "VernacExtend",
            "cc5dc28eee89a419d549396a451182f3dcb9effd"
        ],
        [
            "intros forces_ab.",
            "VernacExtend",
            "a6c311affb74860420867914b9cd809823301a7e"
        ],
        [
            "apply (forces_ajc k''); try assumption.",
            "VernacExtend",
            "f988f23b5f7d372a7133f4dd6cbc83aae236bc52"
        ],
        [
            "intros k''' suc4 suc5.",
            "VernacExtend",
            "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
        ],
        [
            "change (forces_t2 k k''' (Atom a) -> forces_t2 k k''' (Atom j)) in |- *.",
            "VernacExtend",
            "13bab5f1fb917a26c91aabf172deabdd53759cff"
        ],
        [
            "intros forces_a.",
            "VernacExtend",
            "33cc687c25afd7c1f588674c49bc3711da57aa6c"
        ],
        [
            "generalize (forces_abj k''' suc4).",
            "VernacExtend",
            "ae3bed41f51b0c8e5257839c39ec462492e6d56a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold forces in |- *.",
            "VernacExtend",
            "d4ffa91d600a677c8890c7de9dd7d05e5c42e224"
        ],
        [
            "clear forces_abj; intros forces_abj.",
            "VernacExtend",
            "14f248dfd1463826d71ed90152d318d2f03e7d4a"
        ],
        [
            "unfold forces_t2 in |- *.",
            "VernacExtend",
            "6593350d7f9352d06123ea1f5d47c529eb830573"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply forces_abj; try assumption.",
            "VernacExtend",
            "aa3ab6d81c6865184c4352edeb3086d389874ec5"
        ],
        [
            "unfold Suc in |- *; apply succs_trans with k''; try assumption.",
            "VernacExtend",
            "9c43740f4b6cd310b3f06e9a916d05d495bd8713"
        ],
        [
            "unfold Suc in |- *; apply successor_refl.",
            "VernacExtend",
            "8aa941fcac10ab8c9b4a87d5d9ca992f77ccbecc"
        ],
        [
            "apply forces_ab; try assumption.",
            "VernacExtend",
            "652ed08898e6e49408bdbdd1dc1893fad376318e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rule_a_imp_b_imp_c_gamma : forall (goal : form) (l : list Int) (a b c : form) (gamma : flist) (work : nf_list) (context : flist) (j j1 : Int), Less j j1 -> search_spec goal (vimp l (Imp (Imp (Atom j) b) c) :: Imp (Atom j) a :: gamma) work (vimp l (Imp (Imp (Atom j) b) c) :: Imp (Atom j) a :: context) j1 -> search_spec goal (vimp l (Imp (Imp a b) c) :: gamma) work context j.",
            "VernacStartTheoremProof",
            "2295b6543d68777ead2ada92b7d7bcba958f7cba"
        ],
        [
            "intros goal l a b c gamma work context j j1 less1 spec0.",
            "VernacExtend",
            "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
        ],
        [
            "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (Imp (Imp (Atom j) b) c)); try assumption; clear spec0.",
            "VernacExtend",
            "2dad4c6d3fcd25f0796d1a458894e2296a26adb9"
        ],
        [
            "intros below_x.",
            "VernacExtend",
            "442b41238c96b0439bfd1efc5fb01b03a246ee47"
        ],
        [
            "generalize (below_vimp_tail j l (Imp (Imp a b) c) below_x).",
            "VernacExtend",
            "8d280abb304974f1b790da1a6affca34247ff7f0"
        ],
        [
            "generalize (below_vimp_head j l (Imp (Imp a b) c) below_x); clear below_x.",
            "VernacExtend",
            "f270f91be1f5eca72e56d9cb3a0d8576ec057512"
        ],
        [
            "intros below_x below_l.",
            "VernacExtend",
            "7b5bc59f28da310336ffe2b7b262157b8c0b4a8c"
        ],
        [
            "elim below_x; clear below_x; intros below_ab below_c.",
            "VernacExtend",
            "34a93f652b88f454f57fb94ba863f18292b06aac"
        ],
        [
            "elim below_ab; clear below_ab; intros below_a below_b.",
            "VernacExtend",
            "fded89458fea913504728573344c89a2b1670700"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply below_vimp_split.",
            "VernacExtend",
            "64c5132e78aef22a37acd9bae1f53ffd7684e025"
        ],
        [
            "intros i0 in0; apply less_trans with j; try assumption.",
            "VernacExtend",
            "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
        ],
        [
            "apply below_l; assumption.",
            "VernacExtend",
            "eb1a97430edd200ed851280d721a71e5e51ff6f4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "apply below_form_less_below_form with j; assumption.",
            "VernacExtend",
            "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
        ],
        [
            "rewrite (subst_vimp_head j a l (Imp (Imp (Atom j) b) c)); try assumption.",
            "VernacExtend",
            "b66ae8745e40e1084716197d87989600749f170c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subst_form_below j a b); try assumption.",
            "VernacExtend",
            "045be8076ecc62cd6d00cf3f0e91f76b5d3d00e3"
        ],
        [
            "rewrite (subst_form_below j a c); try assumption.",
            "VernacExtend",
            "b6f21ff017b89876137d7dac21ae6a9511336bde"
        ],
        [
            "rewrite (equal_dec_refl j form a (Atom j)).",
            "VernacExtend",
            "8f26e8c67a32656bfe41a58009935d0be0b5d323"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros k k_is_mon forces1 forces2.",
            "VernacExtend",
            "7671ce6573180143d23fd0139557a14d65d042b1"
        ],
        [
            "apply forces_vimp with (Imp (Imp (Atom j) b) c); try assumption.",
            "VernacExtend",
            "5be1e074cbf5a578764673173a180ed8000891b1"
        ],
        [
            "intros k' suc1 forces_jbc.",
            "VernacExtend",
            "2e7d30064d11511fe44bd75250dae5cd116a40e0"
        ],
        [
            "unfold forces_t2 in |- *; simpl in |- *.",
            "VernacExtend",
            "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
        ],
        [
            "intros k'' suc2 suc3.",
            "VernacExtend",
            "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
        ],
        [
            "change (forces_t2 k k'' (Imp a b) -> forces_t2 k k'' c) in |- *.",
            "VernacExtend",
            "6a4e5776bd3ae0a14f78443cf60cc72a2b2a84f1"
        ],
        [
            "intros forces_ab.",
            "VernacExtend",
            "a6c311affb74860420867914b9cd809823301a7e"
        ],
        [
            "apply (forces_jbc k''); try assumption.",
            "VernacExtend",
            "55392722576a9530986695173c57ea5575fde98f"
        ],
        [
            "intros k''' suc4 suc5.",
            "VernacExtend",
            "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
        ],
        [
            "change (forces_t2 k k''' (Atom j) -> forces_t2 k k''' b) in |- *.",
            "VernacExtend",
            "3a20e3668d75571690c2e1ac2ff06aaad28431b7"
        ],
        [
            "intros forces_j.",
            "VernacExtend",
            "fa69c925a9bd94c976851cf643bb703476e1ea1f"
        ],
        [
            "apply (forces_ab k'''); try assumption.",
            "VernacExtend",
            "ee44abe1fb3c29adaa2e547baa4ef2a75525d3cb"
        ],
        [
            "change (forces_t2 k k''' a) in |- *.",
            "VernacExtend",
            "b6a723234c295ca939c0658f5fa0f74b9ffc0e4f"
        ],
        [
            "apply (forces2 k'''); assumption.",
            "VernacExtend",
            "f1ed6686172c12f1138518d380ddc7a7c095b508"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "rule_shift_gamma_work",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros goal l a gamma work context j spec0.",
                        "VernacExtend",
                        "ba76b8fc66fdb987e806c576e0d6864a84449db1"
                    ]
                },
                {
                    "command": [
                        "rewrite (vimp_eq_nvimp l a).",
                        "VernacExtend",
                        "8d577f7650b3bb0e3f8ef69498b76e6a23e46cba"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_shift_work_gamma; assumption.",
                        "VernacExtend",
                        "d5869ec860210f064e7b94132a511432504d55bc"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list_tail with (nf2form (nvimp l a)); assumption.",
                        "VernacExtend",
                        "78b9c9f85d0a84653b628a2f87599bdfbd38e243"
                    ]
                },
                {
                    "command": [
                        "apply sound_shift_gamma_work; assumption.",
                        "VernacExtend",
                        "3bda70fd186247708509d88a6e90cf21fcb398c1"
                    ]
                },
                {
                    "command": [
                        "apply minimal_shift_gamma_work; assumption.",
                        "VernacExtend",
                        "19c405a5a00a9de1904d82d419eb77e62f376bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "search_spec_subst_gamma_pos",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros goal gamma work context j j1 a b c less1 below_x forces0 spec0.",
                        "VernacExtend",
                        "49ff7b0b44e870fe7da061753b98603818b6d392"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_head c gamma j below_gamma).",
                        "VernacExtend",
                        "1659da8a6eebdd45f4b71d33df7a67d201c5be39"
                    ]
                },
                {
                    "command": [
                        "intros below_c.",
                        "VernacExtend",
                        "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_x below_c); clear below_x; intros below_x.",
                        "VernacExtend",
                        "74eb84e050c536b091b55433313b7f96268a5661"
                    ]
                },
                {
                    "command": [
                        "elim below_x; clear below_x; intros below_a below_x.",
                        "VernacExtend",
                        "4a8bfb67d3ebb6c7194bd8c7345d68d9a3bcfa56"
                    ]
                },
                {
                    "command": [
                        "elim below_x; clear below_x; intros below_b eq_c.",
                        "VernacExtend",
                        "5ba60c737f65408e889f876afc8c00e4094c91bf"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_tail c gamma j below_gamma); clear below_gamma; intros below_gamma.",
                        "VernacExtend",
                        "d1b8ca25af6ecbecebb097bb907696635547c1d2"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 forces0.",
                        "VernacExtend",
                        "f3c4583a2f6333e8fd4cf21c82535aac91217fc5"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i.",
                        "VernacExtend",
                        "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut with (subst_form j a (Imp (Atom j) a)).",
                        "VernacExtend",
                        "b4c7b61f301498798305ee7f6d951a9e93dfa26c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a a); try assumption.",
                        "VernacExtend",
                        "9fa7e809ca3496a243eabd4f5592d0dceb2a7cba"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "apply derivable_a_imp_a.",
                        "VernacExtend",
                        "ed56dce36877f302eb84c6e07a282e95be7c5cdb"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut_merge with c.",
                        "VernacExtend",
                        "294f988d7629bc7b3197757710c3f0feaa405103"
                    ]
                },
                {
                    "command": [
                        "apply derivable_weak.",
                        "VernacExtend",
                        "34a7d0d837ef5fce171b8fa14b0a8191f5501ead"
                    ]
                },
                {
                    "command": [
                        "apply sound0.",
                        "VernacExtend",
                        "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eq_c.",
                        "VernacExtend",
                        "f42bde3da8d6803c9d4f5398bf88c620dd2b7f94"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subst_form_below j a goal); try assumption.",
                        "VernacExtend",
                        "f86ca3cb234be3d5b831e3ef12bc34b4d624f9f0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subst_list_below j a context); try assumption.",
                        "VernacExtend",
                        "83c2c7f418299f390804bc1300f117c7f0169253"
                    ]
                },
                {
                    "command": [
                        "change (Derivable (subst_list j a (b :: Imp (Atom j) a :: context)) (subst_form j a goal)) in |- *.",
                        "VernacExtend",
                        "51c3602f772c5b6be0c6d82079c4af22680745c0"
                    ]
                },
                {
                    "command": [
                        "apply derivable_subst; assumption.",
                        "VernacExtend",
                        "c20303980b82fea8387f8c9c2fdc0872745b9201"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0 below_context below_gamma below_goal.",
                        "VernacExtend",
                        "34068a90159f4be8b974c08e9f1b6ac4395ebde3"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with b (Imp (Atom j) a); try assumption.",
                        "VernacExtend",
                        "ec28df5186686b9bec5f7f7515a90bfa94b1079c"
                    ]
                },
                {
                    "command": [
                        "intros forces1 forces2.",
                        "VernacExtend",
                        "e9cfdbd463268538fea07713681735641320cc20"
                    ]
                },
                {
                    "command": [
                        "apply forces0; assumption.",
                        "VernacExtend",
                        "273eadcd1879c85fbd1b792d08cbd1e6c6c1f043"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0 forces0.",
                        "VernacExtend",
                        "5c30cbc7ddccd943f57137178cee884afb6252eb"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 below_context below_gamma below_goal forces0.",
                        "VernacExtend",
                        "7476b995d58d82f4a0a67323838425a87936b2ef"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context.",
                        "VernacExtend",
                        "fc2a81b7983459cc46a334a80cccdaae444668a3"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context.",
                        "VernacExtend",
                        "fc2a81b7983459cc46a334a80cccdaae444668a3"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_tail with c; assumption.",
                        "VernacExtend",
                        "3cc1fad55c85fb1b39c77a33f5c859f5e4f2c3b9"
                    ]
                },
                {
                    "command": [
                        "clear sound0 below_context below_gamma below_goal below_b below_a.",
                        "VernacExtend",
                        "c1e57c4f5e8a45714fafc23cb5fa3f6fc6eef2fc"
                    ]
                },
                {
                    "command": [
                        "unfold minimal in |- *.",
                        "VernacExtend",
                        "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
                    ]
                },
                {
                    "command": [
                        "intros x k k_is_mon k_forces_gamma in_x.",
                        "VernacExtend",
                        "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_x.",
                        "VernacExtend",
                        "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; clear H x.",
                        "VernacExtend",
                        "54b1a174beda6adb1f281f9116cee479d107aa66"
                    ]
                },
                {
                    "command": [
                        "apply k_forces_gamma.",
                        "VernacExtend",
                        "3df971a27c83101f540da90e890694ecec8563c1"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; clear H0 x.",
                        "VernacExtend",
                        "3ec9239a18cf814dbb19a62674e3884ae96565a0"
                    ]
                },
                {
                    "command": [
                        "apply k_forces_gamma.",
                        "VernacExtend",
                        "3df971a27c83101f540da90e890694ecec8563c1"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_tail.",
                        "VernacExtend",
                        "dc7f2292fdc59a041893ae6a198b47b5df0359a4"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "apply minimal0; try assumption.",
                        "VernacExtend",
                        "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
                    ]
                },
                {
                    "command": [
                        "clear H0 x.",
                        "VernacExtend",
                        "5d2b3256b3cc412cca3ab781938aa42dfc6a8ed9"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with b (Imp (Atom j) a); try assumption.",
                        "VernacExtend",
                        "ec28df5186686b9bec5f7f7515a90bfa94b1079c"
                    ]
                },
                {
                    "command": [
                        "intros forces1 forces2.",
                        "VernacExtend",
                        "e9cfdbd463268538fea07713681735641320cc20"
                    ]
                },
                {
                    "command": [
                        "apply forces0; assumption.",
                        "VernacExtend",
                        "273eadcd1879c85fbd1b792d08cbd1e6c6c1f043"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_a_gamma",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros goal l a gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "20ce24ce11fd1532697e16780c114f28ec8ee5c6"
                    ]
                },
                {
                    "command": [
                        "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (Atom j)); try assumption.",
                        "VernacExtend",
                        "9a8a92bc9ae37caba8d161b5c46124f495fb3a7e"
                    ]
                },
                {
                    "command": [
                        "intros below_c.",
                        "VernacExtend",
                        "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l a below_c).",
                        "VernacExtend",
                        "9c0b704e8797048918d3d6e5ef9d454357a39066"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l a below_c); clear below_c.",
                        "VernacExtend",
                        "ba9f1c605e37ff1b26f1d7cba4363be34a1a6197"
                    ]
                },
                {
                    "command": [
                        "intros below_a below_l.",
                        "VernacExtend",
                        "1cdcd48309a6b4897cc464978a6bbd4ade0f3ed7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split; try assumption.",
                        "VernacExtend",
                        "01760550687f0141d466fb992f5394a04509d048"
                    ]
                },
                {
                    "command": [
                        "intros i in0.",
                        "VernacExtend",
                        "5ceb94c74c8d92b9047261dcf620a27a6630f588"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j a l (Atom j)); try assumption.",
                        "VernacExtend",
                        "2f64046caa221e055f764f21db0329d786c501fb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Atom j); try assumption.",
                        "VernacExtend",
                        "83c3273e4d806eee273db5956bce6ea43523cb3a"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_j.",
                        "VernacExtend",
                        "2f1032f0fe49c75e14d6741796427a00cda4747c"
                    ]
                },
                {
                    "command": [
                        "apply (forces2 k'); assumption.",
                        "VernacExtend",
                        "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
                    ]
                },
                {
                    "command": [
                        "apply rule_shift_gamma_work with (a := NAtom j); assumption.",
                        "VernacExtend",
                        "f44fa45af0b7c26290ee219c0ea4929e9be06fb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_imp_gamma",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros goal l a b gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "ff5317376259cbdb4cabb6ea729a62b86697a68e"
                    ]
                },
                {
                    "command": [
                        "apply search_spec_subst_gamma_pos with (j1 := j1) (a := b) (b := vimp l (Imp a (Atom j))); try assumption; clear spec0.",
                        "VernacExtend",
                        "8838f678408a8e6464c5e9b081f52845c1fb0d35"
                    ]
                },
                {
                    "command": [
                        "intros below_c.",
                        "VernacExtend",
                        "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (Imp a b) below_c).",
                        "VernacExtend",
                        "17d25d29b7df0f7e509b44c67afbf7d6752a495b"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l (Imp a b) below_c); clear below_c.",
                        "VernacExtend",
                        "376f83eb26f46525524b920864c18803ee853d3d"
                    ]
                },
                {
                    "command": [
                        "intros below_ab below_l; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "95975dd6e5e4f5741a9a7152784b473af2bd8281"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split; try assumption.",
                        "VernacExtend",
                        "01760550687f0141d466fb992f5394a04509d048"
                    ]
                },
                {
                    "command": [
                        "intros i in0.",
                        "VernacExtend",
                        "5ceb94c74c8d92b9047261dcf620a27a6630f588"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j b l (Imp a (Atom j))); try assumption.",
                        "VernacExtend",
                        "d7414657a62f8bd4c55c07d861a087cc37b78dfe"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form b (Atom j)).",
                        "VernacExtend",
                        "7dfce149bd439ba2378bf46a33e9c0280679998b"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j b a); try assumption.",
                        "VernacExtend",
                        "8da5a05581e01be90a3958be2607f9bb48a3ca43"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp a (Atom j)); try assumption.",
                        "VernacExtend",
                        "d6e8b618d703870aabd0b8aa253a1949385aeffb"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_j.",
                        "VernacExtend",
                        "2f1032f0fe49c75e14d6741796427a00cda4747c"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
                    ]
                },
                {
                    "command": [
                        "intros k'' suc2 suc3 forces_a.",
                        "VernacExtend",
                        "cbbb13da9381d93d8d3648ca25c6d856ed0ed8d5"
                    ]
                },
                {
                    "command": [
                        "apply (forces2 k''); try assumption.",
                        "VernacExtend",
                        "b771f7afabdba682bcebffb97c54bac7ce3b6629"
                    ]
                },
                {
                    "command": [
                        "apply (forces_j k''); assumption.",
                        "VernacExtend",
                        "e3719a2f55b718c0e66f9f8e98374573ec298061"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_gamma_falsum",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros gamma work context i j less_ij spec0.",
                        "VernacExtend",
                        "68dcb0e8bb95d8f34fb4d1864b9c47c45de5944d"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i.",
                        "VernacExtend",
                        "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "apply snd_order_inst with i; assumption.",
                        "VernacExtend",
                        "08d76989f7ddeddd52f3593f430184604db421c8"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_i.",
                        "VernacExtend",
                        "7f21fbd7a3137d5ebc3e5beb5f531096776d6494"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with i; assumption.",
                        "VernacExtend",
                        "a10b8557b2aff15d46a8fe3f86047a001d57cf97"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with i; assumption.",
                        "VernacExtend",
                        "a10b8557b2aff15d46a8fe3f86047a001d57cf97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_gamma_a_imp_b",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "intros a b gamma work context j spec0.",
                        "VernacExtend",
                        "03769a3fa3f00463a32bfa9ead072379151ddbc0"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim below_goal; clear below_goal; intros below_a below_b.",
                        "VernacExtend",
                        "821665bc1a8283cd998c7ad4e6fadb9718c4c59f"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i.",
                        "VernacExtend",
                        "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "elim derivable_i; clear derivable_i; intros t der_t.",
                        "VernacExtend",
                        "5c11cb4d0532d971c16b7419cce52959fb0f588f"
                    ]
                },
                {
                    "command": [
                        "apply Derivable_Intro with (Abs a t).",
                        "VernacExtend",
                        "b64dd6c2f812dc9afe69969b1383e3a1593ef94f"
                    ]
                },
                {
                    "command": [
                        "apply ImpIntro; assumption.",
                        "VernacExtend",
                        "45e9f7e8755540fd9b0740b545878e66f946fa6f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_b.",
                        "VernacExtend",
                        "03c0d82b5a85a9731875b95e609202a2f7f541bc"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_tail with a; assumption.",
                        "VernacExtend",
                        "d7a1ecac07efa0d7e51a081a5a338e4994b066f8"
                    ]
                },
                {
                    "command": [
                        "intros forces_ab.",
                        "VernacExtend",
                        "a6c311affb74860420867914b9cd809823301a7e"
                    ]
                },
                {
                    "command": [
                        "apply k_notforces_b.",
                        "VernacExtend",
                        "8118428ed04e12eb4888126af6394c4c1183e150"
                    ]
                },
                {
                    "command": [
                        "apply forces_a_a_imp_b__forces_b_t with a; try assumption.",
                        "VernacExtend",
                        "1cc881b94142488f1428faaae8239964c1ceb057"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_head with gamma work; assumption.",
                        "VernacExtend",
                        "1c08a5d8d35f50df0dc971fda61271de3b70126f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list; assumption.",
                        "VernacExtend",
                        "ab4c8c257044b2de1c142488816eef3b98f9a674"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list; assumption.",
                        "VernacExtend",
                        "ab4c8c257044b2de1c142488816eef3b98f9a674"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context; assumption.",
                        "VernacExtend",
                        "616cb163e1ec47bb6f517e35cd83d1ef1fd16353"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_cons_context; assumption.",
                        "VernacExtend",
                        "d545c1dfbf2396df6eaf248314f00203d8a89f32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_gamma_a",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros a gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "f06f5679ffefd8b1d6c783abead410546883d5cd"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0.",
                        "VernacExtend",
                        "742df674494d7606c849e6ae23f5c87848254699"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut with (Imp a a).",
                        "VernacExtend",
                        "c7fb6ba2d050d7b2ce20b5d92f33e27cbc47d309"
                    ]
                },
                {
                    "command": [
                        "apply derivable_a_imp_a.",
                        "VernacExtend",
                        "ed56dce36877f302eb84c6e07a282e95be7c5cdb"
                    ]
                },
                {
                    "command": [
                        "apply derivable_eq with (subst_list j a (Imp a (Atom j) :: context)) (subst_form j a (Atom j)).",
                        "VernacExtend",
                        "18ae6483755c3e8f5d6459a53221a15d8cf3d973"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a a); try assumption.",
                        "VernacExtend",
                        "9fa7e809ca3496a243eabd4f5592d0dceb2a7cba"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_list_below j a context); try assumption.",
                        "VernacExtend",
                        "4f18186db17be7737edceadfae15d2c5dcd733c2"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply equal_dec_refl.",
                        "VernacExtend",
                        "5ae88b0186c71d205784d51601bd9c4c6d026960"
                    ]
                },
                {
                    "command": [
                        "apply derivable_subst; assumption.",
                        "VernacExtend",
                        "c20303980b82fea8387f8c9c2fdc0872745b9201"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0.",
                        "VernacExtend",
                        "742df674494d7606c849e6ae23f5c87848254699"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_j.",
                        "VernacExtend",
                        "55e2f01d3281411ec2960ee07a9d57e846e95471"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_tail with (Imp a (Atom j)); assumption.",
                        "VernacExtend",
                        "8ef0472acdf9cffc55d6c73e753232d27094a4f9"
                    ]
                },
                {
                    "command": [
                        "intros forces_a.",
                        "VernacExtend",
                        "33cc687c25afd7c1f588674c49bc3711da57aa6c"
                    ]
                },
                {
                    "command": [
                        "apply k_notforces_j.",
                        "VernacExtend",
                        "8c0cb23c42dfa2f2b7747724d3022d7e26461118"
                    ]
                },
                {
                    "command": [
                        "apply forces_a_a_imp_b__forces_b_t with a; try assumption.",
                        "VernacExtend",
                        "1cc881b94142488f1428faaae8239964c1ceb057"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_head with gamma work; assumption.",
                        "VernacExtend",
                        "1c08a5d8d35f50df0dc971fda61271de3b70126f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context; assumption.",
                        "VernacExtend",
                        "616cb163e1ec47bb6f517e35cd83d1ef1fd16353"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_cons_context; assumption.",
                        "VernacExtend",
                        "d545c1dfbf2396df6eaf248314f00203d8a89f32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_conj_gamma",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros goal l b0 b1 gamma work context j spec0.",
                        "VernacExtend",
                        "f19339c7c175677d1ed0ee2316399b002eee74a9"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with (vimp l b0) (vimp l b1); try assumption.",
                        "VernacExtend",
                        "b5797dba4086ca66183dcbdf67a9f7e8a3828a8f"
                    ]
                },
                {
                    "command": [
                        "intros forces_ab0 forces_ab1.",
                        "VernacExtend",
                        "69a8edeabdbe4e90ce61dd8db56ad80d16e76dee"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with b0 b1; try assumption.",
                        "VernacExtend",
                        "10b63b718e952f02d4a1d07f8199d5f6c1452f59"
                    ]
                },
                {
                    "command": [
                        "intros; split; assumption.",
                        "VernacExtend",
                        "49c46d9f1fd859107496d451098646c0e5d7842e"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak2 with (vimp l (AndF b0 b1)); try assumption.",
                        "VernacExtend",
                        "48286dc8e1041832703d2815600f772bb4fa93e0"
                    ]
                },
                {
                    "command": [
                        "intros below_ab0b1.",
                        "VernacExtend",
                        "d433e945be3baed510cbbafba958fb5b00140f61"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (AndF b0 b1); try assumption.",
                        "VernacExtend",
                        "da238b9cc81afb9ecd4a80c738379c479345b60b"
                    ]
                },
                {
                    "command": [
                        "intros j' below_b0b1; elim below_b0b1; clear below_b0b1; intros; assumption.",
                        "VernacExtend",
                        "81075fd616b19926d1cc193a66899fe212abd0e4"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (AndF b0 b1); try assumption.",
                        "VernacExtend",
                        "da238b9cc81afb9ecd4a80c738379c479345b60b"
                    ]
                },
                {
                    "command": [
                        "intros j' below_b0b1; elim below_b0b1; clear below_b0b1; intros; assumption.",
                        "VernacExtend",
                        "81075fd616b19926d1cc193a66899fe212abd0e4"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak2 with (vimp l (AndF b0 b1)); try assumption.",
                        "VernacExtend",
                        "8de2103e539a8ae5689d5910f78a911b42877114"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (AndF b0 b1); try assumption.",
                        "VernacExtend",
                        "703c72a31908ef0ccb3d38d28491f6ede2447aad"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply (derivable_a_and_b__derivable_a b0 b1 context'); assumption.",
                        "VernacExtend",
                        "fbcf3b7714f9e3d3167388c30b14a4fb0c36f30b"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (AndF b0 b1); try assumption.",
                        "VernacExtend",
                        "703c72a31908ef0ccb3d38d28491f6ede2447aad"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply (derivable_a_and_b__derivable_b b0 b1 context'); assumption.",
                        "VernacExtend",
                        "4adb8ca39f349485ee363c7cc4570f7de93ddcc3"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak2 with (vimp l (AndF b0 b1)); try assumption.",
                        "VernacExtend",
                        "fe35d063b073c9c7004331c30b8885c574ae5bac"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces_b0 forces_b1.",
                        "VernacExtend",
                        "6c1fa60a4008ff6a30c1d4209065530225bfa8d1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with b0 b1; try assumption.",
                        "VernacExtend",
                        "10b63b718e952f02d4a1d07f8199d5f6c1452f59"
                    ]
                },
                {
                    "command": [
                        "intros; split; assumption.",
                        "VernacExtend",
                        "49c46d9f1fd859107496d451098646c0e5d7842e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_conj_gamma_new",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros goal l b0 b1 gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "ad59b69b62b29d98fb1d2ccf606e42f458074858"
                    ]
                },
                {
                    "command": [
                        "apply rule_vimp_a_gamma with j1; try assumption.",
                        "VernacExtend",
                        "6cc4c806c539d70a36ca13e0b8968ceeeb9f5f0c"
                    ]
                },
                {
                    "command": [
                        "apply rule_vimp_conj_gamma; assumption.",
                        "VernacExtend",
                        "fec398b6ca529362875e5fb903884185f7531af1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_falsum_or_a_gamma",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros goal l a gamma work context j spec0.",
                        "VernacExtend",
                        "ba76b8fc66fdb987e806c576e0d6864a84449db1"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i; apply derivable; assumption.",
                        "VernacExtend",
                        "36702e27474774529c7835e9a5d19e96cc6d129d"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l a); try assumption.",
                        "VernacExtend",
                        "ec789f53b689faaaccf249a27447fb7501a387a4"
                    ]
                },
                {
                    "command": [
                        "intros forces_la.",
                        "VernacExtend",
                        "474bb2cd681dc817581a2f7c6c02393265857b90"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with a.",
                        "VernacExtend",
                        "97d170c0f304d9b8a32d0a4c0907787040149de4"
                    ]
                },
                {
                    "command": [
                        "intros; right; assumption.",
                        "VernacExtend",
                        "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak with (vimp l (OrF Falsum a)); try assumption.",
                        "VernacExtend",
                        "666f64c9013a9f67055c36557cbba1117c570a19"
                    ]
                },
                {
                    "command": [
                        "intros below_x.",
                        "VernacExtend",
                        "442b41238c96b0439bfd1efc5fb01b03a246ee47"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (OrF Falsum a); try assumption.",
                        "VernacExtend",
                        "209a0b4a33f2d98f1f07babe909aa7f6141f22e8"
                    ]
                },
                {
                    "command": [
                        "intros j0 below_or; elim below_or; intros; assumption.",
                        "VernacExtend",
                        "3b164e80352fd91b7982b37eb9a2b11bc3b42081"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak with (vimp l (OrF Falsum a)); try assumption.",
                        "VernacExtend",
                        "b61bd63170e1c05dde4ac1be6c46a618f21f5357"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (OrF Falsum a); try assumption.",
                        "VernacExtend",
                        "5678cd04332be79d0aec892aa97e15af0d993e16"
                    ]
                },
                {
                    "command": [
                        "intros context0 der0.",
                        "VernacExtend",
                        "9ba33c60bf32382d74b13b866d1c82160cd17bb9"
                    ]
                },
                {
                    "command": [
                        "apply derivable_falsum_or_a__derivable_a; assumption.",
                        "VernacExtend",
                        "225b6dadc8ea43f420bf02895f8fa755f41e86ee"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak with (vimp l (OrF Falsum a)); try assumption.",
                        "VernacExtend",
                        "03f24193a07256c0635df5d57459cdc8c32b107f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_la.",
                        "VernacExtend",
                        "c1990cd0262e8aed0baab0f8f7dc7a5fdd3449fc"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with a; try assumption.",
                        "VernacExtend",
                        "e319598ed37f0ae89f80f3479f71843faa3ddbc6"
                    ]
                },
                {
                    "command": [
                        "intros; right; assumption.",
                        "VernacExtend",
                        "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_a_or_falsum_gamma",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "intros goal l a gamma work context j spec0.",
                        "VernacExtend",
                        "ba76b8fc66fdb987e806c576e0d6864a84449db1"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i; apply derivable; assumption.",
                        "VernacExtend",
                        "36702e27474774529c7835e9a5d19e96cc6d129d"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l a); try assumption.",
                        "VernacExtend",
                        "ec789f53b689faaaccf249a27447fb7501a387a4"
                    ]
                },
                {
                    "command": [
                        "intros forces_la.",
                        "VernacExtend",
                        "474bb2cd681dc817581a2f7c6c02393265857b90"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with a.",
                        "VernacExtend",
                        "97d170c0f304d9b8a32d0a4c0907787040149de4"
                    ]
                },
                {
                    "command": [
                        "intros; left; assumption.",
                        "VernacExtend",
                        "5eaad269be30c76205577d46b9a9e30a5b5329c1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak with (vimp l (OrF a Falsum)); try assumption.",
                        "VernacExtend",
                        "df9abf47f6a624353c399640fa192d14a9435be8"
                    ]
                },
                {
                    "command": [
                        "intros below_x.",
                        "VernacExtend",
                        "442b41238c96b0439bfd1efc5fb01b03a246ee47"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (OrF a Falsum); try assumption.",
                        "VernacExtend",
                        "9ff6d25005a4509321c34864ce77bc84853ffc45"
                    ]
                },
                {
                    "command": [
                        "intros j0 below_or; elim below_or; intros; assumption.",
                        "VernacExtend",
                        "3b164e80352fd91b7982b37eb9a2b11bc3b42081"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak with (vimp l (OrF a Falsum)); try assumption.",
                        "VernacExtend",
                        "fd93a47dcb139259769f6b3194263f779d35c99a"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (OrF a Falsum); try assumption.",
                        "VernacExtend",
                        "45ae5317b0602b348fc70321806625dedf7ae079"
                    ]
                },
                {
                    "command": [
                        "intros context0 der0.",
                        "VernacExtend",
                        "9ba33c60bf32382d74b13b866d1c82160cd17bb9"
                    ]
                },
                {
                    "command": [
                        "apply derivable_a_or_falsum__derivable_a; assumption.",
                        "VernacExtend",
                        "d65937dea3daf3a8a8fdd153348291e12d08290c"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak with (vimp l (OrF a Falsum)); try assumption.",
                        "VernacExtend",
                        "6175de524aa3012bb6af355e973c25611383cef9"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_la.",
                        "VernacExtend",
                        "c1990cd0262e8aed0baab0f8f7dc7a5fdd3449fc"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with a; try assumption.",
                        "VernacExtend",
                        "e319598ed37f0ae89f80f3479f71843faa3ddbc6"
                    ]
                },
                {
                    "command": [
                        "intros; left; assumption.",
                        "VernacExtend",
                        "5eaad269be30c76205577d46b9a9e30a5b5329c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_atom_or_a_gamma",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros goal l i a gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "9b07644277b4ed3ce6155c34d5bcd2b139d85fdd"
                    ]
                },
                {
                    "command": [
                        "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (OrF (Atom i) (Atom j))); try assumption.",
                        "VernacExtend",
                        "2781da9f15989982ed33a32d786e7c05328045bb"
                    ]
                },
                {
                    "command": [
                        "intros below_c.",
                        "VernacExtend",
                        "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (OrF (Atom i) a) below_c).",
                        "VernacExtend",
                        "8848192f58b9ccbb30ae2d53db7d1c5afcdb6f42"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l (OrF (Atom i) a) below_c); clear below_c.",
                        "VernacExtend",
                        "5a6fed9005fa2e68944f67817685926bdd2ff49d"
                    ]
                },
                {
                    "command": [
                        "intros below_c below_l; elim below_c; clear below_c; intros below_i below_a.",
                        "VernacExtend",
                        "fa44a6abdf8e8040a043f358997bf97ff2ac9061"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0.",
                        "VernacExtend",
                        "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; try assumption.",
                        "VernacExtend",
                        "8992a45069f229b3a82ce9b597f31205d53a7cc4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j a l (OrF (Atom i) (Atom j))); try assumption.",
                        "VernacExtend",
                        "6505d32b0c806b1117ce6985739b2fe00fa85312"
                    ]
                },
                {
                    "command": [
                        "change (vimp l (OrF (subst_form j a (Atom i)) (subst_form j a (Atom j))) = vimp l (OrF (Atom i) a)) in |- *.",
                        "VernacExtend",
                        "881d49859572b94de96d5a8685e9be0c6fba9ceb"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a (Atom i)); try assumption.",
                        "VernacExtend",
                        "082e11f7ad20f4d8dd9a2e8c2195641f9125cf72"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (OrF (Atom i) (Atom j)).",
                        "VernacExtend",
                        "8f8df9a224b24a4cff507b84bf4ba53a0245cdf0"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_ij.",
                        "VernacExtend",
                        "e5bd7902d0ba1ec1ebc0d62819f62bf141934bc7"
                    ]
                },
                {
                    "command": [
                        "elim forces_ij; clear forces_ij.",
                        "VernacExtend",
                        "deb7575423de49b011b5ae8ae49b707480789c0c"
                    ]
                },
                {
                    "command": [
                        "intros; left; assumption.",
                        "VernacExtend",
                        "5eaad269be30c76205577d46b9a9e30a5b5329c1"
                    ]
                },
                {
                    "command": [
                        "intros; right.",
                        "VernacExtend",
                        "0c97a3d964169defe64399098f1fa99f7c30db48"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k' a) in |- *.",
                        "VernacExtend",
                        "3be34cd7bad853ed4349c60c65790f44ea11f3c9"
                    ]
                },
                {
                    "command": [
                        "apply (forces2 k'); assumption.",
                        "VernacExtend",
                        "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply rule_shift_gamma_work with (a := NDisj i j); assumption.",
                        "VernacExtend",
                        "2b34861b94351aa896bd5dd0aeb38af32e65b093"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_a_or_b_gamma",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros goal l a b gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "ff5317376259cbdb4cabb6ea729a62b86697a68e"
                    ]
                },
                {
                    "command": [
                        "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (OrF (Atom j) b)); try assumption; clear spec0.",
                        "VernacExtend",
                        "45ca3bef63c128dee6b4d79d9c9a4cad3ccaef13"
                    ]
                },
                {
                    "command": [
                        "intros below_c.",
                        "VernacExtend",
                        "42b2fd22b50795f7f5a734d5f69cee30dfd589f8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (OrF a b) below_c).",
                        "VernacExtend",
                        "34b512f2236ede9ef01fbadf83ec9c9a51cd5c87"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l (OrF a b) below_c); clear below_c.",
                        "VernacExtend",
                        "94983eb96b575efdfb18947169ad0e552e670a55"
                    ]
                },
                {
                    "command": [
                        "intros below_ab below_l; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "95975dd6e5e4f5741a9a7152784b473af2bd8281"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0.",
                        "VernacExtend",
                        "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; try assumption.",
                        "VernacExtend",
                        "8992a45069f229b3a82ce9b597f31205d53a7cc4"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j a l (OrF (Atom j) b)); try assumption.",
                        "VernacExtend",
                        "80f5942d6a98970d9a2104193595ef44b7adb4e2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a b); try assumption.",
                        "VernacExtend",
                        "045be8076ecc62cd6d00cf3f0e91f76b5d3d00e3"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (OrF (Atom j) b).",
                        "VernacExtend",
                        "184cddc25c7142506768256ba49915710ec78206"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_jb.",
                        "VernacExtend",
                        "d50b807dbbab172bcfb6446b2ed679ae28806811"
                    ]
                },
                {
                    "command": [
                        "elim forces_jb; clear forces_jb.",
                        "VernacExtend",
                        "b8c15a093348688481f96346e53209518721e563"
                    ]
                },
                {
                    "command": [
                        "intros; left.",
                        "VernacExtend",
                        "ac6a63bd865b5b85308e2efd94d504b97c83e2fb"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k' a) in |- *.",
                        "VernacExtend",
                        "3be34cd7bad853ed4349c60c65790f44ea11f3c9"
                    ]
                },
                {
                    "command": [
                        "apply (forces2 k'); assumption.",
                        "VernacExtend",
                        "aa8e45d3b27812fdaea8c54ccbc0e18189ecf833"
                    ]
                },
                {
                    "command": [
                        "intros; right; assumption.",
                        "VernacExtend",
                        "ee4ba72fe9d3cd0998ebdf0e5424f5fa7929bbd8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_falsum_imp_b_gamma",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "intros goal l b gamma work context j spec0.",
                        "VernacExtend",
                        "6a59a4f6485bbdc3ed3d4e804198b355717f4454"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma; try assumption.",
                        "VernacExtend",
                        "870dc4869f031688aac79314262b61c7927638be"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp0.",
                        "VernacExtend",
                        "1f48172ece7b8dc76928806be5c3053bdac830e9"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1.",
                        "VernacExtend",
                        "5d5e48d7503fb63038e8c0748929040601793294"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t in |- *; unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "dd4cc642b14055eb0b548d7248fdb7e08466a81c"
                    ]
                },
                {
                    "command": [
                        "intros; elimtype False; assumption.",
                        "VernacExtend",
                        "0c7895896fc37b89498ced9caac7eccf693b9ca2"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list_tail with (vimp l (Imp Falsum b)); assumption.",
                        "VernacExtend",
                        "56f298b0081c537494a2c730ceb30bd4983d3ce2"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_tail with (vimp l (Imp Falsum b)); assumption.",
                        "VernacExtend",
                        "7197db90bce66bf04394f95741ae93df3346b3b2"
                    ]
                },
                {
                    "command": [
                        "unfold minimal in |- *.",
                        "VernacExtend",
                        "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
                    ]
                },
                {
                    "command": [
                        "intros c k k_is_mon k_forces_gamma in_c.",
                        "VernacExtend",
                        "4399dd09924521590d6b7612b2d74afebe369e84"
                    ]
                },
                {
                    "command": [
                        "apply minimal0; try assumption.",
                        "VernacExtend",
                        "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma; try assumption.",
                        "VernacExtend",
                        "870dc4869f031688aac79314262b61c7927638be"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp0.",
                        "VernacExtend",
                        "1f48172ece7b8dc76928806be5c3053bdac830e9"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1.",
                        "VernacExtend",
                        "5d5e48d7503fb63038e8c0748929040601793294"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t in |- *; unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "dd4cc642b14055eb0b548d7248fdb7e08466a81c"
                    ]
                },
                {
                    "command": [
                        "intros; elimtype False; assumption.",
                        "VernacExtend",
                        "0c7895896fc37b89498ced9caac7eccf693b9ca2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_atom_imp_b_gamma",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "intros; assumption.",
                        "VernacExtend",
                        "5cc15d3651e27d2e3e1e2b44ec8880d58345a162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_and_imp_gamma",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "intros goal l a0 a1 b gamma work context j spec0.",
                        "VernacExtend",
                        "20b9e8e05d0d67a9fc37f67aff79cf65e241f5e6"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l (Imp a0 (Imp a1 b))); try assumption.",
                        "VernacExtend",
                        "b56745768b9b1dcef5d1684cbe25061d1bea5dff"
                    ]
                },
                {
                    "command": [
                        "intros forces_a0a1b.",
                        "VernacExtend",
                        "3426656f2b275070a7b7572d58e4c1bd3d682310"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp a0 (Imp a1 b)); try assumption.",
                        "VernacExtend",
                        "72d758650c5628574a7bf629cfbbc279b7f359b6"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces1.",
                        "VernacExtend",
                        "d29bd33bf8aef489f2ce0ee749a55d35273553ac"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_a0_imp_a1_imp_b__forces_a0_and_a1_imp_b; try assumption.",
                        "VernacExtend",
                        "860a13c677839c1d1e43dc8517aa90f89201c075"
                    ]
                },
                {
                    "command": [
                        "apply kripke_tree_kripke_model; assumption.",
                        "VernacExtend",
                        "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "2f3709815c74afa1cf66f32c43a65eef298e7c99"
                    ]
                },
                {
                    "command": [
                        "intros below_lab.",
                        "VernacExtend",
                        "99b5e7ba57769796075c98cee22fc0273a1c3dd9"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (Imp (AndF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "216c7a15f5545f66005eae4beb0231fc840ec1a1"
                    ]
                },
                {
                    "command": [
                        "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
                    ]
                },
                {
                    "command": [
                        "elim below_a; clear below_a; intros below_a0 below_a1.",
                        "VernacExtend",
                        "b2449891648ceae70ddc83c59feceaea1d4fd330"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "0d9b6b74e63ecf2db9fb5c537daaf1e9fffffc3f"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (Imp (AndF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "5fc911d1293c960d18f6655eecb042a31c16bb8f"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply derivable_a0_and_a1_imp_b__derivable_a0_imp_a1_imp_b; assumption.",
                        "VernacExtend",
                        "c682e779af0aafd6e35238bdc87438e4cc83093d"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak with (vimp l (Imp (AndF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "6baf535daea25397a4f642bdb7f69af04b7d642f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1.",
                        "VernacExtend",
                        "b0c550071645fc6b98690b110b3117c34d42f543"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp a0 (Imp a1 b)); try assumption.",
                        "VernacExtend",
                        "72d758650c5628574a7bf629cfbbc279b7f359b6"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces'.",
                        "VernacExtend",
                        "209d4745d945446102cbfa3fca90634eb9fc50f5"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_a0_imp_a1_imp_b__forces_a0_and_a1_imp_b; try assumption.",
                        "VernacExtend",
                        "860a13c677839c1d1e43dc8517aa90f89201c075"
                    ]
                },
                {
                    "command": [
                        "apply kripke_tree_kripke_model; assumption.",
                        "VernacExtend",
                        "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_or_imp_gamma",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "intros goal l a0 a1 b gamma work context j spec0.",
                        "VernacExtend",
                        "20b9e8e05d0d67a9fc37f67aff79cf65e241f5e6"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp a0 b)) (vimp l (Imp a1 b)); try assumption.",
                        "VernacExtend",
                        "999f99f815ba6823c94fc26c3f115f4d67ab65a0"
                    ]
                },
                {
                    "command": [
                        "intros forces1 forces2.",
                        "VernacExtend",
                        "e9cfdbd463268538fea07713681735641320cc20"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with (Imp a0 b) (Imp a1 b); try assumption.",
                        "VernacExtend",
                        "8882379f520833a0fee04997a3d0735c4287262c"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_a0b forces_a1b.",
                        "VernacExtend",
                        "66d8a4788ecd02aacbc45c495f73532809495960"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_a0_imp_b_and_a1_imp_b__forces_a0_or_a1_imp_b; try assumption.",
                        "VernacExtend",
                        "929a4a285f76dda569f7ea9520a12a75fd8be736"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "21578794c4142e84e5e946cf860d887e03f65197"
                    ]
                },
                {
                    "command": [
                        "intros below1.",
                        "VernacExtend",
                        "e50115ab29bc91777deec00291d21d3f768300b8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (Imp (OrF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "77d92d048e4d154d7a291f4c7228737c62d92f90"
                    ]
                },
                {
                    "command": [
                        "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
                    ]
                },
                {
                    "command": [
                        "elim below_a; clear below_a; intros below_a0 below_a1.",
                        "VernacExtend",
                        "b2449891648ceae70ddc83c59feceaea1d4fd330"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (Imp (OrF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "77d92d048e4d154d7a291f4c7228737c62d92f90"
                    ]
                },
                {
                    "command": [
                        "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
                    ]
                },
                {
                    "command": [
                        "elim below_a; clear below_a; intros below_a0 below_a1.",
                        "VernacExtend",
                        "b2449891648ceae70ddc83c59feceaea1d4fd330"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "4d17d93de1a7f08394b601628d19b5a542aed899"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (Imp (OrF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "722591b1daaac58032e5e82344efedc828bab4ab"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply (derivable_a0_or_a1_imp_b__derivable_a0_imp_b context' a0 a1 b der'); assumption.",
                        "VernacExtend",
                        "20f97c221e9f4bbc4f3aa6330a96b387e36cfe46"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (Imp (OrF a0 a1) b); try assumption.",
                        "VernacExtend",
                        "722591b1daaac58032e5e82344efedc828bab4ab"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply (derivable_a0_or_a1_imp_b__derivable_a1_imp_b context' a0 a1 b der'); assumption.",
                        "VernacExtend",
                        "4dcb30b8fc13908716cd3e15711555b8c80b3dca"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak2 with (vimp l (Imp (OrF a0 a1) b)); try assumption.",
                        "VernacExtend",
                        "f40f846a9e89672ef73a8593a61666ea41682aa3"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with (Imp a0 b) (Imp a1 b); try assumption.",
                        "VernacExtend",
                        "8882379f520833a0fee04997a3d0735c4287262c"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_a0b forces_a1b.",
                        "VernacExtend",
                        "66d8a4788ecd02aacbc45c495f73532809495960"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_a0_imp_b_and_a1_imp_b__forces_a0_or_a1_imp_b; try assumption.",
                        "VernacExtend",
                        "929a4a285f76dda569f7ea9520a12a75fd8be736"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_or_imp_gamma_new",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros goal l a0 a1 b gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "ebfffa235a3f77653d3bc1983cb676d8efc8267b"
                    ]
                },
                {
                    "command": [
                        "apply rule_vimp_imp_gamma with j1; try assumption.",
                        "VernacExtend",
                        "b6f5bbdb08b671d805a7550b8cd8c03f681dafa7"
                    ]
                },
                {
                    "command": [
                        "apply rule_vimp_or_imp_gamma; assumption.",
                        "VernacExtend",
                        "f705612d5ed87de750a064a18510a825cc467dca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_falsum_imp_imp_gamma",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "intros goal l b c gamma work context j spec0.",
                        "VernacExtend",
                        "6b448942293cda4e37380f60a2e8e9945c53e75c"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "intros der_goal; apply derivable; assumption.",
                        "VernacExtend",
                        "74c4ff23a0429290be5e2cae32ed51ec8229245f"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l c); try assumption.",
                        "VernacExtend",
                        "85e18f97b920d5bbac7bd53424b6116fa73e170d"
                    ]
                },
                {
                    "command": [
                        "intros forces_lc.",
                        "VernacExtend",
                        "b9b3c2dd3aeb5de278ee04073aa5d1bb56f3942f"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with c; try assumption.",
                        "VernacExtend",
                        "00e98d8fb7ffd6d5dffae0746a38c1f0a39177fb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_b__forces_a_imp_b; try assumption.",
                        "VernacExtend",
                        "14afeb90a985ba10945b17550b97694ba9645805"
                    ]
                },
                {
                    "command": [
                        "apply kripke_tree_kripke_model; assumption.",
                        "VernacExtend",
                        "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
                    ]
                },
                {
                    "command": [
                        "apply below_list_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
                        "VernacExtend",
                        "0b8d6b58b4fb95ba00cd5c53265c995d57c35e8b"
                    ]
                },
                {
                    "command": [
                        "intros below_lc.",
                        "VernacExtend",
                        "5ec5ea1d009eb456c823d30f42841e2423b0e2b8"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp with (Imp (Imp Falsum b) c); try assumption.",
                        "VernacExtend",
                        "9d55361e61a7ae3ff9eb861ff232ff92ad81a4fb"
                    ]
                },
                {
                    "command": [
                        "intros j' below_ab; elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "32d8427a3fb9f9f70d1ccb93aad95c9c2a9eb553"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
                        "VernacExtend",
                        "3d3cca3537dd34ba283a71937dec8a59ffddf25a"
                    ]
                },
                {
                    "command": [
                        "intros der.",
                        "VernacExtend",
                        "fc09ac69579a9cfd0c427737a1017b53d133434e"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp with (Imp (Imp Falsum b) c).",
                        "VernacExtend",
                        "af7767d8df45e8325a8120b14a799710eea85f0e"
                    ]
                },
                {
                    "command": [
                        "intros context' der'.",
                        "VernacExtend",
                        "9caf36de07407be3a1074dcdfb7a695ffe445ab7"
                    ]
                },
                {
                    "command": [
                        "apply derivable_falsum_imp_b_imp_c__derivable_c with b; assumption.",
                        "VernacExtend",
                        "5e348c6c5acdcca5b5e331cfa518995d23b590f9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply minimal_cons_gamma_weak with (vimp l (Imp (Imp Falsum b) c)); try assumption.",
                        "VernacExtend",
                        "233f6240bdaf6ec85cd63450564dbc6b75c7cfdd"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1.",
                        "VernacExtend",
                        "b0c550071645fc6b98690b110b3117c34d42f543"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with c; try assumption.",
                        "VernacExtend",
                        "00e98d8fb7ffd6d5dffae0746a38c1f0a39177fb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; apply forces_b__forces_a_imp_b; try assumption.",
                        "VernacExtend",
                        "14afeb90a985ba10945b17550b97694ba9645805"
                    ]
                },
                {
                    "command": [
                        "apply kripke_tree_kripke_model; assumption.",
                        "VernacExtend",
                        "9c92e0853548a0a7f71f5c32e06d5d4ab92f7cff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_vimp_imp_falsum_imp_gamma",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "intros goal l a c gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "01d5eb5dc697e15c857a77f94d6217f25faa1f4f"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_head (vimp l (Imp (Imp a Falsum) c)) gamma j below_gamma).",
                        "VernacExtend",
                        "1de3ff0c133931ae92b5b12a2bc7d90e1d31a9f2"
                    ]
                },
                {
                    "command": [
                        "intros below_lc.",
                        "VernacExtend",
                        "5ec5ea1d009eb456c823d30f42841e2423b0e2b8"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_tail (vimp l (Imp (Imp a Falsum) c)) gamma j below_gamma).",
                        "VernacExtend",
                        "68330c682cb102e7534b595a721b15b4fae66ac3"
                    ]
                },
                {
                    "command": [
                        "clear below_gamma; intros below_gamma.",
                        "VernacExtend",
                        "de960df0b4d1566832cd91fe45a3bda5bd3ca448"
                    ]
                },
                {
                    "command": [
                        "elim (below_vimp_head j l (Imp (Imp a Falsum) c) below_lc).",
                        "VernacExtend",
                        "ffca3938d56cef387af24065644415d959ebd749"
                    ]
                },
                {
                    "command": [
                        "intros below_a_falsum; elim below_a_falsum; clear below_a_falsum.",
                        "VernacExtend",
                        "24b8184413d96cac76ea50886d59274a719c4dd3"
                    ]
                },
                {
                    "command": [
                        "intros below_a below_falsum below_c.",
                        "VernacExtend",
                        "8d57b68c7af71dfa6883456e972e6226c4d78e47"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (Imp (Imp a Falsum) c) below_lc); clear below_lc.",
                        "VernacExtend",
                        "c3ad1aa2c659b14c680c71ec22a074e4be5ea403"
                    ]
                },
                {
                    "command": [
                        "intros below_l.",
                        "VernacExtend",
                        "4d0e40c07e465394bef0ba4be24b409ca7157ae9"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "clear minimal0.",
                        "VernacExtend",
                        "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
                    ]
                },
                {
                    "command": [
                        "intros der_goal.",
                        "VernacExtend",
                        "927ad17a3b27fcefc1a0b77e5d0b8574b8926920"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut_merge with (vimp l (Imp (Imp a Falsum) c)).",
                        "VernacExtend",
                        "176d1f6a59e9c274c7327401e65be8300e376cb7"
                    ]
                },
                {
                    "command": [
                        "apply sound0.",
                        "VernacExtend",
                        "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "apply derivable_eq with (subst_list j Falsum (vimp l (Imp (Imp a (Atom j)) c) :: context)) (subst_form j Falsum goal).",
                        "VernacExtend",
                        "2e985ef2ddb872a70285c6d4c40b72fd86756c02"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j Falsum l (Imp (Imp a (Atom j)) c)).",
                        "VernacExtend",
                        "46a6eb50c95ca7fea44a98ceb02fbad3d3a84f0a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j Falsum a); try assumption.",
                        "VernacExtend",
                        "0d4170429582cc46fdd5870aa034380b2ae299e9"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j Falsum c); try assumption.",
                        "VernacExtend",
                        "ea522ef176402355a4340ade3335f57c6f197c1d"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form Falsum (Atom j)).",
                        "VernacExtend",
                        "b8571505bd18354853c401f0ad5c62f9eece83d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_list_below j Falsum context); try assumption.",
                        "VernacExtend",
                        "6ccc6acc485c7ac5dfa619d13bddd896e03dfcd7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply subst_form_below; assumption.",
                        "VernacExtend",
                        "3418d3687492a98aa575660122ec86ab96ee1f7a"
                    ]
                },
                {
                    "command": [
                        "apply derivable_subst; assumption.",
                        "VernacExtend",
                        "c20303980b82fea8387f8c9c2fdc0872745b9201"
                    ]
                },
                {
                    "command": [
                        "clear minimal0.",
                        "VernacExtend",
                        "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l (Imp (Imp a (Atom j)) c)); try assumption.",
                        "VernacExtend",
                        "e1b781f215de564c4d362fb93baedd4f7624270f"
                    ]
                },
                {
                    "command": [
                        "intros forces_lc.",
                        "VernacExtend",
                        "b9b3c2dd3aeb5de278ee04073aa5d1bb56f3942f"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp (Imp a (Atom j)) c); try assumption.",
                        "VernacExtend",
                        "860124c69d31d53b7a7f2745a10ec79b35691c8b"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces1.",
                        "VernacExtend",
                        "d29bd33bf8aef489f2ce0ee749a55d35273553ac"
                    ]
                },
                {
                    "command": [
                        "apply forces_a_imp_b_imp_c__forces_a_imp_falsum_imp_c_t2 with (Atom j); assumption.",
                        "VernacExtend",
                        "1a9157c90927ed5930a510dc587b4158d5f8fb13"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0.",
                        "VernacExtend",
                        "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0.",
                        "VernacExtend",
                        "37b6be305deba91dcdeb1a87e04e1ac50fba84c8"
                    ]
                },
                {
                    "command": [
                        "apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "f1091d6425a3830c078b3e55ea727568766b9a1d"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context.",
                        "VernacExtend",
                        "fc2a81b7983459cc46a334a80cccdaae444668a3"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_tail with (vimp l (Imp (Imp a Falsum) c)); assumption.",
                        "VernacExtend",
                        "1eeef82c4c06c0fc1d7ee5dccef556bf3cbbf45b"
                    ]
                },
                {
                    "command": [
                        "unfold minimal in |- *.",
                        "VernacExtend",
                        "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
                    ]
                },
                {
                    "command": [
                        "intros x k k_is_mon k_forces_gamma in_x.",
                        "VernacExtend",
                        "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_x.",
                        "VernacExtend",
                        "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; clear H x.",
                        "VernacExtend",
                        "54b1a174beda6adb1f281f9116cee479d107aa66"
                    ]
                },
                {
                    "command": [
                        "apply k_forces_gamma.",
                        "VernacExtend",
                        "3df971a27c83101f540da90e890694ecec8563c1"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "apply minimal0; try assumption; clear H.",
                        "VernacExtend",
                        "efc030cb67752c3fd79d0e6c5bd65c53c7a0e2fb"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak with (vimp l (Imp (Imp a (Atom j)) c)); try assumption.",
                        "VernacExtend",
                        "e1b781f215de564c4d362fb93baedd4f7624270f"
                    ]
                },
                {
                    "command": [
                        "intros forces1.",
                        "VernacExtend",
                        "e722809d6284ca19a41ed9728ad599112cf506ce"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp (Imp a (Atom j)) c); try assumption.",
                        "VernacExtend",
                        "860124c69d31d53b7a7f2745a10ec79b35691c8b"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces2.",
                        "VernacExtend",
                        "cbed7bacaedbc8605c17b6f7ad164c6ae76a1f97"
                    ]
                },
                {
                    "command": [
                        "apply forces_a_imp_b_imp_c__forces_a_imp_falsum_imp_c_t2 with (Atom j); assumption.",
                        "VernacExtend",
                        "1a9157c90927ed5930a510dc587b4158d5f8fb13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_atom_imp_atom_imp_c_gamma",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "intros goal l a b c gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
                    ]
                },
                {
                    "command": [
                        "apply rule_vimp_imp_gamma with j1; try assumption.",
                        "VernacExtend",
                        "b6f5bbdb08b671d805a7550b8cd8c03f681dafa7"
                    ]
                },
                {
                    "command": [
                        "apply rule_shift_gamma_work with (a := NImp_NF (NImp a b (NAtom j))); assumption.",
                        "VernacExtend",
                        "341cb7e8ff342164ff70ede6a2029a6a8189759e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_atom_imp_b_imp_c_gamma",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "intros goal l a b c gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
                    ]
                },
                {
                    "command": [
                        "unfold search_spec in |- *.",
                        "VernacExtend",
                        "e8d046764817a1e6654471c87f1df0673c0f8738"
                    ]
                },
                {
                    "command": [
                        "intros below_goal below_gamma below_context sound0 minimal0.",
                        "VernacExtend",
                        "0cf99f9f8439b7e83dfdb5e592d7ed5cfb8380ac"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_head (vimp l (Imp (Imp (Atom a) b) c)) gamma j below_gamma).",
                        "VernacExtend",
                        "2a22aa39fc54ce1ebf2e14d82ab75501d7817c18"
                    ]
                },
                {
                    "command": [
                        "generalize (below_cons_list_tail (vimp l (Imp (Imp (Atom a) b) c)) gamma j below_gamma); clear below_gamma.",
                        "VernacExtend",
                        "894c9064b557a112493336aac65ded30bb7cb22e"
                    ]
                },
                {
                    "command": [
                        "intros below_gamma below_x.",
                        "VernacExtend",
                        "7cfa4ce8cc5fed11e20f4de0ec6043d290003d4d"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l (Imp (Imp (Atom a) b) c) below_x).",
                        "VernacExtend",
                        "12e68e34b2077c41b4d24d707b5ad3ad1aba23bd"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (Imp (Imp (Atom a) b) c) below_x); clear below_x.",
                        "VernacExtend",
                        "7cf3e4e2801b82d97691334c63ae2740b3b37f4a"
                    ]
                },
                {
                    "command": [
                        "intros below_l below_x.",
                        "VernacExtend",
                        "49476db23ba3ee4d0ced5717bc047b1532ae8919"
                    ]
                },
                {
                    "command": [
                        "elim below_x; clear below_x; intros below_x below_c.",
                        "VernacExtend",
                        "7b09d0791f876f1063c57f3d69e8bb5a716f7f25"
                    ]
                },
                {
                    "command": [
                        "elim below_x; clear below_x; intros below_a below_b.",
                        "VernacExtend",
                        "daaa38bae313366880fdf52a29eff85d19680359"
                    ]
                },
                {
                    "command": [
                        "elim spec0; clear spec0; try assumption.",
                        "VernacExtend",
                        "bf3978f518aaa8e47ff09da86295194e9280c636"
                    ]
                },
                {
                    "command": [
                        "clear minimal0.",
                        "VernacExtend",
                        "cbacd00c3383559c6633fcdcdc69e7b2fd5e9a61"
                    ]
                },
                {
                    "command": [
                        "intros derivable_i.",
                        "VernacExtend",
                        "6a5d849e8bf69f624b2ca7042b542df691c6af6d"
                    ]
                },
                {
                    "command": [
                        "apply derivable.",
                        "VernacExtend",
                        "0c551b944a991955216deb61591e3bb1ca482dbf"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut with (subst_form j b (vimp l (Imp (Atom a) (Imp b (Atom j))))).",
                        "VernacExtend",
                        "789d8b83da40de303b2b8d2d81e6ca731afd07d6"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j b l (Imp (Atom a) (Imp b (Atom j)))); try assumption.",
                        "VernacExtend",
                        "fde4fb6df7b410c8716126e8a959510b6d437127"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j b b); try assumption.",
                        "VernacExtend",
                        "079f34d3258cf330be48b1ebd76572ac36f24583"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form b (Atom j)).",
                        "VernacExtend",
                        "7dfce149bd439ba2378bf46a33e9c0280679998b"
                    ]
                },
                {
                    "command": [
                        "change (Derivable fnil (vimp l (Imp (subst_form j b (Atom a)) (Imp b b)))) in |- *.",
                        "VernacExtend",
                        "520a1c9bbb17aa0b52ea0f26bc1180fd08ce617e"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j b (Atom a)); try assumption.",
                        "VernacExtend",
                        "3bee53ff7be65c908e4e72d8fa3d2d60b5606490"
                    ]
                },
                {
                    "command": [
                        "change (Derivable fnil (vimp (a :: l) (Imp b b))) in |- *.",
                        "VernacExtend",
                        "941bc6c58ad49d1d4e0c2fde2ea6cb809150b7b7"
                    ]
                },
                {
                    "command": [
                        "apply derivable_vimp0.",
                        "VernacExtend",
                        "18c97b9e0d6a2d3eac359d1b7e8d9eb0fe15b672"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Derivable_Intro with (Abs b (Var 0)).",
                        "VernacExtend",
                        "2c1eb16f18a02ce37419eb0178fad305f3e50403"
                    ]
                },
                {
                    "command": [
                        "apply ImpIntro.",
                        "VernacExtend",
                        "76cadfe776bad195ef203476b6283b0845f11fcb"
                    ]
                },
                {
                    "command": [
                        "apply ByAssumption.",
                        "VernacExtend",
                        "d60fa1166b1a7c127ebccc43a95f34ad5d5e3538"
                    ]
                },
                {
                    "command": [
                        "apply My_NthO.",
                        "VernacExtend",
                        "75ed1333b25f8cc4ea876f4e62b3416f23c7b90a"
                    ]
                },
                {
                    "command": [
                        "apply derivable_cut_merge with (subst_form j b (vimp l (Imp (Imp (Atom a) (Atom j)) c))).",
                        "VernacExtend",
                        "be1821b1c7fd2cdff1ad0418cc2250fa0112c382"
                    ]
                },
                {
                    "command": [
                        "apply derivable_weak.",
                        "VernacExtend",
                        "34a7d0d837ef5fce171b8fa14b0a8191f5501ead"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j b l (Imp (Imp (Atom a) (Atom j)) c)); try assumption.",
                        "VernacExtend",
                        "aba4fac32e628b8cf4e41ba1ab98af5853f83eb2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j b c); try assumption.",
                        "VernacExtend",
                        "7ad2f30fdf3d213fb7d684b3d8adad5461e7018b"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form b (Atom j)).",
                        "VernacExtend",
                        "7dfce149bd439ba2378bf46a33e9c0280679998b"
                    ]
                },
                {
                    "command": [
                        "change (Derivable context (vimp l (Imp (Imp (subst_form j b (Atom a)) b) c))) in |- *.",
                        "VernacExtend",
                        "bfffc4d43b73f757baceeeaf22898f2c065347b5"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j b (Atom a)); try assumption.",
                        "VernacExtend",
                        "3bee53ff7be65c908e4e72d8fa3d2d60b5606490"
                    ]
                },
                {
                    "command": [
                        "apply sound0.",
                        "VernacExtend",
                        "2e11e039e8b21a68823ed3fc093c12a6f2cc65b5"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subst_form_below j b goal); try assumption.",
                        "VernacExtend",
                        "5651adf8bb7fbc09a7aa3c2e73c28ef98ea80209"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subst_list_below j b context); try assumption.",
                        "VernacExtend",
                        "7267319fa774f776baffc36cba3ce9f7c36ed24c"
                    ]
                },
                {
                    "command": [
                        "change (Derivable (subst_list j b (vimp l (Imp (Imp (Atom a) (Atom j)) c) :: vimp l (Imp (Atom a) (Imp b (Atom j))) :: context)) (subst_form j b goal)) in |- *.",
                        "VernacExtend",
                        "e723bcf1d7dcfa8fca6160ef095ce1f766265d2c"
                    ]
                },
                {
                    "command": [
                        "apply derivable_subst; assumption.",
                        "VernacExtend",
                        "c20303980b82fea8387f8c9c2fdc0872745b9201"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0 below_context below_gamma below_goal.",
                        "VernacExtend",
                        "34068a90159f4be8b974c08e9f1b6ac4395ebde3"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon k_forces_gamma k_notforces_goal.",
                        "VernacExtend",
                        "5871b68b807de7fe90830195ea4937bcdc1cd5e9"
                    ]
                },
                {
                    "command": [
                        "apply refutable with k; try assumption.",
                        "VernacExtend",
                        "e0e49221d43d83d91a2d5cce9fe23dd9b0afe026"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp (Imp (Atom a) (Atom j)) c)) (vimp (a :: l) (Imp b (Atom j))); try assumption.",
                        "VernacExtend",
                        "113f13cbf957e8e58cfba88b9dde4d8f4a4b319d"
                    ]
                },
                {
                    "command": [
                        "intros forces1 forces2.",
                        "VernacExtend",
                        "e9cfdbd463268538fea07713681735641320cc20"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with (Imp (Imp (Atom a) (Atom j)) c) (Imp (Atom a) (Imp b (Atom j))); try assumption.",
                        "VernacExtend",
                        "c8eeec181da7f4b5f12456476372f187c212606b"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_ajc forces_abj.",
                        "VernacExtend",
                        "634426aaefef006b92a0f17a17e492969de38445"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
                    ]
                },
                {
                    "command": [
                        "intros k'' suc2 suc3.",
                        "VernacExtend",
                        "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k'' (Imp (Atom a) b) -> forces_t2 k k'' c) in |- *.",
                        "VernacExtend",
                        "cc5dc28eee89a419d549396a451182f3dcb9effd"
                    ]
                },
                {
                    "command": [
                        "intros forces_ab.",
                        "VernacExtend",
                        "a6c311affb74860420867914b9cd809823301a7e"
                    ]
                },
                {
                    "command": [
                        "apply (forces_ajc k''); try assumption.",
                        "VernacExtend",
                        "f988f23b5f7d372a7133f4dd6cbc83aae236bc52"
                    ]
                },
                {
                    "command": [
                        "intros k''' suc4 suc5.",
                        "VernacExtend",
                        "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k''' (Atom a) -> forces_t2 k k''' (Atom j)) in |- *.",
                        "VernacExtend",
                        "13bab5f1fb917a26c91aabf172deabdd53759cff"
                    ]
                },
                {
                    "command": [
                        "intros forces_a.",
                        "VernacExtend",
                        "33cc687c25afd7c1f588674c49bc3711da57aa6c"
                    ]
                },
                {
                    "command": [
                        "generalize (forces_abj k''' suc4).",
                        "VernacExtend",
                        "ae3bed41f51b0c8e5257839c39ec462492e6d56a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold forces in |- *.",
                        "VernacExtend",
                        "d4ffa91d600a677c8890c7de9dd7d05e5c42e224"
                    ]
                },
                {
                    "command": [
                        "clear forces_abj; intros forces_abj.",
                        "VernacExtend",
                        "14f248dfd1463826d71ed90152d318d2f03e7d4a"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *.",
                        "VernacExtend",
                        "6593350d7f9352d06123ea1f5d47c529eb830573"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply forces_abj; try assumption.",
                        "VernacExtend",
                        "aa3ab6d81c6865184c4352edeb3086d389874ec5"
                    ]
                },
                {
                    "command": [
                        "unfold Suc in |- *; apply succs_trans with k''; try assumption.",
                        "VernacExtend",
                        "9c43740f4b6cd310b3f06e9a916d05d495bd8713"
                    ]
                },
                {
                    "command": [
                        "unfold Suc in |- *; apply successor_refl.",
                        "VernacExtend",
                        "8aa941fcac10ab8c9b4a87d5d9ca992f77ccbecc"
                    ]
                },
                {
                    "command": [
                        "apply forces_ab; try assumption.",
                        "VernacExtend",
                        "652ed08898e6e49408bdbdd1dc1893fad376318e"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 sound0.",
                        "VernacExtend",
                        "742df674494d7606c849e6ae23f5c87848254699"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0; apply less_trans with j.",
                        "VernacExtend",
                        "1ebf3fdadd4064af5e8b936e710fe3cc0096b2e0"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0; apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0; apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_cons_list.",
                        "VernacExtend",
                        "f8863bff408f592649e820edd515fbbe01255b1c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0; apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_list_less_below_list with j; assumption.",
                        "VernacExtend",
                        "fb9a780aa8d16747d149c6a27bc96dca38cdac7f"
                    ]
                },
                {
                    "command": [
                        "clear minimal0 below_context below_gamma below_goal.",
                        "VernacExtend",
                        "f3b866c56ff89cffc8eb01f7fe39c9eaefccca83"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context.",
                        "VernacExtend",
                        "fc2a81b7983459cc46a334a80cccdaae444668a3"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_cons_context.",
                        "VernacExtend",
                        "fc2a81b7983459cc46a334a80cccdaae444668a3"
                    ]
                },
                {
                    "command": [
                        "apply sound_cons_gamma_tail with (vimp l (Imp (Imp (Atom a) b) c)); assumption.",
                        "VernacExtend",
                        "417c5c8bebaa1508502a42dd631e1a38402117c5"
                    ]
                },
                {
                    "command": [
                        "clear sound0 below_context below_gamma below_goal below_b below_a.",
                        "VernacExtend",
                        "c1e57c4f5e8a45714fafc23cb5fa3f6fc6eef2fc"
                    ]
                },
                {
                    "command": [
                        "unfold minimal in |- *.",
                        "VernacExtend",
                        "cc071f5497238746bb4f62fc2ed6fa4acc91ec29"
                    ]
                },
                {
                    "command": [
                        "intros x k k_is_mon k_forces_gamma in_x.",
                        "VernacExtend",
                        "ebd95b4e5bd6fbc3c549277d244a8e8ccf86d585"
                    ]
                },
                {
                    "command": [
                        "inversion_clear in_x.",
                        "VernacExtend",
                        "961e8cce51d985c97ca69d44b16349e9d34c4bb6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; clear H x.",
                        "VernacExtend",
                        "54b1a174beda6adb1f281f9116cee479d107aa66"
                    ]
                },
                {
                    "command": [
                        "apply k_forces_gamma.",
                        "VernacExtend",
                        "3df971a27c83101f540da90e890694ecec8563c1"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; clear H0 x.",
                        "VernacExtend",
                        "3ec9239a18cf814dbb19a62674e3884ae96565a0"
                    ]
                },
                {
                    "command": [
                        "apply k_forces_gamma.",
                        "VernacExtend",
                        "3df971a27c83101f540da90e890694ecec8563c1"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_tail.",
                        "VernacExtend",
                        "dc7f2292fdc59a041893ae6a198b47b5df0359a4"
                    ]
                },
                {
                    "command": [
                        "apply in_gamma_cons_gamma_head.",
                        "VernacExtend",
                        "a50087c8d4ac9e193c044b9341251cb77d7a8ad7"
                    ]
                },
                {
                    "command": [
                        "apply minimal0; try assumption.",
                        "VernacExtend",
                        "f0eac8dfbc9cb0bc142b63b23351ce50b97e31e3"
                    ]
                },
                {
                    "command": [
                        "clear H0 x.",
                        "VernacExtend",
                        "5d2b3256b3cc412cca3ab781938aa42dfc6a8ed9"
                    ]
                },
                {
                    "command": [
                        "apply forces_gamma_cons_gamma_weak2 with (vimp l (Imp (Imp (Atom a) (Atom j)) c)) (vimp (a :: l) (Imp b (Atom j))); try assumption.",
                        "VernacExtend",
                        "113f13cbf957e8e58cfba88b9dde4d8f4a4b319d"
                    ]
                },
                {
                    "command": [
                        "intros forces1 forces2.",
                        "VernacExtend",
                        "e9cfdbd463268538fea07713681735641320cc20"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp2 with (Imp (Imp (Atom a) (Atom j)) c) (Imp (Atom a) (Imp b (Atom j))); try assumption.",
                        "VernacExtend",
                        "c8eeec181da7f4b5f12456476372f187c212606b"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_ajc forces_abj.",
                        "VernacExtend",
                        "634426aaefef006b92a0f17a17e492969de38445"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
                    ]
                },
                {
                    "command": [
                        "intros k'' suc2 suc3.",
                        "VernacExtend",
                        "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k'' (Imp (Atom a) b) -> forces_t2 k k'' c) in |- *.",
                        "VernacExtend",
                        "cc5dc28eee89a419d549396a451182f3dcb9effd"
                    ]
                },
                {
                    "command": [
                        "intros forces_ab.",
                        "VernacExtend",
                        "a6c311affb74860420867914b9cd809823301a7e"
                    ]
                },
                {
                    "command": [
                        "apply (forces_ajc k''); try assumption.",
                        "VernacExtend",
                        "f988f23b5f7d372a7133f4dd6cbc83aae236bc52"
                    ]
                },
                {
                    "command": [
                        "intros k''' suc4 suc5.",
                        "VernacExtend",
                        "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k''' (Atom a) -> forces_t2 k k''' (Atom j)) in |- *.",
                        "VernacExtend",
                        "13bab5f1fb917a26c91aabf172deabdd53759cff"
                    ]
                },
                {
                    "command": [
                        "intros forces_a.",
                        "VernacExtend",
                        "33cc687c25afd7c1f588674c49bc3711da57aa6c"
                    ]
                },
                {
                    "command": [
                        "generalize (forces_abj k''' suc4).",
                        "VernacExtend",
                        "ae3bed41f51b0c8e5257839c39ec462492e6d56a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold forces in |- *.",
                        "VernacExtend",
                        "d4ffa91d600a677c8890c7de9dd7d05e5c42e224"
                    ]
                },
                {
                    "command": [
                        "clear forces_abj; intros forces_abj.",
                        "VernacExtend",
                        "14f248dfd1463826d71ed90152d318d2f03e7d4a"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *.",
                        "VernacExtend",
                        "6593350d7f9352d06123ea1f5d47c529eb830573"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply forces_abj; try assumption.",
                        "VernacExtend",
                        "aa3ab6d81c6865184c4352edeb3086d389874ec5"
                    ]
                },
                {
                    "command": [
                        "unfold Suc in |- *; apply succs_trans with k''; try assumption.",
                        "VernacExtend",
                        "9c43740f4b6cd310b3f06e9a916d05d495bd8713"
                    ]
                },
                {
                    "command": [
                        "unfold Suc in |- *; apply successor_refl.",
                        "VernacExtend",
                        "8aa941fcac10ab8c9b4a87d5d9ca992f77ccbecc"
                    ]
                },
                {
                    "command": [
                        "apply forces_ab; try assumption.",
                        "VernacExtend",
                        "652ed08898e6e49408bdbdd1dc1893fad376318e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rule_a_imp_b_imp_c_gamma",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "intros goal l a b c gamma work context j j1 less1 spec0.",
                        "VernacExtend",
                        "7bada9b6c0994cdc4d183878ef9a506822fc83c5"
                    ]
                },
                {
                    "command": [
                        "apply search_spec_subst_gamma_pos with (j1 := j1) (a := a) (b := vimp l (Imp (Imp (Atom j) b) c)); try assumption; clear spec0.",
                        "VernacExtend",
                        "2dad4c6d3fcd25f0796d1a458894e2296a26adb9"
                    ]
                },
                {
                    "command": [
                        "intros below_x.",
                        "VernacExtend",
                        "442b41238c96b0439bfd1efc5fb01b03a246ee47"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_tail j l (Imp (Imp a b) c) below_x).",
                        "VernacExtend",
                        "8d280abb304974f1b790da1a6affca34247ff7f0"
                    ]
                },
                {
                    "command": [
                        "generalize (below_vimp_head j l (Imp (Imp a b) c) below_x); clear below_x.",
                        "VernacExtend",
                        "f270f91be1f5eca72e56d9cb3a0d8576ec057512"
                    ]
                },
                {
                    "command": [
                        "intros below_x below_l.",
                        "VernacExtend",
                        "7b5bc59f28da310336ffe2b7b262157b8c0b4a8c"
                    ]
                },
                {
                    "command": [
                        "elim below_x; clear below_x; intros below_ab below_c.",
                        "VernacExtend",
                        "34a93f652b88f454f57fb94ba863f18292b06aac"
                    ]
                },
                {
                    "command": [
                        "elim below_ab; clear below_ab; intros below_a below_b.",
                        "VernacExtend",
                        "fded89458fea913504728573344c89a2b1670700"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply below_vimp_split.",
                        "VernacExtend",
                        "64c5132e78aef22a37acd9bae1f53ffd7684e025"
                    ]
                },
                {
                    "command": [
                        "intros i0 in0; apply less_trans with j; try assumption.",
                        "VernacExtend",
                        "491961071ec29bc8c9000f4c989f6c2cd0926ae5"
                    ]
                },
                {
                    "command": [
                        "apply below_l; assumption.",
                        "VernacExtend",
                        "eb1a97430edd200ed851280d721a71e5e51ff6f4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "apply below_form_less_below_form with j; assumption.",
                        "VernacExtend",
                        "16b80b5326cfb2bbe45f6443d32c02cfc1d30865"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_vimp_head j a l (Imp (Imp (Atom j) b) c)); try assumption.",
                        "VernacExtend",
                        "b66ae8745e40e1084716197d87989600749f170c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a b); try assumption.",
                        "VernacExtend",
                        "045be8076ecc62cd6d00cf3f0e91f76b5d3d00e3"
                    ]
                },
                {
                    "command": [
                        "rewrite (subst_form_below j a c); try assumption.",
                        "VernacExtend",
                        "b6f21ff017b89876137d7dac21ae6a9511336bde"
                    ]
                },
                {
                    "command": [
                        "rewrite (equal_dec_refl j form a (Atom j)).",
                        "VernacExtend",
                        "8f26e8c67a32656bfe41a58009935d0be0b5d323"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros k k_is_mon forces1 forces2.",
                        "VernacExtend",
                        "7671ce6573180143d23fd0139557a14d65d042b1"
                    ]
                },
                {
                    "command": [
                        "apply forces_vimp with (Imp (Imp (Atom j) b) c); try assumption.",
                        "VernacExtend",
                        "5be1e074cbf5a578764673173a180ed8000891b1"
                    ]
                },
                {
                    "command": [
                        "intros k' suc1 forces_jbc.",
                        "VernacExtend",
                        "2e7d30064d11511fe44bd75250dae5cd116a40e0"
                    ]
                },
                {
                    "command": [
                        "unfold forces_t2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1d9d5f87c3d29d025bc404a3d7eae5ce8288fb9e"
                    ]
                },
                {
                    "command": [
                        "intros k'' suc2 suc3.",
                        "VernacExtend",
                        "a0af2dad4e8ec04a66c9e8b8d560db38faac3d24"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k'' (Imp a b) -> forces_t2 k k'' c) in |- *.",
                        "VernacExtend",
                        "6a4e5776bd3ae0a14f78443cf60cc72a2b2a84f1"
                    ]
                },
                {
                    "command": [
                        "intros forces_ab.",
                        "VernacExtend",
                        "a6c311affb74860420867914b9cd809823301a7e"
                    ]
                },
                {
                    "command": [
                        "apply (forces_jbc k''); try assumption.",
                        "VernacExtend",
                        "55392722576a9530986695173c57ea5575fde98f"
                    ]
                },
                {
                    "command": [
                        "intros k''' suc4 suc5.",
                        "VernacExtend",
                        "b5251c59c3a7af51ae441e1d1b3cba1eff685f33"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k''' (Atom j) -> forces_t2 k k''' b) in |- *.",
                        "VernacExtend",
                        "3a20e3668d75571690c2e1ac2ff06aaad28431b7"
                    ]
                },
                {
                    "command": [
                        "intros forces_j.",
                        "VernacExtend",
                        "fa69c925a9bd94c976851cf643bb703476e1ea1f"
                    ]
                },
                {
                    "command": [
                        "apply (forces_ab k'''); try assumption.",
                        "VernacExtend",
                        "ee44abe1fb3c29adaa2e547baa4ef2a75525d3cb"
                    ]
                },
                {
                    "command": [
                        "change (forces_t2 k k''' a) in |- *.",
                        "VernacExtend",
                        "b6a723234c295ca939c0658f5fa0f74b9ffc0e4f"
                    ]
                },
                {
                    "command": [
                        "apply (forces2 k'''); assumption.",
                        "VernacExtend",
                        "f1ed6686172c12f1138518d380ddc7a7c095b508"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}