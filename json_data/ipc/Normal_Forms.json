{
    "filename": "Normal_Forms.v",
    "coq_project": "ipc",
    "vernac_cmds": [
        [
            "Require Export Forms.",
            "VernacRequire",
            "f74e2a7a22bafe871b728b983f38c07747fd22a4"
        ],
        [
            "Inductive normal_form : Set := | NFalsum : normal_form | NAtom : Int -> normal_form | NDisj : Int -> Int -> normal_form | AImp : Int -> normal_form -> normal_form | NImp_NF : nimp -> normal_form with nimp : Set := NImp : Int -> Int -> normal_form -> nimp.",
            "VernacInductive",
            "302ff5f7f35633aeab836dd827013172d364b412"
        ],
        [
            "Fixpoint nf2form (x : normal_form) : form := match x with | NFalsum => Falsum | NAtom i => Atom i | NDisj i j => OrF (Atom i) (Atom j) | AImp i b => Imp (Atom i) (nf2form b) | NImp_NF x => nimp2form x end with nimp2form (x : nimp) : form := match x with | NImp i j b => Imp (Imp (Atom i) (Atom j)) (nf2form b) end.",
            "VernacFixpoint",
            "438e3b07477186ff85fc8e0d3f18a0faef9f631c"
        ],
        [
            "Definition nf_list := list normal_form.",
            "VernacDefinition",
            "2cef137ba54ed871c153860fc789379307e55b71"
        ],
        [
            "Definition nf_nil := nil (A:=normal_form).",
            "VernacDefinition",
            "db07f40ad069aab721a8696e628455288c611cbf"
        ],
        [
            "Fixpoint nvimp (l : list Int) : normal_form -> normal_form := match l with | nil => fun a : normal_form => a | i :: l => fun a : normal_form => nvimp l (AImp i a) end.",
            "VernacFixpoint",
            "44b167ab4e87eea0171e8b57274613c3933ead96"
        ],
        [
            "Lemma vimp2nform : forall (l : list Int) (a : normal_form), {b : normal_form | nf2form b = vimp l (nf2form a)}.",
            "VernacStartTheoremProof",
            "989cc615db077d6d6e3383cc3f410aaabc6f3a93"
        ],
        [
            "intros l; elim l; clear l.",
            "VernacExtend",
            "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
        ],
        [
            "intros a; exists a; trivial.",
            "VernacExtend",
            "42a33d1382d2f721089004ed3569adff920126f6"
        ],
        [
            "intros i l ih a.",
            "VernacExtend",
            "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
        ],
        [
            "elim (ih (AImp i a)); clear ih.",
            "VernacExtend",
            "6c04cd99f2f4ab45a8a3f5c8b50d4efff67d7c50"
        ],
        [
            "intros b nf_b.",
            "VernacExtend",
            "36155349c1a6970f94e578e7e6d7cd423c8c379a"
        ],
        [
            "exists b; assumption.",
            "VernacExtend",
            "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vimp2nvimp : forall (l : list Int) (a : normal_form), {b : normal_form | b = nvimp l a}.",
            "VernacStartTheoremProof",
            "4b0f65ac3f7ecb77b1b6f8efc577d505ed1e2404"
        ],
        [
            "intros l; elim l; clear l.",
            "VernacExtend",
            "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
        ],
        [
            "intros a; exists a; trivial.",
            "VernacExtend",
            "42a33d1382d2f721089004ed3569adff920126f6"
        ],
        [
            "intros i l ih a.",
            "VernacExtend",
            "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
        ],
        [
            "elim (ih (AImp i a)); clear ih.",
            "VernacExtend",
            "6c04cd99f2f4ab45a8a3f5c8b50d4efff67d7c50"
        ],
        [
            "intros b nf_b.",
            "VernacExtend",
            "36155349c1a6970f94e578e7e6d7cd423c8c379a"
        ],
        [
            "exists b; assumption.",
            "VernacExtend",
            "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma vimp_eq_nvimp : forall (l : list Int) (a : normal_form), vimp l (nf2form a) = nf2form (nvimp l a).",
            "VernacStartTheoremProof",
            "ed7c932c0a5534879376cad3e371999dfccb8da3"
        ],
        [
            "intros l; elim l; clear l.",
            "VernacExtend",
            "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
        ],
        [
            "intros a; trivial.",
            "VernacExtend",
            "607d359364149dbc65a8983e49690fae8c7c1797"
        ],
        [
            "intros i l ih a.",
            "VernacExtend",
            "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
        ],
        [
            "apply (ih (AImp i a)).",
            "VernacExtend",
            "55ef32bae1385caf2b8db7828dbf0e45374c1b3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "vimp2nform",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; clear l.",
                        "VernacExtend",
                        "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
                    ]
                },
                {
                    "command": [
                        "intros a; exists a; trivial.",
                        "VernacExtend",
                        "42a33d1382d2f721089004ed3569adff920126f6"
                    ]
                },
                {
                    "command": [
                        "intros i l ih a.",
                        "VernacExtend",
                        "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
                    ]
                },
                {
                    "command": [
                        "elim (ih (AImp i a)); clear ih.",
                        "VernacExtend",
                        "6c04cd99f2f4ab45a8a3f5c8b50d4efff67d7c50"
                    ]
                },
                {
                    "command": [
                        "intros b nf_b.",
                        "VernacExtend",
                        "36155349c1a6970f94e578e7e6d7cd423c8c379a"
                    ]
                },
                {
                    "command": [
                        "exists b; assumption.",
                        "VernacExtend",
                        "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vimp2nvimp",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; clear l.",
                        "VernacExtend",
                        "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
                    ]
                },
                {
                    "command": [
                        "intros a; exists a; trivial.",
                        "VernacExtend",
                        "42a33d1382d2f721089004ed3569adff920126f6"
                    ]
                },
                {
                    "command": [
                        "intros i l ih a.",
                        "VernacExtend",
                        "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
                    ]
                },
                {
                    "command": [
                        "elim (ih (AImp i a)); clear ih.",
                        "VernacExtend",
                        "6c04cd99f2f4ab45a8a3f5c8b50d4efff67d7c50"
                    ]
                },
                {
                    "command": [
                        "intros b nf_b.",
                        "VernacExtend",
                        "36155349c1a6970f94e578e7e6d7cd423c8c379a"
                    ]
                },
                {
                    "command": [
                        "exists b; assumption.",
                        "VernacExtend",
                        "2b46f02efc5eafa3519c9ce64c4011724bac28bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "vimp_eq_nvimp",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; clear l.",
                        "VernacExtend",
                        "e92d3911fc3c80b0ae19c9c55e77ca38541ce98b"
                    ]
                },
                {
                    "command": [
                        "intros a; trivial.",
                        "VernacExtend",
                        "607d359364149dbc65a8983e49690fae8c7c1797"
                    ]
                },
                {
                    "command": [
                        "intros i l ih a.",
                        "VernacExtend",
                        "d6593c1daed90ced77cd4d95ecd87ccf251ba7c8"
                    ]
                },
                {
                    "command": [
                        "apply (ih (AImp i a)).",
                        "VernacExtend",
                        "55ef32bae1385caf2b8db7828dbf0e45374c1b3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}