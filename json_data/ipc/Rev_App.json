{
    "filename": "Rev_App.v",
    "coq_project": "ipc",
    "vernac_cmds": [
        [
            "Require Export In_NGamma.",
            "VernacRequire",
            "f660f799cddeef4616fefe1ecf1d7e900c7e6f99"
        ],
        [
            "Definition decorated_nested_imp := (nimp * kripke_tree)%type.",
            "VernacDefinition",
            "5c69288e43017f976aba1c59dc526a1df787df7a"
        ],
        [
            "Definition decorated_nested_imps := list decorated_nested_imp.",
            "VernacDefinition",
            "5fd4d99e6f065b5b2dc76dd948f643ab03346948"
        ],
        [
            "Definition DNI_NIL := nil (A:=decorated_nested_imp).",
            "VernacDefinition",
            "d961953d797c2495a77c22ed9ce5c58891828af2"
        ],
        [
            "Definition decorated_nested_imp2nimp (x : decorated_nested_imp) := match x with | (x0, _) => x0 end.",
            "VernacDefinition",
            "09543af09818ca2ba8b9be0c85ded7122bd26a69"
        ],
        [
            "Definition decorated_nested_imp2k (x : decorated_nested_imp) := match x with | (_, k) => k end.",
            "VernacDefinition",
            "ec554d6310804054bfabae445e1016ecce8ced38"
        ],
        [
            "Definition decorated_nested_imp2form (x : decorated_nested_imp) := nimp2form (decorated_nested_imp2nimp x).",
            "VernacDefinition",
            "d12691adbee5b29126e84d8d0d6b3962079965a5"
        ],
        [
            "Fixpoint rev_app (ds : decorated_nested_imps) : nested_imps -> nested_imps := match ds with | nil => fun ni : nested_imps => ni | (x, k) :: ds => fun ni : nested_imps => rev_app ds (Decorated x k :: ni) end.",
            "VernacFixpoint",
            "c312e5a49f721715df587b6667790551c37f3033"
        ],
        [
            "Lemma rev_app_app : forall (dni : decorated_nested_imps) (ni : nested_imps), rev_app dni ni = rev_app dni NNil ++ ni.",
            "VernacStartTheoremProof",
            "14f08b7c83b2703370a07aa592888f64062d84db"
        ],
        [
            "intros dni; elim dni; clear dni.",
            "VernacExtend",
            "ecb79e51a7078d2d53919af556178b7bfffc1d82"
        ],
        [
            "intros ni; simpl in |- *.",
            "VernacExtend",
            "dc0cda6459c8a67ad0ebdbea54f7383e3ee34522"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros a; case a; clear a.",
            "VernacExtend",
            "8570597e44a5fc5e2f5b3dc976889a3a6f8ee764"
        ],
        [
            "intros x k dni ih ni.",
            "VernacExtend",
            "ec434b7cbf4e7734f9ac670cc83bf1ab6b144e56"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (ih (Decorated x k :: ni)).",
            "VernacExtend",
            "7b983a83d36bc5bdb483439d7db5f68e580d1e5f"
        ],
        [
            "rewrite (ih (Decorated x k :: NNil)).",
            "VernacExtend",
            "dd28f17ac7255bb1de7a6d9bcd1bdfedc45d6eb5"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply (app_ass (rev_app dni NNil) (Decorated x k :: NNil) ni).",
            "VernacExtend",
            "09740a0ac1e52a92a8b905f4cb48f01fb663dc88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_app_or_ni : forall (x : nested_imp) (ni1 ni2 : nested_imps), In x (ni1 ++ ni2) -> In x ni1 \\/ In x ni2.",
            "VernacStartTheoremProof",
            "0f1e6820e7711dc2a43762c6ffa1a4b14a2e634b"
        ],
        [
            "intros x ni1 ni2 in_x.",
            "VernacExtend",
            "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
        ],
        [
            "apply in_app_or.",
            "VernacExtend",
            "2dc1f1786da43750c1353dfd339e825407d2b953"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_ni0_in_nini : forall (x : nested_imp) (ni1 ni2 : nested_imps), In x ni1 -> In x (ni1 ++ ni2).",
            "VernacStartTheoremProof",
            "aba85b683d1093d895b9ad7807c087c93023f8e6"
        ],
        [
            "intros x ni1 ni2 in_x.",
            "VernacExtend",
            "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_ni1_in_nini : forall (x : nested_imp) (ni1 ni2 : nested_imps), In x ni2 -> In x (ni1 ++ ni2).",
            "VernacStartTheoremProof",
            "30bb9b85e9743e5d9fc4c4796ad84e9b2d5915b8"
        ],
        [
            "intros x ni1 ni2 in_x.",
            "VernacExtend",
            "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_ni_x_ni_rev : forall (x x' : nested_imp) (ni1 ni2 : nested_imps), In x (ni1 ++ x' :: ni2) -> In x (ni1 ++ ni2) \\/ x = x'.",
            "VernacStartTheoremProof",
            "68dbb6f4d757fc6023d35665fb58c3099811b82b"
        ],
        [
            "intros x x' ni1 ni2 in_ni_x_ni.",
            "VernacExtend",
            "6d8353d78bd68476baebe12667f091ad958211da"
        ],
        [
            "elim (in_app_or_ni x ni1 (x' :: ni2) in_ni_x_ni); clear in_ni_x_ni.",
            "VernacExtend",
            "e846602dfb0452871204f9ec8f7cc46abf56ac93"
        ],
        [
            "intros in_ni1; left; apply in_ni0_in_nini; assumption.",
            "VernacExtend",
            "bffefbf3f874f1db055e04461edeacca6187ef3c"
        ],
        [
            "intros in_ni2; inversion_clear in_ni2.",
            "VernacExtend",
            "9ccfe9c9f5e97f9e8607f5edfc732d37c75eb7d4"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "symmetry in |- *; assumption.",
            "VernacExtend",
            "5955dba2342bcdccd27ef4f56635d3b4a5a3faa9"
        ],
        [
            "left; apply in_ni1_in_nini; assumption.",
            "VernacExtend",
            "6d15825cf91bb6e6eee91c0d0e19fc02b24b5fcc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_ni_x_ni_tail : forall (x x' : nested_imp) (ni1 ni2 : nested_imps), In x (ni1 ++ ni2) -> In x (ni1 ++ x' :: ni2).",
            "VernacStartTheoremProof",
            "cf93e245b91f64026a33c883332f1a2f94c53125"
        ],
        [
            "intros x x' ni1 ni2 in_nini.",
            "VernacExtend",
            "0dfc53ccbe67b7747f942b55c7419ac9d4efff53"
        ],
        [
            "elim (in_app_or_ni x ni1 ni2 in_nini); clear in_nini.",
            "VernacExtend",
            "dae68db218380187e4ab82df99a53e3b41848ec4"
        ],
        [
            "intros in_ni1; apply in_ni0_in_nini; assumption.",
            "VernacExtend",
            "ced8c083e7aa65d4eeeee525e2c0b21c9659017e"
        ],
        [
            "intros in_ni2; apply in_ni1_in_nini; right; assumption.",
            "VernacExtend",
            "9448c8e903ca025dad3b082022a0b80ce11e4cf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_app_lemma0 : forall (dni : decorated_nested_imps) (ni : nested_imps), {dni_ni : nested_imps | dni_ni = rev_app dni ni}.",
            "VernacStartTheoremProof",
            "743e2854214bf90dd3e0221bfe22bc0a7847a540"
        ],
        [
            "intros dni; elim dni; clear dni.",
            "VernacExtend",
            "ecb79e51a7078d2d53919af556178b7bfffc1d82"
        ],
        [
            "intros ni; exists ni; trivial.",
            "VernacExtend",
            "15bb6b813f155fe98c94a27ff185c6d78e292596"
        ],
        [
            "intros x; case x; clear x.",
            "VernacExtend",
            "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
        ],
        [
            "intros n k dni ih ni.",
            "VernacExtend",
            "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
        ],
        [
            "apply (ih (Decorated n k :: ni)).",
            "VernacExtend",
            "a81a689d0801b6279ead4f9bdc93efd6f30c75aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive rev_app_spec (dni : decorated_nested_imps) (ni : nested_imps) : Set := Rev_App_Spec_Intro : forall dni_ni : nested_imps, dni_ni = rev_app dni ni -> rev_app_spec dni ni.",
            "VernacInductive",
            "38ab7d652de396c0b5e4cbba3cf03637e3d545ee"
        ],
        [
            "Lemma rev_app_lemma1 : forall (dni : decorated_nested_imps) (ni : nested_imps), rev_app_spec dni ni.",
            "VernacStartTheoremProof",
            "607cdba99d8562b1e2a0297acb957f164f5faffc"
        ],
        [
            "intros dni; elim dni; clear dni.",
            "VernacExtend",
            "ecb79e51a7078d2d53919af556178b7bfffc1d82"
        ],
        [
            "intros ni; exists ni; trivial.",
            "VernacExtend",
            "15bb6b813f155fe98c94a27ff185c6d78e292596"
        ],
        [
            "intros x; case x; clear x.",
            "VernacExtend",
            "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
        ],
        [
            "intros n k dni ih ni.",
            "VernacExtend",
            "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
        ],
        [
            "elim (ih (Decorated n k :: ni)).",
            "VernacExtend",
            "baf33a1311d5f13a119698a80f17487288513f9b"
        ],
        [
            "intros dni_ni eq.",
            "VernacExtend",
            "4f3cfd2ec1f7460645cba214297966d74ca7b136"
        ],
        [
            "exists dni_ni; assumption.",
            "VernacExtend",
            "47624c026eb5ed786257e2c3d71db25c0200a3e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_app_lemma2 : forall (A : Set) (dni : decorated_nested_imps) (ni : nested_imps), (forall dni_ni : nested_imps, dni_ni = rev_app dni ni -> A) -> A.",
            "VernacStartTheoremProof",
            "4b242e3a528781b78655e62d19eb75c611c4bff1"
        ],
        [
            "intros A dni; elim dni; clear dni.",
            "VernacExtend",
            "f4468fa6d40ea28acc9bbcf32c78e389ffcdb346"
        ],
        [
            "intros ni sk; apply (sk ni); trivial.",
            "VernacExtend",
            "e0cfdddaf878149497a1074517dc04c380b56575"
        ],
        [
            "intros x; case x; clear x.",
            "VernacExtend",
            "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
        ],
        [
            "intros n k dni ih ni.",
            "VernacExtend",
            "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
        ],
        [
            "intros sk.",
            "VernacExtend",
            "19a13120943829f0bd9451692507b9ffedf4c38d"
        ],
        [
            "apply (ih (Decorated n k :: ni)).",
            "VernacExtend",
            "a81a689d0801b6279ead4f9bdc93efd6f30c75aa"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "rev_app_app",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros dni; elim dni; clear dni.",
                        "VernacExtend",
                        "ecb79e51a7078d2d53919af556178b7bfffc1d82"
                    ]
                },
                {
                    "command": [
                        "intros ni; simpl in |- *.",
                        "VernacExtend",
                        "dc0cda6459c8a67ad0ebdbea54f7383e3ee34522"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros a; case a; clear a.",
                        "VernacExtend",
                        "8570597e44a5fc5e2f5b3dc976889a3a6f8ee764"
                    ]
                },
                {
                    "command": [
                        "intros x k dni ih ni.",
                        "VernacExtend",
                        "ec434b7cbf4e7734f9ac670cc83bf1ab6b144e56"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (ih (Decorated x k :: ni)).",
                        "VernacExtend",
                        "7b983a83d36bc5bdb483439d7db5f68e580d1e5f"
                    ]
                },
                {
                    "command": [
                        "rewrite (ih (Decorated x k :: NNil)).",
                        "VernacExtend",
                        "dd28f17ac7255bb1de7a6d9bcd1bdfedc45d6eb5"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "apply (app_ass (rev_app dni NNil) (Decorated x k :: NNil) ni).",
                        "VernacExtend",
                        "09740a0ac1e52a92a8b905f4cb48f01fb663dc88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_app_or_ni",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros x ni1 ni2 in_x.",
                        "VernacExtend",
                        "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
                    ]
                },
                {
                    "command": [
                        "apply in_app_or.",
                        "VernacExtend",
                        "2dc1f1786da43750c1353dfd339e825407d2b953"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_ni0_in_nini",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros x ni1 ni2 in_x.",
                        "VernacExtend",
                        "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_ni1_in_nini",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros x ni1 ni2 in_x.",
                        "VernacExtend",
                        "7ac5da7f86433c72b9bb2af96e6f4ca5b7be8fb1"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_ni_x_ni_rev",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros x x' ni1 ni2 in_ni_x_ni.",
                        "VernacExtend",
                        "6d8353d78bd68476baebe12667f091ad958211da"
                    ]
                },
                {
                    "command": [
                        "elim (in_app_or_ni x ni1 (x' :: ni2) in_ni_x_ni); clear in_ni_x_ni.",
                        "VernacExtend",
                        "e846602dfb0452871204f9ec8f7cc46abf56ac93"
                    ]
                },
                {
                    "command": [
                        "intros in_ni1; left; apply in_ni0_in_nini; assumption.",
                        "VernacExtend",
                        "bffefbf3f874f1db055e04461edeacca6187ef3c"
                    ]
                },
                {
                    "command": [
                        "intros in_ni2; inversion_clear in_ni2.",
                        "VernacExtend",
                        "9ccfe9c9f5e97f9e8607f5edfc732d37c75eb7d4"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; assumption.",
                        "VernacExtend",
                        "5955dba2342bcdccd27ef4f56635d3b4a5a3faa9"
                    ]
                },
                {
                    "command": [
                        "left; apply in_ni1_in_nini; assumption.",
                        "VernacExtend",
                        "6d15825cf91bb6e6eee91c0d0e19fc02b24b5fcc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_ni_x_ni_tail",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros x x' ni1 ni2 in_nini.",
                        "VernacExtend",
                        "0dfc53ccbe67b7747f942b55c7419ac9d4efff53"
                    ]
                },
                {
                    "command": [
                        "elim (in_app_or_ni x ni1 ni2 in_nini); clear in_nini.",
                        "VernacExtend",
                        "dae68db218380187e4ab82df99a53e3b41848ec4"
                    ]
                },
                {
                    "command": [
                        "intros in_ni1; apply in_ni0_in_nini; assumption.",
                        "VernacExtend",
                        "ced8c083e7aa65d4eeeee525e2c0b21c9659017e"
                    ]
                },
                {
                    "command": [
                        "intros in_ni2; apply in_ni1_in_nini; right; assumption.",
                        "VernacExtend",
                        "9448c8e903ca025dad3b082022a0b80ce11e4cf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_app_lemma0",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros dni; elim dni; clear dni.",
                        "VernacExtend",
                        "ecb79e51a7078d2d53919af556178b7bfffc1d82"
                    ]
                },
                {
                    "command": [
                        "intros ni; exists ni; trivial.",
                        "VernacExtend",
                        "15bb6b813f155fe98c94a27ff185c6d78e292596"
                    ]
                },
                {
                    "command": [
                        "intros x; case x; clear x.",
                        "VernacExtend",
                        "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
                    ]
                },
                {
                    "command": [
                        "intros n k dni ih ni.",
                        "VernacExtend",
                        "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
                    ]
                },
                {
                    "command": [
                        "apply (ih (Decorated n k :: ni)).",
                        "VernacExtend",
                        "a81a689d0801b6279ead4f9bdc93efd6f30c75aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_app_lemma1",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros dni; elim dni; clear dni.",
                        "VernacExtend",
                        "ecb79e51a7078d2d53919af556178b7bfffc1d82"
                    ]
                },
                {
                    "command": [
                        "intros ni; exists ni; trivial.",
                        "VernacExtend",
                        "15bb6b813f155fe98c94a27ff185c6d78e292596"
                    ]
                },
                {
                    "command": [
                        "intros x; case x; clear x.",
                        "VernacExtend",
                        "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
                    ]
                },
                {
                    "command": [
                        "intros n k dni ih ni.",
                        "VernacExtend",
                        "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
                    ]
                },
                {
                    "command": [
                        "elim (ih (Decorated n k :: ni)).",
                        "VernacExtend",
                        "baf33a1311d5f13a119698a80f17487288513f9b"
                    ]
                },
                {
                    "command": [
                        "intros dni_ni eq.",
                        "VernacExtend",
                        "4f3cfd2ec1f7460645cba214297966d74ca7b136"
                    ]
                },
                {
                    "command": [
                        "exists dni_ni; assumption.",
                        "VernacExtend",
                        "47624c026eb5ed786257e2c3d71db25c0200a3e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_app_lemma2",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros A dni; elim dni; clear dni.",
                        "VernacExtend",
                        "f4468fa6d40ea28acc9bbcf32c78e389ffcdb346"
                    ]
                },
                {
                    "command": [
                        "intros ni sk; apply (sk ni); trivial.",
                        "VernacExtend",
                        "e0cfdddaf878149497a1074517dc04c380b56575"
                    ]
                },
                {
                    "command": [
                        "intros x; case x; clear x.",
                        "VernacExtend",
                        "59a5488c1273c540ebb57d3d443b93d3e0f54a3d"
                    ]
                },
                {
                    "command": [
                        "intros n k dni ih ni.",
                        "VernacExtend",
                        "90b7846001aa89d73af1d6c0e4a1e9c50edd8f26"
                    ]
                },
                {
                    "command": [
                        "intros sk.",
                        "VernacExtend",
                        "19a13120943829f0bd9451692507b9ffedf4c38d"
                    ]
                },
                {
                    "command": [
                        "apply (ih (Decorated n k :: ni)).",
                        "VernacExtend",
                        "a81a689d0801b6279ead4f9bdc93efd6f30c75aa"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}