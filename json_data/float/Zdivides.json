{
    "filename": "Zdivides.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Omega.",
            "VernacRequire",
            "0481b56b468f7aa7f5517bbdc71f6985bb9f8b59"
        ],
        [
            "Require Export Paux.",
            "VernacRequire",
            "eb8f82d08d6f0ba6b4cd44c008ca5dbc202f4e81"
        ],
        [
            "Definition oZ1 (x : Option positive) := match x with | None => 0%Z | Some z => Zpos z end.",
            "VernacDefinition",
            "641e192d28ab9b3594f66208845a78417eeec963"
        ],
        [
            "Definition Zquotient (n m : Z) := match n, m with | Z0, _ => 0%Z | _, Z0 => 0%Z | Zpos x, Zpos y => match Pdiv x y with | (x, _) => oZ1 x end | Zneg x, Zneg y => match Pdiv x y with | (x, _) => oZ1 x end | Zpos x, Zneg y => match Pdiv x y with | (x, _) => (- oZ1 x)%Z end | Zneg x, Zpos y => match Pdiv x y with | (x, _) => (- oZ1 x)%Z end end.",
            "VernacDefinition",
            "3d9719c8018b98fa863f6ddc9fcf3269ed6cc564"
        ],
        [
            "Theorem inj_oZ1 : forall z, oZ1 z = Z_of_nat (oZ z).",
            "VernacStartTheoremProof",
            "7605d9842c6c24b9c8b46a3aab762e2193b759ef"
        ],
        [
            "intros z; case z; simpl in |- *; try (intros; apply sym_equal; apply inject_nat_convert; auto); auto.",
            "VernacExtend",
            "c9df0e3078a61f58ae39444a4dec4424433f2de6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zero_le_oZ : forall z, 0 <= oZ z.",
            "VernacStartTheoremProof",
            "f02e07f756607e537eeb48b73ac0f0d53bc68871"
        ],
        [
            "intros z; case z; simpl in |- *; auto with arith.",
            "VernacExtend",
            "d44182e5fb88b3162af0fbe8dbe568a8ef54a108"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zero_le_oZ: arith.",
            "VernacHints",
            "2d057fea834171f11dcb970c5ee09ec8f3cc8e33"
        ],
        [
            "Theorem ZquotientProp : forall m n : Z, n <> 0%Z -> ex (fun r : Z => m = (Zquotient m n * n + r)%Z /\\ (Zabs (Zquotient m n * n) <= Zabs m)%Z /\\ (Zabs r < Zabs n)%Z).",
            "VernacStartTheoremProof",
            "8f9b6f7d24f011481c130b77fefcaa70da909360"
        ],
        [
            "intros m n; unfold Zquotient in |- *; case n; simpl in |- *.",
            "VernacExtend",
            "7cdc42d7324c37880f27484042bdc7640e3013d8"
        ],
        [
            "intros H; case H; auto.",
            "VernacExtend",
            "0b36977cda16a9ec120d6463bb6c43bcda418cba"
        ],
        [
            "intros n' Hn'; case m; simpl in |- *; auto.",
            "VernacExtend",
            "5a14f9cc2a808cdb9c513be921394ae111031c80"
        ],
        [
            "exists 0%Z; repeat split; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "caee5fea3225108757954d90ea6bf285a081538b"
        ],
        [
            "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
            "VernacExtend",
            "fa6add7ac489facac5e50c04f92bd074c68f2474"
        ],
        [
            "intros q r (H1, H2); exists (oZ1 r); repeat (split; auto with zarith).",
            "VernacExtend",
            "e443e94f0a417596f223b4de1074789e88917826"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
            "VernacExtend",
            "21c37e0f110edd3631b6dcfa357fc82062f998e6"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite inj_plus; rewrite inj_mult.",
            "VernacExtend",
            "8708e2ef80311dc41a0e33445af7423a7eed649d"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
            "VernacExtend",
            "4b178df8ac415c287d8effc43fc9f4f85bb29910"
        ],
        [
            "repeat rewrite inj_oZ1; auto.",
            "VernacExtend",
            "0ca0f8bd17911368a35d6410d0c8cac436ba34fa"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
            "VernacExtend",
            "4754574443e6325cbc47305394182ed6603d456e"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
            "VernacExtend",
            "fa6add7ac489facac5e50c04f92bd074c68f2474"
        ],
        [
            "intros q r (H1, H2); exists (- oZ1 r)%Z; repeat (split; auto with zarith).",
            "VernacExtend",
            "adbedc033a0d780f3adbd0fd583f5930e115f266"
        ],
        [
            "replace (Zneg m') with (- Zpos m')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "548d0d0a749562194bef1e381117c2bb53333a7e"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
            "VernacExtend",
            "21c37e0f110edd3631b6dcfa357fc82062f998e6"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite inj_plus; rewrite inj_mult.",
            "VernacExtend",
            "8708e2ef80311dc41a0e33445af7423a7eed649d"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
            "VernacExtend",
            "4b178df8ac415c287d8effc43fc9f4f85bb29910"
        ],
        [
            "repeat rewrite inj_oZ1; auto with zarith.",
            "VernacExtend",
            "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite <- Zopp_mult_distr_l; rewrite Zabs_Zopp.",
            "VernacExtend",
            "62117c2507bf0a83500aca1543c7ce6672220e47"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
            "VernacExtend",
            "4754574443e6325cbc47305394182ed6603d456e"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "rewrite Zabs_Zopp.",
            "VernacExtend",
            "0b6e22e959fb2abddb6c6471984bd9b2c0a2b861"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "intros n' Hn'; case m; simpl in |- *; auto.",
            "VernacExtend",
            "5a14f9cc2a808cdb9c513be921394ae111031c80"
        ],
        [
            "exists 0%Z; repeat split; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "caee5fea3225108757954d90ea6bf285a081538b"
        ],
        [
            "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
            "VernacExtend",
            "fa6add7ac489facac5e50c04f92bd074c68f2474"
        ],
        [
            "intros q r (H1, H2); exists (oZ1 r); repeat (split; auto with zarith).",
            "VernacExtend",
            "e443e94f0a417596f223b4de1074789e88917826"
        ],
        [
            "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
            "VernacExtend",
            "21c37e0f110edd3631b6dcfa357fc82062f998e6"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite inj_plus; rewrite inj_mult.",
            "VernacExtend",
            "8708e2ef80311dc41a0e33445af7423a7eed649d"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
            "VernacExtend",
            "4b178df8ac415c287d8effc43fc9f4f85bb29910"
        ],
        [
            "repeat rewrite inj_oZ1; auto with zarith.",
            "VernacExtend",
            "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
        ],
        [
            "rewrite Zmult_opp_opp.",
            "VernacExtend",
            "56a44203d99d67b0575659085a68c3ba69641d99"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
            "VernacExtend",
            "4754574443e6325cbc47305394182ed6603d456e"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
            "VernacExtend",
            "fa6add7ac489facac5e50c04f92bd074c68f2474"
        ],
        [
            "intros q r (H1, H2); exists (- oZ1 r)%Z; repeat (split; auto with zarith).",
            "VernacExtend",
            "adbedc033a0d780f3adbd0fd583f5930e115f266"
        ],
        [
            "replace (Zneg m') with (- Zpos m')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "548d0d0a749562194bef1e381117c2bb53333a7e"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
            "VernacExtend",
            "21c37e0f110edd3631b6dcfa357fc82062f998e6"
        ],
        [
            "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite inj_plus; rewrite inj_mult.",
            "VernacExtend",
            "8708e2ef80311dc41a0e33445af7423a7eed649d"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
            "VernacExtend",
            "4b178df8ac415c287d8effc43fc9f4f85bb29910"
        ],
        [
            "repeat rewrite inj_oZ1; auto with zarith.",
            "VernacExtend",
            "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
            "VernacExtend",
            "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
        ],
        [
            "rewrite <- Zopp_mult_distr_r; rewrite Zabs_Zopp.",
            "VernacExtend",
            "2d371b0d191572f06c17b579b64c770f9dde5a8e"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
            "VernacExtend",
            "4754574443e6325cbc47305394182ed6603d456e"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "rewrite Zabs_Zopp.",
            "VernacExtend",
            "0b6e22e959fb2abddb6c6471984bd9b2c0a2b861"
        ],
        [
            "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "09d08f6aa2499c7f51221962993d4f737215b6b5"
        ],
        [
            "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
            "VernacExtend",
            "301a2661d4a05b09b67df6dee5762a41bdd028e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZquotientPos : forall z1 z2 : Z, (0 <= z1)%Z -> (0 <= z2)%Z -> (0 <= Zquotient z1 z2)%Z.",
            "VernacStartTheoremProof",
            "f0cf7c96cd7f09ac5d77105d6995392be6f2ddae"
        ],
        [
            "intros z1 z2 H H0; case (Z_eq_dec z2 0); intros Z1.",
            "VernacExtend",
            "edfd66a53440d764763b1456b198d4d471f481b8"
        ],
        [
            "rewrite Z1; red in |- *; case z1; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "6d3540d1b608aef4289048ad4e9ba7f09b1b7c99"
        ],
        [
            "case (ZquotientProp z1 z2); auto; intros r (H1, (H2, H3)).",
            "VernacExtend",
            "015843c30c26f5901e07dd2e62251fa39a5151a8"
        ],
        [
            "case (Zle_or_lt 0 (Zquotient z1 z2)); auto; intros Z2.",
            "VernacExtend",
            "a5d3f8800187f1db3302d793787868cdaf07cce5"
        ],
        [
            "Contradict H3; apply Zle_not_lt.",
            "VernacExtend",
            "8c6aa4368b886ad0968f7dece452c5c4acb25b72"
        ],
        [
            "replace r with (z1 - Zquotient z1 z2 * z2)%Z; [ idtac | pattern z1 at 1 in |- *; rewrite H1; ring ].",
            "VernacExtend",
            "3905b8683a242321e74661ee909aaa793a32c7f6"
        ],
        [
            "repeat rewrite Zabs_eq; auto.",
            "VernacExtend",
            "f0eeb17597fcafe4740de3c7894aeb9f7976dfad"
        ],
        [
            "pattern z2 at 1 in |- *; replace z2 with (0 + 1 * z2)%Z; [ idtac | ring ].",
            "VernacExtend",
            "c005c8b7d87b76337ee3707828fa018555cc73ca"
        ],
        [
            "unfold Zminus in |- *; apply Zle_trans with (z1 + 1 * z2)%Z; auto with zarith.",
            "VernacExtend",
            "00eab760b43e92b9750b4855b030310b103778e9"
        ],
        [
            "apply Zplus_le_compat_l.",
            "VernacExtend",
            "4450bbafdb2180fd74d1eec9b3c2923119b209d4"
        ],
        [
            "rewrite Zopp_mult_distr_l.",
            "VernacExtend",
            "00ee4fd3b4824726846a09f1e0459c68fcb801ea"
        ],
        [
            "apply Zle_Zmult_comp_r; auto with zarith.",
            "VernacExtend",
            "6df3ad18f4910f873061ef6fd03b5647e45f11b6"
        ],
        [
            "unfold Zminus in |- *; rewrite Zopp_mult_distr_l; auto with zarith.",
            "VernacExtend",
            "277956b136b2a596154198c186f73a188808dcdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zdivides (n m : Z) := exists q : Z, n = (m * q)%Z.",
            "VernacDefinition",
            "f6add066a25e1d5276f428e147bf1730217c6361"
        ],
        [
            "Theorem ZdividesZquotient : forall n m : Z, m <> 0%Z -> Zdivides n m -> n = (Zquotient n m * m)%Z.",
            "VernacStartTheoremProof",
            "57450900344d89cc49ec00a26569ffa0d96d64b3"
        ],
        [
            "intros n m H' H'0.",
            "VernacExtend",
            "973c8a068842e5992eab78b17c802393359cd18e"
        ],
        [
            "case H'0; intros z1 Hz1.",
            "VernacExtend",
            "4b0f09f296cf17b1773d2be9b6b2b2c4b68e3a6c"
        ],
        [
            "case (ZquotientProp n m); auto; intros z2 (Hz2, (Hz3, Hz4)).",
            "VernacExtend",
            "edb0aeb8fc1392279b8d8024c9ecb39c1ed543a0"
        ],
        [
            "cut (z2 = 0%Z); [ intros H1; pattern n at 1 in |- *; rewrite Hz2; rewrite H1; ring | idtac ].",
            "VernacExtend",
            "a9b81866fbc5fcc028b4dded6fda386f662423f1"
        ],
        [
            "cut (z2 = ((z1 - Zquotient n m) * m)%Z); [ intros H2 | idtac ].",
            "VernacExtend",
            "26d8265f4082d547574364ed314ad8a07bd5febb"
        ],
        [
            "case (Z_eq_dec (z1 - Zquotient n m) 0); intros H3.",
            "VernacExtend",
            "af5c91a7721871ca582c83d058b81a4fd3e5b4ad"
        ],
        [
            "rewrite H2; rewrite H3; ring.",
            "VernacExtend",
            "ba48611e1847d4a49e4a0c08a51af8d58252fe0b"
        ],
        [
            "Contradict Hz4.",
            "VernacExtend",
            "7e2d9fc0ebc7b70e52d2b8ed1ad2b54b4608d3e5"
        ],
        [
            "replace (Zabs m) with (1 * Zabs m)%Z; [ idtac | ring ].",
            "VernacExtend",
            "72c533530aa718787618d849ed66d5ff75f9a82f"
        ],
        [
            "apply Zle_not_lt; rewrite H2.",
            "VernacExtend",
            "9ccd4b9127066d1d735036af99539fc393298ca6"
        ],
        [
            "rewrite Zabs_Zmult; apply Zle_Zmult_comp_r; auto with zarith.",
            "VernacExtend",
            "b053e62c98d824003a4920d605d12676404938e9"
        ],
        [
            "generalize H3; case (z1 - Zquotient n m)%Z; try (intros H1; case H1; auto; fail); simpl in |- *; intros p; case p; simpl in |- *; auto; intros; red in |- *; simpl in |- *; auto; red in |- *; intros; discriminate.",
            "VernacExtend",
            "c73e5b0f51362877fd2bfd37a5e91e0e3e84216f"
        ],
        [
            "rewrite Zmult_minus_distr_r; rewrite (Zmult_comm z1); rewrite <- Hz1; (pattern n at 1 in |- *; rewrite Hz2); ring.",
            "VernacExtend",
            "192d18f5d3b35728c5d586147658186169b1126c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZdividesZquotientInv : forall n m : Z, n = (Zquotient n m * m)%Z -> Zdivides n m.",
            "VernacStartTheoremProof",
            "14a44656c3f975d3355f25981c42128ef3c0248f"
        ],
        [
            "intros n m H'; red in |- *.",
            "VernacExtend",
            "5e8cce2967546dbc2cb3bbfb565ae16adabcc682"
        ],
        [
            "exists (Zquotient n m); auto.",
            "VernacExtend",
            "bb294c26decd93bd3e51affb0684a112acea53d5"
        ],
        [
            "pattern n at 1 in |- *; rewrite H'; auto with zarith.",
            "VernacExtend",
            "a19b2800c7aff9282f29b38d118b205c41e0f219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZdividesMult : forall n m p : Z, Zdivides n m -> Zdivides (p * n) (p * m).",
            "VernacStartTheoremProof",
            "3c5dfc5cb687ac2b076def23ddf1d4c061d07818"
        ],
        [
            "intros n m p H'; red in H'.",
            "VernacExtend",
            "7f7d7b5f744d427e89cfeffb135994e77140c023"
        ],
        [
            "elim H'; intros q E.",
            "VernacExtend",
            "74a1175c510bcf2857607df5fc390c189f55ddc6"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "exists q.",
            "VernacExtend",
            "4b16c752cd7c11bacf99e556cf412cae1f21d016"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zeq_mult_simpl : forall a b c : Z, c <> 0%Z -> (a * c)%Z = (b * c)%Z -> a = b.",
            "VernacStartTheoremProof",
            "8c2d72eb865b6d3eed38db3476e609cff8177699"
        ],
        [
            "intros a b c H H0.",
            "VernacExtend",
            "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
        ],
        [
            "case (Zle_or_lt c 0); intros Zl1.",
            "VernacExtend",
            "72f4d7cb02d9c29b55008cbebff70754392d5865"
        ],
        [
            "apply Zle_antisym; apply Zmult_le_reg_r with (p := (- c)%Z); try apply Zlt_gt; auto with zarith; repeat rewrite <- Zopp_mult_distr_r; rewrite H0; auto with zarith.",
            "VernacExtend",
            "4407703f238cfa70c84d77d1a1ced51eaab51c83"
        ],
        [
            "apply Zle_antisym; apply Zmult_le_reg_r with (p := c); try apply Zlt_gt; auto with zarith; rewrite H0; auto with zarith.",
            "VernacExtend",
            "9ef9727308b63792a4a76c39527b607c66b496e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZdividesDiv : forall n m p : Z, p <> 0%Z -> Zdivides (p * n) (p * m) -> Zdivides n m.",
            "VernacStartTheoremProof",
            "f993abba6acfdb99beafacaca435d02d637df7e7"
        ],
        [
            "intros n m p H' H'0.",
            "VernacExtend",
            "3449bf2df5d2e6795825a300774965cb19abaac7"
        ],
        [
            "case H'0; intros q E.",
            "VernacExtend",
            "a4a5429f423f39637c7d4431189a9bc432ff5dde"
        ],
        [
            "exists q.",
            "VernacExtend",
            "4b16c752cd7c11bacf99e556cf412cae1f21d016"
        ],
        [
            "apply Zeq_mult_simpl with (c := p); auto.",
            "VernacExtend",
            "ef37ee74146e35b50b336749771bffd10b628635"
        ],
        [
            "rewrite (Zmult_comm n); rewrite E; ring.",
            "VernacExtend",
            "2e0a30591a7a19fd3b4be42d269ce9c9caea6e3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ZdividesP : forall n m : Z, {Zdivides n m} + {~ Zdivides n m}.",
            "VernacDefinition",
            "fbd08c5872881d64a806a0b233cb7afe566e042a"
        ],
        [
            "intros n m; case m.",
            "VernacExtend",
            "589fb629dcd237ea746ab132c4167048279c7bf0"
        ],
        [
            "case n.",
            "VernacExtend",
            "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
        ],
        [
            "left; red in |- *; exists 0%Z; auto with zarith.",
            "VernacExtend",
            "7b62c1cb469a56dfd61e029bb749b6db7a22a4ca"
        ],
        [
            "intros p; right; red in |- *; intros H; case H; simpl in |- *; intros f H1; discriminate.",
            "VernacExtend",
            "6606217a1551dc5c83c457971c1cd19eb3b372ca"
        ],
        [
            "intros p; right; red in |- *; intros H; case H; simpl in |- *; intros f H1; discriminate.",
            "VernacExtend",
            "6606217a1551dc5c83c457971c1cd19eb3b372ca"
        ],
        [
            "intros p; generalize (Z_eq_bool_correct (Zquotient n (Zpos p) * Zpos p) n); case (Z_eq_bool (Zquotient n (Zpos p) * Zpos p) n); intros H1.",
            "VernacExtend",
            "48ef91632c9c73f5a518ab65db198164f5123f56"
        ],
        [
            "left; apply ZdividesZquotientInv; auto.",
            "VernacExtend",
            "0df327b546e2bc99a2d7fadba135c00bba910884"
        ],
        [
            "right; Contradict H1; apply sym_equal; apply ZdividesZquotient; auto.",
            "VernacExtend",
            "b44501effa8150062f5a48df69ec68237d73f2e9"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "intros p; generalize (Z_eq_bool_correct (Zquotient n (Zneg p) * Zneg p) n); case (Z_eq_bool (Zquotient n (Zneg p) * Zneg p) n); intros H1.",
            "VernacExtend",
            "7a1dd13e00249b56980841479766dbb94e99de4f"
        ],
        [
            "left; apply ZdividesZquotientInv; auto.",
            "VernacExtend",
            "0df327b546e2bc99a2d7fadba135c00bba910884"
        ],
        [
            "right; Contradict H1; apply sym_equal; apply ZdividesZquotient; auto.",
            "VernacExtend",
            "b44501effa8150062f5a48df69ec68237d73f2e9"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem Zquotient1 : forall m : Z, Zquotient m 1 = m.",
            "VernacStartTheoremProof",
            "4fcd70c879a1d2c585d148734cfc22227ea52477"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "case (ZquotientProp m 1); auto.",
            "VernacExtend",
            "099786779cfb08bc2978c0c8c8b41f8841f11fb2"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "intros z (H1, (H2, H3)).",
            "VernacExtend",
            "3ad5ffb7e5545efed129a6c6a05a21e8c4d39a30"
        ],
        [
            "pattern m at 2 in |- *; rewrite H1; replace z with 0%Z; try ring.",
            "VernacExtend",
            "eb526959525c1c04c90bcd5104ae958c16bee1f4"
        ],
        [
            "generalize H3; case z; simpl in |- *; auto; intros p; case p; unfold Zlt in |- *; simpl in |- *; intros; discriminate.",
            "VernacExtend",
            "786f642c9d6944e13deaa51732b5d1767a4ca612"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zdivides1 : forall m : Z, Zdivides m 1.",
            "VernacStartTheoremProof",
            "5f2cb3a12c484b7b42f818b340d5e4abca5287cb"
        ],
        [
            "intros m; exists m; auto with zarith.",
            "VernacExtend",
            "53890e4ee7b1e490014d6ff35667ff57353d6f00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_eq_case : forall z1 z2 : Z, Zabs z1 = Zabs z2 -> z1 = z2 \\/ z1 = (- z2)%Z.",
            "VernacStartTheoremProof",
            "93a2882356c7f835049714b0cea8d6f7d6cebb97"
        ],
        [
            "intros z1 z2; case z1; case z2; simpl in |- *; auto; try (intros; discriminate); intros p1 p2 H1; injection H1; (intros H2; rewrite H2); auto.",
            "VernacExtend",
            "480058310db2be7dcb607e66fb05eca01c712a17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_tri : forall z1 z2 : Z, (Zabs (z1 + z2) <= Zabs z1 + Zabs z2)%Z.",
            "VernacStartTheoremProof",
            "ba9c5e017ad5a743ca25abf615a3c5aa9d590979"
        ],
        [
            "intros z1 z2; case z1; case z2; try (simpl in |- *; auto with zarith; fail).",
            "VernacExtend",
            "965111ef50cd509e5285b1624b4133d2cef1d3b4"
        ],
        [
            "intros p1 p2; apply Zabs_intro with (P := fun x => (x <= Zabs (Zpos p2) + Zabs (Zneg p1))%Z); try rewrite Zopp_plus_distr; auto with zarith.",
            "VernacExtend",
            "30f3c8d4767a41ce1ca48fe9c273a14eae6e44c9"
        ],
        [
            "intros p1 p2; apply Zabs_intro with (P := fun x => (x <= Zabs (Zpos p2) + Zabs (Zneg p1))%Z); try rewrite Zopp_plus_distr; auto with zarith.",
            "VernacExtend",
            "30f3c8d4767a41ce1ca48fe9c273a14eae6e44c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zabs_tri: zarith.",
            "VernacHints",
            "e25012ad588eba22a6c7c8f62d4114185628599d"
        ],
        [
            "Theorem ZquotientUnique : forall m n q r : Z, n <> 0%Z -> m = (q * n + r)%Z -> (Zabs (q * n) <= Zabs m)%Z -> (Zabs r < Zabs n)%Z -> q = Zquotient m n.",
            "VernacStartTheoremProof",
            "e307808a1a3514f663ac65e44dfd24b7a5b2126a"
        ],
        [
            "intros m n q r H' H'0 H'1 H'2.",
            "VernacExtend",
            "a6c5b8e63ca9b284d3e4811c806b53eddb4e3a16"
        ],
        [
            "case (ZquotientProp m n); auto; intros z (H0, (H1, H2)).",
            "VernacExtend",
            "6708e263250bbf3e5092d6f8b6b1087085c4303c"
        ],
        [
            "case (Zle_or_lt (Zabs q) (Zabs (Zquotient m n))); intros Zl1; auto with arith.",
            "VernacExtend",
            "8fc6637cedcace4291a6b63dee10938036785a68"
        ],
        [
            "case (Zle_lt_or_eq _ _ Zl1); clear Zl1; intros Zl1; auto with arith.",
            "VernacExtend",
            "ef2653df5bb8be60efae93037d9e0b791f3f26b4"
        ],
        [
            "Contradict H1; apply Zlt_not_le.",
            "VernacExtend",
            "a1fb82ff2db233160cc2f79811b1af01e693faa4"
        ],
        [
            "pattern m at 1 in |- *; rewrite H'0.",
            "VernacExtend",
            "b28cc1fa015772b1b8218a7396fb2328d458627e"
        ],
        [
            "apply Zle_lt_trans with (Zabs (q * n) + Zabs r)%Z; auto with zarith.",
            "VernacExtend",
            "54844752d8f3c47096778341b12e00c8c9ce899b"
        ],
        [
            "apply Zlt_le_trans with (Zabs (q * n) + Zabs n)%Z; auto with zarith.",
            "VernacExtend",
            "05a1be648ebd6d05a7d253cd8b9343085436ed3e"
        ],
        [
            "repeat rewrite Zabs_Zmult.",
            "VernacExtend",
            "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
        ],
        [
            "replace (Zabs q * Zabs n + Zabs n)%Z with (Zsucc (Zabs q) * Zabs n)%Z; [ auto with zarith | unfold Zsucc in |- *; ring ].",
            "VernacExtend",
            "e74d312a1f391d477daaa4215bab75453eb5f7fd"
        ],
        [
            "case (Zabs_eq_case _ _ Zl1); auto.",
            "VernacExtend",
            "3c602dca6d3e2ae7fb400302c472b261d3aaa6c7"
        ],
        [
            "intros H; (cut (Zquotient m n = 0%Z); [ intros H3; rewrite H; repeat rewrite H3; simpl in |- *; auto | idtac ]).",
            "VernacExtend",
            "4d919034ff1ba170ff28b7aeba461e0640be2722"
        ],
        [
            "cut (Zabs (Zquotient m n) < 1)%Z.",
            "VernacExtend",
            "91a288b65fa15445bf4f57bffd3505578c21a299"
        ],
        [
            "case (Zquotient m n); simpl in |- *; auto; intros p; case p; unfold Zlt in |- *; simpl in |- *; intros; discriminate.",
            "VernacExtend",
            "41a688e1ecb2faf42f2161915df772d92f6ed73c"
        ],
        [
            "apply Zlt_mult_simpl_l with (c := Zabs n); auto with zarith.",
            "VernacExtend",
            "27ebba2149de305cd95c7a15d3fb27970295b096"
        ],
        [
            "case (Zle_lt_or_eq 0 (Zabs n)); auto with zarith.",
            "VernacExtend",
            "1e30a98ac4fd2b74dfe0f276237c42e4f2a1a72e"
        ],
        [
            "intros H3; case H'; auto.",
            "VernacExtend",
            "2b87e96a6c61363dfe1e40e2b9c3d245a0e3dc5a"
        ],
        [
            "generalize H3; case n; simpl in |- *; auto; intros; discriminate.",
            "VernacExtend",
            "ce58e37ef8816f5e2e3b5311651b7bd31bc3f5d8"
        ],
        [
            "rewrite <- Zabs_Zmult; rewrite (Zmult_comm n).",
            "VernacExtend",
            "9290641bf16a1c2d86d87f85d58dda03d9bc7f2c"
        ],
        [
            "replace (Zabs n * 1)%Z with (Zabs n); [ idtac | ring ].",
            "VernacExtend",
            "72e11efff5aae3fa3d6f833ac7bd2b5465f30f59"
        ],
        [
            "apply Zle_lt_trans with (1 := H1).",
            "VernacExtend",
            "66e6346896352d13d79a8d87e26f78675edd4961"
        ],
        [
            "apply Zlt_mult_simpl_l with (c := (1 + 1)%Z); auto with zarith.",
            "VernacExtend",
            "2a7b6b012236609164b72c737b3ad16b9215a665"
        ],
        [
            "replace ((1 + 1) * Zabs m)%Z with (Zabs (m + m)).",
            "VernacExtend",
            "34194bc9302c484fa570e6d014c04ff003cc07dd"
        ],
        [
            "replace ((1 + 1) * Zabs n)%Z with (Zabs n + Zabs n)%Z; [ idtac | ring ].",
            "VernacExtend",
            "95475b65bab1111b23437481a1b35d0b894a782f"
        ],
        [
            "pattern m at 1 in |- *; rewrite H'0; rewrite H0; rewrite H.",
            "VernacExtend",
            "1cd2a9d778db932cc52a132ef6bba648f5bae3de"
        ],
        [
            "replace (- Zquotient m n * n + r + (Zquotient m n * n + z))%Z with (r + z)%Z; [ idtac | ring ].",
            "VernacExtend",
            "df245a8d5e768794f2939231aa255d9036e60979"
        ],
        [
            "apply Zle_lt_trans with (Zabs r + Zabs z)%Z; auto with zarith.",
            "VernacExtend",
            "6459f077e928df26662690667d7ab60294bb82ff"
        ],
        [
            "rewrite <- (Zabs_eq (1 + 1)); auto with zarith.",
            "VernacExtend",
            "ac6838e9fd8ebb6f8c1466806cdd34667dcdc757"
        ],
        [
            "rewrite <- Zabs_Zmult; apply f_equal with (f := Zabs); auto with zarith.",
            "VernacExtend",
            "5cd12cac1674a7ca9f36f69c609015cfe7cf2fe1"
        ],
        [
            "Contradict H'1; apply Zlt_not_le.",
            "VernacExtend",
            "0d55f77922b3a08b197b8fcf3586e3c598ad988e"
        ],
        [
            "pattern m at 1 in |- *; rewrite H0.",
            "VernacExtend",
            "102e359f095d3f3e1ed00fa243915fd808499592"
        ],
        [
            "apply Zle_lt_trans with (Zabs (Zquotient m n * n) + Zabs z)%Z; auto with zarith.",
            "VernacExtend",
            "eb2dc732c30e470275148af2852497276fc7fb9b"
        ],
        [
            "apply Zlt_le_trans with (Zabs (Zquotient m n * n) + Zabs n)%Z; auto with zarith.",
            "VernacExtend",
            "93ffcea87eb7e573511fb264668afbe13d287da7"
        ],
        [
            "repeat rewrite Zabs_Zmult.",
            "VernacExtend",
            "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
        ],
        [
            "replace (Zabs (Zquotient m n) * Zabs n + Zabs n)%Z with (Zsucc (Zabs (Zquotient m n)) * Zabs n)%Z; [ auto with zarith | unfold Zsucc in |- *; ring ].",
            "VernacExtend",
            "16e22410ca09168e14aa03111c2fe2f2ef37684b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZquotientZopp : forall m n : Z, Zquotient (- m) n = (- Zquotient m n)%Z.",
            "VernacStartTheoremProof",
            "0f616be50b93f43111d19714b6863db1d929987f"
        ],
        [
            "intros m n; case (Z_eq_dec n 0); intros Z1.",
            "VernacExtend",
            "17b680e8f4832bc7f325652e041fd505b5237e27"
        ],
        [
            "rewrite Z1; unfold Zquotient in |- *; case n; case m; simpl in |- *; auto.",
            "VernacExtend",
            "beb1ebdd312c03f1c6bb586b14ef46523142e601"
        ],
        [
            "case (ZquotientProp m n); auto; intros r1 (H'2, (H'3, H'4)); auto with zarith.",
            "VernacExtend",
            "92b3bf9560816b8e5f604b043b7260698d95a9c2"
        ],
        [
            "apply sym_equal; apply ZquotientUnique with (q := (- Zquotient m n)%Z) (r := (- r1)%Z); auto.",
            "VernacExtend",
            "4b1827f51760bab016bef4d884ae47aff1483061"
        ],
        [
            "pattern m at 1 in |- *; rewrite H'2; ring.",
            "VernacExtend",
            "a11e95ea5dc83eb646da9012f6d24f222ff1e138"
        ],
        [
            "rewrite <- Zopp_mult_distr_l; repeat rewrite Zabs_Zopp; auto.",
            "VernacExtend",
            "ed9fcb4579edf7c8b3e7bfb08778795e5e0cf21e"
        ],
        [
            "rewrite Zabs_Zopp; auto.",
            "VernacExtend",
            "85ad0cb0c1339b6115c9e2b754520f91b042d0ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZquotientMonotone : forall n m q : Z, (Zabs n <= Zabs m)%Z -> (Zabs (Zquotient n q) <= Zabs (Zquotient m q))%Z.",
            "VernacStartTheoremProof",
            "987526f4d01c9d598a630fa0b0a18aa6bdfbf100"
        ],
        [
            "intros n m q H; case (Zle_lt_or_eq _ _ H); intros Z0.",
            "VernacExtend",
            "d1b4a9c168cb167e7156edca963745d778718617"
        ],
        [
            "case (Z_eq_dec q 0); intros Z1.",
            "VernacExtend",
            "d41dd51455b5541e49a897d946aefb16c32f2f3e"
        ],
        [
            "rewrite Z1; unfold Zquotient in |- *; case n; case m; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "60154705ffe66dfa5280feff962c9073d53c0002"
        ],
        [
            "case (Zle_or_lt (Zabs (Zquotient n q)) (Zabs (Zquotient m q))); auto; intros H'1.",
            "VernacExtend",
            "18d7dc6920ff1b2e382e977f1bda540229129026"
        ],
        [
            "case (ZquotientProp m q); auto; intros r1 (H'2, (H'3, H'4)); auto with zarith.",
            "VernacExtend",
            "76c939d3badbb215ba923d7cee21b21a7cec06c1"
        ],
        [
            "case (ZquotientProp n q); auto; intros r2 (H'5, (H'6, H'7)); auto with zarith.",
            "VernacExtend",
            "d649c6ad8080d4d557361dd3b275e00133fba823"
        ],
        [
            "Contradict H'6.",
            "VernacExtend",
            "c1e31a560fe987187f755a0ab9aab1a232ee370d"
        ],
        [
            "apply Zlt_not_le.",
            "VernacExtend",
            "f50dda740686f871b63754e02667d404d580866b"
        ],
        [
            "apply Zlt_le_trans with (1 := Z0).",
            "VernacExtend",
            "9445052e77f03aec56f265abe2d6787ac73ffabe"
        ],
        [
            "rewrite H'2.",
            "VernacExtend",
            "884e4d7bc650f9624ecf7e3155e0da90d9130a00"
        ],
        [
            "apply Zle_trans with (Zabs (Zquotient m q * q) + Zabs r1)%Z; auto with zarith.",
            "VernacExtend",
            "b1f9fba34f0d2026100eb1a365b38bf7ba6bc3ea"
        ],
        [
            "apply Zle_trans with (Zabs (Zquotient m q * q) + Zabs q)%Z; auto with zarith.",
            "VernacExtend",
            "785bf7849dc76e29d365ea1e8193755660953544"
        ],
        [
            "repeat rewrite Zabs_Zmult.",
            "VernacExtend",
            "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
        ],
        [
            "replace (Zabs (Zquotient m q) * Zabs q + Zabs q)%Z with (Zsucc (Zabs (Zquotient m q)) * Zabs q)%Z; [ idtac | unfold Zsucc in |- *; ring ].",
            "VernacExtend",
            "e2c9d7b5453c9db8f673fd84da291d2921ad9f77"
        ],
        [
            "cut (0 < Zabs q)%Z; auto with zarith.",
            "VernacExtend",
            "8640b52147a03ac40efae8169d9ddbeaca5edbde"
        ],
        [
            "case (Zle_lt_or_eq 0 (Zabs q)); auto with zarith.",
            "VernacExtend",
            "ee03cd973272c6a9bfa17e2c140b2d77783bbad7"
        ],
        [
            "intros H'6; case Z1; auto.",
            "VernacExtend",
            "8b9ec1e1aef98bcac94758aa3279d1d71c9d261d"
        ],
        [
            "generalize H'6; case q; simpl in |- *; auto; intros; discriminate.",
            "VernacExtend",
            "77b4178958f068727134bcff9f200346b961e88b"
        ],
        [
            "case (Zabs_eq_case _ _ Z0); intros Z1; rewrite Z1; auto with zarith.",
            "VernacExtend",
            "238c8ff9de33ce7e92cb4c46f328b0bd063ade28"
        ],
        [
            "rewrite ZquotientZopp; rewrite Zabs_Zopp; auto with zarith.",
            "VernacExtend",
            "df1fb7379f5089360fa372297ebff9b569b57781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem NotDividesDigit : forall r v : Z, (1 < r)%Z -> v <> 0%Z -> ~ Zdivides v (Zpower_nat r (digit r v)).",
            "VernacStartTheoremProof",
            "24a71666cad50e6dbddba5eb21e308c01c3703b0"
        ],
        [
            "intros r v H H'; red in |- *; intros H'0; case H'0; intros q E.",
            "VernacExtend",
            "6fadea091922936fa3943145db582aae20fe7f86"
        ],
        [
            "absurd (Zabs v < Zpower_nat r (digit r v))%Z; auto with zarith.",
            "VernacExtend",
            "923be3a12dca20babc555a5525f238f1c5a48e47"
        ],
        [
            "apply Zle_not_lt.",
            "VernacExtend",
            "a635904a634172283c98f3792d1f8261c5710c4f"
        ],
        [
            "case (Z_eq_dec q 0); intros Z1.",
            "VernacExtend",
            "d41dd51455b5541e49a897d946aefb16c32f2f3e"
        ],
        [
            "case H'; rewrite E; rewrite Z1; ring.",
            "VernacExtend",
            "95ec44a41975b7fb66d737f6b6d900e664004307"
        ],
        [
            "pattern v at 2 in |- *; rewrite E.",
            "VernacExtend",
            "f37124643045538fde35c41f608460b3277a4f37"
        ],
        [
            "rewrite Zabs_Zmult.",
            "VernacExtend",
            "f459c70d0601b9eab86bcf62dfb70a911d8ba871"
        ],
        [
            "pattern (Zpower_nat r (digit r v)) at 1 in |- *; replace (Zpower_nat r (digit r v)) with (Zpower_nat r (digit r v) * 1)%Z; [ idtac | ring ].",
            "VernacExtend",
            "6992153b271662ea0694557d6297101578bcfbf5"
        ],
        [
            "rewrite (fun x y => Zabs_eq (Zpower_nat x y)); auto with zarith.",
            "VernacExtend",
            "ad292d6ea0cac532a2fad5ff6035fa2d39404ba2"
        ],
        [
            "apply Zle_Zmult_comp_l; auto with zarith.",
            "VernacExtend",
            "0a442d3268531835feca11bf21b34ab2eb26341b"
        ],
        [
            "generalize Z1; case q; simpl in |- *; try (intros H1; case H1; auto; fail); intros p; (case p; unfold Zle in |- *; simpl in |- *; intros; red in |- *; intros; discriminate).",
            "VernacExtend",
            "12466c828401581071b90b8ab3dad911d835802d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZDividesLe : forall n m : Z, n <> 0%Z -> Zdivides n m -> (Zabs m <= Zabs n)%Z.",
            "VernacStartTheoremProof",
            "ee6038907261353c81d5a68aa679aab3db75d5fd"
        ],
        [
            "intros n m H' H'0; case H'0; intros q E; rewrite E.",
            "VernacExtend",
            "92983f72f9914d7c48198f0573f741a88d7496c7"
        ],
        [
            "rewrite Zabs_Zmult.",
            "VernacExtend",
            "f459c70d0601b9eab86bcf62dfb70a911d8ba871"
        ],
        [
            "pattern (Zabs m) at 1 in |- *; replace (Zabs m) with (Zabs m * 1)%Z; [ idtac | ring ].",
            "VernacExtend",
            "bc3b91b47eed356bfe11aa9141df9ba6b44fd5d2"
        ],
        [
            "apply Zle_Zmult_comp_l; auto with zarith.",
            "VernacExtend",
            "0a442d3268531835feca11bf21b34ab2eb26341b"
        ],
        [
            "generalize E H'; case q; simpl in |- *; auto; try (intros H1 H2; case H2; rewrite H1; ring; fail); intros p; case p; unfold Zle in |- *; simpl in |- *; intros; red in |- *; discriminate.",
            "VernacExtend",
            "c52e9c70dda3554e1229fdd1e4850c73bad215e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zquotient_mult_comp : forall m n p : Z, p <> 0%Z -> Zquotient (m * p) (n * p) = Zquotient m n.",
            "VernacStartTheoremProof",
            "9ccf2f487d2c7ed48147a5822e3112c51dc33494"
        ],
        [
            "intros m n p Z1; case (Z_eq_dec n 0); intros Z2.",
            "VernacExtend",
            "0f73603019a9c1db4d002d5b474f850b65919951"
        ],
        [
            "rewrite Z2; unfold Zquotient in |- *; case (m * p)%Z; case m; simpl in |- *; auto.",
            "VernacExtend",
            "f9ff6bb0c867fa993a4a489d2bc98e9fef27de76"
        ],
        [
            "case (ZquotientProp m n); auto; intros r (H1, (H2, H3)).",
            "VernacExtend",
            "b83240731f3d292e556aed01e5fbc245d44da255"
        ],
        [
            "apply sym_equal; apply ZquotientUnique with (r := (r * p)%Z); auto with zarith.",
            "VernacExtend",
            "a99cb87aed164d6958fa4822c9bd8b9a8ca157d8"
        ],
        [
            "pattern m at 1 in |- *; rewrite H1; ring.",
            "VernacExtend",
            "050cea9e5cec80e532cd160295b0135ed4a9d89c"
        ],
        [
            "rewrite Zmult_assoc.",
            "VernacExtend",
            "4e7fc170e0ffde6f604834308d68359f29bf47d0"
        ],
        [
            "repeat rewrite (fun x => Zabs_Zmult x p); auto with zarith.",
            "VernacExtend",
            "489c462fefd62549e9f2529d428056e128eb36b5"
        ],
        [
            "repeat rewrite Zabs_Zmult; auto with zarith.",
            "VernacExtend",
            "7114dccf93d085cebda50d19d833d683e48e2ce1"
        ],
        [
            "apply Zmult_gt_0_lt_compat_r; auto with zarith.",
            "VernacExtend",
            "591acc3e148a356d4d326ded6bdc45878b78dc06"
        ],
        [
            "apply Zlt_gt; generalize Z1; case p; simpl in |- *; try (intros H4; case H4; auto; fail); unfold Zlt in |- *; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "451daa616974af609f44419c354926691da89831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZDivides_add : forall n m p : Z, Zdivides n p -> Zdivides m p -> Zdivides (n + m) p.",
            "VernacStartTheoremProof",
            "720c498632ee10378781ebbfd9a9453b2107d4e1"
        ],
        [
            "intros n m p H' H'0.",
            "VernacExtend",
            "3449bf2df5d2e6795825a300774965cb19abaac7"
        ],
        [
            "case H'; intros z1 Hz1.",
            "VernacExtend",
            "6c9d1ccc77956bb537daea8df048cc87faf27963"
        ],
        [
            "case H'0; intros z2 Hz2.",
            "VernacExtend",
            "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
        ],
        [
            "exists (z1 + z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
            "VernacExtend",
            "b6fc5a6409ebf8d58054a40d4b297bc2daa71216"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem NDivides_minus : forall n m p : Z, Zdivides n p -> Zdivides m p -> Zdivides (n - m) p.",
            "VernacStartTheoremProof",
            "1b99db945ffa558c0401f2dc8d7a10c5a45a31ed"
        ],
        [
            "intros n m p H' H'0.",
            "VernacExtend",
            "3449bf2df5d2e6795825a300774965cb19abaac7"
        ],
        [
            "case H'; intros z1 Hz1.",
            "VernacExtend",
            "6c9d1ccc77956bb537daea8df048cc87faf27963"
        ],
        [
            "case H'0; intros z2 Hz2.",
            "VernacExtend",
            "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
        ],
        [
            "exists (z1 - z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
            "VernacExtend",
            "ea812aa2e8e5c16d9197dcec26d74628448763db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZDivides_mult : forall n m p q : Z, Zdivides n p -> Zdivides m q -> Zdivides (n * m) (p * q).",
            "VernacStartTheoremProof",
            "a3f9372e782860ec4c72f72ad11f7fc8020a4134"
        ],
        [
            "intros n m p q H' H'0.",
            "VernacExtend",
            "c77b72d73fbf4270b02f7ced51dad98650b63bfd"
        ],
        [
            "case H'; intros z1 Hz1.",
            "VernacExtend",
            "6c9d1ccc77956bb537daea8df048cc87faf27963"
        ],
        [
            "case H'0; intros z2 Hz2.",
            "VernacExtend",
            "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
        ],
        [
            "exists (z1 * z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
            "VernacExtend",
            "6200cc3195962d36dd6fbfca2cdf4d96bd5409e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZdividesTrans : forall n m p : Z, Zdivides n m -> Zdivides m p -> Zdivides n p.",
            "VernacStartTheoremProof",
            "892d262d8b3abb01032fa454a5ca9d8101452afe"
        ],
        [
            "intros n m p H' H'0.",
            "VernacExtend",
            "3449bf2df5d2e6795825a300774965cb19abaac7"
        ],
        [
            "case H'; intros z1 Hz1.",
            "VernacExtend",
            "6c9d1ccc77956bb537daea8df048cc87faf27963"
        ],
        [
            "case H'0; intros z2 Hz2.",
            "VernacExtend",
            "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
        ],
        [
            "exists (z1 * z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
            "VernacExtend",
            "6200cc3195962d36dd6fbfca2cdf4d96bd5409e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZdividesLessPow : forall (n : Z) (m p : nat), m <= p -> Zdivides (Zpower_nat n p) (Zpower_nat n m).",
            "VernacStartTheoremProof",
            "432d395795d3f0d331fdfa188515305cfa25b0f1"
        ],
        [
            "intros n m p H'; exists (Zpower_nat n (p - m)).",
            "VernacExtend",
            "0d1349acb701415596ea2ed45bd2e29cb2aabad9"
        ],
        [
            "rewrite <- Zpower_nat_is_exp.",
            "VernacExtend",
            "423fb7d633dcb59552e41198fb746fd733daae1e"
        ],
        [
            "rewrite <- le_plus_minus; auto.",
            "VernacExtend",
            "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "inj_oZ1",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; try (intros; apply sym_equal; apply inject_nat_convert; auto); auto.",
                        "VernacExtend",
                        "c9df0e3078a61f58ae39444a4dec4424433f2de6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zero_le_oZ",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "d44182e5fb88b3162af0fbe8dbe568a8ef54a108"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZquotientProp",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros m n; unfold Zquotient in |- *; case n; simpl in |- *.",
                        "VernacExtend",
                        "7cdc42d7324c37880f27484042bdc7640e3013d8"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; auto.",
                        "VernacExtend",
                        "0b36977cda16a9ec120d6463bb6c43bcda418cba"
                    ]
                },
                {
                    "command": [
                        "intros n' Hn'; case m; simpl in |- *; auto.",
                        "VernacExtend",
                        "5a14f9cc2a808cdb9c513be921394ae111031c80"
                    ]
                },
                {
                    "command": [
                        "exists 0%Z; repeat split; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "caee5fea3225108757954d90ea6bf285a081538b"
                    ]
                },
                {
                    "command": [
                        "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
                        "VernacExtend",
                        "fa6add7ac489facac5e50c04f92bd074c68f2474"
                    ]
                },
                {
                    "command": [
                        "intros q r (H1, H2); exists (oZ1 r); repeat (split; auto with zarith).",
                        "VernacExtend",
                        "e443e94f0a417596f223b4de1074789e88917826"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
                        "VernacExtend",
                        "21c37e0f110edd3631b6dcfa357fc82062f998e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_plus; rewrite inj_mult.",
                        "VernacExtend",
                        "8708e2ef80311dc41a0e33445af7423a7eed649d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
                        "VernacExtend",
                        "4b178df8ac415c287d8effc43fc9f4f85bb29910"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_oZ1; auto.",
                        "VernacExtend",
                        "0ca0f8bd17911368a35d6410d0c8cac436ba34fa"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
                        "VernacExtend",
                        "4754574443e6325cbc47305394182ed6603d456e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
                        "VernacExtend",
                        "fa6add7ac489facac5e50c04f92bd074c68f2474"
                    ]
                },
                {
                    "command": [
                        "intros q r (H1, H2); exists (- oZ1 r)%Z; repeat (split; auto with zarith).",
                        "VernacExtend",
                        "adbedc033a0d780f3adbd0fd583f5930e115f266"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg m') with (- Zpos m')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "548d0d0a749562194bef1e381117c2bb53333a7e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
                        "VernacExtend",
                        "21c37e0f110edd3631b6dcfa357fc82062f998e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_plus; rewrite inj_mult.",
                        "VernacExtend",
                        "8708e2ef80311dc41a0e33445af7423a7eed649d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
                        "VernacExtend",
                        "4b178df8ac415c287d8effc43fc9f4f85bb29910"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_oZ1; auto with zarith.",
                        "VernacExtend",
                        "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_mult_distr_l; rewrite Zabs_Zopp.",
                        "VernacExtend",
                        "62117c2507bf0a83500aca1543c7ce6672220e47"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
                        "VernacExtend",
                        "4754574443e6325cbc47305394182ed6603d456e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zopp.",
                        "VernacExtend",
                        "0b6e22e959fb2abddb6c6471984bd9b2c0a2b861"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "intros n' Hn'; case m; simpl in |- *; auto.",
                        "VernacExtend",
                        "5a14f9cc2a808cdb9c513be921394ae111031c80"
                    ]
                },
                {
                    "command": [
                        "exists 0%Z; repeat split; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "caee5fea3225108757954d90ea6bf285a081538b"
                    ]
                },
                {
                    "command": [
                        "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
                        "VernacExtend",
                        "fa6add7ac489facac5e50c04f92bd074c68f2474"
                    ]
                },
                {
                    "command": [
                        "intros q r (H1, H2); exists (oZ1 r); repeat (split; auto with zarith).",
                        "VernacExtend",
                        "e443e94f0a417596f223b4de1074789e88917826"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
                        "VernacExtend",
                        "21c37e0f110edd3631b6dcfa357fc82062f998e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_plus; rewrite inj_mult.",
                        "VernacExtend",
                        "8708e2ef80311dc41a0e33445af7423a7eed649d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
                        "VernacExtend",
                        "4b178df8ac415c287d8effc43fc9f4f85bb29910"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_oZ1; auto with zarith.",
                        "VernacExtend",
                        "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_opp_opp.",
                        "VernacExtend",
                        "56a44203d99d67b0575659085a68c3ba69641d99"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
                        "VernacExtend",
                        "4754574443e6325cbc47305394182ed6603d456e"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "intros m'; generalize (Pdiv_correct m' n'); case (Pdiv m' n'); simpl in |- *; auto.",
                        "VernacExtend",
                        "fa6add7ac489facac5e50c04f92bd074c68f2474"
                    ]
                },
                {
                    "command": [
                        "intros q r (H1, H2); exists (- oZ1 r)%Z; repeat (split; auto with zarith).",
                        "VernacExtend",
                        "adbedc033a0d780f3adbd0fd583f5930e115f266"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg m') with (- Zpos m')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "548d0d0a749562194bef1e381117c2bb53333a7e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto.",
                        "VernacExtend",
                        "21c37e0f110edd3631b6dcfa357fc82062f998e6"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_plus; rewrite inj_mult.",
                        "VernacExtend",
                        "8708e2ef80311dc41a0e33445af7423a7eed649d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto.",
                        "VernacExtend",
                        "4b178df8ac415c287d8effc43fc9f4f85bb29910"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_oZ1; auto with zarith.",
                        "VernacExtend",
                        "55bea98446f41c96dfc1f782bdd66cfbdfc25a35"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "replace (Zneg n') with (- Zpos n')%Z; [ idtac | simpl in |- *; auto ].",
                        "VernacExtend",
                        "2143727337a3c4abfbe4c430c08a3ec2bcc68b61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_mult_distr_r; rewrite Zabs_Zopp.",
                        "VernacExtend",
                        "2d371b0d191572f06c17b579b64c770f9dde5a8e"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos m') m'); auto with zarith.",
                        "VernacExtend",
                        "4754574443e6325cbc47305394182ed6603d456e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zopp.",
                        "VernacExtend",
                        "0b6e22e959fb2abddb6c6471984bd9b2c0a2b861"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_oZ1; rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "09d08f6aa2499c7f51221962993d4f737215b6b5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inject_nat_convert (Zpos n') n'); auto with zarith.",
                        "VernacExtend",
                        "301a2661d4a05b09b67df6dee5762a41bdd028e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZquotientPos",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H H0; case (Z_eq_dec z2 0); intros Z1.",
                        "VernacExtend",
                        "edfd66a53440d764763b1456b198d4d471f481b8"
                    ]
                },
                {
                    "command": [
                        "rewrite Z1; red in |- *; case z1; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "6d3540d1b608aef4289048ad4e9ba7f09b1b7c99"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp z1 z2); auto; intros r (H1, (H2, H3)).",
                        "VernacExtend",
                        "015843c30c26f5901e07dd2e62251fa39a5151a8"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 (Zquotient z1 z2)); auto; intros Z2.",
                        "VernacExtend",
                        "a5d3f8800187f1db3302d793787868cdaf07cce5"
                    ]
                },
                {
                    "command": [
                        "Contradict H3; apply Zle_not_lt.",
                        "VernacExtend",
                        "8c6aa4368b886ad0968f7dece452c5c4acb25b72"
                    ]
                },
                {
                    "command": [
                        "replace r with (z1 - Zquotient z1 z2 * z2)%Z; [ idtac | pattern z1 at 1 in |- *; rewrite H1; ring ].",
                        "VernacExtend",
                        "3905b8683a242321e74661ee909aaa793a32c7f6"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_eq; auto.",
                        "VernacExtend",
                        "f0eeb17597fcafe4740de3c7894aeb9f7976dfad"
                    ]
                },
                {
                    "command": [
                        "pattern z2 at 1 in |- *; replace z2 with (0 + 1 * z2)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "c005c8b7d87b76337ee3707828fa018555cc73ca"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus in |- *; apply Zle_trans with (z1 + 1 * z2)%Z; auto with zarith.",
                        "VernacExtend",
                        "00eab760b43e92b9750b4855b030310b103778e9"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_le_compat_l.",
                        "VernacExtend",
                        "4450bbafdb2180fd74d1eec9b3c2923119b209d4"
                    ]
                },
                {
                    "command": [
                        "rewrite Zopp_mult_distr_l.",
                        "VernacExtend",
                        "00ee4fd3b4824726846a09f1e0459c68fcb801ea"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zmult_comp_r; auto with zarith.",
                        "VernacExtend",
                        "6df3ad18f4910f873061ef6fd03b5647e45f11b6"
                    ]
                },
                {
                    "command": [
                        "unfold Zminus in |- *; rewrite Zopp_mult_distr_l; auto with zarith.",
                        "VernacExtend",
                        "277956b136b2a596154198c186f73a188808dcdc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesZquotient",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros n m H' H'0.",
                        "VernacExtend",
                        "973c8a068842e5992eab78b17c802393359cd18e"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros z1 Hz1.",
                        "VernacExtend",
                        "4b0f09f296cf17b1773d2be9b6b2b2c4b68e3a6c"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp n m); auto; intros z2 (Hz2, (Hz3, Hz4)).",
                        "VernacExtend",
                        "edb0aeb8fc1392279b8d8024c9ecb39c1ed543a0"
                    ]
                },
                {
                    "command": [
                        "cut (z2 = 0%Z); [ intros H1; pattern n at 1 in |- *; rewrite Hz2; rewrite H1; ring | idtac ].",
                        "VernacExtend",
                        "a9b81866fbc5fcc028b4dded6fda386f662423f1"
                    ]
                },
                {
                    "command": [
                        "cut (z2 = ((z1 - Zquotient n m) * m)%Z); [ intros H2 | idtac ].",
                        "VernacExtend",
                        "26d8265f4082d547574364ed314ad8a07bd5febb"
                    ]
                },
                {
                    "command": [
                        "case (Z_eq_dec (z1 - Zquotient n m) 0); intros H3.",
                        "VernacExtend",
                        "af5c91a7721871ca582c83d058b81a4fd3e5b4ad"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H3; ring.",
                        "VernacExtend",
                        "ba48611e1847d4a49e4a0c08a51af8d58252fe0b"
                    ]
                },
                {
                    "command": [
                        "Contradict Hz4.",
                        "VernacExtend",
                        "7e2d9fc0ebc7b70e52d2b8ed1ad2b54b4608d3e5"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs m) with (1 * Zabs m)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "72c533530aa718787618d849ed66d5ff75f9a82f"
                    ]
                },
                {
                    "command": [
                        "apply Zle_not_lt; rewrite H2.",
                        "VernacExtend",
                        "9ccd4b9127066d1d735036af99539fc393298ca6"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zmult; apply Zle_Zmult_comp_r; auto with zarith.",
                        "VernacExtend",
                        "b053e62c98d824003a4920d605d12676404938e9"
                    ]
                },
                {
                    "command": [
                        "generalize H3; case (z1 - Zquotient n m)%Z; try (intros H1; case H1; auto; fail); simpl in |- *; intros p; case p; simpl in |- *; auto; intros; red in |- *; simpl in |- *; auto; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "c73e5b0f51362877fd2bfd37a5e91e0e3e84216f"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_minus_distr_r; rewrite (Zmult_comm z1); rewrite <- Hz1; (pattern n at 1 in |- *; rewrite Hz2); ring.",
                        "VernacExtend",
                        "192d18f5d3b35728c5d586147658186169b1126c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesZquotientInv",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros n m H'; red in |- *.",
                        "VernacExtend",
                        "5e8cce2967546dbc2cb3bbfb565ae16adabcc682"
                    ]
                },
                {
                    "command": [
                        "exists (Zquotient n m); auto.",
                        "VernacExtend",
                        "bb294c26decd93bd3e51affb0684a112acea53d5"
                    ]
                },
                {
                    "command": [
                        "pattern n at 1 in |- *; rewrite H'; auto with zarith.",
                        "VernacExtend",
                        "a19b2800c7aff9282f29b38d118b205c41e0f219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesMult",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros n m p H'; red in H'.",
                        "VernacExtend",
                        "7f7d7b5f744d427e89cfeffb135994e77140c023"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros q E.",
                        "VernacExtend",
                        "74a1175c510bcf2857607df5fc390c189f55ddc6"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "exists q.",
                        "VernacExtend",
                        "4b16c752cd7c11bacf99e556cf412cae1f21d016"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_mult_simpl",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros a b c H H0.",
                        "VernacExtend",
                        "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt c 0); intros Zl1.",
                        "VernacExtend",
                        "72f4d7cb02d9c29b55008cbebff70754392d5865"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym; apply Zmult_le_reg_r with (p := (- c)%Z); try apply Zlt_gt; auto with zarith; repeat rewrite <- Zopp_mult_distr_r; rewrite H0; auto with zarith.",
                        "VernacExtend",
                        "4407703f238cfa70c84d77d1a1ced51eaab51c83"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym; apply Zmult_le_reg_r with (p := c); try apply Zlt_gt; auto with zarith; rewrite H0; auto with zarith.",
                        "VernacExtend",
                        "9ef9727308b63792a4a76c39527b607c66b496e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesDiv",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros n m p H' H'0.",
                        "VernacExtend",
                        "3449bf2df5d2e6795825a300774965cb19abaac7"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros q E.",
                        "VernacExtend",
                        "a4a5429f423f39637c7d4431189a9bc432ff5dde"
                    ]
                },
                {
                    "command": [
                        "exists q.",
                        "VernacExtend",
                        "4b16c752cd7c11bacf99e556cf412cae1f21d016"
                    ]
                },
                {
                    "command": [
                        "apply Zeq_mult_simpl with (c := p); auto.",
                        "VernacExtend",
                        "ef37ee74146e35b50b336749771bffd10b628635"
                    ]
                },
                {
                    "command": [
                        "rewrite (Zmult_comm n); rewrite E; ring.",
                        "VernacExtend",
                        "2e0a30591a7a19fd3b4be42d269ce9c9caea6e3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesP",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros n m; case m.",
                        "VernacExtend",
                        "589fb629dcd237ea746ab132c4167048279c7bf0"
                    ]
                },
                {
                    "command": [
                        "case n.",
                        "VernacExtend",
                        "11697c0361eed9b7e10df873f1d76a9d8f9f100a"
                    ]
                },
                {
                    "command": [
                        "left; red in |- *; exists 0%Z; auto with zarith.",
                        "VernacExtend",
                        "7b62c1cb469a56dfd61e029bb749b6db7a22a4ca"
                    ]
                },
                {
                    "command": [
                        "intros p; right; red in |- *; intros H; case H; simpl in |- *; intros f H1; discriminate.",
                        "VernacExtend",
                        "6606217a1551dc5c83c457971c1cd19eb3b372ca"
                    ]
                },
                {
                    "command": [
                        "intros p; right; red in |- *; intros H; case H; simpl in |- *; intros f H1; discriminate.",
                        "VernacExtend",
                        "6606217a1551dc5c83c457971c1cd19eb3b372ca"
                    ]
                },
                {
                    "command": [
                        "intros p; generalize (Z_eq_bool_correct (Zquotient n (Zpos p) * Zpos p) n); case (Z_eq_bool (Zquotient n (Zpos p) * Zpos p) n); intros H1.",
                        "VernacExtend",
                        "48ef91632c9c73f5a518ab65db198164f5123f56"
                    ]
                },
                {
                    "command": [
                        "left; apply ZdividesZquotientInv; auto.",
                        "VernacExtend",
                        "0df327b546e2bc99a2d7fadba135c00bba910884"
                    ]
                },
                {
                    "command": [
                        "right; Contradict H1; apply sym_equal; apply ZdividesZquotient; auto.",
                        "VernacExtend",
                        "b44501effa8150062f5a48df69ec68237d73f2e9"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "intros p; generalize (Z_eq_bool_correct (Zquotient n (Zneg p) * Zneg p) n); case (Z_eq_bool (Zquotient n (Zneg p) * Zneg p) n); intros H1.",
                        "VernacExtend",
                        "7a1dd13e00249b56980841479766dbb94e99de4f"
                    ]
                },
                {
                    "command": [
                        "left; apply ZdividesZquotientInv; auto.",
                        "VernacExtend",
                        "0df327b546e2bc99a2d7fadba135c00bba910884"
                    ]
                },
                {
                    "command": [
                        "right; Contradict H1; apply sym_equal; apply ZdividesZquotient; auto.",
                        "VernacExtend",
                        "b44501effa8150062f5a48df69ec68237d73f2e9"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zquotient1",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp m 1); auto.",
                        "VernacExtend",
                        "099786779cfb08bc2978c0c8c8b41f8841f11fb2"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "intros z (H1, (H2, H3)).",
                        "VernacExtend",
                        "3ad5ffb7e5545efed129a6c6a05a21e8c4d39a30"
                    ]
                },
                {
                    "command": [
                        "pattern m at 2 in |- *; rewrite H1; replace z with 0%Z; try ring.",
                        "VernacExtend",
                        "eb526959525c1c04c90bcd5104ae958c16bee1f4"
                    ]
                },
                {
                    "command": [
                        "generalize H3; case z; simpl in |- *; auto; intros p; case p; unfold Zlt in |- *; simpl in |- *; intros; discriminate.",
                        "VernacExtend",
                        "786f642c9d6944e13deaa51732b5d1767a4ca612"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zdivides1",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros m; exists m; auto with zarith.",
                        "VernacExtend",
                        "53890e4ee7b1e490014d6ff35667ff57353d6f00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_eq_case",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; simpl in |- *; auto; try (intros; discriminate); intros p1 p2 H1; injection H1; (intros H2; rewrite H2); auto.",
                        "VernacExtend",
                        "480058310db2be7dcb607e66fb05eca01c712a17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_tri",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; try (simpl in |- *; auto with zarith; fail).",
                        "VernacExtend",
                        "965111ef50cd509e5285b1624b4133d2cef1d3b4"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2; apply Zabs_intro with (P := fun x => (x <= Zabs (Zpos p2) + Zabs (Zneg p1))%Z); try rewrite Zopp_plus_distr; auto with zarith.",
                        "VernacExtend",
                        "30f3c8d4767a41ce1ca48fe9c273a14eae6e44c9"
                    ]
                },
                {
                    "command": [
                        "intros p1 p2; apply Zabs_intro with (P := fun x => (x <= Zabs (Zpos p2) + Zabs (Zneg p1))%Z); try rewrite Zopp_plus_distr; auto with zarith.",
                        "VernacExtend",
                        "30f3c8d4767a41ce1ca48fe9c273a14eae6e44c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZquotientUnique",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros m n q r H' H'0 H'1 H'2.",
                        "VernacExtend",
                        "a6c5b8e63ca9b284d3e4811c806b53eddb4e3a16"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp m n); auto; intros z (H0, (H1, H2)).",
                        "VernacExtend",
                        "6708e263250bbf3e5092d6f8b6b1087085c4303c"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt (Zabs q) (Zabs (Zquotient m n))); intros Zl1; auto with arith.",
                        "VernacExtend",
                        "8fc6637cedcace4291a6b63dee10938036785a68"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq _ _ Zl1); clear Zl1; intros Zl1; auto with arith.",
                        "VernacExtend",
                        "ef2653df5bb8be60efae93037d9e0b791f3f26b4"
                    ]
                },
                {
                    "command": [
                        "Contradict H1; apply Zlt_not_le.",
                        "VernacExtend",
                        "a1fb82ff2db233160cc2f79811b1af01e693faa4"
                    ]
                },
                {
                    "command": [
                        "pattern m at 1 in |- *; rewrite H'0.",
                        "VernacExtend",
                        "b28cc1fa015772b1b8218a7396fb2328d458627e"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs (q * n) + Zabs r)%Z; auto with zarith.",
                        "VernacExtend",
                        "54844752d8f3c47096778341b12e00c8c9ce899b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with (Zabs (q * n) + Zabs n)%Z; auto with zarith.",
                        "VernacExtend",
                        "05a1be648ebd6d05a7d253cd8b9343085436ed3e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_Zmult.",
                        "VernacExtend",
                        "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs q * Zabs n + Zabs n)%Z with (Zsucc (Zabs q) * Zabs n)%Z; [ auto with zarith | unfold Zsucc in |- *; ring ].",
                        "VernacExtend",
                        "e74d312a1f391d477daaa4215bab75453eb5f7fd"
                    ]
                },
                {
                    "command": [
                        "case (Zabs_eq_case _ _ Zl1); auto.",
                        "VernacExtend",
                        "3c602dca6d3e2ae7fb400302c472b261d3aaa6c7"
                    ]
                },
                {
                    "command": [
                        "intros H; (cut (Zquotient m n = 0%Z); [ intros H3; rewrite H; repeat rewrite H3; simpl in |- *; auto | idtac ]).",
                        "VernacExtend",
                        "4d919034ff1ba170ff28b7aeba461e0640be2722"
                    ]
                },
                {
                    "command": [
                        "cut (Zabs (Zquotient m n) < 1)%Z.",
                        "VernacExtend",
                        "91a288b65fa15445bf4f57bffd3505578c21a299"
                    ]
                },
                {
                    "command": [
                        "case (Zquotient m n); simpl in |- *; auto; intros p; case p; unfold Zlt in |- *; simpl in |- *; intros; discriminate.",
                        "VernacExtend",
                        "41a688e1ecb2faf42f2161915df772d92f6ed73c"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_mult_simpl_l with (c := Zabs n); auto with zarith.",
                        "VernacExtend",
                        "27ebba2149de305cd95c7a15d3fb27970295b096"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq 0 (Zabs n)); auto with zarith.",
                        "VernacExtend",
                        "1e30a98ac4fd2b74dfe0f276237c42e4f2a1a72e"
                    ]
                },
                {
                    "command": [
                        "intros H3; case H'; auto.",
                        "VernacExtend",
                        "2b87e96a6c61363dfe1e40e2b9c3d245a0e3dc5a"
                    ]
                },
                {
                    "command": [
                        "generalize H3; case n; simpl in |- *; auto; intros; discriminate.",
                        "VernacExtend",
                        "ce58e37ef8816f5e2e3b5311651b7bd31bc3f5d8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zabs_Zmult; rewrite (Zmult_comm n).",
                        "VernacExtend",
                        "9290641bf16a1c2d86d87f85d58dda03d9bc7f2c"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs n * 1)%Z with (Zabs n); [ idtac | ring ].",
                        "VernacExtend",
                        "72e11efff5aae3fa3d6f833ac7bd2b5465f30f59"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (1 := H1).",
                        "VernacExtend",
                        "66e6346896352d13d79a8d87e26f78675edd4961"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_mult_simpl_l with (c := (1 + 1)%Z); auto with zarith.",
                        "VernacExtend",
                        "2a7b6b012236609164b72c737b3ad16b9215a665"
                    ]
                },
                {
                    "command": [
                        "replace ((1 + 1) * Zabs m)%Z with (Zabs (m + m)).",
                        "VernacExtend",
                        "34194bc9302c484fa570e6d014c04ff003cc07dd"
                    ]
                },
                {
                    "command": [
                        "replace ((1 + 1) * Zabs n)%Z with (Zabs n + Zabs n)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "95475b65bab1111b23437481a1b35d0b894a782f"
                    ]
                },
                {
                    "command": [
                        "pattern m at 1 in |- *; rewrite H'0; rewrite H0; rewrite H.",
                        "VernacExtend",
                        "1cd2a9d778db932cc52a132ef6bba648f5bae3de"
                    ]
                },
                {
                    "command": [
                        "replace (- Zquotient m n * n + r + (Zquotient m n * n + z))%Z with (r + z)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "df245a8d5e768794f2939231aa255d9036e60979"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs r + Zabs z)%Z; auto with zarith.",
                        "VernacExtend",
                        "6459f077e928df26662690667d7ab60294bb82ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zabs_eq (1 + 1)); auto with zarith.",
                        "VernacExtend",
                        "ac6838e9fd8ebb6f8c1466806cdd34667dcdc757"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zabs_Zmult; apply f_equal with (f := Zabs); auto with zarith.",
                        "VernacExtend",
                        "5cd12cac1674a7ca9f36f69c609015cfe7cf2fe1"
                    ]
                },
                {
                    "command": [
                        "Contradict H'1; apply Zlt_not_le.",
                        "VernacExtend",
                        "0d55f77922b3a08b197b8fcf3586e3c598ad988e"
                    ]
                },
                {
                    "command": [
                        "pattern m at 1 in |- *; rewrite H0.",
                        "VernacExtend",
                        "102e359f095d3f3e1ed00fa243915fd808499592"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs (Zquotient m n * n) + Zabs z)%Z; auto with zarith.",
                        "VernacExtend",
                        "eb2dc732c30e470275148af2852497276fc7fb9b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with (Zabs (Zquotient m n * n) + Zabs n)%Z; auto with zarith.",
                        "VernacExtend",
                        "93ffcea87eb7e573511fb264668afbe13d287da7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_Zmult.",
                        "VernacExtend",
                        "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs (Zquotient m n) * Zabs n + Zabs n)%Z with (Zsucc (Zabs (Zquotient m n)) * Zabs n)%Z; [ auto with zarith | unfold Zsucc in |- *; ring ].",
                        "VernacExtend",
                        "16e22410ca09168e14aa03111c2fe2f2ef37684b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZquotientZopp",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "intros m n; case (Z_eq_dec n 0); intros Z1.",
                        "VernacExtend",
                        "17b680e8f4832bc7f325652e041fd505b5237e27"
                    ]
                },
                {
                    "command": [
                        "rewrite Z1; unfold Zquotient in |- *; case n; case m; simpl in |- *; auto.",
                        "VernacExtend",
                        "beb1ebdd312c03f1c6bb586b14ef46523142e601"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp m n); auto; intros r1 (H'2, (H'3, H'4)); auto with zarith.",
                        "VernacExtend",
                        "92b3bf9560816b8e5f604b043b7260698d95a9c2"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply ZquotientUnique with (q := (- Zquotient m n)%Z) (r := (- r1)%Z); auto.",
                        "VernacExtend",
                        "4b1827f51760bab016bef4d884ae47aff1483061"
                    ]
                },
                {
                    "command": [
                        "pattern m at 1 in |- *; rewrite H'2; ring.",
                        "VernacExtend",
                        "a11e95ea5dc83eb646da9012f6d24f222ff1e138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zopp_mult_distr_l; repeat rewrite Zabs_Zopp; auto.",
                        "VernacExtend",
                        "ed9fcb4579edf7c8b3e7bfb08778795e5e0cf21e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zopp; auto.",
                        "VernacExtend",
                        "85ad0cb0c1339b6115c9e2b754520f91b042d0ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZquotientMonotone",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros n m q H; case (Zle_lt_or_eq _ _ H); intros Z0.",
                        "VernacExtend",
                        "d1b4a9c168cb167e7156edca963745d778718617"
                    ]
                },
                {
                    "command": [
                        "case (Z_eq_dec q 0); intros Z1.",
                        "VernacExtend",
                        "d41dd51455b5541e49a897d946aefb16c32f2f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite Z1; unfold Zquotient in |- *; case n; case m; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "60154705ffe66dfa5280feff962c9073d53c0002"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt (Zabs (Zquotient n q)) (Zabs (Zquotient m q))); auto; intros H'1.",
                        "VernacExtend",
                        "18d7dc6920ff1b2e382e977f1bda540229129026"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp m q); auto; intros r1 (H'2, (H'3, H'4)); auto with zarith.",
                        "VernacExtend",
                        "76c939d3badbb215ba923d7cee21b21a7cec06c1"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp n q); auto; intros r2 (H'5, (H'6, H'7)); auto with zarith.",
                        "VernacExtend",
                        "d649c6ad8080d4d557361dd3b275e00133fba823"
                    ]
                },
                {
                    "command": [
                        "Contradict H'6.",
                        "VernacExtend",
                        "c1e31a560fe987187f755a0ab9aab1a232ee370d"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_not_le.",
                        "VernacExtend",
                        "f50dda740686f871b63754e02667d404d580866b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with (1 := Z0).",
                        "VernacExtend",
                        "9445052e77f03aec56f265abe2d6787ac73ffabe"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2.",
                        "VernacExtend",
                        "884e4d7bc650f9624ecf7e3155e0da90d9130a00"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (Zabs (Zquotient m q * q) + Zabs r1)%Z; auto with zarith.",
                        "VernacExtend",
                        "b1f9fba34f0d2026100eb1a365b38bf7ba6bc3ea"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (Zabs (Zquotient m q * q) + Zabs q)%Z; auto with zarith.",
                        "VernacExtend",
                        "785bf7849dc76e29d365ea1e8193755660953544"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_Zmult.",
                        "VernacExtend",
                        "4b7da0b8275268c7f3ee6a3b7ea19434419af5d5"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs (Zquotient m q) * Zabs q + Zabs q)%Z with (Zsucc (Zabs (Zquotient m q)) * Zabs q)%Z; [ idtac | unfold Zsucc in |- *; ring ].",
                        "VernacExtend",
                        "e2c9d7b5453c9db8f673fd84da291d2921ad9f77"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Zabs q)%Z; auto with zarith.",
                        "VernacExtend",
                        "8640b52147a03ac40efae8169d9ddbeaca5edbde"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq 0 (Zabs q)); auto with zarith.",
                        "VernacExtend",
                        "ee03cd973272c6a9bfa17e2c140b2d77783bbad7"
                    ]
                },
                {
                    "command": [
                        "intros H'6; case Z1; auto.",
                        "VernacExtend",
                        "8b9ec1e1aef98bcac94758aa3279d1d71c9d261d"
                    ]
                },
                {
                    "command": [
                        "generalize H'6; case q; simpl in |- *; auto; intros; discriminate.",
                        "VernacExtend",
                        "77b4178958f068727134bcff9f200346b961e88b"
                    ]
                },
                {
                    "command": [
                        "case (Zabs_eq_case _ _ Z0); intros Z1; rewrite Z1; auto with zarith.",
                        "VernacExtend",
                        "238c8ff9de33ce7e92cb4c46f328b0bd063ade28"
                    ]
                },
                {
                    "command": [
                        "rewrite ZquotientZopp; rewrite Zabs_Zopp; auto with zarith.",
                        "VernacExtend",
                        "df1fb7379f5089360fa372297ebff9b569b57781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotDividesDigit",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros r v H H'; red in |- *; intros H'0; case H'0; intros q E.",
                        "VernacExtend",
                        "6fadea091922936fa3943145db582aae20fe7f86"
                    ]
                },
                {
                    "command": [
                        "absurd (Zabs v < Zpower_nat r (digit r v))%Z; auto with zarith.",
                        "VernacExtend",
                        "923be3a12dca20babc555a5525f238f1c5a48e47"
                    ]
                },
                {
                    "command": [
                        "apply Zle_not_lt.",
                        "VernacExtend",
                        "a635904a634172283c98f3792d1f8261c5710c4f"
                    ]
                },
                {
                    "command": [
                        "case (Z_eq_dec q 0); intros Z1.",
                        "VernacExtend",
                        "d41dd51455b5541e49a897d946aefb16c32f2f3e"
                    ]
                },
                {
                    "command": [
                        "case H'; rewrite E; rewrite Z1; ring.",
                        "VernacExtend",
                        "95ec44a41975b7fb66d737f6b6d900e664004307"
                    ]
                },
                {
                    "command": [
                        "pattern v at 2 in |- *; rewrite E.",
                        "VernacExtend",
                        "f37124643045538fde35c41f608460b3277a4f37"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zmult.",
                        "VernacExtend",
                        "f459c70d0601b9eab86bcf62dfb70a911d8ba871"
                    ]
                },
                {
                    "command": [
                        "pattern (Zpower_nat r (digit r v)) at 1 in |- *; replace (Zpower_nat r (digit r v)) with (Zpower_nat r (digit r v) * 1)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "6992153b271662ea0694557d6297101578bcfbf5"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => Zabs_eq (Zpower_nat x y)); auto with zarith.",
                        "VernacExtend",
                        "ad292d6ea0cac532a2fad5ff6035fa2d39404ba2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zmult_comp_l; auto with zarith.",
                        "VernacExtend",
                        "0a442d3268531835feca11bf21b34ab2eb26341b"
                    ]
                },
                {
                    "command": [
                        "generalize Z1; case q; simpl in |- *; try (intros H1; case H1; auto; fail); intros p; (case p; unfold Zle in |- *; simpl in |- *; intros; red in |- *; intros; discriminate).",
                        "VernacExtend",
                        "12466c828401581071b90b8ab3dad911d835802d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZDividesLe",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intros n m H' H'0; case H'0; intros q E; rewrite E.",
                        "VernacExtend",
                        "92983f72f9914d7c48198f0573f741a88d7496c7"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_Zmult.",
                        "VernacExtend",
                        "f459c70d0601b9eab86bcf62dfb70a911d8ba871"
                    ]
                },
                {
                    "command": [
                        "pattern (Zabs m) at 1 in |- *; replace (Zabs m) with (Zabs m * 1)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "bc3b91b47eed356bfe11aa9141df9ba6b44fd5d2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zmult_comp_l; auto with zarith.",
                        "VernacExtend",
                        "0a442d3268531835feca11bf21b34ab2eb26341b"
                    ]
                },
                {
                    "command": [
                        "generalize E H'; case q; simpl in |- *; auto; try (intros H1 H2; case H2; rewrite H1; ring; fail); intros p; case p; unfold Zle in |- *; simpl in |- *; intros; red in |- *; discriminate.",
                        "VernacExtend",
                        "c52e9c70dda3554e1229fdd1e4850c73bad215e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zquotient_mult_comp",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "intros m n p Z1; case (Z_eq_dec n 0); intros Z2.",
                        "VernacExtend",
                        "0f73603019a9c1db4d002d5b474f850b65919951"
                    ]
                },
                {
                    "command": [
                        "rewrite Z2; unfold Zquotient in |- *; case (m * p)%Z; case m; simpl in |- *; auto.",
                        "VernacExtend",
                        "f9ff6bb0c867fa993a4a489d2bc98e9fef27de76"
                    ]
                },
                {
                    "command": [
                        "case (ZquotientProp m n); auto; intros r (H1, (H2, H3)).",
                        "VernacExtend",
                        "b83240731f3d292e556aed01e5fbc245d44da255"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply ZquotientUnique with (r := (r * p)%Z); auto with zarith.",
                        "VernacExtend",
                        "a99cb87aed164d6958fa4822c9bd8b9a8ca157d8"
                    ]
                },
                {
                    "command": [
                        "pattern m at 1 in |- *; rewrite H1; ring.",
                        "VernacExtend",
                        "050cea9e5cec80e532cd160295b0135ed4a9d89c"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_assoc.",
                        "VernacExtend",
                        "4e7fc170e0ffde6f604834308d68359f29bf47d0"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => Zabs_Zmult x p); auto with zarith.",
                        "VernacExtend",
                        "489c462fefd62549e9f2529d428056e128eb36b5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_Zmult; auto with zarith.",
                        "VernacExtend",
                        "7114dccf93d085cebda50d19d833d683e48e2ce1"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_gt_0_lt_compat_r; auto with zarith.",
                        "VernacExtend",
                        "591acc3e148a356d4d326ded6bdc45878b78dc06"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt; generalize Z1; case p; simpl in |- *; try (intros H4; case H4; auto; fail); unfold Zlt in |- *; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "451daa616974af609f44419c354926691da89831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZDivides_add",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "intros n m p H' H'0.",
                        "VernacExtend",
                        "3449bf2df5d2e6795825a300774965cb19abaac7"
                    ]
                },
                {
                    "command": [
                        "case H'; intros z1 Hz1.",
                        "VernacExtend",
                        "6c9d1ccc77956bb537daea8df048cc87faf27963"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros z2 Hz2.",
                        "VernacExtend",
                        "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
                    ]
                },
                {
                    "command": [
                        "exists (z1 + z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
                        "VernacExtend",
                        "b6fc5a6409ebf8d58054a40d4b297bc2daa71216"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NDivides_minus",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "intros n m p H' H'0.",
                        "VernacExtend",
                        "3449bf2df5d2e6795825a300774965cb19abaac7"
                    ]
                },
                {
                    "command": [
                        "case H'; intros z1 Hz1.",
                        "VernacExtend",
                        "6c9d1ccc77956bb537daea8df048cc87faf27963"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros z2 Hz2.",
                        "VernacExtend",
                        "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
                    ]
                },
                {
                    "command": [
                        "exists (z1 - z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
                        "VernacExtend",
                        "ea812aa2e8e5c16d9197dcec26d74628448763db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZDivides_mult",
            "line_nb": 285,
            "steps": [
                {
                    "command": [
                        "intros n m p q H' H'0.",
                        "VernacExtend",
                        "c77b72d73fbf4270b02f7ced51dad98650b63bfd"
                    ]
                },
                {
                    "command": [
                        "case H'; intros z1 Hz1.",
                        "VernacExtend",
                        "6c9d1ccc77956bb537daea8df048cc87faf27963"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros z2 Hz2.",
                        "VernacExtend",
                        "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
                    ]
                },
                {
                    "command": [
                        "exists (z1 * z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
                        "VernacExtend",
                        "6200cc3195962d36dd6fbfca2cdf4d96bd5409e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesTrans",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros n m p H' H'0.",
                        "VernacExtend",
                        "3449bf2df5d2e6795825a300774965cb19abaac7"
                    ]
                },
                {
                    "command": [
                        "case H'; intros z1 Hz1.",
                        "VernacExtend",
                        "6c9d1ccc77956bb537daea8df048cc87faf27963"
                    ]
                },
                {
                    "command": [
                        "case H'0; intros z2 Hz2.",
                        "VernacExtend",
                        "41d99f96722b736dfa3ca9e1b813bcede9ea287c"
                    ]
                },
                {
                    "command": [
                        "exists (z1 * z2)%Z; rewrite Hz1; rewrite Hz2; ring.",
                        "VernacExtend",
                        "6200cc3195962d36dd6fbfca2cdf4d96bd5409e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZdividesLessPow",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros n m p H'; exists (Zpower_nat n (p - m)).",
                        "VernacExtend",
                        "0d1349acb701415596ea2ed45bd2e29cb2aabad9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zpower_nat_is_exp.",
                        "VernacExtend",
                        "423fb7d633dcb59552e41198fb746fd733daae1e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto.",
                        "VernacExtend",
                        "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}