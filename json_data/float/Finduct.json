{
    "filename": "Finduct.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export FPred.",
            "VernacRequire",
            "ab92f67fae75e381098a2a25557da859c566c913"
        ],
        [
            "Section finduct.",
            "VernacBeginSection",
            "65b54a595cccd99c29b90fa19a7331c5773bdacc"
        ],
        [
            "Variable b : Fbound.",
            "VernacAssumption",
            "17a11c003f49f819b8cb809f61b140702916486d"
        ],
        [
            "Variable radix : Z.",
            "VernacAssumption",
            "2349b77d134e0c9bb013a8bdca0020ca16fc023b"
        ],
        [
            "Variable precision : nat.",
            "VernacAssumption",
            "2235bc83b7ebf4cbe373b5fa3b4f3c643d454130"
        ],
        [
            "Let FtoRradix := FtoR radix.",
            "VernacDefinition",
            "5aa29a9595c6e9e03b28c6d232299552ec761ad7"
        ],
        [
            "Local Coercion FtoRradix : float >-> R.",
            "VernacCoercion",
            "cec6b845059d434f72dda1a67638af64e1fb0628"
        ],
        [
            "Hypothesis radixMoreThanOne : (1 < radix)%Z.",
            "VernacAssumption",
            "f4d3774b2275f4c4c3af941091d4d99f9a2129aa"
        ],
        [
            "Let radixMoreThanZERO := Zlt_1_O _ (Zlt_le_weak _ _ radixMoreThanOne).",
            "VernacDefinition",
            "b73ccff345a4fc730c8134dcd05adb7f1928fae7"
        ],
        [
            "Hint Resolve radixMoreThanZERO: zarith.",
            "VernacHints",
            "5a4a320eb610749621ef38850390d7141dc0d330"
        ],
        [
            "Hypothesis precisionNotZero : precision <> 0.",
            "VernacAssumption",
            "9ba21dacb7498679bf18b5f2c3b12c5f92dc3727"
        ],
        [
            "Hypothesis pGivesBound : Zpos (vNum b) = Zpower_nat radix precision.",
            "VernacAssumption",
            "d558f967d87d2a42d14158ac115b10c6f5358430"
        ],
        [
            "Definition Fweight (p : float) := (Fnum p + Fexp p * Zpower_nat radix precision)%Z.",
            "VernacDefinition",
            "587026c86657d5fdd28ab6fb87ec213e58f67f85"
        ],
        [
            "Theorem FweightLt : forall p q : float, Fcanonic radix b p -> Fcanonic radix b q -> (0 <= p)%R -> (p < q)%R -> (Fweight p < Fweight q)%Z.",
            "VernacStartTheoremProof",
            "2a75b577d82701a9e74e3252c09aa616bd383dbc"
        ],
        [
            "intros p q H' H'0 H'1 H'2.",
            "VernacExtend",
            "72bc33bd695361090defa76b144ed28b290b1f49"
        ],
        [
            "cut (Fbounded b p); [ intros Fb1 | apply FcanonicBound with (1 := H') ]; auto.",
            "VernacExtend",
            "63c6ad33a1189579d24cd1cbaa3c9ca90ead52bf"
        ],
        [
            "cut (Fbounded b q); [ intros Fb2 | apply FcanonicBound with (1 := H'0) ]; auto.",
            "VernacExtend",
            "dc2db62600c5d971645579e3f23b43d25ca19c88"
        ],
        [
            "case (FcanonicLtPos _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith; intros Zl1.",
            "VernacExtend",
            "82599ac1c7acad061cfbf2e7958b195fc3bd7155"
        ],
        [
            "unfold Fweight in |- *; simpl in |- *.",
            "VernacExtend",
            "d36c01f806e2f22614fec6b137bda081ca61351f"
        ],
        [
            "replace (Fexp q) with (Fexp q - Fexp p + Fexp p)%Z; [ idtac | ring ].",
            "VernacExtend",
            "8292a0fc7a2c2eed18b375a32e0baad52575a351"
        ],
        [
            "rewrite Zmult_plus_distr_l.",
            "VernacExtend",
            "8222674cbcbc31128dc19ee443d72bd93cffbd4f"
        ],
        [
            "rewrite Zplus_assoc.",
            "VernacExtend",
            "0e5fe194ecdfc9efe27c2867b803f58d698b13d8"
        ],
        [
            "repeat rewrite (fun x y z : Z => Zplus_comm x (y * z)).",
            "VernacExtend",
            "4b913b90da1c803a9d01d71fd6fa89a3b126ad74"
        ],
        [
            "apply Zplus_lt_compat_l.",
            "VernacExtend",
            "9657ee7b198805b3d3672a1c480b26bc8b2bd3e0"
        ],
        [
            "apply Zlt_le_trans with (Zpower_nat radix precision); auto with zarith.",
            "VernacExtend",
            "c5940ca4b6ec8dc37221f3d863b1fc6707ec1344"
        ],
        [
            "apply Zle_lt_trans with (Zpred (Zpower_nat radix precision)); auto with zarith.",
            "VernacExtend",
            "c1c7c69aa770be04f32b257f6594f5a07473543c"
        ],
        [
            "apply Zle_Zabs_inv2; auto with float zarith.",
            "VernacExtend",
            "3fb571cf48607aa363e12a07f462540503852199"
        ],
        [
            "apply Zle_Zpred; auto with float zarith.",
            "VernacExtend",
            "fc97091c70de7ea4960a94c50f2798d1b7274be3"
        ],
        [
            "rewrite <- pGivesBound; auto with float.",
            "VernacExtend",
            "aab0acd207adc0b61fe2d138022e47ac1c66af9b"
        ],
        [
            "apply Zle_trans with ((Fexp q - Fexp p) * Zpower_nat radix precision)%Z; auto with zarith.",
            "VernacExtend",
            "1f01b18c1f608b8c781469ea4770eb334499a4f3"
        ],
        [
            "pattern (Zpower_nat radix precision) at 1 in |- *; replace (Zpower_nat radix precision) with (Zsucc 0 * Zpower_nat radix precision)%Z; auto.",
            "VernacExtend",
            "10fcc79dc252998f3166f7bba10a80457913a70d"
        ],
        [
            "apply Zle_Zmult_comp_r; auto with zarith.",
            "VernacExtend",
            "6df3ad18f4910f873061ef6fd03b5647e45f11b6"
        ],
        [
            "unfold Zsucc in |- *; ring.",
            "VernacExtend",
            "969b534f6ecb1c132a53aa0d310df91c06090b72"
        ],
        [
            "cut (0 <= Fnum q)%Z; auto with zarith.",
            "VernacExtend",
            "10f2e13b62857bd99cc471f8034d77af4d9ae638"
        ],
        [
            "apply (LeR0Fnum radix); auto.",
            "VernacExtend",
            "8495e6ad2e5a68d8e7fe5d9a8401af435ce04ea2"
        ],
        [
            "apply Rle_trans with (FtoRradix p); auto; apply Rlt_le; auto.",
            "VernacExtend",
            "76999b1bded477179e46e7bde9f4818482761a04"
        ],
        [
            "elim Zl1; intros H'3 H'4; clear Zl1.",
            "VernacExtend",
            "22736c4eac380fd0378e957795531e4f259100d5"
        ],
        [
            "unfold Fweight in |- *; simpl in |- *.",
            "VernacExtend",
            "d36c01f806e2f22614fec6b137bda081ca61351f"
        ],
        [
            "rewrite <- H'3.",
            "VernacExtend",
            "b4b6d99407173024ab9b969b0670df905732f89c"
        ],
        [
            "repeat rewrite (fun x y z : Z => Zplus_comm x (y * z)).",
            "VernacExtend",
            "4b913b90da1c803a9d01d71fd6fa89a3b126ad74"
        ],
        [
            "apply Zplus_lt_compat_l; auto.",
            "VernacExtend",
            "f01a8efd33bc008321e560f1edce441d236a41cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FweightEq : forall p q : float, Fcanonic radix b p -> Fcanonic radix b q -> p = q :>R -> Fweight p = Fweight q.",
            "VernacStartTheoremProof",
            "028b0557ceb2e483507931df59b5c60376f1d6c9"
        ],
        [
            "intros p q H' H'0 H'1.",
            "VernacExtend",
            "05c3e1b098970ef14e38b413a09ed550ca5b4d53"
        ],
        [
            "rewrite (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
            "VernacExtend",
            "52a85140576de8bf6919954a2b5e49b3adfa77d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FweightZle : forall p q : float, Fcanonic radix b p -> Fcanonic radix b q -> (0 <= p)%R -> (p <= q)%R -> (Fweight p <= Fweight q)%Z.",
            "VernacStartTheoremProof",
            "492ff19952474a13deb83f1ca5b16de2c0cc2169"
        ],
        [
            "intros p q H' H'0 H'1 H'2; Casec H'2; intros H'2.",
            "VernacExtend",
            "d948192ecb6197845436695391f2cd661bbcb17e"
        ],
        [
            "apply Zlt_le_weak.",
            "VernacExtend",
            "77c804797cd604de1af1fd78f914f426e7c6ce85"
        ],
        [
            "apply FweightLt; auto.",
            "VernacExtend",
            "fdfcc5bb44b996e34da104144f9724c0cc0479a6"
        ],
        [
            "rewrite (FweightEq p q); auto with zarith.",
            "VernacExtend",
            "dee626f52d6a7d06ac1dcc203826cb011b3dc5d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FinductPosAux : forall (P : float -> Prop) (p : float), (0 <= p)%R -> Fcanonic radix b p -> P p -> (forall q : float, Fcanonic radix b q -> (p <= q)%R -> P q -> P (FSucc b radix precision q)) -> forall x : Z, (0 <= x)%Z -> forall q : float, x = (Fweight q - Fweight p)%Z -> Fcanonic radix b q -> (p <= q)%R -> P q.",
            "VernacStartTheoremProof",
            "31295dbd4dddeef7f8f1306ed3e8ec25353a8f44"
        ],
        [
            "intros P p H' H'0 H'1 H'2 x H'3; pattern x in |- *.",
            "VernacExtend",
            "996b3c03288d8bed8d6d0a53ddb1f61c6f300493"
        ],
        [
            "apply Z_lt_induction; auto.",
            "VernacExtend",
            "40f5da9fa9e64533a4909392cb7c98d04332cefa"
        ],
        [
            "intros x0 H'4 q H'5 H'6 H'7.",
            "VernacExtend",
            "42b9fd775964658242f962891cfaa238c45b04ef"
        ],
        [
            "Casec H'7; intros H'7.",
            "VernacExtend",
            "be231b12e1dd57e1507d693dfd2501c1f58e3a55"
        ],
        [
            "cut (p <= FPred b radix precision q)%R; [ intros Rl1 | idtac ].",
            "VernacExtend",
            "2b44b77c434e1fae9d02f776d0a5977fdc4eedfe"
        ],
        [
            "cut (P (FPred b radix precision q)); [ intros P1 | idtac ].",
            "VernacExtend",
            "b8956fa7ac3be9286b6168c736ac799fc998a72d"
        ],
        [
            "rewrite <- (FSucPred b radix precision) with (x := q); auto with arith.",
            "VernacExtend",
            "df57c5432ad796e88d93013dc3d78aaa78055caf"
        ],
        [
            "apply H'2; auto with float arith.",
            "VernacExtend",
            "897f4dec18392f6187e7b8e68f79637ef203bd21"
        ],
        [
            "apply H'4 with (y := (Fweight (FPred b radix precision q) - Fweight p)%Z); auto.",
            "VernacExtend",
            "106b82175d9a70b12500b7a0c6d6fece2f3527cb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "cut (Fweight p <= Fweight (FPred b radix precision q))%Z; auto with zarith.",
            "VernacExtend",
            "c52200c7276a72fe2ffa1f731bf64641cc41ec5d"
        ],
        [
            "apply FweightZle; auto.",
            "VernacExtend",
            "afbd57d6bd9a5e1eb3d22a16806f7bebd238dfc8"
        ],
        [
            "apply FPredCanonic; auto with arith.",
            "VernacExtend",
            "fb01792a4f1b977d77a769f1ebde16ae6a9a76bc"
        ],
        [
            "rewrite H'5.",
            "VernacExtend",
            "408e27c747e37a9161b8d1de2e1be5ddec6d2694"
        ],
        [
            "cut (Fweight (FPred b radix precision q) < Fweight q)%Z; [ auto with zarith | idtac ].",
            "VernacExtend",
            "fc94390610a7556baa788b407735359eb68753f3"
        ],
        [
            "apply FweightLt; auto with float.",
            "VernacExtend",
            "8127cc403dc62664237dbd3805ab2b7f209f36f4"
        ],
        [
            "apply (R0RltRlePred b radix precision); auto.",
            "VernacExtend",
            "0841c71d5b0a276fff74d07926ab3c5a571ccfd2"
        ],
        [
            "apply Rle_lt_trans with (FtoRradix p); auto.",
            "VernacExtend",
            "d3af9e05666ed4270d9225f36b71571368f8d062"
        ],
        [
            "apply (FPredLt b radix precision); auto.",
            "VernacExtend",
            "35f7f18762df85e7132f0d77afb75606fc06d36a"
        ],
        [
            "apply (FPredCanonic b radix precision); auto with arith.",
            "VernacExtend",
            "d061aeecf7c202920fed0767a5906cdb8953c2ae"
        ],
        [
            "apply (FPredProp b radix precision); auto with arith.",
            "VernacExtend",
            "b57c1866fb5d18f2c00e6926bcd3bf05846d89d9"
        ],
        [
            "rewrite <- (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
            "VernacExtend",
            "24be393ff82e1061ac05b0666fb914212e7c1b14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FinductPos : forall (P : float -> Prop) (p : float), (0 <= p)%R -> Fcanonic radix b p -> P p -> (forall q : float, Fcanonic radix b q -> (p <= q)%R -> P q -> P (FSucc b radix precision q)) -> forall q : float, Fcanonic radix b q -> (p <= q)%R -> P q.",
            "VernacStartTheoremProof",
            "c84295a1ff5bbf01c7dc940a2e42b180b4126f3b"
        ],
        [
            "intros P p H' H'0 H'1 H'2 q H'3 H'4.",
            "VernacExtend",
            "da97c79180f18d17090cd7e314821b0a9c55afc2"
        ],
        [
            "apply FinductPosAux with (p := p) (x := (Fweight q - Fweight p)%Z); auto.",
            "VernacExtend",
            "334c0f37fe5acbe9af35d8f4a22565e64029a35e"
        ],
        [
            "cut (Fweight p <= Fweight q)%Z; [ auto with zarith | idtac ].",
            "VernacExtend",
            "190018076fb2cb6655223f50e25b4ac259dcb29b"
        ],
        [
            "apply FweightZle; auto with float.",
            "VernacExtend",
            "d5b44d535db36c1f05016830c60e764aab833223"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FinductNegAux : forall (P : float -> Prop) (p : float), (0 <= p)%R -> Fcanonic radix b p -> P p -> (forall q : float, Fcanonic radix b q -> (0 < q)%R -> (q <= p)%R -> P q -> P (FPred b radix precision q)) -> forall x : Z, (0 <= x)%Z -> forall q : float, x = (Fweight p - Fweight q)%Z -> Fcanonic radix b q -> (0 <= q)%R -> (q <= p)%R -> P q.",
            "VernacStartTheoremProof",
            "a27b03aee1f310f5bdff82a828de35fb00787a0e"
        ],
        [
            "intros P p H' H'0 H'1 H'2 x H'3; pattern x in |- *.",
            "VernacExtend",
            "996b3c03288d8bed8d6d0a53ddb1f61c6f300493"
        ],
        [
            "apply Z_lt_induction; auto.",
            "VernacExtend",
            "40f5da9fa9e64533a4909392cb7c98d04332cefa"
        ],
        [
            "intros x0 H'4 q H'5 H'6 H'7 H'8.",
            "VernacExtend",
            "dde4ca486b032fbf9ad4f80eea68e68bfc5afb46"
        ],
        [
            "Casec H'8; intros H'8.",
            "VernacExtend",
            "c3226f43824d166eb6d349a3281b1c362e814abf"
        ],
        [
            "cut (FSucc b radix precision q <= p)%R; [ intros Rle1 | idtac ].",
            "VernacExtend",
            "212e749d456cd56a20bccbc5cf5773bf7c733dcc"
        ],
        [
            "cut (P (FSucc b radix precision q)); [ intros P1 | idtac ].",
            "VernacExtend",
            "dbccc103d2e58bf7489afb2869cbdeeea95ee75a"
        ],
        [
            "rewrite <- (FPredSuc b radix precision) with (x := q); auto with arith.",
            "VernacExtend",
            "1518fe8c5acb134d7663556205322c10ca2df837"
        ],
        [
            "apply H'2; auto with float arith.",
            "VernacExtend",
            "897f4dec18392f6187e7b8e68f79637ef203bd21"
        ],
        [
            "apply Rle_lt_trans with (FtoRradix q); auto.",
            "VernacExtend",
            "65d67b997e571c20a613d43dc7f82d0eed857602"
        ],
        [
            "apply (FSuccLt b radix); auto with arith.",
            "VernacExtend",
            "9487aec677869877e31c750e858505e711b6d12a"
        ],
        [
            "apply H'4 with (y := (Fweight p - Fweight (FSucc b radix precision q))%Z); auto.",
            "VernacExtend",
            "0b82bfe820b2552d849e85cbf908fad517f795e1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "cut (Fweight (FSucc b radix precision q) <= Fweight p)%Z; auto with zarith.",
            "VernacExtend",
            "18150ee1bd86a4355a6bf897924e4dee9e266663"
        ],
        [
            "apply FweightZle; auto.",
            "VernacExtend",
            "afbd57d6bd9a5e1eb3d22a16806f7bebd238dfc8"
        ],
        [
            "apply FSuccCanonic; auto with arith.",
            "VernacExtend",
            "3f7597e39b86b65f6f8e4014d2912b1a80208033"
        ],
        [
            "apply Rle_trans with (FtoRradix q); auto; apply Rlt_le.",
            "VernacExtend",
            "6fd846762090f0022ade553a78ae0f9002263c78"
        ],
        [
            "apply (FSuccLt b radix); auto with arith.",
            "VernacExtend",
            "9487aec677869877e31c750e858505e711b6d12a"
        ],
        [
            "rewrite H'5.",
            "VernacExtend",
            "408e27c747e37a9161b8d1de2e1be5ddec6d2694"
        ],
        [
            "cut (Fweight q < Fweight (FSucc b radix precision q))%Z; [ auto with zarith | idtac ].",
            "VernacExtend",
            "70a8b11dfba00172c8859e9a30105717057914c8"
        ],
        [
            "apply FweightLt; auto with float.",
            "VernacExtend",
            "8127cc403dc62664237dbd3805ab2b7f209f36f4"
        ],
        [
            "apply (FSuccLt b radix); auto with arith.",
            "VernacExtend",
            "9487aec677869877e31c750e858505e711b6d12a"
        ],
        [
            "apply FSuccCanonic; auto with arith.",
            "VernacExtend",
            "3f7597e39b86b65f6f8e4014d2912b1a80208033"
        ],
        [
            "apply Rle_trans with (FtoRradix q); auto; apply Rlt_le.",
            "VernacExtend",
            "6fd846762090f0022ade553a78ae0f9002263c78"
        ],
        [
            "apply (FSuccLt b radix); auto with arith.",
            "VernacExtend",
            "9487aec677869877e31c750e858505e711b6d12a"
        ],
        [
            "apply (FSuccProp b radix); auto with arith.",
            "VernacExtend",
            "89971c72988ea8c3ba44bdc2dde0514a1c60167f"
        ],
        [
            "rewrite <- (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
            "VernacExtend",
            "24be393ff82e1061ac05b0666fb914212e7c1b14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem FinductNeg : forall (P : float -> Prop) (p : float), (0 <= p)%R -> Fcanonic radix b p -> P p -> (forall q : float, Fcanonic radix b q -> (0 < q)%R -> (q <= p)%R -> P q -> P (FPred b radix precision q)) -> forall q : float, Fcanonic radix b q -> (0 <= q)%R -> (q <= p)%R -> P q.",
            "VernacStartTheoremProof",
            "2fea6ac9e2fde279c7e632c796d4745afc8e1a5c"
        ],
        [
            "intros P p H' H'0 H'1 H'2 q H'3 H'4 H'5.",
            "VernacExtend",
            "5499ad685a4f9478a85eb1b05a1c2237e1e5bde0"
        ],
        [
            "apply FinductNegAux with (p := p) (x := (Fweight p - Fweight q)%Z); auto.",
            "VernacExtend",
            "7abf3d840f5440c966e29012fa96959b7c4e14d8"
        ],
        [
            "cut (Fweight q <= Fweight p)%Z; [ auto with zarith | idtac ].",
            "VernacExtend",
            "bdea2317188f453700c89025abdbcc04a87dcae5"
        ],
        [
            "apply FweightZle; auto with float.",
            "VernacExtend",
            "d5b44d535db36c1f05016830c60e764aab833223"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem radixRangeBoundExp : forall p q : float, Fcanonic radix b p -> Fcanonic radix b q -> (0 <= p)%R -> (p < q)%R -> (q < radix * p)%R -> Fexp p = Fexp q \\/ Zsucc (Fexp p) = Fexp q.",
            "VernacStartTheoremProof",
            "4e506a89f3021b4377269eaf5348f8162bdc629f"
        ],
        [
            "intros p q H' H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "de3538de472f2c35a6a60d0251e982a15935dc42"
        ],
        [
            "case (FcanonicLtPos _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
            "VernacExtend",
            "6716ffafaed202fb04a6d6b10af025ee144e4023"
        ],
        [
            "2: intros H'4; elim H'4; intros H'5 H'6; clear H'4; auto.",
            "VernacExtend",
            "ff50898178439fad2a52aa260766ea8693bcab59"
        ],
        [
            "intros H'4; right.",
            "VernacExtend",
            "e40180a21ea150d589b23f78dafb497f8a403d82"
        ],
        [
            "Casec H'; intros H'.",
            "VernacExtend",
            "8c490b993e548cdf09eebf3a2848b2dc9640fa99"
        ],
        [
            "case (FcanonicLtPos _ radixMoreThanOne b precision) with (p := q) (q := Float (Fnum p) (Zsucc (Fexp p))); auto with arith.",
            "VernacExtend",
            "0e373a5551b0dbb0a837c6a8e70e166b050cbc2a"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "case H'; intros H1 H2; red in H1.",
            "VernacExtend",
            "4520ba4d0138e38e2d65b6576cd86853ee421f61"
        ],
        [
            "repeat split; simpl in |- *; auto with float.",
            "VernacExtend",
            "3e093824de91ab2af8d090987eafb93df05226c2"
        ],
        [
            "apply Zle_trans with (Fexp p); auto with float zarith.",
            "VernacExtend",
            "369bfc959621c8f272757e9789bf0ce203499f11"
        ],
        [
            "apply Rle_trans with (FtoRradix p); auto; apply Rlt_le; auto.",
            "VernacExtend",
            "76999b1bded477179e46e7bde9f4818482761a04"
        ],
        [
            "unfold FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "b122ca13d8a9bd3595bc1e75c78d344f671d3504"
        ],
        [
            "rewrite powerRZ_Zs; auto with real zarith; auto.",
            "VernacExtend",
            "25c9e2b424fee0b385e014b000740e6205f7618a"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite (fun (x : R) (y : Z) => Rmult_comm x y); rewrite Rmult_assoc; auto.",
            "VernacExtend",
            "cbe0500302391a8d9a73417014f3cd53684d1f6b"
        ],
        [
            "simpl in |- *; intros; apply Zle_antisym; auto with zarith.",
            "VernacExtend",
            "03694993ad54fed62bd9ad2c692b7f00c55b54e0"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros H'5; elim H'5; intros H'6 H'7; auto.",
            "VernacExtend",
            "2f0f3dbaada459a562b2e38cee0ffe2a93ff096b"
        ],
        [
            "case (FcanonicLtPos _ radixMoreThanOne b precision) with (p := q) (q := Float (nNormMin radix precision) (Zsucc (Fexp p))); auto with arith.",
            "VernacExtend",
            "1421f284572021b29df15f7ffce90f93400c2370"
        ],
        [
            "left; repeat split; simpl in |- *.",
            "VernacExtend",
            "6149ad99c2543d178c213f30aef009ba6b181d0e"
        ],
        [
            "rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "e3b6647506c6d43441146989691d7c27f1722b7e"
        ],
        [
            "apply ZltNormMinVnum; auto with zarith.",
            "VernacExtend",
            "3a9f0c09f8f41f94f7cdb38a8391de1fb30ea12d"
        ],
        [
            "unfold nNormMin in |- *; auto with zarith.",
            "VernacExtend",
            "13c94bc3a7bcdd7b9290d9f851cfb48eb65760ca"
        ],
        [
            "apply Zle_trans with (Fexp p); auto with float zarith.",
            "VernacExtend",
            "369bfc959621c8f272757e9789bf0ce203499f11"
        ],
        [
            "case H'; auto with float.",
            "VernacExtend",
            "a3b51daee2f74fa3d604025dd26c73450a685610"
        ],
        [
            "rewrite <- (PosNormMin radix b precision); auto with zarith.",
            "VernacExtend",
            "97573d08e09e726ae0adf89d6a91648f3b03719d"
        ],
        [
            "apply Rle_trans with (1 := H'1); auto with real.",
            "VernacExtend",
            "0d72f40d6751e6946b9f599caaf4b19c962bb874"
        ],
        [
            "apply Rlt_trans with (1 := H'3).",
            "VernacExtend",
            "7cff7c9c9257f2e1313c6fdc7d8b013de210c224"
        ],
        [
            "unfold FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "b122ca13d8a9bd3595bc1e75c78d344f671d3504"
        ],
        [
            "rewrite powerRZ_Zs; auto with real zarith; auto.",
            "VernacExtend",
            "25c9e2b424fee0b385e014b000740e6205f7618a"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite (fun (x : R) (y : Z) => Rmult_comm x y); rewrite Rmult_assoc; auto.",
            "VernacExtend",
            "cbe0500302391a8d9a73417014f3cd53684d1f6b"
        ],
        [
            "apply Rmult_lt_compat_l; auto with real arith.",
            "VernacExtend",
            "2c95e3f10177f062380352d768090c173015e1d6"
        ],
        [
            "case H'.",
            "VernacExtend",
            "59f58feee27b0b33473890c47947a750059972d7"
        ],
        [
            "intros H'5 H'6; elim H'6; intros H'7 H'8; rewrite H'7; clear H'6.",
            "VernacExtend",
            "93666e9473f93d18dd7c5ebc036d2e133a7b5958"
        ],
        [
            "change (p < firstNormalPos radix b precision)%R in |- *.",
            "VernacExtend",
            "5ad8ee475d35bd5cdbed9d5bcd1b19810ae043a5"
        ],
        [
            "apply (FsubnormalLtFirstNormalPos radix); auto with arith.",
            "VernacExtend",
            "b69dcf82eda27d69c1ce6b4a697260700cbbf6de"
        ],
        [
            "simpl in |- *; intros; apply Zle_antisym; auto with zarith.",
            "VernacExtend",
            "03694993ad54fed62bd9ad2c692b7f00c55b54e0"
        ],
        [
            "intros H'5; elim H'5; intros H'6 H'7; rewrite H'6; clear H'5; auto.",
            "VernacExtend",
            "460fd9cc14932b3f24cec7724b0719ab51b07703"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End finduct.",
            "VernacEndSegment",
            "cc9c24986d7828ea35087b816be3659bbf41f459"
        ]
    ],
    "proofs": [
        {
            "name": "FweightLt",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros p q H' H'0 H'1 H'2.",
                        "VernacExtend",
                        "72bc33bd695361090defa76b144ed28b290b1f49"
                    ]
                },
                {
                    "command": [
                        "cut (Fbounded b p); [ intros Fb1 | apply FcanonicBound with (1 := H') ]; auto.",
                        "VernacExtend",
                        "63c6ad33a1189579d24cd1cbaa3c9ca90ead52bf"
                    ]
                },
                {
                    "command": [
                        "cut (Fbounded b q); [ intros Fb2 | apply FcanonicBound with (1 := H'0) ]; auto.",
                        "VernacExtend",
                        "dc2db62600c5d971645579e3f23b43d25ca19c88"
                    ]
                },
                {
                    "command": [
                        "case (FcanonicLtPos _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith; intros Zl1.",
                        "VernacExtend",
                        "82599ac1c7acad061cfbf2e7958b195fc3bd7155"
                    ]
                },
                {
                    "command": [
                        "unfold Fweight in |- *; simpl in |- *.",
                        "VernacExtend",
                        "d36c01f806e2f22614fec6b137bda081ca61351f"
                    ]
                },
                {
                    "command": [
                        "replace (Fexp q) with (Fexp q - Fexp p + Fexp p)%Z; [ idtac | ring ].",
                        "VernacExtend",
                        "8292a0fc7a2c2eed18b375a32e0baad52575a351"
                    ]
                },
                {
                    "command": [
                        "rewrite Zmult_plus_distr_l.",
                        "VernacExtend",
                        "8222674cbcbc31128dc19ee443d72bd93cffbd4f"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_assoc.",
                        "VernacExtend",
                        "0e5fe194ecdfc9efe27c2867b803f58d698b13d8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x y z : Z => Zplus_comm x (y * z)).",
                        "VernacExtend",
                        "4b913b90da1c803a9d01d71fd6fa89a3b126ad74"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_lt_compat_l.",
                        "VernacExtend",
                        "9657ee7b198805b3d3672a1c480b26bc8b2bd3e0"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with (Zpower_nat radix precision); auto with zarith.",
                        "VernacExtend",
                        "c5940ca4b6ec8dc37221f3d863b1fc6707ec1344"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zpred (Zpower_nat radix precision)); auto with zarith.",
                        "VernacExtend",
                        "c1c7c69aa770be04f32b257f6594f5a07473543c"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zabs_inv2; auto with float zarith.",
                        "VernacExtend",
                        "3fb571cf48607aa363e12a07f462540503852199"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zpred; auto with float zarith.",
                        "VernacExtend",
                        "fc97091c70de7ea4960a94c50f2798d1b7274be3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pGivesBound; auto with float.",
                        "VernacExtend",
                        "aab0acd207adc0b61fe2d138022e47ac1c66af9b"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with ((Fexp q - Fexp p) * Zpower_nat radix precision)%Z; auto with zarith.",
                        "VernacExtend",
                        "1f01b18c1f608b8c781469ea4770eb334499a4f3"
                    ]
                },
                {
                    "command": [
                        "pattern (Zpower_nat radix precision) at 1 in |- *; replace (Zpower_nat radix precision) with (Zsucc 0 * Zpower_nat radix precision)%Z; auto.",
                        "VernacExtend",
                        "10fcc79dc252998f3166f7bba10a80457913a70d"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zmult_comp_r; auto with zarith.",
                        "VernacExtend",
                        "6df3ad18f4910f873061ef6fd03b5647e45f11b6"
                    ]
                },
                {
                    "command": [
                        "unfold Zsucc in |- *; ring.",
                        "VernacExtend",
                        "969b534f6ecb1c132a53aa0d310df91c06090b72"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= Fnum q)%Z; auto with zarith.",
                        "VernacExtend",
                        "10f2e13b62857bd99cc471f8034d77af4d9ae638"
                    ]
                },
                {
                    "command": [
                        "apply (LeR0Fnum radix); auto.",
                        "VernacExtend",
                        "8495e6ad2e5a68d8e7fe5d9a8401af435ce04ea2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (FtoRradix p); auto; apply Rlt_le; auto.",
                        "VernacExtend",
                        "76999b1bded477179e46e7bde9f4818482761a04"
                    ]
                },
                {
                    "command": [
                        "elim Zl1; intros H'3 H'4; clear Zl1.",
                        "VernacExtend",
                        "22736c4eac380fd0378e957795531e4f259100d5"
                    ]
                },
                {
                    "command": [
                        "unfold Fweight in |- *; simpl in |- *.",
                        "VernacExtend",
                        "d36c01f806e2f22614fec6b137bda081ca61351f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'3.",
                        "VernacExtend",
                        "b4b6d99407173024ab9b969b0670df905732f89c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x y z : Z => Zplus_comm x (y * z)).",
                        "VernacExtend",
                        "4b913b90da1c803a9d01d71fd6fa89a3b126ad74"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_lt_compat_l; auto.",
                        "VernacExtend",
                        "f01a8efd33bc008321e560f1edce441d236a41cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FweightEq",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros p q H' H'0 H'1.",
                        "VernacExtend",
                        "05c3e1b098970ef14e38b413a09ed550ca5b4d53"
                    ]
                },
                {
                    "command": [
                        "rewrite (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
                        "VernacExtend",
                        "52a85140576de8bf6919954a2b5e49b3adfa77d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FweightZle",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros p q H' H'0 H'1 H'2; Casec H'2; intros H'2.",
                        "VernacExtend",
                        "d948192ecb6197845436695391f2cd661bbcb17e"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_weak.",
                        "VernacExtend",
                        "77c804797cd604de1af1fd78f914f426e7c6ce85"
                    ]
                },
                {
                    "command": [
                        "apply FweightLt; auto.",
                        "VernacExtend",
                        "fdfcc5bb44b996e34da104144f9724c0cc0479a6"
                    ]
                },
                {
                    "command": [
                        "rewrite (FweightEq p q); auto with zarith.",
                        "VernacExtend",
                        "dee626f52d6a7d06ac1dcc203826cb011b3dc5d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FinductPosAux",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros P p H' H'0 H'1 H'2 x H'3; pattern x in |- *.",
                        "VernacExtend",
                        "996b3c03288d8bed8d6d0a53ddb1f61c6f300493"
                    ]
                },
                {
                    "command": [
                        "apply Z_lt_induction; auto.",
                        "VernacExtend",
                        "40f5da9fa9e64533a4909392cb7c98d04332cefa"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'4 q H'5 H'6 H'7.",
                        "VernacExtend",
                        "42b9fd775964658242f962891cfaa238c45b04ef"
                    ]
                },
                {
                    "command": [
                        "Casec H'7; intros H'7.",
                        "VernacExtend",
                        "be231b12e1dd57e1507d693dfd2501c1f58e3a55"
                    ]
                },
                {
                    "command": [
                        "cut (p <= FPred b radix precision q)%R; [ intros Rl1 | idtac ].",
                        "VernacExtend",
                        "2b44b77c434e1fae9d02f776d0a5977fdc4eedfe"
                    ]
                },
                {
                    "command": [
                        "cut (P (FPred b radix precision q)); [ intros P1 | idtac ].",
                        "VernacExtend",
                        "b8956fa7ac3be9286b6168c736ac799fc998a72d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (FSucPred b radix precision) with (x := q); auto with arith.",
                        "VernacExtend",
                        "df57c5432ad796e88d93013dc3d78aaa78055caf"
                    ]
                },
                {
                    "command": [
                        "apply H'2; auto with float arith.",
                        "VernacExtend",
                        "897f4dec18392f6187e7b8e68f79637ef203bd21"
                    ]
                },
                {
                    "command": [
                        "apply H'4 with (y := (Fweight (FPred b radix precision q) - Fweight p)%Z); auto.",
                        "VernacExtend",
                        "106b82175d9a70b12500b7a0c6d6fece2f3527cb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight p <= Fweight (FPred b radix precision q))%Z; auto with zarith.",
                        "VernacExtend",
                        "c52200c7276a72fe2ffa1f731bf64641cc41ec5d"
                    ]
                },
                {
                    "command": [
                        "apply FweightZle; auto.",
                        "VernacExtend",
                        "afbd57d6bd9a5e1eb3d22a16806f7bebd238dfc8"
                    ]
                },
                {
                    "command": [
                        "apply FPredCanonic; auto with arith.",
                        "VernacExtend",
                        "fb01792a4f1b977d77a769f1ebde16ae6a9a76bc"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5.",
                        "VernacExtend",
                        "408e27c747e37a9161b8d1de2e1be5ddec6d2694"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight (FPred b radix precision q) < Fweight q)%Z; [ auto with zarith | idtac ].",
                        "VernacExtend",
                        "fc94390610a7556baa788b407735359eb68753f3"
                    ]
                },
                {
                    "command": [
                        "apply FweightLt; auto with float.",
                        "VernacExtend",
                        "8127cc403dc62664237dbd3805ab2b7f209f36f4"
                    ]
                },
                {
                    "command": [
                        "apply (R0RltRlePred b radix precision); auto.",
                        "VernacExtend",
                        "0841c71d5b0a276fff74d07926ab3c5a571ccfd2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (FtoRradix p); auto.",
                        "VernacExtend",
                        "d3af9e05666ed4270d9225f36b71571368f8d062"
                    ]
                },
                {
                    "command": [
                        "apply (FPredLt b radix precision); auto.",
                        "VernacExtend",
                        "35f7f18762df85e7132f0d77afb75606fc06d36a"
                    ]
                },
                {
                    "command": [
                        "apply (FPredCanonic b radix precision); auto with arith.",
                        "VernacExtend",
                        "d061aeecf7c202920fed0767a5906cdb8953c2ae"
                    ]
                },
                {
                    "command": [
                        "apply (FPredProp b radix precision); auto with arith.",
                        "VernacExtend",
                        "b57c1866fb5d18f2c00e6926bcd3bf05846d89d9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
                        "VernacExtend",
                        "24be393ff82e1061ac05b0666fb914212e7c1b14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FinductPos",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros P p H' H'0 H'1 H'2 q H'3 H'4.",
                        "VernacExtend",
                        "da97c79180f18d17090cd7e314821b0a9c55afc2"
                    ]
                },
                {
                    "command": [
                        "apply FinductPosAux with (p := p) (x := (Fweight q - Fweight p)%Z); auto.",
                        "VernacExtend",
                        "334c0f37fe5acbe9af35d8f4a22565e64029a35e"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight p <= Fweight q)%Z; [ auto with zarith | idtac ].",
                        "VernacExtend",
                        "190018076fb2cb6655223f50e25b4ac259dcb29b"
                    ]
                },
                {
                    "command": [
                        "apply FweightZle; auto with float.",
                        "VernacExtend",
                        "d5b44d535db36c1f05016830c60e764aab833223"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FinductNegAux",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros P p H' H'0 H'1 H'2 x H'3; pattern x in |- *.",
                        "VernacExtend",
                        "996b3c03288d8bed8d6d0a53ddb1f61c6f300493"
                    ]
                },
                {
                    "command": [
                        "apply Z_lt_induction; auto.",
                        "VernacExtend",
                        "40f5da9fa9e64533a4909392cb7c98d04332cefa"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'4 q H'5 H'6 H'7 H'8.",
                        "VernacExtend",
                        "dde4ca486b032fbf9ad4f80eea68e68bfc5afb46"
                    ]
                },
                {
                    "command": [
                        "Casec H'8; intros H'8.",
                        "VernacExtend",
                        "c3226f43824d166eb6d349a3281b1c362e814abf"
                    ]
                },
                {
                    "command": [
                        "cut (FSucc b radix precision q <= p)%R; [ intros Rle1 | idtac ].",
                        "VernacExtend",
                        "212e749d456cd56a20bccbc5cf5773bf7c733dcc"
                    ]
                },
                {
                    "command": [
                        "cut (P (FSucc b radix precision q)); [ intros P1 | idtac ].",
                        "VernacExtend",
                        "dbccc103d2e58bf7489afb2869cbdeeea95ee75a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (FPredSuc b radix precision) with (x := q); auto with arith.",
                        "VernacExtend",
                        "1518fe8c5acb134d7663556205322c10ca2df837"
                    ]
                },
                {
                    "command": [
                        "apply H'2; auto with float arith.",
                        "VernacExtend",
                        "897f4dec18392f6187e7b8e68f79637ef203bd21"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (FtoRradix q); auto.",
                        "VernacExtend",
                        "65d67b997e571c20a613d43dc7f82d0eed857602"
                    ]
                },
                {
                    "command": [
                        "apply (FSuccLt b radix); auto with arith.",
                        "VernacExtend",
                        "9487aec677869877e31c750e858505e711b6d12a"
                    ]
                },
                {
                    "command": [
                        "apply H'4 with (y := (Fweight p - Fweight (FSucc b radix precision q))%Z); auto.",
                        "VernacExtend",
                        "0b82bfe820b2552d849e85cbf908fad517f795e1"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight (FSucc b radix precision q) <= Fweight p)%Z; auto with zarith.",
                        "VernacExtend",
                        "18150ee1bd86a4355a6bf897924e4dee9e266663"
                    ]
                },
                {
                    "command": [
                        "apply FweightZle; auto.",
                        "VernacExtend",
                        "afbd57d6bd9a5e1eb3d22a16806f7bebd238dfc8"
                    ]
                },
                {
                    "command": [
                        "apply FSuccCanonic; auto with arith.",
                        "VernacExtend",
                        "3f7597e39b86b65f6f8e4014d2912b1a80208033"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (FtoRradix q); auto; apply Rlt_le.",
                        "VernacExtend",
                        "6fd846762090f0022ade553a78ae0f9002263c78"
                    ]
                },
                {
                    "command": [
                        "apply (FSuccLt b radix); auto with arith.",
                        "VernacExtend",
                        "9487aec677869877e31c750e858505e711b6d12a"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5.",
                        "VernacExtend",
                        "408e27c747e37a9161b8d1de2e1be5ddec6d2694"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight q < Fweight (FSucc b radix precision q))%Z; [ auto with zarith | idtac ].",
                        "VernacExtend",
                        "70a8b11dfba00172c8859e9a30105717057914c8"
                    ]
                },
                {
                    "command": [
                        "apply FweightLt; auto with float.",
                        "VernacExtend",
                        "8127cc403dc62664237dbd3805ab2b7f209f36f4"
                    ]
                },
                {
                    "command": [
                        "apply (FSuccLt b radix); auto with arith.",
                        "VernacExtend",
                        "9487aec677869877e31c750e858505e711b6d12a"
                    ]
                },
                {
                    "command": [
                        "apply FSuccCanonic; auto with arith.",
                        "VernacExtend",
                        "3f7597e39b86b65f6f8e4014d2912b1a80208033"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (FtoRradix q); auto; apply Rlt_le.",
                        "VernacExtend",
                        "6fd846762090f0022ade553a78ae0f9002263c78"
                    ]
                },
                {
                    "command": [
                        "apply (FSuccLt b radix); auto with arith.",
                        "VernacExtend",
                        "9487aec677869877e31c750e858505e711b6d12a"
                    ]
                },
                {
                    "command": [
                        "apply (FSuccProp b radix); auto with arith.",
                        "VernacExtend",
                        "89971c72988ea8c3ba44bdc2dde0514a1c60167f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (FcanonicUnique _ radixMoreThanOne b precision) with (p := p) (q := q); auto with arith.",
                        "VernacExtend",
                        "24be393ff82e1061ac05b0666fb914212e7c1b14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FinductNeg",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros P p H' H'0 H'1 H'2 q H'3 H'4 H'5.",
                        "VernacExtend",
                        "5499ad685a4f9478a85eb1b05a1c2237e1e5bde0"
                    ]
                },
                {
                    "command": [
                        "apply FinductNegAux with (p := p) (x := (Fweight p - Fweight q)%Z); auto.",
                        "VernacExtend",
                        "7abf3d840f5440c966e29012fa96959b7c4e14d8"
                    ]
                },
                {
                    "command": [
                        "cut (Fweight q <= Fweight p)%Z; [ auto with zarith | idtac ].",
                        "VernacExtend",
                        "bdea2317188f453700c89025abdbcc04a87dcae5"
                    ]
                },
                {
                    "command": [
                        "apply FweightZle; auto with float.",
                        "VernacExtend",
                        "d5b44d535db36c1f05016830c60e764aab833223"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}