{
    "filename": "Fprop.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Fbound.",
            "VernacRequire",
            "e05a9f6fc08b10162b1dc59ad504e46e334d4c2b"
        ],
        [
            "Section Fprop.",
            "VernacBeginSection",
            "288ddd69e451ef9f0e91d1dfcf71426518387d19"
        ],
        [
            "Variable radix : Z.",
            "VernacAssumption",
            "2349b77d134e0c9bb013a8bdca0020ca16fc023b"
        ],
        [
            "Hypothesis radixMoreThanOne : (1 < radix)%Z.",
            "VernacAssumption",
            "f4d3774b2275f4c4c3af941091d4d99f9a2129aa"
        ],
        [
            "Let FtoRradix := FtoR radix.",
            "VernacDefinition",
            "5aa29a9595c6e9e03b28c6d232299552ec761ad7"
        ],
        [
            "Local Coercion FtoRradix : float >-> R.",
            "VernacCoercion",
            "cec6b845059d434f72dda1a67638af64e1fb0628"
        ],
        [
            "Variable b : Fbound.",
            "VernacAssumption",
            "17a11c003f49f819b8cb809f61b140702916486d"
        ],
        [
            "Theorem SterbenzAux : forall x y : float, Fbounded b x -> Fbounded b y -> (y <= x)%R -> (x <= 2%nat * y)%R -> Fbounded b (Fminus radix x y).",
            "VernacStartTheoremProof",
            "c028fd54e023f2c88d13bc009ebb8be44b0d7b35"
        ],
        [
            "intros x y H' H'0 H'1 H'2.",
            "VernacExtend",
            "f4c6938634f065cc68eff94850d69a723e938618"
        ],
        [
            "cut (0 <= Fminus radix x y)%R; [ intros Rle1 | idtac ].",
            "VernacExtend",
            "333abcaac220809306fe20fab1f101a527abe044"
        ],
        [
            "cut (Fminus radix x y <= y)%R; [ intros Rle2 | idtac ].",
            "VernacExtend",
            "31761d7018211a13e37ecbe249883bf1a3afe7e3"
        ],
        [
            "case (Zle_or_lt (Fexp x) (Fexp y)); intros Zle1.",
            "VernacExtend",
            "cd8ce868ee13157f670f3e2e77f8da900907c8f0"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply Zle_lt_trans with (Zabs (Fnum x)); auto with float.",
            "VernacExtend",
            "ed38e6009eb219a957e9be034fb119552a08ca05"
        ],
        [
            "change (Fnum (Fabs (Fminus radix x y)) <= Fnum (Fabs x))%Z in |- *.",
            "VernacExtend",
            "1f32dafb07587d057eac77e6d46d5ac3d914f075"
        ],
        [
            "apply Rle_Fexp_eq_Zle with (radix := radix); auto with arith.",
            "VernacExtend",
            "9e010cb344e056de0a32c5c87a8ac13a89edb70c"
        ],
        [
            "repeat rewrite Fabs_correct.",
            "VernacExtend",
            "28dbf610ba3808ea4739a02e27aac54aa073c5bb"
        ],
        [
            "repeat rewrite Rabs_pos_eq; auto.",
            "VernacExtend",
            "a7253ad605b7c95ffa3391227a0b8b5f97116693"
        ],
        [
            "apply Rle_trans with (2 := H'1); auto.",
            "VernacExtend",
            "71d89cc46a063a1271d72c91717f131cc47f86d7"
        ],
        [
            "apply Rle_trans with (2 := H'1); auto.",
            "VernacExtend",
            "71d89cc46a063a1271d72c91717f131cc47f86d7"
        ],
        [
            "apply Rle_trans with (2 := Rle2); auto.",
            "VernacExtend",
            "eaac50a33392ae15017e67096a52a6b45e0d0e62"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "unfold Fminus in |- *; simpl in |- *; apply Zmin_le1; auto.",
            "VernacExtend",
            "aa860e50b5b8b5ccb16f831dc5c9835b27024365"
        ],
        [
            "unfold Fminus in |- *; simpl in |- *; rewrite Zmin_le1; auto with float.",
            "VernacExtend",
            "24978ca4a2a9540d3b945624fa36f2ff30380926"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply Zle_lt_trans with (Zabs (Fnum y)); auto with float.",
            "VernacExtend",
            "91363448ba9f386ead5308b9c22b6acc8d2a3b05"
        ],
        [
            "change (Fnum (Fabs (Fminus radix x y)) <= Fnum (Fabs y))%Z in |- *.",
            "VernacExtend",
            "7385388b2dfcf01ec8a9f450fe05932c51c06321"
        ],
        [
            "apply Rle_Fexp_eq_Zle with (radix := radix); auto with arith.",
            "VernacExtend",
            "9e010cb344e056de0a32c5c87a8ac13a89edb70c"
        ],
        [
            "repeat rewrite Fabs_correct.",
            "VernacExtend",
            "28dbf610ba3808ea4739a02e27aac54aa073c5bb"
        ],
        [
            "repeat rewrite Rabs_pos_eq; auto.",
            "VernacExtend",
            "a7253ad605b7c95ffa3391227a0b8b5f97116693"
        ],
        [
            "apply Rle_trans with (2 := Rle2); auto.",
            "VernacExtend",
            "eaac50a33392ae15017e67096a52a6b45e0d0e62"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "unfold Fminus in |- *; simpl in |- *; apply Zmin_le2; auto with zarith.",
            "VernacExtend",
            "57a8e61c3ddbef19a92f807bc7fbefeb6b7a053a"
        ],
        [
            "unfold Fminus in |- *; simpl in |- *; rewrite Zmin_le2; auto with float zarith.",
            "VernacExtend",
            "8f75a445b092fe6c21d8c2541d952be2042399d1"
        ],
        [
            "rewrite (Fminus_correct radix); auto with arith; fold FtoRradix in |- *.",
            "VernacExtend",
            "ae87cf93d1ace57b2e1d3654b3b47fb5241b55f3"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoRradix y); auto.",
            "VernacExtend",
            "15ffdb7b67e580f317a62992ceff67f69ed084d6"
        ],
        [
            "replace (y + (x - y))%R with (FtoRradix x); [ idtac | ring ].",
            "VernacExtend",
            "79e7c0f25263f02852f98432645f0baf553e2650"
        ],
        [
            "replace (y + y)%R with (2%nat * y)%R; [ auto | simpl in |- *; ring ].",
            "VernacExtend",
            "7c2710491d831b34506879eabb5e616221b1f10a"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "rewrite (Fminus_correct radix); auto with arith; fold FtoRradix in |- *.",
            "VernacExtend",
            "ae87cf93d1ace57b2e1d3654b3b47fb5241b55f3"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoRradix y); auto.",
            "VernacExtend",
            "15ffdb7b67e580f317a62992ceff67f69ed084d6"
        ],
        [
            "replace (y + (x - y))%R with (FtoRradix x); [ idtac | ring ].",
            "VernacExtend",
            "79e7c0f25263f02852f98432645f0baf553e2650"
        ],
        [
            "replace (y + 0)%R with (FtoRradix y); [ auto | simpl in |- *; ring ].",
            "VernacExtend",
            "4af09eab2a4674248b9f3b23b85985463adbf57f"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Sterbenz : forall x y : float, Fbounded b x -> Fbounded b y -> (/ 2%nat * y <= x)%R -> (x <= 2%nat * y)%R -> Fbounded b (Fminus radix x y).",
            "VernacStartTheoremProof",
            "8764b29e0733a243afc48e5fc231ccfd407ea63a"
        ],
        [
            "intros x y H' H'0 H'1 H'2.",
            "VernacExtend",
            "f4c6938634f065cc68eff94850d69a723e938618"
        ],
        [
            "cut (y <= 2%nat * x)%R; [ intros Le1 | idtac ].",
            "VernacExtend",
            "3ebf4d6109e34d1d467b41810e4e409e6d31a03c"
        ],
        [
            "case (Rle_or_lt x y); intros Le2; auto.",
            "VernacExtend",
            "a7f4781b7e20e751a994a3d8a086e8ef3677ae69"
        ],
        [
            "apply oppBoundedInv; auto.",
            "VernacExtend",
            "673f158baebdef645b2575ffcd463e80421a20b2"
        ],
        [
            "rewrite Fopp_Fminus.",
            "VernacExtend",
            "dbf0252d4a6d9d5774b0171f6b7c19c3d59aced6"
        ],
        [
            "apply SterbenzAux; auto with real.",
            "VernacExtend",
            "fb577e36d28b9c4c60f238d21692ce56e5e64ba7"
        ],
        [
            "apply SterbenzAux; auto with real.",
            "VernacExtend",
            "fb577e36d28b9c4c60f238d21692ce56e5e64ba7"
        ],
        [
            "apply Rmult_le_reg_l with (r := (/ 2%nat)%R).",
            "VernacExtend",
            "fe973ebd4378ee3c141f9c5232d0ceaa857b8c82"
        ],
        [
            "apply Rinv_0_lt_compat; auto with real.",
            "VernacExtend",
            "4026f9923d214cb32a5e3a9b4c28c36a57ee2e20"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite Rinv_l; auto with real.",
            "VernacExtend",
            "608cdc10e94a34e788fe72ac66b3aec5ffad2a26"
        ],
        [
            "rewrite Rmult_1_l; auto.",
            "VernacExtend",
            "b78b3743a283901f883571bb53aceb233dc8d4ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BminusSameExpAux : forall x y : float, Fbounded b x -> Fbounded b y -> (0 <= y)%R -> (y <= x)%R -> Fexp x = Fexp y -> Fbounded b (Fminus radix x y).",
            "VernacStartTheoremProof",
            "22b4d7b0d7a4ffd6f793b71795f3133d70934342"
        ],
        [
            "intros x y H' H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
        ],
        [
            "cut (0 < radix)%Z; [ intros Z1 | idtac ].",
            "VernacExtend",
            "942410fac8b66648ca4d0c7a44455b65232f11b5"
        ],
        [
            "rewrite minusSameExp; auto.",
            "VernacExtend",
            "fb44c2aa15df94ae22ced9fe0235ad9d161d64e5"
        ],
        [
            "repeat split; simpl in |- *; auto with float.",
            "VernacExtend",
            "3e093824de91ab2af8d090987eafb93df05226c2"
        ],
        [
            "apply Zle_lt_trans with (Zabs (Fnum x)); auto with float zarith.",
            "VernacExtend",
            "02b926e8eb3caa3ffb2c195e19c7862e3967a764"
        ],
        [
            "change (Fnum (Fabs (Float (Fnum x - Fnum y) (Fexp x))) <= Fnum (Fabs x))%Z in |- *.",
            "VernacExtend",
            "589bd9b9b29d2b4ec6668add1cfb8195adc469a5"
        ],
        [
            "apply Rle_Fexp_eq_Zle with (radix := radix); auto with zarith.",
            "VernacExtend",
            "2198944e547abe8ffdcc6ae807fa1c990b7acae0"
        ],
        [
            "rewrite <- (minusSameExp radix); auto.",
            "VernacExtend",
            "6cb95c3abe5bc729adaebd02ce5c005d1521b982"
        ],
        [
            "repeat rewrite (Fabs_correct radix); try rewrite Fminus_correct; auto with zarith.",
            "VernacExtend",
            "973d69786e1527d8458ee30a3a501e0f3e320cb1"
        ],
        [
            "repeat rewrite Rabs_pos_eq; auto with real.",
            "VernacExtend",
            "1b60d84bb7c426a336b3045bf63082dfe61f7ccb"
        ],
        [
            "apply Rle_trans with (x - 0)%R; auto with real.",
            "VernacExtend",
            "56ade5ce09a50c413caf3eda7e2caf4c2bcbd47f"
        ],
        [
            "unfold Rminus in |- *; auto with real.",
            "VernacExtend",
            "bcbd830886da1759d7f6c5cce2560c5308531e0e"
        ],
        [
            "apply Rle_trans with (FtoRradix y); auto with real.",
            "VernacExtend",
            "0c330bc166a2bfce4dc12fa50c321b83e72fb11a"
        ],
        [
            "replace 0%R with (x - x)%R; auto with real.",
            "VernacExtend",
            "9dbc47ffd9844b9355ac38c6d42369d913b5d026"
        ],
        [
            "unfold Rminus in |- *; auto with real.",
            "VernacExtend",
            "bcbd830886da1759d7f6c5cce2560c5308531e0e"
        ],
        [
            "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
            "VernacExtend",
            "5814664fdf54348d206171364ee559ade508d44c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BminusSameExp : forall x y : float, Fbounded b x -> Fbounded b y -> (0 <= x)%R -> (0 <= y)%R -> Fexp x = Fexp y -> Fbounded b (Fminus radix x y).",
            "VernacStartTheoremProof",
            "5ab83bfafa966b0e97c514815e67b3c53fc1477d"
        ],
        [
            "intros x y H' H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
        ],
        [
            "case (Rle_or_lt x y); intros Le2; auto.",
            "VernacExtend",
            "a7f4781b7e20e751a994a3d8a086e8ef3677ae69"
        ],
        [
            "apply oppBoundedInv; auto.",
            "VernacExtend",
            "673f158baebdef645b2575ffcd463e80421a20b2"
        ],
        [
            "rewrite Fopp_Fminus.",
            "VernacExtend",
            "dbf0252d4a6d9d5774b0171f6b7c19c3d59aced6"
        ],
        [
            "apply BminusSameExpAux; auto.",
            "VernacExtend",
            "a0d6dfe2a9f24cdda55ae95cf22827f556e3db66"
        ],
        [
            "apply BminusSameExpAux; auto with real.",
            "VernacExtend",
            "e662ab38b278c583c31ec79fffb78d32f4bff78b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem BminusSameExpNeg : forall x y : float, Fbounded b x -> Fbounded b y -> (x <= 0)%R -> (y <= 0)%R -> Fexp x = Fexp y -> Fbounded b (Fminus radix x y).",
            "VernacStartTheoremProof",
            "86bb1fda2cc99d16afd40e1c08b7384e8d472083"
        ],
        [
            "intros x y H' H'0 H'1 H'2 H'3.",
            "VernacExtend",
            "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
        ],
        [
            "apply oppBoundedInv; auto.",
            "VernacExtend",
            "673f158baebdef645b2575ffcd463e80421a20b2"
        ],
        [
            "rewrite Fopp_Fminus_dist.",
            "VernacExtend",
            "8af26ead12aedc709ffb9b6a4040c7a99cbe4f50"
        ],
        [
            "apply BminusSameExp; auto with float.",
            "VernacExtend",
            "1a74c712951663e0fa079038538f2f7fd3918f59"
        ],
        [
            "unfold FtoRradix in |- *; rewrite Fopp_correct.",
            "VernacExtend",
            "c3c7ad16a924a974f39fb2584a800e7199b0444e"
        ],
        [
            "replace 0%R with (-0)%R; auto with real.",
            "VernacExtend",
            "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
        ],
        [
            "unfold FtoRradix in |- *; rewrite Fopp_correct.",
            "VernacExtend",
            "c3c7ad16a924a974f39fb2584a800e7199b0444e"
        ],
        [
            "replace 0%R with (-0)%R; auto with real.",
            "VernacExtend",
            "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fprop.",
            "VernacEndSegment",
            "48c427a508085f1158c60a44803a94d82f117fd4"
        ],
        [
            "Hint Resolve Sterbenz BminusSameExp BminusSameExpNeg: float.",
            "VernacHints",
            "a1bc16ccb0f29f1299b50ce9583e00aa402795c6"
        ]
    ],
    "proofs": [
        {
            "name": "SterbenzAux",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1 H'2.",
                        "VernacExtend",
                        "f4c6938634f065cc68eff94850d69a723e938618"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= Fminus radix x y)%R; [ intros Rle1 | idtac ].",
                        "VernacExtend",
                        "333abcaac220809306fe20fab1f101a527abe044"
                    ]
                },
                {
                    "command": [
                        "cut (Fminus radix x y <= y)%R; [ intros Rle2 | idtac ].",
                        "VernacExtend",
                        "31761d7018211a13e37ecbe249883bf1a3afe7e3"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt (Fexp x) (Fexp y)); intros Zle1.",
                        "VernacExtend",
                        "cd8ce868ee13157f670f3e2e77f8da900907c8f0"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs (Fnum x)); auto with float.",
                        "VernacExtend",
                        "ed38e6009eb219a957e9be034fb119552a08ca05"
                    ]
                },
                {
                    "command": [
                        "change (Fnum (Fabs (Fminus radix x y)) <= Fnum (Fabs x))%Z in |- *.",
                        "VernacExtend",
                        "1f32dafb07587d057eac77e6d46d5ac3d914f075"
                    ]
                },
                {
                    "command": [
                        "apply Rle_Fexp_eq_Zle with (radix := radix); auto with arith.",
                        "VernacExtend",
                        "9e010cb344e056de0a32c5c87a8ac13a89edb70c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Fabs_correct.",
                        "VernacExtend",
                        "28dbf610ba3808ea4739a02e27aac54aa073c5bb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_pos_eq; auto.",
                        "VernacExtend",
                        "a7253ad605b7c95ffa3391227a0b8b5f97116693"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := H'1); auto.",
                        "VernacExtend",
                        "71d89cc46a063a1271d72c91717f131cc47f86d7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := H'1); auto.",
                        "VernacExtend",
                        "71d89cc46a063a1271d72c91717f131cc47f86d7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rle2); auto.",
                        "VernacExtend",
                        "eaac50a33392ae15017e67096a52a6b45e0d0e62"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "unfold Fminus in |- *; simpl in |- *; apply Zmin_le1; auto.",
                        "VernacExtend",
                        "aa860e50b5b8b5ccb16f831dc5c9835b27024365"
                    ]
                },
                {
                    "command": [
                        "unfold Fminus in |- *; simpl in |- *; rewrite Zmin_le1; auto with float.",
                        "VernacExtend",
                        "24978ca4a2a9540d3b945624fa36f2ff30380926"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs (Fnum y)); auto with float.",
                        "VernacExtend",
                        "91363448ba9f386ead5308b9c22b6acc8d2a3b05"
                    ]
                },
                {
                    "command": [
                        "change (Fnum (Fabs (Fminus radix x y)) <= Fnum (Fabs y))%Z in |- *.",
                        "VernacExtend",
                        "7385388b2dfcf01ec8a9f450fe05932c51c06321"
                    ]
                },
                {
                    "command": [
                        "apply Rle_Fexp_eq_Zle with (radix := radix); auto with arith.",
                        "VernacExtend",
                        "9e010cb344e056de0a32c5c87a8ac13a89edb70c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Fabs_correct.",
                        "VernacExtend",
                        "28dbf610ba3808ea4739a02e27aac54aa073c5bb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_pos_eq; auto.",
                        "VernacExtend",
                        "a7253ad605b7c95ffa3391227a0b8b5f97116693"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (2 := Rle2); auto.",
                        "VernacExtend",
                        "eaac50a33392ae15017e67096a52a6b45e0d0e62"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "unfold Fminus in |- *; simpl in |- *; apply Zmin_le2; auto with zarith.",
                        "VernacExtend",
                        "57a8e61c3ddbef19a92f807bc7fbefeb6b7a053a"
                    ]
                },
                {
                    "command": [
                        "unfold Fminus in |- *; simpl in |- *; rewrite Zmin_le2; auto with float zarith.",
                        "VernacExtend",
                        "8f75a445b092fe6c21d8c2541d952be2042399d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Fminus_correct radix); auto with arith; fold FtoRradix in |- *.",
                        "VernacExtend",
                        "ae87cf93d1ace57b2e1d3654b3b47fb5241b55f3"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoRradix y); auto.",
                        "VernacExtend",
                        "15ffdb7b67e580f317a62992ceff67f69ed084d6"
                    ]
                },
                {
                    "command": [
                        "replace (y + (x - y))%R with (FtoRradix x); [ idtac | ring ].",
                        "VernacExtend",
                        "79e7c0f25263f02852f98432645f0baf553e2650"
                    ]
                },
                {
                    "command": [
                        "replace (y + y)%R with (2%nat * y)%R; [ auto | simpl in |- *; ring ].",
                        "VernacExtend",
                        "7c2710491d831b34506879eabb5e616221b1f10a"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Fminus_correct radix); auto with arith; fold FtoRradix in |- *.",
                        "VernacExtend",
                        "ae87cf93d1ace57b2e1d3654b3b47fb5241b55f3"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoRradix y); auto.",
                        "VernacExtend",
                        "15ffdb7b67e580f317a62992ceff67f69ed084d6"
                    ]
                },
                {
                    "command": [
                        "replace (y + (x - y))%R with (FtoRradix x); [ idtac | ring ].",
                        "VernacExtend",
                        "79e7c0f25263f02852f98432645f0baf553e2650"
                    ]
                },
                {
                    "command": [
                        "replace (y + 0)%R with (FtoRradix y); [ auto | simpl in |- *; ring ].",
                        "VernacExtend",
                        "4af09eab2a4674248b9f3b23b85985463adbf57f"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sterbenz",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1 H'2.",
                        "VernacExtend",
                        "f4c6938634f065cc68eff94850d69a723e938618"
                    ]
                },
                {
                    "command": [
                        "cut (y <= 2%nat * x)%R; [ intros Le1 | idtac ].",
                        "VernacExtend",
                        "3ebf4d6109e34d1d467b41810e4e409e6d31a03c"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt x y); intros Le2; auto.",
                        "VernacExtend",
                        "a7f4781b7e20e751a994a3d8a086e8ef3677ae69"
                    ]
                },
                {
                    "command": [
                        "apply oppBoundedInv; auto.",
                        "VernacExtend",
                        "673f158baebdef645b2575ffcd463e80421a20b2"
                    ]
                },
                {
                    "command": [
                        "rewrite Fopp_Fminus.",
                        "VernacExtend",
                        "dbf0252d4a6d9d5774b0171f6b7c19c3d59aced6"
                    ]
                },
                {
                    "command": [
                        "apply SterbenzAux; auto with real.",
                        "VernacExtend",
                        "fb577e36d28b9c4c60f238d21692ce56e5e64ba7"
                    ]
                },
                {
                    "command": [
                        "apply SterbenzAux; auto with real.",
                        "VernacExtend",
                        "fb577e36d28b9c4c60f238d21692ce56e5e64ba7"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (r := (/ 2%nat)%R).",
                        "VernacExtend",
                        "fe973ebd4378ee3c141f9c5232d0ceaa857b8c82"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; auto with real.",
                        "VernacExtend",
                        "4026f9923d214cb32a5e3a9b4c28c36a57ee2e20"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite Rinv_l; auto with real.",
                        "VernacExtend",
                        "608cdc10e94a34e788fe72ac66b3aec5ffad2a26"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; auto.",
                        "VernacExtend",
                        "b78b3743a283901f883571bb53aceb233dc8d4ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BminusSameExpAux",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
                    ]
                },
                {
                    "command": [
                        "cut (0 < radix)%Z; [ intros Z1 | idtac ].",
                        "VernacExtend",
                        "942410fac8b66648ca4d0c7a44455b65232f11b5"
                    ]
                },
                {
                    "command": [
                        "rewrite minusSameExp; auto.",
                        "VernacExtend",
                        "fb44c2aa15df94ae22ced9fe0235ad9d161d64e5"
                    ]
                },
                {
                    "command": [
                        "repeat split; simpl in |- *; auto with float.",
                        "VernacExtend",
                        "3e093824de91ab2af8d090987eafb93df05226c2"
                    ]
                },
                {
                    "command": [
                        "apply Zle_lt_trans with (Zabs (Fnum x)); auto with float zarith.",
                        "VernacExtend",
                        "02b926e8eb3caa3ffb2c195e19c7862e3967a764"
                    ]
                },
                {
                    "command": [
                        "change (Fnum (Fabs (Float (Fnum x - Fnum y) (Fexp x))) <= Fnum (Fabs x))%Z in |- *.",
                        "VernacExtend",
                        "589bd9b9b29d2b4ec6668add1cfb8195adc469a5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_Fexp_eq_Zle with (radix := radix); auto with zarith.",
                        "VernacExtend",
                        "2198944e547abe8ffdcc6ae807fa1c990b7acae0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (minusSameExp radix); auto.",
                        "VernacExtend",
                        "6cb95c3abe5bc729adaebd02ce5c005d1521b982"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Fabs_correct radix); try rewrite Fminus_correct; auto with zarith.",
                        "VernacExtend",
                        "973d69786e1527d8458ee30a3a501e0f3e320cb1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_pos_eq; auto with real.",
                        "VernacExtend",
                        "1b60d84bb7c426a336b3045bf63082dfe61f7ccb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (x - 0)%R; auto with real.",
                        "VernacExtend",
                        "56ade5ce09a50c413caf3eda7e2caf4c2bcbd47f"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *; auto with real.",
                        "VernacExtend",
                        "bcbd830886da1759d7f6c5cce2560c5308531e0e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (FtoRradix y); auto with real.",
                        "VernacExtend",
                        "0c330bc166a2bfce4dc12fa50c321b83e72fb11a"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (x - x)%R; auto with real.",
                        "VernacExtend",
                        "9dbc47ffd9844b9355ac38c6d42369d913b5d026"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *; auto with real.",
                        "VernacExtend",
                        "bcbd830886da1759d7f6c5cce2560c5308531e0e"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := radixMoreThanOne); auto with zarith.",
                        "VernacExtend",
                        "5814664fdf54348d206171364ee559ade508d44c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BminusSameExp",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt x y); intros Le2; auto.",
                        "VernacExtend",
                        "a7f4781b7e20e751a994a3d8a086e8ef3677ae69"
                    ]
                },
                {
                    "command": [
                        "apply oppBoundedInv; auto.",
                        "VernacExtend",
                        "673f158baebdef645b2575ffcd463e80421a20b2"
                    ]
                },
                {
                    "command": [
                        "rewrite Fopp_Fminus.",
                        "VernacExtend",
                        "dbf0252d4a6d9d5774b0171f6b7c19c3d59aced6"
                    ]
                },
                {
                    "command": [
                        "apply BminusSameExpAux; auto.",
                        "VernacExtend",
                        "a0d6dfe2a9f24cdda55ae95cf22827f556e3db66"
                    ]
                },
                {
                    "command": [
                        "apply BminusSameExpAux; auto with real.",
                        "VernacExtend",
                        "e662ab38b278c583c31ec79fffb78d32f4bff78b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "BminusSameExpNeg",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0 H'1 H'2 H'3.",
                        "VernacExtend",
                        "dc09decf5fb92b59663e01be9ed5457a33f54d5a"
                    ]
                },
                {
                    "command": [
                        "apply oppBoundedInv; auto.",
                        "VernacExtend",
                        "673f158baebdef645b2575ffcd463e80421a20b2"
                    ]
                },
                {
                    "command": [
                        "rewrite Fopp_Fminus_dist.",
                        "VernacExtend",
                        "8af26ead12aedc709ffb9b6a4040c7a99cbe4f50"
                    ]
                },
                {
                    "command": [
                        "apply BminusSameExp; auto with float.",
                        "VernacExtend",
                        "1a74c712951663e0fa079038538f2f7fd3918f59"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite Fopp_correct.",
                        "VernacExtend",
                        "c3c7ad16a924a974f39fb2584a800e7199b0444e"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (-0)%R; auto with real.",
                        "VernacExtend",
                        "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite Fopp_correct.",
                        "VernacExtend",
                        "c3c7ad16a924a974f39fb2584a800e7199b0444e"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (-0)%R; auto with real.",
                        "VernacExtend",
                        "ad9a3c816968bd85bd0ee7d9d06b032f07b0b811"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}