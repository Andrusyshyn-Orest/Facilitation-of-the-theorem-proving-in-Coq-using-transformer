{
    "filename": "Zenum.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Faux.",
            "VernacRequire",
            "459de2f16fc1a392de294bdd3abd5d443f6f1c0b"
        ],
        [
            "Require Export Omega.",
            "VernacRequire",
            "0481b56b468f7aa7f5517bbdc71f6985bb9f8b59"
        ],
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "Fixpoint mZlist_aux (p : Z) (n : nat) {struct n} : list Z := match n with | O => p :: nil | S n1 => p :: mZlist_aux (Zsucc p) n1 end.",
            "VernacFixpoint",
            "38951739a228670b9229756953c685df11839116"
        ],
        [
            "Theorem mZlist_aux_correct : forall (n : nat) (p q : Z), (p <= q)%Z -> (q <= p + Z_of_nat n)%Z -> In q (mZlist_aux p n).",
            "VernacStartTheoremProof",
            "8f452fb58181787f923446f7aea493a98a8bb4cb"
        ],
        [
            "intros n; elim n; clear n; auto.",
            "VernacExtend",
            "b6ca0d2b124f250aaa57757bca5d7001305334b4"
        ],
        [
            "intros p q; try rewrite <- Zplus_0_r_reverse.",
            "VernacExtend",
            "aa6d1fa3be671c749d111afc3fe93cbc45f473c6"
        ],
        [
            "intros H' H'0; simpl in |- *; left.",
            "VernacExtend",
            "54bafa34def3a29e1699114cc8b00752dd6425a7"
        ],
        [
            "apply Zle_antisym; auto.",
            "VernacExtend",
            "94ebfed697e7ef21ff6d4ff2e3610b849291d27e"
        ],
        [
            "intros n H' p q H'0 H'1; case (Zle_lt_or_eq _ _ H'0); intros H'2.",
            "VernacExtend",
            "94c41f235dcdd2e0e505e8fbb0bc6da519d41726"
        ],
        [
            "simpl in |- *; right.",
            "VernacExtend",
            "0c613924ef3ab539cf250f41fb595b45b61f05ad"
        ],
        [
            "apply H'; auto with zarith.",
            "VernacExtend",
            "5bbb4e4ec7c300c355794327e0b2bec51927f7eb"
        ],
        [
            "rewrite Zplus_succ_comm.",
            "VernacExtend",
            "4d77f38e7b61e7fcd3aa00572faee69e5d3f45ce"
        ],
        [
            "rewrite <- inj_S; auto.",
            "VernacExtend",
            "f3ad9a69fa6d4a3780075d06df9757e0c266565d"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mZlist_aux_correct_rev1 : forall (n : nat) (p q : Z), In q (mZlist_aux p n) -> (p <= q)%Z.",
            "VernacStartTheoremProof",
            "e2b7d2dcc56287f4c4c17b744b22303d71e9643d"
        ],
        [
            "intros n; elim n; clear n; simpl in |- *; auto.",
            "VernacExtend",
            "ac90e2bad59bc6963aa62fb60ca99cd80e0d0653"
        ],
        [
            "intros p q H'; elim H'; auto with zarith.",
            "VernacExtend",
            "dbabb401ed1fd8c44ff4793a3a61cb8e7f3094f8"
        ],
        [
            "intros n H' p q H'0; elim H'0; auto with zarith.",
            "VernacExtend",
            "d4b4a010779e1c7aeb742c20a56cdfa7a3b2e3a9"
        ],
        [
            "intros H'1; apply Zle_succ_le; auto with zarith.",
            "VernacExtend",
            "c57946bd22945ca5d0e6bf5638c383bb7a2a7b87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mZlist_aux_correct_rev2 : forall (n : nat) (p q : Z), In q (mZlist_aux p n) -> (q <= p + Z_of_nat n)%Z.",
            "VernacStartTheoremProof",
            "8200b73d5127dc5612f6d5f68fd5eb5b62f04a49"
        ],
        [
            "intros n; elim n; clear n; auto.",
            "VernacExtend",
            "b6ca0d2b124f250aaa57757bca5d7001305334b4"
        ],
        [
            "intros p q H'; elim H'; auto with zarith.",
            "VernacExtend",
            "dbabb401ed1fd8c44ff4793a3a61cb8e7f3094f8"
        ],
        [
            "intros H'0; elim H'0.",
            "VernacExtend",
            "83c49f5ad21de33521a6a6b97dfc18e1d7220325"
        ],
        [
            "intros n H' p q H'0; elim H'0; auto with zarith.",
            "VernacExtend",
            "d4b4a010779e1c7aeb742c20a56cdfa7a3b2e3a9"
        ],
        [
            "intros H'1; rewrite inj_S; rewrite <- Zplus_succ_comm; auto.",
            "VernacExtend",
            "168ce7f1b733f60393f962cb759322673ae8cfa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mZlist (p q : Z) : list Z := match (q - p)%Z with | Z0 => p :: nil | Zpos d => mZlist_aux p (nat_of_P d) | Zneg _ => nil (A:=Z) end.",
            "VernacDefinition",
            "5af9548e21b32e2f4b7c900a06d7526a8bb3cd5e"
        ],
        [
            "Theorem mZlist_correct : forall p q r : Z, (p <= r)%Z -> (r <= q)%Z -> In r (mZlist p q).",
            "VernacStartTheoremProof",
            "184cc0f849ad5c0c5fca097317c5cf270f112732"
        ],
        [
            "intros p q r H' H'0; unfold mZlist in |- *; CaseEq (q - p)%Z; auto with zarith.",
            "VernacExtend",
            "302b332b82d90176eeb85fd6e78150372c22733b"
        ],
        [
            "intros H'1; rewrite (Zle_antisym r p); auto with datatypes.",
            "VernacExtend",
            "0f61c1ee0f3a596dc2f70a652e971d7f062aaa18"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "intros p0 H'1; apply mZlist_aux_correct; auto.",
            "VernacExtend",
            "5a30ca963536cb100cd9662a4bc0586bd0aef54a"
        ],
        [
            "rewrite inject_nat_convert with (1 := H'1); auto with zarith.",
            "VernacExtend",
            "78471ab26a467b6fe45215085cb556863c567bad"
        ],
        [
            "intros p0 H'1; absurd (p <= q)%Z; auto.",
            "VernacExtend",
            "55b4166b23d12c589d1616e9d20d011894c068b6"
        ],
        [
            "apply Zlt_not_le; auto.",
            "VernacExtend",
            "c47dad27e2892db222721bc09502590dbd6a4a58"
        ],
        [
            "apply Zlt_O_minus_lt; auto.",
            "VernacExtend",
            "0f09af5a5b6ce9096a9cd2e2c81e94af7fd0803f"
        ],
        [
            "replace (p - q)%Z with (- (q - p))%Z; auto with zarith.",
            "VernacExtend",
            "717757b977bbd9834739c503a28ce4cb1e46d344"
        ],
        [
            "rewrite H'1; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "b13f6bbf90151139470b2d270fe05804b073f4fc"
        ],
        [
            "unfold Zlt in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "5ccbcafd28ae37e3c4fee6c116ce99215182bc6a"
        ],
        [
            "apply Zle_trans with (m := r); auto.",
            "VernacExtend",
            "0140b2bf84980a19e2a78217b3bfdfbc9707e39c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mZlist_correct_rev1 : forall p q r : Z, In r (mZlist p q) -> (p <= r)%Z.",
            "VernacStartTheoremProof",
            "ed3b01ec16005ffbdde5b7806e628bca02bc5b26"
        ],
        [
            "intros p q r; unfold mZlist in |- *; CaseEq (q - p)%Z.",
            "VernacExtend",
            "7df070c0f931a583a2b915d6475bee5e529994b3"
        ],
        [
            "intros H' H'0; elim H'0; auto with zarith.",
            "VernacExtend",
            "e4d420e6f40a65c7d3110d768384c09e400f958d"
        ],
        [
            "intros H'1; elim H'1.",
            "VernacExtend",
            "5735f7bc2194e21578c4ce8a15fb690c94609273"
        ],
        [
            "intros p0 H' H'0.",
            "VernacExtend",
            "835771a9b5b76236c5e023d2c64de362d30ad687"
        ],
        [
            "apply mZlist_aux_correct_rev1 with (n := nat_of_P p0); auto.",
            "VernacExtend",
            "2363b805a44a06a7c87c7ce4d1ec75e07fc8cbb2"
        ],
        [
            "intros p0 H' H'0; elim H'0.",
            "VernacExtend",
            "328651ba5af57a3913a4ff8fb0b38ce7c41fa538"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mZlist_correct_rev2 : forall p q r : Z, In r (mZlist p q) -> (r <= q)%Z.",
            "VernacStartTheoremProof",
            "ee0d79706ef336d4061a5b323de38bf671082b4c"
        ],
        [
            "intros p q r; unfold mZlist in |- *; CaseEq (q - p)%Z.",
            "VernacExtend",
            "7df070c0f931a583a2b915d6475bee5e529994b3"
        ],
        [
            "intros H' H'0; elim H'0; auto with zarith.",
            "VernacExtend",
            "e4d420e6f40a65c7d3110d768384c09e400f958d"
        ],
        [
            "intros H'1; elim H'1.",
            "VernacExtend",
            "5735f7bc2194e21578c4ce8a15fb690c94609273"
        ],
        [
            "intros p0 H' H'0.",
            "VernacExtend",
            "835771a9b5b76236c5e023d2c64de362d30ad687"
        ],
        [
            "rewrite <- (Zplus_minus p q).",
            "VernacExtend",
            "8357b83e326b4791976d0b915dd590ef44a7a3a1"
        ],
        [
            "rewrite <- inject_nat_convert with (1 := H').",
            "VernacExtend",
            "312d9cf3b90a353f7a445d4a4b8f2dc863a17aa8"
        ],
        [
            "apply mZlist_aux_correct_rev2; auto.",
            "VernacExtend",
            "a51053641bc9f98ed04e210aca7861b1ef929834"
        ],
        [
            "intros p0 H' H'0; elim H'0.",
            "VernacExtend",
            "328651ba5af57a3913a4ff8fb0b38ce7c41fa538"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint mProd (A B C : Set) (l1 : list A) (l2 : list B) {struct l2} : list (A * B) := match l2 with | nil => nil | b :: l2' => map (fun a : A => (a, b)) l1 ++ mProd A B C l1 l2' end.",
            "VernacFixpoint",
            "84bddc4f8029cebaebb10f09fbc3b66e6c9fa7b1"
        ],
        [
            "Theorem mProd_correct : forall (A B C : Set) (l1 : list A) (l2 : list B) (a : A) (b : B), In a l1 -> In b l2 -> In (a, b) (mProd A B C l1 l2).",
            "VernacStartTheoremProof",
            "8e50feb69ccbcdf9b56e17764a96ba761e3fc5df"
        ],
        [
            "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
            "VernacExtend",
            "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
        ],
        [
            "intros a l H' a0 b H'0 H'1; elim H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto with datatypes.",
            "VernacExtend",
            "b272c439a978e146d5c3c4bed68703f3bdff9c05"
        ],
        [
            "apply in_or_app; left; auto with datatypes.",
            "VernacExtend",
            "52d8da3c958c9d69c6c6e2aac227941afd440354"
        ],
        [
            "generalize H'0; elim l1; simpl in |- *; auto with datatypes.",
            "VernacExtend",
            "4e490da58c0ec3e99e5e98f7191e0e29e10333ed"
        ],
        [
            "intros a1 l0 H'1 H'3; elim H'3; clear H'3; intros H'4; [ rewrite <- H'4 | idtac ]; auto with datatypes.",
            "VernacExtend",
            "9837b9e45255086ad952f2f4f4b14e5766b93314"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mProd_correct_rev1 : forall (A B C : Set) (l1 : list A) (l2 : list B) (a : A) (b : B), In (a, b) (mProd A B C l1 l2) -> In a l1.",
            "VernacStartTheoremProof",
            "44e048cc20679d1215850fb3672162cb054a0203"
        ],
        [
            "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
            "VernacExtend",
            "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
        ],
        [
            "intros a H' H'0; elim H'0.",
            "VernacExtend",
            "15fbe5ce0bf9912a6066bba7e93e7c35622962b4"
        ],
        [
            "intros a l H' a0 b H'0.",
            "VernacExtend",
            "5fee9706304cf34dc9cc6c4afb1f2cbafcef7622"
        ],
        [
            "case (in_app_or _ _ _ H'0); auto with datatypes.",
            "VernacExtend",
            "0a43b5dc27e62b63d3fb334c1b5ec987ca1805a2"
        ],
        [
            "elim l1; simpl in |- *; auto with datatypes.",
            "VernacExtend",
            "e49a7372c9e047a456a61ac55d7cf7119b4ef533"
        ],
        [
            "intros a1 l0 H'1 H'2; elim H'2; clear H'2; intros H'3; [ inversion H'3 | idtac ]; auto with datatypes.",
            "VernacExtend",
            "8ae693461a07c5ecf8c9346a71e95fd9fdcda040"
        ],
        [
            "intros H'1; apply H' with (b := b); auto.",
            "VernacExtend",
            "5623f1353b9d89a6691370eb444b9c86f7f0f556"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mProd_correct_rev2 : forall (A B C : Set) (l1 : list A) (l2 : list B) (a : A) (b : B), In (a, b) (mProd A B C l1 l2) -> In b l2.",
            "VernacStartTheoremProof",
            "c717c5fad80d66b969f27353072f221276ab2ec9"
        ],
        [
            "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
            "VernacExtend",
            "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
        ],
        [
            "intros a l H' a0 b H'0.",
            "VernacExtend",
            "5fee9706304cf34dc9cc6c4afb1f2cbafcef7622"
        ],
        [
            "case (in_app_or _ _ _ H'0); auto with datatypes.",
            "VernacExtend",
            "0a43b5dc27e62b63d3fb334c1b5ec987ca1805a2"
        ],
        [
            "elim l1; simpl in |- *; auto with datatypes.",
            "VernacExtend",
            "e49a7372c9e047a456a61ac55d7cf7119b4ef533"
        ],
        [
            "intros H'1; elim H'1; auto.",
            "VernacExtend",
            "53831ddb42e7092b98662458b18856eafe4ce98c"
        ],
        [
            "intros a1 l0 H'1 H'2; elim H'2; clear H'2; intros H'3; [ inversion H'3 | idtac ]; auto with datatypes.",
            "VernacExtend",
            "8ae693461a07c5ecf8c9346a71e95fd9fdcda040"
        ],
        [
            "intros H'1; right; apply H' with (a := a0); auto.",
            "VernacExtend",
            "34332d6feb6a26b7c203029efc157d7229e485db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_map_inv : forall (A B : Set) (f : A -> B) (l : list A) (x : A), (forall a b : A, f a = f b -> a = b) -> In (f x) (map f l) -> In x l.",
            "VernacStartTheoremProof",
            "36bc814215f1129674f79d6d954d21b62b9ff9d5"
        ],
        [
            "intros A B f l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "0cbd8c88a22f9f43a3873f0471b00c5dc017caad"
        ],
        [
            "intros a l0 H' x H'0 H'1; elim H'1; clear H'1; intros H'2; auto.",
            "VernacExtend",
            "4af14282165589e1d28a831b468161a64e086c89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "mZlist_aux_correct",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; clear n; auto.",
                        "VernacExtend",
                        "b6ca0d2b124f250aaa57757bca5d7001305334b4"
                    ]
                },
                {
                    "command": [
                        "intros p q; try rewrite <- Zplus_0_r_reverse.",
                        "VernacExtend",
                        "aa6d1fa3be671c749d111afc3fe93cbc45f473c6"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; simpl in |- *; left.",
                        "VernacExtend",
                        "54bafa34def3a29e1699114cc8b00752dd6425a7"
                    ]
                },
                {
                    "command": [
                        "apply Zle_antisym; auto.",
                        "VernacExtend",
                        "94ebfed697e7ef21ff6d4ff2e3610b849291d27e"
                    ]
                },
                {
                    "command": [
                        "intros n H' p q H'0 H'1; case (Zle_lt_or_eq _ _ H'0); intros H'2.",
                        "VernacExtend",
                        "94c41f235dcdd2e0e505e8fbb0bc6da519d41726"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; right.",
                        "VernacExtend",
                        "0c613924ef3ab539cf250f41fb595b45b61f05ad"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto with zarith.",
                        "VernacExtend",
                        "5bbb4e4ec7c300c355794327e0b2bec51927f7eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_succ_comm.",
                        "VernacExtend",
                        "4d77f38e7b61e7fcd3aa00572faee69e5d3f45ce"
                    ]
                },
                {
                    "command": [
                        "rewrite <- inj_S; auto.",
                        "VernacExtend",
                        "f3ad9a69fa6d4a3780075d06df9757e0c266565d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mZlist_aux_correct_rev1",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; clear n; simpl in |- *; auto.",
                        "VernacExtend",
                        "ac90e2bad59bc6963aa62fb60ca99cd80e0d0653"
                    ]
                },
                {
                    "command": [
                        "intros p q H'; elim H'; auto with zarith.",
                        "VernacExtend",
                        "dbabb401ed1fd8c44ff4793a3a61cb8e7f3094f8"
                    ]
                },
                {
                    "command": [
                        "intros n H' p q H'0; elim H'0; auto with zarith.",
                        "VernacExtend",
                        "d4b4a010779e1c7aeb742c20a56cdfa7a3b2e3a9"
                    ]
                },
                {
                    "command": [
                        "intros H'1; apply Zle_succ_le; auto with zarith.",
                        "VernacExtend",
                        "c57946bd22945ca5d0e6bf5638c383bb7a2a7b87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mZlist_aux_correct_rev2",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; clear n; auto.",
                        "VernacExtend",
                        "b6ca0d2b124f250aaa57757bca5d7001305334b4"
                    ]
                },
                {
                    "command": [
                        "intros p q H'; elim H'; auto with zarith.",
                        "VernacExtend",
                        "dbabb401ed1fd8c44ff4793a3a61cb8e7f3094f8"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0.",
                        "VernacExtend",
                        "83c49f5ad21de33521a6a6b97dfc18e1d7220325"
                    ]
                },
                {
                    "command": [
                        "intros n H' p q H'0; elim H'0; auto with zarith.",
                        "VernacExtend",
                        "d4b4a010779e1c7aeb742c20a56cdfa7a3b2e3a9"
                    ]
                },
                {
                    "command": [
                        "intros H'1; rewrite inj_S; rewrite <- Zplus_succ_comm; auto.",
                        "VernacExtend",
                        "168ce7f1b733f60393f962cb759322673ae8cfa2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mZlist_correct",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros p q r H' H'0; unfold mZlist in |- *; CaseEq (q - p)%Z; auto with zarith.",
                        "VernacExtend",
                        "302b332b82d90176eeb85fd6e78150372c22733b"
                    ]
                },
                {
                    "command": [
                        "intros H'1; rewrite (Zle_antisym r p); auto with datatypes.",
                        "VernacExtend",
                        "0f61c1ee0f3a596dc2f70a652e971d7f062aaa18"
                    ]
                },
                {
                    "command": [
                        "auto with zarith.",
                        "VernacExtend",
                        "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'1; apply mZlist_aux_correct; auto.",
                        "VernacExtend",
                        "5a30ca963536cb100cd9662a4bc0586bd0aef54a"
                    ]
                },
                {
                    "command": [
                        "rewrite inject_nat_convert with (1 := H'1); auto with zarith.",
                        "VernacExtend",
                        "78471ab26a467b6fe45215085cb556863c567bad"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'1; absurd (p <= q)%Z; auto.",
                        "VernacExtend",
                        "55b4166b23d12c589d1616e9d20d011894c068b6"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_not_le; auto.",
                        "VernacExtend",
                        "c47dad27e2892db222721bc09502590dbd6a4a58"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_O_minus_lt; auto.",
                        "VernacExtend",
                        "0f09af5a5b6ce9096a9cd2e2c81e94af7fd0803f"
                    ]
                },
                {
                    "command": [
                        "replace (p - q)%Z with (- (q - p))%Z; auto with zarith.",
                        "VernacExtend",
                        "717757b977bbd9834739c503a28ce4cb1e46d344"
                    ]
                },
                {
                    "command": [
                        "rewrite H'1; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "b13f6bbf90151139470b2d270fe05804b073f4fc"
                    ]
                },
                {
                    "command": [
                        "unfold Zlt in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "5ccbcafd28ae37e3c4fee6c116ce99215182bc6a"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (m := r); auto.",
                        "VernacExtend",
                        "0140b2bf84980a19e2a78217b3bfdfbc9707e39c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mZlist_correct_rev1",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros p q r; unfold mZlist in |- *; CaseEq (q - p)%Z.",
                        "VernacExtend",
                        "7df070c0f931a583a2b915d6475bee5e529994b3"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; elim H'0; auto with zarith.",
                        "VernacExtend",
                        "e4d420e6f40a65c7d3110d768384c09e400f958d"
                    ]
                },
                {
                    "command": [
                        "intros H'1; elim H'1.",
                        "VernacExtend",
                        "5735f7bc2194e21578c4ce8a15fb690c94609273"
                    ]
                },
                {
                    "command": [
                        "intros p0 H' H'0.",
                        "VernacExtend",
                        "835771a9b5b76236c5e023d2c64de362d30ad687"
                    ]
                },
                {
                    "command": [
                        "apply mZlist_aux_correct_rev1 with (n := nat_of_P p0); auto.",
                        "VernacExtend",
                        "2363b805a44a06a7c87c7ce4d1ec75e07fc8cbb2"
                    ]
                },
                {
                    "command": [
                        "intros p0 H' H'0; elim H'0.",
                        "VernacExtend",
                        "328651ba5af57a3913a4ff8fb0b38ce7c41fa538"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mZlist_correct_rev2",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros p q r; unfold mZlist in |- *; CaseEq (q - p)%Z.",
                        "VernacExtend",
                        "7df070c0f931a583a2b915d6475bee5e529994b3"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; elim H'0; auto with zarith.",
                        "VernacExtend",
                        "e4d420e6f40a65c7d3110d768384c09e400f958d"
                    ]
                },
                {
                    "command": [
                        "intros H'1; elim H'1.",
                        "VernacExtend",
                        "5735f7bc2194e21578c4ce8a15fb690c94609273"
                    ]
                },
                {
                    "command": [
                        "intros p0 H' H'0.",
                        "VernacExtend",
                        "835771a9b5b76236c5e023d2c64de362d30ad687"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zplus_minus p q).",
                        "VernacExtend",
                        "8357b83e326b4791976d0b915dd590ef44a7a3a1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- inject_nat_convert with (1 := H').",
                        "VernacExtend",
                        "312d9cf3b90a353f7a445d4a4b8f2dc863a17aa8"
                    ]
                },
                {
                    "command": [
                        "apply mZlist_aux_correct_rev2; auto.",
                        "VernacExtend",
                        "a51053641bc9f98ed04e210aca7861b1ef929834"
                    ]
                },
                {
                    "command": [
                        "intros p0 H' H'0; elim H'0.",
                        "VernacExtend",
                        "328651ba5af57a3913a4ff8fb0b38ce7c41fa538"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mProd_correct",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
                    ]
                },
                {
                    "command": [
                        "intros a l H' a0 b H'0 H'1; elim H'1; [ intros H'2; rewrite <- H'2; clear H'1 | intros H'2; clear H'1 ]; auto with datatypes.",
                        "VernacExtend",
                        "b272c439a978e146d5c3c4bed68703f3bdff9c05"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app; left; auto with datatypes.",
                        "VernacExtend",
                        "52d8da3c958c9d69c6c6e2aac227941afd440354"
                    ]
                },
                {
                    "command": [
                        "generalize H'0; elim l1; simpl in |- *; auto with datatypes.",
                        "VernacExtend",
                        "4e490da58c0ec3e99e5e98f7191e0e29e10333ed"
                    ]
                },
                {
                    "command": [
                        "intros a1 l0 H'1 H'3; elim H'3; clear H'3; intros H'4; [ rewrite <- H'4 | idtac ]; auto with datatypes.",
                        "VernacExtend",
                        "9837b9e45255086ad952f2f4f4b14e5766b93314"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mProd_correct_rev1",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
                    ]
                },
                {
                    "command": [
                        "intros a H' H'0; elim H'0.",
                        "VernacExtend",
                        "15fbe5ce0bf9912a6066bba7e93e7c35622962b4"
                    ]
                },
                {
                    "command": [
                        "intros a l H' a0 b H'0.",
                        "VernacExtend",
                        "5fee9706304cf34dc9cc6c4afb1f2cbafcef7622"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ H'0); auto with datatypes.",
                        "VernacExtend",
                        "0a43b5dc27e62b63d3fb334c1b5ec987ca1805a2"
                    ]
                },
                {
                    "command": [
                        "elim l1; simpl in |- *; auto with datatypes.",
                        "VernacExtend",
                        "e49a7372c9e047a456a61ac55d7cf7119b4ef533"
                    ]
                },
                {
                    "command": [
                        "intros a1 l0 H'1 H'2; elim H'2; clear H'2; intros H'3; [ inversion H'3 | idtac ]; auto with datatypes.",
                        "VernacExtend",
                        "8ae693461a07c5ecf8c9346a71e95fd9fdcda040"
                    ]
                },
                {
                    "command": [
                        "intros H'1; apply H' with (b := b); auto.",
                        "VernacExtend",
                        "5623f1353b9d89a6691370eb444b9c86f7f0f556"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mProd_correct_rev2",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros A B C l1 l2; elim l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "f5f8cb82f8c60b5706b903a6a1c0c299068ea48f"
                    ]
                },
                {
                    "command": [
                        "intros a l H' a0 b H'0.",
                        "VernacExtend",
                        "5fee9706304cf34dc9cc6c4afb1f2cbafcef7622"
                    ]
                },
                {
                    "command": [
                        "case (in_app_or _ _ _ H'0); auto with datatypes.",
                        "VernacExtend",
                        "0a43b5dc27e62b63d3fb334c1b5ec987ca1805a2"
                    ]
                },
                {
                    "command": [
                        "elim l1; simpl in |- *; auto with datatypes.",
                        "VernacExtend",
                        "e49a7372c9e047a456a61ac55d7cf7119b4ef533"
                    ]
                },
                {
                    "command": [
                        "intros H'1; elim H'1; auto.",
                        "VernacExtend",
                        "53831ddb42e7092b98662458b18856eafe4ce98c"
                    ]
                },
                {
                    "command": [
                        "intros a1 l0 H'1 H'2; elim H'2; clear H'2; intros H'3; [ inversion H'3 | idtac ]; auto with datatypes.",
                        "VernacExtend",
                        "8ae693461a07c5ecf8c9346a71e95fd9fdcda040"
                    ]
                },
                {
                    "command": [
                        "intros H'1; right; apply H' with (a := a0); auto.",
                        "VernacExtend",
                        "34332d6feb6a26b7c203029efc157d7229e485db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_map_inv",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros A B f l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "0cbd8c88a22f9f43a3873f0471b00c5dc017caad"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H' x H'0 H'1; elim H'1; clear H'1; intros H'2; auto.",
                        "VernacExtend",
                        "4af14282165589e1d28a831b468161a64e086c89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}