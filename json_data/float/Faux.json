{
    "filename": "Faux.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Min.",
            "VernacRequire",
            "9c7cefca1d3cc52919d9b2695d37f2cf18e8f75e"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Require Export Reals.",
            "VernacRequire",
            "c308256845bb25cabcadd813416fe220c5f7bc46"
        ],
        [
            "Require Export Zpower.",
            "VernacRequire",
            "537aa94c31bf143e44528d650312e4f8f5968c4d"
        ],
        [
            "Require Export ZArith.",
            "VernacRequire",
            "e55f3132f44691206e5b3b8ec9a74fbc1c203a27"
        ],
        [
            "Require Export Zcomplements.",
            "VernacRequire",
            "30fd5aa94b64a1da68cdf6c93f45a8cc92cb75f8"
        ],
        [
            "Require Export sTactic.",
            "VernacRequire",
            "79c7c13b4fa57322851d89a25a9517dfbfb1b9b8"
        ],
        [
            "Hint Resolve R1_neq_R0: real.",
            "VernacHints",
            "70ae2a2f290171e22adb7e9e417d0cd258339311"
        ],
        [
            "Theorem minus_minus : forall a b : nat, a <= b -> b - (b - a) = a.",
            "VernacStartTheoremProof",
            "009bf7ade2b8af08b598309c4fdb8d0dfd76408d"
        ],
        [
            "intros a b H'.",
            "VernacExtend",
            "bd160d2246ab14528cfcf9da0463f63a88c538ea"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "apply plus_minus; auto.",
            "VernacExtend",
            "c3a2a7beada38a74c8e6b0a314d7cf3f324cae19"
        ],
        [
            "rewrite plus_comm; apply le_plus_minus; auto.",
            "VernacExtend",
            "d40810247e279531af13db3b9bb3bb7add7d9628"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lte_comp_mult : forall p q r t : nat, p <= q -> r <= t -> p * r <= q * t.",
            "VernacStartTheoremProof",
            "c3f5b935162882761021af3d44eb92ba443ba7a8"
        ],
        [
            "intros p q r t H'; elim H'; simpl in |- *; auto with arith.",
            "VernacExtend",
            "7a7d3e1cdca4a8deb0b85a826b47acaaf5ed7b91"
        ],
        [
            "elim p; simpl in |- *; auto with arith.",
            "VernacExtend",
            "558e5e629d6922667086a9702cd1608088517550"
        ],
        [
            "intros n H m H0 H1 H2; apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "21f138e736bb4341dec18206a687e624a75c008e"
        ],
        [
            "apply le_trans with (m := r + n * r); auto with arith.",
            "VernacExtend",
            "2da0fd67a9a37d8e9cc88a0fa03c29d6cd98e2da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lte_comp_mult: arith.",
            "VernacHints",
            "4ef132ee93b42dacf374ec2e0fa1fb48cb0d05bd"
        ],
        [
            "Theorem le_refl_eq : forall n m : nat, n = m -> n <= m.",
            "VernacStartTheoremProof",
            "cd0a7172c09c4a549bd33331bf28812fff1759ca"
        ],
        [
            "intros n m H'; rewrite H'; auto.",
            "VernacExtend",
            "5a8cd6e2720261c0f41a570b3bf7f1131c767856"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_le_pred : forall n m : nat, n < m -> n <= pred m.",
            "VernacStartTheoremProof",
            "10699811079b404a023b8472b045987ef07cc456"
        ],
        [
            "intros n m H'; inversion H'; simpl in |- *; auto.",
            "VernacExtend",
            "5e9a456ab128c6ffbd36c78da34da87c3edaeaec"
        ],
        [
            "apply le_trans with (S n); auto.",
            "VernacExtend",
            "1275cec9415ff450298668757d91a97f90dcd2d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_comp_mult_l : forall p q r : nat, 0 < p -> q < r -> p * q < p * r.",
            "VernacStartTheoremProof",
            "38279fde47b764c0c1fbbf0785c3ef07b288fa88"
        ],
        [
            "intros p; elim p; simpl in |- *.",
            "VernacExtend",
            "c425d69fdb403e88873ebd1605221276552e6fac"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros n0; case n0.",
            "VernacExtend",
            "e8893eb764401ebc2c9b15af9a1f93373b730591"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "intros n1 H' q r H'0 H'1.",
            "VernacExtend",
            "8a43cb8743f154f2f82e8085f08b19a5e7b623f4"
        ],
        [
            "apply lt_trans with (m := q + S n1 * r); auto with arith.",
            "VernacExtend",
            "e761a634a08883499b7d2df31dabd45767f74906"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_comp_mult_l: arith.",
            "VernacHints",
            "469ce763db3226dc60b6ecd1f546e75f205be1c1"
        ],
        [
            "Theorem lt_comp_mult_r : forall p q r : nat, 0 < p -> q < r -> q * p < r * p.",
            "VernacStartTheoremProof",
            "6ab898e2c63fe3db56aa200b2a040d257823a31e"
        ],
        [
            "intros; repeat rewrite (fun x : nat => mult_comm x p); auto with arith.",
            "VernacExtend",
            "3a925fda57d4a5ae590f9ab3ee5f50156bf30930"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_comp_mult_r: arith.",
            "VernacHints",
            "4f6a0c3d468241d0d8919a2a6a8bd41997687db2"
        ],
        [
            "Theorem lt_comp_mult : forall p q r s : nat, p < q -> r < s -> p * r < q * s.",
            "VernacStartTheoremProof",
            "63682823be7d671a45cdbf11c26d49f976f9c4ad"
        ],
        [
            "intros p q r s; case q.",
            "VernacExtend",
            "797fc5847fb7dbf8ab0023c50f67cd1e3c889e60"
        ],
        [
            "intros H'; inversion H'.",
            "VernacExtend",
            "9b439a3c4be331042656603beeee7a6d06f41f23"
        ],
        [
            "intros q'; case p.",
            "VernacExtend",
            "28808023c9a5bb78a631eae37a5066de2d65d68b"
        ],
        [
            "intros H' H'0; simpl in |- *; apply le_lt_trans with (m := r); auto with arith.",
            "VernacExtend",
            "ff8a6e0b9d535fc3b7221d0ba77d3cea801c12ff"
        ],
        [
            "intros p' H' H'0; apply le_lt_trans with (m := S q' * r); auto with arith.",
            "VernacExtend",
            "454a1682a2d8d38aed1a5d00a901a9926b3fc861"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_comp_mult: arith.",
            "VernacHints",
            "7a94dd5bb1cedccb49e4a4e07429ac668775f617"
        ],
        [
            "Theorem mult_eq_inv : forall n m p : nat, 0 < n -> n * m = n * p -> m = p.",
            "VernacStartTheoremProof",
            "bf5a75d61cdbe40b4d50ed9688bd40a3e48ad648"
        ],
        [
            "intros n m p H' H'0.",
            "VernacExtend",
            "3449bf2df5d2e6795825a300774965cb19abaac7"
        ],
        [
            "apply le_antisym; auto.",
            "VernacExtend",
            "2bfc9581a46fa62c02649669186ffbd817111ce7"
        ],
        [
            "case (le_or_lt m p); intros H'1; auto with arith.",
            "VernacExtend",
            "eb270d40695070aba4843592aaf302bbe844cc57"
        ],
        [
            "absurd (n * p < n * m); auto with arith.",
            "VernacExtend",
            "8e705c09cc8fc474be3f57db786c09a3fc0bb415"
        ],
        [
            "rewrite H'0; auto with arith.",
            "VernacExtend",
            "a7092d0fcc7f35f013bcc3a89074dfbc00bd460a"
        ],
        [
            "case (le_or_lt p m); intros H'1; auto with arith.",
            "VernacExtend",
            "92e34ddaa3bba228d36039b950656e03c9dffa40"
        ],
        [
            "absurd (n * m < n * p); auto with arith.",
            "VernacExtend",
            "2ffb06173dd30d5ac840d5a9f3fdf92a75bc7c74"
        ],
        [
            "rewrite H'0; auto with arith.",
            "VernacExtend",
            "a7092d0fcc7f35f013bcc3a89074dfbc00bd460a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition natEq : forall n m : nat, {n = m} + {n <> m}.",
            "VernacDefinition",
            "802bf966ead391f6169283d7ec7a569947e599fe"
        ],
        [
            "intros n; elim n.",
            "VernacExtend",
            "30dd1f6e67d22ae560cfabc166aaa1026bf6f0d3"
        ],
        [
            "intros m; case m; auto with arith.",
            "VernacExtend",
            "570ca0f241e02900ba779e3da0a347dbf86dd07a"
        ],
        [
            "intros n0 H' m; case m; auto with arith.",
            "VernacExtend",
            "fee36dcdf7c1e22709c18e78e814aa66771870bf"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem notEqLt : forall n : nat, 0 < n -> n <> 0.",
            "VernacStartTheoremProof",
            "20b872411e1b27fc7f99f674e6ab33049b1e7f15"
        ],
        [
            "intros n H'; Contradict H'; auto.",
            "VernacExtend",
            "55475cb1c096e6219457e1727c018ddb0400756c"
        ],
        [
            "rewrite H'; auto with arith.",
            "VernacExtend",
            "ee2e71843d1389dbce243a933ebf4ce8b16e9c6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve notEqLt: arith.",
            "VernacHints",
            "8390ab9dbafed13c21c07f19bb70071c93359851"
        ],
        [
            "Theorem lt_next : forall n m : nat, n < m -> m = S n \\/ S n < m.",
            "VernacStartTheoremProof",
            "11c81a01376540fb93fb46c3c2240d60265e3ba9"
        ],
        [
            "intros n m H'; elim H'; auto with arith.",
            "VernacExtend",
            "444c584bfa74b17a3080b5447043c5c84e3875a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_next : forall n m : nat, n <= m -> m = n \\/ S n <= m.",
            "VernacStartTheoremProof",
            "0d7dc5b41c07972da969edaf2a6d07bdec3ec236"
        ],
        [
            "intros n m H'; case (le_lt_or_eq _ _ H'); auto with arith.",
            "VernacExtend",
            "9abf40f066f9519c0ca1ace5f0436dd24bfef3b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem min_or : forall n m : nat, min n m = n /\\ n <= m \\/ min n m = m /\\ m < n.",
            "VernacStartTheoremProof",
            "a68e89d2e07a45e79c597e762e6d0a612bb7213c"
        ],
        [
            "intros n; elim n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "3ce118dcfa35fa106b4a0db75896944b3c969987"
        ],
        [
            "intros n' Rec m; case m; simpl in |- *; auto with arith.",
            "VernacExtend",
            "0e9f2c8b70f33619643023893b2ad78307cccc27"
        ],
        [
            "intros m'; elim (Rec m'); intros H'0; case H'0; clear H'0; intros H'0 H'1; rewrite H'0; auto with arith.",
            "VernacExtend",
            "7c9f8951a12a430a28dc3aab30521b06d246ce85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minus_inv_lt_aux : forall n m : nat, n - m = 0 -> n - S m = 0.",
            "VernacStartTheoremProof",
            "0eb7b56d9801ca0c7d3d9898680c45958f6e1fba"
        ],
        [
            "intros n; elim n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "3ce118dcfa35fa106b4a0db75896944b3c969987"
        ],
        [
            "intros n0 H' m; case m; auto with arith.",
            "VernacExtend",
            "fee36dcdf7c1e22709c18e78e814aa66771870bf"
        ],
        [
            "intros H'0; discriminate.",
            "VernacExtend",
            "6b4759cdf12f40144acfc875ea4701384549a853"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minus_inv_lt : forall n m : nat, m <= n -> m - n = 0.",
            "VernacStartTheoremProof",
            "93abec006e3bdda002b7a4456bffbe5cba56bb09"
        ],
        [
            "intros n m H'; elim H'; simpl in |- *; auto with arith.",
            "VernacExtend",
            "537a04eead697942f85de136342b029b6a050624"
        ],
        [
            "intros m0 H'0 H'1; apply minus_inv_lt_aux; auto.",
            "VernacExtend",
            "2665bfc7220a002a60ac0c9fc6596ca9b3097ab2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minus_le : forall m n p q : nat, m <= n -> p <= q -> m - q <= n - p.",
            "VernacStartTheoremProof",
            "02a899bdaaa1c92c80006601174233ba765f3bfd"
        ],
        [
            "intros m n p q H' H'0.",
            "VernacExtend",
            "5af536e346bd3686d2991f5f6108aca2618ae7f7"
        ],
        [
            "case (le_or_lt m q); intros H'1.",
            "VernacExtend",
            "5ad0b1fae62c46798e609c249ed75fb16986592f"
        ],
        [
            "rewrite minus_inv_lt with (1 := H'1); auto with arith.",
            "VernacExtend",
            "5765185f1fa3c9e709ad5950ffc3c77752e23368"
        ],
        [
            "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := q).",
            "VernacExtend",
            "88adc269bbc77b54c952a1d7e87a23672b501205"
        ],
        [
            "rewrite le_plus_minus_r; auto with arith.",
            "VernacExtend",
            "8cb068cf809a6984d3066c0e3166cb341da3c686"
        ],
        [
            "rewrite (le_plus_minus p q); auto.",
            "VernacExtend",
            "828e431163e3da0d1b8c7e4a6ad19670805310cf"
        ],
        [
            "rewrite (plus_comm p).",
            "VernacExtend",
            "cdd7cf4d72d02561eff338dedceafcacbe032ac0"
        ],
        [
            "rewrite plus_assoc_reverse.",
            "VernacExtend",
            "c58634404b739d3e0466a3943f2097ff5168ce94"
        ],
        [
            "rewrite le_plus_minus_r; auto with arith.",
            "VernacExtend",
            "8cb068cf809a6984d3066c0e3166cb341da3c686"
        ],
        [
            "apply le_trans with (1 := H'); auto with arith.",
            "VernacExtend",
            "6ab1abe740dd736f4f2db5a5daea2066df50dd04"
        ],
        [
            "apply le_trans with (1 := H'0); auto with arith.",
            "VernacExtend",
            "8cf2bd4edbc71597959782dfe06fdc3952125d55"
        ],
        [
            "apply le_trans with (2 := H'); auto with arith.",
            "VernacExtend",
            "712b879e237f1baa3e35fbfcc3241917c4d4153d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_minus_inv : forall n m p : nat, n <= p -> m < n -> p - n < p - m.",
            "VernacStartTheoremProof",
            "828360235e577eef5b5a458a3c187532b98628f0"
        ],
        [
            "intros n m p H'; generalize m; clear m; elim H'.",
            "VernacExtend",
            "60c046dabe705799323a46f71801330bf86e06f8"
        ],
        [
            "intros m H'0; rewrite <- minus_n_n; elim H'0.",
            "VernacExtend",
            "4373ae410dc43c39e5dd9251b37e379ccd3c211a"
        ],
        [
            "rewrite <- minus_Sn_m; auto with arith.",
            "VernacExtend",
            "5e0dc727f7596ad62b6284d24e09632fa0d1a674"
        ],
        [
            "intros m0 H'1 H'2; rewrite <- minus_Sn_m; auto with arith.",
            "VernacExtend",
            "e978728e286725a1bdfffde8aed4300ad26d309e"
        ],
        [
            "intros m H'0 H'1 m0 H'2; repeat rewrite <- minus_Sn_m; auto with arith.",
            "VernacExtend",
            "fa18318fa4353ee2eff8f0a7f7d82edfdea34667"
        ],
        [
            "apply le_trans with n; auto with arith.",
            "VernacExtend",
            "b3fb1b221307a01d3f768205e4ffe0ad6b93daf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mult_anti_compatibility : forall n n1 n2 : nat, 0 < n -> n * n1 < n * n2 -> n1 < n2.",
            "VernacStartTheoremProof",
            "efd84de15bb755c8652f52572bc2020671f78b21"
        ],
        [
            "intros n n1 n2 H' H'0; case (le_or_lt n2 n1); auto.",
            "VernacExtend",
            "f5f2514d6a18ff7c71503f751fc226985c0b391e"
        ],
        [
            "intros H'1; Contradict H'0; auto.",
            "VernacExtend",
            "85362fff70c63a2e9a5e9ddd1ffc7938cbc55751"
        ],
        [
            "apply le_not_lt; auto with arith.",
            "VernacExtend",
            "944ee47bfe3438ad4db296f94cc5cfe0c46786bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_mult_anti_compatibility : forall n n1 n2 : nat, 0 < n -> n * n1 <= n * n2 -> n1 <= n2.",
            "VernacStartTheoremProof",
            "b2775783c57d32733b3cc93460f24bccc66344eb"
        ],
        [
            "intros n n1 n2 H' H'0; case (le_or_lt n1 n2); auto.",
            "VernacExtend",
            "7c0515dd60aef8a893eee4d352e39d99d233b31a"
        ],
        [
            "intros H'1; Contradict H'0; auto.",
            "VernacExtend",
            "85362fff70c63a2e9a5e9ddd1ffc7938cbc55751"
        ],
        [
            "apply lt_not_le; auto with arith.",
            "VernacExtend",
            "2e8fc221926212371063fdc84cfd53f73c7acde7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem min_n_0 : forall n : nat, min n 0 = 0.",
            "VernacStartTheoremProof",
            "a6931effd6933fe4b0c97cea2cc59c7cf7c0ad79"
        ],
        [
            "intros n; case n; simpl in |- *; auto.",
            "VernacExtend",
            "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rabs_pos: real.",
            "VernacHints",
            "0f88cdb423b6f8903ea6e0a6889f05e1d9d9df6a"
        ],
        [
            "Theorem Rlt_Rminus_ZERO : forall r1 r2 : R, (r2 < r1)%R -> (0 < r1 - r2)%R.",
            "VernacStartTheoremProof",
            "51ed9949bb673735f767969a78d5449006c9fe77"
        ],
        [
            "intros r1 r2 H; replace 0%R with (r1 - r1)%R; unfold Rminus in |- *; auto with real.",
            "VernacExtend",
            "43f15a3b5d35110b53617b5193349a97ded581bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_Rminus_ZERO: real.",
            "VernacHints",
            "bcd747aa17e2c501a09f5890fb46234833ce56e4"
        ],
        [
            "Theorem Rabsolu_left1 : forall a : R, (a <= 0)%R -> Rabs a = (- a)%R.",
            "VernacStartTheoremProof",
            "dbcbcb700330f6ac5fca5d661121db624b8e1d24"
        ],
        [
            "intros a H; case H; intros H1.",
            "VernacExtend",
            "7ff3cc78dc8ff9e3c8bd48e6d164fed7ecf3f376"
        ],
        [
            "apply Rabs_left; auto.",
            "VernacExtend",
            "89484c58961ef5b69dcb0bc77e45bad782de0a67"
        ],
        [
            "rewrite H1; simpl in |- *; rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "0912db36fe488f59945228d30139e2989f9c79db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RmaxLess1 : forall r1 r2 : R, (r1 <= Rmax r1 r2)%R.",
            "VernacStartTheoremProof",
            "612abaae94a3eaecb692d54a2e6b1c95a52f955e"
        ],
        [
            "intros r1 r2; unfold Rmax in |- *; case (Rle_dec r1 r2); auto with real.",
            "VernacExtend",
            "56a76f2891d040b7e376e4bc73987103b4a09ec0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RmaxLess2 : forall r1 r2 : R, (r2 <= Rmax r1 r2)%R.",
            "VernacStartTheoremProof",
            "f713f896a5c9937f3fa5263bf00ee3a5541e2c85"
        ],
        [
            "intros r1 r2; unfold Rmax in |- *; case (Rle_dec r1 r2); auto with real; intros; apply Ropp_le_cancel; auto with real.",
            "VernacExtend",
            "35c436505bc6b1ad6789e45d312d34cbb5f5275f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RmaxSym : forall p q : R, Rmax p q = Rmax q p.",
            "VernacStartTheoremProof",
            "717b091f874d072870b579c9cd545a5702cd5294"
        ],
        [
            "intros p q; unfold Rmax in |- *.",
            "VernacExtend",
            "0b7af324b3482d256d2e50914a327af05d624cde"
        ],
        [
            "case (Rle_dec p q); case (Rle_dec q p); auto; intros H1 H2; apply Rle_antisym; auto.",
            "VernacExtend",
            "00f5c626fd47e7fe56f73788b3f9e04dbfccd1ac"
        ],
        [
            "case (Rle_or_lt p q); auto; intros H'0; Contradict H1; apply Rlt_le; auto.",
            "VernacExtend",
            "0c3c6309c3cd7bea3863740c482f978743179fa9"
        ],
        [
            "case (Rle_or_lt q p); auto; intros H'0; Contradict H2; apply Rlt_le; auto.",
            "VernacExtend",
            "2f4e63c742d35507ad71052aa1bdc3ed52a5cd9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RmaxAbs : forall p q r : R, (p <= q)%R -> (q <= r)%R -> (Rabs q <= Rmax (Rabs p) (Rabs r))%R.",
            "VernacStartTheoremProof",
            "795095d6a270891d4e5f7655841c9d3cc2d1400e"
        ],
        [
            "intros p q r H' H'0; case (Rle_or_lt 0 p); intros H'1.",
            "VernacExtend",
            "5966dde112dd50a5fe429660b27b0ab8cabf990a"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with r; auto with real.",
            "VernacExtend",
            "b9d69bb8a32d2fa4dcfedbb4f9e240535d8d36e6"
        ],
        [
            "apply RmaxLess2; auto.",
            "VernacExtend",
            "ff1ccb5209443da694006020f75938d81e022790"
        ],
        [
            "apply Rge_trans with p; auto with real; apply Rge_trans with q; auto with real.",
            "VernacExtend",
            "95c09b3520f8a9b86467a9a5fab81ecf71142216"
        ],
        [
            "apply Rge_trans with p; auto with real.",
            "VernacExtend",
            "b079ec260306de9193264e3f3d3f55a6a10d13d3"
        ],
        [
            "rewrite (Rabs_left p); auto.",
            "VernacExtend",
            "a806e6c59770a3ad545e1012bd7cb62ab8abb1c6"
        ],
        [
            "case (Rle_or_lt 0 q); intros H'2.",
            "VernacExtend",
            "c795b87af97e787699f0965560de4b0822e3acd8"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with r; auto.",
            "VernacExtend",
            "b82523ba2d15acc91f81ad5a067aef1041318d13"
        ],
        [
            "apply RmaxLess2; auto.",
            "VernacExtend",
            "ff1ccb5209443da694006020f75938d81e022790"
        ],
        [
            "apply Rge_trans with q; auto with real.",
            "VernacExtend",
            "ed2d5295692c2f9582b028f152a36f201c464f6c"
        ],
        [
            "rewrite (Rabs_left q); auto.",
            "VernacExtend",
            "89f1c5e1b413514dca5d289f5425ba67916826f5"
        ],
        [
            "case (Rle_or_lt 0 r); intros H'3.",
            "VernacExtend",
            "9019e663c064a8093fa884fe0b53bd83c6fba54b"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with (- p)%R; auto with real.",
            "VernacExtend",
            "400a290307ef8069573d7bb577bf9cb278a4ec4f"
        ],
        [
            "apply RmaxLess1; auto.",
            "VernacExtend",
            "503232233912d33b93dc36366787b8296209e8a4"
        ],
        [
            "rewrite (Rabs_left r); auto.",
            "VernacExtend",
            "0c747f7088a980d600eadcb4dd4748c86cec4e3e"
        ],
        [
            "apply Rle_trans with (- p)%R; auto with real.",
            "VernacExtend",
            "400a290307ef8069573d7bb577bf9cb278a4ec4f"
        ],
        [
            "apply RmaxLess1; auto.",
            "VernacExtend",
            "503232233912d33b93dc36366787b8296209e8a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rabsolu_Zabs : forall z : Z, Rabs (IZR z) = IZR (Zabs z).",
            "VernacStartTheoremProof",
            "e54101f0f2bea87374f67082b50bee78fe817948"
        ],
        [
            "intros z; case z; simpl in |- *; auto with real.",
            "VernacExtend",
            "1378dfe86775d9922809c6167e4abcd8a01a5315"
        ],
        [
            "apply Rabs_right; auto with real.",
            "VernacExtend",
            "b4580d3b8de8d02fff412210adca262b95ad7d36"
        ],
        [
            "intros p0; apply Rabs_right; auto with real zarith.",
            "VernacExtend",
            "28e293bd72663cd6ee585263deaa491aa2d08e7e"
        ],
        [
            "intros p0; unfold IZR; rewrite <- INR_IPR; rewrite Rabs_Ropp.",
            "VernacExtend",
            "dac1369cfe31f1aec208dff3f38b43c101a5013b"
        ],
        [
            "apply Rabs_right; auto with real zarith.",
            "VernacExtend",
            "82442372c64d35a7b82a8e79c36c4da35ca38296"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RmaxRmult : forall p q r : R, (0 <= r)%R -> Rmax (r * p) (r * q) = (r * Rmax p q)%R.",
            "VernacStartTheoremProof",
            "d99a4a3f4ed11ebefa6cb0dd1fb8537f8c3fb4be"
        ],
        [
            "intros p q r H; unfold Rmax in |- *.",
            "VernacExtend",
            "44574a121e450ce14cc464180a1a6d4f78902db9"
        ],
        [
            "case (Rle_dec p q); case (Rle_dec (r * p) (r * q)); auto; intros H1 H2; auto.",
            "VernacExtend",
            "4c40ce67fbe9932abdf295c6be68480ebc8690ab"
        ],
        [
            "case H; intros E1.",
            "VernacExtend",
            "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
        ],
        [
            "case H1; auto with real.",
            "VernacExtend",
            "6caae5709fe0d47b8468bf88b45d292d48db1607"
        ],
        [
            "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "082da5ea9d4280801824d0518fe3618d5e88b56f"
        ],
        [
            "case H; intros E1.",
            "VernacExtend",
            "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
        ],
        [
            "case H2; auto with real.",
            "VernacExtend",
            "687e078841f5214db3f57230b6792c68c43016c2"
        ],
        [
            "apply Rmult_le_reg_l with (r := r); auto.",
            "VernacExtend",
            "637685e051aa5cc73e441b8602b2ab19411c4be6"
        ],
        [
            "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "082da5ea9d4280801824d0518fe3618d5e88b56f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_R0_Ropp : forall p : R, (p <= 0)%R -> (0 <= - p)%R.",
            "VernacStartTheoremProof",
            "31d154ce213119d02dab86153b8a3900d05ec51c"
        ],
        [
            "intros p H; rewrite <- Ropp_0; auto with real.",
            "VernacExtend",
            "7ffd90086e4f0897c0dde42c5578fb352a7dbde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_R0_Ropp : forall p : R, (p < 0)%R -> (0 < - p)%R.",
            "VernacStartTheoremProof",
            "9001f40bc8bc82879ddcd4f98f2658de093d2ae8"
        ],
        [
            "intros p H; rewrite <- Ropp_0; auto with real.",
            "VernacExtend",
            "7ffd90086e4f0897c0dde42c5578fb352a7dbde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rle_R0_Ropp Rlt_R0_Ropp: real.",
            "VernacHints",
            "99484c6dd759928810ae06e5f485ed8dea57bc94"
        ],
        [
            "Theorem convert_not_O : forall p : positive, nat_of_P p <> 0.",
            "VernacStartTheoremProof",
            "cf379d40228d7fddc35f014261e2cc12756b6158"
        ],
        [
            "intros p; elim p.",
            "VernacExtend",
            "f5be26bce033506d1e7905db21457f07d5094abf"
        ],
        [
            "intros p0 H'; unfold nat_of_P in |- *; simpl in |- *; rewrite ZL6.",
            "VernacExtend",
            "24b0c29b5105bcb744a9b675852fbb1de746a493"
        ],
        [
            "generalize H'; case (nat_of_P p0); auto.",
            "VernacExtend",
            "7274c6e50935f0a46944bc0a481ccb6de7b76c18"
        ],
        [
            "intros p0 H'; unfold nat_of_P in |- *; simpl in |- *; rewrite ZL6.",
            "VernacExtend",
            "24b0c29b5105bcb744a9b675852fbb1de746a493"
        ],
        [
            "generalize H'; case (nat_of_P p0); simpl in |- *; auto.",
            "VernacExtend",
            "b228a113a73a755716527ba5bf407e92477f0ba5"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "6e2686454cfe6e1249138743b7b0a98e8e97616a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve convert_not_O: zarith arith.",
            "VernacHints",
            "73b003a867ffe516791fe2ff0b7c69394699b3df"
        ],
        [
            "Hint Resolve Zlt_le_weak Zle_not_gt Zgt_irrefl Zlt_irrefl Zle_not_lt Zlt_not_le Zlt_asym inj_lt inj_le: zarith.",
            "VernacHints",
            "c3c5853370e0ad7f0a4d1b91e75854d30a9cb242"
        ],
        [
            "Theorem inj_abs : forall x : Z, (0 <= x)%Z -> Z_of_nat (Zabs_nat x) = x.",
            "VernacStartTheoremProof",
            "5acd89b1bda82bbed8c2dbf5288035a6f5e4be92"
        ],
        [
            "intros x; elim x; auto.",
            "VernacExtend",
            "60009c3b651965c1a0eac46578bb63ea275bf7d9"
        ],
        [
            "unfold Zabs_nat in |- *.",
            "VernacExtend",
            "2acd6bb337140ffa4f7a1de955754d547f2dedd5"
        ],
        [
            "intros p.",
            "VernacExtend",
            "223e3cb70cff95972873720780e7195aeb57b9fc"
        ],
        [
            "pattern p at 1 3 in |- *; rewrite <- (pred_o_P_of_succ_nat_o_nat_of_P_eq_id p).",
            "VernacExtend",
            "13dca53d4eef61ef8a5f389ca777b4e768c25d16"
        ],
        [
            "generalize (convert_not_O p); case (nat_of_P p); simpl in |- *; auto with arith.",
            "VernacExtend",
            "fdea47b288b2cd8664f8273780dc9bcb44c601a1"
        ],
        [
            "intros H'; case H'; auto.",
            "VernacExtend",
            "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
        ],
        [
            "intros n H' H'0; rewrite Ppred_succ; auto.",
            "VernacExtend",
            "15eac5b242f14d4516fb3f67c9a02c199e77bce1"
        ],
        [
            "intros p H'; Contradict H'; auto.",
            "VernacExtend",
            "316595ab7c7e7137c700e35d701d3d59feb5e4b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inject_nat_convert : forall (p : Z) (q : positive), p = Zpos q -> Z_of_nat (nat_of_P q) = p.",
            "VernacStartTheoremProof",
            "e443dd364e17465da771d98804e7f5b239dc4a8e"
        ],
        [
            "intros p q H'; rewrite H'.",
            "VernacExtend",
            "24e7f6d4cad70eecd4567d27b6a535eb996e8e5b"
        ],
        [
            "CaseEq (nat_of_P q); simpl in |- *.",
            "VernacExtend",
            "e208ebf4abdde5dfdbad55706a4dd19692a39d40"
        ],
        [
            "elim q; unfold nat_of_P in |- *; simpl in |- *; intros; try discriminate.",
            "VernacExtend",
            "ba49c6c7a87ecba7b5a5a3280a37d18cf3d85673"
        ],
        [
            "absurd (0%Z = Zpos p0); auto.",
            "VernacExtend",
            "8c5c907a5ea97824cc220aae7ebc010b028e662f"
        ],
        [
            "red in |- *; intros H'0; try discriminate.",
            "VernacExtend",
            "1e730c5cdb6e41038b0ad440c73954013b822f06"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "change (nat_of_P p0 = 0) in |- *.",
            "VernacExtend",
            "552c84f41ba9e6bac80b53532ce2ee38407d1d51"
        ],
        [
            "generalize H0; rewrite ZL6; case (nat_of_P p0); simpl in |- *; auto; intros; try discriminate.",
            "VernacExtend",
            "842a3acbd7fe7a7c085066027a0356577aba824c"
        ],
        [
            "intros n; rewrite <- nat_of_P_o_P_of_succ_nat_eq_succ.",
            "VernacExtend",
            "411f615b30422f82dfba10c7d9cec1913e1be053"
        ],
        [
            "intros H'0; apply f_equal with (f := Zpos).",
            "VernacExtend",
            "74429cc7ee19b4fd695e48d69947421c69826cf6"
        ],
        [
            "apply nat_of_P_inj; auto.",
            "VernacExtend",
            "16783e9911a18d32eed2a9d0ed3555f52ed10dfa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve inj_le inj_lt: zarith.",
            "VernacHints",
            "f55010a3baa0a6ce30904f13e52c0df9e02a93e8"
        ],
        [
            "Theorem ZleLe : forall x y : nat, (Z_of_nat x <= Z_of_nat y)%Z -> x <= y.",
            "VernacStartTheoremProof",
            "ace259098b98441b5fbeccaaa1302534704bcbe0"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "case (le_or_lt x y); auto with arith.",
            "VernacExtend",
            "289766ea6388d1d2d1d78c18cb5419e3752d25e4"
        ],
        [
            "intros H'0; Contradict H'; auto with zarith.",
            "VernacExtend",
            "5c50aed80634db345daa3deaa2d76e19fa40a1e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inject_nat_eq : forall x y : nat, Z_of_nat x = Z_of_nat y -> x = y.",
            "VernacStartTheoremProof",
            "97a2e704df6f56d8b72a91c8e82186a4b4145dd7"
        ],
        [
            "intros x y H'; apply le_antisym.",
            "VernacExtend",
            "e07e786a2fac24360f9e345b69588ce9b3b7b02e"
        ],
        [
            "apply ZleLe; auto.",
            "VernacExtend",
            "f4c825eb3ddb6d6bc341c0a358dbbbba0b7faa62"
        ],
        [
            "idtac; rewrite H'; auto with zarith.",
            "VernacExtend",
            "1a6d5456121bd7d1632404f3edf241ee233fcb6b"
        ],
        [
            "apply ZleLe; auto.",
            "VernacExtend",
            "f4c825eb3ddb6d6bc341c0a358dbbbba0b7faa62"
        ],
        [
            "idtac; rewrite H'; auto with zarith.",
            "VernacExtend",
            "1a6d5456121bd7d1632404f3edf241ee233fcb6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zcompare_EGAL : forall p q : Z, (p ?= q)%Z = Datatypes.Eq -> p = q.",
            "VernacStartTheoremProof",
            "b335da0e32e772a55ba4c3c3443a26eb57239e88"
        ],
        [
            "intros p q; case p; case q; simpl in |- *; auto with arith; try (intros; discriminate); intros q1 p1.",
            "VernacExtend",
            "11dc6a2723481ef312c13391530dbdd0c18077c9"
        ],
        [
            "intros H1; rewrite (Pcompare_Eq_eq p1 q1); auto.",
            "VernacExtend",
            "0b93517b82fda79fc2d777b98597e49a132926c3"
        ],
        [
            "unfold Pos.compare.",
            "VernacExtend",
            "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
        ],
        [
            "generalize (Pcompare_Eq_eq p1 q1); case (Pcompare p1 q1 Datatypes.Eq); simpl in |- *; intros H H1; try discriminate; rewrite H; auto.",
            "VernacExtend",
            "d73ae17d9e263a4af99092a5b5b27a9303a50d6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_Zopp : forall x y : Z, (x < y)%Z -> (- y < - x)%Z.",
            "VernacStartTheoremProof",
            "78f44f873e54981700e08b9a4bcfb7ac8cfd256a"
        ],
        [
            "intros x y; case x; case y; simpl in |- *; auto with zarith; intros p p0; unfold Zlt in |- *; simpl in |- *; unfold Pos.compare; rewrite <- ZC4; auto.",
            "VernacExtend",
            "bf3e9c9f047f04d35cbd7265e78e83c4cd7112ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_Zopp: zarith.",
            "VernacHints",
            "e5f78c1a355a8a450e67fe66e90294b5da9738bc"
        ],
        [
            "Theorem Zle_Zopp : forall x y : Z, (x <= y)%Z -> (- y <= - x)%Z.",
            "VernacStartTheoremProof",
            "07790b580cceb9d989c234e1339bcbd911733a23"
        ],
        [
            "intros x y H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
            "VernacExtend",
            "6b74809eb65c5456d4b72cde7537782e719050aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zopp: zarith.",
            "VernacHints",
            "df2f93c73d3390ac114e394549851857e4a7ef4d"
        ],
        [
            "Theorem absolu_INR : forall n : nat, Zabs_nat (Z_of_nat n) = n.",
            "VernacStartTheoremProof",
            "db78ecc33dd6c6a64af708fdd1c2b7ed2838012d"
        ],
        [
            "intros n; case n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "e30347b9aef1ec3dd950fe6a5fe170c882edf5d7"
        ],
        [
            "intros n0; rewrite nat_of_P_o_P_of_succ_nat_eq_succ; auto with arith.",
            "VernacExtend",
            "d7bd620616c024e2a9e9524c99606c154851c39d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem absolu_Zopp : forall p : Z, Zabs_nat (- p) = Zabs_nat p.",
            "VernacStartTheoremProof",
            "40a7f7640b0cb30241b5a0e0b59fc1533c6d3494"
        ],
        [
            "intros p; case p; simpl in |- *; auto.",
            "VernacExtend",
            "afee7a9ab62d247041c6e9d02f5397b50015aedd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_absolu : forall z : Z, Zabs z = Z_of_nat (Zabs_nat z).",
            "VernacStartTheoremProof",
            "2c9efeb951a8718788f94be2598b5cde5645e274"
        ],
        [
            "intros z; case z; simpl in |- *; auto; intros p; apply sym_equal; apply inject_nat_convert; auto.",
            "VernacExtend",
            "8a9893574b26331491544bcf304d9b196839dc21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem absolu_comp_mult : forall p q : Z, Zabs_nat (p * q) = Zabs_nat p * Zabs_nat q.",
            "VernacStartTheoremProof",
            "d3549b72359cfaa850f8cf2569a7352c4ab7cf74"
        ],
        [
            "intros p q; case p; case q; simpl in |- *; auto; intros p0 p1; apply ((fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y) p1 p0 (fun x => x)).",
            "VernacExtend",
            "3030afcdb041461712107c6813049454db48706c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmin_sym : forall m n : Z, Zmin n m = Zmin m n.",
            "VernacStartTheoremProof",
            "50917b03225abb6866b0d6a9bd9a6bde2dae67bb"
        ],
        [
            "intros m n; unfold Zmin in |- *.",
            "VernacExtend",
            "e271f6dee4e29fb32d71e2c7115dcfecd8227ff9"
        ],
        [
            "case n; case m; simpl in |- *; auto; unfold Pos.compare.",
            "VernacExtend",
            "2724a84061c7af73f52f01df51f046391f3ac287"
        ],
        [
            "intros p p0; rewrite (ZC4 p p0).",
            "VernacExtend",
            "2475e19e7bb51d9d595645dec7dee38fa2ac7012"
        ],
        [
            "generalize (Pcompare_Eq_eq p0 p).",
            "VernacExtend",
            "e93f0612c4284d2443a5688fc75c3c413219f48d"
        ],
        [
            "case (Pcompare p0 p Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "a1b5a8f5ce6218f3aabe7a11e1ee8ae164569985"
        ],
        [
            "intros H'; rewrite H'; auto.",
            "VernacExtend",
            "ade896278b51934c8f6f7f6a461fd3088155cce0"
        ],
        [
            "intros p p0; rewrite (ZC4 p p0).",
            "VernacExtend",
            "2475e19e7bb51d9d595645dec7dee38fa2ac7012"
        ],
        [
            "generalize (Pcompare_Eq_eq p0 p).",
            "VernacExtend",
            "e93f0612c4284d2443a5688fc75c3c413219f48d"
        ],
        [
            "case (Pcompare p0 p Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "a1b5a8f5ce6218f3aabe7a11e1ee8ae164569985"
        ],
        [
            "intros H'; rewrite H'; auto.",
            "VernacExtend",
            "ade896278b51934c8f6f7f6a461fd3088155cce0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zpower_nat_O : forall z : Z, Zpower_nat z 0 = Z_of_nat 1.",
            "VernacStartTheoremProof",
            "e8814c12eaacea3fb87364c444ac46b5ee8151e9"
        ],
        [
            "intros z; unfold Zpower_nat in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "f90fc4d4663f9d4a7a44f7083810f7f94772e676"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zpower_nat_1 : forall z : Z, Zpower_nat z 1 = z.",
            "VernacStartTheoremProof",
            "6d596e86ab4b8a1c0717f794698a0d2879bc2252"
        ],
        [
            "intros z; unfold Zpower_nat in |- *; simpl in |- *; rewrite Zmult_1_r; auto.",
            "VernacExtend",
            "cd3233fbaed81b17fb88070533edae93ea446d1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmin_le1 : forall z1 z2 : Z, (z1 <= z2)%Z -> Zmin z1 z2 = z1.",
            "VernacStartTheoremProof",
            "beec08189786d4a6f659aba6286f9cf83eb96c41"
        ],
        [
            "intros z1 z2; unfold Zle, Zmin in |- *; case (z1 ?= z2)%Z; auto; intros H; Contradict H; auto.",
            "VernacExtend",
            "a0c946dd432a28787927ef9181b6b36c0ebb7945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmin_le2 : forall z1 z2 : Z, (z2 <= z1)%Z -> Zmin z1 z2 = z2.",
            "VernacStartTheoremProof",
            "82ac13de1701e251c839cb3279fd00719b562545"
        ],
        [
            "intros z1 z2 H; rewrite Zmin_sym; apply Zmin_le1; auto.",
            "VernacExtend",
            "ad4ae78989984843870510b6f97d0ca80415af37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmin_Zle : forall z1 z2 z3 : Z, (z1 <= z2)%Z -> (z1 <= z3)%Z -> (z1 <= Zmin z2 z3)%Z.",
            "VernacStartTheoremProof",
            "53a3d6f39644ede016fcdab5a267c3e7b451b130"
        ],
        [
            "intros z1 z2 z3 H' H'0; unfold Zmin in |- *.",
            "VernacExtend",
            "54d4cca1749efd13da0768b090a1548509754019"
        ],
        [
            "case (z2 ?= z3)%Z; auto.",
            "VernacExtend",
            "acf70e8ab6ce782f0c9b008900bf6e28aa7fd296"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zminus_n_predm : forall n m : Z, Zsucc (n - m) = (n - Zpred m)%Z.",
            "VernacStartTheoremProof",
            "0de4342b61805b0015735549e1ac58612474fd16"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "unfold Zpred in |- *; unfold Zsucc in |- *; ring.",
            "VernacExtend",
            "7550e11b49699bdddb9fd9fb124dcb39474d6cf8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zopp_Zpred_Zs : forall z : Z, (- Zpred z)%Z = Zsucc (- z).",
            "VernacStartTheoremProof",
            "de58c3107fb4decefcb3b5c73e30cc30223138a1"
        ],
        [
            "intros z; unfold Zpred, Zsucc in |- *; ring.",
            "VernacExtend",
            "1e0fc0dba4c22b4e2d03997c1e475ac7afcba7e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_mult_gen : forall x y : Z, (0 <= x)%Z -> (0 <= y)%Z -> (0 <= x * y)%Z.",
            "VernacStartTheoremProof",
            "9b146cc595fe0eb558009e4f3ba34a44e08f144a"
        ],
        [
            "intros x y H' H'0; case (Zle_lt_or_eq _ _ H').",
            "VernacExtend",
            "aeb44378bf9a331177bd147bd2ab6ca0589b37b4"
        ],
        [
            "intros H'1; rewrite Zmult_comm; apply Zmult_gt_0_le_0_compat; auto; apply Zlt_gt; auto.",
            "VernacExtend",
            "4b86881d55febbebacbc40de0d20f68f30da8f82"
        ],
        [
            "intros H'1; rewrite <- H'1; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "af05a72ea53df5183c502bbe22f1d87d726a0dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_mult_gen: zarith.",
            "VernacHints",
            "32497f390f38cd70a6eb447452f16d746c0b351f"
        ],
        [
            "Definition Zmax : forall x_ x_ : Z, Z := fun n m : Z => match (n ?= m)%Z with | Datatypes.Eq => m | Datatypes.Lt => m | Datatypes.Gt => n end.",
            "VernacDefinition",
            "a0a5df26f9f5c2a53655194328b56e079d74a547"
        ],
        [
            "Theorem ZmaxLe1 : forall z1 z2 : Z, (z1 <= Zmax z1 z2)%Z.",
            "VernacStartTheoremProof",
            "5af2cc98583f673c2d19343bdf86c59e4667955f"
        ],
        [
            "intros z1 z2; unfold Zmax in |- *; CaseEq (z1 ?= z2)%Z; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "723aa899dc9751150613e6f744e8d77ff5b14c04"
        ],
        [
            "unfold Zle in |- *; intros H; rewrite H; red in |- *; intros; discriminate.",
            "VernacExtend",
            "9333b74ca8ffa2d4b3f2f6c8bbdf5ea66bb428d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZmaxSym : forall z1 z2 : Z, Zmax z1 z2 = Zmax z2 z1.",
            "VernacStartTheoremProof",
            "656964a078c88553e3168a2a3ecd2418568b3d9b"
        ],
        [
            "intros z1 z2; unfold Zmax in |- *; CaseEq (z1 ?= z2)%Z; CaseEq (z2 ?= z1)%Z; intros H1 H2; try case (Zcompare_EGAL _ _ H1); auto; try case (Zcompare_EGAL _ _ H2); auto; Contradict H1.",
            "VernacExtend",
            "31e629868f7bf11c44c65669c57a6bd089bd419c"
        ],
        [
            "case (Zcompare.Zcompare_Gt_Lt_antisym z2 z1); auto.",
            "VernacExtend",
            "55d15e375df1347d2899b76bea41dd9c44704de6"
        ],
        [
            "intros H' H'0; rewrite H'0; auto; red in |- *; intros; discriminate.",
            "VernacExtend",
            "8809ba7380e715f8c78105fecd21280e1b5b6e6b"
        ],
        [
            "case (Zcompare.Zcompare_Gt_Lt_antisym z1 z2); auto.",
            "VernacExtend",
            "b574374fd43670ec9c17610ee00077cae7f6fb1b"
        ],
        [
            "intros H'; rewrite H'; auto; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "2399b6273157f233bc9e212efa3bc53ae8250d18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmax_le2 : forall z1 z2 : Z, (z1 <= z2)%Z -> Zmax z1 z2 = z2.",
            "VernacStartTheoremProof",
            "58dac02261413ebe52b7743553ce1cbb62c3964c"
        ],
        [
            "intros z1 z2; unfold Zle, Zmax in |- *; case (z1 ?= z2)%Z; auto.",
            "VernacExtend",
            "49e6c4f0ad4ac9e174eca562bfe86a2dd1fa974c"
        ],
        [
            "intros H'; case H'; auto.",
            "VernacExtend",
            "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmax_le1 : forall z1 z2 : Z, (z2 <= z1)%Z -> Zmax z1 z2 = z1.",
            "VernacStartTheoremProof",
            "aaaa3ad44f33c513a822f4c5bfbb37de63a1b0f9"
        ],
        [
            "intros z1 z2 H'; rewrite ZmaxSym; apply Zmax_le2; auto.",
            "VernacExtend",
            "4990f7bef47e8b616f25f362f41ce7529f9f68a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ZmaxLe2 : forall z1 z2 : Z, (z2 <= Zmax z1 z2)%Z.",
            "VernacStartTheoremProof",
            "e30530ee00f2ea9240fdd32dfe75ed8334f1fbeb"
        ],
        [
            "intros z1 z2; rewrite ZmaxSym; apply ZmaxLe1.",
            "VernacExtend",
            "ff9ea497caaf8997b68e1f566e254975756bcb9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ZmaxLe1 ZmaxLe2: zarith.",
            "VernacHints",
            "a003a06502b60cbf3970edcf006f47a1b8cf8352"
        ],
        [
            "Theorem Zeq_Zs : forall p q : Z, (p <= q)%Z -> (q < Zsucc p)%Z -> p = q.",
            "VernacStartTheoremProof",
            "12ed7f7b9b60cbbdead5ac31c98533e4ad6efd07"
        ],
        [
            "intros p q H' H'0; apply Zle_antisym; auto.",
            "VernacExtend",
            "e95c829754241472bf5053d3c8073fea701ba1d7"
        ],
        [
            "apply Zlt_succ_le; auto.",
            "VernacExtend",
            "1c4ed25a0af8970ba728f0b698cc37fb8ee71d3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zmin_Zmax : forall z1 z2 : Z, (Zmin z1 z2 <= Zmax z1 z2)%Z.",
            "VernacStartTheoremProof",
            "fe479d8f1c04ed56510b9eb1cd5482098129de16"
        ],
        [
            "intros z1 z2; case (Zle_or_lt z1 z2); unfold Zle, Zlt, Zmin, Zmax in |- *; CaseEq (z1 ?= z2)%Z; auto; intros H1 H2; try rewrite H1; try rewrite H2; red in |- *; intros; discriminate.",
            "VernacExtend",
            "aa86171deaee0c4a4e6debfd286dd159ef75fb4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_Zmult : forall z1 z2 : Z, Zabs (z1 * z2) = (Zabs z1 * Zabs z2)%Z.",
            "VernacStartTheoremProof",
            "a95280f555f976b61202dfec8e2f5628c9f0a070"
        ],
        [
            "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zmult_comp_r : forall x y z : Z, (0 <= z)%Z -> (x <= y)%Z -> (x * z <= y * z)%Z.",
            "VernacStartTheoremProof",
            "51dbb3081d5687ec660a00efad3aa9e42142762d"
        ],
        [
            "intros x y z H' H'0; case (Zle_lt_or_eq _ _ H'); intros Zlt1.",
            "VernacExtend",
            "8bb864101c8a345d8afb8196a1d8123e7f47dbf0"
        ],
        [
            "apply Zmult_gt_0_le_compat_r; auto.",
            "VernacExtend",
            "91eccf7445f2c2d05fd1dadf17e5e817b8671493"
        ],
        [
            "apply Zlt_gt; auto.",
            "VernacExtend",
            "c026e800af6ae6924d04465d4a1d17d1cc73bf3b"
        ],
        [
            "rewrite <- Zlt1; repeat rewrite <- Zmult_0_r_reverse; auto with zarith.",
            "VernacExtend",
            "4a948df8a316aa2cbb853f4412b0b4582ff4d984"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zmult_comp_l : forall x y z : Z, (0 <= z)%Z -> (x <= y)%Z -> (z * x <= z * y)%Z.",
            "VernacStartTheoremProof",
            "e8d4e8bce9fb0d72b59bac683e7d76f01fc344b6"
        ],
        [
            "intros x y z H' H'0; repeat rewrite (Zmult_comm z); apply Zle_Zmult_comp_r; auto.",
            "VernacExtend",
            "857667bee7fa5bbcba924d3ab152ee16b4f38f50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem NotZmultZero : forall z1 z2 : Z, z1 <> 0%Z -> z2 <> 0%Z -> (z1 * z2)%Z <> 0%Z.",
            "VernacStartTheoremProof",
            "a28de7335777bdd93d6fa9edc8cf02ecaba5827d"
        ],
        [
            "intros z1 z2; case z1; case z2; simpl in |- *; intros; auto; try discriminate.",
            "VernacExtend",
            "add1bc6a6139aaf6f2e46fd7db22502f88e313b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NotZmultZero: zarith.",
            "VernacHints",
            "06f70ef274e10056bdb51b5f4b04fab64cff3d39"
        ],
        [
            "Theorem IZR_zero : forall p : Z, p = 0%Z -> IZR p = 0%R.",
            "VernacStartTheoremProof",
            "eb25dad1cf419eeffb867dc001531d22b7c6479a"
        ],
        [
            "intros p H'; rewrite H'; auto.",
            "VernacExtend",
            "88bd9dc02b44429d68b481151751aba2c7467e14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_O_INR: real.",
            "VernacHints",
            "481e8c5aab49fcef353020aca2f04d8c9a4dc9b1"
        ],
        [
            "Theorem IZR_zero_r : forall p : Z, IZR p = 0%R -> p = 0%Z.",
            "VernacStartTheoremProof",
            "48e557c699ec7c6a802ea6e24f89551a1ad672fd"
        ],
        [
            "intros p; case p; simpl in |- *; auto.",
            "VernacExtend",
            "afee7a9ab62d247041c6e9d02f5397b50015aedd"
        ],
        [
            "intros p1 H'; Contradict H'; auto with real zarith.",
            "VernacExtend",
            "24ad937eb2c02c413a0917aba96257ac76425580"
        ],
        [
            "intros p1 H'; absurd (INR (nat_of_P p1) = 0%R); auto with real zarith.",
            "VernacExtend",
            "04c63e6a621355a3907bdcf9efc3f44b909cc985"
        ],
        [
            "rewrite <- (Ropp_involutive (INR (nat_of_P p1))).",
            "VernacExtend",
            "46fae73eb8e93dadab7692674129f2859879730a"
        ],
        [
            "unfold IZR in H'; rewrite <- INR_IPR in H'.",
            "VernacExtend",
            "81e869646e28cef36914e21c58abb51153123a48"
        ],
        [
            "rewrite H'; auto with real.",
            "VernacExtend",
            "bcb9635fac759df6b98a63d3ba2a03d8ad05a26f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INR_lt_nm : forall n m : nat, n < m -> (INR n < INR m)%R.",
            "VernacStartTheoremProof",
            "0e12554185be3032960f950e1e7a1bdd1f88ca65"
        ],
        [
            "intros n m H'; elim H'; auto.",
            "VernacExtend",
            "9e3876aa94489fad4cd1313e47b16b51625ef229"
        ],
        [
            "replace (INR n) with (INR n + 0)%R; auto with real; rewrite S_INR; auto with real.",
            "VernacExtend",
            "ce523fb88f52460ee9a6fae260762fff34c6093b"
        ],
        [
            "intros m0 H'0 H'1.",
            "VernacExtend",
            "762e3f15fc50e52fac0f9651e20b784e8c88375f"
        ],
        [
            "replace (INR n) with (INR n + 0)%R; auto with real; rewrite S_INR; auto with real.",
            "VernacExtend",
            "ce523fb88f52460ee9a6fae260762fff34c6093b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve INR_lt_nm: real.",
            "VernacHints",
            "83923bf46c852684ddefe1b526449fed9d4e30c8"
        ],
        [
            "Theorem Rlt_INR1 : forall n : nat, 1 < n -> (1 < INR n)%R.",
            "VernacStartTheoremProof",
            "5f7a8713d2f24f578e78b8a31ca9e2fc6cb8fb40"
        ],
        [
            "replace 1%R with (INR 1); auto with real.",
            "VernacExtend",
            "a9f50593cb67a6e04803fabf1b642d73428d43f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_INR1: real.",
            "VernacHints",
            "74664446502d9d0b3990dadf07f55ddcd6171641"
        ],
        [
            "Theorem NEq_INR : forall n m : nat, n <> m -> INR n <> INR m.",
            "VernacStartTheoremProof",
            "4991f1cc3c25adfad86cf070b51e8caeac8085df"
        ],
        [
            "intros n m H'; (case (le_or_lt n m); intros H'1).",
            "VernacExtend",
            "bbe302d47fb94b7e0cf9eb981687d8e4a517aebc"
        ],
        [
            "case (le_lt_or_eq _ _ H'1); intros H'2.",
            "VernacExtend",
            "883c5e28fdeeffd21fbf0090951c5ed3377326ff"
        ],
        [
            "apply Rlt_dichotomy_converse; auto with real.",
            "VernacExtend",
            "3a05b78a0146e73bdab632e31866736ecc47aa81"
        ],
        [
            "Contradict H'; auto.",
            "VernacExtend",
            "6de99c75ca420c27a59ad01c17beddf6a249ac34"
        ],
        [
            "apply Compare.not_eq_sym; apply Rlt_dichotomy_converse; auto with real.",
            "VernacExtend",
            "782069883b490af28f62fbd73c70fdfb3dea6a1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NEq_INR: real.",
            "VernacHints",
            "02f0d3f321abe38e129083919051ac07535dbec5"
        ],
        [
            "Theorem NEq_INRO : forall n : nat, n <> 0 -> INR n <> 0%R.",
            "VernacStartTheoremProof",
            "5b4bf6d1359a2f9b8927c1cad9e21c0186560262"
        ],
        [
            "replace 0%R with (INR 0); auto with real.",
            "VernacExtend",
            "b571851a56683b037490a608594c744506b81bdd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NEq_INRO: real.",
            "VernacHints",
            "cdc9de75320cb83218fdd49ad2dcaf509f2cb64c"
        ],
        [
            "Theorem NEq_INR1 : forall n : nat, n <> 1 -> INR n <> 1%R.",
            "VernacStartTheoremProof",
            "5dc3c87accac095cfc114870bba2f56e367f2148"
        ],
        [
            "replace 1%R with (INR 1); auto with real.",
            "VernacExtend",
            "a9f50593cb67a6e04803fabf1b642d73428d43f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NEq_INR1: real.",
            "VernacHints",
            "be950cdbdb3d76b9db722f0b4f90e855863ec3c4"
        ],
        [
            "Theorem not_O_lt : forall n : nat, n <> 0 -> 0 < n.",
            "VernacStartTheoremProof",
            "db1780c67a6157d396eabe37d8d30f2500beaee4"
        ],
        [
            "intros n; elim n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "3ce118dcfa35fa106b4a0db75896944b3c969987"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_O_lt: arith.",
            "VernacHints",
            "15e84ff58a61fbd61c22904ebba0020b4929716a"
        ],
        [
            "Theorem NEq_IZRO : forall n : Z, n <> 0%Z -> IZR n <> 0%R.",
            "VernacStartTheoremProof",
            "9ac48804bc925b8970ebb31e5cd4193ac0094a53"
        ],
        [
            "intros n H; Contradict H.",
            "VernacExtend",
            "6477e70ea692c0f087bdc92f8d1256f3abe7ca99"
        ],
        [
            "apply IZR_zero_r; auto.",
            "VernacExtend",
            "7bf2b8f93b53f34a7b36a1b5d556836a78d3a287"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NEq_IZRO: real.",
            "VernacHints",
            "b3e56213fa306a72135406c443490dde77595019"
        ],
        [
            "Theorem Rlt_IZR : forall p q : Z, (p < q)%Z -> (IZR p < IZR q)%R.",
            "VernacStartTheoremProof",
            "fda7be5886569809ae2dce4610abaa87c85bbb71"
        ],
        [
            "intros p q H; case (Rle_or_lt (IZR q) (IZR p)); auto.",
            "VernacExtend",
            "b225638cbe252204c0d0a76e6a8a9e3faf6b0262"
        ],
        [
            "intros H1; Contradict H; apply Zle_not_lt.",
            "VernacExtend",
            "52a9fad6249ae9d76a22c461277ecfac18fc6387"
        ],
        [
            "apply le_IZR; auto.",
            "VernacExtend",
            "5ddae610de44a290611008bca1b760849106ddb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_IZR: real.",
            "VernacHints",
            "c37752b14128fd1106dcafc84e31c6ce7f3a7669"
        ],
        [
            "Theorem Rle_IZR : forall x y : Z, (x <= y)%Z -> (IZR x <= IZR y)%R.",
            "VernacStartTheoremProof",
            "383ffe0686a612e1f04391846fba01018b6c3937"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "case (Zle_lt_or_eq _ _ H'); clear H'; intros H'.",
            "VernacExtend",
            "f5dc18f4a3640ebfd0774aa99c9667a7a1d49165"
        ],
        [
            "apply Rlt_le; auto with real.",
            "VernacExtend",
            "e1bf079018a05b732af3de134a13c80fa1b905a3"
        ],
        [
            "rewrite <- H'; auto with real.",
            "VernacExtend",
            "a1c5dcc143410b8a57b2d1e7a2af7344044288ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rle_IZR: real.",
            "VernacHints",
            "3356011c026116eae71a569886a737e1c20b2f40"
        ],
        [
            "Theorem Rlt_IZRO : forall p : Z, (0 < p)%Z -> (0 < IZR p)%R.",
            "VernacStartTheoremProof",
            "090e8392219447938da2145b13881e725c059a8e"
        ],
        [
            "intros p H; replace 0%R with (IZR 0); auto with real.",
            "VernacExtend",
            "5265f29ad97e71318b6852976502cbeac934fdd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_IZRO: real.",
            "VernacHints",
            "15b557bf18e253b29511e594bf7bb692e397bf85"
        ],
        [
            "Theorem Rle_IZRO : forall x y : Z, (0 <= y)%Z -> (0 <= IZR y)%R.",
            "VernacStartTheoremProof",
            "435d962efcf5110649ca0eed46d919699a44d21e"
        ],
        [
            "intros; replace 0%R with (IZR 0); auto with real.",
            "VernacExtend",
            "341b8f5fe2040db77b03312948641c6fbcc5689d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rle_IZRO: real.",
            "VernacHints",
            "804cf997727116b251af3e072030596833aee2d2"
        ],
        [
            "Theorem Rlt_IZR1 : forall p q : Z, (1 < q)%Z -> (1 < IZR q)%R.",
            "VernacStartTheoremProof",
            "c1670d6dfc841b91cdbad40606e4c988cbebda26"
        ],
        [
            "intros; replace 1%R with (IZR 1); auto with real.",
            "VernacExtend",
            "3317d7a29ddfd40db1a09dbd43e876488ca80ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_IZR1: real.",
            "VernacHints",
            "0d46eeb75e8af1ae6ab8733364f06eefc41593a3"
        ],
        [
            "Theorem Rle_IZR1 : forall x y : Z, (1 <= y)%Z -> (1 <= IZR y)%R.",
            "VernacStartTheoremProof",
            "028ca21e373d933a4ff1b2e107af2ebe07df719e"
        ],
        [
            "intros; replace 1%R with (IZR 1); auto with real.",
            "VernacExtend",
            "3317d7a29ddfd40db1a09dbd43e876488ca80ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rle_IZR1: real.",
            "VernacHints",
            "28af7302355f2e065e7d7478ae4533ec95a8d043"
        ],
        [
            "Theorem lt_Rlt : forall n m : nat, (INR n < INR m)%R -> n < m.",
            "VernacStartTheoremProof",
            "be1772bef2bab093e726a5e52b01971b93363c60"
        ],
        [
            "intros n m H'; case (le_or_lt m n); auto; intros H0; Contradict H'; auto with real.",
            "VernacExtend",
            "bd6a3142f88bc37f80f0c0c94780d78cd9a791d7"
        ],
        [
            "case (le_lt_or_eq _ _ H0); intros H1; auto with real.",
            "VernacExtend",
            "46ee38a72f64423a1c2bc9fc4c9e311e4467c5d6"
        ],
        [
            "rewrite H1; apply Rlt_irrefl.",
            "VernacExtend",
            "be966b97b54f3fcb924e347e26e1fc9b4146fb8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INR_inv : forall n m : nat, INR n = INR m -> n = m.",
            "VernacStartTheoremProof",
            "9c4caf1e814b400a5bf7422f98b16deafc7df285"
        ],
        [
            "intros n; elim n; auto; try rewrite S_INR.",
            "VernacExtend",
            "847ef8170c4d8dac839e6093fd8811d3fdcacb2d"
        ],
        [
            "intros m; case m; auto.",
            "VernacExtend",
            "ba64d4826ea21d443c3185e1b131671293f99407"
        ],
        [
            "intros m' H1; Contradict H1; auto.",
            "VernacExtend",
            "e7ef39152f43987c866fd6ac21fb3db87105edfb"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "apply Rlt_dichotomy_converse; left.",
            "VernacExtend",
            "8be10ff4f710df6fc2d16ffa31bf4c3b6a53d9f5"
        ],
        [
            "apply Rle_lt_0_plus_1.",
            "VernacExtend",
            "e9f77c81bc998cc37359f089b3b38967b549481a"
        ],
        [
            "apply pos_INR.",
            "VernacExtend",
            "0d9ef3d5703b4f3e1294027dac0f940b9f78b56e"
        ],
        [
            "intros n' H' m; case m.",
            "VernacExtend",
            "c2e49ee15d262c662e6f118b988ad7ca9c25070f"
        ],
        [
            "intros H'0; Contradict H'0; auto.",
            "VernacExtend",
            "309e0c652fca7ca41fc269e7e4c3bac2313ada79"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "apply Rlt_dichotomy_converse; right.",
            "VernacExtend",
            "b71cb1c32164d7286eac13dc977dc91ab5b13d8a"
        ],
        [
            "red in |- *; apply Rle_lt_0_plus_1.",
            "VernacExtend",
            "f0ef9f8cd7b9067f33b68b0dd5e175dcadaf3209"
        ],
        [
            "apply pos_INR.",
            "VernacExtend",
            "0d9ef3d5703b4f3e1294027dac0f940b9f78b56e"
        ],
        [
            "intros m' H'0.",
            "VernacExtend",
            "b04e091b0259eb01dda14d4afb94499040d48cba"
        ],
        [
            "rewrite (H' m'); auto.",
            "VernacExtend",
            "cf96cd31228d2d01a4062adf519b5d32b5936dd6"
        ],
        [
            "repeat rewrite S_INR in H'0.",
            "VernacExtend",
            "30652ee85175a5ccb8213d170596eb5f5d68305b"
        ],
        [
            "apply Rplus_eq_reg_l with (r := 1%R); repeat rewrite (Rplus_comm 1); auto with real.",
            "VernacExtend",
            "643164333aab339010480a36f6b7f728cf14e2f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_INR : forall x y : nat, x <= y -> (INR x <= INR y)%R.",
            "VernacStartTheoremProof",
            "cb0b75e7681fcf76d80a615fa797c9d7a2f28ab8"
        ],
        [
            "intros x y H; repeat rewrite INR_IZR_INZ.",
            "VernacExtend",
            "c86699083ec97e93aefb723378bbefe7f553c0b5"
        ],
        [
            "apply Rle_IZR; auto with zarith.",
            "VernacExtend",
            "12df029cbfdfb0f2be626c61fe01c60ca46ae90f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rle_INR: real.",
            "VernacHints",
            "34db1e1350a71a5b179ad1cd87ba008088178c45"
        ],
        [
            "Theorem le_Rle : forall n m : nat, (INR n <= INR m)%R -> n <= m.",
            "VernacStartTheoremProof",
            "19d9fab1183b2c825da7412a9f804ad1c6f5b13e"
        ],
        [
            "intros n m H'; case H'; auto.",
            "VernacExtend",
            "06e9dac5d9d26e179963b6e9dee882c7e34753f3"
        ],
        [
            "intros H'0; apply lt_le_weak; apply lt_Rlt; auto.",
            "VernacExtend",
            "dd5a13e56854765f4733399413b80f1a3365fccc"
        ],
        [
            "intros H'0; rewrite <- (INR_inv _ _ H'0); auto with arith.",
            "VernacExtend",
            "221a029b14e24ed8e246c5becc7f0022375ad1b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rmult_IZR : forall z t : Z, IZR (z * t) = (IZR z * IZR t)%R.",
            "VernacStartTheoremProof",
            "d68fe8886e4e1bfd909d89ea48c9ea556ac8412e"
        ],
        [
            "intros z t; case z; case t; simpl in |- *; auto with real; unfold IZR; intros t1 z1; repeat rewrite <- INR_IPR.",
            "VernacExtend",
            "f4bec9eb5a3deb0dc7be919be62aa6858b8956cf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nat_of_P_mult_morphism; auto with real.",
            "VernacExtend",
            "8145d193a1238f89ec4ec3838efd502a3d3e67af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nat_of_P_mult_morphism; auto with real.",
            "VernacExtend",
            "8145d193a1238f89ec4ec3838efd502a3d3e67af"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "rewrite Ropp_mult_distr_l_reverse; auto with real.",
            "VernacExtend",
            "d45415f2e4bf7a21e13ec8d1c5d47cf2aedc2dae"
        ],
        [
            "apply Ropp_eq_compat; rewrite mult_comm; auto with real.",
            "VernacExtend",
            "aace29475b8f32daf94d18db32ad01676b5e7be4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nat_of_P_mult_morphism; auto with real.",
            "VernacExtend",
            "8145d193a1238f89ec4ec3838efd502a3d3e67af"
        ],
        [
            "rewrite Ropp_mult_distr_l_reverse; auto with real.",
            "VernacExtend",
            "d45415f2e4bf7a21e13ec8d1c5d47cf2aedc2dae"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite nat_of_P_mult_morphism; auto with real.",
            "VernacExtend",
            "8145d193a1238f89ec4ec3838efd502a3d3e67af"
        ],
        [
            "rewrite Rmult_opp_opp; auto with real.",
            "VernacExtend",
            "a46995fe998e17e49fd0de41a177c67b148710b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem absolu_Zs : forall z : Z, (0 <= z)%Z -> Zabs_nat (Zsucc z) = S (Zabs_nat z).",
            "VernacStartTheoremProof",
            "660abc8418e774ae42aa0875747e4870c6c679d9"
        ],
        [
            "intros z; case z.",
            "VernacExtend",
            "39ddee3fd99c2e6c0b90c642ead8f18d768317fc"
        ],
        [
            "3: intros p H'; Contradict H'; auto with zarith.",
            "VernacExtend",
            "546ba344def656dca0d5267a7ea806ec114192cd"
        ],
        [
            "replace (Zsucc 0) with (Z_of_nat 1).",
            "VernacExtend",
            "937357faaf9e021af4f9daf0ad0027f2c26585d9"
        ],
        [
            "intros H'; rewrite absolu_INR; simpl in |- *; auto.",
            "VernacExtend",
            "a16b02687474e2baa628563fb89a2915cb32e054"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros p H'; rewrite <- Zpos_succ_morphism; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "9661b07b80af0e6e1853db556d0fe1d1bf05d8ef"
        ],
        [
            "unfold nat_of_P in |- *; rewrite Pmult_nat_succ_morphism; auto.",
            "VernacExtend",
            "66e2492b6e15017431a3837fd6728cdb73438e7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_le_succ: zarith.",
            "VernacHints",
            "5bb4e91db99efe444fbfbd84c5d0930aa67ea2af"
        ],
        [
            "Theorem Zlt_next : forall n m : Z, (n < m)%Z -> m = Zsucc n \\/ (Zsucc n < m)%Z.",
            "VernacStartTheoremProof",
            "9846e13ab83975d1c64247f04583203465fb55d4"
        ],
        [
            "intros n m H'; case (Zle_lt_or_eq (Zsucc n) m); auto with zarith.",
            "VernacExtend",
            "fac8f16a3b38251c10d50f7c2649cd3f983ecd57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_next : forall n m : Z, (n <= m)%Z -> m = n \\/ (Zsucc n <= m)%Z.",
            "VernacStartTheoremProof",
            "206265fc151c4aab87ae7f1c8ea3015d07327578"
        ],
        [
            "intros n m H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
            "VernacExtend",
            "85c98f398e053f6aeb6c5e3391e9527019cdb130"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_Zopp_Inv : forall p q : Z, (- p < - q)%Z -> (q < p)%Z.",
            "VernacStartTheoremProof",
            "a4c2fff8a57f2db2e3f9844484f6c200170497a0"
        ],
        [
            "intros x y H'; case (Zle_or_lt x y); auto with zarith.",
            "VernacExtend",
            "b1f540f8c711211bb216f2000afa448077f77d0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zopp_Inv : forall p q : Z, (- p <= - q)%Z -> (q <= p)%Z.",
            "VernacStartTheoremProof",
            "dc452eb4fe6e5bf0115e86b0987e74b79caf3f3f"
        ],
        [
            "intros p q H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
            "VernacExtend",
            "e71f205f4f749f978c7bc57d44d934918568cb31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem absolu_Zs_neg : forall z : Z, (z < 0)%Z -> S (Zabs_nat (Zsucc z)) = Zabs_nat z.",
            "VernacStartTheoremProof",
            "947bab3485596cf73cdf99cfa9762fd9d4bfb024"
        ],
        [
            "intros z H'; apply inject_nat_eq.",
            "VernacExtend",
            "eaaaf40583b79e049850a2d8a67f2eda39fff733"
        ],
        [
            "rewrite inj_S.",
            "VernacExtend",
            "d9f39a95338187eacc0449352f36ed1a3018cf13"
        ],
        [
            "repeat rewrite <- (absolu_Zopp (Zsucc z)).",
            "VernacExtend",
            "395c2d76b626df6eab94beafe51643860b436a59"
        ],
        [
            "repeat rewrite <- (absolu_Zopp z).",
            "VernacExtend",
            "9dbb4c8af286d17e64d0ebab46f195f0ad674e47"
        ],
        [
            "repeat rewrite inj_abs; replace 0%Z with (- (0))%Z; auto with zarith.",
            "VernacExtend",
            "02fa45929d8ef671e73ae09b30870e5de8de138e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_absolu : forall (x : Z) (n : nat), Zabs_nat x < n -> (x < Z_of_nat n)%Z.",
            "VernacStartTheoremProof",
            "5a89808958b8e5b6538fb1ef36f03b44c7eb66e4"
        ],
        [
            "intros x n; case x; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "c70d787956cc28317e5cfc01c961063e8f6e3ce5"
        ],
        [
            "replace 0%Z with (Z_of_nat 0); auto with zarith.",
            "VernacExtend",
            "d8cceece34173bc7060bc536df2350475d5dea76"
        ],
        [
            "intros p; rewrite <- (inject_nat_convert (Zpos p) p); auto with zarith.",
            "VernacExtend",
            "b90b7ef29980ac207e8ec9b5bf896fee9debb6bc"
        ],
        [
            "case n; simpl in |- *; intros; red in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "47dfb692c6bd4ebd6a011821611a0b4612fbe89c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inj_pred : forall n : nat, n <> 0 -> Z_of_nat (pred n) = Zpred (Z_of_nat n).",
            "VernacStartTheoremProof",
            "86061304b528014212d815cbc2d88f54900c5595"
        ],
        [
            "intros n; case n; auto.",
            "VernacExtend",
            "537f85c9b49c1144672ab16ad72ada90bb44b6fe"
        ],
        [
            "intros H'; Contradict H'; auto.",
            "VernacExtend",
            "c02b6f8c7def4d8f4b279853665f0923ffe92360"
        ],
        [
            "intros n0 H'; rewrite inj_S; rewrite <- Zpred_succ; auto.",
            "VernacExtend",
            "de9915582b96bbceef6bd42482f4110a7235ab9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_abs : forall p : Z, (p <= Z_of_nat (Zabs_nat p))%Z.",
            "VernacStartTheoremProof",
            "7ddcfbe4cea420e4d65f793369d39e370ae42176"
        ],
        [
            "intros p; case p; simpl in |- *; auto with zarith; intros q; rewrite inject_nat_convert with (p := Zpos q); auto with zarith.",
            "VernacExtend",
            "49ddc9e16eb571ea4159dd2ae082a86972efac9a"
        ],
        [
            "unfold Zle in |- *; red in |- *; intros H'2; discriminate.",
            "VernacExtend",
            "c8b90773407c691cf7a7dc27e298b6f53fa4b760"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_abs: zarith.",
            "VernacHints",
            "3e4ffaed379c3a856b0040cec61560c9c0e73173"
        ],
        [
            "Theorem ZleAbs : forall (z : Z) (n : nat), (- Z_of_nat n <= z)%Z -> (z <= Z_of_nat n)%Z -> Zabs_nat z <= n.",
            "VernacStartTheoremProof",
            "2273d114450aa2cb7fd5c2a1b22edb9e5ea64d37"
        ],
        [
            "intros z n H' H'0; case (le_or_lt (Zabs_nat z) n); auto; intros lt.",
            "VernacExtend",
            "f2125bafbffcd9dcab78cdbb29af6d7bc4187610"
        ],
        [
            "case (Zle_or_lt 0 z); intros Zle0.",
            "VernacExtend",
            "f7b69971317b7bb8b40da8970fd28c7b63960e2c"
        ],
        [
            "Contradict H'0.",
            "VernacExtend",
            "0fd20730534a0b7ed5d43e3a37dfb114d920724b"
        ],
        [
            "apply Zlt_not_le; auto.",
            "VernacExtend",
            "c47dad27e2892db222721bc09502590dbd6a4a58"
        ],
        [
            "rewrite <- (inj_abs z); auto with zarith.",
            "VernacExtend",
            "b50966160c47aa9fee5056bdf1e77c819722f7d9"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "apply Zlt_not_le; auto.",
            "VernacExtend",
            "c47dad27e2892db222721bc09502590dbd6a4a58"
        ],
        [
            "replace z with (- Z_of_nat (Zabs_nat z))%Z.",
            "VernacExtend",
            "c1d68ce4e541a122d5035b63564b8f931816fc6e"
        ],
        [
            "apply Zlt_Zopp; auto with zarith.",
            "VernacExtend",
            "4117b94759b5dcf2e83d92413e5072f3f6b5c436"
        ],
        [
            "rewrite <- absolu_Zopp.",
            "VernacExtend",
            "279c3847ddedc55ff95451d61aeba7a3a433877e"
        ],
        [
            "rewrite inj_abs; auto with zarith.",
            "VernacExtend",
            "d832d70d6f4177fa3d020760f1ccab18c59abdc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_Zlt_inv : forall n m : nat, (Z_of_nat n < Z_of_nat m)%Z -> n < m.",
            "VernacStartTheoremProof",
            "c6ff1b8dcc5b412ec147a72978eb183b570f70e8"
        ],
        [
            "intros n m H'; case (le_or_lt n m); auto.",
            "VernacExtend",
            "76c52ad3f322dc4057b87c483d615a2adf149ba3"
        ],
        [
            "intros H'0.",
            "VernacExtend",
            "e8ea833695b450eab455d302901072f04fd3096d"
        ],
        [
            "case (le_lt_or_eq _ _ H'0); auto with zarith.",
            "VernacExtend",
            "84c741c82c9996ae6882e6865e5e27cdfdf35584"
        ],
        [
            "intros H'1.",
            "VernacExtend",
            "27d12cfd315031f2731cee2bf5ecf81dd7f6b369"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "apply Zle_not_lt; auto with zarith.",
            "VernacExtend",
            "13739daa2c3c9c8e9788299bf37d232755bbfff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem NconvertO : forall p : positive, nat_of_P p <> 0.",
            "VernacStartTheoremProof",
            "1a3909348c401893142ad26116bf08446a80dd7a"
        ],
        [
            "intros p; elim p; unfold nat_of_P in |- *; simpl in |- *.",
            "VernacExtend",
            "a1bb62682b68a33139715ce794bd1656c17569c0"
        ],
        [
            "intros p0 H'; red in |- *; intros H'0; discriminate.",
            "VernacExtend",
            "d0710f3a652d3f389d379c5c115dc222acd6169c"
        ],
        [
            "intros p0; rewrite ZL6; unfold nat_of_P in |- *.",
            "VernacExtend",
            "87e473adf3b8aeced1444f2cb6eeea399083f8a9"
        ],
        [
            "case (Pmult_nat p0 1); simpl in |- *; auto.",
            "VernacExtend",
            "5d3faf3ec8230cc8c0c8248305780a030f6f7257"
        ],
        [
            "red in |- *; intros H'; discriminate.",
            "VernacExtend",
            "e49f786f26f3f0e4748894aa46257f4aef028dca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NconvertO: zarith.",
            "VernacHints",
            "760d34f11523dc6a2f3b569e403f7dd50a4cf5c2"
        ],
        [
            "Theorem absolu_lt_nz : forall z : Z, z <> 0%Z -> 0 < Zabs_nat z.",
            "VernacStartTheoremProof",
            "322abe5fe1c4b637109b1cadb872ba9a156ece5e"
        ],
        [
            "intros z; case z; simpl in |- *; auto; try (intros H'; case H'; auto; fail); intros p; generalize (NconvertO p); auto with arith.",
            "VernacExtend",
            "1dc473a148adfce739a9e0c1a3daab40aba0db0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt2 : (0 < INR 2)%R.",
            "VernacStartTheoremProof",
            "159d90f9bf20f8bb0eb16746dc7a7cd95feb7f06"
        ],
        [
            "replace 0%R with (INR 0); auto with real arith.",
            "VernacExtend",
            "3caed965951659080cf394dcb353db3f9bd924fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt2: real.",
            "VernacHints",
            "a6730b371b5a61adaff3b2475d02b5fc552ec662"
        ],
        [
            "Theorem RlIt2 : (0 < / INR 2)%R.",
            "VernacStartTheoremProof",
            "c8c7715d0b10eebd72f2a9e51c018cca5e6dfaa8"
        ],
        [
            "apply Rmult_lt_reg_l with (r := INR 2); auto with real.",
            "VernacExtend",
            "e6068c3455f72923d4dd8215e4d995afea848997"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve RlIt2: real.",
            "VernacHints",
            "782253c27c6032fadd94f9ecb470c1c7296968cf"
        ],
        [
            "Theorem Rledouble : forall r : R, (0 <= r)%R -> (r <= INR 2 * r)%R.",
            "VernacStartTheoremProof",
            "39068c77b87f9cbf3e588eb27b0ed5576123ab5b"
        ],
        [
            "intros r H'.",
            "VernacExtend",
            "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
        ],
        [
            "replace (INR 2 * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "f8abfd802b320a882188040008a439a2f1d4186e"
        ],
        [
            "pattern r at 1 in |- *; replace r with (r + 0)%R; [ idtac | ring ].",
            "VernacExtend",
            "8e2cbe71fcc5f84078754219d8dbe4bd377f8d46"
        ],
        [
            "apply Rplus_le_compat_l; auto.",
            "VernacExtend",
            "c2eec9db2c78c63da9222314c100e00c5759159c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rltdouble : forall r : R, (0 < r)%R -> (r < INR 2 * r)%R.",
            "VernacStartTheoremProof",
            "1acc8fe5d73ccedd283efe13c51b92963450471b"
        ],
        [
            "intros r H'.",
            "VernacExtend",
            "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
        ],
        [
            "pattern r at 1 in |- *; replace r with (r + 0)%R; try ring.",
            "VernacExtend",
            "9ac95ac0e19b24ba659245c3174181451f3d2510"
        ],
        [
            "replace (INR 2 * r)%R with (r + r)%R; simpl in |- *; try ring; auto with real.",
            "VernacExtend",
            "a67abc2e8fad2f31b37dcce6cf5b97807c49b695"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_RinvDouble : forall r : R, (0 < r)%R -> (/ INR 2 * r < r)%R.",
            "VernacStartTheoremProof",
            "cd15bfa0386be3d1a266cad4d9c6891fb6e149fa"
        ],
        [
            "intros r H'.",
            "VernacExtend",
            "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
        ],
        [
            "apply Rmult_lt_reg_l with (r := INR 2); auto with real.",
            "VernacExtend",
            "e6068c3455f72923d4dd8215e4d995afea848997"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite Rinv_r.",
            "VernacExtend",
            "d7bbeef31f7b8b397a05d883a8c55ba90a522740"
        ],
        [
            "apply Rmult_lt_compat_r; replace 1%R with (INR 1); auto with real arith.",
            "VernacExtend",
            "8843d81279b04b26e70d1d7677b863e9b85737fe"
        ],
        [
            "replace 0%R with (INR 0); auto with real arith.",
            "VernacExtend",
            "3caed965951659080cf394dcb353db3f9bd924fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rledouble: real.",
            "VernacHints",
            "fcf772ec9633ae1afdf4af93b85ad4746d04b0a6"
        ],
        [
            "Theorem Rle_Rinv : forall x y : R, (0 < x)%R -> (x <= y)%R -> (/ y <= / x)%R.",
            "VernacStartTheoremProof",
            "1d70bb88fa840839c91404846f38f24b762b9b0a"
        ],
        [
            "intros x y H H1; case H1; intros H2.",
            "VernacExtend",
            "218d6cc4da4871053bb3f0e6480fdfdb8997feea"
        ],
        [
            "left; apply Rinv_lt_contravar; auto.",
            "VernacExtend",
            "1316db5840ad7e0eaeb2db6b18cfac0bcc30bc1d"
        ],
        [
            "apply Rmult_lt_0_compat; auto.",
            "VernacExtend",
            "33612f92e970c7d28a81ee13ef74ef793e1b8b18"
        ],
        [
            "apply Rlt_trans with (2 := H2); auto.",
            "VernacExtend",
            "dd53b142e073f17019a44a4e7063f14f186fa025"
        ],
        [
            "rewrite H2; auto with real.",
            "VernacExtend",
            "d19069c82416ef4e41d27b5ce98e0dfa19b6fd15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Int_part_INR : forall n : nat, Int_part (INR n) = Z_of_nat n.",
            "VernacStartTheoremProof",
            "b1038dd6377fba98619dc10062b6fa1a7b7bf9ae"
        ],
        [
            "intros n; unfold Int_part in |- *.",
            "VernacExtend",
            "01480fe10aede3b60f0084182288ff47d5b221ec"
        ],
        [
            "cut (up (INR n) = (Z_of_nat n + Z_of_nat 1)%Z).",
            "VernacExtend",
            "38811c70112447cc0c53fea3627edbbeb371dd43"
        ],
        [
            "intros H'; rewrite H'; simpl in |- *; ring.",
            "VernacExtend",
            "eeb2b11a7d691d80f1636ce425acf5b7399b41e4"
        ],
        [
            "apply sym_equal; apply tech_up; auto.",
            "VernacExtend",
            "6916b0b718c2e490bf271d19078722ffc0aa9556"
        ],
        [
            "replace (Z_of_nat n + Z_of_nat 1)%Z with (Z_of_nat (S n)).",
            "VernacExtend",
            "8933ea9cafb95dde4704829a06cdfbcbfd9ac882"
        ],
        [
            "repeat rewrite <- INR_IZR_INZ.",
            "VernacExtend",
            "65f3730d40f55bb6eb685811738f2e88821504c5"
        ],
        [
            "apply INR_lt_nm; auto.",
            "VernacExtend",
            "5fa01c1e650758474cae7689fcf2b4552a972afe"
        ],
        [
            "rewrite Zplus_comm; rewrite <- inj_plus; simpl in |- *; auto.",
            "VernacExtend",
            "641878754fc07981650edcc7e85c530a6d4ae49a"
        ],
        [
            "rewrite plus_IZR; simpl in |- *; auto with real.",
            "VernacExtend",
            "e97cf280b5c2e8a936eaa14aaeddbe3cd03b642c"
        ],
        [
            "repeat rewrite <- INR_IZR_INZ; auto with real.",
            "VernacExtend",
            "710c80cf57d0d2ed72de6dd4a20afb0b289889ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Int_part_IZR : forall z : Z, Int_part (IZR z) = z.",
            "VernacStartTheoremProof",
            "31229a42c2f8eed078bf59ad3d1bf580a61c3e5a"
        ],
        [
            "intros z; unfold Int_part in |- *.",
            "VernacExtend",
            "cbcd0868b4d16e6186cc6c8d4c08d1222c739bfe"
        ],
        [
            "cut (up (IZR z) = (z + 1)%Z).",
            "VernacExtend",
            "00f369380bab544c2e2ff86b1467f0a5e62c64b1"
        ],
        [
            "intros Z1; rewrite Z1; rewrite Zplus_comm; apply Zminus_plus; auto with zarith.",
            "VernacExtend",
            "84820cd2215995b73f85465d6ec967e294c16472"
        ],
        [
            "apply sym_equal; apply tech_up; simpl in |- *; auto with real zarith.",
            "VernacExtend",
            "8667cc370a338758f6ac957e519568a0ea35436e"
        ],
        [
            "replace (IZR z) with (IZR z + IZR 0)%R; try rewrite plus_IZR; auto with real zarith.",
            "VernacExtend",
            "870752e85f0eb31bd3a10979b6ed645c182cb641"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_Rlt : forall z1 z2 : Z, (IZR z1 < IZR z2)%R -> (z1 < z2)%Z.",
            "VernacStartTheoremProof",
            "b074ddef18c2489e44c33ad6b0f3dce25a1fdb7e"
        ],
        [
            "intros z1 z2 H; case (Zle_or_lt z2 z1); auto.",
            "VernacExtend",
            "246cac31f0ee8424090dc48c255b806d8e9ce12a"
        ],
        [
            "intros H1; Contradict H; auto with real zarith.",
            "VernacExtend",
            "c12ba2b6dc998a5a347b0b7a14cfba78baf5c426"
        ],
        [
            "apply Rle_not_lt; auto with real zarith.",
            "VernacExtend",
            "649320f80e01db1cba1723bc252bb9c1ffb49c54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Rle : forall z1 z2 : Z, (IZR z1 <= IZR z2)%R -> (z1 <= z2)%Z.",
            "VernacStartTheoremProof",
            "f9141f27bc55e7ed19d7da47f7942b11284f8ad0"
        ],
        [
            "intros z1 z2 H; case (Zle_or_lt z1 z2); auto.",
            "VernacExtend",
            "32c6ae40b42ca67c96cafc46f7a58ef4cc84e92a"
        ],
        [
            "intros H1; Contradict H; auto with real zarith.",
            "VernacExtend",
            "c12ba2b6dc998a5a347b0b7a14cfba78baf5c426"
        ],
        [
            "apply Rlt_not_le; auto with real zarith.",
            "VernacExtend",
            "0110b080a397efe0ef30ff588ec52e52f5176c39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem IZR_inv : forall z1 z2 : Z, IZR z1 = IZR z2 :>R -> z1 = z2.",
            "VernacStartTheoremProof",
            "1fd83fb4b6d667540d13ca09c2e70b37f8e761a4"
        ],
        [
            "intros z1 z2 H; apply Zle_antisym; apply Zle_Rle; rewrite H; auto with real.",
            "VernacExtend",
            "168d459491648ebcb6fc76072405c03913795177"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_eq_opp : forall x, (x <= 0)%Z -> Zabs x = (- x)%Z.",
            "VernacStartTheoremProof",
            "7750307f95397877c3aff9624d1a70f1139fea26"
        ],
        [
            "intros x; case x; simpl in |- *; auto.",
            "VernacExtend",
            "50089fbf1a2c71d8dd0d9f5a9ae6565c4e941619"
        ],
        [
            "intros p H; Contradict H; auto with zarith.",
            "VernacExtend",
            "190e6d65fb31a4e5d2ec9db566ee03f15d7ed0f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_Zs : forall z : Z, (Zabs (Zsucc z) <= Zsucc (Zabs z))%Z.",
            "VernacStartTheoremProof",
            "8e7ea43694c9c70a2b9e09413c0d6250d077cb02"
        ],
        [
            "intros z; case z; auto.",
            "VernacExtend",
            "837dcebfe8ca7b023fc1a61ebeb6fb098252bc1d"
        ],
        [
            "simpl in |- *; auto with zarith.",
            "VernacExtend",
            "61d3cdc6299cf8abf87703c074ca4503f0f27a12"
        ],
        [
            "repeat rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "ce6af9c9e2dbbf5e96aba4104d03a58482acdd03"
        ],
        [
            "intros p; rewrite Zabs_eq_opp; auto with zarith.",
            "VernacExtend",
            "9829fbefc577be4860dd6c1ab81342ccc8b34858"
        ],
        [
            "2: unfold Zsucc in |- *; replace 0%Z with (-1 + 1)%Z; auto with zarith.",
            "VernacExtend",
            "b9068de098730822e2fae5c046a9c51d12f356ff"
        ],
        [
            "2: case p; simpl in |- *; intros; red in |- *; simpl in |- *; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "f8741e1f244df517d57d4b729292435e1f603a65"
        ],
        [
            "replace (- Zsucc (Zneg p))%Z with (Zpos p - 1)%Z.",
            "VernacExtend",
            "c930288dc01d21e26baaf21bdd968fa0c1eed625"
        ],
        [
            "replace (Zsucc (Zabs (Zneg p))) with (Zpos p + 1)%Z; auto with zarith.",
            "VernacExtend",
            "4216e0901f404ad69a2f108280c7a0328b7bc7ea"
        ],
        [
            "unfold Zsucc in |- *; rewrite Zopp_plus_distr.",
            "VernacExtend",
            "92f45c50101424cd8f8edcb92cc3eb5b292bb7be"
        ],
        [
            "auto with zarith.",
            "VernacExtend",
            "23f42fd3236dcece4a40b3a666dce57fea69a9c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zabs_Zs: zarith.",
            "VernacHints",
            "d2e9c711c20edb043d94616d593d7b74afc52633"
        ],
        [
            "Theorem Zle_Zpred : forall x y : Z, (x < y)%Z -> (x <= Zpred y)%Z.",
            "VernacStartTheoremProof",
            "4229d578ef90a433b339003837fb5017224c136a"
        ],
        [
            "intros x y H; apply Zlt_succ_le.",
            "VernacExtend",
            "aab049a5a308a2e1e5eafd147847c746995195c0"
        ],
        [
            "rewrite <- Zsucc_pred; auto.",
            "VernacExtend",
            "842c98ebefb1c1ae4577099612443e9a0101f807"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zpred: zarith.",
            "VernacHints",
            "0a2852b979a3e70879f1679b5f0c62a16ca640fb"
        ],
        [
            "Theorem Zabs_Zopp : forall z : Z, Zabs (- z) = Zabs z.",
            "VernacStartTheoremProof",
            "cc48995e5f8be3e9f5783511f7c6ee9173da6a8b"
        ],
        [
            "intros z; case z; simpl in |- *; auto.",
            "VernacExtend",
            "738ac452bf9362b9b002c8e045c7273b16cd603a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zabs : forall z : Z, (z <= Zabs z)%Z.",
            "VernacStartTheoremProof",
            "b7f564869cfbade7176a7e7b72ffa21256de5b6c"
        ],
        [
            "intros z; case z; simpl in |- *; red in |- *; simpl in |- *; auto; try (red in |- *; intros; discriminate; fail).",
            "VernacExtend",
            "a408bd1e80cc4868b083aa7d7f4d33e7945ebe2e"
        ],
        [
            "intros p; elim p; simpl in |- *; auto; try (red in |- *; intros; discriminate; fail).",
            "VernacExtend",
            "18c5ea4dbd3262299326cc258bda076dd8a1f562"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zabs: zarith.",
            "VernacHints",
            "bb2740ce476e07b258b5c14dd6923b858a97a979"
        ],
        [
            "Theorem Zlt_mult_simpl_l : forall a b c : Z, (0 < c)%Z -> (c * a < c * b)%Z -> (a < b)%Z.",
            "VernacStartTheoremProof",
            "4ba4d5bd7e63fe65374cac060fa356f63b1c9af8"
        ],
        [
            "intros a b0 c H H0; apply Zgt_lt.",
            "VernacExtend",
            "cecb4e49fc2f876ddb9af8986fcd5186a63fda26"
        ],
        [
            "apply Zmult_gt_reg_r with (p := c); try apply Zlt_gt; auto with zarith.",
            "VernacExtend",
            "72f1d7852cf03292af2a16a91fba13b38b9dc641"
        ],
        [
            "repeat rewrite (fun x => Zmult_comm x c); auto with zarith.",
            "VernacExtend",
            "8f505a8aa73a2d486ed71fc20ed1e28948a3ba6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint pos_eq_bool (a b : positive) {struct b} : bool := match a, b with | xH, xH => true | xI a', xI b' => pos_eq_bool a' b' | xO a', xO b' => pos_eq_bool a' b' | _, _ => false end.",
            "VernacFixpoint",
            "42a5a51d62e79ca2a3de4828897b27fccbefb90b"
        ],
        [
            "Theorem pos_eq_bool_correct : forall p q : positive, match pos_eq_bool p q with | true => p = q | false => p <> q end.",
            "VernacStartTheoremProof",
            "97e67dda45f2f21f889521c71669231577d2e67b"
        ],
        [
            "intros p q; generalize p; elim q; simpl in |- *; auto; clear p q.",
            "VernacExtend",
            "231afab7520d92eba568ef806d8ec31a22174249"
        ],
        [
            "intros p Rec q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail).",
            "VernacExtend",
            "3e3a62520812c745cce5732de4034aa35ac7b014"
        ],
        [
            "intros q'; generalize (Rec q'); case (pos_eq_bool q' p); simpl in |- *; auto.",
            "VernacExtend",
            "f7acaee34c416d8e87b59f381e87a5b66b6328d7"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "intros H1; Contradict H1; injection H1; auto.",
            "VernacExtend",
            "c510d2ffd6716625754242ce02702b1691e24d9d"
        ],
        [
            "intros p Rec q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail).",
            "VernacExtend",
            "3e3a62520812c745cce5732de4034aa35ac7b014"
        ],
        [
            "intros q'; generalize (Rec q'); case (pos_eq_bool q' p); simpl in |- *; auto.",
            "VernacExtend",
            "f7acaee34c416d8e87b59f381e87a5b66b6328d7"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "intros H1; Contradict H1; injection H1; auto.",
            "VernacExtend",
            "c510d2ffd6716625754242ce02702b1691e24d9d"
        ],
        [
            "intros q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail); auto.",
            "VernacExtend",
            "2e48f42f4bc65ecb28bac44b9d4b0823719fd733"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Z_O_1 : (0 < 1)%Z.",
            "VernacStartTheoremProof",
            "63538afea552051eb4f889decbc7f9c73056621a"
        ],
        [
            "red in |- *; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "0c029ea2114f1526b4f0bfb5307eb303ec5c6fbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Z_O_1: zarith.",
            "VernacHints",
            "a540a3a870f9b7caa7da78b82be4a90ba9867790"
        ],
        [
            "Definition Z_eq_bool a b := match a, b with | Z0, Z0 => true | Zpos a', Zpos b' => pos_eq_bool a' b' | Zneg a', Zneg b' => pos_eq_bool a' b' | _, _ => false end.",
            "VernacDefinition",
            "9a5d2f781cdcfc3bb77f9f642042e0336bcd9001"
        ],
        [
            "Theorem Z_eq_bool_correct : forall p q : Z, match Z_eq_bool p q with | true => p = q | false => p <> q end.",
            "VernacStartTheoremProof",
            "a601b0dc26f5ae584a940cf2caf905e4bcce5795"
        ],
        [
            "intros p q; case p; case q; simpl in |- *; auto; try (intros; red in |- *; intros; discriminate; fail).",
            "VernacExtend",
            "818dbcc4adfa743e40e9bab405d01c63ea3b47ae"
        ],
        [
            "intros p' q'; generalize (pos_eq_bool_correct q' p'); case (pos_eq_bool q' p'); simpl in |- *; auto.",
            "VernacExtend",
            "f2908860dd3b54a685c05dcf2a1d1393e643480a"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "intros H1; Contradict H1; injection H1; auto.",
            "VernacExtend",
            "c510d2ffd6716625754242ce02702b1691e24d9d"
        ],
        [
            "intros p' q'; generalize (pos_eq_bool_correct q' p'); case (pos_eq_bool q' p'); simpl in |- *; auto.",
            "VernacExtend",
            "f2908860dd3b54a685c05dcf2a1d1393e643480a"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "intros H1; Contradict H1; injection H1; auto.",
            "VernacExtend",
            "c510d2ffd6716625754242ce02702b1691e24d9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_mult_ZERO : forall x y : Z, (0 < x)%Z -> (0 < y)%Z -> (0 < x * y)%Z.",
            "VernacStartTheoremProof",
            "c8c22aea693a8cc9463806ccac2be35469f6a401"
        ],
        [
            "intros x y; case x; case y; unfold Zlt in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "d6b0d1877813893e2c1ede7c2814c2bc8a70ead2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_mult_ZERO: zarith.",
            "VernacHints",
            "ee4d90cb41ef2dcc5976e7b47440035fa3b28ba3"
        ],
        [
            "Theorem Zlt_Zminus_ZERO : forall z1 z2 : Z, (z2 < z1)%Z -> (0 < z1 - z2)%Z.",
            "VernacStartTheoremProof",
            "9b3ddaf69702fef2626a4a4cbb96ac30b374285b"
        ],
        [
            "intros z1 z2; rewrite (Zminus_diag_reverse z2); auto with zarith.",
            "VernacExtend",
            "7734b1c9cec22d6bbfee1f22993a3d16e2ca273d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zminus_ZERO : forall z1 z2 : Z, (z2 <= z1)%Z -> (0 <= z1 - z2)%Z.",
            "VernacStartTheoremProof",
            "f727aa6f62dd9ff357ec5d36d22158f4694a750a"
        ],
        [
            "intros z1 z2; rewrite (Zminus_diag_reverse z2); auto with zarith.",
            "VernacExtend",
            "7734b1c9cec22d6bbfee1f22993a3d16e2ca273d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zminus_ZERO Zlt_Zminus_ZERO: zarith.",
            "VernacHints",
            "5dbea631b826c24b15e6a514ca6163c94b6249f2"
        ],
        [
            "Theorem Zle_Zpred_Zpred : forall z1 z2 : Z, (z1 <= z2)%Z -> (Zpred z1 <= Zpred z2)%Z.",
            "VernacStartTheoremProof",
            "6b1300b0311848eb0706cb2ba999b492404c0653"
        ],
        [
            "intros z1 z2 H; apply Zsucc_le_reg.",
            "VernacExtend",
            "cddc5afdc7a0551335c1208ceb9e01ed8b02a176"
        ],
        [
            "repeat rewrite <- Zsucc_pred; auto.",
            "VernacExtend",
            "f60c60dc658e2f30b236bf972332c47aa739ae2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zpred_Zpred: zarith.",
            "VernacHints",
            "e5f8bcc653594032c9fa9b3d9a2f662741085082"
        ],
        [
            "Theorem Zle_ZERO_Zabs : forall z : Z, (0 <= Zabs z)%Z.",
            "VernacStartTheoremProof",
            "bd9e7ad741486b7f009ac4a52285a0e63d8f03fd"
        ],
        [
            "intros z; case z; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "6105546958faee2b3d0396125c1cb88d37b07c55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_ZERO_Zabs: zarith.",
            "VernacHints",
            "ceec8514ab9b54ac5f5dd5d379e859051ab77d7e"
        ],
        [
            "Theorem Zlt_Zabs_inv1 : forall z1 z2 : Z, (Zabs z1 < z2)%Z -> (- z2 < z1)%Z.",
            "VernacStartTheoremProof",
            "af7d0efa3ce03cbcc8e8711f9cc124fb9c78c20c"
        ],
        [
            "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
            "VernacExtend",
            "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
        ],
        [
            "apply Zlt_le_trans with (- (0))%Z; auto with zarith.",
            "VernacExtend",
            "8e0361723e864b3c9274cfa86d0581e74b3e3c98"
        ],
        [
            "apply Zlt_Zopp; apply Zle_lt_trans with (2 := H); auto with zarith.",
            "VernacExtend",
            "5029be68730d6bcecb92704e657647ef58941fc1"
        ],
        [
            "rewrite <- (Zopp_involutive z1); rewrite <- (Zabs_eq_opp z1); auto with zarith.",
            "VernacExtend",
            "296f921589fddb1adbc931b7cd1d4e45e3a0629e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_Zabs_inv2 : forall z1 z2 : Z, (Zabs z1 < Zabs z2)%Z -> (z1 < Zabs z2)%Z.",
            "VernacStartTheoremProof",
            "dad69f00cead324859169f685674daa931674235"
        ],
        [
            "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zabs_inv1 : forall z1 z2 : Z, (Zabs z1 <= z2)%Z -> (- z2 <= z1)%Z.",
            "VernacStartTheoremProof",
            "b2caa3373599feba22e517c831bfb04cf5044f0a"
        ],
        [
            "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
            "VernacExtend",
            "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
        ],
        [
            "apply Zle_trans with (- (0))%Z; auto with zarith.",
            "VernacExtend",
            "a31ffa08cf78a0b8e230c3d25b3d16528cc44041"
        ],
        [
            "apply Zle_Zopp; apply Zle_trans with (2 := H); auto with zarith.",
            "VernacExtend",
            "c56adebfec8099804be1289d486cb173c994898a"
        ],
        [
            "rewrite <- (Zopp_involutive z1); rewrite <- (Zabs_eq_opp z1); auto with zarith.",
            "VernacExtend",
            "296f921589fddb1adbc931b7cd1d4e45e3a0629e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_Zabs_inv2 : forall z1 z2 : Z, (Zabs z1 <= z2)%Z -> (z1 <= z2)%Z.",
            "VernacStartTheoremProof",
            "93fad06acd437586c9b8699a47e81643932c67fa"
        ],
        [
            "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
            "VernacExtend",
            "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
        ],
        [
            "rewrite <- (Zabs_eq z1); auto.",
            "VernacExtend",
            "26af6f49b81cf80e1da356b2cda776f9a87a0ef1"
        ],
        [
            "apply Zle_trans with (Zabs z1); auto with zarith.",
            "VernacExtend",
            "5bca9dbc419727b473ae4224fbc546d59b2c4d0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_Zabs_Zpred : forall z1 z2 : Z, (Zabs z1 < z2)%Z -> z1 <> Zpred z2 -> (Zabs (Zsucc z1) < z2)%Z.",
            "VernacStartTheoremProof",
            "3a0aa48b52f18bbbeeafc8ddce1c270ab82ff0ca"
        ],
        [
            "intros z1 z2 H H0; case (Zle_or_lt 0 z1); intros H1.",
            "VernacExtend",
            "bb591b689c7e18433eb78ec4cdbda372988f05cf"
        ],
        [
            "rewrite Zabs_eq; auto with zarith.",
            "VernacExtend",
            "e3b6647506c6d43441146989691d7c27f1722b7e"
        ],
        [
            "rewrite Zabs_eq in H; auto with zarith.",
            "VernacExtend",
            "93e83bd06d8809a354ca65794cc5870f23bb9e85"
        ],
        [
            "apply Zlt_trans with (2 := H).",
            "VernacExtend",
            "fe4e334386e5096bbad64309e8b41fa83aa17c71"
        ],
        [
            "repeat rewrite Zabs_eq_opp; auto with zarith.",
            "VernacExtend",
            "10a25b2896598a806019edb32340d86af1662493"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zle_n_Zpred : forall z1 z2 : Z, (Zpred z1 <= Zpred z2)%Z -> (z1 <= z2)%Z.",
            "VernacStartTheoremProof",
            "e1dbff3a5cadf78a0e552419bed07556121c1f69"
        ],
        [
            "intros z1 z2 H; rewrite (Zsucc_pred z1); rewrite (Zsucc_pred z2); auto with zarith.",
            "VernacExtend",
            "fcd46f756482fb05926113edd37843d4b55bf451"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zpred_Zopp_Zs : forall z : Z, Zpred (- z) = (- Zsucc z)%Z.",
            "VernacStartTheoremProof",
            "1a018efa037782eb6babdba851f9e840c9da419e"
        ],
        [
            "intros z; unfold Zpred, Zsucc in |- *; ring.",
            "VernacExtend",
            "1e0fc0dba4c22b4e2d03997c1e475ac7afcba7e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_1_O : forall z : Z, (1 <= z)%Z -> (0 < z)%Z.",
            "VernacStartTheoremProof",
            "dbf41e90fa3d222f8675a73cd22734cfe497b260"
        ],
        [
            "intros z H; apply Zsucc_lt_reg; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "13b568d216953ba931db48ae348308657141784a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_succ Zsucc_lt_compat Zle_lt_succ: zarith.",
            "VernacHints",
            "90dd07bb079a1fd24b2427875bf90e98e7dc2b80"
        ],
        [
            "Theorem Zlt_not_eq : forall p q : Z, (p < q)%Z -> p <> q.",
            "VernacStartTheoremProof",
            "043d5ba6b9edf84e68d0b5ad301f26a635b6bab9"
        ],
        [
            "intros p q H; Contradict H; rewrite H; auto with zarith.",
            "VernacExtend",
            "05951237a1baa77b2ff379660b6a64cff29e5197"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_not_eq_rev : forall p q : Z, (q < p)%Z -> p <> q.",
            "VernacStartTheoremProof",
            "98684fdb64b6bd1d6d62b8d0a48a3e0d210c6409"
        ],
        [
            "intros p q H; Contradict H; rewrite H; auto with zarith.",
            "VernacExtend",
            "05951237a1baa77b2ff379660b6a64cff29e5197"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_not_eq Zlt_not_eq_rev: zarith.",
            "VernacHints",
            "57948fe468fa5deb7e6bc5bda10ed7f0e6613223"
        ],
        [
            "Theorem Zle_Zpred_Zlt : forall z1 z2 : Z, (z1 <= z2)%Z -> (Zpred z1 < z2)%Z.",
            "VernacStartTheoremProof",
            "f1d836ef90554e055d1070e6c0a943def83436eb"
        ],
        [
            "intros z1 z2 H; apply Zsucc_lt_reg; rewrite <- Zsucc_pred; auto with zarith.",
            "VernacExtend",
            "8f93269f3d47f901076d404d5341e3b1ade2cb72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zle_Zpred_Zlt: zarith.",
            "VernacHints",
            "b5f8851a512812f18caa68bcdfcf124fefeca4ed"
        ],
        [
            "Theorem Zle_Zpred_inv : forall z1 z2 : Z, (z1 <= Zpred z2)%Z -> (z1 < z2)%Z.",
            "VernacStartTheoremProof",
            "f5de704721ff54e4487ddc166865a0377acdfdab"
        ],
        [
            "intros z1 z2 H; rewrite (Zsucc_pred z2); auto with zarith.",
            "VernacExtend",
            "7253ad7259b74811af5cb8cf558e3d06a253b3b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zabs_intro : forall (P : Z -> Prop) (z : Z), P (- z)%Z -> P z -> P (Zabs z).",
            "VernacStartTheoremProof",
            "29723f13f81ac7764ede3d55190481f2ca57e225"
        ],
        [
            "intros P z; case z; simpl in |- *; auto.",
            "VernacExtend",
            "74c7855dccbab72f6c8bcfc7b6fcce7c83ef34e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zpred_Zle_Zabs_intro : forall z1 z2 : Z, (- Zpred z2 <= z1)%Z -> (z1 <= Zpred z2)%Z -> (Zabs z1 < z2)%Z.",
            "VernacStartTheoremProof",
            "4db2178e8b61d97a9a6c44138cd9293e14c2fc93"
        ],
        [
            "intros z1 z2 H H0; apply Zle_Zpred_inv.",
            "VernacExtend",
            "d6b53b8cf0e50e334bfb7f250d90c2053d782d2a"
        ],
        [
            "apply Zabs_intro with (P := fun x => (x <= Zpred z2)%Z); auto with zarith.",
            "VernacExtend",
            "d9261a29a0c9029ae5606941d7e91103127f7c09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Zlt_ZERO_Zle_ONE : forall z : Z, (0 < z)%Z -> (1 <= z)%Z.",
            "VernacStartTheoremProof",
            "d8046f1dba7ff7ef3c8d640f664ded87b6a38d77"
        ],
        [
            "intros z H; replace 1%Z with (Zsucc 0); auto with zarith; simpl in |- *; auto.",
            "VernacExtend",
            "3029e211dc40133c6009040f4828068f2f17ac9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Zlt_ZERO_Zle_ONE: zarith.",
            "VernacHints",
            "fbf50b82c12f350ffe20b73d86e0a1ed67923d17"
        ],
        [
            "Theorem ptonat_def1 : forall p q, 1 < Pmult_nat p (S (S q)).",
            "VernacStartTheoremProof",
            "20ce25e28358d685b32b37cde3dde89125867771"
        ],
        [
            "intros p; elim p; simpl in |- *; auto with arith.",
            "VernacExtend",
            "5d26b3eda100a978683e4fe4c3388c6351b98744"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve ptonat_def1: arith.",
            "VernacHints",
            "060a5f3341e4a241c76fc8e3f44a257957ac928b"
        ],
        [
            "Theorem lt_S_le : forall p q, p < q -> S p <= q.",
            "VernacStartTheoremProof",
            "a36a60503c44db4880f3c6f1a3c53badcee52344"
        ],
        [
            "intros p q; unfold lt in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "81036a0e1f03ad383b048292cf5c9661fba2cb45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_S_le: arith.",
            "VernacHints",
            "d8c57da48545ec7d826cffcb556f4414d626fa23"
        ],
        [
            "Theorem Zlt_Zabs_intro : forall z1 z2 : Z, (- z2 < z1)%Z -> (z1 < z2)%Z -> (Zabs z1 < z2)%Z.",
            "VernacStartTheoremProof",
            "1392c56dc9215c7d9d6169716b1e3d9928b61115"
        ],
        [
            "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
            "VernacExtend",
            "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
        ],
        [
            "intros p p0 H H0; change (- Zneg p0 < - Zneg p)%Z in |- *; auto with zarith.",
            "VernacExtend",
            "835d93925d97854309c3544df3ee76876ff361f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "minus_minus",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros a b H'.",
                        "VernacExtend",
                        "bd160d2246ab14528cfcf9da0463f63a88c538ea"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal.",
                        "VernacExtend",
                        "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
                    ]
                },
                {
                    "command": [
                        "apply plus_minus; auto.",
                        "VernacExtend",
                        "c3a2a7beada38a74c8e6b0a314d7cf3f324cae19"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; apply le_plus_minus; auto.",
                        "VernacExtend",
                        "d40810247e279531af13db3b9bb3bb7add7d9628"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lte_comp_mult",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros p q r t H'; elim H'; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "7a7d3e1cdca4a8deb0b85a826b47acaaf5ed7b91"
                    ]
                },
                {
                    "command": [
                        "elim p; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "558e5e629d6922667086a9702cd1608088517550"
                    ]
                },
                {
                    "command": [
                        "intros n H m H0 H1 H2; apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "21f138e736bb4341dec18206a687e624a75c008e"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m := r + n * r); auto with arith.",
                        "VernacExtend",
                        "2da0fd67a9a37d8e9cc88a0fa03c29d6cd98e2da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_refl_eq",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros n m H'; rewrite H'; auto.",
                        "VernacExtend",
                        "5a8cd6e2720261c0f41a570b3bf7f1131c767856"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_le_pred",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros n m H'; inversion H'; simpl in |- *; auto.",
                        "VernacExtend",
                        "5e9a456ab128c6ffbd36c78da34da87c3edaeaec"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S n); auto.",
                        "VernacExtend",
                        "1275cec9415ff450298668757d91a97f90dcd2d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_comp_mult_l",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; simpl in |- *.",
                        "VernacExtend",
                        "c425d69fdb403e88873ebd1605221276552e6fac"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros n0; case n0.",
                        "VernacExtend",
                        "e8893eb764401ebc2c9b15af9a1f93373b730591"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "intros n1 H' q r H'0 H'1.",
                        "VernacExtend",
                        "8a43cb8743f154f2f82e8085f08b19a5e7b623f4"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (m := q + S n1 * r); auto with arith.",
                        "VernacExtend",
                        "e761a634a08883499b7d2df31dabd45767f74906"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_comp_mult_r",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros; repeat rewrite (fun x : nat => mult_comm x p); auto with arith.",
                        "VernacExtend",
                        "3a925fda57d4a5ae590f9ab3ee5f50156bf30930"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_comp_mult",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros p q r s; case q.",
                        "VernacExtend",
                        "797fc5847fb7dbf8ab0023c50f67cd1e3c889e60"
                    ]
                },
                {
                    "command": [
                        "intros H'; inversion H'.",
                        "VernacExtend",
                        "9b439a3c4be331042656603beeee7a6d06f41f23"
                    ]
                },
                {
                    "command": [
                        "intros q'; case p.",
                        "VernacExtend",
                        "28808023c9a5bb78a631eae37a5066de2d65d68b"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; simpl in |- *; apply le_lt_trans with (m := r); auto with arith.",
                        "VernacExtend",
                        "ff8a6e0b9d535fc3b7221d0ba77d3cea801c12ff"
                    ]
                },
                {
                    "command": [
                        "intros p' H' H'0; apply le_lt_trans with (m := S q' * r); auto with arith.",
                        "VernacExtend",
                        "454a1682a2d8d38aed1a5d00a901a9926b3fc861"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_eq_inv",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros n m p H' H'0.",
                        "VernacExtend",
                        "3449bf2df5d2e6795825a300774965cb19abaac7"
                    ]
                },
                {
                    "command": [
                        "apply le_antisym; auto.",
                        "VernacExtend",
                        "2bfc9581a46fa62c02649669186ffbd817111ce7"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt m p); intros H'1; auto with arith.",
                        "VernacExtend",
                        "eb270d40695070aba4843592aaf302bbe844cc57"
                    ]
                },
                {
                    "command": [
                        "absurd (n * p < n * m); auto with arith.",
                        "VernacExtend",
                        "8e705c09cc8fc474be3f57db786c09a3fc0bb415"
                    ]
                },
                {
                    "command": [
                        "rewrite H'0; auto with arith.",
                        "VernacExtend",
                        "a7092d0fcc7f35f013bcc3a89074dfbc00bd460a"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt p m); intros H'1; auto with arith.",
                        "VernacExtend",
                        "92e34ddaa3bba228d36039b950656e03c9dffa40"
                    ]
                },
                {
                    "command": [
                        "absurd (n * m < n * p); auto with arith.",
                        "VernacExtend",
                        "2ffb06173dd30d5ac840d5a9f3fdf92a75bc7c74"
                    ]
                },
                {
                    "command": [
                        "rewrite H'0; auto with arith.",
                        "VernacExtend",
                        "a7092d0fcc7f35f013bcc3a89074dfbc00bd460a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natEq",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros n; elim n.",
                        "VernacExtend",
                        "30dd1f6e67d22ae560cfabc166aaa1026bf6f0d3"
                    ]
                },
                {
                    "command": [
                        "intros m; case m; auto with arith.",
                        "VernacExtend",
                        "570ca0f241e02900ba779e3da0a347dbf86dd07a"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; case m; auto with arith.",
                        "VernacExtend",
                        "fee36dcdf7c1e22709c18e78e814aa66771870bf"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "notEqLt",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros n H'; Contradict H'; auto.",
                        "VernacExtend",
                        "55475cb1c096e6219457e1727c018ddb0400756c"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto with arith.",
                        "VernacExtend",
                        "ee2e71843d1389dbce243a933ebf4ce8b16e9c6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_next",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros n m H'; elim H'; auto with arith.",
                        "VernacExtend",
                        "444c584bfa74b17a3080b5447043c5c84e3875a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_next",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case (le_lt_or_eq _ _ H'); auto with arith.",
                        "VernacExtend",
                        "9abf40f066f9519c0ca1ace5f0436dd24bfef3b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_or",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "3ce118dcfa35fa106b4a0db75896944b3c969987"
                    ]
                },
                {
                    "command": [
                        "intros n' Rec m; case m; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "0e9f2c8b70f33619643023893b2ad78307cccc27"
                    ]
                },
                {
                    "command": [
                        "intros m'; elim (Rec m'); intros H'0; case H'0; clear H'0; intros H'0 H'1; rewrite H'0; auto with arith.",
                        "VernacExtend",
                        "7c9f8951a12a430a28dc3aab30521b06d246ce85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_inv_lt_aux",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "3ce118dcfa35fa106b4a0db75896944b3c969987"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; case m; auto with arith.",
                        "VernacExtend",
                        "fee36dcdf7c1e22709c18e78e814aa66771870bf"
                    ]
                },
                {
                    "command": [
                        "intros H'0; discriminate.",
                        "VernacExtend",
                        "6b4759cdf12f40144acfc875ea4701384549a853"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_inv_lt",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros n m H'; elim H'; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "537a04eead697942f85de136342b029b6a050624"
                    ]
                },
                {
                    "command": [
                        "intros m0 H'0 H'1; apply minus_inv_lt_aux; auto.",
                        "VernacExtend",
                        "2665bfc7220a002a60ac0c9fc6596ca9b3097ab2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_le",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros m n p q H' H'0.",
                        "VernacExtend",
                        "5af536e346bd3686d2991f5f6108aca2618ae7f7"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt m q); intros H'1.",
                        "VernacExtend",
                        "5ad0b1fae62c46798e609c249ed75fb16986592f"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_inv_lt with (1 := H'1); auto with arith.",
                        "VernacExtend",
                        "5765185f1fa3c9e709ad5950ffc3c77752e23368"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := q).",
                        "VernacExtend",
                        "88adc269bbc77b54c952a1d7e87a23672b501205"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r; auto with arith.",
                        "VernacExtend",
                        "8cb068cf809a6984d3066c0e3166cb341da3c686"
                    ]
                },
                {
                    "command": [
                        "rewrite (le_plus_minus p q); auto.",
                        "VernacExtend",
                        "828e431163e3da0d1b8c7e4a6ad19670805310cf"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm p).",
                        "VernacExtend",
                        "cdd7cf4d72d02561eff338dedceafcacbe032ac0"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_assoc_reverse.",
                        "VernacExtend",
                        "c58634404b739d3e0466a3943f2097ff5168ce94"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r; auto with arith.",
                        "VernacExtend",
                        "8cb068cf809a6984d3066c0e3166cb341da3c686"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := H'); auto with arith.",
                        "VernacExtend",
                        "6ab1abe740dd736f4f2db5a5daea2066df50dd04"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := H'0); auto with arith.",
                        "VernacExtend",
                        "8cf2bd4edbc71597959782dfe06fdc3952125d55"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (2 := H'); auto with arith.",
                        "VernacExtend",
                        "712b879e237f1baa3e35fbfcc3241917c4d4153d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_minus_inv",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros n m p H'; generalize m; clear m; elim H'.",
                        "VernacExtend",
                        "60c046dabe705799323a46f71801330bf86e06f8"
                    ]
                },
                {
                    "command": [
                        "intros m H'0; rewrite <- minus_n_n; elim H'0.",
                        "VernacExtend",
                        "4373ae410dc43c39e5dd9251b37e379ccd3c211a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m; auto with arith.",
                        "VernacExtend",
                        "5e0dc727f7596ad62b6284d24e09632fa0d1a674"
                    ]
                },
                {
                    "command": [
                        "intros m0 H'1 H'2; rewrite <- minus_Sn_m; auto with arith.",
                        "VernacExtend",
                        "e978728e286725a1bdfffde8aed4300ad26d309e"
                    ]
                },
                {
                    "command": [
                        "intros m H'0 H'1 m0 H'2; repeat rewrite <- minus_Sn_m; auto with arith.",
                        "VernacExtend",
                        "fa18318fa4353ee2eff8f0a7f7d82edfdea34667"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with n; auto with arith.",
                        "VernacExtend",
                        "b3fb1b221307a01d3f768205e4ffe0ad6b93daf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mult_anti_compatibility",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros n n1 n2 H' H'0; case (le_or_lt n2 n1); auto.",
                        "VernacExtend",
                        "f5f2514d6a18ff7c71503f751fc226985c0b391e"
                    ]
                },
                {
                    "command": [
                        "intros H'1; Contradict H'0; auto.",
                        "VernacExtend",
                        "85362fff70c63a2e9a5e9ddd1ffc7938cbc55751"
                    ]
                },
                {
                    "command": [
                        "apply le_not_lt; auto with arith.",
                        "VernacExtend",
                        "944ee47bfe3438ad4db296f94cc5cfe0c46786bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mult_anti_compatibility",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros n n1 n2 H' H'0; case (le_or_lt n1 n2); auto.",
                        "VernacExtend",
                        "7c0515dd60aef8a893eee4d352e39d99d233b31a"
                    ]
                },
                {
                    "command": [
                        "intros H'1; Contradict H'0; auto.",
                        "VernacExtend",
                        "85362fff70c63a2e9a5e9ddd1ffc7938cbc55751"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le; auto with arith.",
                        "VernacExtend",
                        "2e8fc221926212371063fdc84cfd53f73c7acde7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_n_0",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros n; case n; simpl in |- *; auto.",
                        "VernacExtend",
                        "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_Rminus_ZERO",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 H; replace 0%R with (r1 - r1)%R; unfold Rminus in |- *; auto with real.",
                        "VernacExtend",
                        "43f15a3b5d35110b53617b5193349a97ded581bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabsolu_left1",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intros a H; case H; intros H1.",
                        "VernacExtend",
                        "7ff3cc78dc8ff9e3c8bd48e6d164fed7ecf3f376"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_left; auto.",
                        "VernacExtend",
                        "89484c58961ef5b69dcb0bc77e45bad782de0a67"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; simpl in |- *; rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "0912db36fe488f59945228d30139e2989f9c79db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxLess1",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros r1 r2; unfold Rmax in |- *; case (Rle_dec r1 r2); auto with real.",
                        "VernacExtend",
                        "56a76f2891d040b7e376e4bc73987103b4a09ec0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxLess2",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros r1 r2; unfold Rmax in |- *; case (Rle_dec r1 r2); auto with real; intros; apply Ropp_le_cancel; auto with real.",
                        "VernacExtend",
                        "35c436505bc6b1ad6789e45d312d34cbb5f5275f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxSym",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros p q; unfold Rmax in |- *.",
                        "VernacExtend",
                        "0b7af324b3482d256d2e50914a327af05d624cde"
                    ]
                },
                {
                    "command": [
                        "case (Rle_dec p q); case (Rle_dec q p); auto; intros H1 H2; apply Rle_antisym; auto.",
                        "VernacExtend",
                        "00f5c626fd47e7fe56f73788b3f9e04dbfccd1ac"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt p q); auto; intros H'0; Contradict H1; apply Rlt_le; auto.",
                        "VernacExtend",
                        "0c3c6309c3cd7bea3863740c482f978743179fa9"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt q p); auto; intros H'0; Contradict H2; apply Rlt_le; auto.",
                        "VernacExtend",
                        "2f4e63c742d35507ad71052aa1bdc3ed52a5cd9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxAbs",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros p q r H' H'0; case (Rle_or_lt 0 p); intros H'1.",
                        "VernacExtend",
                        "5966dde112dd50a5fe429660b27b0ab8cabf990a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with r; auto with real.",
                        "VernacExtend",
                        "b9d69bb8a32d2fa4dcfedbb4f9e240535d8d36e6"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess2; auto.",
                        "VernacExtend",
                        "ff1ccb5209443da694006020f75938d81e022790"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with p; auto with real; apply Rge_trans with q; auto with real.",
                        "VernacExtend",
                        "95c09b3520f8a9b86467a9a5fab81ecf71142216"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with p; auto with real.",
                        "VernacExtend",
                        "b079ec260306de9193264e3f3d3f55a6a10d13d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left p); auto.",
                        "VernacExtend",
                        "a806e6c59770a3ad545e1012bd7cb62ab8abb1c6"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt 0 q); intros H'2.",
                        "VernacExtend",
                        "c795b87af97e787699f0965560de4b0822e3acd8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with r; auto.",
                        "VernacExtend",
                        "b82523ba2d15acc91f81ad5a067aef1041318d13"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess2; auto.",
                        "VernacExtend",
                        "ff1ccb5209443da694006020f75938d81e022790"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with q; auto with real.",
                        "VernacExtend",
                        "ed2d5295692c2f9582b028f152a36f201c464f6c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left q); auto.",
                        "VernacExtend",
                        "89f1c5e1b413514dca5d289f5425ba67916826f5"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt 0 r); intros H'3.",
                        "VernacExtend",
                        "9019e663c064a8093fa884fe0b53bd83c6fba54b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (- p)%R; auto with real.",
                        "VernacExtend",
                        "400a290307ef8069573d7bb577bf9cb278a4ec4f"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess1; auto.",
                        "VernacExtend",
                        "503232233912d33b93dc36366787b8296209e8a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left r); auto.",
                        "VernacExtend",
                        "0c747f7088a980d600eadcb4dd4748c86cec4e3e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (- p)%R; auto with real.",
                        "VernacExtend",
                        "400a290307ef8069573d7bb577bf9cb278a4ec4f"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess1; auto.",
                        "VernacExtend",
                        "503232233912d33b93dc36366787b8296209e8a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabsolu_Zabs",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto with real.",
                        "VernacExtend",
                        "1378dfe86775d9922809c6167e4abcd8a01a5315"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_right; auto with real.",
                        "VernacExtend",
                        "b4580d3b8de8d02fff412210adca262b95ad7d36"
                    ]
                },
                {
                    "command": [
                        "intros p0; apply Rabs_right; auto with real zarith.",
                        "VernacExtend",
                        "28e293bd72663cd6ee585263deaa491aa2d08e7e"
                    ]
                },
                {
                    "command": [
                        "intros p0; unfold IZR; rewrite <- INR_IPR; rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "dac1369cfe31f1aec208dff3f38b43c101a5013b"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_right; auto with real zarith.",
                        "VernacExtend",
                        "82442372c64d35a7b82a8e79c36c4da35ca38296"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxRmult",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros p q r H; unfold Rmax in |- *.",
                        "VernacExtend",
                        "44574a121e450ce14cc464180a1a6d4f78902db9"
                    ]
                },
                {
                    "command": [
                        "case (Rle_dec p q); case (Rle_dec (r * p) (r * q)); auto; intros H1 H2; auto.",
                        "VernacExtend",
                        "4c40ce67fbe9932abdf295c6be68480ebc8690ab"
                    ]
                },
                {
                    "command": [
                        "case H; intros E1.",
                        "VernacExtend",
                        "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
                    ]
                },
                {
                    "command": [
                        "case H1; auto with real.",
                        "VernacExtend",
                        "6caae5709fe0d47b8468bf88b45d292d48db1607"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "082da5ea9d4280801824d0518fe3618d5e88b56f"
                    ]
                },
                {
                    "command": [
                        "case H; intros E1.",
                        "VernacExtend",
                        "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
                    ]
                },
                {
                    "command": [
                        "case H2; auto with real.",
                        "VernacExtend",
                        "687e078841f5214db3f57230b6792c68c43016c2"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (r := r); auto.",
                        "VernacExtend",
                        "637685e051aa5cc73e441b8602b2ab19411c4be6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "082da5ea9d4280801824d0518fe3618d5e88b56f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_R0_Ropp",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros p H; rewrite <- Ropp_0; auto with real.",
                        "VernacExtend",
                        "7ffd90086e4f0897c0dde42c5578fb352a7dbde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_R0_Ropp",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros p H; rewrite <- Ropp_0; auto with real.",
                        "VernacExtend",
                        "7ffd90086e4f0897c0dde42c5578fb352a7dbde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "convert_not_O",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "intros p; elim p.",
                        "VernacExtend",
                        "f5be26bce033506d1e7905db21457f07d5094abf"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'; unfold nat_of_P in |- *; simpl in |- *; rewrite ZL6.",
                        "VernacExtend",
                        "24b0c29b5105bcb744a9b675852fbb1de746a493"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case (nat_of_P p0); auto.",
                        "VernacExtend",
                        "7274c6e50935f0a46944bc0a481ccb6de7b76c18"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'; unfold nat_of_P in |- *; simpl in |- *; rewrite ZL6.",
                        "VernacExtend",
                        "24b0c29b5105bcb744a9b675852fbb1de746a493"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case (nat_of_P p0); simpl in |- *; auto.",
                        "VernacExtend",
                        "b228a113a73a755716527ba5bf407e92477f0ba5"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "6e2686454cfe6e1249138743b7b0a98e8e97616a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_abs",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros x; elim x; auto.",
                        "VernacExtend",
                        "60009c3b651965c1a0eac46578bb63ea275bf7d9"
                    ]
                },
                {
                    "command": [
                        "unfold Zabs_nat in |- *.",
                        "VernacExtend",
                        "2acd6bb337140ffa4f7a1de955754d547f2dedd5"
                    ]
                },
                {
                    "command": [
                        "intros p.",
                        "VernacExtend",
                        "223e3cb70cff95972873720780e7195aeb57b9fc"
                    ]
                },
                {
                    "command": [
                        "pattern p at 1 3 in |- *; rewrite <- (pred_o_P_of_succ_nat_o_nat_of_P_eq_id p).",
                        "VernacExtend",
                        "13dca53d4eef61ef8a5f389ca777b4e768c25d16"
                    ]
                },
                {
                    "command": [
                        "generalize (convert_not_O p); case (nat_of_P p); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "fdea47b288b2cd8664f8273780dc9bcb44c601a1"
                    ]
                },
                {
                    "command": [
                        "intros H'; case H'; auto.",
                        "VernacExtend",
                        "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
                    ]
                },
                {
                    "command": [
                        "intros n H' H'0; rewrite Ppred_succ; auto.",
                        "VernacExtend",
                        "15eac5b242f14d4516fb3f67c9a02c199e77bce1"
                    ]
                },
                {
                    "command": [
                        "intros p H'; Contradict H'; auto.",
                        "VernacExtend",
                        "316595ab7c7e7137c700e35d701d3d59feb5e4b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inject_nat_convert",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros p q H'; rewrite H'.",
                        "VernacExtend",
                        "24e7f6d4cad70eecd4567d27b6a535eb996e8e5b"
                    ]
                },
                {
                    "command": [
                        "CaseEq (nat_of_P q); simpl in |- *.",
                        "VernacExtend",
                        "e208ebf4abdde5dfdbad55706a4dd19692a39d40"
                    ]
                },
                {
                    "command": [
                        "elim q; unfold nat_of_P in |- *; simpl in |- *; intros; try discriminate.",
                        "VernacExtend",
                        "ba49c6c7a87ecba7b5a5a3280a37d18cf3d85673"
                    ]
                },
                {
                    "command": [
                        "absurd (0%Z = Zpos p0); auto.",
                        "VernacExtend",
                        "8c5c907a5ea97824cc220aae7ebc010b028e662f"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'0; try discriminate.",
                        "VernacExtend",
                        "1e730c5cdb6e41038b0ad440c73954013b822f06"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "change (nat_of_P p0 = 0) in |- *.",
                        "VernacExtend",
                        "552c84f41ba9e6bac80b53532ce2ee38407d1d51"
                    ]
                },
                {
                    "command": [
                        "generalize H0; rewrite ZL6; case (nat_of_P p0); simpl in |- *; auto; intros; try discriminate.",
                        "VernacExtend",
                        "842a3acbd7fe7a7c085066027a0356577aba824c"
                    ]
                },
                {
                    "command": [
                        "intros n; rewrite <- nat_of_P_o_P_of_succ_nat_eq_succ.",
                        "VernacExtend",
                        "411f615b30422f82dfba10c7d9cec1913e1be053"
                    ]
                },
                {
                    "command": [
                        "intros H'0; apply f_equal with (f := Zpos).",
                        "VernacExtend",
                        "74429cc7ee19b4fd695e48d69947421c69826cf6"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_inj; auto.",
                        "VernacExtend",
                        "16783e9911a18d32eed2a9d0ed3555f52ed10dfa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZleLe",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt x y); auto with arith.",
                        "VernacExtend",
                        "289766ea6388d1d2d1d78c18cb5419e3752d25e4"
                    ]
                },
                {
                    "command": [
                        "intros H'0; Contradict H'; auto with zarith.",
                        "VernacExtend",
                        "5c50aed80634db345daa3deaa2d76e19fa40a1e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inject_nat_eq",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "intros x y H'; apply le_antisym.",
                        "VernacExtend",
                        "e07e786a2fac24360f9e345b69588ce9b3b7b02e"
                    ]
                },
                {
                    "command": [
                        "apply ZleLe; auto.",
                        "VernacExtend",
                        "f4c825eb3ddb6d6bc341c0a358dbbbba0b7faa62"
                    ]
                },
                {
                    "command": [
                        "idtac; rewrite H'; auto with zarith.",
                        "VernacExtend",
                        "1a6d5456121bd7d1632404f3edf241ee233fcb6b"
                    ]
                },
                {
                    "command": [
                        "apply ZleLe; auto.",
                        "VernacExtend",
                        "f4c825eb3ddb6d6bc341c0a358dbbbba0b7faa62"
                    ]
                },
                {
                    "command": [
                        "idtac; rewrite H'; auto with zarith.",
                        "VernacExtend",
                        "1a6d5456121bd7d1632404f3edf241ee233fcb6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zcompare_EGAL",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "intros p q; case p; case q; simpl in |- *; auto with arith; try (intros; discriminate); intros q1 p1.",
                        "VernacExtend",
                        "11dc6a2723481ef312c13391530dbdd0c18077c9"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite (Pcompare_Eq_eq p1 q1); auto.",
                        "VernacExtend",
                        "0b93517b82fda79fc2d777b98597e49a132926c3"
                    ]
                },
                {
                    "command": [
                        "unfold Pos.compare.",
                        "VernacExtend",
                        "8368b4e5c98391622d4b1507f2910e985b6b5ef6"
                    ]
                },
                {
                    "command": [
                        "generalize (Pcompare_Eq_eq p1 q1); case (Pcompare p1 q1 Datatypes.Eq); simpl in |- *; intros H H1; try discriminate; rewrite H; auto.",
                        "VernacExtend",
                        "d73ae17d9e263a4af99092a5b5b27a9303a50d6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zopp",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros x y; case x; case y; simpl in |- *; auto with zarith; intros p p0; unfold Zlt in |- *; simpl in |- *; unfold Pos.compare; rewrite <- ZC4; auto.",
                        "VernacExtend",
                        "bf3e9c9f047f04d35cbd7265e78e83c4cd7112ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zopp",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "intros x y H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
                        "VernacExtend",
                        "6b74809eb65c5456d4b72cde7537782e719050aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absolu_INR",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros n; case n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "e30347b9aef1ec3dd950fe6a5fe170c882edf5d7"
                    ]
                },
                {
                    "command": [
                        "intros n0; rewrite nat_of_P_o_P_of_succ_nat_eq_succ; auto with arith.",
                        "VernacExtend",
                        "d7bd620616c024e2a9e9524c99606c154851c39d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absolu_Zopp",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intros p; case p; simpl in |- *; auto.",
                        "VernacExtend",
                        "afee7a9ab62d247041c6e9d02f5397b50015aedd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_absolu",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto; intros p; apply sym_equal; apply inject_nat_convert; auto.",
                        "VernacExtend",
                        "8a9893574b26331491544bcf304d9b196839dc21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absolu_comp_mult",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros p q; case p; case q; simpl in |- *; auto; intros p0 p1; apply ((fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y) p1 p0 (fun x => x)).",
                        "VernacExtend",
                        "3030afcdb041461712107c6813049454db48706c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmin_sym",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "intros m n; unfold Zmin in |- *.",
                        "VernacExtend",
                        "e271f6dee4e29fb32d71e2c7115dcfecd8227ff9"
                    ]
                },
                {
                    "command": [
                        "case n; case m; simpl in |- *; auto; unfold Pos.compare.",
                        "VernacExtend",
                        "2724a84061c7af73f52f01df51f046391f3ac287"
                    ]
                },
                {
                    "command": [
                        "intros p p0; rewrite (ZC4 p p0).",
                        "VernacExtend",
                        "2475e19e7bb51d9d595645dec7dee38fa2ac7012"
                    ]
                },
                {
                    "command": [
                        "generalize (Pcompare_Eq_eq p0 p).",
                        "VernacExtend",
                        "e93f0612c4284d2443a5688fc75c3c413219f48d"
                    ]
                },
                {
                    "command": [
                        "case (Pcompare p0 p Datatypes.Eq); simpl in |- *; auto.",
                        "VernacExtend",
                        "a1b5a8f5ce6218f3aabe7a11e1ee8ae164569985"
                    ]
                },
                {
                    "command": [
                        "intros H'; rewrite H'; auto.",
                        "VernacExtend",
                        "ade896278b51934c8f6f7f6a461fd3088155cce0"
                    ]
                },
                {
                    "command": [
                        "intros p p0; rewrite (ZC4 p p0).",
                        "VernacExtend",
                        "2475e19e7bb51d9d595645dec7dee38fa2ac7012"
                    ]
                },
                {
                    "command": [
                        "generalize (Pcompare_Eq_eq p0 p).",
                        "VernacExtend",
                        "e93f0612c4284d2443a5688fc75c3c413219f48d"
                    ]
                },
                {
                    "command": [
                        "case (Pcompare p0 p Datatypes.Eq); simpl in |- *; auto.",
                        "VernacExtend",
                        "a1b5a8f5ce6218f3aabe7a11e1ee8ae164569985"
                    ]
                },
                {
                    "command": [
                        "intros H'; rewrite H'; auto.",
                        "VernacExtend",
                        "ade896278b51934c8f6f7f6a461fd3088155cce0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_nat_O",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros z; unfold Zpower_nat in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "f90fc4d4663f9d4a7a44f7083810f7f94772e676"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_nat_1",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intros z; unfold Zpower_nat in |- *; simpl in |- *; rewrite Zmult_1_r; auto.",
                        "VernacExtend",
                        "cd3233fbaed81b17fb88070533edae93ea446d1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmin_le1",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; unfold Zle, Zmin in |- *; case (z1 ?= z2)%Z; auto; intros H; Contradict H; auto.",
                        "VernacExtend",
                        "a0c946dd432a28787927ef9181b6b36c0ebb7945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmin_le2",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; rewrite Zmin_sym; apply Zmin_le1; auto.",
                        "VernacExtend",
                        "ad4ae78989984843870510b6f97d0ca80415af37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmin_Zle",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 z3 H' H'0; unfold Zmin in |- *.",
                        "VernacExtend",
                        "54d4cca1749efd13da0768b090a1548509754019"
                    ]
                },
                {
                    "command": [
                        "case (z2 ?= z3)%Z; auto.",
                        "VernacExtend",
                        "acf70e8ab6ce782f0c9b008900bf6e28aa7fd296"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zminus_n_predm",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "unfold Zpred in |- *; unfold Zsucc in |- *; ring.",
                        "VernacExtend",
                        "7550e11b49699bdddb9fd9fb124dcb39474d6cf8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zopp_Zpred_Zs",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "intros z; unfold Zpred, Zsucc in |- *; ring.",
                        "VernacExtend",
                        "1e0fc0dba4c22b4e2d03997c1e475ac7afcba7e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_mult_gen",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0; case (Zle_lt_or_eq _ _ H').",
                        "VernacExtend",
                        "aeb44378bf9a331177bd147bd2ab6ca0589b37b4"
                    ]
                },
                {
                    "command": [
                        "intros H'1; rewrite Zmult_comm; apply Zmult_gt_0_le_0_compat; auto; apply Zlt_gt; auto.",
                        "VernacExtend",
                        "4b86881d55febbebacbc40de0d20f68f30da8f82"
                    ]
                },
                {
                    "command": [
                        "intros H'1; rewrite <- H'1; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "af05a72ea53df5183c502bbe22f1d87d726a0dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZmaxLe1",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; unfold Zmax in |- *; CaseEq (z1 ?= z2)%Z; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "723aa899dc9751150613e6f744e8d77ff5b14c04"
                    ]
                },
                {
                    "command": [
                        "unfold Zle in |- *; intros H; rewrite H; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "9333b74ca8ffa2d4b3f2f6c8bbdf5ea66bb428d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZmaxSym",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; unfold Zmax in |- *; CaseEq (z1 ?= z2)%Z; CaseEq (z2 ?= z1)%Z; intros H1 H2; try case (Zcompare_EGAL _ _ H1); auto; try case (Zcompare_EGAL _ _ H2); auto; Contradict H1.",
                        "VernacExtend",
                        "31e629868f7bf11c44c65669c57a6bd089bd419c"
                    ]
                },
                {
                    "command": [
                        "case (Zcompare.Zcompare_Gt_Lt_antisym z2 z1); auto.",
                        "VernacExtend",
                        "55d15e375df1347d2899b76bea41dd9c44704de6"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; rewrite H'0; auto; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "8809ba7380e715f8c78105fecd21280e1b5b6e6b"
                    ]
                },
                {
                    "command": [
                        "case (Zcompare.Zcompare_Gt_Lt_antisym z1 z2); auto.",
                        "VernacExtend",
                        "b574374fd43670ec9c17610ee00077cae7f6fb1b"
                    ]
                },
                {
                    "command": [
                        "intros H'; rewrite H'; auto; intros; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "2399b6273157f233bc9e212efa3bc53ae8250d18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmax_le2",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; unfold Zle, Zmax in |- *; case (z1 ?= z2)%Z; auto.",
                        "VernacExtend",
                        "49e6c4f0ad4ac9e174eca562bfe86a2dd1fa974c"
                    ]
                },
                {
                    "command": [
                        "intros H'; case H'; auto.",
                        "VernacExtend",
                        "ab91036e51f7c3008a0c371720a2ca0e0735ece9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmax_le1",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H'; rewrite ZmaxSym; apply Zmax_le2; auto.",
                        "VernacExtend",
                        "4990f7bef47e8b616f25f362f41ce7529f9f68a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZmaxLe2",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; rewrite ZmaxSym; apply ZmaxLe1.",
                        "VernacExtend",
                        "ff9ea497caaf8997b68e1f566e254975756bcb9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_Zs",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros p q H' H'0; apply Zle_antisym; auto.",
                        "VernacExtend",
                        "e95c829754241472bf5053d3c8073fea701ba1d7"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_succ_le; auto.",
                        "VernacExtend",
                        "1c4ed25a0af8970ba728f0b698cc37fb8ee71d3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zmin_Zmax",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case (Zle_or_lt z1 z2); unfold Zle, Zlt, Zmin, Zmax in |- *; CaseEq (z1 ?= z2)%Z; auto; intros H1 H2; try rewrite H1; try rewrite H2; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "aa86171deaee0c4a4e6debfd286dd159ef75fb4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_Zmult",
            "line_nb": 337,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zmult_comp_r",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros x y z H' H'0; case (Zle_lt_or_eq _ _ H'); intros Zlt1.",
                        "VernacExtend",
                        "8bb864101c8a345d8afb8196a1d8123e7f47dbf0"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_gt_0_le_compat_r; auto.",
                        "VernacExtend",
                        "91eccf7445f2c2d05fd1dadf17e5e817b8671493"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_gt; auto.",
                        "VernacExtend",
                        "c026e800af6ae6924d04465d4a1d17d1cc73bf3b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zlt1; repeat rewrite <- Zmult_0_r_reverse; auto with zarith.",
                        "VernacExtend",
                        "4a948df8a316aa2cbb853f4412b0b4582ff4d984"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zmult_comp_l",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "intros x y z H' H'0; repeat rewrite (Zmult_comm z); apply Zle_Zmult_comp_r; auto.",
                        "VernacExtend",
                        "857667bee7fa5bbcba924d3ab152ee16b4f38f50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NotZmultZero",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; simpl in |- *; intros; auto; try discriminate.",
                        "VernacExtend",
                        "add1bc6a6139aaf6f2e46fd7db22502f88e313b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IZR_zero",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "intros p H'; rewrite H'; auto.",
                        "VernacExtend",
                        "88bd9dc02b44429d68b481151751aba2c7467e14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IZR_zero_r",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "intros p; case p; simpl in |- *; auto.",
                        "VernacExtend",
                        "afee7a9ab62d247041c6e9d02f5397b50015aedd"
                    ]
                },
                {
                    "command": [
                        "intros p1 H'; Contradict H'; auto with real zarith.",
                        "VernacExtend",
                        "24ad937eb2c02c413a0917aba96257ac76425580"
                    ]
                },
                {
                    "command": [
                        "intros p1 H'; absurd (INR (nat_of_P p1) = 0%R); auto with real zarith.",
                        "VernacExtend",
                        "04c63e6a621355a3907bdcf9efc3f44b909cc985"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive (INR (nat_of_P p1))).",
                        "VernacExtend",
                        "46fae73eb8e93dadab7692674129f2859879730a"
                    ]
                },
                {
                    "command": [
                        "unfold IZR in H'; rewrite <- INR_IPR in H'.",
                        "VernacExtend",
                        "81e869646e28cef36914e21c58abb51153123a48"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto with real.",
                        "VernacExtend",
                        "bcb9635fac759df6b98a63d3ba2a03d8ad05a26f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INR_lt_nm",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "intros n m H'; elim H'; auto.",
                        "VernacExtend",
                        "9e3876aa94489fad4cd1313e47b16b51625ef229"
                    ]
                },
                {
                    "command": [
                        "replace (INR n) with (INR n + 0)%R; auto with real; rewrite S_INR; auto with real.",
                        "VernacExtend",
                        "ce523fb88f52460ee9a6fae260762fff34c6093b"
                    ]
                },
                {
                    "command": [
                        "intros m0 H'0 H'1.",
                        "VernacExtend",
                        "762e3f15fc50e52fac0f9651e20b784e8c88375f"
                    ]
                },
                {
                    "command": [
                        "replace (INR n) with (INR n + 0)%R; auto with real; rewrite S_INR; auto with real.",
                        "VernacExtend",
                        "ce523fb88f52460ee9a6fae260762fff34c6093b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_INR1",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "replace 1%R with (INR 1); auto with real.",
                        "VernacExtend",
                        "a9f50593cb67a6e04803fabf1b642d73428d43f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NEq_INR",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "intros n m H'; (case (le_or_lt n m); intros H'1).",
                        "VernacExtend",
                        "bbe302d47fb94b7e0cf9eb981687d8e4a517aebc"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_or_eq _ _ H'1); intros H'2.",
                        "VernacExtend",
                        "883c5e28fdeeffd21fbf0090951c5ed3377326ff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_dichotomy_converse; auto with real.",
                        "VernacExtend",
                        "3a05b78a0146e73bdab632e31866736ecc47aa81"
                    ]
                },
                {
                    "command": [
                        "Contradict H'; auto.",
                        "VernacExtend",
                        "6de99c75ca420c27a59ad01c17beddf6a249ac34"
                    ]
                },
                {
                    "command": [
                        "apply Compare.not_eq_sym; apply Rlt_dichotomy_converse; auto with real.",
                        "VernacExtend",
                        "782069883b490af28f62fbd73c70fdfb3dea6a1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NEq_INRO",
            "line_nb": 384,
            "steps": [
                {
                    "command": [
                        "replace 0%R with (INR 0); auto with real.",
                        "VernacExtend",
                        "b571851a56683b037490a608594c744506b81bdd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NEq_INR1",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "replace 1%R with (INR 1); auto with real.",
                        "VernacExtend",
                        "a9f50593cb67a6e04803fabf1b642d73428d43f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_O_lt",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "3ce118dcfa35fa106b4a0db75896944b3c969987"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NEq_IZRO",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "intros n H; Contradict H.",
                        "VernacExtend",
                        "6477e70ea692c0f087bdc92f8d1256f3abe7ca99"
                    ]
                },
                {
                    "command": [
                        "apply IZR_zero_r; auto.",
                        "VernacExtend",
                        "7bf2b8f93b53f34a7b36a1b5d556836a78d3a287"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_IZR",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "intros p q H; case (Rle_or_lt (IZR q) (IZR p)); auto.",
                        "VernacExtend",
                        "b225638cbe252204c0d0a76e6a8a9e3faf6b0262"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H; apply Zle_not_lt.",
                        "VernacExtend",
                        "52a9fad6249ae9d76a22c461277ecfac18fc6387"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR; auto.",
                        "VernacExtend",
                        "5ddae610de44a290611008bca1b760849106ddb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_IZR",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "case (Zle_lt_or_eq _ _ H'); clear H'; intros H'.",
                        "VernacExtend",
                        "f5dc18f4a3640ebfd0774aa99c9667a7a1d49165"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto with real.",
                        "VernacExtend",
                        "e1bf079018a05b732af3de134a13c80fa1b905a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'; auto with real.",
                        "VernacExtend",
                        "a1c5dcc143410b8a57b2d1e7a2af7344044288ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_IZRO",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "intros p H; replace 0%R with (IZR 0); auto with real.",
                        "VernacExtend",
                        "5265f29ad97e71318b6852976502cbeac934fdd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_IZRO",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "intros; replace 0%R with (IZR 0); auto with real.",
                        "VernacExtend",
                        "341b8f5fe2040db77b03312948641c6fbcc5689d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_IZR1",
            "line_nb": 422,
            "steps": [
                {
                    "command": [
                        "intros; replace 1%R with (IZR 1); auto with real.",
                        "VernacExtend",
                        "3317d7a29ddfd40db1a09dbd43e876488ca80ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_IZR1",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "intros; replace 1%R with (IZR 1); auto with real.",
                        "VernacExtend",
                        "3317d7a29ddfd40db1a09dbd43e876488ca80ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_Rlt",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case (le_or_lt m n); auto; intros H0; Contradict H'; auto with real.",
                        "VernacExtend",
                        "bd6a3142f88bc37f80f0c0c94780d78cd9a791d7"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_or_eq _ _ H0); intros H1; auto with real.",
                        "VernacExtend",
                        "46ee38a72f64423a1c2bc9fc4c9e311e4467c5d6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; apply Rlt_irrefl.",
                        "VernacExtend",
                        "be966b97b54f3fcb924e347e26e1fc9b4146fb8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INR_inv",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; auto; try rewrite S_INR.",
                        "VernacExtend",
                        "847ef8170c4d8dac839e6093fd8811d3fdcacb2d"
                    ]
                },
                {
                    "command": [
                        "intros m; case m; auto.",
                        "VernacExtend",
                        "ba64d4826ea21d443c3185e1b131671293f99407"
                    ]
                },
                {
                    "command": [
                        "intros m' H1; Contradict H1; auto.",
                        "VernacExtend",
                        "e7ef39152f43987c866fd6ac21fb3db87105edfb"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR.",
                        "VernacExtend",
                        "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_dichotomy_converse; left.",
                        "VernacExtend",
                        "8be10ff4f710df6fc2d16ffa31bf4c3b6a53d9f5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_0_plus_1.",
                        "VernacExtend",
                        "e9f77c81bc998cc37359f089b3b38967b549481a"
                    ]
                },
                {
                    "command": [
                        "apply pos_INR.",
                        "VernacExtend",
                        "0d9ef3d5703b4f3e1294027dac0f940b9f78b56e"
                    ]
                },
                {
                    "command": [
                        "intros n' H' m; case m.",
                        "VernacExtend",
                        "c2e49ee15d262c662e6f118b988ad7ca9c25070f"
                    ]
                },
                {
                    "command": [
                        "intros H'0; Contradict H'0; auto.",
                        "VernacExtend",
                        "309e0c652fca7ca41fc269e7e4c3bac2313ada79"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR.",
                        "VernacExtend",
                        "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_dichotomy_converse; right.",
                        "VernacExtend",
                        "b71cb1c32164d7286eac13dc977dc91ab5b13d8a"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Rle_lt_0_plus_1.",
                        "VernacExtend",
                        "f0ef9f8cd7b9067f33b68b0dd5e175dcadaf3209"
                    ]
                },
                {
                    "command": [
                        "apply pos_INR.",
                        "VernacExtend",
                        "0d9ef3d5703b4f3e1294027dac0f940b9f78b56e"
                    ]
                },
                {
                    "command": [
                        "intros m' H'0.",
                        "VernacExtend",
                        "b04e091b0259eb01dda14d4afb94499040d48cba"
                    ]
                },
                {
                    "command": [
                        "rewrite (H' m'); auto.",
                        "VernacExtend",
                        "cf96cd31228d2d01a4062adf519b5d32b5936dd6"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite S_INR in H'0.",
                        "VernacExtend",
                        "30652ee85175a5ccb8213d170596eb5f5d68305b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (r := 1%R); repeat rewrite (Rplus_comm 1); auto with real.",
                        "VernacExtend",
                        "643164333aab339010480a36f6b7f728cf14e2f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_INR",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "intros x y H; repeat rewrite INR_IZR_INZ.",
                        "VernacExtend",
                        "c86699083ec97e93aefb723378bbefe7f553c0b5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_IZR; auto with zarith.",
                        "VernacExtend",
                        "12df029cbfdfb0f2be626c61fe01c60ca46ae90f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_Rle",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case H'; auto.",
                        "VernacExtend",
                        "06e9dac5d9d26e179963b6e9dee882c7e34753f3"
                    ]
                },
                {
                    "command": [
                        "intros H'0; apply lt_le_weak; apply lt_Rlt; auto.",
                        "VernacExtend",
                        "dd5a13e56854765f4733399413b80f1a3365fccc"
                    ]
                },
                {
                    "command": [
                        "intros H'0; rewrite <- (INR_inv _ _ H'0); auto with arith.",
                        "VernacExtend",
                        "221a029b14e24ed8e246c5becc7f0022375ad1b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmult_IZR",
            "line_nb": 464,
            "steps": [
                {
                    "command": [
                        "intros z t; case z; case t; simpl in |- *; auto with real; unfold IZR; intros t1 z1; repeat rewrite <- INR_IPR.",
                        "VernacExtend",
                        "f4bec9eb5a3deb0dc7be919be62aa6858b8956cf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism; auto with real.",
                        "VernacExtend",
                        "8145d193a1238f89ec4ec3838efd502a3d3e67af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism; auto with real.",
                        "VernacExtend",
                        "8145d193a1238f89ec4ec3838efd502a3d3e67af"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_mult_distr_l_reverse; auto with real.",
                        "VernacExtend",
                        "d45415f2e4bf7a21e13ec8d1c5d47cf2aedc2dae"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_eq_compat; rewrite mult_comm; auto with real.",
                        "VernacExtend",
                        "aace29475b8f32daf94d18db32ad01676b5e7be4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism; auto with real.",
                        "VernacExtend",
                        "8145d193a1238f89ec4ec3838efd502a3d3e67af"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_mult_distr_l_reverse; auto with real.",
                        "VernacExtend",
                        "d45415f2e4bf7a21e13ec8d1c5d47cf2aedc2dae"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite nat_of_P_mult_morphism; auto with real.",
                        "VernacExtend",
                        "8145d193a1238f89ec4ec3838efd502a3d3e67af"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_opp_opp; auto with real.",
                        "VernacExtend",
                        "a46995fe998e17e49fd0de41a177c67b148710b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_next",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case (Zle_lt_or_eq (Zsucc n) m); auto with zarith.",
                        "VernacExtend",
                        "fac8f16a3b38251c10d50f7c2649cd3f983ecd57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_next",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
                        "VernacExtend",
                        "85c98f398e053f6aeb6c5e3391e9527019cdb130"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zopp_Inv",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "intros x y H'; case (Zle_or_lt x y); auto with zarith.",
                        "VernacExtend",
                        "b1f540f8c711211bb216f2000afa448077f77d0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zopp_Inv",
            "line_nb": 499,
            "steps": [
                {
                    "command": [
                        "intros p q H'; case (Zle_lt_or_eq _ _ H'); auto with zarith.",
                        "VernacExtend",
                        "e71f205f4f749f978c7bc57d44d934918568cb31"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absolu_Zs_neg",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "intros z H'; apply inject_nat_eq.",
                        "VernacExtend",
                        "eaaaf40583b79e049850a2d8a67f2eda39fff733"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_S.",
                        "VernacExtend",
                        "d9f39a95338187eacc0449352f36ed1a3018cf13"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (absolu_Zopp (Zsucc z)).",
                        "VernacExtend",
                        "395c2d76b626df6eab94beafe51643860b436a59"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (absolu_Zopp z).",
                        "VernacExtend",
                        "9dbb4c8af286d17e64d0ebab46f195f0ad674e47"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_abs; replace 0%Z with (- (0))%Z; auto with zarith.",
                        "VernacExtend",
                        "02fa45929d8ef671e73ae09b30870e5de8de138e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_absolu",
            "line_nb": 509,
            "steps": [
                {
                    "command": [
                        "intros x n; case x; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "c70d787956cc28317e5cfc01c961063e8f6e3ce5"
                    ]
                },
                {
                    "command": [
                        "replace 0%Z with (Z_of_nat 0); auto with zarith.",
                        "VernacExtend",
                        "d8cceece34173bc7060bc536df2350475d5dea76"
                    ]
                },
                {
                    "command": [
                        "intros p; rewrite <- (inject_nat_convert (Zpos p) p); auto with zarith.",
                        "VernacExtend",
                        "b90b7ef29980ac207e8ec9b5bf896fee9debb6bc"
                    ]
                },
                {
                    "command": [
                        "case n; simpl in |- *; intros; red in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "47dfb692c6bd4ebd6a011821611a0b4612fbe89c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pred",
            "line_nb": 515,
            "steps": [
                {
                    "command": [
                        "intros n; case n; auto.",
                        "VernacExtend",
                        "537f85c9b49c1144672ab16ad72ada90bb44b6fe"
                    ]
                },
                {
                    "command": [
                        "intros H'; Contradict H'; auto.",
                        "VernacExtend",
                        "c02b6f8c7def4d8f4b279853665f0923ffe92360"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'; rewrite inj_S; rewrite <- Zpred_succ; auto.",
                        "VernacExtend",
                        "de9915582b96bbceef6bd42482f4110a7235ab9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_abs",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "intros p; case p; simpl in |- *; auto with zarith; intros q; rewrite inject_nat_convert with (p := Zpos q); auto with zarith.",
                        "VernacExtend",
                        "49ddc9e16eb571ea4159dd2ae082a86972efac9a"
                    ]
                },
                {
                    "command": [
                        "unfold Zle in |- *; red in |- *; intros H'2; discriminate.",
                        "VernacExtend",
                        "c8b90773407c691cf7a7dc27e298b6f53fa4b760"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZleAbs",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "intros z n H' H'0; case (le_or_lt (Zabs_nat z) n); auto; intros lt.",
                        "VernacExtend",
                        "f2125bafbffcd9dcab78cdbb29af6d7bc4187610"
                    ]
                },
                {
                    "command": [
                        "case (Zle_or_lt 0 z); intros Zle0.",
                        "VernacExtend",
                        "f7b69971317b7bb8b40da8970fd28c7b63960e2c"
                    ]
                },
                {
                    "command": [
                        "Contradict H'0.",
                        "VernacExtend",
                        "0fd20730534a0b7ed5d43e3a37dfb114d920724b"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_not_le; auto.",
                        "VernacExtend",
                        "c47dad27e2892db222721bc09502590dbd6a4a58"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (inj_abs z); auto with zarith.",
                        "VernacExtend",
                        "b50966160c47aa9fee5056bdf1e77c819722f7d9"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_not_le; auto.",
                        "VernacExtend",
                        "c47dad27e2892db222721bc09502590dbd6a4a58"
                    ]
                },
                {
                    "command": [
                        "replace z with (- Z_of_nat (Zabs_nat z))%Z.",
                        "VernacExtend",
                        "c1d68ce4e541a122d5035b63564b8f931816fc6e"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_Zopp; auto with zarith.",
                        "VernacExtend",
                        "4117b94759b5dcf2e83d92413e5072f3f6b5c436"
                    ]
                },
                {
                    "command": [
                        "rewrite <- absolu_Zopp.",
                        "VernacExtend",
                        "279c3847ddedc55ff95451d61aeba7a3a433877e"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_abs; auto with zarith.",
                        "VernacExtend",
                        "d832d70d6f4177fa3d020760f1ccab18c59abdc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_Zlt_inv",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "intros n m H'; case (le_or_lt n m); auto.",
                        "VernacExtend",
                        "76c52ad3f322dc4057b87c483d615a2adf149ba3"
                    ]
                },
                {
                    "command": [
                        "intros H'0.",
                        "VernacExtend",
                        "e8ea833695b450eab455d302901072f04fd3096d"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_or_eq _ _ H'0); auto with zarith.",
                        "VernacExtend",
                        "84c741c82c9996ae6882e6865e5e27cdfdf35584"
                    ]
                },
                {
                    "command": [
                        "intros H'1.",
                        "VernacExtend",
                        "27d12cfd315031f2731cee2bf5ecf81dd7f6b369"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "apply Zle_not_lt; auto with zarith.",
                        "VernacExtend",
                        "13739daa2c3c9c8e9788299bf37d232755bbfff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NconvertO",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; unfold nat_of_P in |- *; simpl in |- *.",
                        "VernacExtend",
                        "a1bb62682b68a33139715ce794bd1656c17569c0"
                    ]
                },
                {
                    "command": [
                        "intros p0 H'; red in |- *; intros H'0; discriminate.",
                        "VernacExtend",
                        "d0710f3a652d3f389d379c5c115dc222acd6169c"
                    ]
                },
                {
                    "command": [
                        "intros p0; rewrite ZL6; unfold nat_of_P in |- *.",
                        "VernacExtend",
                        "87e473adf3b8aeced1444f2cb6eeea399083f8a9"
                    ]
                },
                {
                    "command": [
                        "case (Pmult_nat p0 1); simpl in |- *; auto.",
                        "VernacExtend",
                        "5d3faf3ec8230cc8c0c8248305780a030f6f7257"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; discriminate.",
                        "VernacExtend",
                        "e49f786f26f3f0e4748894aa46257f4aef028dca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "absolu_lt_nz",
            "line_nb": 554,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto; try (intros H'; case H'; auto; fail); intros p; generalize (NconvertO p); auto with arith.",
                        "VernacExtend",
                        "1dc473a148adfce739a9e0c1a3daab40aba0db0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt2",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "replace 0%R with (INR 0); auto with real arith.",
                        "VernacExtend",
                        "3caed965951659080cf394dcb353db3f9bd924fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RlIt2",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (r := INR 2); auto with real.",
                        "VernacExtend",
                        "e6068c3455f72923d4dd8215e4d995afea848997"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rledouble",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "intros r H'.",
                        "VernacExtend",
                        "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
                    ]
                },
                {
                    "command": [
                        "replace (INR 2 * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "f8abfd802b320a882188040008a439a2f1d4186e"
                    ]
                },
                {
                    "command": [
                        "pattern r at 1 in |- *; replace r with (r + 0)%R; [ idtac | ring ].",
                        "VernacExtend",
                        "8e2cbe71fcc5f84078754219d8dbe4bd377f8d46"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; auto.",
                        "VernacExtend",
                        "c2eec9db2c78c63da9222314c100e00c5759159c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rltdouble",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "intros r H'.",
                        "VernacExtend",
                        "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
                    ]
                },
                {
                    "command": [
                        "pattern r at 1 in |- *; replace r with (r + 0)%R; try ring.",
                        "VernacExtend",
                        "9ac95ac0e19b24ba659245c3174181451f3d2510"
                    ]
                },
                {
                    "command": [
                        "replace (INR 2 * r)%R with (r + r)%R; simpl in |- *; try ring; auto with real.",
                        "VernacExtend",
                        "a67abc2e8fad2f31b37dcce6cf5b97807c49b695"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_RinvDouble",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "intros r H'.",
                        "VernacExtend",
                        "bf0fc51929b01e9b2d08bc1e791ae24623b9d462"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (r := INR 2); auto with real.",
                        "VernacExtend",
                        "e6068c3455f72923d4dd8215e4d995afea848997"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite Rinv_r.",
                        "VernacExtend",
                        "d7bbeef31f7b8b397a05d883a8c55ba90a522740"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r; replace 1%R with (INR 1); auto with real arith.",
                        "VernacExtend",
                        "8843d81279b04b26e70d1d7677b863e9b85737fe"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (INR 0); auto with real arith.",
                        "VernacExtend",
                        "3caed965951659080cf394dcb353db3f9bd924fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_Rinv",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "intros x y H H1; case H1; intros H2.",
                        "VernacExtend",
                        "218d6cc4da4871053bb3f0e6480fdfdb8997feea"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_lt_contravar; auto.",
                        "VernacExtend",
                        "1316db5840ad7e0eaeb2db6b18cfac0bcc30bc1d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; auto.",
                        "VernacExtend",
                        "33612f92e970c7d28a81ee13ef74ef793e1b8b18"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (2 := H2); auto.",
                        "VernacExtend",
                        "dd53b142e073f17019a44a4e7063f14f186fa025"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; auto with real.",
                        "VernacExtend",
                        "d19069c82416ef4e41d27b5ce98e0dfa19b6fd15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int_part_INR",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "intros n; unfold Int_part in |- *.",
                        "VernacExtend",
                        "01480fe10aede3b60f0084182288ff47d5b221ec"
                    ]
                },
                {
                    "command": [
                        "cut (up (INR n) = (Z_of_nat n + Z_of_nat 1)%Z).",
                        "VernacExtend",
                        "38811c70112447cc0c53fea3627edbbeb371dd43"
                    ]
                },
                {
                    "command": [
                        "intros H'; rewrite H'; simpl in |- *; ring.",
                        "VernacExtend",
                        "eeb2b11a7d691d80f1636ce425acf5b7399b41e4"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply tech_up; auto.",
                        "VernacExtend",
                        "6916b0b718c2e490bf271d19078722ffc0aa9556"
                    ]
                },
                {
                    "command": [
                        "replace (Z_of_nat n + Z_of_nat 1)%Z with (Z_of_nat (S n)).",
                        "VernacExtend",
                        "8933ea9cafb95dde4704829a06cdfbcbfd9ac882"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- INR_IZR_INZ.",
                        "VernacExtend",
                        "65f3730d40f55bb6eb685811738f2e88821504c5"
                    ]
                },
                {
                    "command": [
                        "apply INR_lt_nm; auto.",
                        "VernacExtend",
                        "5fa01c1e650758474cae7689fcf2b4552a972afe"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_comm; rewrite <- inj_plus; simpl in |- *; auto.",
                        "VernacExtend",
                        "641878754fc07981650edcc7e85c530a6d4ae49a"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_IZR; simpl in |- *; auto with real.",
                        "VernacExtend",
                        "e97cf280b5c2e8a936eaa14aaeddbe3cd03b642c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- INR_IZR_INZ; auto with real.",
                        "VernacExtend",
                        "710c80cf57d0d2ed72de6dd4a20afb0b289889ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Int_part_IZR",
            "line_nb": 603,
            "steps": [
                {
                    "command": [
                        "intros z; unfold Int_part in |- *.",
                        "VernacExtend",
                        "cbcd0868b4d16e6186cc6c8d4c08d1222c739bfe"
                    ]
                },
                {
                    "command": [
                        "cut (up (IZR z) = (z + 1)%Z).",
                        "VernacExtend",
                        "00f369380bab544c2e2ff86b1467f0a5e62c64b1"
                    ]
                },
                {
                    "command": [
                        "intros Z1; rewrite Z1; rewrite Zplus_comm; apply Zminus_plus; auto with zarith.",
                        "VernacExtend",
                        "84820cd2215995b73f85465d6ec967e294c16472"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply tech_up; simpl in |- *; auto with real zarith.",
                        "VernacExtend",
                        "8667cc370a338758f6ac957e519568a0ea35436e"
                    ]
                },
                {
                    "command": [
                        "replace (IZR z) with (IZR z + IZR 0)%R; try rewrite plus_IZR; auto with real zarith.",
                        "VernacExtend",
                        "870752e85f0eb31bd3a10979b6ed645c182cb641"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Rlt",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; case (Zle_or_lt z2 z1); auto.",
                        "VernacExtend",
                        "246cac31f0ee8424090dc48c255b806d8e9ce12a"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H; auto with real zarith.",
                        "VernacExtend",
                        "c12ba2b6dc998a5a347b0b7a14cfba78baf5c426"
                    ]
                },
                {
                    "command": [
                        "apply Rle_not_lt; auto with real zarith.",
                        "VernacExtend",
                        "649320f80e01db1cba1723bc252bb9c1ffb49c54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Rle",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; case (Zle_or_lt z1 z2); auto.",
                        "VernacExtend",
                        "32c6ae40b42ca67c96cafc46f7a58ef4cc84e92a"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H; auto with real zarith.",
                        "VernacExtend",
                        "c12ba2b6dc998a5a347b0b7a14cfba78baf5c426"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le; auto with real zarith.",
                        "VernacExtend",
                        "0110b080a397efe0ef30ff588ec52e52f5176c39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IZR_inv",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; apply Zle_antisym; apply Zle_Rle; rewrite H; auto with real.",
                        "VernacExtend",
                        "168d459491648ebcb6fc76072405c03913795177"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_eq_opp",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "intros x; case x; simpl in |- *; auto.",
                        "VernacExtend",
                        "50089fbf1a2c71d8dd0d9f5a9ae6565c4e941619"
                    ]
                },
                {
                    "command": [
                        "intros p H; Contradict H; auto with zarith.",
                        "VernacExtend",
                        "190e6d65fb31a4e5d2ec9db566ee03f15d7ed0f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zpred",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "intros x y H; apply Zlt_succ_le.",
                        "VernacExtend",
                        "aab049a5a308a2e1e5eafd147847c746995195c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zsucc_pred; auto.",
                        "VernacExtend",
                        "842c98ebefb1c1ae4577099612443e9a0101f807"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_Zopp",
            "line_nb": 645,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto.",
                        "VernacExtend",
                        "738ac452bf9362b9b002c8e045c7273b16cd603a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zabs",
            "line_nb": 648,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; red in |- *; simpl in |- *; auto; try (red in |- *; intros; discriminate; fail).",
                        "VernacExtend",
                        "a408bd1e80cc4868b083aa7d7f4d33e7945ebe2e"
                    ]
                },
                {
                    "command": [
                        "intros p; elim p; simpl in |- *; auto; try (red in |- *; intros; discriminate; fail).",
                        "VernacExtend",
                        "18c5ea4dbd3262299326cc258bda076dd8a1f562"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_mult_simpl_l",
            "line_nb": 653,
            "steps": [
                {
                    "command": [
                        "intros a b0 c H H0; apply Zgt_lt.",
                        "VernacExtend",
                        "cecb4e49fc2f876ddb9af8986fcd5186a63fda26"
                    ]
                },
                {
                    "command": [
                        "apply Zmult_gt_reg_r with (p := c); try apply Zlt_gt; auto with zarith.",
                        "VernacExtend",
                        "72f1d7852cf03292af2a16a91fba13b38b9dc641"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => Zmult_comm x c); auto with zarith.",
                        "VernacExtend",
                        "8f505a8aa73a2d486ed71fc20ed1e28948a3ba6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_eq_bool_correct",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "intros p q; generalize p; elim q; simpl in |- *; auto; clear p q.",
                        "VernacExtend",
                        "231afab7520d92eba568ef806d8ec31a22174249"
                    ]
                },
                {
                    "command": [
                        "intros p Rec q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail).",
                        "VernacExtend",
                        "3e3a62520812c745cce5732de4034aa35ac7b014"
                    ]
                },
                {
                    "command": [
                        "intros q'; generalize (Rec q'); case (pos_eq_bool q' p); simpl in |- *; auto.",
                        "VernacExtend",
                        "f7acaee34c416d8e87b59f381e87a5b66b6328d7"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H1; injection H1; auto.",
                        "VernacExtend",
                        "c510d2ffd6716625754242ce02702b1691e24d9d"
                    ]
                },
                {
                    "command": [
                        "intros p Rec q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail).",
                        "VernacExtend",
                        "3e3a62520812c745cce5732de4034aa35ac7b014"
                    ]
                },
                {
                    "command": [
                        "intros q'; generalize (Rec q'); case (pos_eq_bool q' p); simpl in |- *; auto.",
                        "VernacExtend",
                        "f7acaee34c416d8e87b59f381e87a5b66b6328d7"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H1; injection H1; auto.",
                        "VernacExtend",
                        "c510d2ffd6716625754242ce02702b1691e24d9d"
                    ]
                },
                {
                    "command": [
                        "intros q; case q; simpl in |- *; try (intros; red in |- *; intros; discriminate; fail); auto.",
                        "VernacExtend",
                        "2e48f42f4bc65ecb28bac44b9d4b0823719fd733"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_O_1",
            "line_nb": 671,
            "steps": [
                {
                    "command": [
                        "red in |- *; simpl in |- *; auto; intros; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "0c029ea2114f1526b4f0bfb5307eb303ec5c6fbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_eq_bool_correct",
            "line_nb": 676,
            "steps": [
                {
                    "command": [
                        "intros p q; case p; case q; simpl in |- *; auto; try (intros; red in |- *; intros; discriminate; fail).",
                        "VernacExtend",
                        "818dbcc4adfa743e40e9bab405d01c63ea3b47ae"
                    ]
                },
                {
                    "command": [
                        "intros p' q'; generalize (pos_eq_bool_correct q' p'); case (pos_eq_bool q' p'); simpl in |- *; auto.",
                        "VernacExtend",
                        "f2908860dd3b54a685c05dcf2a1d1393e643480a"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H1; injection H1; auto.",
                        "VernacExtend",
                        "c510d2ffd6716625754242ce02702b1691e24d9d"
                    ]
                },
                {
                    "command": [
                        "intros p' q'; generalize (pos_eq_bool_correct q' p'); case (pos_eq_bool q' p'); simpl in |- *; auto.",
                        "VernacExtend",
                        "f2908860dd3b54a685c05dcf2a1d1393e643480a"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H1; injection H1; auto.",
                        "VernacExtend",
                        "c510d2ffd6716625754242ce02702b1691e24d9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_mult_ZERO",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "intros x y; case x; case y; unfold Zlt in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "d6b0d1877813893e2c1ede7c2814c2bc8a70ead2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zminus_ZERO",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; rewrite (Zminus_diag_reverse z2); auto with zarith.",
                        "VernacExtend",
                        "7734b1c9cec22d6bbfee1f22993a3d16e2ca273d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zminus_ZERO",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; rewrite (Zminus_diag_reverse z2); auto with zarith.",
                        "VernacExtend",
                        "7734b1c9cec22d6bbfee1f22993a3d16e2ca273d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zpred_Zpred",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; apply Zsucc_le_reg.",
                        "VernacExtend",
                        "cddc5afdc7a0551335c1208ceb9e01ed8b02a176"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Zsucc_pred; auto.",
                        "VernacExtend",
                        "f60c60dc658e2f30b236bf972332c47aa739ae2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_ZERO_Zabs",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "intros z; case z; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "6105546958faee2b3d0396125c1cb88d37b07c55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zabs_inv1",
            "line_nb": 705,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
                        "VernacExtend",
                        "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_le_trans with (- (0))%Z; auto with zarith.",
                        "VernacExtend",
                        "8e0361723e864b3c9274cfa86d0581e74b3e3c98"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_Zopp; apply Zle_lt_trans with (2 := H); auto with zarith.",
                        "VernacExtend",
                        "5029be68730d6bcecb92704e657647ef58941fc1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zopp_involutive z1); rewrite <- (Zabs_eq_opp z1); auto with zarith.",
                        "VernacExtend",
                        "296f921589fddb1adbc931b7cd1d4e45e3a0629e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zabs_inv2",
            "line_nb": 711,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zabs_inv1",
            "line_nb": 714,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
                        "VernacExtend",
                        "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (- (0))%Z; auto with zarith.",
                        "VernacExtend",
                        "a31ffa08cf78a0b8e230c3d25b3d16528cc44041"
                    ]
                },
                {
                    "command": [
                        "apply Zle_Zopp; apply Zle_trans with (2 := H); auto with zarith.",
                        "VernacExtend",
                        "c56adebfec8099804be1289d486cb173c994898a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zopp_involutive z1); rewrite <- (Zabs_eq_opp z1); auto with zarith.",
                        "VernacExtend",
                        "296f921589fddb1adbc931b7cd1d4e45e3a0629e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zabs_inv2",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; case (Zle_or_lt 0 z1); intros H1.",
                        "VernacExtend",
                        "c42539b24dce6e29ae917de3c3ed699bc2b9c470"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Zabs_eq z1); auto.",
                        "VernacExtend",
                        "26af6f49b81cf80e1da356b2cda776f9a87a0ef1"
                    ]
                },
                {
                    "command": [
                        "apply Zle_trans with (Zabs z1); auto with zarith.",
                        "VernacExtend",
                        "5bca9dbc419727b473ae4224fbc546d59b2c4d0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zabs_Zpred",
            "line_nb": 725,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H H0; case (Zle_or_lt 0 z1); intros H1.",
                        "VernacExtend",
                        "bb591b689c7e18433eb78ec4cdbda372988f05cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_eq; auto with zarith.",
                        "VernacExtend",
                        "e3b6647506c6d43441146989691d7c27f1722b7e"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_eq in H; auto with zarith.",
                        "VernacExtend",
                        "93e83bd06d8809a354ca65794cc5870f23bb9e85"
                    ]
                },
                {
                    "command": [
                        "apply Zlt_trans with (2 := H).",
                        "VernacExtend",
                        "fe4e334386e5096bbad64309e8b41fa83aa17c71"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zabs_eq_opp; auto with zarith.",
                        "VernacExtend",
                        "10a25b2896598a806019edb32340d86af1662493"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_n_Zpred",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; rewrite (Zsucc_pred z1); rewrite (Zsucc_pred z2); auto with zarith.",
                        "VernacExtend",
                        "fcd46f756482fb05926113edd37843d4b55bf451"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpred_Zopp_Zs",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "intros z; unfold Zpred, Zsucc in |- *; ring.",
                        "VernacExtend",
                        "1e0fc0dba4c22b4e2d03997c1e475ac7afcba7e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_1_O",
            "line_nb": 738,
            "steps": [
                {
                    "command": [
                        "intros z H; apply Zsucc_lt_reg; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "13b568d216953ba931db48ae348308657141784a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_not_eq",
            "line_nb": 742,
            "steps": [
                {
                    "command": [
                        "intros p q H; Contradict H; rewrite H; auto with zarith.",
                        "VernacExtend",
                        "05951237a1baa77b2ff379660b6a64cff29e5197"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_not_eq_rev",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "intros p q H; Contradict H; rewrite H; auto with zarith.",
                        "VernacExtend",
                        "05951237a1baa77b2ff379660b6a64cff29e5197"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zpred_Zlt",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; apply Zsucc_lt_reg; rewrite <- Zsucc_pred; auto with zarith.",
                        "VernacExtend",
                        "8f93269f3d47f901076d404d5341e3b1ade2cb72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_Zpred_inv",
            "line_nb": 753,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H; rewrite (Zsucc_pred z2); auto with zarith.",
                        "VernacExtend",
                        "7253ad7259b74811af5cb8cf558e3d06a253b3b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zabs_intro",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "intros P z; case z; simpl in |- *; auto.",
                        "VernacExtend",
                        "74c7855dccbab72f6c8bcfc7b6fcce7c83ef34e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpred_Zle_Zabs_intro",
            "line_nb": 759,
            "steps": [
                {
                    "command": [
                        "intros z1 z2 H H0; apply Zle_Zpred_inv.",
                        "VernacExtend",
                        "d6b53b8cf0e50e334bfb7f250d90c2053d782d2a"
                    ]
                },
                {
                    "command": [
                        "apply Zabs_intro with (P := fun x => (x <= Zpred z2)%Z); auto with zarith.",
                        "VernacExtend",
                        "d9261a29a0c9029ae5606941d7e91103127f7c09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_ZERO_Zle_ONE",
            "line_nb": 763,
            "steps": [
                {
                    "command": [
                        "intros z H; replace 1%Z with (Zsucc 0); auto with zarith; simpl in |- *; auto.",
                        "VernacExtend",
                        "3029e211dc40133c6009040f4828068f2f17ac9c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ptonat_def1",
            "line_nb": 767,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "5d26b3eda100a978683e4fe4c3388c6351b98744"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_S_le",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "intros p q; unfold lt in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "81036a0e1f03ad383b048292cf5c9661fba2cb45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_Zabs_intro",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "intros z1 z2; case z1; case z2; simpl in |- *; auto with zarith.",
                        "VernacExtend",
                        "c799c41fd6bd2e9a200c1083d3a8c25dd908f18e"
                    ]
                },
                {
                    "command": [
                        "intros p p0 H H0; change (- Zneg p0 < - Zneg p)%Z in |- *; auto with zarith.",
                        "VernacExtend",
                        "835d93925d97854309c3544df3ee76876ff361f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}