{
    "filename": "Fcomp.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Float.",
            "VernacRequire",
            "d976a02081ba42068b28c552d3e3ca3f8f98c03a"
        ],
        [
            "Section comparisons.",
            "VernacBeginSection",
            "522397f3b04243377c5a6908c6201d46f1d54fb1"
        ],
        [
            "Variable radix : Z.",
            "VernacAssumption",
            "2349b77d134e0c9bb013a8bdca0020ca16fc023b"
        ],
        [
            "Hypothesis radixMoreThanOne : (1 < radix)%Z.",
            "VernacAssumption",
            "f4d3774b2275f4c4c3af941091d4d99f9a2129aa"
        ],
        [
            "Let radixMoreThanZERO := Zlt_1_O _ (Zlt_le_weak _ _ radixMoreThanOne).",
            "VernacDefinition",
            "b73ccff345a4fc730c8134dcd05adb7f1928fae7"
        ],
        [
            "Hint Resolve radixMoreThanZERO: zarith.",
            "VernacHints",
            "5a4a320eb610749621ef38850390d7141dc0d330"
        ],
        [
            "Definition Fdiff (x y : float) := (Fnum x * Zpower_nat radix (Zabs_nat (Fexp x - Zmin (Fexp x) (Fexp y))) - Fnum y * Zpower_nat radix (Zabs_nat (Fexp y - Zmin (Fexp x) (Fexp y))))%Z.",
            "VernacDefinition",
            "86818d699ee97d9194ece06fc9024cd37b84d937"
        ],
        [
            "Let FtoRradix := FtoR radix.",
            "VernacDefinition",
            "5aa29a9595c6e9e03b28c6d232299552ec761ad7"
        ],
        [
            "Local Coercion FtoRradix : float >-> R.",
            "VernacCoercion",
            "cec6b845059d434f72dda1a67638af64e1fb0628"
        ],
        [
            "Theorem Fdiff_correct : forall x y : float, (Fdiff x y * powerRZ radix (Zmin (Fexp x) (Fexp y)))%R = (x - y)%R.",
            "VernacStartTheoremProof",
            "f875cedd6039cf480a1695832067b0311b165583"
        ],
        [
            "intros x y; unfold Fdiff in |- *.",
            "VernacExtend",
            "76aa140432270b515537b21f663dd2de2ee7c4f3"
        ],
        [
            "rewrite <- Z_R_minus.",
            "VernacExtend",
            "f7f6d8d1cb517a19b80ecb78fa526746803e6aed"
        ],
        [
            "rewrite Rmult_comm; rewrite Rmult_minus_distr_l.",
            "VernacExtend",
            "63fb23dcefdbf601d276be783739b389b097b48a"
        ],
        [
            "repeat rewrite Rmult_IZR.",
            "VernacExtend",
            "698ea9ac77424dc4343f685ab3be109c5d91656d"
        ],
        [
            "repeat rewrite Zpower_nat_Z_powerRZ; auto.",
            "VernacExtend",
            "8b9f7ae49db18c49fa09188989a50d186e45e5d4"
        ],
        [
            "rewrite (Rmult_comm (Fnum x)); rewrite (Rmult_comm (Fnum y)).",
            "VernacExtend",
            "f8de3578794078b2fe1925016cd7c67f4cf09b73"
        ],
        [
            "repeat rewrite <- Rmult_assoc.",
            "VernacExtend",
            "645aebe2c3685a4f868a05a2372130cedecea85e"
        ],
        [
            "repeat rewrite <- powerRZ_add; auto with real zarith.",
            "VernacExtend",
            "a2907b5a13819945d5f81d8433c425d2bee3e63b"
        ],
        [
            "repeat rewrite inj_abs; auto with arith.",
            "VernacExtend",
            "42bc7ee81db2e5d739ae69d7b381a6fd11053475"
        ],
        [
            "repeat rewrite Zplus_minus; auto.",
            "VernacExtend",
            "85948e0683f08bc010453645f4467167ef8a8c45"
        ],
        [
            "rewrite (fun t : R => Rmult_comm t (Fnum x)); rewrite (fun t : R => Rmult_comm t (Fnum y)); auto.",
            "VernacExtend",
            "0a196f4155eefa56460754d3810c150c99d1f54b"
        ],
        [
            "apply Zplus_le_reg_l with (p := Zmin (Fexp x) (Fexp y)); auto with arith.",
            "VernacExtend",
            "18b4da19b1a5b4faa6bb777ee8452862ff7fc237"
        ],
        [
            "rewrite Zplus_minus; rewrite Zplus_0_r; apply Zle_min_r; auto.",
            "VernacExtend",
            "32c17289278e3bb246014f7513f09c2c1434a4b4"
        ],
        [
            "apply Zplus_le_reg_l with (p := Zmin (Fexp x) (Fexp y)); auto with arith.",
            "VernacExtend",
            "18b4da19b1a5b4faa6bb777ee8452862ff7fc237"
        ],
        [
            "rewrite Zplus_minus; rewrite Zplus_0_r; apply Zle_min_l; auto.",
            "VernacExtend",
            "5c45abebcdb06e08c394505f59f5963eb4949bf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Feq (x y : float) := x = y :>R.",
            "VernacDefinition",
            "9568f11eb44abea075017dc1e1eab6c088c5982c"
        ],
        [
            "Definition Fle (x y : float) := (x <= y)%R.",
            "VernacDefinition",
            "b4968da3bf80a975f524478b6ecb7a236f7a699c"
        ],
        [
            "Definition Flt (x y : float) := (x < y)%R.",
            "VernacDefinition",
            "4925f1313122842bf291e41bb71b2c22565d023c"
        ],
        [
            "Definition Fge (x y : float) := (x >= y)%R.",
            "VernacDefinition",
            "9cf85ad8586cb2fe6710b9383ea74ec7fe105de8"
        ],
        [
            "Definition Fgt (x y : float) := (x > y)%R.",
            "VernacDefinition",
            "96803ae9d10a207de0fc288342ff72a9ccb14d03"
        ],
        [
            "Definition Fcompare (x y : float) := (Fdiff x y ?= 0)%Z.",
            "VernacDefinition",
            "b13100a730744b701e046f21f1018794e2d5730f"
        ],
        [
            "Definition Feq_bool (x y : float) := match Fcompare x y with | Eq => true | _ => false end.",
            "VernacDefinition",
            "58f96ccb931eb914c76cc346e4d54f2b2af9b160"
        ],
        [
            "Theorem Feq_bool_correct_t : forall x y : float, Feq_bool x y = true -> Feq x y.",
            "VernacStartTheoremProof",
            "280e2c426564a1e4d7229c8a6320f6ab9d6c4ea0"
        ],
        [
            "intros x y H'; red in |- *.",
            "VernacExtend",
            "c7aeab67cf3191970d40b4aacad3ec70329b8fe0"
        ],
        [
            "apply Rplus_eq_reg_l with (r := (- y)%R).",
            "VernacExtend",
            "a58502470d3fd1eb2e4f98c1748b1b386d223ef5"
        ],
        [
            "repeat rewrite (Rplus_comm (- y)).",
            "VernacExtend",
            "98227b0b3ff74e2bf717950670264b152f0a54d1"
        ],
        [
            "rewrite Rplus_opp_r.",
            "VernacExtend",
            "0b42d27f90670486f4fe47560bedca46e1efb1ec"
        ],
        [
            "change ((x - y)%R = 0%R) in |- *.",
            "VernacExtend",
            "bc8723298f20d4ef6a42d6ce690fd8526166fd28"
        ],
        [
            "rewrite <- Fdiff_correct.",
            "VernacExtend",
            "b17a9a6dcabbfa5dad8e2f9a73448e535bee964d"
        ],
        [
            "apply Rmult_eq_0_compat_r; auto.",
            "VernacExtend",
            "d139c38a44e4f016f65bc8dd0eeeed7e9270123f"
        ],
        [
            "cut (Fdiff x y = 0%Z); [ intros H; rewrite H | idtac ]; auto with real.",
            "VernacExtend",
            "2165ebd663c982d096f1358ed4aeae31b274e8e3"
        ],
        [
            "apply Zcompare_EGAL.",
            "VernacExtend",
            "c4df8f8981700fbbdf4e85056c43ba0a020308ab"
        ],
        [
            "generalize H'; unfold Feq_bool, Fcompare in |- *.",
            "VernacExtend",
            "62fb4fcaddf3f3e00220b5842c052ecc825400b7"
        ],
        [
            "case (Fdiff x y ?= 0)%Z;auto; intros; discriminate.",
            "VernacExtend",
            "3b8aa571603c2e4a84e04bd55d81eb6302d2733c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Feq_bool_correct_r : forall x y : float, Feq x y -> Feq_bool x y = true.",
            "VernacStartTheoremProof",
            "c7bdd70bdd46d0d4bfefa179db90e0b0d982365c"
        ],
        [
            "intros x y H'; cut ((x - y)%R = 0%R).",
            "VernacExtend",
            "9355f0cbe22495e520c163142bc97c5a79560e09"
        ],
        [
            "rewrite <- Fdiff_correct; intros H'1; case Rmult_integral with (1 := H'1).",
            "VernacExtend",
            "2be571ff7238baf400b44fea3d08db42a240a1b9"
        ],
        [
            "intros H'0; unfold Feq_bool, Fcompare in |- *.",
            "VernacExtend",
            "ecdab689235c66b54a684d159d11db022244f86c"
        ],
        [
            "rewrite eq_IZR_R0 with (1 := H'0); auto.",
            "VernacExtend",
            "88c87b8f73d9706ece88e1752d917fb2da5ca765"
        ],
        [
            "intros H'0; Contradict H'0.",
            "VernacExtend",
            "e1748d32f391aa650d2d7e9c1ce5bc6bdbea43b2"
        ],
        [
            "case (Zmin (Fexp x) (Fexp y)); simpl in |- *; auto with real zarith.",
            "VernacExtend",
            "3f01e1341f4110ac5da17a4cb6518c4c0ffe2e97"
        ],
        [
            "apply Rplus_eq_reg_l with (r := FtoR radix y); auto with real.",
            "VernacExtend",
            "85ff99cfdb1a94d235a7b89e7c45b3911c6403a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Feq_bool_correct_f : forall x y : float, Feq_bool x y = false -> ~ Feq x y.",
            "VernacStartTheoremProof",
            "732d075be6607ab41f6319ed58f6a0835670d05b"
        ],
        [
            "intros x y H'; Contradict H'.",
            "VernacExtend",
            "77e195d8d6f45d9d7609fe796622f56edc9e88a3"
        ],
        [
            "rewrite Feq_bool_correct_r; auto with arith.",
            "VernacExtend",
            "d56abc065c7698c3b753c65563d24e84fe4f9976"
        ],
        [
            "red in |- *; intros H'0; discriminate.",
            "VernacExtend",
            "473b2aedfbd4d38264de79be91972de9c94f9875"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Flt_bool (x y : float) := match Fcompare x y with | Lt => true | _ => false end.",
            "VernacDefinition",
            "5e7a61127a84828217b428110c99c3dd1845fe96"
        ],
        [
            "Theorem Flt_bool_correct_t : forall x y : float, Flt_bool x y = true -> Flt x y.",
            "VernacStartTheoremProof",
            "208a2dbff453fb71310849a9cd07560994ca51b2"
        ],
        [
            "intros x y H'; red in |- *.",
            "VernacExtend",
            "c7aeab67cf3191970d40b4aacad3ec70329b8fe0"
        ],
        [
            "apply Rplus_lt_reg_r with (r := (- y)%R).",
            "VernacExtend",
            "fbcc5df900cff521f7de6be021ad308821eacb04"
        ],
        [
            "repeat rewrite (Rplus_comm (- y)).",
            "VernacExtend",
            "98227b0b3ff74e2bf717950670264b152f0a54d1"
        ],
        [
            "rewrite Rplus_opp_r.",
            "VernacExtend",
            "0b42d27f90670486f4fe47560bedca46e1efb1ec"
        ],
        [
            "change (x - y < 0)%R in |- *.",
            "VernacExtend",
            "3cd32cfbee1b617489fb6e82a3b5fb42eed5e3e0"
        ],
        [
            "rewrite <- Fdiff_correct.",
            "VernacExtend",
            "b17a9a6dcabbfa5dad8e2f9a73448e535bee964d"
        ],
        [
            "replace 0%R with (powerRZ radix (Zmin (Fexp x) (Fexp y)) * 0)%R; auto with real arith.",
            "VernacExtend",
            "97fea976837b246e6f495388ae5914ba335db4da"
        ],
        [
            "rewrite (Rmult_comm (Fdiff x y)).",
            "VernacExtend",
            "ad1241d25b32c0b48ea655ddb63e82133696ab0a"
        ],
        [
            "apply Rmult_lt_compat_l; auto with real zarith.",
            "VernacExtend",
            "69b09e9e45c47fab1e5c88967427c2a6bc6497ee"
        ],
        [
            "replace 0%R with (IZR 0); auto with real arith.",
            "VernacExtend",
            "403ddcf0521ace794738852532f020b73a2d4818"
        ],
        [
            "apply Rlt_IZR; red in |- *.",
            "VernacExtend",
            "1d63d55699a4fea25ab7e5918519eba666c368c3"
        ],
        [
            "generalize H'; unfold Flt_bool, Fcompare in |- *.",
            "VernacExtend",
            "11893be8ded76a997b8fa8595ae53e3816607579"
        ],
        [
            "case (Fdiff x y ?= 0)%Z; auto; intros; try discriminate.",
            "VernacExtend",
            "4c82422b9f8d9f91f8eda5421c3a9f6f1c1d7b3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Flt_bool_correct_r : forall x y : float, Flt x y -> Flt_bool x y = true.",
            "VernacStartTheoremProof",
            "99c190e6218b7afaba717f8e85fe203a4b3c9cf4"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "cut (0 < y - x)%R; auto with arith.",
            "VernacExtend",
            "3da81a7b59554033979fb91325ccf9cb231f6189"
        ],
        [
            "2: apply Rplus_lt_reg_l with (r := FtoRradix x); rewrite Rplus_0_r; rewrite Rplus_minus; auto with real.",
            "VernacExtend",
            "4b6c653ca4b0eb26dd4d4bb5bfc3a05ea3606dbc"
        ],
        [
            "intros H'0.",
            "VernacExtend",
            "e8ea833695b450eab455d302901072f04fd3096d"
        ],
        [
            "cut (Fdiff x y < 0)%R; auto with arith.",
            "VernacExtend",
            "b4689794ef2c00f02f8752f6614cf1f461fed34e"
        ],
        [
            "intros H'1.",
            "VernacExtend",
            "27d12cfd315031f2731cee2bf5ecf81dd7f6b369"
        ],
        [
            "cut (Fdiff x y < 0)%Z; auto with zarith.",
            "VernacExtend",
            "e610cfca73401102a2947c3b9c6d21655c2415b0"
        ],
        [
            "intros H'2; generalize (Zlt_compare _ _ H'2); unfold Flt_bool, Fcompare, Zcompare in |- *; case (Fdiff x y); auto with arith; intros; contradiction.",
            "VernacExtend",
            "3d632d07f4c8e94c9a23e7160777dbafc016bf77"
        ],
        [
            "apply lt_IZR; auto with arith.",
            "VernacExtend",
            "9baad43abadeaa1d76ed914c574f0158c969dd04"
        ],
        [
            "apply (Rlt_monotony_contra_exp radix) with (z := Zmin (Fexp x) (Fexp y)); auto with arith real; rewrite Rmult_0_l.",
            "VernacExtend",
            "6ca6e405d6d6f0953d231ba837ccb41f7a23a751"
        ],
        [
            "rewrite Fdiff_correct; auto with real.",
            "VernacExtend",
            "3cf097be61bc5394f5238bc3c200b3118f47b7bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Flt_bool_correct_f : forall x y : float, Flt_bool x y = false -> Fle y x.",
            "VernacStartTheoremProof",
            "828333374bdfd8414b28a9188c3070f6ef351ffd"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "case (Rtotal_order (FtoRradix y) (FtoRradix x)); auto with real.",
            "VernacExtend",
            "9afef217895bbe2f4ad92743bbff0193c4a0d1bf"
        ],
        [
            "intros H'0; red in |- *; apply Rlt_le; auto with real.",
            "VernacExtend",
            "298486b6d4604d665469a34f5f788345a1e9743e"
        ],
        [
            "intros H'0; elim H'0; clear H'0; intros H'1.",
            "VernacExtend",
            "c1cb7e7bcc9d20cc35fabf602a6197b5703c4fe7"
        ],
        [
            "red in |- *; rewrite H'1; auto with real.",
            "VernacExtend",
            "a411a58170fdaf991300c232b4a221a57e85aceb"
        ],
        [
            "Contradict H'; rewrite Flt_bool_correct_r; auto with real.",
            "VernacExtend",
            "3fb79d40f4169aee6d2353252a03db51be0dd857"
        ],
        [
            "red in |- *; intros H'; discriminate.",
            "VernacExtend",
            "e49f786f26f3f0e4748894aa46257f4aef028dca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fle_bool (x y : float) := match Fcompare x y with | Lt => true | Eq => true | _ => false end.",
            "VernacDefinition",
            "d8332b5ed2bdedf27a03c0cd42820eca272860fa"
        ],
        [
            "Theorem Fle_bool_correct_t : forall x y : float, Fle_bool x y = true -> Fle x y.",
            "VernacStartTheoremProof",
            "c9fa313b22e3cb127bdda5790cd44e5b9cfb3e8a"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "cut (Feq x y \\/ Flt x y).",
            "VernacExtend",
            "cc5af4f7cb5beb7f1e55146fee29800ce2303c92"
        ],
        [
            "intros H; case H; intros H1; auto with real.",
            "VernacExtend",
            "861d02a69e1b3b2d86e21f167a72ad2d72054e61"
        ],
        [
            "red in |- *; apply Req_le; auto with real.",
            "VernacExtend",
            "e28d7d71208edc2e11a180d0883565e7d8271820"
        ],
        [
            "red in |- *; apply Rlt_le; auto with real.",
            "VernacExtend",
            "9b1e38969b4a8ffea60714b1881ec159842ed6d3"
        ],
        [
            "generalize H' (Feq_bool_correct_t x y) (Flt_bool_correct_t x y).",
            "VernacExtend",
            "26c9110853e759137e6dc26494599a9f7ea05427"
        ],
        [
            "unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto.",
            "VernacExtend",
            "278e1eb401a6f09e3d525121dec5d4d477b095d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fle_bool_correct_r : forall x y : float, Fle x y -> Fle_bool x y = true.",
            "VernacStartTheoremProof",
            "6a0ac8d3e4bd2f71b739b35e32a9b6b272a8529a"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "cut (Feq x y \\/ Flt x y).",
            "VernacExtend",
            "cc5af4f7cb5beb7f1e55146fee29800ce2303c92"
        ],
        [
            "intros H; case H; intros H1; auto with real.",
            "VernacExtend",
            "861d02a69e1b3b2d86e21f167a72ad2d72054e61"
        ],
        [
            "generalize (Feq_bool_correct_r x y).",
            "VernacExtend",
            "72dabec33bfa86ae3653d11b52bb06c411d31262"
        ],
        [
            "unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto.",
            "VernacExtend",
            "278e1eb401a6f09e3d525121dec5d4d477b095d8"
        ],
        [
            "generalize (Flt_bool_correct_r x y); unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto with arith.",
            "VernacExtend",
            "e8f701e90b890878a5e718f7e3f82f966dd8c37a"
        ],
        [
            "case H'; auto with arith.",
            "VernacExtend",
            "2561b3a3203a021f2e7cf3f4dee3d8bcdb0dcc3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fle_bool_correct_f : forall x y : float, Fle_bool x y = false -> Flt y x.",
            "VernacStartTheoremProof",
            "670410669def4ed01d02a0dae8357c6ac4930146"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "case (Rtotal_order (FtoRradix y) (FtoRradix x)); auto with real.",
            "VernacExtend",
            "9afef217895bbe2f4ad92743bbff0193c4a0d1bf"
        ],
        [
            "intros H'0; elim H'0; clear H'0; intros H'1.",
            "VernacExtend",
            "c1cb7e7bcc9d20cc35fabf602a6197b5703c4fe7"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "rewrite Fle_bool_correct_r; auto with real.",
            "VernacExtend",
            "96d32361ba2496dfec84d452c21032591dee475c"
        ],
        [
            "red in |- *; intros H'; discriminate.",
            "VernacExtend",
            "e49f786f26f3f0e4748894aa46257f4aef028dca"
        ],
        [
            "red in |- *; rewrite H'1; auto with real.",
            "VernacExtend",
            "a411a58170fdaf991300c232b4a221a57e85aceb"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "rewrite Fle_bool_correct_r; auto with real.",
            "VernacExtend",
            "96d32361ba2496dfec84d452c21032591dee475c"
        ],
        [
            "red in |- *; intros H'; discriminate.",
            "VernacExtend",
            "e49f786f26f3f0e4748894aa46257f4aef028dca"
        ],
        [
            "red in |- *; auto with real.",
            "VernacExtend",
            "1ad5623426f993f83c5fa8ec3e52ed5a1cbfa08e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fle_Zle : forall n1 n2 d : Z, (n1 <= n2)%Z -> Fle (Float n1 d) (Float n2 d).",
            "VernacStartTheoremProof",
            "72e81dc2b0ce620c7382f7a6678c346d070810ad"
        ],
        [
            "intros; unfold Fle, FtoRradix, FtoR in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "96fb04c5b720889b40e756161e7899de10232a30"
        ],
        [
            "case Zle_lt_or_eq with (1 := H); intros H1.",
            "VernacExtend",
            "29a53883cd34bb1f51f88f95df39de8db34fde78"
        ],
        [
            "apply Rlt_le; auto with real.",
            "VernacExtend",
            "e1bf079018a05b732af3de134a13c80fa1b905a3"
        ],
        [
            "rewrite <- H1; auto with real.",
            "VernacExtend",
            "e7882aea7937907bab29acf6ff343945ded01471"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Flt_Zlt : forall n1 n2 d : Z, (n1 < n2)%Z -> Flt (Float n1 d) (Float n2 d).",
            "VernacStartTheoremProof",
            "7fb7e88246f6d3d39489caa1acbfb502364c1d6f"
        ],
        [
            "intros; unfold Flt, FtoRradix, FtoR in |- *; simpl in |- *; auto with real.",
            "VernacExtend",
            "1ce61b6f77b819a40bc7cc0f83ddab9083aea24a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fle_Fge : forall x y : float, Fle x y -> Fge y x.",
            "VernacStartTheoremProof",
            "bdb7410229b099cacc425bb22d931597013412e5"
        ],
        [
            "unfold Fle, Fge in |- *; intros x y H'; auto with real.",
            "VernacExtend",
            "c32f0b6403a9619df9e84651d1deba9e8cb1503a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fge_Zge : forall n1 n2 d : Z, (n1 >= n2)%Z -> Fge (Float n1 d) (Float n2 d).",
            "VernacStartTheoremProof",
            "6b7bd7ee9540ad953bd92a75aa799e2dad397587"
        ],
        [
            "intros n1 n2 d H'; apply Fle_Fge; auto.",
            "VernacExtend",
            "7dab9f55030ab73854b0fcc660f99db8a74a5075"
        ],
        [
            "apply Fle_Zle; auto.",
            "VernacExtend",
            "5ff194bed5558eef22fe5ebf7b4e691afb1b32a0"
        ],
        [
            "apply Zge_le; auto.",
            "VernacExtend",
            "6315e3852328c6320ad13e5ade36967ee31001a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Flt_Fgt : forall x y : float, Flt x y -> Fgt y x.",
            "VernacStartTheoremProof",
            "442a8c8ea18fcf8153180d375f0306723f26b524"
        ],
        [
            "unfold Flt, Fgt in |- *; intros x y H'; auto.",
            "VernacExtend",
            "5935c5f16f45a3f19a48f5dfacaaacb58c368b1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fgt_Zgt : forall n1 n2 d : Z, (n1 > n2)%Z -> Fgt (Float n1 d) (Float n2 d).",
            "VernacStartTheoremProof",
            "943f8f1d060a432cfa267b3a57abab039b133551"
        ],
        [
            "intros n1 n2 d H'; apply Flt_Fgt; auto.",
            "VernacExtend",
            "b919612015aca6271db7ceb9402a3c041393b139"
        ],
        [
            "apply Flt_Zlt; auto.",
            "VernacExtend",
            "10c93fdb7eb5fb5a157876c249ea93a759bc7a7a"
        ],
        [
            "apply Zgt_lt; auto.",
            "VernacExtend",
            "e1ccf0cbc93caf36606344997065eb4d48fad340"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fle_refl : forall x y : float, Feq x y -> Fle x y.",
            "VernacStartTheoremProof",
            "3f666ccc995fce10b354252d701ee40c60a18c28"
        ],
        [
            "unfold Feq in |- *; unfold Fle in |- *; intros.",
            "VernacExtend",
            "4f74d5b0012972bb0ff38f8542860db656dd9b4c"
        ],
        [
            "rewrite H; auto with real.",
            "VernacExtend",
            "2bcba869bd08ba184a34101d890578e4f1a1d8ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fle_trans : forall x y z : float, Fle x y -> Fle y z -> Fle x z.",
            "VernacStartTheoremProof",
            "278d86908e52cecf956347caadf1f1232eed227b"
        ],
        [
            "unfold Fle in |- *; intros.",
            "VernacExtend",
            "5da6671d73080b25d9653d4fb2a7539e0786dd85"
        ],
        [
            "apply Rle_trans with (r2 := FtoR radix y); auto.",
            "VernacExtend",
            "b48e8e8120f64794f40937c70858f9929fc85298"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rlt_Fexp_eq_Zlt : forall x y : float, (x < y)%R -> Fexp x = Fexp y -> (Fnum x < Fnum y)%Z.",
            "VernacStartTheoremProof",
            "213a88245f84f2b908a3c65ac8f7b08064804371"
        ],
        [
            "intros x y H' H'0.",
            "VernacExtend",
            "bbba823d81241c63a29479e1a1d6ea98ba519935"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "apply (Rlt_monotony_contra_exp radix) with (z := Fexp x); auto with real arith.",
            "VernacExtend",
            "196dca46d80bf156edf9cac7ce818e5b0f1ad060"
        ],
        [
            "pattern (Fexp x) at 2 in |- *; rewrite H'0; auto.",
            "VernacExtend",
            "edbdf90925b73016de4d4a80383293b8d35249a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rle_Fexp_eq_Zle : forall x y : float, (x <= y)%R -> Fexp x = Fexp y -> (Fnum x <= Fnum y)%Z.",
            "VernacStartTheoremProof",
            "95eb78ddc3e7a91ea4dc5909a3db80c80d7499f0"
        ],
        [
            "intros x y H' H'0.",
            "VernacExtend",
            "bbba823d81241c63a29479e1a1d6ea98ba519935"
        ],
        [
            "apply le_IZR.",
            "VernacExtend",
            "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
        ],
        [
            "apply (Rle_monotony_contra_exp radix) with (z := Fexp x); auto with real arith.",
            "VernacExtend",
            "c19a408abceddf4b000e3a6dc8aefbf4626f9c99"
        ],
        [
            "pattern (Fexp x) at 2 in |- *; rewrite H'0; auto.",
            "VernacExtend",
            "edbdf90925b73016de4d4a80383293b8d35249a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem LtR0Fnum : forall p : float, (0 < p)%R -> (0 < Fnum p)%Z.",
            "VernacStartTheoremProof",
            "278d5a0264c0be359f2afd60705408a753e0bd3e"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "apply (Rlt_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
            "VernacExtend",
            "9418e9101120f61386990f628a66d6129b614a1b"
        ],
        [
            "simpl in |- *; rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "7445135562d91b8c911f0e277c8bb345ba84b88a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem LeR0Fnum : forall p : float, (0 <= p)%R -> (0 <= Fnum p)%Z.",
            "VernacStartTheoremProof",
            "3bcc74d330e3aab44e74318fafc8e7f0fea91e5f"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "apply le_IZR.",
            "VernacExtend",
            "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
        ],
        [
            "apply (Rle_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
            "VernacExtend",
            "fe4546564d217fef69b0bbeee2f0257a4751f8ac"
        ],
        [
            "simpl in |- *; rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "7445135562d91b8c911f0e277c8bb345ba84b88a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem LeFnumZERO : forall x : float, (0 <= Fnum x)%Z -> (0 <= x)%R.",
            "VernacStartTheoremProof",
            "83beb93a9435259f2f081b4fdb8ad12ec0b62185"
        ],
        [
            "intros x H'; unfold FtoRradix, FtoR in |- *.",
            "VernacExtend",
            "e15182e25f4fcc925877d3f8a22855c6779ca6a9"
        ],
        [
            "replace 0%R with (0%Z * 0%Z)%R; auto 6 with real zarith.",
            "VernacExtend",
            "c815e7ecb7262a0a2c61a66bba463af73da34cd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem R0LtFnum : forall p : float, (p < 0)%R -> (Fnum p < 0)%Z.",
            "VernacStartTheoremProof",
            "cc11c59cf2d64fd1cecf552395d437b9dd072eff"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "apply (Rlt_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
            "VernacExtend",
            "9418e9101120f61386990f628a66d6129b614a1b"
        ],
        [
            "simpl in |- *; rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "7445135562d91b8c911f0e277c8bb345ba84b88a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem R0LeFnum : forall p : float, (p <= 0)%R -> (Fnum p <= 0)%Z.",
            "VernacStartTheoremProof",
            "caabeae295be84aa938fb027b282904a29616d1c"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "apply le_IZR.",
            "VernacExtend",
            "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
        ],
        [
            "apply (Rle_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
            "VernacExtend",
            "fe4546564d217fef69b0bbeee2f0257a4751f8ac"
        ],
        [
            "simpl in |- *; rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "7445135562d91b8c911f0e277c8bb345ba84b88a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem LeZEROFnum : forall x : float, (Fnum x <= 0)%Z -> (x <= 0)%R.",
            "VernacStartTheoremProof",
            "f99cd2e9a0302a1425b45062a3c39a0b0b0dc4f4"
        ],
        [
            "intros x H'; unfold FtoRradix, FtoR in |- *.",
            "VernacExtend",
            "e15182e25f4fcc925877d3f8a22855c6779ca6a9"
        ],
        [
            "apply Ropp_le_cancel; rewrite Ropp_0; rewrite <- Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "9e99718e33df071b6b6918bdf1d1b9611fe85e30"
        ],
        [
            "replace 0%R with (- 0%Z * 0)%R; auto 6 with real zarith.",
            "VernacExtend",
            "dbef6914414e089314fa13ad9fed8b149424f746"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End comparisons.",
            "VernacEndSegment",
            "4ecaf785ca964de0d53e99f3e7e19269cabec2c3"
        ],
        [
            "Hint Resolve LeFnumZERO LeZEROFnum: float.",
            "VernacHints",
            "d0af71dbfc144df62204e9d62add9ae239c3e240"
        ]
    ],
    "proofs": [
        {
            "name": "Fdiff_correct",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold Fdiff in |- *.",
                        "VernacExtend",
                        "76aa140432270b515537b21f663dd2de2ee7c4f3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z_R_minus.",
                        "VernacExtend",
                        "f7f6d8d1cb517a19b80ecb78fa526746803e6aed"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm; rewrite Rmult_minus_distr_l.",
                        "VernacExtend",
                        "63fb23dcefdbf601d276be783739b389b097b48a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_IZR.",
                        "VernacExtend",
                        "698ea9ac77424dc4343f685ab3be109c5d91656d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zpower_nat_Z_powerRZ; auto.",
                        "VernacExtend",
                        "8b9f7ae49db18c49fa09188989a50d186e45e5d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Fnum x)); rewrite (Rmult_comm (Fnum y)).",
                        "VernacExtend",
                        "f8de3578794078b2fe1925016cd7c67f4cf09b73"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "645aebe2c3685a4f868a05a2372130cedecea85e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- powerRZ_add; auto with real zarith.",
                        "VernacExtend",
                        "a2907b5a13819945d5f81d8433c425d2bee3e63b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_abs; auto with arith.",
                        "VernacExtend",
                        "42bc7ee81db2e5d739ae69d7b381a6fd11053475"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zplus_minus; auto.",
                        "VernacExtend",
                        "85948e0683f08bc010453645f4467167ef8a8c45"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun t : R => Rmult_comm t (Fnum x)); rewrite (fun t : R => Rmult_comm t (Fnum y)); auto.",
                        "VernacExtend",
                        "0a196f4155eefa56460754d3810c150c99d1f54b"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_le_reg_l with (p := Zmin (Fexp x) (Fexp y)); auto with arith.",
                        "VernacExtend",
                        "18b4da19b1a5b4faa6bb777ee8452862ff7fc237"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_minus; rewrite Zplus_0_r; apply Zle_min_r; auto.",
                        "VernacExtend",
                        "32c17289278e3bb246014f7513f09c2c1434a4b4"
                    ]
                },
                {
                    "command": [
                        "apply Zplus_le_reg_l with (p := Zmin (Fexp x) (Fexp y)); auto with arith.",
                        "VernacExtend",
                        "18b4da19b1a5b4faa6bb777ee8452862ff7fc237"
                    ]
                },
                {
                    "command": [
                        "rewrite Zplus_minus; rewrite Zplus_0_r; apply Zle_min_l; auto.",
                        "VernacExtend",
                        "5c45abebcdb06e08c394505f59f5963eb4949bf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Feq_bool_correct_t",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros x y H'; red in |- *.",
                        "VernacExtend",
                        "c7aeab67cf3191970d40b4aacad3ec70329b8fe0"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (r := (- y)%R).",
                        "VernacExtend",
                        "a58502470d3fd1eb2e4f98c1748b1b386d223ef5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Rplus_comm (- y)).",
                        "VernacExtend",
                        "98227b0b3ff74e2bf717950670264b152f0a54d1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "0b42d27f90670486f4fe47560bedca46e1efb1ec"
                    ]
                },
                {
                    "command": [
                        "change ((x - y)%R = 0%R) in |- *.",
                        "VernacExtend",
                        "bc8723298f20d4ef6a42d6ce690fd8526166fd28"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fdiff_correct.",
                        "VernacExtend",
                        "b17a9a6dcabbfa5dad8e2f9a73448e535bee964d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_0_compat_r; auto.",
                        "VernacExtend",
                        "d139c38a44e4f016f65bc8dd0eeeed7e9270123f"
                    ]
                },
                {
                    "command": [
                        "cut (Fdiff x y = 0%Z); [ intros H; rewrite H | idtac ]; auto with real.",
                        "VernacExtend",
                        "2165ebd663c982d096f1358ed4aeae31b274e8e3"
                    ]
                },
                {
                    "command": [
                        "apply Zcompare_EGAL.",
                        "VernacExtend",
                        "c4df8f8981700fbbdf4e85056c43ba0a020308ab"
                    ]
                },
                {
                    "command": [
                        "generalize H'; unfold Feq_bool, Fcompare in |- *.",
                        "VernacExtend",
                        "62fb4fcaddf3f3e00220b5842c052ecc825400b7"
                    ]
                },
                {
                    "command": [
                        "case (Fdiff x y ?= 0)%Z;auto; intros; discriminate.",
                        "VernacExtend",
                        "3b8aa571603c2e4a84e04bd55d81eb6302d2733c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Feq_bool_correct_r",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros x y H'; cut ((x - y)%R = 0%R).",
                        "VernacExtend",
                        "9355f0cbe22495e520c163142bc97c5a79560e09"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fdiff_correct; intros H'1; case Rmult_integral with (1 := H'1).",
                        "VernacExtend",
                        "2be571ff7238baf400b44fea3d08db42a240a1b9"
                    ]
                },
                {
                    "command": [
                        "intros H'0; unfold Feq_bool, Fcompare in |- *.",
                        "VernacExtend",
                        "ecdab689235c66b54a684d159d11db022244f86c"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_IZR_R0 with (1 := H'0); auto.",
                        "VernacExtend",
                        "88c87b8f73d9706ece88e1752d917fb2da5ca765"
                    ]
                },
                {
                    "command": [
                        "intros H'0; Contradict H'0.",
                        "VernacExtend",
                        "e1748d32f391aa650d2d7e9c1ce5bc6bdbea43b2"
                    ]
                },
                {
                    "command": [
                        "case (Zmin (Fexp x) (Fexp y)); simpl in |- *; auto with real zarith.",
                        "VernacExtend",
                        "3f01e1341f4110ac5da17a4cb6518c4c0ffe2e97"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (r := FtoR radix y); auto with real.",
                        "VernacExtend",
                        "85ff99cfdb1a94d235a7b89e7c45b3911c6403a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Feq_bool_correct_f",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros x y H'; Contradict H'.",
                        "VernacExtend",
                        "77e195d8d6f45d9d7609fe796622f56edc9e88a3"
                    ]
                },
                {
                    "command": [
                        "rewrite Feq_bool_correct_r; auto with arith.",
                        "VernacExtend",
                        "d56abc065c7698c3b753c65563d24e84fe4f9976"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'0; discriminate.",
                        "VernacExtend",
                        "473b2aedfbd4d38264de79be91972de9c94f9875"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Flt_bool_correct_t",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros x y H'; red in |- *.",
                        "VernacExtend",
                        "c7aeab67cf3191970d40b4aacad3ec70329b8fe0"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_r with (r := (- y)%R).",
                        "VernacExtend",
                        "fbcc5df900cff521f7de6be021ad308821eacb04"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Rplus_comm (- y)).",
                        "VernacExtend",
                        "98227b0b3ff74e2bf717950670264b152f0a54d1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "0b42d27f90670486f4fe47560bedca46e1efb1ec"
                    ]
                },
                {
                    "command": [
                        "change (x - y < 0)%R in |- *.",
                        "VernacExtend",
                        "3cd32cfbee1b617489fb6e82a3b5fb42eed5e3e0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Fdiff_correct.",
                        "VernacExtend",
                        "b17a9a6dcabbfa5dad8e2f9a73448e535bee964d"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (powerRZ radix (Zmin (Fexp x) (Fexp y)) * 0)%R; auto with real arith.",
                        "VernacExtend",
                        "97fea976837b246e6f495388ae5914ba335db4da"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Fdiff x y)).",
                        "VernacExtend",
                        "ad1241d25b32c0b48ea655ddb63e82133696ab0a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l; auto with real zarith.",
                        "VernacExtend",
                        "69b09e9e45c47fab1e5c88967427c2a6bc6497ee"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (IZR 0); auto with real arith.",
                        "VernacExtend",
                        "403ddcf0521ace794738852532f020b73a2d4818"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_IZR; red in |- *.",
                        "VernacExtend",
                        "1d63d55699a4fea25ab7e5918519eba666c368c3"
                    ]
                },
                {
                    "command": [
                        "generalize H'; unfold Flt_bool, Fcompare in |- *.",
                        "VernacExtend",
                        "11893be8ded76a997b8fa8595ae53e3816607579"
                    ]
                },
                {
                    "command": [
                        "case (Fdiff x y ?= 0)%Z; auto; intros; try discriminate.",
                        "VernacExtend",
                        "4c82422b9f8d9f91f8eda5421c3a9f6f1c1d7b3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Flt_bool_correct_f",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "case (Rtotal_order (FtoRradix y) (FtoRradix x)); auto with real.",
                        "VernacExtend",
                        "9afef217895bbe2f4ad92743bbff0193c4a0d1bf"
                    ]
                },
                {
                    "command": [
                        "intros H'0; red in |- *; apply Rlt_le; auto with real.",
                        "VernacExtend",
                        "298486b6d4604d665469a34f5f788345a1e9743e"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; clear H'0; intros H'1.",
                        "VernacExtend",
                        "c1cb7e7bcc9d20cc35fabf602a6197b5703c4fe7"
                    ]
                },
                {
                    "command": [
                        "red in |- *; rewrite H'1; auto with real.",
                        "VernacExtend",
                        "a411a58170fdaf991300c232b4a221a57e85aceb"
                    ]
                },
                {
                    "command": [
                        "Contradict H'; rewrite Flt_bool_correct_r; auto with real.",
                        "VernacExtend",
                        "3fb79d40f4169aee6d2353252a03db51be0dd857"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; discriminate.",
                        "VernacExtend",
                        "e49f786f26f3f0e4748894aa46257f4aef028dca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_bool_correct_t",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "cut (Feq x y \\/ Flt x y).",
                        "VernacExtend",
                        "cc5af4f7cb5beb7f1e55146fee29800ce2303c92"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; intros H1; auto with real.",
                        "VernacExtend",
                        "861d02a69e1b3b2d86e21f167a72ad2d72054e61"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Req_le; auto with real.",
                        "VernacExtend",
                        "e28d7d71208edc2e11a180d0883565e7d8271820"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Rlt_le; auto with real.",
                        "VernacExtend",
                        "9b1e38969b4a8ffea60714b1881ec159842ed6d3"
                    ]
                },
                {
                    "command": [
                        "generalize H' (Feq_bool_correct_t x y) (Flt_bool_correct_t x y).",
                        "VernacExtend",
                        "26c9110853e759137e6dc26494599a9f7ea05427"
                    ]
                },
                {
                    "command": [
                        "unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto.",
                        "VernacExtend",
                        "278e1eb401a6f09e3d525121dec5d4d477b095d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_bool_correct_r",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "cut (Feq x y \\/ Flt x y).",
                        "VernacExtend",
                        "cc5af4f7cb5beb7f1e55146fee29800ce2303c92"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; intros H1; auto with real.",
                        "VernacExtend",
                        "861d02a69e1b3b2d86e21f167a72ad2d72054e61"
                    ]
                },
                {
                    "command": [
                        "generalize (Feq_bool_correct_r x y).",
                        "VernacExtend",
                        "72dabec33bfa86ae3653d11b52bb06c411d31262"
                    ]
                },
                {
                    "command": [
                        "unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto.",
                        "VernacExtend",
                        "278e1eb401a6f09e3d525121dec5d4d477b095d8"
                    ]
                },
                {
                    "command": [
                        "generalize (Flt_bool_correct_r x y); unfold Fle_bool, Feq_bool, Flt_bool in |- *; case (Fcompare x y); auto with arith.",
                        "VernacExtend",
                        "e8f701e90b890878a5e718f7e3f82f966dd8c37a"
                    ]
                },
                {
                    "command": [
                        "case H'; auto with arith.",
                        "VernacExtend",
                        "2561b3a3203a021f2e7cf3f4dee3d8bcdb0dcc3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_bool_correct_f",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "case (Rtotal_order (FtoRradix y) (FtoRradix x)); auto with real.",
                        "VernacExtend",
                        "9afef217895bbe2f4ad92743bbff0193c4a0d1bf"
                    ]
                },
                {
                    "command": [
                        "intros H'0; elim H'0; clear H'0; intros H'1.",
                        "VernacExtend",
                        "c1cb7e7bcc9d20cc35fabf602a6197b5703c4fe7"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "rewrite Fle_bool_correct_r; auto with real.",
                        "VernacExtend",
                        "96d32361ba2496dfec84d452c21032591dee475c"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; discriminate.",
                        "VernacExtend",
                        "e49f786f26f3f0e4748894aa46257f4aef028dca"
                    ]
                },
                {
                    "command": [
                        "red in |- *; rewrite H'1; auto with real.",
                        "VernacExtend",
                        "a411a58170fdaf991300c232b4a221a57e85aceb"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "rewrite Fle_bool_correct_r; auto with real.",
                        "VernacExtend",
                        "96d32361ba2496dfec84d452c21032591dee475c"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H'; discriminate.",
                        "VernacExtend",
                        "e49f786f26f3f0e4748894aa46257f4aef028dca"
                    ]
                },
                {
                    "command": [
                        "red in |- *; auto with real.",
                        "VernacExtend",
                        "1ad5623426f993f83c5fa8ec3e52ed5a1cbfa08e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_Zle",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros; unfold Fle, FtoRradix, FtoR in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "96fb04c5b720889b40e756161e7899de10232a30"
                    ]
                },
                {
                    "command": [
                        "case Zle_lt_or_eq with (1 := H); intros H1.",
                        "VernacExtend",
                        "29a53883cd34bb1f51f88f95df39de8db34fde78"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto with real.",
                        "VernacExtend",
                        "e1bf079018a05b732af3de134a13c80fa1b905a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; auto with real.",
                        "VernacExtend",
                        "e7882aea7937907bab29acf6ff343945ded01471"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Flt_Zlt",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros; unfold Flt, FtoRradix, FtoR in |- *; simpl in |- *; auto with real.",
                        "VernacExtend",
                        "1ce61b6f77b819a40bc7cc0f83ddab9083aea24a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_Fge",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "unfold Fle, Fge in |- *; intros x y H'; auto with real.",
                        "VernacExtend",
                        "c32f0b6403a9619df9e84651d1deba9e8cb1503a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fge_Zge",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros n1 n2 d H'; apply Fle_Fge; auto.",
                        "VernacExtend",
                        "7dab9f55030ab73854b0fcc660f99db8a74a5075"
                    ]
                },
                {
                    "command": [
                        "apply Fle_Zle; auto.",
                        "VernacExtend",
                        "5ff194bed5558eef22fe5ebf7b4e691afb1b32a0"
                    ]
                },
                {
                    "command": [
                        "apply Zge_le; auto.",
                        "VernacExtend",
                        "6315e3852328c6320ad13e5ade36967ee31001a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Flt_Fgt",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "unfold Flt, Fgt in |- *; intros x y H'; auto.",
                        "VernacExtend",
                        "5935c5f16f45a3f19a48f5dfacaaacb58c368b1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fgt_Zgt",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros n1 n2 d H'; apply Flt_Fgt; auto.",
                        "VernacExtend",
                        "b919612015aca6271db7ceb9402a3c041393b139"
                    ]
                },
                {
                    "command": [
                        "apply Flt_Zlt; auto.",
                        "VernacExtend",
                        "10c93fdb7eb5fb5a157876c249ea93a759bc7a7a"
                    ]
                },
                {
                    "command": [
                        "apply Zgt_lt; auto.",
                        "VernacExtend",
                        "e1ccf0cbc93caf36606344997065eb4d48fad340"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_refl",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "unfold Feq in |- *; unfold Fle in |- *; intros.",
                        "VernacExtend",
                        "4f74d5b0012972bb0ff38f8542860db656dd9b4c"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with real.",
                        "VernacExtend",
                        "2bcba869bd08ba184a34101d890578e4f1a1d8ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fle_trans",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "unfold Fle in |- *; intros.",
                        "VernacExtend",
                        "5da6671d73080b25d9653d4fb2a7539e0786dd85"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (r2 := FtoR radix y); auto.",
                        "VernacExtend",
                        "b48e8e8120f64794f40937c70858f9929fc85298"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_Fexp_eq_Zlt",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0.",
                        "VernacExtend",
                        "bbba823d81241c63a29479e1a1d6ea98ba519935"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_monotony_contra_exp radix) with (z := Fexp x); auto with real arith.",
                        "VernacExtend",
                        "196dca46d80bf156edf9cac7ce818e5b0f1ad060"
                    ]
                },
                {
                    "command": [
                        "pattern (Fexp x) at 2 in |- *; rewrite H'0; auto.",
                        "VernacExtend",
                        "edbdf90925b73016de4d4a80383293b8d35249a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_Fexp_eq_Zle",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros x y H' H'0.",
                        "VernacExtend",
                        "bbba823d81241c63a29479e1a1d6ea98ba519935"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR.",
                        "VernacExtend",
                        "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_monotony_contra_exp radix) with (z := Fexp x); auto with real arith.",
                        "VernacExtend",
                        "c19a408abceddf4b000e3a6dc8aefbf4626f9c99"
                    ]
                },
                {
                    "command": [
                        "pattern (Fexp x) at 2 in |- *; rewrite H'0; auto.",
                        "VernacExtend",
                        "edbdf90925b73016de4d4a80383293b8d35249a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LtR0Fnum",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
                        "VernacExtend",
                        "9418e9101120f61386990f628a66d6129b614a1b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "7445135562d91b8c911f0e277c8bb345ba84b88a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LeR0Fnum",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR.",
                        "VernacExtend",
                        "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
                        "VernacExtend",
                        "fe4546564d217fef69b0bbeee2f0257a4751f8ac"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "7445135562d91b8c911f0e277c8bb345ba84b88a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LeFnumZERO",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros x H'; unfold FtoRradix, FtoR in |- *.",
                        "VernacExtend",
                        "e15182e25f4fcc925877d3f8a22855c6779ca6a9"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (0%Z * 0%Z)%R; auto 6 with real zarith.",
                        "VernacExtend",
                        "c815e7ecb7262a0a2c61a66bba463af73da34cd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R0LtFnum",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
                        "VernacExtend",
                        "9418e9101120f61386990f628a66d6129b614a1b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "7445135562d91b8c911f0e277c8bb345ba84b88a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R0LeFnum",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR.",
                        "VernacExtend",
                        "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_monotony_contra_exp radix) with (z := Fexp p); auto with real arith.",
                        "VernacExtend",
                        "fe4546564d217fef69b0bbeee2f0257a4751f8ac"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "7445135562d91b8c911f0e277c8bb345ba84b88a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LeZEROFnum",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros x H'; unfold FtoRradix, FtoR in |- *.",
                        "VernacExtend",
                        "e15182e25f4fcc925877d3f8a22855c6779ca6a9"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_cancel; rewrite Ropp_0; rewrite <- Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "9e99718e33df071b6b6918bdf1d1b9611fe85e30"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (- 0%Z * 0)%R; auto 6 with real zarith.",
                        "VernacExtend",
                        "dbef6914414e089314fa13ad9fed8b149424f746"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}