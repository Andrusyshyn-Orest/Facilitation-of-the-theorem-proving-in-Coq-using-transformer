{
    "filename": "Paux.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Digit.",
            "VernacRequire",
            "ccdfd426be9c37a9227b253b517796e5fd447df5"
        ],
        [
            "Require Export Option.",
            "VernacRequire",
            "16f0b88f0df237721eee6935adeb75ba707107c4"
        ],
        [
            "Require Export Inverse_Image.",
            "VernacRequire",
            "4ceb5ffe16bed862be7f6c7509b0c629a557c4d8"
        ],
        [
            "Require Export Wf_nat.",
            "VernacRequire",
            "287253697823c346b4d8375b73e4c5bcf429af23"
        ],
        [
            "Require Import BinPos.",
            "VernacRequire",
            "7c55565b460199c72b57cc90a030257b88ff5053"
        ],
        [
            "Fixpoint exp (n m : nat) {struct m} : nat := match m with | O => 1 | S m' => n * exp n m' end.",
            "VernacFixpoint",
            "383a7d928a892ddfaaba0b0d673a8653236c2cd6"
        ],
        [
            "Theorem expPlus : forall n p q : nat, exp n (p + q) = exp n p * exp n q.",
            "VernacStartTheoremProof",
            "9a68289df0fe4292f365b13d1de76114cc9983c8"
        ],
        [
            "intros n p; elim p; simpl in |- *; auto with arith.",
            "VernacExtend",
            "ed97508c83e1c02a7d0a13a9b30d55883a2f4d65"
        ],
        [
            "intros n0 H' q; rewrite mult_assoc_reverse; rewrite <- H'; auto.",
            "VernacExtend",
            "667779e84d1ab83663129314a2d46bc1ef1553f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint positive_exp (p n : positive) {struct n} : positive := match n with | xH => p | xO n1 => match positive_exp p n1 with | r => (fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r ( fun x => x) r end | xI n1 => match positive_exp p n1 with | r => (fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) p ( fun x => x) ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r ( fun x => x) r) end end.",
            "VernacFixpoint",
            "1d8ebf77382d82ad856125abb790f312839d38b0"
        ],
        [
            "Theorem positive_exp_correct : forall p n : positive, nat_of_P (positive_exp p n) = exp (nat_of_P p) (nat_of_P n).",
            "VernacStartTheoremProof",
            "2c5c6145a987cc35739299dc66dec7628dff0057"
        ],
        [
            "intros p n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "febbbc26d2c97b5d7e2f112bebc668b84de4385e"
        ],
        [
            "intros p0 H.",
            "VernacExtend",
            "6025e9c9f916aa01340d120e2c5e3fd51f699742"
        ],
        [
            "repeat rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y); simpl in |- *; auto.",
            "VernacExtend",
            "3187846de813d1c43ed533c235ea17f7b0d46dcf"
        ],
        [
            "rewrite ZL6; rewrite expPlus; rewrite H; auto.",
            "VernacExtend",
            "2b4a29b50b41bc738f86c9c7fa9fce4cab356d5b"
        ],
        [
            "intros p0 H.",
            "VernacExtend",
            "6025e9c9f916aa01340d120e2c5e3fd51f699742"
        ],
        [
            "repeat rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y); simpl in |- *; auto.",
            "VernacExtend",
            "3187846de813d1c43ed533c235ea17f7b0d46dcf"
        ],
        [
            "rewrite H; rewrite <- expPlus; rewrite <- ZL6; auto.",
            "VernacExtend",
            "55adecb0dd2158315916a2099da795375a0d85ee"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto.",
            "VernacExtend",
            "156d9749f5d42c3c33b18d31162b96a5b3827a88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint Pdiv (p q : positive) {struct p} : Option positive * Option positive := match p with | xH => match q with | xH => (Some _ 1%positive, None _) | xO r => (None _, Some _ p) | xI r => (None _, Some _ p) end | xI p' => match Pdiv p' q with | (None, None) => match (1 - Zpos q)%Z with | Z0 => (Some _ 1%positive, None _) | Zpos r' => (Some _ 1%positive, Some _ r') | Zneg r' => (None _, Some _ 1%positive) end | (None, Some r1) => match (Zpos (xI r1) - Zpos q)%Z with | Z0 => (Some _ 1%positive, None _) | Zpos r' => (Some _ 1%positive, Some _ r') | Zneg r' => (None _, Some _ (xI r1)) end | (Some q1, None) => match (1 - Zpos q)%Z with | Z0 => (Some _ (xI q1), None _) | Zpos r' => (Some _ (xI q1), Some _ r') | Zneg r' => (Some _ (xO q1), Some _ 1%positive) end | (Some q1, Some r1) => match (Zpos (xI r1) - Zpos q)%Z with | Z0 => (Some _ (xI q1), None _) | Zpos r' => (Some _ (xI q1), Some _ r') | Zneg r' => (Some _ (xO q1), Some _ (xI r1)) end end | xO p' => match Pdiv p' q with | (None, None) => (None _, None _) | (None, Some r1) => match (Zpos (xO r1) - Zpos q)%Z with | Z0 => (Some _ 1%positive, None _) | Zpos r' => (Some _ 1%positive, Some _ r') | Zneg r' => (None _, Some _ (xO r1)) end | (Some q1, None) => (Some _ (xO q1), None _) | (Some q1, Some r1) => match (Zpos (xO r1) - Zpos q)%Z with | Z0 => (Some _ (xI q1), None _) | Zpos r' => (Some _ (xI q1), Some _ r') | Zneg r' => (Some _ (xO q1), Some _ (xO r1)) end end end.",
            "VernacFixpoint",
            "5cb0f1622353807c5a22b29c2b323722d474b300"
        ],
        [
            "Definition oZ h := match h with | None => 0 | Some p => nat_of_P p end.",
            "VernacDefinition",
            "5b2814befd375d5080dbf592cf47032421584648"
        ],
        [
            "Theorem Pdiv_correct : forall p q, nat_of_P p = oZ (fst (Pdiv p q)) * nat_of_P q + oZ (snd (Pdiv p q)) /\\ oZ (snd (Pdiv p q)) < nat_of_P q.",
            "VernacStartTheoremProof",
            "ab0e3a1fe39dedb9d3e5686e02f7a503fca3add4"
        ],
        [
            "intros p q; elim p; simpl in |- *; auto.",
            "VernacExtend",
            "310020536596eb4dda0f1ebf6279aaf3d16771f8"
        ],
        [
            "3: case q; simpl in |- *; try intros q1; split; auto; unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "e76a071a7875ec169f0cc68b72837a7a2be792e8"
        ],
        [
            "intros p'; simpl in |- *; case (Pdiv p' q); simpl in |- *; intros q1 r1 (H1, H2); split.",
            "VernacExtend",
            "4d44eb41617472a7e4722d9ee9146254904c1e58"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *.",
            "VernacExtend",
            "6fc4a069e63358338cf7f7965be32be1e7657440"
        ],
        [
            "rewrite ZL6; rewrite H1.",
            "VernacExtend",
            "a8198fa95c04e577a7e2b9d516ab553c1064daec"
        ],
        [
            "case q1; case r1; simpl in |- *.",
            "VernacExtend",
            "57bfe1e4007fff8032e0f3f784dc46777a387b45"
        ],
        [
            "intros r2 q2.",
            "VernacExtend",
            "81299ee976f6c0c477980c8fe0118fb38c9a8818"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xI r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "05e6a784b4ac2c15fe21f83d8b76f9aeb46592f4"
        ],
        [
            "intros H3; rewrite <- (Pcompare_Eq_eq _ _ H3); simpl in |- *; unfold nat_of_P in |- *; simpl in |- *.",
            "VernacExtend",
            "b2fa1fb0467eea7a25ab048874d280f337e5cdf3"
        ],
        [
            "apply f_equal with (f := S); repeat rewrite (fun x y => mult_comm x (S y)); repeat rewrite ZL6; unfold nat_of_P in |- *; simpl in |- *; ring.",
            "VernacExtend",
            "8285f21cd499a47068c0f7e244ef4ea050d18838"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; apply f_equal with (f := S); ring.",
            "VernacExtend",
            "4a02d7889efefb6c6e1cd39406601893360d3118"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4.",
            "VernacExtend",
            "1a362bc4bc6fb297b6c485ea14bf0302aaf8e279"
        ],
        [
            "apply trans_equal with (nat_of_P q + nat_of_P h + Pmult_nat q2 2 * Pmult_nat q 1); [ rewrite <- nat_of_P_plus_morphism; rewrite H5; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply f_equal with (f := S) | unfold nat_of_P in |- * ]; ring.",
            "VernacExtend",
            "9f7e7524bbbcaf489727ecfb737d65e918968cb6"
        ],
        [
            "intros r2.",
            "VernacExtend",
            "a830cc14c6e91375984d21849c0e5698e977145d"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare 1 q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "f7545f72a1514e8e853aa2c13d0e47b3f422e5ca"
        ],
        [
            "intros H3; rewrite <- (Pcompare_Eq_eq _ _ H3); simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; simpl in |- *; apply f_equal with (f := S);ring.",
            "VernacExtend",
            "0752536dc5196ee76f7cb0f7c9a9c24b3a45aef1"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; apply f_equal with (f := S); repeat rewrite ZL6; unfold nat_of_P in |- *; simpl in |- *; ring.",
            "VernacExtend",
            "d1fa648d6090d2a85375787f877d5a4efbfc48b7"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply trans_equal with (nat_of_P q + nat_of_P h + Pmult_nat r2 2 * Pmult_nat q 1); [ rewrite <- nat_of_P_plus_morphism; rewrite H5; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply f_equal with (f := S) | unfold nat_of_P in |- * ]; ring.",
            "VernacExtend",
            "608d078300e4e8afb24d49e9d6e4dfa43a79bba1"
        ],
        [
            "intros r2.",
            "VernacExtend",
            "a830cc14c6e91375984d21849c0e5698e977145d"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xI r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "05e6a784b4ac2c15fe21f83d8b76f9aeb46592f4"
        ],
        [
            "intros H3; rewrite <- (Pcompare_Eq_eq _ _ H3); simpl in |- *; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply f_equal with (f := S); ring.",
            "VernacExtend",
            "0dcd97cf373e0ea4e6c07c37576387e45864d392"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply f_equal with (f := S); ring.",
            "VernacExtend",
            "8cc665a6b59626172b98dfd6b57dc8957db841fb"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply trans_equal with (nat_of_P q + nat_of_P h); [ rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply f_equal with (f := S) | unfold nat_of_P in |- * ]; ring.",
            "VernacExtend",
            "7705071a1d0b10bea8fe884d91c27007e6f8af7d"
        ],
        [
            "case q; simpl in |- *; auto.",
            "VernacExtend",
            "3e808d26f6c4bd21574ecf03f59f74db86a5d7df"
        ],
        [
            "generalize H2; case q1; case r1; simpl in |- *; auto.",
            "VernacExtend",
            "a0c2fa4e1762fab7530cde833b2e31b065755b7c"
        ],
        [
            "intros r2 q2.",
            "VernacExtend",
            "81299ee976f6c0c477980c8fe0118fb38c9a8818"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xI r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "05e6a784b4ac2c15fe21f83d8b76f9aeb46592f4"
        ],
        [
            "intros; apply lt_O_nat_of_P; auto.",
            "VernacExtend",
            "ea89cda118c625c6719ca36bb7bfa2f5564065d7"
        ],
        [
            "intros H H0; apply nat_of_P_lt_Lt_compare_morphism; auto.",
            "VernacExtend",
            "2f350f7c064f4b5e49a6390af6817fdc6f7897f9"
        ],
        [
            "intros H3 H7; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply plus_lt_reg_l with (p := nat_of_P q); rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply le_lt_trans with (Pmult_nat r2 1 + Pmult_nat q 1); auto with arith.",
            "VernacExtend",
            "28fc4a6db24cfc2756b545c176dcae1d19d066e6"
        ],
        [
            "intros r2 HH; case q; simpl in |- *; auto.",
            "VernacExtend",
            "947fafacb7f39cc790b9e5075ad98d311fb3f78e"
        ],
        [
            "intros p2; case p2; unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "fdcf220208277347695e818455e4a500cd1ec35b"
        ],
        [
            "intros p2; case p2; unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "fdcf220208277347695e818455e4a500cd1ec35b"
        ],
        [
            "intros r2 HH.",
            "VernacExtend",
            "d2983d7c695e1d81a53aca9db942fc005142faa4"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xI r2) q Datatypes.Eq); simpl in |- *.",
            "VernacExtend",
            "8b8fdddb2af4de90a5860482ca2ae62edd10f4f4"
        ],
        [
            "intros; apply lt_O_nat_of_P; auto.",
            "VernacExtend",
            "ea89cda118c625c6719ca36bb7bfa2f5564065d7"
        ],
        [
            "intros H3; apply nat_of_P_lt_Lt_compare_morphism; auto.",
            "VernacExtend",
            "7af1fc75bbb55c53940e21dc3b7baecbb9a9681f"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply plus_lt_reg_l with (p := nat_of_P q); rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply le_lt_trans with (Pmult_nat r2 1 + Pmult_nat q 1); auto with arith.",
            "VernacExtend",
            "3209207f0f98b22d5a3404f5271628bca0e2fb16"
        ],
        [
            "intros HH; case q; simpl in |- *; auto.",
            "VernacExtend",
            "fea6b0d64fc7ca564f1166e40610df0458dc897e"
        ],
        [
            "intros p2; case p2; unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "fdcf220208277347695e818455e4a500cd1ec35b"
        ],
        [
            "intros p2; case p2; unfold nat_of_P in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "fdcf220208277347695e818455e4a500cd1ec35b"
        ],
        [
            "intros p'; simpl in |- *; case (Pdiv p' q); simpl in |- *; intros q1 r1 (H1, H2); split.",
            "VernacExtend",
            "4d44eb41617472a7e4722d9ee9146254904c1e58"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; rewrite ZL6; rewrite H1.",
            "VernacExtend",
            "4c24acb4f23e2b20e024a7593b0fe3c13010c19e"
        ],
        [
            "case q1; case r1; simpl in |- *; auto.",
            "VernacExtend",
            "c178b6a291f64c21c1a945b7f0a3c90c9c2ad6ba"
        ],
        [
            "intros r2 q2.",
            "VernacExtend",
            "81299ee976f6c0c477980c8fe0118fb38c9a8818"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xO r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "cc88d9e5d788d24f2ecc4fe13a4ce8aa22e1b4d0"
        ],
        [
            "intros H3; rewrite <- (Pcompare_Eq_eq _ _ H3); simpl in |- *; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; ring.",
            "VernacExtend",
            "9d0c89bab068eeee19b134c7a11a4ef56f319162"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; ring.",
            "VernacExtend",
            "60d65b71a025264a29b67daf404611e1ec3e2dbb"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply trans_equal with (nat_of_P q + nat_of_P h + Pmult_nat q2 2 * Pmult_nat q 1); [ rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- * | unfold nat_of_P in |- * ]; ring.",
            "VernacExtend",
            "cd574dc87e34aa694c6405ca984fa24f7c9e983c"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; ring.",
            "VernacExtend",
            "60d65b71a025264a29b67daf404611e1ec3e2dbb"
        ],
        [
            "intros r2.",
            "VernacExtend",
            "a830cc14c6e91375984d21849c0e5698e977145d"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xO r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "cc88d9e5d788d24f2ecc4fe13a4ce8aa22e1b4d0"
        ],
        [
            "intros H3; rewrite <- (Pcompare_Eq_eq _ _ H3); simpl in |- *; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; ring.",
            "VernacExtend",
            "9d0c89bab068eeee19b134c7a11a4ef56f319162"
        ],
        [
            "intros H3; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; ring.",
            "VernacExtend",
            "60d65b71a025264a29b67daf404611e1ec3e2dbb"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply trans_equal with (nat_of_P q + nat_of_P h); [ rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- * | unfold nat_of_P in |- * ]; ring.",
            "VernacExtend",
            "f0365c0ffaa61a73f7abfd4f4458e74e4ae449c7"
        ],
        [
            "generalize H2; case q1; case r1; simpl in |- *.",
            "VernacExtend",
            "aa56636ae243ad84e6881232a903c69aebd33482"
        ],
        [
            "intros r2 q2.",
            "VernacExtend",
            "81299ee976f6c0c477980c8fe0118fb38c9a8818"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xO r2) q Datatypes.Eq); simpl in |- *; auto.",
            "VernacExtend",
            "cc88d9e5d788d24f2ecc4fe13a4ce8aa22e1b4d0"
        ],
        [
            "intros; apply lt_O_nat_of_P; auto.",
            "VernacExtend",
            "ea89cda118c625c6719ca36bb7bfa2f5564065d7"
        ],
        [
            "intros H H0; apply nat_of_P_lt_Lt_compare_morphism; auto.",
            "VernacExtend",
            "2f350f7c064f4b5e49a6390af6817fdc6f7897f9"
        ],
        [
            "intros H3 H7; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply plus_lt_reg_l with (p := nat_of_P q); rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply lt_trans with (Pmult_nat r2 1 + Pmult_nat q 1); auto with arith.",
            "VernacExtend",
            "43c5a8cd2dd5b6824fe363396ed03cb698be81ac"
        ],
        [
            "intros; apply lt_O_nat_of_P; auto.",
            "VernacExtend",
            "ea89cda118c625c6719ca36bb7bfa2f5564065d7"
        ],
        [
            "intros r2 HH.",
            "VernacExtend",
            "d2983d7c695e1d81a53aca9db942fc005142faa4"
        ],
        [
            "rewrite Z.pos_sub_spec; unfold Pos.compare.",
            "VernacExtend",
            "1de587056006d16f5e9c25c8ddbdda0829b85b70"
        ],
        [
            "CaseEq (Pcompare (xO r2) q Datatypes.Eq); simpl in |- *.",
            "VernacExtend",
            "0a4c136b21b630d801e3a4babe8e7165f520ee72"
        ],
        [
            "intros; apply lt_O_nat_of_P; auto.",
            "VernacExtend",
            "ea89cda118c625c6719ca36bb7bfa2f5564065d7"
        ],
        [
            "intros H3; apply nat_of_P_lt_Lt_compare_morphism; auto.",
            "VernacExtend",
            "7af1fc75bbb55c53940e21dc3b7baecbb9a9681f"
        ],
        [
            "intros H3; case (Pminus_mask_Gt _ _ H3); intros h (H4, (H5, H6)); unfold Pminus in |- *; rewrite H4; apply plus_lt_reg_l with (p := nat_of_P q); rewrite <- (nat_of_P_plus_morphism q); rewrite H5; unfold nat_of_P in |- *; simpl in |- *; repeat rewrite ZL6; unfold nat_of_P in |- *; apply lt_trans with (Pmult_nat r2 1 + Pmult_nat q 1); auto with arith.",
            "VernacExtend",
            "416e2edfb32844f74988bccda70973a8e84e993b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section bugFix.",
            "VernacBeginSection",
            "94fbcbc221434c7f19af4e72a8ff8f64d233230b"
        ],
        [
            "Variable PdivAux : positive -> positive -> Option positive * Option positive.",
            "VernacAssumption",
            "c5fce45796dcadea4a1a71f058f54fc9ebe42269"
        ],
        [
            "Fixpoint PdivlessAux (bound p base length : positive) {struct length} : Option positive * Option positive * nat := match Pcompare bound p Datatypes.Eq with | Datatypes.Gt => (Some _ p, None _, 0) | _ => match PdivAux p base with | (None, None) => (None _, None _, 1) | (None, Some r1) => (None _, Some _ r1, 1) | (Some q1, None) => match length with | xH => (Some _ q1, None _, 0) | xO length' => match PdivlessAux bound q1 base length' with | (s2, None, n) => (s2, None _, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r2 (fun x => x) base), S n) end | xI length' => match PdivlessAux bound q1 base length' with | (s2, None, n) => (s2, None _, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r2 (fun x => x) base), S n) end end | (Some q1, Some r1) => match length with | xH => (Some _ q1, None _, 0) | xO length' => match PdivlessAux bound q1 base length' with | (s2, None, n) => (s2, Some _ r1, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => x * y) r2 ( fun x => x) base + r1)%positive, S n) end | xI length' => match PdivlessAux bound q1 base length' with | (s2, None, n) => (s2, Some _ r1, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => x * y) r2 ( fun x => x) base + r1)%positive, S n) end end end end.",
            "VernacFixpoint",
            "096c456c96d3fe1b314c562a657c7ce4c62f4e14"
        ],
        [
            "End bugFix.",
            "VernacEndSegment",
            "54bceffacacf685ee6737e5163df73b37bc2be70"
        ],
        [
            "Definition Pdivless := PdivlessAux Pdiv.",
            "VernacDefinition",
            "a3d2c9b3235bc91d3ddde2f6388faea6d7f915dc"
        ],
        [
            "Theorem Pdivless1 : forall bound p q base, Pcompare bound p Datatypes.Eq = Datatypes.Gt -> Pdivless bound p base q = (Some _ p, None _, 0).",
            "VernacStartTheoremProof",
            "a8d26e2da83411e87eb6b967cc3dc2afe8ae45cc"
        ],
        [
            "intros bound p q base H; case q; simpl in |- *; auto; intros; rewrite H; auto.",
            "VernacExtend",
            "8e9eaf833025e36a6561eb05562abad041f57cd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Pdivless2 : forall bound p length base, Pcompare bound p Datatypes.Eq <> Datatypes.Gt -> Pdivless bound p base length = match Pdiv p base with | (None, None) => (None _, None _, 1) | (None, Some r1) => (None _, Some _ r1, 1) | (Some q1, None) => match length with | xH => (Some _ q1, None _, 0) | xO length' => match Pdivless bound q1 base length' with | (s2, None, n) => (s2, None _, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r2 ( fun x => x) base), S n) end | xI length' => match Pdivless bound q1 base length' with | (s2, None, n) => (s2, None _, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => (x * y)%positive) r2 ( fun x => x) base), S n) end end | (Some q1, Some r1) => match length with | xH => (Some _ q1, None _, 0) | xO length' => match Pdivless bound q1 base length' with | (s2, None, n) => (s2, Some _ r1, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => x * y) r2 ( fun x => x) base + r1)%positive, S n) end | xI length' => match Pdivless bound q1 base length' with | (s2, None, n) => (s2, Some _ r1, S n) | (s2, Some r2, n) => (s2, Some _ ((fun (x : positive) (_ : positive -> positive) (y : positive) => x * y) r2 ( fun x => x) base + r1)%positive, S n) end end end.",
            "VernacStartTheoremProof",
            "4a76a0046b83dda2ecbbed54b99960844e602202"
        ],
        [
            "intros bound p length base; case length; simpl in |- *; case (Pcompare bound p Datatypes.Eq); auto; (intros H; case H; auto; fail) || (intros p' H; case H; auto).",
            "VernacExtend",
            "03a3a76b4e1848e852453d72e455c36e13ef48b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem compare_SUP_dec : forall p q : positive, Pcompare p q Datatypes.Eq = Datatypes.Gt \\/ Pcompare p q Datatypes.Eq <> Datatypes.Gt.",
            "VernacStartTheoremProof",
            "a41d7dbe5520654d5eff3d8803381958b6847cdc"
        ],
        [
            "intros p q; case (Pcompare p q Datatypes.Eq); auto; right; red in |- *; intros; discriminate.",
            "VernacExtend",
            "b35e3a182a2f41b85416a0c4d8077ca7a091203e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve lt_O_nat_of_P: arith.",
            "VernacHints",
            "aaba55f1298c6f68d2c0b4c14537a60681e24bc2"
        ],
        [
            "Theorem odd_even_lem : forall p q, 2 * p + 1 <> 2 * q.",
            "VernacStartTheoremProof",
            "2fc440c70287f9b53b5b3b16b47696d0cfc7a1b0"
        ],
        [
            "intros p; elim p; auto.",
            "VernacExtend",
            "8cc86b88463dfc0f8e086f74ff689e5ff2cde506"
        ],
        [
            "intros q; case q; simpl in |- *.",
            "VernacExtend",
            "b3b4698ebd4513aff730f0db670e61fd1a82e925"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "intros q'; rewrite (fun x y => plus_comm x (S y)); simpl in |- *; red in |- *; intros; discriminate.",
            "VernacExtend",
            "f2967b769aa75365d3c44b4193f9672067321779"
        ],
        [
            "intros p' H q; case q.",
            "VernacExtend",
            "5f268cc700351a3786239104df20eb3d0268b8c4"
        ],
        [
            "simpl in |- *; red in |- *; intros; discriminate.",
            "VernacExtend",
            "3d9e3cad2127e705c546560dd2e3fde1f1f047e9"
        ],
        [
            "intros q'; red in |- *; intros H0; case (H q').",
            "VernacExtend",
            "d9697c0c0c3fb57ff2b04f23a4a4abf2e9ac2526"
        ],
        [
            "replace (2 * q') with (2 * S q' - 2).",
            "VernacExtend",
            "4eaf075b20365bfafa6a2cbd3473026790035580"
        ],
        [
            "rewrite <- H0; simpl in |- *; auto.",
            "VernacExtend",
            "7d6f1bfc4078c4294f325f5402860ecc3e41b77b"
        ],
        [
            "repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; auto.",
            "VernacExtend",
            "5e240f3a1938e506ae19ee61a75e31430c156634"
        ],
        [
            "simpl in |- *; repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; auto.",
            "VernacExtend",
            "b78c3ed215e1651de7499366f4a37d9a5e35e712"
        ],
        [
            "case q'; simpl in |- *; auto.",
            "VernacExtend",
            "de22554ee6674d3100890e0c63b71e4f37d946d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Pdivless_correct : forall bound p q base, 1 < nat_of_P base -> nat_of_P p <= nat_of_P q -> nat_of_P p = oZ (fst (fst (Pdivless bound p base q))) * exp (nat_of_P base) (snd (Pdivless bound p base q)) + oZ (snd (fst (Pdivless bound p base q))) /\\ (oZ (fst (fst (Pdivless bound p base q))) < nat_of_P bound /\\ oZ (snd (fst (Pdivless bound p base q))) < exp (nat_of_P base) (snd (Pdivless bound p base q))) /\\ (forall bound', nat_of_P bound = nat_of_P base * bound' -> nat_of_P bound <= nat_of_P p -> nat_of_P bound <= nat_of_P base * oZ (fst (fst (Pdivless bound p base q)))).",
            "VernacStartTheoremProof",
            "cbfefb72b51981438bbfad1cf7331f55295c6823"
        ],
        [
            "intros bound p q base Hb; generalize q; pattern p in |- *; apply well_founded_ind with (R := fun a b => nat_of_P a < nat_of_P b); auto; clear p q.",
            "VernacExtend",
            "11860d9fb6fc6a77ee4f04cf139c4b3fbbc3a363"
        ],
        [
            "apply wf_inverse_image with (R := lt); auto.",
            "VernacExtend",
            "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
        ],
        [
            "exact lt_wf; auto.",
            "VernacExtend",
            "8b1e341da53ec3fa48685b95ca20164039d991c7"
        ],
        [
            "intros p Rec q Hq.",
            "VernacExtend",
            "7e02a273140a0f9fd4178a08c564724f69314630"
        ],
        [
            "case (compare_SUP_dec bound p); intros H1.",
            "VernacExtend",
            "9aa941e41c74d73d88ab1f2c808a3e1e6b1c5f83"
        ],
        [
            "rewrite Pdivless1; auto; simpl in |- *.",
            "VernacExtend",
            "8e08a23eddc63f1723f70df1851c73493fb0f12d"
        ],
        [
            "repeat (split; auto with arith).",
            "VernacExtend",
            "7129e4905de9b737392b572f3bfcef638c468dfa"
        ],
        [
            "ring; auto.",
            "VernacExtend",
            "0cc84a3f5ba99e5b72bc330e6ea7654dad1731a1"
        ],
        [
            "apply nat_of_P_lt_Lt_compare_morphism; apply ZC1; auto.",
            "VernacExtend",
            "2d7b0d4135b3aae595487f37712cda6fee3551bb"
        ],
        [
            "intros bound' H'1 H2; Contradict H2; apply lt_not_le; apply nat_of_P_lt_Lt_compare_morphism; apply ZC1; auto.",
            "VernacExtend",
            "59c8edcdbcc28ddb321989350ecca8424a1781f4"
        ],
        [
            "rewrite Pdivless2; auto; simpl in |- *.",
            "VernacExtend",
            "9ddfd334122471f5c2455cb31c7f617e2ea2a7f4"
        ],
        [
            "generalize (Pdiv_correct p base); case (Pdiv p base); simpl in |- *.",
            "VernacExtend",
            "4a472f93f88ac71204178b8bdf1ee5e3682a2e9c"
        ],
        [
            "intros o1; case o1; simpl in |- *.",
            "VernacExtend",
            "dd09d1ca20f7c998da210798f612756057326175"
        ],
        [
            "intros o1' o2; case o2; simpl in |- *.",
            "VernacExtend",
            "61ec8deb5120c78f5aa0a155846f3df42f0075b5"
        ],
        [
            "intros o2' (Ho1, Ho2).",
            "VernacExtend",
            "01adba25b196820f619e680aaac09d7b35b2f0bc"
        ],
        [
            "generalize Hq; case q; simpl in |- *; auto.",
            "VernacExtend",
            "2d900dd132b787116b1db67be4f7468b399910a7"
        ],
        [
            "intros p0 Hq0; (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
            "VernacExtend",
            "7d4bccea6e6a6d63234705c3e508def3fea1854c"
        ],
        [
            "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
            "VernacExtend",
            "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
        ],
        [
            "generalize (Rec _ Hrec1 _ Hrec).",
            "VernacExtend",
            "91089702c76d546df43bd27d553bddd2931e7f5c"
        ],
        [
            "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
            "VernacExtend",
            "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
        ],
        [
            "intros p1; case p1; simpl in |- *.",
            "VernacExtend",
            "1a69359e3ff8455b20f14787663562c2b64a55c7"
        ],
        [
            "intros o3; case o3; simpl in |- *; auto.",
            "VernacExtend",
            "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
        ],
        [
            "intros o3' o4; case o4; simpl in |- *; auto.",
            "VernacExtend",
            "0385e98c47836c8ce54a7d99350306a76263ae4f"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "92dfe9a30e615c553dab844fa186ede3453e7c5c"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
            "VernacExtend",
            "0afc5435b81fc27a55292351483dfe23a102a75d"
        ],
        [
            "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
            "VernacExtend",
            "7390e34eef68e659e8cad40347451845fa3861dc"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "inversion Eq1.",
            "VernacExtend",
            "e7946710bd783cb374601c71415a91258421e379"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "dc197172db95141d4f62d2666f6387fa64fd7f69"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "Contradict H'6; auto.",
            "VernacExtend",
            "d2efeff40f59def319adc3783cc52d06dfb83ce3"
        ],
        [
            "apply lt_not_le; rewrite Ho1; auto.",
            "VernacExtend",
            "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
            "VernacExtend",
            "badc27b450f50d8804e9a988aba70e13077dd88e"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "b1dcb5849056448e19414bddc76d4c38f222873d"
        ],
        [
            "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
            "VernacExtend",
            "0ff6f478683838df3dd72481866cb5dacf944e79"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
            "VernacExtend",
            "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
            "VernacExtend",
            "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
        ],
        [
            "intros o4; case o4; simpl in |- *.",
            "VernacExtend",
            "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "92dfe9a30e615c553dab844fa186ede3453e7c5c"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
            "VernacExtend",
            "0afc5435b81fc27a55292351483dfe23a102a75d"
        ],
        [
            "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
            "VernacExtend",
            "7390e34eef68e659e8cad40347451845fa3861dc"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "rewrite Ho1; auto.",
            "VernacExtend",
            "09390ce3aba5c270201a262f0ee7c84bac346618"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * 1 + nat_of_P o2'); auto with arith.",
            "VernacExtend",
            "6326c026d8502be4651333138326d692ecfa29c8"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "apply le_lt_trans with (nat_of_P o1' + 0); auto with arith.",
            "VernacExtend",
            "809867cbe87f02e2a710a7424f8017c366c5a3ad"
        ],
        [
            "apply plus_le_lt_compat; auto with arith.",
            "VernacExtend",
            "a5f9f43d46fd1841bb0fe5a163c68ac14ffc30d7"
        ],
        [
            "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
            "VernacExtend",
            "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
        ],
        [
            "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
            "VernacExtend",
            "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
        ],
        [
            "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := nat_of_P o2').",
            "VernacExtend",
            "95bf841fa8652099619afedabed0a4b854cbb04e"
        ],
        [
            "rewrite (plus_comm (nat_of_P o2')); simpl in |- *; auto with arith.",
            "VernacExtend",
            "6ee4a4eb87f9bc38d65ccb81647b879de179ca02"
        ],
        [
            "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
            "VernacExtend",
            "aa9400c48534bc5595876e1954259b8e57524a28"
        ],
        [
            "rewrite <- Ho1; auto with arith.",
            "VernacExtend",
            "e47b96285aec76a4ac93b9767d31d6d98f72ecb8"
        ],
        [
            "apply le_trans with (1 := Hq0); auto with arith.",
            "VernacExtend",
            "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
        ],
        [
            "replace (nat_of_P (xI p0)) with (1 + 2 * nat_of_P p0); auto with arith.",
            "VernacExtend",
            "3a068be1c4dc8f9bce901ecac783bd72f2202245"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
            "VernacExtend",
            "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
        ],
        [
            "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
            "VernacExtend",
            "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
        ],
        [
            "intros p0 Hq0; (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
            "VernacExtend",
            "7d4bccea6e6a6d63234705c3e508def3fea1854c"
        ],
        [
            "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
            "VernacExtend",
            "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
        ],
        [
            "generalize (Rec _ Hrec1 _ Hrec).",
            "VernacExtend",
            "91089702c76d546df43bd27d553bddd2931e7f5c"
        ],
        [
            "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
            "VernacExtend",
            "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
        ],
        [
            "intros p1; case p1; simpl in |- *.",
            "VernacExtend",
            "1a69359e3ff8455b20f14787663562c2b64a55c7"
        ],
        [
            "intros o3; case o3; simpl in |- *; auto.",
            "VernacExtend",
            "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
        ],
        [
            "intros o3' o4; case o4; simpl in |- *; auto.",
            "VernacExtend",
            "0385e98c47836c8ce54a7d99350306a76263ae4f"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "92dfe9a30e615c553dab844fa186ede3453e7c5c"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
            "VernacExtend",
            "0afc5435b81fc27a55292351483dfe23a102a75d"
        ],
        [
            "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
            "VernacExtend",
            "7390e34eef68e659e8cad40347451845fa3861dc"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "inversion Eq1.",
            "VernacExtend",
            "e7946710bd783cb374601c71415a91258421e379"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "dc197172db95141d4f62d2666f6387fa64fd7f69"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "Contradict H'6; auto.",
            "VernacExtend",
            "d2efeff40f59def319adc3783cc52d06dfb83ce3"
        ],
        [
            "apply lt_not_le; rewrite Ho1; auto.",
            "VernacExtend",
            "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
            "VernacExtend",
            "badc27b450f50d8804e9a988aba70e13077dd88e"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "b1dcb5849056448e19414bddc76d4c38f222873d"
        ],
        [
            "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
            "VernacExtend",
            "0ff6f478683838df3dd72481866cb5dacf944e79"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
            "VernacExtend",
            "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
            "VernacExtend",
            "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
        ],
        [
            "intros o4; case o4; simpl in |- *.",
            "VernacExtend",
            "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "92dfe9a30e615c553dab844fa186ede3453e7c5c"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
            "VernacExtend",
            "0afc5435b81fc27a55292351483dfe23a102a75d"
        ],
        [
            "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
            "VernacExtend",
            "7390e34eef68e659e8cad40347451845fa3861dc"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "rewrite Ho1; auto.",
            "VernacExtend",
            "09390ce3aba5c270201a262f0ee7c84bac346618"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * 1 + nat_of_P o2'); auto with arith.",
            "VernacExtend",
            "6326c026d8502be4651333138326d692ecfa29c8"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "apply le_lt_trans with (nat_of_P o1' + 0); auto with arith.",
            "VernacExtend",
            "809867cbe87f02e2a710a7424f8017c366c5a3ad"
        ],
        [
            "apply plus_le_lt_compat; auto with arith.",
            "VernacExtend",
            "a5f9f43d46fd1841bb0fe5a163c68ac14ffc30d7"
        ],
        [
            "rewrite Ho1; auto with arith.",
            "VernacExtend",
            "353f89f99b71c6ebe21aa201cad0e4d43382a576"
        ],
        [
            "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
            "VernacExtend",
            "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
        ],
        [
            "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
            "VernacExtend",
            "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
        ],
        [
            "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := nat_of_P o2').",
            "VernacExtend",
            "95bf841fa8652099619afedabed0a4b854cbb04e"
        ],
        [
            "rewrite (plus_comm (nat_of_P o2')); simpl in |- *; auto with arith.",
            "VernacExtend",
            "6ee4a4eb87f9bc38d65ccb81647b879de179ca02"
        ],
        [
            "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
            "VernacExtend",
            "aa9400c48534bc5595876e1954259b8e57524a28"
        ],
        [
            "rewrite <- Ho1; auto with arith.",
            "VernacExtend",
            "e47b96285aec76a4ac93b9767d31d6d98f72ecb8"
        ],
        [
            "apply le_trans with (1 := Hq0); auto with arith.",
            "VernacExtend",
            "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
        ],
        [
            "replace (nat_of_P (xO p0)) with (0 + 2 * nat_of_P p0); auto with arith.",
            "VernacExtend",
            "16cc51592bb58f9cbd659e3ae0ce16a4478f048b"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
            "VernacExtend",
            "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
        ],
        [
            "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
            "VernacExtend",
            "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
        ],
        [
            "replace (nat_of_P 1) with 1; auto with arith.",
            "VernacExtend",
            "2fbc327178c37238e8414be17cfa53662169d626"
        ],
        [
            "rewrite Ho1; generalize (lt_O_nat_of_P o2'); (case (nat_of_P o2'); simpl in |- *).",
            "VernacExtend",
            "90200574c5ab9ba8239fc0fa6daa47564edda435"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "generalize (lt_O_nat_of_P o1'); (case (nat_of_P o1'); simpl in |- *).",
            "VernacExtend",
            "c6e88f3027faa81758012d1547464530166245e8"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "generalize (lt_O_nat_of_P base); (case (nat_of_P base); simpl in |- *).",
            "VernacExtend",
            "f4e33f571a476e775b11c6e918734b8234342a54"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros n H n0 H0 n1 H01; rewrite (fun x y => plus_comm x (S y)); simpl in |- *.",
            "VernacExtend",
            "b6ba769a2aaf82918bb2d35b3e543f5efd66abbf"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "generalize Hq; case q; simpl in |- *; auto.",
            "VernacExtend",
            "2d900dd132b787116b1db67be4f7468b399910a7"
        ],
        [
            "intros p0 Hq0 (Ho1, Ho2); (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
            "VernacExtend",
            "612ff9eb60b73f4e2c31a2e75a0a2310527b1b11"
        ],
        [
            "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
            "VernacExtend",
            "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
        ],
        [
            "generalize (Rec _ Hrec1 _ Hrec).",
            "VernacExtend",
            "91089702c76d546df43bd27d553bddd2931e7f5c"
        ],
        [
            "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
            "VernacExtend",
            "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
        ],
        [
            "intros p1; case p1; simpl in |- *.",
            "VernacExtend",
            "1a69359e3ff8455b20f14787663562c2b64a55c7"
        ],
        [
            "intros o3; case o3; simpl in |- *; auto.",
            "VernacExtend",
            "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
        ],
        [
            "intros o3' o4; case o4; simpl in |- *; auto.",
            "VernacExtend",
            "0385e98c47836c8ce54a7d99350306a76263ae4f"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "06d741844ead24fc25d9dcfd3a72227d7da77bac"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
            "VernacExtend",
            "7390e34eef68e659e8cad40347451845fa3861dc"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "inversion Eq1.",
            "VernacExtend",
            "e7946710bd783cb374601c71415a91258421e379"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "dc197172db95141d4f62d2666f6387fa64fd7f69"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "Contradict H'6; auto.",
            "VernacExtend",
            "d2efeff40f59def319adc3783cc52d06dfb83ce3"
        ],
        [
            "apply lt_not_le; rewrite Ho1; auto.",
            "VernacExtend",
            "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
            "VernacExtend",
            "badc27b450f50d8804e9a988aba70e13077dd88e"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "b1dcb5849056448e19414bddc76d4c38f222873d"
        ],
        [
            "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
            "VernacExtend",
            "0ff6f478683838df3dd72481866cb5dacf944e79"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
            "VernacExtend",
            "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
            "VernacExtend",
            "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
        ],
        [
            "intros o4; case o4; simpl in |- *.",
            "VernacExtend",
            "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "06d741844ead24fc25d9dcfd3a72227d7da77bac"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, (H'2, H'3)).",
            "VernacExtend",
            "8cb34feb2d6541be344e6af70944e40b48f7b011"
        ],
        [
            "generalize (lt_O_nat_of_P o1'); rewrite H'1; intros tmp; inversion tmp.",
            "VernacExtend",
            "9a27786d2ae621ad0301978d7a6f69b46228b57b"
        ],
        [
            "rewrite Ho1; auto.",
            "VernacExtend",
            "09390ce3aba5c270201a262f0ee7c84bac346618"
        ],
        [
            "apply le_lt_trans with (nat_of_P o1' * 1 + 0); auto with arith.",
            "VernacExtend",
            "43049dcec90329559aaef0fc83b566241d2a044c"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "repeat rewrite (fun x => plus_comm x 0); simpl in |- *; auto with arith.",
            "VernacExtend",
            "23b002aaf024fb168eb1e74faef64677c00bbcbc"
        ],
        [
            "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
            "VernacExtend",
            "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
        ],
        [
            "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
            "VernacExtend",
            "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
        ],
        [
            "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
            "VernacExtend",
            "aa9400c48534bc5595876e1954259b8e57524a28"
        ],
        [
            "rewrite (fun x => plus_comm x 0) in Ho1; simpl in Ho1; rewrite <- Ho1.",
            "VernacExtend",
            "d898c83ed18a35b122e563a866cc25083082601d"
        ],
        [
            "generalize Hq0; clear Hq0; replace (nat_of_P (xI p0)) with (2 * nat_of_P p0 + 1); try intros Hq0.",
            "VernacExtend",
            "88aa739a6d2ecd31434c6aa35370e1a9f680da11"
        ],
        [
            "case (le_lt_or_eq _ _ Hq0); auto.",
            "VernacExtend",
            "e0f6ca174bf1aa51aeac3df8020eb6779eff218d"
        ],
        [
            "rewrite (fun x y => plus_comm x (S y)); intros Hl1.",
            "VernacExtend",
            "ae9bd1e01caf933ba75b63952ecd75673f73f89d"
        ],
        [
            "apply le_trans with (2 * nat_of_P p0); auto with arith.",
            "VernacExtend",
            "71082fe364f97cc76637fac1b298f48da0319e4a"
        ],
        [
            "generalize Hb Ho1; case (nat_of_P base); auto.",
            "VernacExtend",
            "ae253613c6e19ea1182a5e8f943da2438d33a964"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros base'; case base'.",
            "VernacExtend",
            "43d433e261b9571d7d1843e3cdf32483aedcfe6c"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros base''; case base''.",
            "VernacExtend",
            "a8da77e44f837e934f7d8d7446a14047e523538e"
        ],
        [
            "replace (nat_of_P (xI p0)) with (1 + 2 * nat_of_P p0); auto with arith.",
            "VernacExtend",
            "3a068be1c4dc8f9bce901ecac783bd72f2202245"
        ],
        [
            "intros Hb0 Ho0 H; Contradict H; rewrite Ho0.",
            "VernacExtend",
            "88936addf1ebfc2de06db7f36390b1b9f08d9bd1"
        ],
        [
            "rewrite (fun x y => mult_comm x (S y)).",
            "VernacExtend",
            "3043d32f0368deae1a8d4187884dd610e7f2ed3d"
        ],
        [
            "apply Compare.not_eq_sym.",
            "VernacExtend",
            "22bf370bec72a14aa9bd887fd43c5e30d513e486"
        ],
        [
            "apply odd_even_lem.",
            "VernacExtend",
            "44e99834fead9ca5ab6a58a130243f173cd08d75"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
            "VernacExtend",
            "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
        ],
        [
            "intros n Hb0 Ho0 H; rewrite H.",
            "VernacExtend",
            "39bda9bca9cde0049e3b57be9cd28a425c45b378"
        ],
        [
            "apply le_trans with (S (S n) * nat_of_P p0 + nat_of_P p0); auto with arith.",
            "VernacExtend",
            "44d7a0d636d63f6b6a22ba9a5adc50515d0cd30d"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "rewrite plus_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "a04f67a71deb6dceb647b6d5b4c634af69e3c150"
        ],
        [
            "rewrite plus_comm; unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; unfold nat_of_P in |- *; auto).",
            "VernacExtend",
            "9389f386ba446b00d0b629d835b21971e6bc3e43"
        ],
        [
            "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
            "VernacExtend",
            "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
        ],
        [
            "intros p0 Hq0 (Ho1, Ho2); (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
            "VernacExtend",
            "612ff9eb60b73f4e2c31a2e75a0a2310527b1b11"
        ],
        [
            "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
            "VernacExtend",
            "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
        ],
        [
            "generalize (Rec _ Hrec1 _ Hrec).",
            "VernacExtend",
            "91089702c76d546df43bd27d553bddd2931e7f5c"
        ],
        [
            "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
            "VernacExtend",
            "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
        ],
        [
            "intros p1; case p1; simpl in |- *.",
            "VernacExtend",
            "1a69359e3ff8455b20f14787663562c2b64a55c7"
        ],
        [
            "intros o3; case o3; simpl in |- *; auto.",
            "VernacExtend",
            "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
        ],
        [
            "intros o3' o4; case o4; simpl in |- *; auto.",
            "VernacExtend",
            "0385e98c47836c8ce54a7d99350306a76263ae4f"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "06d741844ead24fc25d9dcfd3a72227d7da77bac"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "replace 0 with (0 * exp (nat_of_P base) n); auto with arith.",
            "VernacExtend",
            "b92a8389fa5f0161dddc917e569cb5814e8086a1"
        ],
        [
            "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
            "VernacExtend",
            "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
        ],
        [
            "apply (H'4 bound'); auto.",
            "VernacExtend",
            "546aa5489091101ed5b9966bc9c08055d837c9f1"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "inversion Eq1.",
            "VernacExtend",
            "e7946710bd783cb374601c71415a91258421e379"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "dc197172db95141d4f62d2666f6387fa64fd7f69"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "Contradict H'6; auto.",
            "VernacExtend",
            "d2efeff40f59def319adc3783cc52d06dfb83ce3"
        ],
        [
            "apply lt_not_le; rewrite Ho1; auto.",
            "VernacExtend",
            "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
        ],
        [
            "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
            "VernacExtend",
            "badc27b450f50d8804e9a988aba70e13077dd88e"
        ],
        [
            "simpl in |- *; auto with arith.",
            "VernacExtend",
            "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
        ],
        [
            "rewrite <- mult_plus_distr_r.",
            "VernacExtend",
            "b1dcb5849056448e19414bddc76d4c38f222873d"
        ],
        [
            "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
            "VernacExtend",
            "0ff6f478683838df3dd72481866cb5dacf944e79"
        ],
        [
            "rewrite H'5; auto with arith.",
            "VernacExtend",
            "da89c0377473eb45bf989324fe2fe0ad895cae56"
        ],
        [
            "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
            "VernacExtend",
            "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
            "VernacExtend",
            "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
        ],
        [
            "intros o4; case o4; simpl in |- *.",
            "VernacExtend",
            "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
        ],
        [
            "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
            "VernacExtend",
            "06d741844ead24fc25d9dcfd3a72227d7da77bac"
        ],
        [
            "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "1581ca6604adc2f5f9f70b3932314591df723fa1"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
            "VernacExtend",
            "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
        ],
        [
            "intros bound' H H0; apply (H'4 bound'); auto.",
            "VernacExtend",
            "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
        ],
        [
            "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
            "VernacExtend",
            "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
        ],
        [
            "rewrite Pdivless1 in Eq1; auto.",
            "VernacExtend",
            "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
            "VernacExtend",
            "3e8554f008f406fe3c77f4bea693774dd5941e37"
        ],
        [
            "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
            "VernacExtend",
            "421101017b730b73e126bfb4e29fb991104a8784"
        ],
        [
            "rewrite Ho1; rewrite H'1; ring.",
            "VernacExtend",
            "89b1478f49cf84958b36744f5b10f42c64ef8871"
        ],
        [
            "replace 0 with (0 * exp (nat_of_P base) n); auto with arith.",
            "VernacExtend",
            "b92a8389fa5f0161dddc917e569cb5814e8086a1"
        ],
        [
            "intros bound' H H0; Contradict H0; rewrite Ho1; rewrite H'1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "9089826ecd0178d11ed8691b6cf128bfe6c5e3fa"
        ],
        [
            "rewrite Ho1; auto with arith.",
            "VernacExtend",
            "353f89f99b71c6ebe21aa201cad0e4d43382a576"
        ],
        [
            "apply le_lt_trans with (nat_of_P o1' * 1 + 0); auto with arith.",
            "VernacExtend",
            "43049dcec90329559aaef0fc83b566241d2a044c"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
            "VernacExtend",
            "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
        ],
        [
            "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
            "VernacExtend",
            "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
        ],
        [
            "apply le_trans with (nat_of_P p); auto.",
            "VernacExtend",
            "f5b11db90282d680fbdfaf389478f364aea630e8"
        ],
        [
            "rewrite Ho1; rewrite (fun x => plus_comm x 0); simpl in |- *; auto.",
            "VernacExtend",
            "e4bb7528dc2ac2271e44c49a8c523c4cb10a2eb8"
        ],
        [
            "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
            "VernacExtend",
            "aa9400c48534bc5595876e1954259b8e57524a28"
        ],
        [
            "apply le_trans with (1 := Hq0); auto with arith.",
            "VernacExtend",
            "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
        ],
        [
            "replace (nat_of_P (xO p0)) with (2 * nat_of_P p0); auto with arith.",
            "VernacExtend",
            "8e00237366eeac6ff15a4c92894138d029487916"
        ],
        [
            "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
            "VernacExtend",
            "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
        ],
        [
            "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
            "VernacExtend",
            "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
        ],
        [
            "replace (nat_of_P 1) with 1; auto with arith.",
            "VernacExtend",
            "2fbc327178c37238e8414be17cfa53662169d626"
        ],
        [
            "intros Hq0 (H, H0); Contradict Hq0.",
            "VernacExtend",
            "46cecc7b2c177bc70d66443163e2cad3671a223e"
        ],
        [
            "apply lt_not_le.",
            "VernacExtend",
            "153fbf8b5dfa799e22f198ba7d37d620ab119bf0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "generalize (lt_O_nat_of_P o1'); case (nat_of_P o1'); simpl in |- *; auto.",
            "VernacExtend",
            "7b35f9a996b4f33ee997408ab4e58093031ce641"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros n H2; generalize Hb.",
            "VernacExtend",
            "2c5a9e7312165ad99fe268a3dbd9316d855b93db"
        ],
        [
            "case (nat_of_P base); simpl in |- *; auto.",
            "VernacExtend",
            "5bbf992fa00e2639af20ff9ec6d40f511c4eecfa"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros base'; case base'; simpl in |- *; auto with arith.",
            "VernacExtend",
            "ba2a4aad437f3139e45c0cdb332d3474e33292a8"
        ],
        [
            "intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "33f2290d8230916d25222ab1ffe276edcc8fd51b"
        ],
        [
            "intros o2; case o2; simpl in |- *; auto with arith.",
            "VernacExtend",
            "5c2225f5177e253f4a5de73211bd63252d55782e"
        ],
        [
            "intros o2' (Ho1, Ho2); repeat (split; auto with arith).",
            "VernacExtend",
            "f9a8c90fca747f561312dececc2064988577c6ed"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros bound' H H0; Contradict Ho2.",
            "VernacExtend",
            "1ed21100cc8d0a60fc56e1cef51493216a683b6e"
        ],
        [
            "apply le_not_lt.",
            "VernacExtend",
            "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
        ],
        [
            "rewrite <- Ho1.",
            "VernacExtend",
            "4323295e1f0746ac4091ea5415bed646332ab1d7"
        ],
        [
            "generalize H; case bound'.",
            "VernacExtend",
            "694232592a638a462edf283352e367d77f0ba2df"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto.",
            "VernacExtend",
            "156d9749f5d42c3c33b18d31162b96a5b3827a88"
        ],
        [
            "intros Eq2; generalize (lt_O_nat_of_P bound); rewrite Eq2; intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "16da72af0ba7d385496f22ae3950bc11c61ba73b"
        ],
        [
            "intros n Eq2; apply le_trans with (nat_of_P bound); auto with arith.",
            "VernacExtend",
            "ed28b457ab1b9239356a2478c5d6d9a351c0dc4a"
        ],
        [
            "rewrite Eq2; auto with arith.",
            "VernacExtend",
            "aa9714902dd299b22b5c969a0d9d69cae8e60f4f"
        ],
        [
            "rewrite mult_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "87099fb271d5a701bc9a827c7845c954b757479c"
        ],
        [
            "intros (Ho1, Ho2); generalize (lt_O_nat_of_P p); rewrite Ho1; intros tmp; Contradict tmp; auto with arith.",
            "VernacExtend",
            "41070712ce77d9fa47d4f9c43cdab54e646595a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PdivBound bound p base := Pdivless bound p base p.",
            "VernacDefinition",
            "47a3b824c622fd644e0e753bab9b1194e687cd84"
        ],
        [
            "Theorem PdivBound_correct : forall bound p base, 1 < nat_of_P base -> nat_of_P p = oZ (fst (fst (PdivBound bound p base))) * exp (nat_of_P base) (snd (PdivBound bound p base)) + oZ (snd (fst (PdivBound bound p base))) /\\ (oZ (fst (fst (PdivBound bound p base))) < nat_of_P bound /\\ oZ (snd (fst (PdivBound bound p base))) < exp (nat_of_P base) (snd (PdivBound bound p base))) /\\ (forall bound', nat_of_P bound = nat_of_P base * bound' -> nat_of_P bound <= nat_of_P p -> nat_of_P bound <= nat_of_P base * oZ (fst (fst (PdivBound bound p base)))).",
            "VernacStartTheoremProof",
            "3949316a49182580293c12602651f4e2be1d2514"
        ],
        [
            "intros; unfold PdivBound in |- *; apply Pdivless_correct; auto.",
            "VernacExtend",
            "25dfc1ac6713120bf08275a6bdd166af7cb2db06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PdivBound_correct1 : forall bound p base, 1 < nat_of_P base -> nat_of_P p = oZ (fst (fst (PdivBound bound p base))) * exp (nat_of_P base) (snd (PdivBound bound p base)) + oZ (snd (fst (PdivBound bound p base))).",
            "VernacStartTheoremProof",
            "5a7847f58d890f8bf5ca6d9e0a72bdbb6a814e96"
        ],
        [
            "intros bound p base H; generalize (PdivBound_correct bound p base); intuition.",
            "VernacExtend",
            "77ea6df52ca892be8c6affaf564a1b3cc05b195f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PdivBound_correct2 : forall bound p base, 1 < nat_of_P base -> oZ (fst (fst (PdivBound bound p base))) < nat_of_P bound.",
            "VernacStartTheoremProof",
            "fef264011b770deb08a6838c81f376d9c1a1a6da"
        ],
        [
            "intros bound p base H; generalize (PdivBound_correct bound p base); intuition.",
            "VernacExtend",
            "77ea6df52ca892be8c6affaf564a1b3cc05b195f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PdivBound_correct3 : forall bound p base, nat_of_P p < nat_of_P bound -> PdivBound bound p base = (Some _ p, None _, 0).",
            "VernacStartTheoremProof",
            "80e694aff6c7056bc1a45c3e5a2e19e018dd8404"
        ],
        [
            "intros bound p base H; (unfold PdivBound in |- *; apply Pdivless1; auto).",
            "VernacExtend",
            "6797aed2966ff40465b6a956effe77adc3cffedc"
        ],
        [
            "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
            "VernacExtend",
            "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PdivBound_correct4 : forall bound p base bound', 1 < nat_of_P base -> nat_of_P bound = nat_of_P base * bound' -> nat_of_P bound <= nat_of_P p -> nat_of_P bound <= nat_of_P base * oZ (fst (fst (PdivBound bound p base))).",
            "VernacStartTheoremProof",
            "202583a15411fb3a702ad23943ef9b644472ad2d"
        ],
        [
            "intros bound p base bound' H H1 H2; case (PdivBound_correct bound p base); auto; intros H'1 (H'2, H'3); apply (H'3 bound'); auto with arith.",
            "VernacExtend",
            "2b14f1c4b4ecdefb5abf4a7bbda12adc09d35a38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Transparent Pdiv.",
            "VernacSetOpacity",
            "c92b03759ac517d2cbb6f3bed834feaf55250da9"
        ]
    ],
    "proofs": [
        {
            "name": "expPlus",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros n p; elim p; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ed97508c83e1c02a7d0a13a9b30d55883a2f4d65"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' q; rewrite mult_assoc_reverse; rewrite <- H'; auto.",
                        "VernacExtend",
                        "667779e84d1ab83663129314a2d46bc1ef1553f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_exp_correct",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros p n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "febbbc26d2c97b5d7e2f112bebc668b84de4385e"
                    ]
                },
                {
                    "command": [
                        "intros p0 H.",
                        "VernacExtend",
                        "6025e9c9f916aa01340d120e2c5e3fd51f699742"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y); simpl in |- *; auto.",
                        "VernacExtend",
                        "3187846de813d1c43ed533c235ea17f7b0d46dcf"
                    ]
                },
                {
                    "command": [
                        "rewrite ZL6; rewrite expPlus; rewrite H; auto.",
                        "VernacExtend",
                        "2b4a29b50b41bc738f86c9c7fa9fce4cab356d5b"
                    ]
                },
                {
                    "command": [
                        "intros p0 H.",
                        "VernacExtend",
                        "6025e9c9f916aa01340d120e2c5e3fd51f699742"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun (x y : positive) (_ : positive -> positive) => nat_of_P_mult_morphism x y); simpl in |- *; auto.",
                        "VernacExtend",
                        "3187846de813d1c43ed533c235ea17f7b0d46dcf"
                    ]
                },
                {
                    "command": [
                        "rewrite H; rewrite <- expPlus; rewrite <- ZL6; auto.",
                        "VernacExtend",
                        "55adecb0dd2158315916a2099da795375a0d85ee"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto.",
                        "VernacExtend",
                        "156d9749f5d42c3c33b18d31162b96a5b3827a88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pdivless1",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros bound p q base H; case q; simpl in |- *; auto; intros; rewrite H; auto.",
                        "VernacExtend",
                        "8e9eaf833025e36a6561eb05562abad041f57cd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pdivless2",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros bound p length base; case length; simpl in |- *; case (Pcompare bound p Datatypes.Eq); auto; (intros H; case H; auto; fail) || (intros p' H; case H; auto).",
                        "VernacExtend",
                        "03a3a76b4e1848e852453d72e455c36e13ef48b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_SUP_dec",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros p q; case (Pcompare p q Datatypes.Eq); auto; right; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "b35e3a182a2f41b85416a0c4d8077ca7a091203e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_even_lem",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; auto.",
                        "VernacExtend",
                        "8cc86b88463dfc0f8e086f74ff689e5ff2cde506"
                    ]
                },
                {
                    "command": [
                        "intros q; case q; simpl in |- *.",
                        "VernacExtend",
                        "b3b4698ebd4513aff730f0db670e61fd1a82e925"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "intros q'; rewrite (fun x y => plus_comm x (S y)); simpl in |- *; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "f2967b769aa75365d3c44b4193f9672067321779"
                    ]
                },
                {
                    "command": [
                        "intros p' H q; case q.",
                        "VernacExtend",
                        "5f268cc700351a3786239104df20eb3d0268b8c4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3d9e3cad2127e705c546560dd2e3fde1f1f047e9"
                    ]
                },
                {
                    "command": [
                        "intros q'; red in |- *; intros H0; case (H q').",
                        "VernacExtend",
                        "d9697c0c0c3fb57ff2b04f23a4a4abf2e9ac2526"
                    ]
                },
                {
                    "command": [
                        "replace (2 * q') with (2 * S q' - 2).",
                        "VernacExtend",
                        "4eaf075b20365bfafa6a2cbd3473026790035580"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; simpl in |- *; auto.",
                        "VernacExtend",
                        "7d6f1bfc4078c4294f325f5402860ecc3e41b77b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; auto.",
                        "VernacExtend",
                        "5e240f3a1938e506ae19ee61a75e31430c156634"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; repeat rewrite (fun x y => plus_comm x (S y)); simpl in |- *; auto.",
                        "VernacExtend",
                        "b78c3ed215e1651de7499366f4a37d9a5e35e712"
                    ]
                },
                {
                    "command": [
                        "case q'; simpl in |- *; auto.",
                        "VernacExtend",
                        "de22554ee6674d3100890e0c63b71e4f37d946d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pdivless_correct",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros bound p q base Hb; generalize q; pattern p in |- *; apply well_founded_ind with (R := fun a b => nat_of_P a < nat_of_P b); auto; clear p q.",
                        "VernacExtend",
                        "11860d9fb6fc6a77ee4f04cf139c4b3fbbc3a363"
                    ]
                },
                {
                    "command": [
                        "apply wf_inverse_image with (R := lt); auto.",
                        "VernacExtend",
                        "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
                    ]
                },
                {
                    "command": [
                        "exact lt_wf; auto.",
                        "VernacExtend",
                        "8b1e341da53ec3fa48685b95ca20164039d991c7"
                    ]
                },
                {
                    "command": [
                        "intros p Rec q Hq.",
                        "VernacExtend",
                        "7e02a273140a0f9fd4178a08c564724f69314630"
                    ]
                },
                {
                    "command": [
                        "case (compare_SUP_dec bound p); intros H1.",
                        "VernacExtend",
                        "9aa941e41c74d73d88ab1f2c808a3e1e6b1c5f83"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1; auto; simpl in |- *.",
                        "VernacExtend",
                        "8e08a23eddc63f1723f70df1851c73493fb0f12d"
                    ]
                },
                {
                    "command": [
                        "repeat (split; auto with arith).",
                        "VernacExtend",
                        "7129e4905de9b737392b572f3bfcef638c468dfa"
                    ]
                },
                {
                    "command": [
                        "ring; auto.",
                        "VernacExtend",
                        "0cc84a3f5ba99e5b72bc330e6ea7654dad1731a1"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_lt_Lt_compare_morphism; apply ZC1; auto.",
                        "VernacExtend",
                        "2d7b0d4135b3aae595487f37712cda6fee3551bb"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'1 H2; Contradict H2; apply lt_not_le; apply nat_of_P_lt_Lt_compare_morphism; apply ZC1; auto.",
                        "VernacExtend",
                        "59c8edcdbcc28ddb321989350ecca8424a1781f4"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless2; auto; simpl in |- *.",
                        "VernacExtend",
                        "9ddfd334122471f5c2455cb31c7f617e2ea2a7f4"
                    ]
                },
                {
                    "command": [
                        "generalize (Pdiv_correct p base); case (Pdiv p base); simpl in |- *.",
                        "VernacExtend",
                        "4a472f93f88ac71204178b8bdf1ee5e3682a2e9c"
                    ]
                },
                {
                    "command": [
                        "intros o1; case o1; simpl in |- *.",
                        "VernacExtend",
                        "dd09d1ca20f7c998da210798f612756057326175"
                    ]
                },
                {
                    "command": [
                        "intros o1' o2; case o2; simpl in |- *.",
                        "VernacExtend",
                        "61ec8deb5120c78f5aa0a155846f3df42f0075b5"
                    ]
                },
                {
                    "command": [
                        "intros o2' (Ho1, Ho2).",
                        "VernacExtend",
                        "01adba25b196820f619e680aaac09d7b35b2f0bc"
                    ]
                },
                {
                    "command": [
                        "generalize Hq; case q; simpl in |- *; auto.",
                        "VernacExtend",
                        "2d900dd132b787116b1db67be4f7468b399910a7"
                    ]
                },
                {
                    "command": [
                        "intros p0 Hq0; (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
                        "VernacExtend",
                        "7d4bccea6e6a6d63234705c3e508def3fea1854c"
                    ]
                },
                {
                    "command": [
                        "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
                        "VernacExtend",
                        "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
                    ]
                },
                {
                    "command": [
                        "generalize (Rec _ Hrec1 _ Hrec).",
                        "VernacExtend",
                        "91089702c76d546df43bd27d553bddd2931e7f5c"
                    ]
                },
                {
                    "command": [
                        "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
                        "VernacExtend",
                        "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
                    ]
                },
                {
                    "command": [
                        "intros p1; case p1; simpl in |- *.",
                        "VernacExtend",
                        "1a69359e3ff8455b20f14787663562c2b64a55c7"
                    ]
                },
                {
                    "command": [
                        "intros o3; case o3; simpl in |- *; auto.",
                        "VernacExtend",
                        "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
                    ]
                },
                {
                    "command": [
                        "intros o3' o4; case o4; simpl in |- *; auto.",
                        "VernacExtend",
                        "0385e98c47836c8ce54a7d99350306a76263ae4f"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "92dfe9a30e615c553dab844fa186ede3453e7c5c"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
                        "VernacExtend",
                        "0afc5435b81fc27a55292351483dfe23a102a75d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
                        "VernacExtend",
                        "7390e34eef68e659e8cad40347451845fa3861dc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "inversion Eq1.",
                        "VernacExtend",
                        "e7946710bd783cb374601c71415a91258421e379"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "dc197172db95141d4f62d2666f6387fa64fd7f69"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "Contradict H'6; auto.",
                        "VernacExtend",
                        "d2efeff40f59def319adc3783cc52d06dfb83ce3"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le; rewrite Ho1; auto.",
                        "VernacExtend",
                        "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
                        "VernacExtend",
                        "badc27b450f50d8804e9a988aba70e13077dd88e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "b1dcb5849056448e19414bddc76d4c38f222873d"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
                        "VernacExtend",
                        "0ff6f478683838df3dd72481866cb5dacf944e79"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
                        "VernacExtend",
                        "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
                        "VernacExtend",
                        "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
                    ]
                },
                {
                    "command": [
                        "intros o4; case o4; simpl in |- *.",
                        "VernacExtend",
                        "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "92dfe9a30e615c553dab844fa186ede3453e7c5c"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
                        "VernacExtend",
                        "0afc5435b81fc27a55292351483dfe23a102a75d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
                        "VernacExtend",
                        "7390e34eef68e659e8cad40347451845fa3861dc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; auto.",
                        "VernacExtend",
                        "09390ce3aba5c270201a262f0ee7c84bac346618"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * 1 + nat_of_P o2'); auto with arith.",
                        "VernacExtend",
                        "6326c026d8502be4651333138326d692ecfa29c8"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (nat_of_P o1' + 0); auto with arith.",
                        "VernacExtend",
                        "809867cbe87f02e2a710a7424f8017c366c5a3ad"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_lt_compat; auto with arith.",
                        "VernacExtend",
                        "a5f9f43d46fd1841bb0fe5a163c68ac14ffc30d7"
                    ]
                },
                {
                    "command": [
                        "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
                        "VernacExtend",
                        "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
                        "VernacExtend",
                        "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := nat_of_P o2').",
                        "VernacExtend",
                        "95bf841fa8652099619afedabed0a4b854cbb04e"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm (nat_of_P o2')); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "6ee4a4eb87f9bc38d65ccb81647b879de179ca02"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "aa9400c48534bc5595876e1954259b8e57524a28"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ho1; auto with arith.",
                        "VernacExtend",
                        "e47b96285aec76a4ac93b9767d31d6d98f72ecb8"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := Hq0); auto with arith.",
                        "VernacExtend",
                        "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P (xI p0)) with (1 + 2 * nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "3a068be1c4dc8f9bce901ecac783bd72f2202245"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
                        "VernacExtend",
                        "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
                        "VernacExtend",
                        "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
                    ]
                },
                {
                    "command": [
                        "intros p0 Hq0; (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
                        "VernacExtend",
                        "7d4bccea6e6a6d63234705c3e508def3fea1854c"
                    ]
                },
                {
                    "command": [
                        "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
                        "VernacExtend",
                        "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
                    ]
                },
                {
                    "command": [
                        "generalize (Rec _ Hrec1 _ Hrec).",
                        "VernacExtend",
                        "91089702c76d546df43bd27d553bddd2931e7f5c"
                    ]
                },
                {
                    "command": [
                        "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
                        "VernacExtend",
                        "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
                    ]
                },
                {
                    "command": [
                        "intros p1; case p1; simpl in |- *.",
                        "VernacExtend",
                        "1a69359e3ff8455b20f14787663562c2b64a55c7"
                    ]
                },
                {
                    "command": [
                        "intros o3; case o3; simpl in |- *; auto.",
                        "VernacExtend",
                        "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
                    ]
                },
                {
                    "command": [
                        "intros o3' o4; case o4; simpl in |- *; auto.",
                        "VernacExtend",
                        "0385e98c47836c8ce54a7d99350306a76263ae4f"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "92dfe9a30e615c553dab844fa186ede3453e7c5c"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
                        "VernacExtend",
                        "0afc5435b81fc27a55292351483dfe23a102a75d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
                        "VernacExtend",
                        "7390e34eef68e659e8cad40347451845fa3861dc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "inversion Eq1.",
                        "VernacExtend",
                        "e7946710bd783cb374601c71415a91258421e379"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "dc197172db95141d4f62d2666f6387fa64fd7f69"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "Contradict H'6; auto.",
                        "VernacExtend",
                        "d2efeff40f59def319adc3783cc52d06dfb83ce3"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le; rewrite Ho1; auto.",
                        "VernacExtend",
                        "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
                        "VernacExtend",
                        "badc27b450f50d8804e9a988aba70e13077dd88e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "b1dcb5849056448e19414bddc76d4c38f222873d"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
                        "VernacExtend",
                        "0ff6f478683838df3dd72481866cb5dacf944e79"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
                        "VernacExtend",
                        "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
                        "VernacExtend",
                        "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
                    ]
                },
                {
                    "command": [
                        "intros o4; case o4; simpl in |- *.",
                        "VernacExtend",
                        "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_plus_morphism; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "92dfe9a30e615c553dab844fa186ede3453e7c5c"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S (nat_of_P o4') * nat_of_P base).",
                        "VernacExtend",
                        "0afc5435b81fc27a55292351483dfe23a102a75d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite (fun x y => plus_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "3160c830d453bd9480b5b6ef5793f3644ecb5b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
                        "VernacExtend",
                        "7390e34eef68e659e8cad40347451845fa3861dc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; auto.",
                        "VernacExtend",
                        "09390ce3aba5c270201a262f0ee7c84bac346618"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * 1 + nat_of_P o2'); auto with arith.",
                        "VernacExtend",
                        "6326c026d8502be4651333138326d692ecfa29c8"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (nat_of_P o1' + 0); auto with arith.",
                        "VernacExtend",
                        "809867cbe87f02e2a710a7424f8017c366c5a3ad"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_lt_compat; auto with arith.",
                        "VernacExtend",
                        "a5f9f43d46fd1841bb0fe5a163c68ac14ffc30d7"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; auto with arith.",
                        "VernacExtend",
                        "353f89f99b71c6ebe21aa201cad0e4d43382a576"
                    ]
                },
                {
                    "command": [
                        "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
                        "VernacExtend",
                        "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
                        "VernacExtend",
                        "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m : nat => plus_le_reg_l n m p) with (p := nat_of_P o2').",
                        "VernacExtend",
                        "95bf841fa8652099619afedabed0a4b854cbb04e"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm (nat_of_P o2')); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "6ee4a4eb87f9bc38d65ccb81647b879de179ca02"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "aa9400c48534bc5595876e1954259b8e57524a28"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ho1; auto with arith.",
                        "VernacExtend",
                        "e47b96285aec76a4ac93b9767d31d6d98f72ecb8"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := Hq0); auto with arith.",
                        "VernacExtend",
                        "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P (xO p0)) with (0 + 2 * nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "16cc51592bb58f9cbd659e3ae0ce16a4478f048b"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
                        "VernacExtend",
                        "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
                        "VernacExtend",
                        "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P 1) with 1; auto with arith.",
                        "VernacExtend",
                        "2fbc327178c37238e8414be17cfa53662169d626"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; generalize (lt_O_nat_of_P o2'); (case (nat_of_P o2'); simpl in |- *).",
                        "VernacExtend",
                        "90200574c5ab9ba8239fc0fa6daa47564edda435"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P o1'); (case (nat_of_P o1'); simpl in |- *).",
                        "VernacExtend",
                        "c6e88f3027faa81758012d1547464530166245e8"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P base); (case (nat_of_P base); simpl in |- *).",
                        "VernacExtend",
                        "f4e33f571a476e775b11c6e918734b8234342a54"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros n H n0 H0 n1 H01; rewrite (fun x y => plus_comm x (S y)); simpl in |- *.",
                        "VernacExtend",
                        "b6ba769a2aaf82918bb2d35b3e543f5efd66abbf"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "generalize Hq; case q; simpl in |- *; auto.",
                        "VernacExtend",
                        "2d900dd132b787116b1db67be4f7468b399910a7"
                    ]
                },
                {
                    "command": [
                        "intros p0 Hq0 (Ho1, Ho2); (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
                        "VernacExtend",
                        "612ff9eb60b73f4e2c31a2e75a0a2310527b1b11"
                    ]
                },
                {
                    "command": [
                        "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
                        "VernacExtend",
                        "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
                    ]
                },
                {
                    "command": [
                        "generalize (Rec _ Hrec1 _ Hrec).",
                        "VernacExtend",
                        "91089702c76d546df43bd27d553bddd2931e7f5c"
                    ]
                },
                {
                    "command": [
                        "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
                        "VernacExtend",
                        "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
                    ]
                },
                {
                    "command": [
                        "intros p1; case p1; simpl in |- *.",
                        "VernacExtend",
                        "1a69359e3ff8455b20f14787663562c2b64a55c7"
                    ]
                },
                {
                    "command": [
                        "intros o3; case o3; simpl in |- *; auto.",
                        "VernacExtend",
                        "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
                    ]
                },
                {
                    "command": [
                        "intros o3' o4; case o4; simpl in |- *; auto.",
                        "VernacExtend",
                        "0385e98c47836c8ce54a7d99350306a76263ae4f"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "06d741844ead24fc25d9dcfd3a72227d7da77bac"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P base * 1); auto with arith.",
                        "VernacExtend",
                        "7390e34eef68e659e8cad40347451845fa3861dc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "inversion Eq1.",
                        "VernacExtend",
                        "e7946710bd783cb374601c71415a91258421e379"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "dc197172db95141d4f62d2666f6387fa64fd7f69"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "Contradict H'6; auto.",
                        "VernacExtend",
                        "d2efeff40f59def319adc3783cc52d06dfb83ce3"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le; rewrite Ho1; auto.",
                        "VernacExtend",
                        "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
                        "VernacExtend",
                        "badc27b450f50d8804e9a988aba70e13077dd88e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "b1dcb5849056448e19414bddc76d4c38f222873d"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
                        "VernacExtend",
                        "0ff6f478683838df3dd72481866cb5dacf944e79"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
                        "VernacExtend",
                        "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
                        "VernacExtend",
                        "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
                    ]
                },
                {
                    "command": [
                        "intros o4; case o4; simpl in |- *.",
                        "VernacExtend",
                        "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "06d741844ead24fc25d9dcfd3a72227d7da77bac"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, (H'2, H'3)).",
                        "VernacExtend",
                        "8cb34feb2d6541be344e6af70944e40b48f7b011"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P o1'); rewrite H'1; intros tmp; inversion tmp.",
                        "VernacExtend",
                        "9a27786d2ae621ad0301978d7a6f69b46228b57b"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; auto.",
                        "VernacExtend",
                        "09390ce3aba5c270201a262f0ee7c84bac346618"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (nat_of_P o1' * 1 + 0); auto with arith.",
                        "VernacExtend",
                        "43049dcec90329559aaef0fc83b566241d2a044c"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => plus_comm x 0); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "23b002aaf024fb168eb1e74faef64677c00bbcbc"
                    ]
                },
                {
                    "command": [
                        "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
                        "VernacExtend",
                        "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
                        "VernacExtend",
                        "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "aa9400c48534bc5595876e1954259b8e57524a28"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x => plus_comm x 0) in Ho1; simpl in Ho1; rewrite <- Ho1.",
                        "VernacExtend",
                        "d898c83ed18a35b122e563a866cc25083082601d"
                    ]
                },
                {
                    "command": [
                        "generalize Hq0; clear Hq0; replace (nat_of_P (xI p0)) with (2 * nat_of_P p0 + 1); try intros Hq0.",
                        "VernacExtend",
                        "88aa739a6d2ecd31434c6aa35370e1a9f680da11"
                    ]
                },
                {
                    "command": [
                        "case (le_lt_or_eq _ _ Hq0); auto.",
                        "VernacExtend",
                        "e0f6ca174bf1aa51aeac3df8020eb6779eff218d"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => plus_comm x (S y)); intros Hl1.",
                        "VernacExtend",
                        "ae9bd1e01caf933ba75b63952ecd75673f73f89d"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (2 * nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "71082fe364f97cc76637fac1b298f48da0319e4a"
                    ]
                },
                {
                    "command": [
                        "generalize Hb Ho1; case (nat_of_P base); auto.",
                        "VernacExtend",
                        "ae253613c6e19ea1182a5e8f943da2438d33a964"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros base'; case base'.",
                        "VernacExtend",
                        "43d433e261b9571d7d1843e3cdf32483aedcfe6c"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros base''; case base''.",
                        "VernacExtend",
                        "a8da77e44f837e934f7d8d7446a14047e523538e"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P (xI p0)) with (1 + 2 * nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "3a068be1c4dc8f9bce901ecac783bd72f2202245"
                    ]
                },
                {
                    "command": [
                        "intros Hb0 Ho0 H; Contradict H; rewrite Ho0.",
                        "VernacExtend",
                        "88936addf1ebfc2de06db7f36390b1b9f08d9bd1"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (S y)).",
                        "VernacExtend",
                        "3043d32f0368deae1a8d4187884dd610e7f2ed3d"
                    ]
                },
                {
                    "command": [
                        "apply Compare.not_eq_sym.",
                        "VernacExtend",
                        "22bf370bec72a14aa9bd887fd43c5e30d513e486"
                    ]
                },
                {
                    "command": [
                        "apply odd_even_lem.",
                        "VernacExtend",
                        "44e99834fead9ca5ab6a58a130243f173cd08d75"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
                        "VernacExtend",
                        "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
                    ]
                },
                {
                    "command": [
                        "intros n Hb0 Ho0 H; rewrite H.",
                        "VernacExtend",
                        "39bda9bca9cde0049e3b57be9cd28a425c45b378"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S (S n) * nat_of_P p0 + nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "44d7a0d636d63f6b6a22ba9a5adc50515d0cd30d"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "a04f67a71deb6dceb647b6d5b4c634af69e3c150"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; unfold nat_of_P in |- *; auto).",
                        "VernacExtend",
                        "9389f386ba446b00d0b629d835b21971e6bc3e43"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
                        "VernacExtend",
                        "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
                    ]
                },
                {
                    "command": [
                        "intros p0 Hq0 (Ho1, Ho2); (cut (nat_of_P o1' <= nat_of_P p0); [ intros Hrec | idtac ]).",
                        "VernacExtend",
                        "612ff9eb60b73f4e2c31a2e75a0a2310527b1b11"
                    ]
                },
                {
                    "command": [
                        "cut (nat_of_P o1' < nat_of_P p); [ intros Hrec1 | idtac ].",
                        "VernacExtend",
                        "ff40f1d8722f40ab4ecbb47a3ef9f74dd75b3d0e"
                    ]
                },
                {
                    "command": [
                        "generalize (Rec _ Hrec1 _ Hrec).",
                        "VernacExtend",
                        "91089702c76d546df43bd27d553bddd2931e7f5c"
                    ]
                },
                {
                    "command": [
                        "CaseEq (Pdivless bound o1' base p0); simpl in |- *.",
                        "VernacExtend",
                        "03b68bb34fee3042a81499dfba8c8aa1aed97a55"
                    ]
                },
                {
                    "command": [
                        "intros p1; case p1; simpl in |- *.",
                        "VernacExtend",
                        "1a69359e3ff8455b20f14787663562c2b64a55c7"
                    ]
                },
                {
                    "command": [
                        "intros o3; case o3; simpl in |- *; auto.",
                        "VernacExtend",
                        "b06c42de99d13f8a77d1e668d4f5a427ff5d23d0"
                    ]
                },
                {
                    "command": [
                        "intros o3' o4; case o4; simpl in |- *; auto.",
                        "VernacExtend",
                        "0385e98c47836c8ce54a7d99350306a76263ae4f"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "06d741844ead24fc25d9dcfd3a72227d7da77bac"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (0 * exp (nat_of_P base) n); auto with arith.",
                        "VernacExtend",
                        "b92a8389fa5f0161dddc917e569cb5814e8086a1"
                    ]
                },
                {
                    "command": [
                        "intros bound' H'5 H'6; case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'7; auto.",
                        "VernacExtend",
                        "a9c3a3330db2297680a713a7e9ff1b035b9ef488"
                    ]
                },
                {
                    "command": [
                        "apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "546aa5489091101ed5b9966bc9c08055d837c9f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "inversion Eq1.",
                        "VernacExtend",
                        "e7946710bd783cb374601c71415a91258421e379"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt bound' (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "dc197172db95141d4f62d2666f6387fa64fd7f69"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "Contradict H'6; auto.",
                        "VernacExtend",
                        "d2efeff40f59def319adc3783cc52d06dfb83ce3"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le; rewrite Ho1; auto.",
                        "VernacExtend",
                        "7cead45da6438b8af8604538c6c7e3fcb4ea6b73"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (nat_of_P o1' * nat_of_P base + 1 * nat_of_P base); auto with arith.",
                        "VernacExtend",
                        "badc27b450f50d8804e9a988aba70e13077dd88e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ab3fa8d215cdc73141fcf1a11781cfe38de440ec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_plus_distr_r.",
                        "VernacExtend",
                        "b1dcb5849056448e19414bddc76d4c38f222873d"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P o1' + 1) with (S (nat_of_P o1')); auto with arith.",
                        "VernacExtend",
                        "0ff6f478683838df3dd72481866cb5dacf944e79"
                    ]
                },
                {
                    "command": [
                        "rewrite H'5; auto with arith.",
                        "VernacExtend",
                        "da89c0377473eb45bf989324fe2fe0ad895cae56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fun x y => mult_comm (nat_of_P x) y); auto with arith.",
                        "VernacExtend",
                        "a946f13a4d9e2bb6895f0414032104a0d3a2ba70"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
                        "VernacExtend",
                        "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
                    ]
                },
                {
                    "command": [
                        "intros o4; case o4; simpl in |- *.",
                        "VernacExtend",
                        "05e6d8d6975f6c20d8504ab35d5a752ec9745340"
                    ]
                },
                {
                    "command": [
                        "intros o4' n Eq1; rewrite nat_of_P_mult_morphism.",
                        "VernacExtend",
                        "06d741844ead24fc25d9dcfd3a72227d7da77bac"
                    ]
                },
                {
                    "command": [
                        "intros (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "1581ca6604adc2f5f9f70b3932314591df723fa1"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => mult_comm x (nat_of_P y)); auto with arith.",
                        "VernacExtend",
                        "45f70b96ef7ec4ca6d1cf9abe94a5e460931b4b0"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; apply (H'4 bound'); auto.",
                        "VernacExtend",
                        "ca2f6bfd82e3f65dc283084be34d1f2a140ef490"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt (nat_of_P bound) (nat_of_P o1')); intros H'8; auto.",
                        "VernacExtend",
                        "37241c0a4363b136f1b3bea70e86241c1ecf1fd9"
                    ]
                },
                {
                    "command": [
                        "rewrite Pdivless1 in Eq1; auto.",
                        "VernacExtend",
                        "e71177aaf6f61cee7e9cf8ee1f104975e702d67c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto.",
                        "VernacExtend",
                        "3e8554f008f406fe3c77f4bea693774dd5941e37"
                    ]
                },
                {
                    "command": [
                        "intros n Eq1 (H'1, ((H'2, H'3), H'4)); repeat (split; auto).",
                        "VernacExtend",
                        "421101017b730b73e126bfb4e29fb991104a8784"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite H'1; ring.",
                        "VernacExtend",
                        "89b1478f49cf84958b36744f5b10f42c64ef8871"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (0 * exp (nat_of_P base) n); auto with arith.",
                        "VernacExtend",
                        "b92a8389fa5f0161dddc917e569cb5814e8086a1"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; Contradict H0; rewrite Ho1; rewrite H'1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "9089826ecd0178d11ed8691b6cf128bfe6c5e3fa"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; auto with arith.",
                        "VernacExtend",
                        "353f89f99b71c6ebe21aa201cad0e4d43382a576"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (nat_of_P o1' * 1 + 0); auto with arith.",
                        "VernacExtend",
                        "43049dcec90329559aaef0fc83b566241d2a044c"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "apply mult_S_le_reg_l with (n := pred (nat_of_P base)).",
                        "VernacExtend",
                        "19009c2d3bf60c9aeddd3017a0b85c82134bad55"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (nat_of_P base))) with (nat_of_P base).",
                        "VernacExtend",
                        "8fc3edebc6f8deb4ddb7e3096ce19424c130c280"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (nat_of_P p); auto.",
                        "VernacExtend",
                        "f5b11db90282d680fbdfaf389478f364aea630e8"
                    ]
                },
                {
                    "command": [
                        "rewrite Ho1; rewrite (fun x => plus_comm x 0); simpl in |- *; auto.",
                        "VernacExtend",
                        "e4bb7528dc2ac2271e44c49a8c523c4cb10a2eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite (mult_comm (nat_of_P base)); simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "aa9400c48534bc5595876e1954259b8e57524a28"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := Hq0); auto with arith.",
                        "VernacExtend",
                        "78fcbf49c916699e064934d50e7f0dbbfa50a6a1"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P (xO p0)) with (2 * nat_of_P p0); auto with arith.",
                        "VernacExtend",
                        "8e00237366eeac6ff15a4c92894138d029487916"
                    ]
                },
                {
                    "command": [
                        "unfold nat_of_P in |- *; simpl in |- *; (rewrite ZL6; auto).",
                        "VernacExtend",
                        "02e33bf257ad3d143338a6426dbc7151a10fc9a7"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P base); case (nat_of_P base); simpl in |- *; auto; intros tmp; inversion tmp.",
                        "VernacExtend",
                        "5e9aa3bd236b01b03c95e3064799ff0882f1b6d5"
                    ]
                },
                {
                    "command": [
                        "replace (nat_of_P 1) with 1; auto with arith.",
                        "VernacExtend",
                        "2fbc327178c37238e8414be17cfa53662169d626"
                    ]
                },
                {
                    "command": [
                        "intros Hq0 (H, H0); Contradict Hq0.",
                        "VernacExtend",
                        "46cecc7b2c177bc70d66443163e2cad3671a223e"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le.",
                        "VernacExtend",
                        "153fbf8b5dfa799e22f198ba7d37d620ab119bf0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "generalize (lt_O_nat_of_P o1'); case (nat_of_P o1'); simpl in |- *; auto.",
                        "VernacExtend",
                        "7b35f9a996b4f33ee997408ab4e58093031ce641"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros n H2; generalize Hb.",
                        "VernacExtend",
                        "2c5a9e7312165ad99fe268a3dbd9316d855b93db"
                    ]
                },
                {
                    "command": [
                        "case (nat_of_P base); simpl in |- *; auto.",
                        "VernacExtend",
                        "5bbf992fa00e2639af20ff9ec6d40f511c4eecfa"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros base'; case base'; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ba2a4aad437f3139e45c0cdb332d3474e33292a8"
                    ]
                },
                {
                    "command": [
                        "intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "33f2290d8230916d25222ab1ffe276edcc8fd51b"
                    ]
                },
                {
                    "command": [
                        "intros o2; case o2; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "5c2225f5177e253f4a5de73211bd63252d55782e"
                    ]
                },
                {
                    "command": [
                        "intros o2' (Ho1, Ho2); repeat (split; auto with arith).",
                        "VernacExtend",
                        "f9a8c90fca747f561312dececc2064988577c6ed"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros bound' H H0; Contradict Ho2.",
                        "VernacExtend",
                        "1ed21100cc8d0a60fc56e1cef51493216a683b6e"
                    ]
                },
                {
                    "command": [
                        "apply le_not_lt.",
                        "VernacExtend",
                        "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ho1.",
                        "VernacExtend",
                        "4323295e1f0746ac4091ea5415bed646332ab1d7"
                    ]
                },
                {
                    "command": [
                        "generalize H; case bound'.",
                        "VernacExtend",
                        "694232592a638a462edf283352e367d77f0ba2df"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto.",
                        "VernacExtend",
                        "156d9749f5d42c3c33b18d31162b96a5b3827a88"
                    ]
                },
                {
                    "command": [
                        "intros Eq2; generalize (lt_O_nat_of_P bound); rewrite Eq2; intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "16da72af0ba7d385496f22ae3950bc11c61ba73b"
                    ]
                },
                {
                    "command": [
                        "intros n Eq2; apply le_trans with (nat_of_P bound); auto with arith.",
                        "VernacExtend",
                        "ed28b457ab1b9239356a2478c5d6d9a351c0dc4a"
                    ]
                },
                {
                    "command": [
                        "rewrite Eq2; auto with arith.",
                        "VernacExtend",
                        "aa9714902dd299b22b5c969a0d9d69cae8e60f4f"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "87099fb271d5a701bc9a827c7845c954b757479c"
                    ]
                },
                {
                    "command": [
                        "intros (Ho1, Ho2); generalize (lt_O_nat_of_P p); rewrite Ho1; intros tmp; Contradict tmp; auto with arith.",
                        "VernacExtend",
                        "41070712ce77d9fa47d4f9c43cdab54e646595a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PdivBound_correct",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "intros; unfold PdivBound in |- *; apply Pdivless_correct; auto.",
                        "VernacExtend",
                        "25dfc1ac6713120bf08275a6bdd166af7cb2db06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PdivBound_correct1",
            "line_nb": 480,
            "steps": [
                {
                    "command": [
                        "intros bound p base H; generalize (PdivBound_correct bound p base); intuition.",
                        "VernacExtend",
                        "77ea6df52ca892be8c6affaf564a1b3cc05b195f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PdivBound_correct2",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "intros bound p base H; generalize (PdivBound_correct bound p base); intuition.",
                        "VernacExtend",
                        "77ea6df52ca892be8c6affaf564a1b3cc05b195f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PdivBound_correct3",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "intros bound p base H; (unfold PdivBound in |- *; apply Pdivless1; auto).",
                        "VernacExtend",
                        "6797aed2966ff40465b6a956effe77adc3cffedc"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_gt_Gt_compare_complement_morphism; auto with arith.",
                        "VernacExtend",
                        "3f25f6b9906a583f058f5bf0a2fab8bc6fa851df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PdivBound_correct4",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "intros bound p base bound' H H1 H2; case (PdivBound_correct bound p base); auto; intros H'1 (H'2, H'3); apply (H'3 bound'); auto with arith.",
                        "VernacExtend",
                        "2b14f1c4b4ecdefb5abf4a7bbda12adc09d35a38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}