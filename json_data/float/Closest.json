{
    "filename": "Closest.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Fround.",
            "VernacRequire",
            "b11fdd0941a4f1a52e57155f36d7dffcfe10891d"
        ],
        [
            "Section Fclosest.",
            "VernacBeginSection",
            "307b13069db2ecfcac26fa47ce8b68434b4aa388"
        ],
        [
            "Variable b : Fbound.",
            "VernacAssumption",
            "17a11c003f49f819b8cb809f61b140702916486d"
        ],
        [
            "Variable radix : Z.",
            "VernacAssumption",
            "2349b77d134e0c9bb013a8bdca0020ca16fc023b"
        ],
        [
            "Variable precision : nat.",
            "VernacAssumption",
            "2235bc83b7ebf4cbe373b5fa3b4f3c643d454130"
        ],
        [
            "Let FtoRradix := FtoR radix.",
            "VernacDefinition",
            "5aa29a9595c6e9e03b28c6d232299552ec761ad7"
        ],
        [
            "Local Coercion FtoRradix : float >-> R.",
            "VernacCoercion",
            "cec6b845059d434f72dda1a67638af64e1fb0628"
        ],
        [
            "Hypothesis radixMoreThanOne : (1 < radix)%Z.",
            "VernacAssumption",
            "f4d3774b2275f4c4c3af941091d4d99f9a2129aa"
        ],
        [
            "Hypothesis precisionGreaterThanOne : 1 < precision.",
            "VernacAssumption",
            "9f627fb385d8fe283ac9563556925f37be8e5402"
        ],
        [
            "Hypothesis pGivesBound : Zpos (vNum b) = Zpower_nat radix precision.",
            "VernacAssumption",
            "d558f967d87d2a42d14158ac115b10c6f5358430"
        ],
        [
            "Definition Closest (r : R) (p : float) := Fbounded b p /\\ (forall f : float, Fbounded b f -> (Rabs (p - r) <= Rabs (f - r))%R).",
            "VernacDefinition",
            "2d2e7503e1217dd87ab794c39956d97558d98ab2"
        ],
        [
            "Theorem ClosestTotal : TotalP Closest.",
            "VernacStartTheoremProof",
            "835cb88184b699a3f2d78b22a18302824d13683c"
        ],
        [
            "red in |- *; intros r.",
            "VernacExtend",
            "c63497384671e5faf7b82172be82e1db3a859d77"
        ],
        [
            "case MinEx with (r := r) (3 := pGivesBound); auto with arith.",
            "VernacExtend",
            "5d02dfc661eab9ef5e1ca2dfdc362a697bcecc04"
        ],
        [
            "intros min H'.",
            "VernacExtend",
            "5581ae54b3d78759048ed9efe3da8341f8e0f9e8"
        ],
        [
            "case MaxEx with (r := r) (3 := pGivesBound); auto with arith.",
            "VernacExtend",
            "27862fc82f45c97e0edb1d980fa496cbd4fd8bf8"
        ],
        [
            "intros max H'0.",
            "VernacExtend",
            "f261be3259b2751cae44c4dfdb556df5cd27e3f0"
        ],
        [
            "cut (min <= r)%R; [ intros Rl1 | apply isMin_inv1 with (1 := H') ].",
            "VernacExtend",
            "4ddbef560699e2e298b716a3c12e6c3199832183"
        ],
        [
            "cut (r <= max)%R; [ intros Rl2 | apply isMax_inv1 with (1 := H'0) ].",
            "VernacExtend",
            "5ec6637233538df6079f56536e4ca42530c6f3c3"
        ],
        [
            "case (Rle_or_lt (Rabs (min - r)) (Rabs (max - r))); intros H'1.",
            "VernacExtend",
            "e11114f8796b76c3bc38845401a95ad0e0928808"
        ],
        [
            "exists min; split.",
            "VernacExtend",
            "60d30e9aeea99eff3bea1a113c3453ad0718d28a"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "intros f H'2.",
            "VernacExtend",
            "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
        ],
        [
            "case (Rle_or_lt f r); intros H'3.",
            "VernacExtend",
            "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
        ],
        [
            "repeat rewrite Faux.Rabsolu_left1.",
            "VernacExtend",
            "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
        ],
        [
            "apply Ropp_le_contravar; auto.",
            "VernacExtend",
            "e335ce56bcf6da656c440a80004ee304d2971800"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "elim H'; auto.",
            "VernacExtend",
            "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rle_trans with (1 := H'1).",
            "VernacExtend",
            "a8792f91693c7b512980ad52160e08b2225ad389"
        ],
        [
            "repeat rewrite Rabs_right.",
            "VernacExtend",
            "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "elim H'0; auto.",
            "VernacExtend",
            "0ef5a21bf4500edd2949a43dcada7d536e20e55e"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "exists max; split.",
            "VernacExtend",
            "f37d60997c9a49c5aea63610221c6b324f149553"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "intros f H'2.",
            "VernacExtend",
            "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
        ],
        [
            "case (Rle_or_lt f r); intros H'3.",
            "VernacExtend",
            "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
        ],
        [
            "apply Rle_trans with (1 := Rlt_le _ _ H'1).",
            "VernacExtend",
            "d501d0edae5f0b4274503566821694a48c17d7cf"
        ],
        [
            "repeat rewrite Faux.Rabsolu_left1.",
            "VernacExtend",
            "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
        ],
        [
            "apply Ropp_le_contravar; auto.",
            "VernacExtend",
            "e335ce56bcf6da656c440a80004ee304d2971800"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "elim H'; auto.",
            "VernacExtend",
            "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "elim H'0; auto.",
            "VernacExtend",
            "0ef5a21bf4500edd2949a43dcada7d536e20e55e"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestCompatible : CompatibleP b radix Closest.",
            "VernacStartTheoremProof",
            "2cc013e68be9d54f6e65ce500585e4e1b029f737"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros r1 r2 p q H'; case H'.",
            "VernacExtend",
            "4b7e61c0c7b95c57f12bf570d5b9ba798b949abf"
        ],
        [
            "intros H'0 H'1 H'2 H'3 H'4.",
            "VernacExtend",
            "6d60f94e627a0c417c335939c5a25a2f29488438"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros f H'5.",
            "VernacExtend",
            "6ae3aa677485cf3545585d9fec743fc3edabf86b"
        ],
        [
            "unfold FtoRradix in |- *; rewrite <- H'3; rewrite <- H'2; auto.",
            "VernacExtend",
            "738b4ddc19ddd480c64daa8ef5a32d4dc96be95e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMin : forall (r : R) (min max : float), isMin b radix r min -> isMax b radix r max -> (2%nat * r <= min + max)%R -> Closest r min.",
            "VernacStartTheoremProof",
            "d779ae4e14648a7439c2d087bce82b02e816ad43"
        ],
        [
            "intros r min max H' H'0 H'1; split.",
            "VernacExtend",
            "80757abb5c74a55535b7a94304189bad457d2254"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "intros f H'2.",
            "VernacExtend",
            "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
        ],
        [
            "case (Rle_or_lt f r); intros H'3.",
            "VernacExtend",
            "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
        ],
        [
            "repeat rewrite Faux.Rabsolu_left1.",
            "VernacExtend",
            "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMin_inv1 with (1 := H'); auto.",
            "VernacExtend",
            "a02228ba9b5872b22779fa417c5278a79ee12e4e"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (min - r)).",
            "VernacExtend",
            "302dbeb755420a2e36c070c2e55b66601847d01b"
        ],
        [
            "rewrite (Rabs_right (f - r)).",
            "VernacExtend",
            "de3aa09e1b50c11a48e83bc0f08f99384fa7195b"
        ],
        [
            "apply Rle_trans with (max - r)%R.",
            "VernacExtend",
            "efc703eb02431a04cb4fc1d853605b6e87e1c6dd"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "cut (forall x y : R, (- (x - y))%R = (y - x)%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; unfold Rminus in |- *; ring ].",
            "VernacExtend",
            "d319d0ec325f72585f8d9be25f72615d0ae6ccc6"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoR radix min).",
            "VernacExtend",
            "c88890791685f51fb85a048d2ba739fc3e5c10ac"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "replace (r + (FtoR radix min + (max - r)))%R with (min + max)%R.",
            "VernacExtend",
            "efa9e58960d9a9dd4cb915ca939638794d3ea628"
        ],
        [
            "replace (r + r)%R with (2%nat * r)%R; auto.",
            "VernacExtend",
            "e4e117e6d4c14ef3aedaea6677abd0d83381fbd2"
        ],
        [
            "simpl in |- *; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "simpl in |- *; fold FtoRradix; ring.",
            "VernacExtend",
            "4d3c448a94306d215ef2ba5b77668059a9d18794"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMin_inv1 with (1 := H'); auto.",
            "VernacExtend",
            "a02228ba9b5872b22779fa417c5278a79ee12e4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMax : forall (r : R) (min max : float), isMin b radix r min -> isMax b radix r max -> (min + max <= 2%nat * r)%R -> Closest r max.",
            "VernacStartTheoremProof",
            "2a715996ad50a21cb9f8301c463d9ff0e226a002"
        ],
        [
            "intros r min max H' H'0 H'1; split.",
            "VernacExtend",
            "80757abb5c74a55535b7a94304189bad457d2254"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "intros f H'2.",
            "VernacExtend",
            "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
        ],
        [
            "case (Rle_or_lt f r); intros H'3.",
            "VernacExtend",
            "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
        ],
        [
            "rewrite (Rabs_right (max - r)).",
            "VernacExtend",
            "41356e79e28be0fa441f291be5376b8cd2a2ee12"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (f - r)).",
            "VernacExtend",
            "1af7b3f19fd95f0b900e5296140d923cb9472045"
        ],
        [
            "apply Rle_trans with (r - min)%R.",
            "VernacExtend",
            "c16e332b60240b0c3533c0d2d56394879ceff77b"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoRradix min).",
            "VernacExtend",
            "686a8e7848de53567fea49742d81993c56ddab5b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "replace (r + (min + (max - r)))%R with (min + max)%R.",
            "VernacExtend",
            "9851dd55545bff3829ac3f53260ceee08ae8dce8"
        ],
        [
            "replace (r + r)%R with (2%nat * r)%R; auto.",
            "VernacExtend",
            "e4e117e6d4c14ef3aedaea6677abd0d83381fbd2"
        ],
        [
            "simpl in |- *; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "simpl in |- *; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "replace (r - min)%R with (- (min - r))%R.",
            "VernacExtend",
            "39f1889c79440f5ea7e44822e8b0e131f5d192ce"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "simpl in |- *; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMax_inv1 with (1 := H'0); auto.",
            "VernacExtend",
            "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
        ],
        [
            "repeat rewrite Rabs_right.",
            "VernacExtend",
            "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
            "VernacExtend",
            "b89f5dcf86312de3b227edd67651da43357902b5"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMax_inv1 with (1 := H'0); auto.",
            "VernacExtend",
            "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMinOrMax : MinOrMaxP b radix Closest.",
            "VernacStartTheoremProof",
            "5784a494d0b41bb4e7ee8841fbffa64e6a3c1367"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros r p H'.",
            "VernacExtend",
            "bb2891358befd1ab57b62b9776e47caca0dafabc"
        ],
        [
            "case (Rle_or_lt p r); intros H'1.",
            "VernacExtend",
            "6c01fa22f9b95e7384e879aa4842efebaf7a68ef"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros f H'0 H'2.",
            "VernacExtend",
            "39fed5c5e0c0c19404b41d1b29a91f4f1a0dce5e"
        ],
        [
            "apply Rplus_le_reg_l with (r := (- r)%R).",
            "VernacExtend",
            "95f1f179707b13bde1d947e8d8aa4e6aa2e17fc2"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "rewrite <- (Rabs_right (r - FtoR radix p)).",
            "VernacExtend",
            "6b2f02890c28fa14b89a1c34e683724e673f9cb9"
        ],
        [
            "rewrite <- (Rabs_right (r - FtoR radix f)).",
            "VernacExtend",
            "fc37c68f7bb0b22708816226df7f43cad7deebd6"
        ],
        [
            "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 r); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
            "VernacExtend",
            "f3d4ec3974b5bd6dd541d9c20d199020903a5c49"
        ],
        [
            "elim H'; auto.",
            "VernacExtend",
            "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix f).",
            "VernacExtend",
            "f46eae954429d8f1cc76bb478b23f0a7fdc3b684"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix p).",
            "VernacExtend",
            "833a0b4b89875677d956cda50bb940e21d015067"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "right; split; auto.",
            "VernacExtend",
            "1cc5054ad1405940e563f1d7ddce468251301130"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "intros f H'0 H'2.",
            "VernacExtend",
            "39fed5c5e0c0c19404b41d1b29a91f4f1a0dce5e"
        ],
        [
            "apply Rplus_le_reg_l with (r := (- r)%R).",
            "VernacExtend",
            "95f1f179707b13bde1d947e8d8aa4e6aa2e17fc2"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "rewrite <- (Faux.Rabsolu_left1 (r - FtoR radix p)).",
            "VernacExtend",
            "9b8e518a585906124da4f6f103cffee3891c5161"
        ],
        [
            "rewrite <- (Faux.Rabsolu_left1 (r - FtoR radix f)).",
            "VernacExtend",
            "78fa90f0969c9f03341f6a07b931b6e2befb822d"
        ],
        [
            "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 r); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
            "VernacExtend",
            "f3d4ec3974b5bd6dd541d9c20d199020903a5c49"
        ],
        [
            "elim H'; auto.",
            "VernacExtend",
            "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoR radix f).",
            "VernacExtend",
            "66d0f3243a0db46c88cb6d4d9fe6478a43854fe7"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoR radix p).",
            "VernacExtend",
            "fc11380df73190aa963e9755364843c47e0e67c5"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMinEq : forall (r : R) (min max p : float), isMin b radix r min -> isMax b radix r max -> (2%nat * r < min + max)%R -> Closest r p -> p = min :>R.",
            "VernacStartTheoremProof",
            "d509aac5f13091f9e9cd313937c23cada194b6cd"
        ],
        [
            "intros r min max p H' H'0 H'1 H'2.",
            "VernacExtend",
            "595410a1465afe7bdafa48ed1275e6b1de6eb8bc"
        ],
        [
            "case (ClosestMinOrMax r p); auto; intros H'3.",
            "VernacExtend",
            "986239f7f92e854218e68b68961c15cf8ab1b7b0"
        ],
        [
            "unfold FtoRradix in |- *; apply MinEq with (1 := H'3); auto.",
            "VernacExtend",
            "e51dc6e94d5ad952d8a084fc67772be227512fd1"
        ],
        [
            "absurd (Rabs (max - r) <= Rabs (min - r))%R.",
            "VernacExtend",
            "a6828dc8e13c2f9ca81c1c2e10d79e59dbee2db9"
        ],
        [
            "apply Rgt_not_le.",
            "VernacExtend",
            "be8a1e7f9ca2303d5ddda077b45cc15db6c6b3ce"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (min - r)).",
            "VernacExtend",
            "302dbeb755420a2e36c070c2e55b66601847d01b"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "replace (- (min - r))%R with (r - min)%R; [ idtac | ring ].",
            "VernacExtend",
            "2b362554f137fb284ab0452b429b278ad8bd5911"
        ],
        [
            "red in |- *; apply Rplus_lt_reg_l with (r := FtoRradix min).",
            "VernacExtend",
            "d574b864b56f3094def7f04cb29127f6a6fc78c0"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "apply Rplus_lt_reg_l with (r := r).",
            "VernacExtend",
            "06181ca42718b140c9119d340113675526c0b61b"
        ],
        [
            "replace (r + r)%R with (2%nat * r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "fcf2330f4483ef59404740732edc44992f04db7d"
        ],
        [
            "replace (r + (min + (max - r)))%R with (min + max)%R; [ idtac | ring ]; auto.",
            "VernacExtend",
            "24a8d5b0dbeaf67c3f9dbe81cc15105067215522"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMax_inv1 with (1 := H'0); auto.",
            "VernacExtend",
            "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMin_inv1 with (1 := H'); auto.",
            "VernacExtend",
            "a02228ba9b5872b22779fa417c5278a79ee12e4e"
        ],
        [
            "cut (Closest r max).",
            "VernacExtend",
            "deee8b700ec98becc7a19b576c4a9ec5b1cc90f4"
        ],
        [
            "intros H'4; case H'4.",
            "VernacExtend",
            "387c9701c50c1738dc7ad2e06e79d1cf42963c31"
        ],
        [
            "intros H'5 H'6; apply H'6; auto.",
            "VernacExtend",
            "7bfa1fef5fe5e2dda9bdef8c7eb1d2ed0b9b2ecb"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "apply ClosestCompatible with (1 := H'2); auto.",
            "VernacExtend",
            "a84dbbdd011908d570ac8c1d7fca927f3d9446a8"
        ],
        [
            "apply MaxEq with (1 := H'3); auto.",
            "VernacExtend",
            "1274d4f8d1f34726a6a426e020855918f8de62f8"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMaxEq : forall (r : R) (min max p : float), isMin b radix r min -> isMax b radix r max -> (min + max < 2%nat * r)%R -> Closest r p -> p = max :>R.",
            "VernacStartTheoremProof",
            "cf398799e7239c5c3a55ca679ad1431be59e1190"
        ],
        [
            "intros r min max p H' H'0 H'1 H'2.",
            "VernacExtend",
            "595410a1465afe7bdafa48ed1275e6b1de6eb8bc"
        ],
        [
            "case (ClosestMinOrMax r p); auto; intros H'3.",
            "VernacExtend",
            "986239f7f92e854218e68b68961c15cf8ab1b7b0"
        ],
        [
            "2: unfold FtoRradix in |- *; apply MaxEq with (1 := H'3); auto.",
            "VernacExtend",
            "fe8ffc1f6145c36316655d4505387c4c253e9cba"
        ],
        [
            "absurd (Rabs (min - r) <= Rabs (max - r))%R.",
            "VernacExtend",
            "5e7c838e9f6d07577aba9de9044484c69e21682c"
        ],
        [
            "apply Rgt_not_le.",
            "VernacExtend",
            "be8a1e7f9ca2303d5ddda077b45cc15db6c6b3ce"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (min - r)).",
            "VernacExtend",
            "302dbeb755420a2e36c070c2e55b66601847d01b"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "replace (- (min - r))%R with (r - min)%R; [ idtac | ring ].",
            "VernacExtend",
            "2b362554f137fb284ab0452b429b278ad8bd5911"
        ],
        [
            "red in |- *; apply Rplus_lt_reg_l with (r := FtoRradix min).",
            "VernacExtend",
            "d574b864b56f3094def7f04cb29127f6a6fc78c0"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "apply Rplus_lt_reg_l with (r := r).",
            "VernacExtend",
            "06181ca42718b140c9119d340113675526c0b61b"
        ],
        [
            "replace (r + r)%R with (2%nat * r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "fcf2330f4483ef59404740732edc44992f04db7d"
        ],
        [
            "replace (r + (min + (max - r)))%R with (min + max)%R; [ idtac | ring ]; auto.",
            "VernacExtend",
            "24a8d5b0dbeaf67c3f9dbe81cc15105067215522"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMax_inv1 with (1 := H'0); auto.",
            "VernacExtend",
            "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
        ],
        [
            "apply Rplus_le_reg_l with (r := r).",
            "VernacExtend",
            "e3efe88e02efb8a96343b089e3fa93469796372b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply isMin_inv1 with (1 := H'); auto.",
            "VernacExtend",
            "a02228ba9b5872b22779fa417c5278a79ee12e4e"
        ],
        [
            "cut (Closest r min).",
            "VernacExtend",
            "89e8c314f1d8aff9dd27ff51c41ee1ceafb33962"
        ],
        [
            "intros H'4; case H'4.",
            "VernacExtend",
            "387c9701c50c1738dc7ad2e06e79d1cf42963c31"
        ],
        [
            "intros H'5 H'6; apply H'6; auto.",
            "VernacExtend",
            "7bfa1fef5fe5e2dda9bdef8c7eb1d2ed0b9b2ecb"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "apply ClosestCompatible with (1 := H'2); auto.",
            "VernacExtend",
            "a84dbbdd011908d570ac8c1d7fca927f3d9446a8"
        ],
        [
            "apply MinEq with (1 := H'3); auto.",
            "VernacExtend",
            "d5e9d7257a78a7ee0f80520b76408dc45a08abf5"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestMonotone : MonotoneP radix Closest.",
            "VernacStartTheoremProof",
            "0c8e3763b79c0bbc86b91ee41efbe10729e22f5c"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros p q p' q' H' H'0 H'1.",
            "VernacExtend",
            "f4c56fd849f8bf2e90c31c6b70a192c1c381567b"
        ],
        [
            "change (p' <= q')%R in |- *.",
            "VernacExtend",
            "4668631fc9fe75e30f8d0f688ee623d02ab7c0f8"
        ],
        [
            "case (Rle_or_lt p p'); intros Rl0.",
            "VernacExtend",
            "852ee529baca9976b78e62cc04e314bd192eba62"
        ],
        [
            "case (Rle_or_lt p q'); intros Rl1.",
            "VernacExtend",
            "da2ddc9f43ebb6a6571298a2c690fd7c4b188dc4"
        ],
        [
            "apply Rplus_le_reg_l with (r := (- p)%R).",
            "VernacExtend",
            "be7234a096ec846f9abe774fd240c2749b394eee"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "rewrite <- (Faux.Rabsolu_left1 (p - p')).",
            "VernacExtend",
            "a34163926a4df1f146d6e70f4583401468e88dab"
        ],
        [
            "rewrite <- (Faux.Rabsolu_left1 (p - q')).",
            "VernacExtend",
            "23677455d88167a18778a14642f2f74c52217e5a"
        ],
        [
            "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 p); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
            "VernacExtend",
            "e5ba82fd5fc306c9558a397cf279e27ed60696e7"
        ],
        [
            "elim H'0; auto.",
            "VernacExtend",
            "0ef5a21bf4500edd2949a43dcada7d536e20e55e"
        ],
        [
            "intros H'2 H'3; apply H'3; auto.",
            "VernacExtend",
            "c57e59fd1bf9ba9d7cb410ff995761014a9297fc"
        ],
        [
            "case H'1; auto.",
            "VernacExtend",
            "a44f1b914e489dd19b841fdfab025ba14e3d8f86"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoR radix q').",
            "VernacExtend",
            "7e5f087cd6412b13b7d1cc6146116a76e78f7018"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rplus_le_reg_l with (r := FtoR radix p').",
            "VernacExtend",
            "711aececcf58a98664aa029b1a1d05908987f00b"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "case (Rle_or_lt p' q); intros Rl2.",
            "VernacExtend",
            "3060c0ba41e941e6c92abbb36c66cd90fca8fc88"
        ],
        [
            "apply Rplus_le_reg_l with (r := (- q)%R).",
            "VernacExtend",
            "a4d336b0f4a7f48e2463cffe78fb7ef5187789d8"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "rewrite <- (Rabs_right (q - p')).",
            "VernacExtend",
            "3175c1c59071b3d9882f48021235104df84a66e7"
        ],
        [
            "2: apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix p').",
            "VernacExtend",
            "7fd4b909e7f6564e8613ef4a61e350c6d0655c8d"
        ],
        [
            "2: repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "9419e8553004642a09bd0227b632d5e9e615857f"
        ],
        [
            "2: rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "1757ac95335dcb06a5b424f59d6bc0067300cb17"
        ],
        [
            "rewrite <- (Rabs_right (q - q')).",
            "VernacExtend",
            "f34480091b2322a0ef2f1edce5d9db9d8f2f6986"
        ],
        [
            "2: apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix q').",
            "VernacExtend",
            "caaa33f760d75e05650ef73e980b33d953303084"
        ],
        [
            "2: repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "9419e8553004642a09bd0227b632d5e9e615857f"
        ],
        [
            "2: rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "1757ac95335dcb06a5b424f59d6bc0067300cb17"
        ],
        [
            "2: apply Rle_trans with (1 := Rlt_le _ _ Rl1); apply Rlt_le; auto.",
            "VernacExtend",
            "85f6c61359d2ecdd562673fea96b8a62186e25f2"
        ],
        [
            "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 q); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
            "VernacExtend",
            "177814b808fffc34990d71598d5ef482ab3214df"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "elim H'1; auto.",
            "VernacExtend",
            "a28a7e5efabf16f05a51df42df2e30fdcdc66c02"
        ],
        [
            "intros H'2 H'3; apply H'3; auto.",
            "VernacExtend",
            "c57e59fd1bf9ba9d7cb410ff995761014a9297fc"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "case (Rle_or_lt (p - q') (p' - q)); intros Rl3.",
            "VernacExtend",
            "f2bf0a722d71224dfe11f23981cdb6a29e8ecc97"
        ],
        [
            "absurd (Rabs (p' - p) <= Rabs (q' - p))%R.",
            "VernacExtend",
            "d6184f7713151bcbb8c4361e50a8b1d7fff084a0"
        ],
        [
            "apply Rgt_not_le.",
            "VernacExtend",
            "be8a1e7f9ca2303d5ddda077b45cc15db6c6b3ce"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (q' - p)).",
            "VernacExtend",
            "2f2265267753b4b80314cf5f6d9a4ef8a46c8bd1"
        ],
        [
            "2: apply Rplus_le_reg_l with (r := p).",
            "VernacExtend",
            "ff1d6e8f111946145f9bb5bb51c908b32c7cba44"
        ],
        [
            "2: repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "9419e8553004642a09bd0227b632d5e9e615857f"
        ],
        [
            "2: rewrite Rplus_0_r; apply Rlt_le; auto.",
            "VernacExtend",
            "b199cdfda3d1c8e39fca5f85fda109ebc5b8f3d0"
        ],
        [
            "rewrite (Rabs_right (p' - p)).",
            "VernacExtend",
            "d9f55c38382292abdc52f18eda0862fd1e57991e"
        ],
        [
            "2: apply Rle_ge; apply Rplus_le_reg_l with (r := p).",
            "VernacExtend",
            "222c0436b7e2ec54f15262a1dcdef6d4842aef4c"
        ],
        [
            "2: rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "1757ac95335dcb06a5b424f59d6bc0067300cb17"
        ],
        [
            "cut (forall x y : R, (- (y - x))%R = (x - y)%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "419b683fd21a18960a6e30550a32ba798c9d03bd"
        ],
        [
            "red in |- *; apply Rle_lt_trans with (1 := Rl3).",
            "VernacExtend",
            "dea2e770087b08f153e4366347dfc935a0dc8260"
        ],
        [
            "replace (p' - p)%R with (p' - q + (q - p))%R.",
            "VernacExtend",
            "145c22da8d9f79a82b03c933a0cc664ba2c1040a"
        ],
        [
            "pattern (p' - q)%R at 1 in |- *; replace (p' - q)%R with (p' - q + 0)%R.",
            "VernacExtend",
            "c9c18e30f05682a48ce48cc307fd63784657ed66"
        ],
        [
            "apply Rplus_lt_compat_l; auto.",
            "VernacExtend",
            "4b6a14448b340686174c8e42c0bdfbd475022946"
        ],
        [
            "apply Rplus_lt_reg_l with (r := p).",
            "VernacExtend",
            "1af060b325f642f994d9849f5c269082e208bf4c"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (p + (p' - p))%R with (FtoRradix p'); auto; ring.",
            "VernacExtend",
            "aaf619e2d7b24ba6205849a5af6725f35123f432"
        ],
        [
            "case H'0; intros H'2 H'3; apply H'3; auto.",
            "VernacExtend",
            "40a281dea6a6e0aba9d6817dccb92869e10e483f"
        ],
        [
            "case H'1; auto.",
            "VernacExtend",
            "a44f1b914e489dd19b841fdfab025ba14e3d8f86"
        ],
        [
            "absurd (Rabs (q' - q) <= Rabs (p' - q))%R.",
            "VernacExtend",
            "07d134dbc9ac804d4069db7794a9076a923e7da3"
        ],
        [
            "apply Rgt_not_le.",
            "VernacExtend",
            "be8a1e7f9ca2303d5ddda077b45cc15db6c6b3ce"
        ],
        [
            "rewrite (Faux.Rabsolu_left1 (q' - q)).",
            "VernacExtend",
            "f203f37bd0c47a83f4a4e5bfefe2197463ed5f46"
        ],
        [
            "2: apply Rplus_le_reg_l with (r := q).",
            "VernacExtend",
            "e646843a7cf00aa2ab18a8ec1136f7d8806ec1c9"
        ],
        [
            "2: repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "9419e8553004642a09bd0227b632d5e9e615857f"
        ],
        [
            "2: rewrite Rplus_0_r; apply Rlt_le; auto.",
            "VernacExtend",
            "b199cdfda3d1c8e39fca5f85fda109ebc5b8f3d0"
        ],
        [
            "2: apply Rlt_trans with (1 := Rl1); auto.",
            "VernacExtend",
            "18dca259302c2241185a7dac62ebf370b68eb0dd"
        ],
        [
            "rewrite (Rabs_right (p' - q)).",
            "VernacExtend",
            "06243286cf7d289c0102f70e3e32a76f3bdaa7ca"
        ],
        [
            "2: apply Rle_ge; apply Rplus_le_reg_l with (r := q).",
            "VernacExtend",
            "00fa76c708e3ea47a142e712175fa6cc82dfe8aa"
        ],
        [
            "2: rewrite Rplus_0_r; apply Rlt_le; auto.",
            "VernacExtend",
            "b199cdfda3d1c8e39fca5f85fda109ebc5b8f3d0"
        ],
        [
            "cut (forall x y : R, (- (y - x))%R = (x - y)%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "419b683fd21a18960a6e30550a32ba798c9d03bd"
        ],
        [
            "red in |- *; apply Rlt_trans with (1 := Rl3).",
            "VernacExtend",
            "4c7a5d7437a68a623b95c3881ee81c36e456b50a"
        ],
        [
            "replace (q - q')%R with (p - q' + (q - p))%R.",
            "VernacExtend",
            "e5243b16fd2cb20b4cee0e2e4ff404bcfb831569"
        ],
        [
            "pattern (p - q')%R at 1 in |- *; replace (p - q')%R with (p - q' + 0)%R.",
            "VernacExtend",
            "3953aa782f3428d2046d2b01ecc608cd6d51999b"
        ],
        [
            "apply Rplus_lt_compat_l; auto.",
            "VernacExtend",
            "4b6a14448b340686174c8e42c0bdfbd475022946"
        ],
        [
            "apply Rplus_lt_reg_l with (r := p).",
            "VernacExtend",
            "1af060b325f642f994d9849f5c269082e208bf4c"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "replace (q + (p' - q))%R with (FtoRradix p'); auto; ring.",
            "VernacExtend",
            "450e379fa36565b7c50579e75b4fc68600d3f585"
        ],
        [
            "case H'1; intros H'2 H'3; apply H'3; auto.",
            "VernacExtend",
            "e5f1ed2f951d86ec748b21f8ac0b5fab3c37f962"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "case (Rle_or_lt p q'); intros Rl1.",
            "VernacExtend",
            "da2ddc9f43ebb6a6571298a2c690fd7c4b188dc4"
        ],
        [
            "apply Rle_trans with p; auto.",
            "VernacExtend",
            "338aaf54f5c09fb229605527d7fafbeaece370ea"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "apply Rplus_le_reg_l with (r := (- q)%R).",
            "VernacExtend",
            "a4d336b0f4a7f48e2463cffe78fb7ef5187789d8"
        ],
        [
            "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
            "VernacExtend",
            "c388895621519b9e56a75e5a5d26570288062efe"
        ],
        [
            "rewrite <- (Rabs_right (q - p')).",
            "VernacExtend",
            "3175c1c59071b3d9882f48021235104df84a66e7"
        ],
        [
            "rewrite <- (Rabs_right (q - q')).",
            "VernacExtend",
            "f34480091b2322a0ef2f1edce5d9db9d8f2f6986"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 q); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
            "VernacExtend",
            "177814b808fffc34990d71598d5ef482ab3214df"
        ],
        [
            "elim H'1; auto.",
            "VernacExtend",
            "a28a7e5efabf16f05a51df42df2e30fdcdc66c02"
        ],
        [
            "intros H'2 H'3; apply H'3; auto.",
            "VernacExtend",
            "c57e59fd1bf9ba9d7cb410ff995761014a9297fc"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix q').",
            "VernacExtend",
            "cf69aef1d6eb1ae56bcdb2bffb486e073a6feeda"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; apply Rlt_trans with (1 := Rl1); auto.",
            "VernacExtend",
            "c4da625b42d96c2d015f77802f0970080f068a2d"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix p').",
            "VernacExtend",
            "ccd5017809a4107278510648e7607f7530d70e0d"
        ],
        [
            "repeat rewrite Rplus_minus; auto.",
            "VernacExtend",
            "273289689f354fd3bae728939735161cb3e9ac91"
        ],
        [
            "rewrite Rplus_0_r; auto.",
            "VernacExtend",
            "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
        ],
        [
            "apply Rlt_le; apply Rlt_trans with (1 := Rl0); auto.",
            "VernacExtend",
            "a34aab283922c1baa7dd9231e55896ec145dbb43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestRoundedModeP : RoundedModeP b radix Closest.",
            "VernacStartTheoremProof",
            "5cac9fed5b6f2f999685f24496860ef8c932faec"
        ],
        [
            "split; try exact ClosestTotal.",
            "VernacExtend",
            "252c0ecfc3ba5c0554581557a0771dea09a46043"
        ],
        [
            "split; try exact ClosestCompatible.",
            "VernacExtend",
            "5f6a2ae1acc7e721dbc276fb9035d891583739cb"
        ],
        [
            "split; try exact ClosestMinOrMax.",
            "VernacExtend",
            "05f962c2c9b2bf65250714bb067466f1be9a18d6"
        ],
        [
            "try exact ClosestMonotone.",
            "VernacExtend",
            "1a943109af0195ef3a256cebc31a0b3af5bed5ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition EvenClosest (r : R) (p : float) := Closest r p /\\ (FNeven b radix precision p \\/ (forall q : float, Closest r q -> q = p :>R)).",
            "VernacDefinition",
            "6bf542ba7a59b21b33211a24bd32f4b7ab9aac13"
        ],
        [
            "Theorem EvenClosestTotal : TotalP EvenClosest.",
            "VernacStartTheoremProof",
            "05ba3dd9a72b533ce85a0292c5ed9d627d716ec1"
        ],
        [
            "red in |- *; intros r.",
            "VernacExtend",
            "c63497384671e5faf7b82172be82e1db3a859d77"
        ],
        [
            "case MinEx with (r := r) (3 := pGivesBound); auto with arith.",
            "VernacExtend",
            "5d02dfc661eab9ef5e1ca2dfdc362a697bcecc04"
        ],
        [
            "intros min H'.",
            "VernacExtend",
            "5581ae54b3d78759048ed9efe3da8341f8e0f9e8"
        ],
        [
            "case MaxEx with (r := r) (3 := pGivesBound); auto with arith.",
            "VernacExtend",
            "27862fc82f45c97e0edb1d980fa496cbd4fd8bf8"
        ],
        [
            "intros max H'0.",
            "VernacExtend",
            "f261be3259b2751cae44c4dfdb556df5cd27e3f0"
        ],
        [
            "cut (min <= r)%R; [ intros Rl1 | apply isMin_inv1 with (1 := H'); auto ].",
            "VernacExtend",
            "02b00c8488aa1825ac918da59f38d4172037c6fd"
        ],
        [
            "cut (r <= max)%R; [ intros Rl2 | apply isMax_inv1 with (1 := H'0) ].",
            "VernacExtend",
            "5ec6637233538df6079f56536e4ca42530c6f3c3"
        ],
        [
            "case (Rle_or_lt (r - min) (max - r)); intros H'1.",
            "VernacExtend",
            "e37d2e421b10b6c0106a663d19d54f535d1df7a4"
        ],
        [
            "case H'1; intros H'2; auto.",
            "VernacExtend",
            "9ad24761e73a61f27d976091c984e67cd11328bb"
        ],
        [
            "exists min; split.",
            "VernacExtend",
            "60d30e9aeea99eff3bea1a113c3453ad0718d28a"
        ],
        [
            "apply ClosestMin with (max := max); auto.",
            "VernacExtend",
            "03fced2b96bbc8e986fe9c9268a9daaa6ffa1b90"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_le; auto.",
            "VernacExtend",
            "d017baccaa3e845b45c844f99bbdb4323e61e287"
        ],
        [
            "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
        ],
        [
            "apply Rle_minus; auto.",
            "VernacExtend",
            "1f607e2c1023edb85494370fc99f88b824d57f61"
        ],
        [
            "right; intros q H'3.",
            "VernacExtend",
            "c305ac6670ae77d4cf6cd0bc1dfb29746d8f7a7a"
        ],
        [
            "apply ClosestMinEq with (r := r) (max := max); auto.",
            "VernacExtend",
            "47325fe51c386a721f4911ebfa341c64c4da72a3"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_lt; auto.",
            "VernacExtend",
            "a0304f9b9cb41e67d243d1382624f23af55306a0"
        ],
        [
            "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
        ],
        [
            "apply Rlt_minus; auto.",
            "VernacExtend",
            "d5ab00fb2edecc3e229393227315c23e17b16e33"
        ],
        [
            "case (FNevenOrFNodd b radix precision min); intros Ev0.",
            "VernacExtend",
            "6ccf2c04c612123405458fc98025dc4bf39f1786"
        ],
        [
            "exists min; split; auto.",
            "VernacExtend",
            "225be802774f7a00fcc6ca9b6cf0eb9ed30c17cf"
        ],
        [
            "apply ClosestMin with (max := max); auto.",
            "VernacExtend",
            "03fced2b96bbc8e986fe9c9268a9daaa6ffa1b90"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_le; auto.",
            "VernacExtend",
            "d017baccaa3e845b45c844f99bbdb4323e61e287"
        ],
        [
            "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
        ],
        [
            "apply Rle_minus; auto.",
            "VernacExtend",
            "1f607e2c1023edb85494370fc99f88b824d57f61"
        ],
        [
            "exists max; split; auto.",
            "VernacExtend",
            "456837b721f6f389fd561f59dc68b09c4f1c8561"
        ],
        [
            "apply ClosestMax with (min := min); auto.",
            "VernacExtend",
            "4a777d6188d74189cbfe1273794f4d58efd911e8"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_le; auto.",
            "VernacExtend",
            "d017baccaa3e845b45c844f99bbdb4323e61e287"
        ],
        [
            "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "ca25d13be637793ac704146734cf3ba4dd07daf8"
        ],
        [
            "apply Rle_minus; auto.",
            "VernacExtend",
            "1f607e2c1023edb85494370fc99f88b824d57f61"
        ],
        [
            "rewrite H'2; auto with real.",
            "VernacExtend",
            "51eeb4bda74b14e65e793a4415ba1c5a4ec6bb5c"
        ],
        [
            "case (Req_dec min max); intros H'5.",
            "VernacExtend",
            "6bce5c987ebeb1b2bb2e9788202db9c5029bc8bc"
        ],
        [
            "right; intros q H'3.",
            "VernacExtend",
            "c305ac6670ae77d4cf6cd0bc1dfb29746d8f7a7a"
        ],
        [
            "case (ClosestMinOrMax _ _ H'3); intros isM0.",
            "VernacExtend",
            "e235f9e722c042d26b9a7f0c883966a0b3d699f8"
        ],
        [
            "rewrite <- H'5.",
            "VernacExtend",
            "84f3122cc17b69cb7da572abebae376ba1efdfbd"
        ],
        [
            "apply MinEq with (1 := isM0); auto.",
            "VernacExtend",
            "14031054e97854dc41ff076dd0e3802e086f4eb8"
        ],
        [
            "apply MaxEq with (1 := isM0); auto.",
            "VernacExtend",
            "c6574d897d6fd312c49e693b7dc0cf51aeea1648"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply FNevenEq with (f1 := FNSucc b radix precision min); auto.",
            "VernacExtend",
            "5e8594eae24a3308eeb47d276a566bf89327e983"
        ],
        [
            "apply FcanonicBound with (radix := radix).",
            "VernacExtend",
            "4f88fb1d53a5d59a38655cec7bf99775f475293f"
        ],
        [
            "apply FNSuccCanonic; auto with arith.",
            "VernacExtend",
            "40f8d627578186d75229997f5f9da6b0af120700"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "case H'0; auto.",
            "VernacExtend",
            "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
        ],
        [
            "apply MaxEq with (b := b) (r := r); auto.",
            "VernacExtend",
            "be01dd20dd9fad7dbb5a8beca8dbba912322d5a1"
        ],
        [
            "apply MinMax; auto with arith.",
            "VernacExtend",
            "d46275408a904beb31a823f653bce79ac8edf3f7"
        ],
        [
            "Contradict H'5; auto.",
            "VernacExtend",
            "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
        ],
        [
            "fold FtoRradix in H'5; rewrite H'5 in H'2.",
            "VernacExtend",
            "2cef1be3898a4e4ba74c50163fa13c1f6cea690b"
        ],
        [
            "replace (FtoRradix max) with (min + (max - min))%R; [ rewrite <- H'2 | idtac ]; ring.",
            "VernacExtend",
            "0bd24698d29485c3441025c37eccd62e1e17117e"
        ],
        [
            "apply FNoddSuc; auto.",
            "VernacExtend",
            "c46ec6679241bebb607e1dd9f74daea0d775be1e"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "exists max; split; auto.",
            "VernacExtend",
            "456837b721f6f389fd561f59dc68b09c4f1c8561"
        ],
        [
            "apply ClosestMax with (min := min); auto.",
            "VernacExtend",
            "4a777d6188d74189cbfe1273794f4d58efd911e8"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_le; auto.",
            "VernacExtend",
            "d017baccaa3e845b45c844f99bbdb4323e61e287"
        ],
        [
            "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "ca25d13be637793ac704146734cf3ba4dd07daf8"
        ],
        [
            "apply Rle_minus; auto with real.",
            "VernacExtend",
            "6a268a7df2d7d059d7c6c6f76cea24d0e428e520"
        ],
        [
            "right; intros q H'2.",
            "VernacExtend",
            "0787a894f5ce24eac84b7317bcf8e298c4c7ad6b"
        ],
        [
            "apply ClosestMaxEq with (r := r) (min := min); auto.",
            "VernacExtend",
            "02078eb9db3f4f790c973ac6a436957d12d63095"
        ],
        [
            "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "83ecce6da6865892ebe230d1d15b57de213d6046"
        ],
        [
            "apply Rminus_lt; auto.",
            "VernacExtend",
            "a0304f9b9cb41e67d243d1382624f23af55306a0"
        ],
        [
            "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
            "VernacExtend",
            "ca25d13be637793ac704146734cf3ba4dd07daf8"
        ],
        [
            "apply Rlt_minus; auto.",
            "VernacExtend",
            "d5ab00fb2edecc3e229393227315c23e17b16e33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestCompatible : CompatibleP b radix EvenClosest.",
            "VernacStartTheoremProof",
            "063f1c30436e7d532c9e379d8c32d78e1d5d5e9b"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros r1 r2 p q H' H'0 H'1 H'2; red in |- *.",
            "VernacExtend",
            "529caa2a2ea3cbcdb194dde5d685d9d233c897b6"
        ],
        [
            "inversion H'.",
            "VernacExtend",
            "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (ClosestCompatible r1 r2 p q); auto.",
            "VernacExtend",
            "f9310a09ae5b5d29071c92fe19f90721e3441520"
        ],
        [
            "case H0; intros H1.",
            "VernacExtend",
            "f0305220c19ceb30cc1a74f4eb8d05f7d2328947"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply FNevenEq with (f1 := p); auto.",
            "VernacExtend",
            "8c83bf81708d28532ce1def6e384087bf96e7b3c"
        ],
        [
            "case H; auto.",
            "VernacExtend",
            "0b39ac03ea00c6d2293da9883a569db11f432ebd"
        ],
        [
            "right; intros q0 H'3.",
            "VernacExtend",
            "36d362f3b6fe88d9f0db331e64115464b88b0fb8"
        ],
        [
            "unfold FtoRradix in |- *; rewrite <- H'1; auto.",
            "VernacExtend",
            "cd41d623d3bc0ffba69b1f5bd53c71e487dfee5c"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "apply (ClosestCompatible r2 r1 q0 q0); auto.",
            "VernacExtend",
            "2eed3dd2cba74d62b897dd642ea6047a295e7ec3"
        ],
        [
            "case H'3; auto.",
            "VernacExtend",
            "4e688649835e97868d2f5fb4c962dea3a626a5dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestMinOrMax : MinOrMaxP b radix EvenClosest.",
            "VernacStartTheoremProof",
            "60e4bb49f0ed5597e7b74df58e151189c4848c9d"
        ],
        [
            "red in |- *; intros r p H'; case (ClosestMinOrMax r p); auto.",
            "VernacExtend",
            "34d818c7d94b372daa85e0b3c613fd443b982b56"
        ],
        [
            "case H'; auto.",
            "VernacExtend",
            "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestMonotone : MonotoneP radix EvenClosest.",
            "VernacStartTheoremProof",
            "ece64120ad94ac19e04538b52925b91f08c2b195"
        ],
        [
            "red in |- *; simpl in |- *; intros p q p' q' H' H'0 H'1.",
            "VernacExtend",
            "abb459e1c1ba277c05e8d55eb82df6c88f5ac4f2"
        ],
        [
            "apply (ClosestMonotone p q); auto; case H'0; case H'1; auto.",
            "VernacExtend",
            "fecad7d6ac3c84eb36b229a301222fa04afffaf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestRoundedModeP : RoundedModeP b radix EvenClosest.",
            "VernacStartTheoremProof",
            "0e919763cc3f9f35b5d4a06271e26f2fd2550b45"
        ],
        [
            "red in |- *; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "exact EvenClosestTotal.",
            "VernacExtend",
            "67962537fe1a91e210e90f8d5b8c6ab66efa5670"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact EvenClosestCompatible.",
            "VernacExtend",
            "c2071f21b20d85814da27d3948c6265fb043143e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact EvenClosestMinOrMax.",
            "VernacExtend",
            "a6716c39e395f9ecab0bc7ffa0e68381d43d675d"
        ],
        [
            "exact EvenClosestMonotone.",
            "VernacExtend",
            "061a3eeeec682678b2708865b1936d7cc2190de4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestUniqueP : UniqueP radix EvenClosest.",
            "VernacStartTheoremProof",
            "4183b1792590b43e81ad12345c731648e05f4c4d"
        ],
        [
            "red in |- *; simpl in |- *.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "intros r p q H' H'0.",
            "VernacExtend",
            "3d96de46becba4bee1ccd2381681247033d89019"
        ],
        [
            "inversion H'; inversion H'0; case H0; case H2; auto.",
            "VernacExtend",
            "9c0009f0e03789d7b3019abe556c26ce1ffab511"
        ],
        [
            "intros H'1 H'2; case (EvenClosestMinOrMax r p); case (EvenClosestMinOrMax r q); auto.",
            "VernacExtend",
            "ba2f703a9e200073a5eca325348f45034fedbb30"
        ],
        [
            "intros H'3 H'4; apply (MinUniqueP b radix r); auto.",
            "VernacExtend",
            "b4fc0bee4f53774455207972f691b31b642145b2"
        ],
        [
            "intros H'3 H'4; case (Req_dec p q); auto; intros H'5.",
            "VernacExtend",
            "59eb6b9c2b7d7663427b6bc9efb264dd1a68cac1"
        ],
        [
            "Contradict H'1; auto.",
            "VernacExtend",
            "dff3473e98799e57d49b4c366d5da43c6b9d51d6"
        ],
        [
            "apply FnOddNEven; auto.",
            "VernacExtend",
            "6819e62627490a6e2a101d6684616654514327ec"
        ],
        [
            "apply FNoddEq with (f1 := FNSucc b radix precision p); auto.",
            "VernacExtend",
            "3b51648554c2a2fd93e624c620e8580b5a8709f1"
        ],
        [
            "apply FcanonicBound with (radix := radix); auto.",
            "VernacExtend",
            "7ff66c1c77430eeda2d6b2110bd18def44854cf6"
        ],
        [
            "apply FNSuccCanonic; auto with arith.",
            "VernacExtend",
            "40f8d627578186d75229997f5f9da6b0af120700"
        ],
        [
            "case H'4; auto.",
            "VernacExtend",
            "2c012230b4479c3ceef20d28ff227694c215b18f"
        ],
        [
            "case H'3; auto.",
            "VernacExtend",
            "4e688649835e97868d2f5fb4c962dea3a626a5dd"
        ],
        [
            "apply (MaxUniqueP b radix r); auto.",
            "VernacExtend",
            "e7f9fe59643536edf68ff447c98287708dda6c53"
        ],
        [
            "apply MinMax; auto with arith.",
            "VernacExtend",
            "d46275408a904beb31a823f653bce79ac8edf3f7"
        ],
        [
            "Contradict H'5; auto.",
            "VernacExtend",
            "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
        ],
        [
            "apply (RoundedProjector b radix _ (MaxRoundedModeP _ _ _ radixMoreThanOne precisionGreaterThanOne pGivesBound)); auto.",
            "VernacExtend",
            "80af9fccbf25f4c0c08a4acf5661c8b7e5783b1c"
        ],
        [
            "case H'4; auto.",
            "VernacExtend",
            "2c012230b4479c3ceef20d28ff227694c215b18f"
        ],
        [
            "rewrite <- H'5; auto.",
            "VernacExtend",
            "f8b62f99b3718e60bd969c76931397a10bee1bff"
        ],
        [
            "apply FNevenSuc; auto.",
            "VernacExtend",
            "260e8b652312b5296eb97a6ff2c395e62a28c37e"
        ],
        [
            "case H'4; auto.",
            "VernacExtend",
            "2c012230b4479c3ceef20d28ff227694c215b18f"
        ],
        [
            "intros H'3 H'4; case (Req_dec p q); auto; intros H'5.",
            "VernacExtend",
            "59eb6b9c2b7d7663427b6bc9efb264dd1a68cac1"
        ],
        [
            "Contradict H'2; auto.",
            "VernacExtend",
            "c1c75b2f2ec419eb0e513f205e7b57cfed0b26e2"
        ],
        [
            "apply FnOddNEven; auto.",
            "VernacExtend",
            "6819e62627490a6e2a101d6684616654514327ec"
        ],
        [
            "apply FNoddEq with (f1 := FNSucc b radix precision q); auto.",
            "VernacExtend",
            "882112c84768dc449f258295ec9c8cce5b773613"
        ],
        [
            "apply FcanonicBound with (radix := radix); auto.",
            "VernacExtend",
            "7ff66c1c77430eeda2d6b2110bd18def44854cf6"
        ],
        [
            "apply FNSuccCanonic; auto with arith.",
            "VernacExtend",
            "40f8d627578186d75229997f5f9da6b0af120700"
        ],
        [
            "case H'3; auto.",
            "VernacExtend",
            "4e688649835e97868d2f5fb4c962dea3a626a5dd"
        ],
        [
            "case H'4; auto.",
            "VernacExtend",
            "2c012230b4479c3ceef20d28ff227694c215b18f"
        ],
        [
            "apply (MaxUniqueP b radix r); auto.",
            "VernacExtend",
            "e7f9fe59643536edf68ff447c98287708dda6c53"
        ],
        [
            "apply MinMax; auto with arith.",
            "VernacExtend",
            "d46275408a904beb31a823f653bce79ac8edf3f7"
        ],
        [
            "Contradict H'5; auto.",
            "VernacExtend",
            "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
        ],
        [
            "apply sym_eq; apply (RoundedProjector b radix _ (MaxRoundedModeP _ _ _ radixMoreThanOne precisionGreaterThanOne pGivesBound)); auto.",
            "VernacExtend",
            "bb16a19d165b68c86d36040e7a2f59d4f51ee7eb"
        ],
        [
            "case H'3; auto.",
            "VernacExtend",
            "4e688649835e97868d2f5fb4c962dea3a626a5dd"
        ],
        [
            "rewrite <- H'5; auto.",
            "VernacExtend",
            "f8b62f99b3718e60bd969c76931397a10bee1bff"
        ],
        [
            "apply FNevenSuc; auto.",
            "VernacExtend",
            "260e8b652312b5296eb97a6ff2c395e62a28c37e"
        ],
        [
            "case H'3; auto.",
            "VernacExtend",
            "4e688649835e97868d2f5fb4c962dea3a626a5dd"
        ],
        [
            "intros H'3 H'4; apply (MaxUniqueP b radix r); auto.",
            "VernacExtend",
            "a0c3f7c2256c00f5a783d732db3dc57983aef135"
        ],
        [
            "intros H'1 H'2; apply sym_eq; auto.",
            "VernacExtend",
            "98eadda5414a20be5ab9485897a8261cf927edcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ClosestSymmetric : SymmetricP Closest.",
            "VernacStartTheoremProof",
            "1c4e9992d4a9075198384de186622e4b6116a7cd"
        ],
        [
            "red in |- *; intros r p H'; case H'; clear H'.",
            "VernacExtend",
            "c17e8e736f7c98331ffbf45cb9e68346a074fd86"
        ],
        [
            "intros H' H'0; split.",
            "VernacExtend",
            "d856f0f9a8133b1a803c16f9239844fb3c1d4d23"
        ],
        [
            "apply oppBounded; auto.",
            "VernacExtend",
            "6e68d2122eeea082741ca4e279707ce0511c71ef"
        ],
        [
            "intros f H'1.",
            "VernacExtend",
            "f8e3583c9e7a5578d2edd045a0df9a05395a7902"
        ],
        [
            "replace (Rabs (Fopp p - - r)) with (Rabs (p - r)).",
            "VernacExtend",
            "ae24e966d66cbf86b3b8459d315beae76bc07ea3"
        ],
        [
            "replace (Rabs (f - - r)) with (Rabs (Fopp f - r)).",
            "VernacExtend",
            "a74a76149efdaa2d50c96e6ef2b844d035709ea4"
        ],
        [
            "apply H'0; auto.",
            "VernacExtend",
            "ffa4a067303ddbc105bbb0d597fd5de27c3e7304"
        ],
        [
            "apply oppBounded; auto.",
            "VernacExtend",
            "6e68d2122eeea082741ca4e279707ce0511c71ef"
        ],
        [
            "unfold FtoRradix in |- *; rewrite Fopp_correct.",
            "VernacExtend",
            "c3c7ad16a924a974f39fb2584a800e7199b0444e"
        ],
        [
            "pattern r at 1 in |- *; replace r with (- - r)%R; [ idtac | ring ].",
            "VernacExtend",
            "77ed82571132b524794538841940a5dacf4a7995"
        ],
        [
            "replace (- FtoR radix f - - - r)%R with (- (FtoR radix f - - r))%R; [ idtac | ring ].",
            "VernacExtend",
            "9d80c3699deba5b3a1af8be33c0497a83ec10c70"
        ],
        [
            "apply Rabs_Ropp; auto.",
            "VernacExtend",
            "04cd1166329a897bacf096aaa392a513e5db7a01"
        ],
        [
            "unfold FtoRradix in |- *; rewrite Fopp_correct.",
            "VernacExtend",
            "c3c7ad16a924a974f39fb2584a800e7199b0444e"
        ],
        [
            "replace (- FtoR radix p - - r)%R with (- (FtoR radix p - r))%R; [ idtac | ring ].",
            "VernacExtend",
            "86444705a664e8ef19fa59ff8b60b4a29b6feab3"
        ],
        [
            "apply sym_eq; apply Rabs_Ropp.",
            "VernacExtend",
            "5c3e49574d9bca3ec6f8e3ca0ef5af819f34c0ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EvenClosestSymmetric : SymmetricP EvenClosest.",
            "VernacStartTheoremProof",
            "88f151d377f33e0490943bf783df4dc5ea8e0c91"
        ],
        [
            "red in |- *; intros r p H'; case H'; clear H'.",
            "VernacExtend",
            "c17e8e736f7c98331ffbf45cb9e68346a074fd86"
        ],
        [
            "intros H' H'0; case H'0; clear H'0; intros H'0.",
            "VernacExtend",
            "d122f919b7ada563e0e1131bbaeecc0f38cf389d"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (ClosestSymmetric r p); auto.",
            "VernacExtend",
            "6fe36cf6cea68615f0a1a13d4b129f8a0433af01"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "apply FNevenFop; auto.",
            "VernacExtend",
            "c6249818b7ff06579d62e3419d95c2869f780e85"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply (ClosestSymmetric r p); auto.",
            "VernacExtend",
            "6fe36cf6cea68615f0a1a13d4b129f8a0433af01"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros q H'1.",
            "VernacExtend",
            "7656509c9a420554216c21729f145bdc1ac923a5"
        ],
        [
            "cut (Fopp q = p :>R).",
            "VernacExtend",
            "c0224e0b730ac5fba4867176d0847a2f432be0e6"
        ],
        [
            "intros H'2; unfold FtoRradix in |- *; rewrite Fopp_correct.",
            "VernacExtend",
            "1ea0b47c1d7e3592d84d3dbebac681f4033e9b63"
        ],
        [
            "unfold FtoRradix in H'2; rewrite <- H'2.",
            "VernacExtend",
            "10be3913889391053c06602bb3beb4fa0671e78b"
        ],
        [
            "rewrite Fopp_correct; ring.",
            "VernacExtend",
            "499cdaa03b2ad639b9ec3b0427d39613e2cdf58e"
        ],
        [
            "apply H'0; auto.",
            "VernacExtend",
            "ffa4a067303ddbc105bbb0d597fd5de27c3e7304"
        ],
        [
            "replace r with (- - r)%R; [ idtac | ring ].",
            "VernacExtend",
            "e1637e2adf41be7c2e7eabbee8b16a23c34b2c71"
        ],
        [
            "apply (ClosestSymmetric (- r)%R q); auto.",
            "VernacExtend",
            "2694f9ccbcf253eec8b4e990a3ec90232795a9b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fclosest.",
            "VernacEndSegment",
            "4c84f76a7fecd7ae1770c3c83b699f3d4baf072e"
        ],
        [
            "Hint Resolve ClosestTotal ClosestCompatible ClosestMin ClosestMax ClosestMinOrMax ClosestMonotone ClosestRoundedModeP EvenClosestTotal EvenClosestCompatible EvenClosestMinOrMax EvenClosestMonotone EvenClosestRoundedModeP FnOddNEven EvenClosestUniqueP ClosestSymmetric EvenClosestSymmetric: float.",
            "VernacHints",
            "f78706a8557d28336a779d52690eb4d8eba590d3"
        ]
    ],
    "proofs": [
        {
            "name": "ClosestTotal",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros r.",
                        "VernacExtend",
                        "c63497384671e5faf7b82172be82e1db3a859d77"
                    ]
                },
                {
                    "command": [
                        "case MinEx with (r := r) (3 := pGivesBound); auto with arith.",
                        "VernacExtend",
                        "5d02dfc661eab9ef5e1ca2dfdc362a697bcecc04"
                    ]
                },
                {
                    "command": [
                        "intros min H'.",
                        "VernacExtend",
                        "5581ae54b3d78759048ed9efe3da8341f8e0f9e8"
                    ]
                },
                {
                    "command": [
                        "case MaxEx with (r := r) (3 := pGivesBound); auto with arith.",
                        "VernacExtend",
                        "27862fc82f45c97e0edb1d980fa496cbd4fd8bf8"
                    ]
                },
                {
                    "command": [
                        "intros max H'0.",
                        "VernacExtend",
                        "f261be3259b2751cae44c4dfdb556df5cd27e3f0"
                    ]
                },
                {
                    "command": [
                        "cut (min <= r)%R; [ intros Rl1 | apply isMin_inv1 with (1 := H') ].",
                        "VernacExtend",
                        "4ddbef560699e2e298b716a3c12e6c3199832183"
                    ]
                },
                {
                    "command": [
                        "cut (r <= max)%R; [ intros Rl2 | apply isMax_inv1 with (1 := H'0) ].",
                        "VernacExtend",
                        "5ec6637233538df6079f56536e4ca42530c6f3c3"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt (Rabs (min - r)) (Rabs (max - r))); intros H'1.",
                        "VernacExtend",
                        "e11114f8796b76c3bc38845401a95ad0e0928808"
                    ]
                },
                {
                    "command": [
                        "exists min; split.",
                        "VernacExtend",
                        "60d30e9aeea99eff3bea1a113c3453ad0718d28a"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "intros f H'2.",
                        "VernacExtend",
                        "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt f r); intros H'3.",
                        "VernacExtend",
                        "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Faux.Rabsolu_left1.",
                        "VernacExtend",
                        "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar; auto.",
                        "VernacExtend",
                        "e335ce56bcf6da656c440a80004ee304d2971800"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "elim H'; auto.",
                        "VernacExtend",
                        "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := H'1).",
                        "VernacExtend",
                        "a8792f91693c7b512980ad52160e08b2225ad389"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "elim H'0; auto.",
                        "VernacExtend",
                        "0ef5a21bf4500edd2949a43dcada7d536e20e55e"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "exists max; split.",
                        "VernacExtend",
                        "f37d60997c9a49c5aea63610221c6b324f149553"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "intros f H'2.",
                        "VernacExtend",
                        "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt f r); intros H'3.",
                        "VernacExtend",
                        "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (1 := Rlt_le _ _ H'1).",
                        "VernacExtend",
                        "d501d0edae5f0b4274503566821694a48c17d7cf"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Faux.Rabsolu_left1.",
                        "VernacExtend",
                        "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar; auto.",
                        "VernacExtend",
                        "e335ce56bcf6da656c440a80004ee304d2971800"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "elim H'; auto.",
                        "VernacExtend",
                        "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "elim H'0; auto.",
                        "VernacExtend",
                        "0ef5a21bf4500edd2949a43dcada7d536e20e55e"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestCompatible",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "intros r1 r2 p q H'; case H'.",
                        "VernacExtend",
                        "4b7e61c0c7b95c57f12bf570d5b9ba798b949abf"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1 H'2 H'3 H'4.",
                        "VernacExtend",
                        "6d60f94e627a0c417c335939c5a25a2f29488438"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros f H'5.",
                        "VernacExtend",
                        "6ae3aa677485cf3545585d9fec743fc3edabf86b"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite <- H'3; rewrite <- H'2; auto.",
                        "VernacExtend",
                        "738b4ddc19ddd480c64daa8ef5a32d4dc96be95e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestMin",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros r min max H' H'0 H'1; split.",
                        "VernacExtend",
                        "80757abb5c74a55535b7a94304189bad457d2254"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "intros f H'2.",
                        "VernacExtend",
                        "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt f r); intros H'3.",
                        "VernacExtend",
                        "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Faux.Rabsolu_left1.",
                        "VernacExtend",
                        "955ce6d8c6eae22b4bf60842c1c3ee8c2dcb0afa"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMin_inv1 with (1 := H'); auto.",
                        "VernacExtend",
                        "a02228ba9b5872b22779fa417c5278a79ee12e4e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Faux.Rabsolu_left1 (min - r)).",
                        "VernacExtend",
                        "302dbeb755420a2e36c070c2e55b66601847d01b"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (f - r)).",
                        "VernacExtend",
                        "de3aa09e1b50c11a48e83bc0f08f99384fa7195b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (max - r)%R.",
                        "VernacExtend",
                        "efc703eb02431a04cb4fc1d853605b6e87e1c6dd"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
                        "VernacExtend",
                        "c388895621519b9e56a75e5a5d26570288062efe"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, (- (x - y))%R = (y - x)%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; unfold Rminus in |- *; ring ].",
                        "VernacExtend",
                        "d319d0ec325f72585f8d9be25f72615d0ae6ccc6"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoR radix min).",
                        "VernacExtend",
                        "c88890791685f51fb85a048d2ba739fc3e5c10ac"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "replace (r + (FtoR radix min + (max - r)))%R with (min + max)%R.",
                        "VernacExtend",
                        "efa9e58960d9a9dd4cb915ca939638794d3ea628"
                    ]
                },
                {
                    "command": [
                        "replace (r + r)%R with (2%nat * r)%R; auto.",
                        "VernacExtend",
                        "e4e117e6d4c14ef3aedaea6677abd0d83381fbd2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; fold FtoRradix; ring.",
                        "VernacExtend",
                        "4d3c448a94306d215ef2ba5b77668059a9d18794"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMin_inv1 with (1 := H'); auto.",
                        "VernacExtend",
                        "a02228ba9b5872b22779fa417c5278a79ee12e4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestMax",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros r min max H' H'0 H'1; split.",
                        "VernacExtend",
                        "80757abb5c74a55535b7a94304189bad457d2254"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "intros f H'2.",
                        "VernacExtend",
                        "a4d4a4d20b6def20641e2b1a36af7db1cfd6fff0"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt f r); intros H'3.",
                        "VernacExtend",
                        "4314028f86d88a8d2955c6ca98ca97c25253f0f7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (max - r)).",
                        "VernacExtend",
                        "41356e79e28be0fa441f291be5376b8cd2a2ee12"
                    ]
                },
                {
                    "command": [
                        "rewrite (Faux.Rabsolu_left1 (f - r)).",
                        "VernacExtend",
                        "1af7b3f19fd95f0b900e5296140d923cb9472045"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (r - min)%R.",
                        "VernacExtend",
                        "c16e332b60240b0c3533c0d2d56394879ceff77b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoRradix min).",
                        "VernacExtend",
                        "686a8e7848de53567fea49742d81993c56ddab5b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "replace (r + (min + (max - r)))%R with (min + max)%R.",
                        "VernacExtend",
                        "9851dd55545bff3829ac3f53260ceee08ae8dce8"
                    ]
                },
                {
                    "command": [
                        "replace (r + r)%R with (2%nat * r)%R; auto.",
                        "VernacExtend",
                        "e4e117e6d4c14ef3aedaea6677abd0d83381fbd2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "replace (r - min)%R with (- (min - r))%R.",
                        "VernacExtend",
                        "39f1889c79440f5ea7e44822e8b0e131f5d192ce"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMax_inv1 with (1 := H'0); auto.",
                        "VernacExtend",
                        "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "intros H'4 H'5; elim H'5; intros H'6 H'7; apply H'7; clear H'5; auto.",
                        "VernacExtend",
                        "b89f5dcf86312de3b227edd67651da43357902b5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMax_inv1 with (1 := H'0); auto.",
                        "VernacExtend",
                        "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestMinOrMax",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros r p H'.",
                        "VernacExtend",
                        "bb2891358befd1ab57b62b9776e47caca0dafabc"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt p r); intros H'1.",
                        "VernacExtend",
                        "6c01fa22f9b95e7384e879aa4842efebaf7a68ef"
                    ]
                },
                {
                    "command": [
                        "left; split; auto.",
                        "VernacExtend",
                        "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 H'2.",
                        "VernacExtend",
                        "39fed5c5e0c0c19404b41d1b29a91f4f1a0dce5e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := (- r)%R).",
                        "VernacExtend",
                        "95f1f179707b13bde1d947e8d8aa4e6aa2e17fc2"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
                        "VernacExtend",
                        "c388895621519b9e56a75e5a5d26570288062efe"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rabs_right (r - FtoR radix p)).",
                        "VernacExtend",
                        "6b2f02890c28fa14b89a1c34e683724e673f9cb9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rabs_right (r - FtoR radix f)).",
                        "VernacExtend",
                        "fc37c68f7bb0b22708816226df7f43cad7deebd6"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 r); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
                        "VernacExtend",
                        "f3d4ec3974b5bd6dd541d9c20d199020903a5c49"
                    ]
                },
                {
                    "command": [
                        "elim H'; auto.",
                        "VernacExtend",
                        "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix f).",
                        "VernacExtend",
                        "f46eae954429d8f1cc76bb478b23f0a7fdc3b684"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := FtoR radix p).",
                        "VernacExtend",
                        "833a0b4b89875677d956cda50bb940e21d015067"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "right; split; auto.",
                        "VernacExtend",
                        "1cc5054ad1405940e563f1d7ddce468251301130"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "intros f H'0 H'2.",
                        "VernacExtend",
                        "39fed5c5e0c0c19404b41d1b29a91f4f1a0dce5e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := (- r)%R).",
                        "VernacExtend",
                        "95f1f179707b13bde1d947e8d8aa4e6aa2e17fc2"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, (- y + x)%R = (- (y - x))%R); [ intros Eq0; repeat rewrite Eq0; clear Eq0 | intros; ring ].",
                        "VernacExtend",
                        "c388895621519b9e56a75e5a5d26570288062efe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Faux.Rabsolu_left1 (r - FtoR radix p)).",
                        "VernacExtend",
                        "9b8e518a585906124da4f6f103cffee3891c5161"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Faux.Rabsolu_left1 (r - FtoR radix f)).",
                        "VernacExtend",
                        "78fa90f0969c9f03341f6a07b931b6e2befb822d"
                    ]
                },
                {
                    "command": [
                        "cut (forall x y : R, Rabs (x - y) = Rabs (y - x)); [ intros Eq0; repeat rewrite (Eq0 r); clear Eq0 | intros x y; rewrite <- (Rabs_Ropp (x - y)); rewrite Ropp_minus_distr ]; auto.",
                        "VernacExtend",
                        "f3d4ec3974b5bd6dd541d9c20d199020903a5c49"
                    ]
                },
                {
                    "command": [
                        "elim H'; auto.",
                        "VernacExtend",
                        "a5e9e87d39a05d836dbbdf38dfd3ec2e253451e2"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoR radix f).",
                        "VernacExtend",
                        "66d0f3243a0db46c88cb6d4d9fe6478a43854fe7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := FtoR radix p).",
                        "VernacExtend",
                        "fc11380df73190aa963e9755364843c47e0e67c5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestMinEq",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros r min max p H' H'0 H'1 H'2.",
                        "VernacExtend",
                        "595410a1465afe7bdafa48ed1275e6b1de6eb8bc"
                    ]
                },
                {
                    "command": [
                        "case (ClosestMinOrMax r p); auto; intros H'3.",
                        "VernacExtend",
                        "986239f7f92e854218e68b68961c15cf8ab1b7b0"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; apply MinEq with (1 := H'3); auto.",
                        "VernacExtend",
                        "e51dc6e94d5ad952d8a084fc67772be227512fd1"
                    ]
                },
                {
                    "command": [
                        "absurd (Rabs (max - r) <= Rabs (min - r))%R.",
                        "VernacExtend",
                        "a6828dc8e13c2f9ca81c1c2e10d79e59dbee2db9"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_le.",
                        "VernacExtend",
                        "be8a1e7f9ca2303d5ddda077b45cc15db6c6b3ce"
                    ]
                },
                {
                    "command": [
                        "rewrite (Faux.Rabsolu_left1 (min - r)).",
                        "VernacExtend",
                        "302dbeb755420a2e36c070c2e55b66601847d01b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "replace (- (min - r))%R with (r - min)%R; [ idtac | ring ].",
                        "VernacExtend",
                        "2b362554f137fb284ab0452b429b278ad8bd5911"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Rplus_lt_reg_l with (r := FtoRradix min).",
                        "VernacExtend",
                        "d574b864b56f3094def7f04cb29127f6a6fc78c0"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (r := r).",
                        "VernacExtend",
                        "06181ca42718b140c9119d340113675526c0b61b"
                    ]
                },
                {
                    "command": [
                        "replace (r + r)%R with (2%nat * r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "fcf2330f4483ef59404740732edc44992f04db7d"
                    ]
                },
                {
                    "command": [
                        "replace (r + (min + (max - r)))%R with (min + max)%R; [ idtac | ring ]; auto.",
                        "VernacExtend",
                        "24a8d5b0dbeaf67c3f9dbe81cc15105067215522"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "8a70da3a8c3283051bbc85ee1b69a8ff1b4a3420"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMax_inv1 with (1 := H'0); auto.",
                        "VernacExtend",
                        "ac8b9cab33e318bbf722eb1a908dfd9ac6ac6d62"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (r := r).",
                        "VernacExtend",
                        "e3efe88e02efb8a96343b089e3fa93469796372b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_minus; auto.",
                        "VernacExtend",
                        "273289689f354fd3bae728939735161cb3e9ac91"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; auto.",
                        "VernacExtend",
                        "ae05091668e3846d2d96ba7ec5306d5d8ad56dff"
                    ]
                },
                {
                    "command": [
                        "apply isMin_inv1 with (1 := H'); auto.",
                        "VernacExtend",
                        "a02228ba9b5872b22779fa417c5278a79ee12e4e"
                    ]
                },
                {
                    "command": [
                        "cut (Closest r max).",
                        "VernacExtend",
                        "deee8b700ec98becc7a19b576c4a9ec5b1cc90f4"
                    ]
                },
                {
                    "command": [
                        "intros H'4; case H'4.",
                        "VernacExtend",
                        "387c9701c50c1738dc7ad2e06e79d1cf42963c31"
                    ]
                },
                {
                    "command": [
                        "intros H'5 H'6; apply H'6; auto.",
                        "VernacExtend",
                        "7bfa1fef5fe5e2dda9bdef8c7eb1d2ed0b9b2ecb"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "apply ClosestCompatible with (1 := H'2); auto.",
                        "VernacExtend",
                        "a84dbbdd011908d570ac8c1d7fca927f3d9446a8"
                    ]
                },
                {
                    "command": [
                        "apply MaxEq with (1 := H'3); auto.",
                        "VernacExtend",
                        "1274d4f8d1f34726a6a426e020855918f8de62f8"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestRoundedModeP",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "split; try exact ClosestTotal.",
                        "VernacExtend",
                        "252c0ecfc3ba5c0554581557a0771dea09a46043"
                    ]
                },
                {
                    "command": [
                        "split; try exact ClosestCompatible.",
                        "VernacExtend",
                        "5f6a2ae1acc7e721dbc276fb9035d891583739cb"
                    ]
                },
                {
                    "command": [
                        "split; try exact ClosestMinOrMax.",
                        "VernacExtend",
                        "05f962c2c9b2bf65250714bb067466f1be9a18d6"
                    ]
                },
                {
                    "command": [
                        "try exact ClosestMonotone.",
                        "VernacExtend",
                        "1a943109af0195ef3a256cebc31a0b3af5bed5ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestTotal",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros r.",
                        "VernacExtend",
                        "c63497384671e5faf7b82172be82e1db3a859d77"
                    ]
                },
                {
                    "command": [
                        "case MinEx with (r := r) (3 := pGivesBound); auto with arith.",
                        "VernacExtend",
                        "5d02dfc661eab9ef5e1ca2dfdc362a697bcecc04"
                    ]
                },
                {
                    "command": [
                        "intros min H'.",
                        "VernacExtend",
                        "5581ae54b3d78759048ed9efe3da8341f8e0f9e8"
                    ]
                },
                {
                    "command": [
                        "case MaxEx with (r := r) (3 := pGivesBound); auto with arith.",
                        "VernacExtend",
                        "27862fc82f45c97e0edb1d980fa496cbd4fd8bf8"
                    ]
                },
                {
                    "command": [
                        "intros max H'0.",
                        "VernacExtend",
                        "f261be3259b2751cae44c4dfdb556df5cd27e3f0"
                    ]
                },
                {
                    "command": [
                        "cut (min <= r)%R; [ intros Rl1 | apply isMin_inv1 with (1 := H'); auto ].",
                        "VernacExtend",
                        "02b00c8488aa1825ac918da59f38d4172037c6fd"
                    ]
                },
                {
                    "command": [
                        "cut (r <= max)%R; [ intros Rl2 | apply isMax_inv1 with (1 := H'0) ].",
                        "VernacExtend",
                        "5ec6637233538df6079f56536e4ca42530c6f3c3"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt (r - min) (max - r)); intros H'1.",
                        "VernacExtend",
                        "e37d2e421b10b6c0106a663d19d54f535d1df7a4"
                    ]
                },
                {
                    "command": [
                        "case H'1; intros H'2; auto.",
                        "VernacExtend",
                        "9ad24761e73a61f27d976091c984e67cd11328bb"
                    ]
                },
                {
                    "command": [
                        "exists min; split.",
                        "VernacExtend",
                        "60d30e9aeea99eff3bea1a113c3453ad0718d28a"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMin with (max := max); auto.",
                        "VernacExtend",
                        "03fced2b96bbc8e986fe9c9268a9daaa6ffa1b90"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le; auto.",
                        "VernacExtend",
                        "d017baccaa3e845b45c844f99bbdb4323e61e287"
                    ]
                },
                {
                    "command": [
                        "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus; auto.",
                        "VernacExtend",
                        "1f607e2c1023edb85494370fc99f88b824d57f61"
                    ]
                },
                {
                    "command": [
                        "right; intros q H'3.",
                        "VernacExtend",
                        "c305ac6670ae77d4cf6cd0bc1dfb29746d8f7a7a"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMinEq with (r := r) (max := max); auto.",
                        "VernacExtend",
                        "47325fe51c386a721f4911ebfa341c64c4da72a3"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt; auto.",
                        "VernacExtend",
                        "a0304f9b9cb41e67d243d1382624f23af55306a0"
                    ]
                },
                {
                    "command": [
                        "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus; auto.",
                        "VernacExtend",
                        "d5ab00fb2edecc3e229393227315c23e17b16e33"
                    ]
                },
                {
                    "command": [
                        "case (FNevenOrFNodd b radix precision min); intros Ev0.",
                        "VernacExtend",
                        "6ccf2c04c612123405458fc98025dc4bf39f1786"
                    ]
                },
                {
                    "command": [
                        "exists min; split; auto.",
                        "VernacExtend",
                        "225be802774f7a00fcc6ca9b6cf0eb9ed30c17cf"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMin with (max := max); auto.",
                        "VernacExtend",
                        "03fced2b96bbc8e986fe9c9268a9daaa6ffa1b90"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le; auto.",
                        "VernacExtend",
                        "d017baccaa3e845b45c844f99bbdb4323e61e287"
                    ]
                },
                {
                    "command": [
                        "replace (r + r - (min + max))%R with (r - min - (max - r))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "4ed1fd7073d9ff7aa4a0e2ac8cb130fb339780a2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus; auto.",
                        "VernacExtend",
                        "1f607e2c1023edb85494370fc99f88b824d57f61"
                    ]
                },
                {
                    "command": [
                        "exists max; split; auto.",
                        "VernacExtend",
                        "456837b721f6f389fd561f59dc68b09c4f1c8561"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMax with (min := min); auto.",
                        "VernacExtend",
                        "4a777d6188d74189cbfe1273794f4d58efd911e8"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le; auto.",
                        "VernacExtend",
                        "d017baccaa3e845b45c844f99bbdb4323e61e287"
                    ]
                },
                {
                    "command": [
                        "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "ca25d13be637793ac704146734cf3ba4dd07daf8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus; auto.",
                        "VernacExtend",
                        "1f607e2c1023edb85494370fc99f88b824d57f61"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2; auto with real.",
                        "VernacExtend",
                        "51eeb4bda74b14e65e793a4415ba1c5a4ec6bb5c"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec min max); intros H'5.",
                        "VernacExtend",
                        "6bce5c987ebeb1b2bb2e9788202db9c5029bc8bc"
                    ]
                },
                {
                    "command": [
                        "right; intros q H'3.",
                        "VernacExtend",
                        "c305ac6670ae77d4cf6cd0bc1dfb29746d8f7a7a"
                    ]
                },
                {
                    "command": [
                        "case (ClosestMinOrMax _ _ H'3); intros isM0.",
                        "VernacExtend",
                        "e235f9e722c042d26b9a7f0c883966a0b3d699f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5.",
                        "VernacExtend",
                        "84f3122cc17b69cb7da572abebae376ba1efdfbd"
                    ]
                },
                {
                    "command": [
                        "apply MinEq with (1 := isM0); auto.",
                        "VernacExtend",
                        "14031054e97854dc41ff076dd0e3802e086f4eb8"
                    ]
                },
                {
                    "command": [
                        "apply MaxEq with (1 := isM0); auto.",
                        "VernacExtend",
                        "c6574d897d6fd312c49e693b7dc0cf51aeea1648"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply FNevenEq with (f1 := FNSucc b radix precision min); auto.",
                        "VernacExtend",
                        "5e8594eae24a3308eeb47d276a566bf89327e983"
                    ]
                },
                {
                    "command": [
                        "apply FcanonicBound with (radix := radix).",
                        "VernacExtend",
                        "4f88fb1d53a5d59a38655cec7bf99775f475293f"
                    ]
                },
                {
                    "command": [
                        "apply FNSuccCanonic; auto with arith.",
                        "VernacExtend",
                        "40f8d627578186d75229997f5f9da6b0af120700"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "case H'0; auto.",
                        "VernacExtend",
                        "c95954a4912ccfdd6e4780b3eecd4f9a4fbca076"
                    ]
                },
                {
                    "command": [
                        "apply MaxEq with (b := b) (r := r); auto.",
                        "VernacExtend",
                        "be01dd20dd9fad7dbb5a8beca8dbba912322d5a1"
                    ]
                },
                {
                    "command": [
                        "apply MinMax; auto with arith.",
                        "VernacExtend",
                        "d46275408a904beb31a823f653bce79ac8edf3f7"
                    ]
                },
                {
                    "command": [
                        "Contradict H'5; auto.",
                        "VernacExtend",
                        "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
                    ]
                },
                {
                    "command": [
                        "fold FtoRradix in H'5; rewrite H'5 in H'2.",
                        "VernacExtend",
                        "2cef1be3898a4e4ba74c50163fa13c1f6cea690b"
                    ]
                },
                {
                    "command": [
                        "replace (FtoRradix max) with (min + (max - min))%R; [ rewrite <- H'2 | idtac ]; ring.",
                        "VernacExtend",
                        "0bd24698d29485c3441025c37eccd62e1e17117e"
                    ]
                },
                {
                    "command": [
                        "apply FNoddSuc; auto.",
                        "VernacExtend",
                        "c46ec6679241bebb607e1dd9f74daea0d775be1e"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "exists max; split; auto.",
                        "VernacExtend",
                        "456837b721f6f389fd561f59dc68b09c4f1c8561"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMax with (min := min); auto.",
                        "VernacExtend",
                        "4a777d6188d74189cbfe1273794f4d58efd911e8"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_le; auto.",
                        "VernacExtend",
                        "d017baccaa3e845b45c844f99bbdb4323e61e287"
                    ]
                },
                {
                    "command": [
                        "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "ca25d13be637793ac704146734cf3ba4dd07daf8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_minus; auto with real.",
                        "VernacExtend",
                        "6a268a7df2d7d059d7c6c6f76cea24d0e428e520"
                    ]
                },
                {
                    "command": [
                        "right; intros q H'2.",
                        "VernacExtend",
                        "0787a894f5ce24eac84b7317bcf8e298c4c7ad6b"
                    ]
                },
                {
                    "command": [
                        "apply ClosestMaxEq with (r := r) (min := min); auto.",
                        "VernacExtend",
                        "02078eb9db3f4f790c973ac6a436957d12d63095"
                    ]
                },
                {
                    "command": [
                        "replace (2%nat * r)%R with (r + r)%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "83ecce6da6865892ebe230d1d15b57de213d6046"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt; auto.",
                        "VernacExtend",
                        "a0304f9b9cb41e67d243d1382624f23af55306a0"
                    ]
                },
                {
                    "command": [
                        "replace (min + max - (r + r))%R with (max - r - (r - min))%R; [ idtac | simpl in |- *; ring ].",
                        "VernacExtend",
                        "ca25d13be637793ac704146734cf3ba4dd07daf8"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus; auto.",
                        "VernacExtend",
                        "d5ab00fb2edecc3e229393227315c23e17b16e33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestCompatible",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "intros r1 r2 p q H' H'0 H'1 H'2; red in |- *.",
                        "VernacExtend",
                        "529caa2a2ea3cbcdb194dde5d685d9d233c897b6"
                    ]
                },
                {
                    "command": [
                        "inversion H'.",
                        "VernacExtend",
                        "7eb2f09d685a0dbd7e1e32975a04fde5b8f610b0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestCompatible r1 r2 p q); auto.",
                        "VernacExtend",
                        "f9310a09ae5b5d29071c92fe19f90721e3441520"
                    ]
                },
                {
                    "command": [
                        "case H0; intros H1.",
                        "VernacExtend",
                        "f0305220c19ceb30cc1a74f4eb8d05f7d2328947"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply FNevenEq with (f1 := p); auto.",
                        "VernacExtend",
                        "8c83bf81708d28532ce1def6e384087bf96e7b3c"
                    ]
                },
                {
                    "command": [
                        "case H; auto.",
                        "VernacExtend",
                        "0b39ac03ea00c6d2293da9883a569db11f432ebd"
                    ]
                },
                {
                    "command": [
                        "right; intros q0 H'3.",
                        "VernacExtend",
                        "36d362f3b6fe88d9f0db331e64115464b88b0fb8"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite <- H'1; auto.",
                        "VernacExtend",
                        "cd41d623d3bc0ffba69b1f5bd53c71e487dfee5c"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestCompatible r2 r1 q0 q0); auto.",
                        "VernacExtend",
                        "2eed3dd2cba74d62b897dd642ea6047a295e7ec3"
                    ]
                },
                {
                    "command": [
                        "case H'3; auto.",
                        "VernacExtend",
                        "4e688649835e97868d2f5fb4c962dea3a626a5dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestMinOrMax",
            "line_nb": 473,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros r p H'; case (ClosestMinOrMax r p); auto.",
                        "VernacExtend",
                        "34d818c7d94b372daa85e0b3c613fd443b982b56"
                    ]
                },
                {
                    "command": [
                        "case H'; auto.",
                        "VernacExtend",
                        "ebc5b3ac68f03e20b8a194319f607aaad1bf60b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestMonotone",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "red in |- *; simpl in |- *; intros p q p' q' H' H'0 H'1.",
                        "VernacExtend",
                        "abb459e1c1ba277c05e8d55eb82df6c88f5ac4f2"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestMonotone p q); auto; case H'0; case H'1; auto.",
                        "VernacExtend",
                        "fecad7d6ac3c84eb36b229a301222fa04afffaf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestRoundedModeP",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "red in |- *; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "exact EvenClosestTotal.",
                        "VernacExtend",
                        "67962537fe1a91e210e90f8d5b8c6ab66efa5670"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact EvenClosestCompatible.",
                        "VernacExtend",
                        "c2071f21b20d85814da27d3948c6265fb043143e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact EvenClosestMinOrMax.",
                        "VernacExtend",
                        "a6716c39e395f9ecab0bc7ffa0e68381d43d675d"
                    ]
                },
                {
                    "command": [
                        "exact EvenClosestMonotone.",
                        "VernacExtend",
                        "061a3eeeec682678b2708865b1936d7cc2190de4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestUniqueP",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "intros r p q H' H'0.",
                        "VernacExtend",
                        "3d96de46becba4bee1ccd2381681247033d89019"
                    ]
                },
                {
                    "command": [
                        "inversion H'; inversion H'0; case H0; case H2; auto.",
                        "VernacExtend",
                        "9c0009f0e03789d7b3019abe556c26ce1ffab511"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; case (EvenClosestMinOrMax r p); case (EvenClosestMinOrMax r q); auto.",
                        "VernacExtend",
                        "ba2f703a9e200073a5eca325348f45034fedbb30"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4; apply (MinUniqueP b radix r); auto.",
                        "VernacExtend",
                        "b4fc0bee4f53774455207972f691b31b642145b2"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4; case (Req_dec p q); auto; intros H'5.",
                        "VernacExtend",
                        "59eb6b9c2b7d7663427b6bc9efb264dd1a68cac1"
                    ]
                },
                {
                    "command": [
                        "Contradict H'1; auto.",
                        "VernacExtend",
                        "dff3473e98799e57d49b4c366d5da43c6b9d51d6"
                    ]
                },
                {
                    "command": [
                        "apply FnOddNEven; auto.",
                        "VernacExtend",
                        "6819e62627490a6e2a101d6684616654514327ec"
                    ]
                },
                {
                    "command": [
                        "apply FNoddEq with (f1 := FNSucc b radix precision p); auto.",
                        "VernacExtend",
                        "3b51648554c2a2fd93e624c620e8580b5a8709f1"
                    ]
                },
                {
                    "command": [
                        "apply FcanonicBound with (radix := radix); auto.",
                        "VernacExtend",
                        "7ff66c1c77430eeda2d6b2110bd18def44854cf6"
                    ]
                },
                {
                    "command": [
                        "apply FNSuccCanonic; auto with arith.",
                        "VernacExtend",
                        "40f8d627578186d75229997f5f9da6b0af120700"
                    ]
                },
                {
                    "command": [
                        "case H'4; auto.",
                        "VernacExtend",
                        "2c012230b4479c3ceef20d28ff227694c215b18f"
                    ]
                },
                {
                    "command": [
                        "case H'3; auto.",
                        "VernacExtend",
                        "4e688649835e97868d2f5fb4c962dea3a626a5dd"
                    ]
                },
                {
                    "command": [
                        "apply (MaxUniqueP b radix r); auto.",
                        "VernacExtend",
                        "e7f9fe59643536edf68ff447c98287708dda6c53"
                    ]
                },
                {
                    "command": [
                        "apply MinMax; auto with arith.",
                        "VernacExtend",
                        "d46275408a904beb31a823f653bce79ac8edf3f7"
                    ]
                },
                {
                    "command": [
                        "Contradict H'5; auto.",
                        "VernacExtend",
                        "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
                    ]
                },
                {
                    "command": [
                        "apply (RoundedProjector b radix _ (MaxRoundedModeP _ _ _ radixMoreThanOne precisionGreaterThanOne pGivesBound)); auto.",
                        "VernacExtend",
                        "80af9fccbf25f4c0c08a4acf5661c8b7e5783b1c"
                    ]
                },
                {
                    "command": [
                        "case H'4; auto.",
                        "VernacExtend",
                        "2c012230b4479c3ceef20d28ff227694c215b18f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5; auto.",
                        "VernacExtend",
                        "f8b62f99b3718e60bd969c76931397a10bee1bff"
                    ]
                },
                {
                    "command": [
                        "apply FNevenSuc; auto.",
                        "VernacExtend",
                        "260e8b652312b5296eb97a6ff2c395e62a28c37e"
                    ]
                },
                {
                    "command": [
                        "case H'4; auto.",
                        "VernacExtend",
                        "2c012230b4479c3ceef20d28ff227694c215b18f"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4; case (Req_dec p q); auto; intros H'5.",
                        "VernacExtend",
                        "59eb6b9c2b7d7663427b6bc9efb264dd1a68cac1"
                    ]
                },
                {
                    "command": [
                        "Contradict H'2; auto.",
                        "VernacExtend",
                        "c1c75b2f2ec419eb0e513f205e7b57cfed0b26e2"
                    ]
                },
                {
                    "command": [
                        "apply FnOddNEven; auto.",
                        "VernacExtend",
                        "6819e62627490a6e2a101d6684616654514327ec"
                    ]
                },
                {
                    "command": [
                        "apply FNoddEq with (f1 := FNSucc b radix precision q); auto.",
                        "VernacExtend",
                        "882112c84768dc449f258295ec9c8cce5b773613"
                    ]
                },
                {
                    "command": [
                        "apply FcanonicBound with (radix := radix); auto.",
                        "VernacExtend",
                        "7ff66c1c77430eeda2d6b2110bd18def44854cf6"
                    ]
                },
                {
                    "command": [
                        "apply FNSuccCanonic; auto with arith.",
                        "VernacExtend",
                        "40f8d627578186d75229997f5f9da6b0af120700"
                    ]
                },
                {
                    "command": [
                        "case H'3; auto.",
                        "VernacExtend",
                        "4e688649835e97868d2f5fb4c962dea3a626a5dd"
                    ]
                },
                {
                    "command": [
                        "case H'4; auto.",
                        "VernacExtend",
                        "2c012230b4479c3ceef20d28ff227694c215b18f"
                    ]
                },
                {
                    "command": [
                        "apply (MaxUniqueP b radix r); auto.",
                        "VernacExtend",
                        "e7f9fe59643536edf68ff447c98287708dda6c53"
                    ]
                },
                {
                    "command": [
                        "apply MinMax; auto with arith.",
                        "VernacExtend",
                        "d46275408a904beb31a823f653bce79ac8edf3f7"
                    ]
                },
                {
                    "command": [
                        "Contradict H'5; auto.",
                        "VernacExtend",
                        "0c6ff2e8294f285c798c09f38dcb53f3a3d36101"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply (RoundedProjector b radix _ (MaxRoundedModeP _ _ _ radixMoreThanOne precisionGreaterThanOne pGivesBound)); auto.",
                        "VernacExtend",
                        "bb16a19d165b68c86d36040e7a2f59d4f51ee7eb"
                    ]
                },
                {
                    "command": [
                        "case H'3; auto.",
                        "VernacExtend",
                        "4e688649835e97868d2f5fb4c962dea3a626a5dd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5; auto.",
                        "VernacExtend",
                        "f8b62f99b3718e60bd969c76931397a10bee1bff"
                    ]
                },
                {
                    "command": [
                        "apply FNevenSuc; auto.",
                        "VernacExtend",
                        "260e8b652312b5296eb97a6ff2c395e62a28c37e"
                    ]
                },
                {
                    "command": [
                        "case H'3; auto.",
                        "VernacExtend",
                        "4e688649835e97868d2f5fb4c962dea3a626a5dd"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4; apply (MaxUniqueP b radix r); auto.",
                        "VernacExtend",
                        "a0c3f7c2256c00f5a783d732db3dc57983aef135"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2; apply sym_eq; auto.",
                        "VernacExtend",
                        "98eadda5414a20be5ab9485897a8261cf927edcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ClosestSymmetric",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros r p H'; case H'; clear H'.",
                        "VernacExtend",
                        "c17e8e736f7c98331ffbf45cb9e68346a074fd86"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; split.",
                        "VernacExtend",
                        "d856f0f9a8133b1a803c16f9239844fb3c1d4d23"
                    ]
                },
                {
                    "command": [
                        "apply oppBounded; auto.",
                        "VernacExtend",
                        "6e68d2122eeea082741ca4e279707ce0511c71ef"
                    ]
                },
                {
                    "command": [
                        "intros f H'1.",
                        "VernacExtend",
                        "f8e3583c9e7a5578d2edd045a0df9a05395a7902"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (Fopp p - - r)) with (Rabs (p - r)).",
                        "VernacExtend",
                        "ae24e966d66cbf86b3b8459d315beae76bc07ea3"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (f - - r)) with (Rabs (Fopp f - r)).",
                        "VernacExtend",
                        "a74a76149efdaa2d50c96e6ef2b844d035709ea4"
                    ]
                },
                {
                    "command": [
                        "apply H'0; auto.",
                        "VernacExtend",
                        "ffa4a067303ddbc105bbb0d597fd5de27c3e7304"
                    ]
                },
                {
                    "command": [
                        "apply oppBounded; auto.",
                        "VernacExtend",
                        "6e68d2122eeea082741ca4e279707ce0511c71ef"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite Fopp_correct.",
                        "VernacExtend",
                        "c3c7ad16a924a974f39fb2584a800e7199b0444e"
                    ]
                },
                {
                    "command": [
                        "pattern r at 1 in |- *; replace r with (- - r)%R; [ idtac | ring ].",
                        "VernacExtend",
                        "77ed82571132b524794538841940a5dacf4a7995"
                    ]
                },
                {
                    "command": [
                        "replace (- FtoR radix f - - - r)%R with (- (FtoR radix f - - r))%R; [ idtac | ring ].",
                        "VernacExtend",
                        "9d80c3699deba5b3a1af8be33c0497a83ec10c70"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_Ropp; auto.",
                        "VernacExtend",
                        "04cd1166329a897bacf096aaa392a513e5db7a01"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; rewrite Fopp_correct.",
                        "VernacExtend",
                        "c3c7ad16a924a974f39fb2584a800e7199b0444e"
                    ]
                },
                {
                    "command": [
                        "replace (- FtoR radix p - - r)%R with (- (FtoR radix p - r))%R; [ idtac | ring ].",
                        "VernacExtend",
                        "86444705a664e8ef19fa59ff8b60b4a29b6feab3"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq; apply Rabs_Ropp.",
                        "VernacExtend",
                        "5c3e49574d9bca3ec6f8e3ca0ef5af819f34c0ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EvenClosestSymmetric",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "red in |- *; intros r p H'; case H'; clear H'.",
                        "VernacExtend",
                        "c17e8e736f7c98331ffbf45cb9e68346a074fd86"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; case H'0; clear H'0; intros H'0.",
                        "VernacExtend",
                        "d122f919b7ada563e0e1131bbaeecc0f38cf389d"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestSymmetric r p); auto.",
                        "VernacExtend",
                        "6fe36cf6cea68615f0a1a13d4b129f8a0433af01"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "apply FNevenFop; auto.",
                        "VernacExtend",
                        "c6249818b7ff06579d62e3419d95c2869f780e85"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestSymmetric r p); auto.",
                        "VernacExtend",
                        "6fe36cf6cea68615f0a1a13d4b129f8a0433af01"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros q H'1.",
                        "VernacExtend",
                        "7656509c9a420554216c21729f145bdc1ac923a5"
                    ]
                },
                {
                    "command": [
                        "cut (Fopp q = p :>R).",
                        "VernacExtend",
                        "c0224e0b730ac5fba4867176d0847a2f432be0e6"
                    ]
                },
                {
                    "command": [
                        "intros H'2; unfold FtoRradix in |- *; rewrite Fopp_correct.",
                        "VernacExtend",
                        "1ea0b47c1d7e3592d84d3dbebac681f4033e9b63"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in H'2; rewrite <- H'2.",
                        "VernacExtend",
                        "10be3913889391053c06602bb3beb4fa0671e78b"
                    ]
                },
                {
                    "command": [
                        "rewrite Fopp_correct; ring.",
                        "VernacExtend",
                        "499cdaa03b2ad639b9ec3b0427d39613e2cdf58e"
                    ]
                },
                {
                    "command": [
                        "apply H'0; auto.",
                        "VernacExtend",
                        "ffa4a067303ddbc105bbb0d597fd5de27c3e7304"
                    ]
                },
                {
                    "command": [
                        "replace r with (- - r)%R; [ idtac | ring ].",
                        "VernacExtend",
                        "e1637e2adf41be7c2e7eabbee8b16a23c34b2c71"
                    ]
                },
                {
                    "command": [
                        "apply (ClosestSymmetric (- r)%R q); auto.",
                        "VernacExtend",
                        "2694f9ccbcf253eec8b4e990a3ec90232795a9b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}