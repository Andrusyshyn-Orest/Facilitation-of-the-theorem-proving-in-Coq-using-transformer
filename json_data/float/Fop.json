{
    "filename": "Fop.v",
    "coq_project": "float",
    "vernac_cmds": [
        [
            "Require Export Fcomp.",
            "VernacRequire",
            "5c6bd62ad2ced8880e09e2f727e7e50010c4315f"
        ],
        [
            "Section operations.",
            "VernacBeginSection",
            "6e4aa1410af2b013d3c994423569827266b14f3c"
        ],
        [
            "Variable radix : Z.",
            "VernacAssumption",
            "2349b77d134e0c9bb013a8bdca0020ca16fc023b"
        ],
        [
            "Let FtoRradix := FtoR radix.",
            "VernacDefinition",
            "5aa29a9595c6e9e03b28c6d232299552ec761ad7"
        ],
        [
            "Local Coercion FtoRradix : float >-> R.",
            "VernacCoercion",
            "cec6b845059d434f72dda1a67638af64e1fb0628"
        ],
        [
            "Hypothesis radixNotZero : (0 < radix)%Z.",
            "VernacAssumption",
            "eedfdc33f51f5b744440b6ef4facba68d00d5448"
        ],
        [
            "Definition Fplus (x y : float) := Float (Fnum x * Zpower_nat radix (Zabs_nat (Fexp x - Zmin (Fexp x) (Fexp y))) + Fnum y * Zpower_nat radix (Zabs_nat (Fexp y - Zmin (Fexp x) (Fexp y)))) (Zmin (Fexp x) (Fexp y)).",
            "VernacDefinition",
            "39989f4b3bc98cef3193af0c716c545033acaeee"
        ],
        [
            "Theorem Fplus_correct : forall x y : float, Fplus x y = (x + y)%R :>R.",
            "VernacStartTheoremProof",
            "552c4b162940129f11f7498fefc62f4c5bb48a2c"
        ],
        [
            "intros x y; unfold Fplus, Fshift, FtoRradix, FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "33a8002cf77922fc8823e1e509df3ba4a1e59028"
        ],
        [
            "rewrite plus_IZR.",
            "VernacExtend",
            "a71980692bd855cfdb80782b4f734eba75fada3d"
        ],
        [
            "rewrite Rmult_comm; rewrite Rmult_plus_distr_l; auto.",
            "VernacExtend",
            "087712c1421999dd887486ebfd02620544d1f2d4"
        ],
        [
            "repeat rewrite Rmult_IZR.",
            "VernacExtend",
            "698ea9ac77424dc4343f685ab3be109c5d91656d"
        ],
        [
            "repeat rewrite (Rmult_comm (Fnum x)); repeat rewrite (Rmult_comm (Fnum y)).",
            "VernacExtend",
            "5df87550dbd194f3c075d5259fc3198a3ac679fc"
        ],
        [
            "repeat rewrite Zpower_nat_Z_powerRZ; auto.",
            "VernacExtend",
            "8b9f7ae49db18c49fa09188989a50d186e45e5d4"
        ],
        [
            "repeat rewrite <- Rmult_assoc.",
            "VernacExtend",
            "645aebe2c3685a4f868a05a2372130cedecea85e"
        ],
        [
            "repeat rewrite <- powerRZ_add; auto with real zarith arith.",
            "VernacExtend",
            "f7f28a71c53387b04835e38410210905deb0c9e3"
        ],
        [
            "repeat rewrite inj_abs; auto with real zarith.",
            "VernacExtend",
            "be483a041303bfc3006869682448d69e988b7f0a"
        ],
        [
            "repeat rewrite Zplus_minus; auto.",
            "VernacExtend",
            "85948e0683f08bc010453645f4467167ef8a8c45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fopp (x : float) := Float (- Fnum x) (Fexp x).",
            "VernacDefinition",
            "873fa2e35e2d1b7590cfcb80607524239ff8d58b"
        ],
        [
            "Theorem Fopp_correct : forall x : float, Fopp x = (- x)%R :>R.",
            "VernacStartTheoremProof",
            "4a6237bab8fdd09181862bdb6bc3ff7b9fabdb0b"
        ],
        [
            "unfold FtoRradix, FtoR, Fopp in |- *; simpl in |- *.",
            "VernacExtend",
            "b1a434ccf9004ab15729633e03ac81a7b3e23a5f"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite Ropp_Ropp_IZR; auto with real.",
            "VernacExtend",
            "3d3377e70085da45a03f148096a39a5ed64dd88a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fopp_Fopp : forall p : float, Fopp (Fopp p) = p.",
            "VernacStartTheoremProof",
            "73d7fd9097db94a8c682fdd25b84d066b759b6b9"
        ],
        [
            "intros p; case p; unfold Fopp in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "151959a3a533d128cea0ee596e69579e60886ff0"
        ],
        [
            "intros; rewrite Zopp_involutive; auto.",
            "VernacExtend",
            "658c914a5335a0fe037ca57bc807fb7605c4e510"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fzero_opp : forall f : float, ~ is_Fzero f -> ~ is_Fzero (Fopp f).",
            "VernacStartTheoremProof",
            "c6f1b80f0a9c8c3d68b9ba62e64eb6b5f01149d9"
        ],
        [
            "intros f; case f; intros n e; case n; unfold is_Fzero in |- *; simpl in |- *; auto with zarith; intros; red in |- *; intros; discriminate.",
            "VernacExtend",
            "0bb90b17d887253ce670417f5e9e7ac473fa9649"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fdigit_opp : forall x : float, Fdigit radix (Fopp x) = Fdigit radix x.",
            "VernacStartTheoremProof",
            "806d5a379da17cd37ee2c442ae5514bc8e45c595"
        ],
        [
            "intros x; unfold Fopp, Fdigit in |- *; simpl in |- *.",
            "VernacExtend",
            "1ea8311b2d147f6dfdc6e1b19587bc089d083be8"
        ],
        [
            "rewrite <- (digit_abs radix (- Fnum x)).",
            "VernacExtend",
            "7aaaae0f74704a8544c8ba6df744d209c12882c6"
        ],
        [
            "rewrite <- (digit_abs radix (Fnum x)).",
            "VernacExtend",
            "0d555437f77fbd90d4650cbed85244a1f68e1f0b"
        ],
        [
            "case (Fnum x); simpl in |- *; auto.",
            "VernacExtend",
            "3cce1211977e28fb638ee96f6a1cf3baa40d02e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fabs (x : float) := Float (Zabs (Fnum x)) (Fexp x).",
            "VernacDefinition",
            "0db5e696b926d8f26c3604726c1dde3964e904d8"
        ],
        [
            "Theorem Fabs_correct1 : forall x : float, (0 <= FtoR radix x)%R -> Fabs x = x :>R.",
            "VernacStartTheoremProof",
            "92ad150b34e5a341d7a16fbe33b019a49b0c886d"
        ],
        [
            "intros x; case x; unfold FtoRradix, FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "75a175767118e7a281f262c5f97f020fa3c4daa5"
        ],
        [
            "intros Fnum1 Fexp1 H'.",
            "VernacExtend",
            "987bf5b24304b8e300ceb95b1936552d80c233b6"
        ],
        [
            "repeat rewrite <- (Rmult_comm (powerRZ radix Fexp1)); apply Rmult_eq_compat_l; auto.",
            "VernacExtend",
            "d9f69187b11cbb5903278471561132d03d3eb922"
        ],
        [
            "cut (0 <= Fnum1)%Z.",
            "VernacExtend",
            "a5117dce1dc8386d0978a5e54816bda75bc419ec"
        ],
        [
            "unfold Zabs, Zle in |- *.",
            "VernacExtend",
            "d93d5bec7cd74e8d23263196825354ff99383fd8"
        ],
        [
            "case Fnum1; simpl in |- *; auto.",
            "VernacExtend",
            "95951bdc3df325d3202baf58f2a10c62e4cec550"
        ],
        [
            "intros p H'0; case H'0; auto.",
            "VernacExtend",
            "e43104b1981218bb8eafd99440a40c2023322abf"
        ],
        [
            "apply Znot_gt_le; auto.",
            "VernacExtend",
            "037962711c81192200a305d1371e08493a1fc6e3"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "apply Rgt_not_le; auto.",
            "VernacExtend",
            "61286dd899aac2ebf8c8abffef84bd9d6a76b5ed"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "replace 0%R with (powerRZ radix Fexp1 * 0)%R; auto with real.",
            "VernacExtend",
            "0ab1a6650ef16b9575f0a24d7167b67ff847c6ae"
        ],
        [
            "red in |- *; apply Rmult_lt_compat_l; auto with real zarith.",
            "VernacExtend",
            "a9c4dc397a6fc896557812bb943c0abce7d31906"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fabs_correct2 : forall x : float, (FtoR radix x <= 0)%R -> Fabs x = (- x)%R :>R.",
            "VernacStartTheoremProof",
            "529792902618cd7a4398ae935d83353ada2167bd"
        ],
        [
            "intros x; case x; unfold FtoRradix, FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "75a175767118e7a281f262c5f97f020fa3c4daa5"
        ],
        [
            "intros Fnum1 Fexp1 H'.",
            "VernacExtend",
            "987bf5b24304b8e300ceb95b1936552d80c233b6"
        ],
        [
            "rewrite <- Ropp_mult_distr_l_reverse; repeat rewrite <- (Rmult_comm (powerRZ radix Fexp1)); apply Rmult_eq_compat_l; auto.",
            "VernacExtend",
            "f1d05b395d08944bde79b884829244d5d48c5253"
        ],
        [
            "cut (Fnum1 <= 0)%Z.",
            "VernacExtend",
            "002aa95f40d83094d2fd7c7ffef7ed2c1b9aa2bb"
        ],
        [
            "unfold Zabs, Zle in |- *.",
            "VernacExtend",
            "d93d5bec7cd74e8d23263196825354ff99383fd8"
        ],
        [
            "case Fnum1; unfold IZR; auto with real.",
            "VernacExtend",
            "4a7e38111c2a5b2d423fbd6ec937c96815a922b6"
        ],
        [
            "intros p H'0; case H'0; auto.",
            "VernacExtend",
            "e43104b1981218bb8eafd99440a40c2023322abf"
        ],
        [
            "apply Znot_gt_le.",
            "VernacExtend",
            "6a456f2f3e4f8c27d98bc6ea2a92afbf3ad279d0"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "apply Rgt_not_le; auto.",
            "VernacExtend",
            "61286dd899aac2ebf8c8abffef84bd9d6a76b5ed"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "replace 0%R with (powerRZ radix Fexp1 * 0)%R; auto with real.",
            "VernacExtend",
            "0ab1a6650ef16b9575f0a24d7167b67ff847c6ae"
        ],
        [
            "red in |- *; apply Rmult_lt_compat_l; auto with real arith.",
            "VernacExtend",
            "3de6cd13aa68da2aa4deb214917d2ebde0360b81"
        ],
        [
            "replace 0%R with (IZR 0); auto with real zarith arith.",
            "VernacExtend",
            "81187781bb2e2b067b7f09c0e555441f32f29ad0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fabs_correct : forall x : float, Fabs x = Rabs x :>R.",
            "VernacStartTheoremProof",
            "4d7c875e8b18226769de39dfbba2ef21c3ccd211"
        ],
        [
            "intros x; unfold Rabs in |- *.",
            "VernacExtend",
            "de6444e06a4ea6146f01435cd9f66d9f1b6decc2"
        ],
        [
            "case (Rcase_abs x); intros H1.",
            "VernacExtend",
            "7234ee65d42f017b9f8954ddd79d9cd72bb60d1c"
        ],
        [
            "unfold FtoRradix in |- *; apply Fabs_correct2; auto with arith.",
            "VernacExtend",
            "a746388506a69e1dae028ba60dcb81b9b1138ffb"
        ],
        [
            "apply Rlt_le; auto.",
            "VernacExtend",
            "4003e3e1c449ee89cad9e953d0a562db8235648c"
        ],
        [
            "unfold FtoRradix in |- *; apply Fabs_correct1; auto with arith.",
            "VernacExtend",
            "084b486a909b7ce32b8c5a6af0ef3c5d742e8c53"
        ],
        [
            "apply Rge_le; auto.",
            "VernacExtend",
            "58bc4e8d614d8148ad7c0c5eb8a3368c1f673145"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem RleFexpFabs : forall p : float, p <> 0%R :>R -> (Float 1%nat (Fexp p) <= Fabs p)%R.",
            "VernacStartTheoremProof",
            "02e9c5acd412e7ed81a625fa11b411bc9c1c2f83"
        ],
        [
            "intros p H'.",
            "VernacExtend",
            "bb6abbd0a5bb134f5276d7928176425ceae09e54"
        ],
        [
            "unfold FtoRradix, FtoR, Fabs in |- *; simpl in |- *.",
            "VernacExtend",
            "5df163bedee36064822244cf313969a2070b9c6b"
        ],
        [
            "apply Rmult_le_compat_r; auto with real arith.",
            "VernacExtend",
            "118f6d965446d8abadb72c8e021be24c227d51f0"
        ],
        [
            "rewrite Zabs_absolu.",
            "VernacExtend",
            "aee34af9b92188e13050a86635be4fe3ff11c605"
        ],
        [
            "replace 1%R with (INR 1); auto with real.",
            "VernacExtend",
            "a9f50593cb67a6e04803fabf1b642d73428d43f5"
        ],
        [
            "repeat rewrite <- INR_IZR_INZ; apply Rle_INR; auto.",
            "VernacExtend",
            "ce4811351bd4f774001d49a7af7aa5ceb23f35de"
        ],
        [
            "cut (Zabs_nat (Fnum p) <> 0); auto with zarith.",
            "VernacExtend",
            "c0d16604aae24a9e2a52bad2b2154a9d628a9ea6"
        ],
        [
            "Contradict H'.",
            "VernacExtend",
            "51e379021851364901d3bf5547eb0c13174b0ebc"
        ],
        [
            "unfold FtoRradix, FtoR in |- *; simpl in |- *.",
            "VernacExtend",
            "85a3da1582165d92ceb7faef707de88822bccf1a"
        ],
        [
            "replace (Fnum p) with 0%Z; try (simpl;ring).",
            "VernacExtend",
            "4c7aa26aa8a691ca850f66dd38b04a2e74b2684b"
        ],
        [
            "generalize H'; case (Fnum p); simpl in |- *; auto with zarith arith; intros p0 H'3; Contradict H'3; auto with zarith arith.",
            "VernacExtend",
            "008883cbbb20814e9ef08ab59694481e3734cccd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fabs_Fzero : forall x : float, ~ is_Fzero x -> ~ is_Fzero (Fabs x).",
            "VernacStartTheoremProof",
            "0e6d07017b51c03d859df3e90793fd36010c0b4f"
        ],
        [
            "intros x; case x; unfold is_Fzero in |- *; simpl in |- *.",
            "VernacExtend",
            "80f67d4d22112a2de5d922a12521950b95162834"
        ],
        [
            "intros n m; case n; simpl in |- *; auto with zarith; intros; red in |- *; discriminate.",
            "VernacExtend",
            "42b6bca4afc71fd139f9bf903d82b011f090fa50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Fabs_Fzero: float.",
            "VernacHints",
            "ef742cafb5ab67554fac03558a2c4e0636e5b078"
        ],
        [
            "Theorem Fdigit_abs : forall x : float, Fdigit radix (Fabs x) = Fdigit radix x.",
            "VernacStartTheoremProof",
            "f19d0c56c4cfab9a2baac5aff7178cb6fa4db659"
        ],
        [
            "intros x; unfold Fabs, Fdigit in |- *; simpl in |- *.",
            "VernacExtend",
            "d3419d47e826f3ed495ceaee95a48ebe3e0d7ef2"
        ],
        [
            "case (Fnum x); auto.",
            "VernacExtend",
            "8f031b1deee203e76ae9c5c58ef1c08689bff5e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fminus (x y : float) := Fplus x (Fopp y).",
            "VernacDefinition",
            "e2d709f92468a6cffce7e49410e4e45966ca1855"
        ],
        [
            "Theorem Fminus_correct : forall x y : float, Fminus x y = (x - y)%R :>R.",
            "VernacStartTheoremProof",
            "100df6bb20b743f6f4ac0da60d418ebfc2d3dded"
        ],
        [
            "intros x y; unfold Fminus in |- *.",
            "VernacExtend",
            "4203ac962be5512fee9befc3b2e32a09d919e64e"
        ],
        [
            "rewrite Fplus_correct.",
            "VernacExtend",
            "b21874cbcd8dc825a1f39bcdcbf731b245b74bf8"
        ],
        [
            "rewrite Fopp_correct; auto.",
            "VernacExtend",
            "eeabcd66a21fb7fbd56662f87b0ad8c6385bf543"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fopp_Fminus : forall p q : float, Fopp (Fminus p q) = Fminus q p.",
            "VernacStartTheoremProof",
            "a716e1d9d9d4ef12cadfe542400ec608a5a17f6c"
        ],
        [
            "intros p q; case p; case q; unfold Fopp, Fminus, Fplus in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "5c7cb782c7a86c35104bd762d5496e69b7ff7935"
        ],
        [
            "intros; apply floatEq; simpl in |- *; repeat rewrite (Zmin_sym Fexp0 Fexp); repeat rewrite Zopp_mult_distr_l_reverse; auto with zarith.",
            "VernacExtend",
            "fe0515dfcce44f13692b4e1850088058cb5e4402"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Fopp_Fminus_dist : forall p q : float, Fopp (Fminus p q) = Fminus (Fopp p) (Fopp q).",
            "VernacStartTheoremProof",
            "1f537c3d582ded649ec5372c5e81a53e5768b361"
        ],
        [
            "intros p q; case p; case q; unfold Fopp, Fminus, Fplus in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "5c7cb782c7a86c35104bd762d5496e69b7ff7935"
        ],
        [
            "intros; apply floatEq; simpl in |- *; repeat rewrite (Zmin_sym Fexp0 Fexp); repeat rewrite Zopp_mult_distr_l_reverse; auto with zarith.",
            "VernacExtend",
            "fe0515dfcce44f13692b4e1850088058cb5e4402"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minusSameExp : forall x y : float, Fexp x = Fexp y -> Fminus x y = Float (Fnum x - Fnum y) (Fexp x).",
            "VernacStartTheoremProof",
            "f405953d3c6eea3116cf278d5dea51399282e7b8"
        ],
        [
            "intros x y; case x; case y; unfold Fminus, Fplus, Fopp in |- *; simpl in |- *.",
            "VernacExtend",
            "3ea14850ba7f8b36b0166ddd96a3981792602ced"
        ],
        [
            "intros Fnum1 Fexp1 Fnum2 Fexp2 H'; rewrite <- H'.",
            "VernacExtend",
            "ea3c99704194eeb6ee6329f4640578976fbfccc3"
        ],
        [
            "repeat rewrite Zmin_n_n.",
            "VernacExtend",
            "8d12b776ac0619d2b3fa34d6e17ddeea6866575d"
        ],
        [
            "apply floatEq; simpl in |- *; auto.",
            "VernacExtend",
            "9ad5cb1a5d35d3f7bd471e70037b9d2869fdc0ef"
        ],
        [
            "replace (Zabs_nat (Fexp2 - Fexp2)) with 0; auto with zarith arith.",
            "VernacExtend",
            "f6029c5f43e34e4c9e8b56430bf9b5e36fcb277d"
        ],
        [
            "replace (Zpower_nat radix 0) with (Z_of_nat 1); simpl in |- *; auto with zarith arith.",
            "VernacExtend",
            "642b3355fe67a0923ce0acec39cfda68277368da"
        ],
        [
            "replace (Fexp2 - Fexp2)%Z with 0%Z; simpl in |- *; auto with zarith arith.",
            "VernacExtend",
            "c55db6b269ad6e07a194a06c1d2068b05e481802"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fmult (x y : float) := Float (Fnum x * Fnum y) (Fexp x + Fexp y).",
            "VernacDefinition",
            "f6ee647fb6ff76f6954d5b6c981c8bcb90f54241"
        ],
        [
            "Definition Fmult_correct : forall x y : float, Fmult x y = (x * y)%R :>R.",
            "VernacDefinition",
            "8c0d928ffcc18a861fef69252cfdab0d90d488a3"
        ],
        [
            "intros x y; unfold FtoRradix, FtoR, Fmult in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "3c925b7ed1474382f3a176acbc278152387c846c"
        ],
        [
            "rewrite powerRZ_add; auto with real zarith.",
            "VernacExtend",
            "464b630a39cda032263051881ad80da2fc959c8e"
        ],
        [
            "repeat rewrite Rmult_IZR.",
            "VernacExtend",
            "698ea9ac77424dc4343f685ab3be109c5d91656d"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "repeat rewrite (Rmult_comm (Fnum y)).",
            "VernacExtend",
            "0d792e72a3eba3916baaaf43d70bbcb9ed648ddc"
        ],
        [
            "repeat rewrite <- Rmult_assoc.",
            "VernacExtend",
            "645aebe2c3685a4f868a05a2372130cedecea85e"
        ],
        [
            "repeat rewrite Zmult_assoc_reverse; auto.",
            "VernacExtend",
            "3cdc357190f90a55fcf5623e000139bf246fb295"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem oneZplus : forall x y : Z, Float 1%nat (x + y) = Fmult (Float 1%nat x) (Float 1%nat y).",
            "VernacStartTheoremProof",
            "81c4023390bc918ebb3e9534daa5ab77b9c28310"
        ],
        [
            "intros x y; unfold Fmult in |- *; auto.",
            "VernacExtend",
            "a477861d5c984703c49269ad0cf1ff981789595e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End operations.",
            "VernacEndSegment",
            "4efab57c716df2f81cad56eabc95088e320f660c"
        ],
        [
            "Hint Resolve Fabs_Fzero: float.",
            "VernacHints",
            "ef742cafb5ab67554fac03558a2c4e0636e5b078"
        ],
        [
            "Hint Resolve Fzero_opp: float.",
            "VernacHints",
            "158de6ccecf46c1179fae2ee5a6fb52d17084d6a"
        ]
    ],
    "proofs": [
        {
            "name": "Fplus_correct",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold Fplus, Fshift, FtoRradix, FtoR in |- *; simpl in |- *.",
                        "VernacExtend",
                        "33a8002cf77922fc8823e1e509df3ba4a1e59028"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_IZR.",
                        "VernacExtend",
                        "a71980692bd855cfdb80782b4f734eba75fada3d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm; rewrite Rmult_plus_distr_l; auto.",
                        "VernacExtend",
                        "087712c1421999dd887486ebfd02620544d1f2d4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_IZR.",
                        "VernacExtend",
                        "698ea9ac77424dc4343f685ab3be109c5d91656d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Rmult_comm (Fnum x)); repeat rewrite (Rmult_comm (Fnum y)).",
                        "VernacExtend",
                        "5df87550dbd194f3c075d5259fc3198a3ac679fc"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zpower_nat_Z_powerRZ; auto.",
                        "VernacExtend",
                        "8b9f7ae49db18c49fa09188989a50d186e45e5d4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "645aebe2c3685a4f868a05a2372130cedecea85e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- powerRZ_add; auto with real zarith arith.",
                        "VernacExtend",
                        "f7f28a71c53387b04835e38410210905deb0c9e3"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite inj_abs; auto with real zarith.",
                        "VernacExtend",
                        "be483a041303bfc3006869682448d69e988b7f0a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zplus_minus; auto.",
                        "VernacExtend",
                        "85948e0683f08bc010453645f4467167ef8a8c45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fopp_correct",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold FtoRradix, FtoR, Fopp in |- *; simpl in |- *.",
                        "VernacExtend",
                        "b1a434ccf9004ab15729633e03ac81a7b3e23a5f"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_Ropp_IZR; auto with real.",
                        "VernacExtend",
                        "3d3377e70085da45a03f148096a39a5ed64dd88a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fopp_Fopp",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros p; case p; unfold Fopp in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "151959a3a533d128cea0ee596e69579e60886ff0"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Zopp_involutive; auto.",
                        "VernacExtend",
                        "658c914a5335a0fe037ca57bc807fb7605c4e510"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fzero_opp",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros f; case f; intros n e; case n; unfold is_Fzero in |- *; simpl in |- *; auto with zarith; intros; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "0bb90b17d887253ce670417f5e9e7ac473fa9649"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fdigit_opp",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros x; unfold Fopp, Fdigit in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1ea8311b2d147f6dfdc6e1b19587bc089d083be8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (digit_abs radix (- Fnum x)).",
                        "VernacExtend",
                        "7aaaae0f74704a8544c8ba6df744d209c12882c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (digit_abs radix (Fnum x)).",
                        "VernacExtend",
                        "0d555437f77fbd90d4650cbed85244a1f68e1f0b"
                    ]
                },
                {
                    "command": [
                        "case (Fnum x); simpl in |- *; auto.",
                        "VernacExtend",
                        "3cce1211977e28fb638ee96f6a1cf3baa40d02e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fabs_correct1",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros x; case x; unfold FtoRradix, FtoR in |- *; simpl in |- *.",
                        "VernacExtend",
                        "75a175767118e7a281f262c5f97f020fa3c4daa5"
                    ]
                },
                {
                    "command": [
                        "intros Fnum1 Fexp1 H'.",
                        "VernacExtend",
                        "987bf5b24304b8e300ceb95b1936552d80c233b6"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- (Rmult_comm (powerRZ radix Fexp1)); apply Rmult_eq_compat_l; auto.",
                        "VernacExtend",
                        "d9f69187b11cbb5903278471561132d03d3eb922"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= Fnum1)%Z.",
                        "VernacExtend",
                        "a5117dce1dc8386d0978a5e54816bda75bc419ec"
                    ]
                },
                {
                    "command": [
                        "unfold Zabs, Zle in |- *.",
                        "VernacExtend",
                        "d93d5bec7cd74e8d23263196825354ff99383fd8"
                    ]
                },
                {
                    "command": [
                        "case Fnum1; simpl in |- *; auto.",
                        "VernacExtend",
                        "95951bdc3df325d3202baf58f2a10c62e4cec550"
                    ]
                },
                {
                    "command": [
                        "intros p H'0; case H'0; auto.",
                        "VernacExtend",
                        "e43104b1981218bb8eafd99440a40c2023322abf"
                    ]
                },
                {
                    "command": [
                        "apply Znot_gt_le; auto.",
                        "VernacExtend",
                        "037962711c81192200a305d1371e08493a1fc6e3"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_le; auto.",
                        "VernacExtend",
                        "61286dd899aac2ebf8c8abffef84bd9d6a76b5ed"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (powerRZ radix Fexp1 * 0)%R; auto with real.",
                        "VernacExtend",
                        "0ab1a6650ef16b9575f0a24d7167b67ff847c6ae"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Rmult_lt_compat_l; auto with real zarith.",
                        "VernacExtend",
                        "a9c4dc397a6fc896557812bb943c0abce7d31906"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fabs_correct2",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros x; case x; unfold FtoRradix, FtoR in |- *; simpl in |- *.",
                        "VernacExtend",
                        "75a175767118e7a281f262c5f97f020fa3c4daa5"
                    ]
                },
                {
                    "command": [
                        "intros Fnum1 Fexp1 H'.",
                        "VernacExtend",
                        "987bf5b24304b8e300ceb95b1936552d80c233b6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_mult_distr_l_reverse; repeat rewrite <- (Rmult_comm (powerRZ radix Fexp1)); apply Rmult_eq_compat_l; auto.",
                        "VernacExtend",
                        "f1d05b395d08944bde79b884829244d5d48c5253"
                    ]
                },
                {
                    "command": [
                        "cut (Fnum1 <= 0)%Z.",
                        "VernacExtend",
                        "002aa95f40d83094d2fd7c7ffef7ed2c1b9aa2bb"
                    ]
                },
                {
                    "command": [
                        "unfold Zabs, Zle in |- *.",
                        "VernacExtend",
                        "d93d5bec7cd74e8d23263196825354ff99383fd8"
                    ]
                },
                {
                    "command": [
                        "case Fnum1; unfold IZR; auto with real.",
                        "VernacExtend",
                        "4a7e38111c2a5b2d423fbd6ec937c96815a922b6"
                    ]
                },
                {
                    "command": [
                        "intros p H'0; case H'0; auto.",
                        "VernacExtend",
                        "e43104b1981218bb8eafd99440a40c2023322abf"
                    ]
                },
                {
                    "command": [
                        "apply Znot_gt_le.",
                        "VernacExtend",
                        "6a456f2f3e4f8c27d98bc6ea2a92afbf3ad279d0"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_le; auto.",
                        "VernacExtend",
                        "61286dd899aac2ebf8c8abffef84bd9d6a76b5ed"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (powerRZ radix Fexp1 * 0)%R; auto with real.",
                        "VernacExtend",
                        "0ab1a6650ef16b9575f0a24d7167b67ff847c6ae"
                    ]
                },
                {
                    "command": [
                        "red in |- *; apply Rmult_lt_compat_l; auto with real arith.",
                        "VernacExtend",
                        "3de6cd13aa68da2aa4deb214917d2ebde0360b81"
                    ]
                },
                {
                    "command": [
                        "replace 0%R with (IZR 0); auto with real zarith arith.",
                        "VernacExtend",
                        "81187781bb2e2b067b7f09c0e555441f32f29ad0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fabs_correct",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros x; unfold Rabs in |- *.",
                        "VernacExtend",
                        "de6444e06a4ea6146f01435cd9f66d9f1b6decc2"
                    ]
                },
                {
                    "command": [
                        "case (Rcase_abs x); intros H1.",
                        "VernacExtend",
                        "7234ee65d42f017b9f8954ddd79d9cd72bb60d1c"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; apply Fabs_correct2; auto with arith.",
                        "VernacExtend",
                        "a746388506a69e1dae028ba60dcb81b9b1138ffb"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; auto.",
                        "VernacExtend",
                        "4003e3e1c449ee89cad9e953d0a562db8235648c"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix in |- *; apply Fabs_correct1; auto with arith.",
                        "VernacExtend",
                        "084b486a909b7ce32b8c5a6af0ef3c5d742e8c53"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le; auto.",
                        "VernacExtend",
                        "58bc4e8d614d8148ad7c0c5eb8a3368c1f673145"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RleFexpFabs",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros p H'.",
                        "VernacExtend",
                        "bb6abbd0a5bb134f5276d7928176425ceae09e54"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix, FtoR, Fabs in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5df163bedee36064822244cf313969a2070b9c6b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; auto with real arith.",
                        "VernacExtend",
                        "118f6d965446d8abadb72c8e021be24c227d51f0"
                    ]
                },
                {
                    "command": [
                        "rewrite Zabs_absolu.",
                        "VernacExtend",
                        "aee34af9b92188e13050a86635be4fe3ff11c605"
                    ]
                },
                {
                    "command": [
                        "replace 1%R with (INR 1); auto with real.",
                        "VernacExtend",
                        "a9f50593cb67a6e04803fabf1b642d73428d43f5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- INR_IZR_INZ; apply Rle_INR; auto.",
                        "VernacExtend",
                        "ce4811351bd4f774001d49a7af7aa5ceb23f35de"
                    ]
                },
                {
                    "command": [
                        "cut (Zabs_nat (Fnum p) <> 0); auto with zarith.",
                        "VernacExtend",
                        "c0d16604aae24a9e2a52bad2b2154a9d628a9ea6"
                    ]
                },
                {
                    "command": [
                        "Contradict H'.",
                        "VernacExtend",
                        "51e379021851364901d3bf5547eb0c13174b0ebc"
                    ]
                },
                {
                    "command": [
                        "unfold FtoRradix, FtoR in |- *; simpl in |- *.",
                        "VernacExtend",
                        "85a3da1582165d92ceb7faef707de88822bccf1a"
                    ]
                },
                {
                    "command": [
                        "replace (Fnum p) with 0%Z; try (simpl;ring).",
                        "VernacExtend",
                        "4c7aa26aa8a691ca850f66dd38b04a2e74b2684b"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case (Fnum p); simpl in |- *; auto with zarith arith; intros p0 H'3; Contradict H'3; auto with zarith arith.",
                        "VernacExtend",
                        "008883cbbb20814e9ef08ab59694481e3734cccd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fabs_Fzero",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros x; case x; unfold is_Fzero in |- *; simpl in |- *.",
                        "VernacExtend",
                        "80f67d4d22112a2de5d922a12521950b95162834"
                    ]
                },
                {
                    "command": [
                        "intros n m; case n; simpl in |- *; auto with zarith; intros; red in |- *; discriminate.",
                        "VernacExtend",
                        "42b6bca4afc71fd139f9bf903d82b011f090fa50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fdigit_abs",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros x; unfold Fabs, Fdigit in |- *; simpl in |- *.",
                        "VernacExtend",
                        "d3419d47e826f3ed495ceaee95a48ebe3e0d7ef2"
                    ]
                },
                {
                    "command": [
                        "case (Fnum x); auto.",
                        "VernacExtend",
                        "8f031b1deee203e76ae9c5c58ef1c08689bff5e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fminus_correct",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold Fminus in |- *.",
                        "VernacExtend",
                        "4203ac962be5512fee9befc3b2e32a09d919e64e"
                    ]
                },
                {
                    "command": [
                        "rewrite Fplus_correct.",
                        "VernacExtend",
                        "b21874cbcd8dc825a1f39bcdcbf731b245b74bf8"
                    ]
                },
                {
                    "command": [
                        "rewrite Fopp_correct; auto.",
                        "VernacExtend",
                        "eeabcd66a21fb7fbd56662f87b0ad8c6385bf543"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fopp_Fminus",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros p q; case p; case q; unfold Fopp, Fminus, Fplus in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "5c7cb782c7a86c35104bd762d5496e69b7ff7935"
                    ]
                },
                {
                    "command": [
                        "intros; apply floatEq; simpl in |- *; repeat rewrite (Zmin_sym Fexp0 Fexp); repeat rewrite Zopp_mult_distr_l_reverse; auto with zarith.",
                        "VernacExtend",
                        "fe0515dfcce44f13692b4e1850088058cb5e4402"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fopp_Fminus_dist",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros p q; case p; case q; unfold Fopp, Fminus, Fplus in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "5c7cb782c7a86c35104bd762d5496e69b7ff7935"
                    ]
                },
                {
                    "command": [
                        "intros; apply floatEq; simpl in |- *; repeat rewrite (Zmin_sym Fexp0 Fexp); repeat rewrite Zopp_mult_distr_l_reverse; auto with zarith.",
                        "VernacExtend",
                        "fe0515dfcce44f13692b4e1850088058cb5e4402"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minusSameExp",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros x y; case x; case y; unfold Fminus, Fplus, Fopp in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3ea14850ba7f8b36b0166ddd96a3981792602ced"
                    ]
                },
                {
                    "command": [
                        "intros Fnum1 Fexp1 Fnum2 Fexp2 H'; rewrite <- H'.",
                        "VernacExtend",
                        "ea3c99704194eeb6ee6329f4640578976fbfccc3"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zmin_n_n.",
                        "VernacExtend",
                        "8d12b776ac0619d2b3fa34d6e17ddeea6866575d"
                    ]
                },
                {
                    "command": [
                        "apply floatEq; simpl in |- *; auto.",
                        "VernacExtend",
                        "9ad5cb1a5d35d3f7bd471e70037b9d2869fdc0ef"
                    ]
                },
                {
                    "command": [
                        "replace (Zabs_nat (Fexp2 - Fexp2)) with 0; auto with zarith arith.",
                        "VernacExtend",
                        "f6029c5f43e34e4c9e8b56430bf9b5e36fcb277d"
                    ]
                },
                {
                    "command": [
                        "replace (Zpower_nat radix 0) with (Z_of_nat 1); simpl in |- *; auto with zarith arith.",
                        "VernacExtend",
                        "642b3355fe67a0923ce0acec39cfda68277368da"
                    ]
                },
                {
                    "command": [
                        "replace (Fexp2 - Fexp2)%Z with 0%Z; simpl in |- *; auto with zarith arith.",
                        "VernacExtend",
                        "c55db6b269ad6e07a194a06c1d2068b05e481802"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fmult_correct",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold FtoRradix, FtoR, Fmult in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "3c925b7ed1474382f3a176acbc278152387c846c"
                    ]
                },
                {
                    "command": [
                        "rewrite powerRZ_add; auto with real zarith.",
                        "VernacExtend",
                        "464b630a39cda032263051881ad80da2fc959c8e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_IZR.",
                        "VernacExtend",
                        "698ea9ac77424dc4343f685ab3be109c5d91656d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Rmult_comm (Fnum y)).",
                        "VernacExtend",
                        "0d792e72a3eba3916baaaf43d70bbcb9ed648ddc"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "645aebe2c3685a4f868a05a2372130cedecea85e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Zmult_assoc_reverse; auto.",
                        "VernacExtend",
                        "3cdc357190f90a55fcf5623e000139bf246fb295"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "oneZplus",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold Fmult in |- *; auto.",
                        "VernacExtend",
                        "a477861d5c984703c49269ad0cf1ff981789595e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}