{
    "filename": "theories/NLib.v",
    "coq_project": "bbv",
    "vernac_cmds": [
        [
            "Require Import Coq.NArith.NArith.",
            "VernacRequire",
            "a173128ff04ac2dc4506c66a56f70327ae014e9a"
        ],
        [
            "Local Open Scope N_scope.",
            "VernacOpenCloseScope",
            "948c9d342bb5e26fec53fb3e43992b6829a90599"
        ],
        [
            "Definition Nlt_dec: forall (l r : N), {l < r} + {l >= r}.",
            "VernacDefinition",
            "97be28181b2cc88532414008f47dd0acdf78fdf2"
        ],
        [
            "refine (fun l r => match N.compare l r as k return N.compare l r = k -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
            "VernacExtend",
            "695249e9deab7fce9ec8792fe927186144246b5e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "Nlt_dec",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "refine (fun l r => match N.compare l r as k return N.compare l r = k -> _ with | Lt => fun pf => left _ _ | _ => fun pf => right _ _ end (refl_equal _)); abstract congruence.",
                        "VernacExtend",
                        "695249e9deab7fce9ec8792fe927186144246b5e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}